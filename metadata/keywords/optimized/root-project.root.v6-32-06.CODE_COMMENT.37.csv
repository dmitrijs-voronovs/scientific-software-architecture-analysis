quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Testability,//_______________________________________________________________________; /**; * Contructor to create a two class classifier without output file.; * \param dataloader TMVA::DataLoader object with the data to train/test.; * \param options string extra options.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:215,test,test,215,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,1,['test'],['test']
Testability,//_______________________________________________________________________; /**; * Contructor to create a two class classifier.; * \param dataloader TMVA::DataLoader object with the data to train/test.; * \param file TFile object to save the results; * \param options string extra options.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:195,test,test,195,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,1,['test'],['test']
Testability,//_______________________________________________________________________; /**; * Lets perform test an specific ml method given the method type in enum TMVA::Types::EMVA.; * \param method TMVA::Types::EMVA type.; * \param methodtitle method title.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:95,test,test,95,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,1,['test'],['test']
Testability,//_______________________________________________________________________; /**; * Lets perform test an specific ml method.; * \param methodname name of the method.; * \param methodtitle method title.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:95,test,test,95,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,1,['test'],['test']
Testability,"//_______________________________________________________________________; /**; * Method to get ROC-Integral value from mvas.; * \param iClass category, default 0 then signal; * \param type train/test tree, default test.; * \return Double_t with the ROC-Integral value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:196,test,test,196,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['test'],['test']
Testability,"//_______________________________________________________________________; /**; * Method to get TGraph object with the ROC curve.; * \param iClass category, default 0 then signal; * \param type train/test tree, default test.; * \return TGraph object.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:200,test,test,200,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['test'],['test']
Testability,"//_______________________________________________________________________; /**; * Method to get TMVA::ROCCurve Object.; * \param iClass category, default 0 then signal; * \param type train/test tree, default test.; * \return TMVA::ROCCurve object.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:189,test,test,189,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['test'],['test']
Testability,"//_______________________________________________________________________; /**; * Method to get TMVA::ROCCurve Object.; * \param method TMVA::MethodBase object; * \param iClass category, default 0 then signal; * \param type train/test tree, default test.; * \return TMVA::ROCCurve object.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:230,test,test,230,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['test'],['test']
Testability,"//_______________________________________________________________________; /**; * Method to get TMVA::ROCCurve Object.; * \param methodname ml method name.; * \param methodtitle ml method title.; * \param iClass category, default 0 then signal; * \param type train/test tree, default test.; * \return TMVA::ROCCurve object.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:265,test,test,265,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['test'],['test']
Testability,//_______________________________________________________________________; /**; * Method to perform Train/Test over all ml method booked.; * If the option Jobs > 1 can do it in parallel with MultiProc.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:106,Test,Test,106,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,1,['Test'],['Test']
Testability,//_______________________________________________________________________; /**; * Perform test evaluation in all booked methods.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:90,test,test,90,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,1,['test'],['test']
Testability,//_______________________________________________________________________; /**; * method to save Train/Test information into the output file.; * \param fDataSetInfo TMVA::DataSetInfo object reference; * \param fAnalysisType Types::kMulticlass and Types::kRegression; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Envelope.cxx:103,Test,Test,103,tmva/tmva/src/Envelope.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Envelope.cxx,1,['Test'],['Test']
Testability,"//________________________________________________________________________; //; // Logical node with informatioon about class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/inc/TStructNode.h:83,Log,Logical,83,graf3d/gviz3d/inc/TStructNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/inc/TStructNode.h,1,['Log'],['Logical']
Testability,"//__________________________________________________________________________; //; //testing STL vector of pointers to THit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx:84,test,testing,84,test/bench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx,1,['test'],['testing']
Testability,"//__________________________________________________________________________; //; //testing STL vector of pointers to THit (NOSPLIT)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx:84,test,testing,84,test/bench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx,1,['test'],['testing']
Testability,"//___________________________________________________________________________; //; //testing TClonesArray of TObjHit deriving from THit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx:85,test,testing,85,test/bench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx,1,['test'],['testing']
Testability,"//____________________________________________________________________________; /**; Test class for class Vavilov and its subclasses. For test purposes,; the class contains a number of static function that return the tabulated; values of the Vavilov pdf given by; S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. B. List 24.6.2010. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h:85,Test,Test,85,math/mathmore/test/VavilovTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h,2,"['Test', 'test']","['Test', 'test']"
Testability,//____________________________________________________________________________; //; // Cuda Device Reference; //____________________________________________________________________________; /** TCudaDeviceReference; *; * Helper class emulating lvalue references for AFloat values that are; * physically on the device. Allows for example to assign to matrix elements.; * Note that device access through CudaDeviceReferences enforces synchronization; * with all streams and thus qualifies as performance killer. Only used for; * testing.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h:527,test,testing,527,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,1,['test'],['testing']
Testability,"//_____________________________________________________________________________; ///////////////////////////////////////////////////////////////////////////////; ///////////////////////////////////////////////////////////////////////////////; //; // PART ONE:; // PROFILE LIKELIHOOD CALCULATOR UNIT TESTS; //; ///////////////////////////////////////////////////////////////////////////////; //; // PROFILE LIKELIHOOD CALCULATOR - LIKELIHOOD INTERVAL - GAUSSIAN DISTRIBUTION; //; // Test the likelihood interval computed by the profile likelihood calculator; // on a Gaussian distribution. Reference interval limits are computed via; // analytic methods: solve equation 2*(ln(LL(xMax))-ln(LL(x)) = q, where q =; // normal_quantile_c(testSize/2, 1). In the case of a Gaussian distribution, the; // interval limits are equal to: mean +- normal_quantile_c(testSize/2, sigma/sqrt(N)).; //; // ModelConfig (implicit) :; // Observable -> x; // Parameter of Interest -> mean; // Nuisance parameter (Constant !) -> sigma; //; // Input Parameters:; // confidenceLevel -> Confidence Level of the interval we are calculating; //; // 03/2012 - Ioan Gabriel Bucur; //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats_tests.h:299,TEST,TESTS,299,roofit/roostats/test/stressRooStats_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats_tests.h,4,"['TEST', 'Test', 'test']","['TESTS', 'Test', 'testSize']"
Testability,"//______________________________________________________________________________; // Logistic Regression Layer Methods; //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/DenoisePropagation.hxx:85,Log,Logistic,85,tmva/tmva/src/DNN/Architectures/Reference/DenoisePropagation.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/DenoisePropagation.hxx,1,['Log'],['Logistic']
Testability,"//______________________________________________________________________________; // Python-side proxy objects; // =========================; //; // C++ objects are represented in Python by CPPInstances, which encapsulate; // them using either a pointer (normal), pointer-to-pointer (kIsReference set),; // or as an owned value (kIsValue set). Objects held as reference are never; // owned, otherwise the object is owned if kIsOwner is set.; //; // In addition to encapsulation, CPPInstance offers rudimentary comparison; // operators (based on pointer value and class comparisons); stubs (with lazy; // lookups) for numeric operators; and a representation that prints the C++; // pointer values, rather than the PyObject* ones as is the default.; //; // Smart pointers have the underlying type as the Python type, but store the; // pointer to the smart pointer. They carry a pointer to the Python-sode smart; // class for dereferencing to get to the actual instance pointer.; //- private helpers ----------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:583,stub,stubs,583,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['stub'],['stubs']
Testability,"//______________________________________________________________________________; // These functions are helpers for testing issues directly rather than; // relying on side effects.; // This is used for the test for ROOT-7462/ROOT-6070",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,test,testing,117,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['test'],"['test', 'testing']"
Testability,"//______________________________________________________________________________; // static method evaluating FCN; // void TBackCompFitter::FCN( int &, double * , double & f, double * x , int /* iflag */) {; // // get static instance of fitter; // TBackCompFitter * fitter = dynamic_cast<TBackCompFitter *>(TVirtualFitter::GetFitter());; // assert(fitter);; // if (fitter->fObjFunc == 0) fitter->RecreateFCN();; // assert(fitter->fObjFunc);; // f = (*(fitter.fObjFunc) )(x);; // }; ////////////////////////////////////////////////////////////////////////////////; /// Recreate a minimizer instance using the function and data; /// set objective function in minimizers function to re-create FCN from stored data object and fit options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:341,assert,assert,341,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,2,['assert'],['assert']
Testability,"//______________________________________________________________________________; ////////////////////////////////////////////////////////////////////////////////; //; // Parse C++ source or header, and extract documentation.; //; // Also handles special macros like; /* Begin_Macro(GUI, source); {; TGMainFrame* f = new TGMainFrame(0, 100, 100);; f->SetName(""testMainFrame""); // that's part of the name of the image; TGButton* b = new TGTextButton(f, ""Test Button"");; f->AddFrame(b);; f->MapSubwindows();; f->Resize(f->GetDefaultSize());. f->MapWindow();; return f; // *HIDE*; }; End_Macro */; // or multiline Latex aligned at =:; /* Begin_Latex(separator='=',align=rcl) C = d #sqrt{#frac{2}{#lambdaD}} #int^{x}_{0}cos(#frac{#pi}{2}t^{2})dt; D(x) = d End_Latex */; // even without alignment: Begin_Latex; // x=sin^2(y); // y = #sqrt{sin(x)}; // End_Latex and what about running an external macro?; /* BEGIN_MACRO(source). testmacro.C END_MACRO. and some nested stuff which doesn't work yet: */; // BEGIN_HTML; /* BEGIN_LATEX Wow,^{an}_{image}^{inside}_{a}^{html}_{block}; END_LATEX; */; // END_HTML; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:360,test,testMainFrame,360,html/src/TDocParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx,3,"['Test', 'test']","['Test', 'testMainFrame', 'testmacro']"
Testability,"//______________________________________________________________________________; //; // Gauss Activation Functions; //______________________________________________________________________________; /*! Test application of Gauss activation function to matrix. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:203,Test,Test,203,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['Test'],['Test']
Testability,"//______________________________________________________________________________; //; // Generic Gradient Descent Class; //______________________________________________________________________________; //; /*** \class TGradientDescent; *; * Generic implementation of gradient descent minimization.; *; * The TGradientDescent class implements an architecture and input data; * independent implementation of the gradient descent minimization algorithm.; *; * Provides Train(...) and TrainMomentum(...) functions that perform a complete; * training of a neural network. Those are mainly used for testing since for; * production a more fine grained control of the training process is desirable.; * This is provided by the Step(...), StepMomentum(...) and StepNesterov(...); * functions that perform a single minimization step.; *; * The main training characteristics are defined by the provided learning rate,; * the test interval, and the convergence steps required for convergence. The; * test interval defines how often the error on the validation set is computed,; * and the values with which the step counter is increased each time the; * HasConverged() member function is called. A convergence step is defined as; * a step in which the test error is NOT less than 0.999 times the current; * minimal test error that has been reached. If between two subsequent calls; * to HasConverged(Double_t) the test error has not been sufficiently reduced; * it is assumed that a number of convergence steps equal to the test interval; * has been performed.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Minimizers.h:594,test,testing,594,tmva/tmva/inc/TMVA/DNN/Minimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Minimizers.h,7,['test'],"['test', 'testing']"
Testability,"//______________________________________________________________________________; //; // Identity Activation Function; //______________________________________________________________________________; /*! Test application of identity function to matrix. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:205,Test,Test,205,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['Test'],['Test']
Testability,"//______________________________________________________________________________; //; // Loss functions.; //______________________________________________________________________________; /*! Similar to testDerivatives only that here the mathematical function is; * expected to be a matrix functional, i.e. to be mapping a matrix to a; * scalar value. The scalar value is supposed to be computed by the provided; * function object f, while the function object is just like above. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h:203,test,testDerivatives,203,tmva/tmva/test/DNN/TestDerivatives.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h,1,['test'],['testDerivatives']
Testability,"//______________________________________________________________________________; //; // ReLU Activation Function; //______________________________________________________________________________; /*! Test application of ReLU function to matrix. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:201,Test,Test,201,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['Test'],['Test']
Testability,"//______________________________________________________________________________; //; // Regularization.; //______________________________________________________________________________; /*! Test the computation of gradients for all differentiable regularization types,; * which is so far only L2 and no regularization and print the results to standard; * out */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h:192,Test,Test,192,tmva/tmva/test/DNN/TestDerivatives.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestDerivatives.h,1,['Test'],['Test']
Testability,"//______________________________________________________________________________; //; // Sigmoid Activation Function; //______________________________________________________________________________; /*! Test application of Sigmoid function to matrix. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:204,Test,Test,204,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['Test'],['Test']
Testability,"//______________________________________________________________________________; //; // Soft Sign Activation Function; //______________________________________________________________________________; /*! Test application of symmetric soft sign function to matrix. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:206,Test,Test,206,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['Test'],['Test']
Testability,"//______________________________________________________________________________; //; // Symmetric ReLU Activation Function; //______________________________________________________________________________; /*! Test application of symmetric ReLU function to matrix. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:211,Test,Test,211,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['Test'],['Test']
Testability,"//______________________________________________________________________________; //; // Tanh Activation Function; //______________________________________________________________________________; /*! Test application of tanh function to matrix. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:201,Test,Test,201,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['Test'],['Test']
Testability,"//_________________________________________________________________________________; /*Double_t testAddRowWise(); {; const size_t ntests = 10;. Double_t maximumError = 0;. for (size_t i = 0; i < ntests; i++) {; size_t m, n;; m = rand() % 50 + 1;; n = rand() % 50 + 1;. TMatrixT<Double_t> A(m,n), B(m,n), theta(n,1);; //randomMatrix(A);; randomMatrix(theta);; TCudaMatrix ACuda(A), BCuda(B), thetaCuda(theta);. TReference<Double_t>::AddRowWise(A, theta);; TCuda<false>::AddRowWise(ACuda,thetaCuda);; TMatrixT<Double_t> ARef(ACuda);. Double_t error = maximumRelativeError(A, ARef);; maximumError = std::max(error, maximumError);; }; return maximumError;; }*/; //_________________________________________________________________________________; /*Double_t testHadamard(); {; const size_t ntests = 10;; Double_t maximumError = 0;. for (size_t i = 0; i < ntests; i++) {; size_t m, n;; m = rand() % 10 + 1;; n = rand() % 10 + 1;. TMatrixT<Double_t> A(m,n), B(m,n);; randomMatrix(A);; randomMatrix(B);; TCudaMatrix ACuda(A), BCuda(B);. for (size_t j = 0; j < (size_t) A.GetNrows(); j++) {; for (size_t k = 0; k < (size_t) A.GetNcols(); k++) {; A(j,k) *= B(j,k);; }; }. TCuda<false>::Hadamard(ACuda, BCuda);; TMatrixT<Double_t> ARef(ACuda);; Double_t error = maximumRelativeError(A, ARef);; maximumError = std::max(error, maximumError);; }; return maximumError;; }*/; //_________________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx:96,test,testAddRowWise,96,tmva/tmva/test/DNN/TestCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx,2,['test'],"['testAddRowWise', 'testHadamard']"
Testability,"//_________________________________________________________________________________; /*Double_t testScaleAdd(); {; const size_t ntests = 10;; Double_t maximumError = 0;. for (size_t i = 0; i < ntests; i++) {; size_t m, n;; m = rand() % 1000 + 1;; n = rand() % 1000 + 1;. TMatrixT<Double_t> A(m,n), B(m,n);. randomMatrix(A);; randomMatrix(B);. TCudaMatrix ACuda(A);; TCudaMatrix BCuda(B);. Double_t beta = ((Double_t) rand()) / ((Double_t) RAND_MAX);; TReference<Double_t>::ScaleAdd(A, B, beta);; TCuda<false>::ScaleAdd(ACuda, BCuda, beta);. Double_t error = maximumRelativeError(A, (TMatrixT<Double_t>) ACuda);; maximumError = std::max(error, maximumError);; }; return maximumError;; }*/; //_________________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx:96,test,testScaleAdd,96,tmva/tmva/test/DNN/TestCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx,1,['test'],['testScaleAdd']
Testability,//___________________________________________________________________________________; /**; LogLikelihoodFCN class; for likelihood fits. it is template to distinguish gradient and non-gradient case. @ingroup FitMethodFunc; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/LogLikelihoodFCN.h:92,Log,LogLikelihoodFCN,92,math/mathcore/inc/Fit/LogLikelihoodFCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/LogLikelihoodFCN.h,1,['Log'],['LogLikelihoodFCN']
Testability,//___________________________________________________________________________________; /**; class evaluating the log likelihood; for binned Poisson likelihood fits; it is template to distinguish gradient and non-gradient case. @ingroup FitMethodFunc; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:113,log,log,113,math/mathcore/inc/Fit/PoissonLikelihoodFCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h,1,['log'],['log']
Testability,"//___________________________________________________________________________________; // test derivative of activation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h:90,test,test,90,tmva/tmva/test/DNN/TestActivationFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestActivationFunctions.h,1,['test'],['test']
Testability,"//_________________________________________________________________________________________________; // for binned log likelihood functions; ////////////////////////////////////////////////////////////////////////////////; /// evaluate the pdf (Poisson) contribution to the logl (return actually log of pdf); /// and its gradient (gradient of log(pdf))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx:115,log,log,115,math/mathcore/src/FitUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx,4,['log'],"['log', 'logl']"
Testability,"//______________________________________________________________________________________________________; //; // Log Likelihood functions; //_______________________________________________________________________________________________________; // utility function used by the likelihoods; // for LogLikelihood functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx:113,Log,Log,113,math/mathcore/src/FitUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx,2,['Log'],"['Log', 'LogLikelihood']"
Testability,"//a master or submaster log; //display without meaningful labels for now",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx:24,log,log,24,gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,1,['log'],['log']
Testability,"//array of columns for every spectator to create a dataframe for testing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/RMethodBase.cxx:65,test,testing,65,tmva/rmva/src/RMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/RMethodBase.cxx,1,['test'],['testing']
Testability,"//array of columns for every var to create a dataframe for testing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/RMethodBase.cxx:59,test,testing,59,tmva/rmva/src/RMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/RMethodBase.cxx,1,['test'],['testing']
Testability,"//assert ( nbins*ns == ts.size() ); ; // get ts values for nsamples = 2; // corresponding value is for m=nsamples-1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/GoFTest.cxx:2,assert,assert,2,math/mathcore/src/GoFTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/GoFTest.cxx,1,['assert'],['assert']
Testability,"//assert(!((kOffsetP + kChar) <= atype && atype <= (kOffsetP + kBool) && count == 0));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx:2,assert,assert,2,io/io/src/TStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx,1,['assert'],['assert']
Testability,//assert(!Error);,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp:2,assert,assert,2,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp,1,['assert'],['assert']
Testability,//assert(!HexagonMCInstrInfo::isBundle(Inst));,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp:2,assert,assert,2,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCTargetDesc.cpp,3,['assert'],['assert']
Testability,"//assert(!m_Dyld && ""Already initialized!"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:2,assert,assert,2,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,1,['assert'],['assert']
Testability,"//assert(!std::is_same<Arch, Architecture_t>::value);; // copy weights from a different architecture- default generic implementation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:2,assert,assert,2,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['assert'],['assert']
Testability,"//assert((NewMask & !PrevMask) == 0 && ""Must not add bits"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterPressure.cpp:2,assert,assert,2,interpreter/llvm-project/llvm/lib/CodeGen/RegisterPressure.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterPressure.cpp,1,['assert'],['assert']
Testability,"//assert(0) ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:2,assert,assert,2,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['assert'],['assert']
Testability,"//assert(GetLayout() == MemoryLayout::ColumnMajor );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h:2,assert,assert,2,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h,1,['assert'],['assert']
Testability,//assert(Rgn.End == Sch.RegionEnd);,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp:2,assert,assert,2,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp,1,['assert'],['assert']
Testability,"//assert(cond && ""CFGBlock's predecessor has a terminator condition"");; // The previous assertion is invalid in some cases (eg do/while). Leaving; // reporting of these situations on at the moment to help triage these cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UnreachableCodeChecker.cpp:2,assert,assert,2,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UnreachableCodeChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UnreachableCodeChecker.cpp,2,['assert'],"['assert', 'assertion']"
Testability,"//assert(fParams.size() == paramMap.size() );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:2,assert,assert,2,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['assert'],['assert']
Testability,"//assert(hist);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:2,assert,assert,2,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['assert'],['assert']
Testability,"//assert(input_row*width+input_col < height * width * channels);; //assert(data_col - data_col_0 < output_h*output_w*channels);; // std::cout << ""COL2IM: input_row"" << "" "" << input_row << "" "" << input_col; // << "" <---- "" << data_col - data_col_0 << "" values: ""; // << data_im[input_row * width + input_col] << "" <--- "" << *data_col << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/SOFIE_common.hxx:2,assert,assert,2,tmva/sofie/inc/TMVA/SOFIE_common.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/SOFIE_common.hxx,2,['assert'],['assert']
Testability,"//assert(kFALSE);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/csg/src/CsgOps.cxx:2,assert,assert,2,graf3d/csg/src/CsgOps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/csg/src/CsgOps.cxx,2,['assert'],['assert']
Testability,"//assert(n1b <= n1);; //Matrix_t & wm = layer.GetWeightsAt(k);; // make matrices in case they are not",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h:2,assert,assert,2,tmva/tmva/test/DNN/CNN/TestConvNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h,1,['assert'],['assert']
Testability,"//assert(proxy!=0) ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:2,assert,assert,2,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,2,['assert'],['assert']
Testability,"//br i1 %test.%d, label %main.%d, label %main.%d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/BrainF/BrainF.cpp:9,test,test,9,interpreter/llvm-project/llvm/examples/BrainF/BrainF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/BrainF/BrainF.cpp,2,['test'],['test']
Testability,"//cannot setup logarithmic scale",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx:15,log,logarithmic,15,graf3d/gl/src/TGLPlotPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx,1,['log'],['logarithmic']
Testability,//case M2_mpysu_up:; // Logical/bitwise:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp:24,Log,Logical,24,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,1,['Log'],['Logical']
Testability,"//changed by Helge 27.5.2013 What on earth was done here before? I still remember the idea behind this which apparently was; //NOT understood by the 'programmer' :) .. the idea was to have SAME amount of effective TRAINING data for signal and background.; // Testing events are totally irrelevant for this and might actually skew the whole normalisation!!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:259,Test,Testing,259,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,1,['Test'],['Testing']
Testability,"//changed by Helge 27.5.2013 What on earth was done here before? I still remember the idea behind this which apparently was; //NOT understood by the 'programmer' :) .. the idea was to have SAME amount of effective TRAINING data for signal and background.; //done here was something like having each data source normalized to its number of entries and this even for training+testing together.; // what should this have been good for ???",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:374,test,testing,374,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,1,['test'],['testing']
Testability,//cl_khr_fp16; /**; * Compute a base 10 logarithm.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:40,log,logarithm,40,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['log'],['logarithm']
Testability,//cl_khr_fp16; /**; * Compute a base 2 logarithm.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:39,log,logarithm,39,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['log'],['logarithm']
Testability,//cl_khr_fp16; /**; * Compute a base e logarithm of (1.0 + x).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:39,log,logarithm,39,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['log'],['logarithm']
Testability,"//cl_khr_fp16; /**; * Compute the exponent of x, which is the integral; * part of logr | x |.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:82,log,logr,82,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['log'],['logr']
Testability,//cl_khr_fp16; /**; * Log gamma function. Returns the natural; * logarithm of the absolute value of the gamma; * function. The sign of the gamma function is; * returned in the signp argument of lgamma_r.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Log,Log,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,2,"['Log', 'log']","['Log', 'logarithm']"
Testability,//cl_khr_fp16; /**; * Test for a NaN.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Test,Test,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Test'],['Test']
Testability,//cl_khr_fp16; /**; * Test for a normal value.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Test,Test,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Test'],['Test']
Testability,//cl_khr_fp16; /**; * Test for finite value.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Test,Test,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Test'],['Test']
Testability,//cl_khr_fp16; /**; * Test for infinity value (+ve or -ve) .; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Test,Test,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Test'],['Test']
Testability,//cl_khr_fp16; /**; * Test for sign bit. The scalar version of the function; * returns a 1 if the sign bit in the float is set else returns; * 0. The vector version of the function returns the; * following for each component in floatn: a -1 if the; * sign bit in the float is set else returns 0.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Test,Test,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Test'],['Test']
Testability,"//cl_khr_fp16; /**; * Test if arguments are ordered. isordered() takes; * arguments x and y, and returns the result; * isequal(x, x) && isequal(y, y).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Test,Test,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Test'],['Test']
Testability,"//cl_khr_fp16; /**; * Test if arguments are unordered. isunordered(); * takes arguments x and y, returning non-zero if x or y; * is NaN, and zero otherwise.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Test,Test,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Test'],['Test']
Testability,"//cms test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h:6,test,test,6,test/TFormulaParsingTests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h,1,['test'],['test']
Testability,"//console.log(""GlViewerRCore onResizeTimeout"", w, h, ""canvas="", this.canvas, this.canvas.width, this.canvas.height);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:10,log,log,10,ui5/eve7/lib/GlViewerRCore.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js,1,['log'],['log']
Testability,"//console.log(""LEGO element changed"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js:10,log,log,10,ui5/eve7/controller/Lego.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js,1,['log'],['log']
Testability,"//console.log(""handleOverlayMouseMove"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:10,log,log,10,ui5/eve7/lib/GlViewerRCore.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js,1,['log'],['log']
Testability,"//console.log(""shape"", shapes);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:10,log,log,10,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['log'],['log']
Testability,//console.log('Quality set to: '+quality +'%');,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:10,log,log,10,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['log'],['log']
Testability,"//console.log('b', i,j, i-1, k,vertices.length);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:10,log,log,10,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['log'],['log']
Testability,"//console.log('ccw', i);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:10,log,log,10,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['log'],['log']
Testability,"//console.log('cw', i);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:10,log,log,10,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['log'],['log']
Testability,"//console.log(this._groups);; //console.log(""$"", this._groups[0]);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:10,log,log,10,ui5/eve7/lib/OutlinePassEve.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js,2,['log'],['log']
Testability,"//cout << ""RooLinkedList::find: possibly renamed '"" << name << ""', kRenamedArg="" << (nptr&&nptr->TestBit(RooNameReg::kRenamedArg)) << endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:97,Test,TestBit,97,roofit/roofitcore/src/RooLinkedList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx,1,['Test'],['TestBit']
Testability,"//cout << ""RooLinkedList::findArg: possibly renamed '"" << arg->GetName() << ""', kRenamedArg="" << arg->namePtr()->TestBit(RooNameReg::kRenamedArg) << endl;; // See if it might have been renamed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:113,Test,TestBit,113,roofit/roofitcore/src/RooLinkedList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx,1,['Test'],['TestBit']
Testability,"//cout<<logT[n]<<"" ""<< x[n]<<"" ""<<y[n]<<""\n"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:8,log,logT,8,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['log'],['logT']
Testability,"//coutE(Tracing) << ""RooAbsReal::logEvalError("" << GetName() << "") message = "" << message << std::endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:33,log,logEvalError,33,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['log'],['logEvalError']
Testability,"//defaultOptions = testOptColor | testOptCheck;; // tree test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:19,test,testOptColor,19,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,3,['test'],"['test', 'testOptCheck', 'testOptColor']"
Testability,//defined(__opencl_c_named_address_space_builtins); /**; * Compute natural logarithm.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:75,log,logarithm,75,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['log'],['logarithm']
Testability,"//delete all function in fFunctions; // use same logic as in TH1 destructor; // (see TH1::~TH1 code in TH1.cxx)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:49,log,logic,49,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['log'],['logic']
Testability,"//delete temp file used for the benchmark",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx:32,benchmark,benchmark,32,test/bench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/bench.cxx,1,['benchmark'],['benchmark']
Testability,"//depends on function shape; // test ROOT finder algorithm function with derivative",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:32,test,test,32,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['test'],['test']
Testability,"//end namespace test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:16,test,test,16,interpreter/cling/test/Autoloading/Fail.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h,1,['test'],['test']
Testability,"//end namespace test // This is bypassed by forcibly removing restrict from types; // namespace test { //default template arg; // template <typename T,int MAX=100> class Stack {; // };; // Stack<int> FunctionReturningStack(){return Stack<int>();}; // }//end namespace test // Fixed with callback, strip old default args before including new file; // namespace test {; // //#include<tuple> //'tie' function; // //commented out to skip huge output; // } //Fixed bug in VisitFunctionDecl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:16,test,test,16,interpreter/cling/test/Autoloading/Fail.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h,4,['test'],['test']
Testability,"//end namespace test // This problem is bypassed by skipping types containing ""::""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h:16,test,test,16,interpreter/cling/test/Autoloading/Fail.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/test/Autoloading/Fail.h,1,['test'],['test']
Testability,"//find a free logical unit (max 10)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx:14,log,logical,14,hist/hbook/src/THbookFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx,1,['log'],['logical']
Testability,"//for (UInt_t i=0; i<clen; i++) //Log() << ""-"";; //Log() << Endl;; // full column length",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx:34,Log,Log,34,tmva/tmva/src/TransformationHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx,2,['Log'],['Log']
Testability,"//for debug; // std::cout << "">>>>>>>>>>> "" << std::endl;; // std::cout << ""alternate model "" << std::endl;; // hc.GetAlternateModel()->GetNuisanceParameters()->Print(""V"");; // hc.GetAlternateModel()->GetParametersOfInterest()->Print(""V"");; // std::cout << ""Null model "" << std::endl;; // hc.GetNullModel()->GetNuisanceParameters()->Print(""V"");; // hc.GetNullModel()->GetParametersOfInterest()->Print(""V"");; // std::cout << ""<<<<<<<<<<<<<<< "" << std::endl;; // run the hypothesis test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:480,test,test,480,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['test'],['test']
Testability,"//for testing a potential -long-option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:6,test,testing,6,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['test'],['testing']
Testability,"//for testing purposes HAS_CGAL can be [un]defined here; //#define HAS_CGAL; //for testing purposes THREAD_SAFE can [un]defined here; //#define THREAD_SAFE; //#include ""RtypesCore.h""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Delaunay2D.h:6,test,testing,6,math/mathcore/inc/Math/Delaunay2D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Delaunay2D.h,2,['test'],['testing']
Testability,"//gROOT->GetListOfClasses()->ls(); // valid. test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx:45,test,test,45,gui/gui/src/TGFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx,1,['test'],['test']
Testability,"//gibbs requires log of pdf and derivative",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/test/unuranMultiDim.cxx:17,log,log,17,math/unuran/test/unuranMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/test/unuranMultiDim.cxx,1,['log'],['log']
Testability,"//gibbs requires log of pdf and derivative; //#define USE_GIBBS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/test/unuranMulti2D.cxx:17,log,log,17,math/unuran/test/unuranMulti2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/test/unuranMulti2D.cxx,1,['log'],['log']
Testability,"//h2->GetYaxis()->SetBinLabel(i, ylabel);; // use for h3 same label as for h2 to test the merging",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:81,test,test,81,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['test'],['test']
Testability,"//h2->LabelsDeflate();; // test ordering label in content descending order",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:27,test,test,27,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['test'],['test']
Testability,"//if (subInfo && subBranch->TestBit(kCache)) { // subInfo->GetElements()->At(subBranch->GetID())->TestBit(TStreamerElement::kCache)) {",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:28,Test,TestBit,28,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,2,['Test'],['TestBit']
Testability,"//if (testType == kRndmActNet) return true;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h:6,test,testType,6,tmva/tmva/test/DNN/CNN/TestConvNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h,1,['test'],['testType']
Testability,"//if (v == 3) {; // const int_t koldbypassstreamer = bit(14);; // if (testbit(koldbypassstreamer)) bypassstreamer();; //}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TContainerConverters.cxx:70,test,testbit,70,io/io/src/TContainerConverters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TContainerConverters.cxx,1,['test'],['testbit']
Testability,"//if log scale in X, use variable bin size linear with log(x); //this gives a better precision when zooming on the axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:5,log,log,5,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,2,['log'],['log']
Testability,"//in the above statement, it is important to subtract 1e-10; //to avoid precision problems if the tests below; // Round mantissa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THLimitsFinder.cxx:98,test,tests,98,hist/hist/src/THLimitsFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THLimitsFinder.cxx,1,['test'],['tests']
Testability,"//in the test below 16 MBytes is pure empirirical and may depend on the file system.; //increasing this number must be done with care, as it may increase; //the job real time (mismatch with OS buffers)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx:9,test,test,9,io/io/src/TFileCacheRead.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx,2,['test'],['test']
Testability,"//index indicating Training,Testing,... events/datasets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:28,Test,Testing,28,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['Test'],['Testing']
Testability,"//iret |= testLSTMBackpropagation<Architecture_t>(4, 4, 10, 20, 1e-5, {false, true}, debug);; // test returning the full sequence and dense layer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestLSTMBackpropagationCudnn.cxx:10,test,testLSTMBackpropagation,10,tmva/tmva/test/DNN/LSTM/TestLSTMBackpropagationCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestLSTMBackpropagationCudnn.cxx,2,['test'],"['test', 'testLSTMBackpropagation']"
Testability,"//iret |= testNewMinimizer(fRB,xRB,s0,""Genetic"","""");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testMinim.cxx:10,test,testNewMinimizer,10,math/mathcore/test/fit/testMinim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testMinim.cxx,1,['test'],['testNewMinimizer']
Testability,//isExtension = true; // FIXME: implement #assert,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp:43,assert,assert,43,interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,1,['assert'],['assert']
Testability,"//just for debug purposes..; /*; sumSigW=0;; sumBkgW=0;; for (UInt_t ievt=0; ievt<fEventSample.size(); ievt++) {; if ((DataInfo().IsSignal(fEventSample[ievt])) ) sumSigW += fEventSample[ievt]->GetWeight();; else sumBkgW += fEventSample[ievt]->GetWeight();; }; Log() << kWARNING << ""sigSumW=""<<sumSigW<<""bkgSumW=""<<sumBkgW<< Endl;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:260,Log,Log,260,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['Log'],['Log']
Testability,"//kFALSE == never logarithmic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx:18,log,logarithmic,18,graf3d/gl/src/TGLPlotPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx,2,['log'],['logarithmic']
Testability,"//log file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h:2,log,log,2,net/net/inc/TApplicationServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h,2,['log'],['log']
Testability,"//log file descriptor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h:2,log,log,2,net/net/inc/TApplicationServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h,1,['log'],['log']
Testability,"//log file length and content follows",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,log,log,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['log'],['log']
Testability,"//log file offset at start",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofQueryResult.h:2,log,log,2,proof/proof/inc/TProofQueryResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofQueryResult.h,1,['log'],['log']
Testability,"//log file received, status follows",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,log,log,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['log'],['log']
Testability,"//logical",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormulaPrimitive_v5.cxx:2,log,logical,2,hist/hist/src/TFormulaPrimitive_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormulaPrimitive_v5.cxx,1,['log'],['logical']
Testability,"//logical indicating whether the fitted values should be computed and included in the model or not (default: ‘TRUE’)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:2,log,logical,2,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['log'],['logical']
Testability,"//logical indicating whether the model should allow for probability predictions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:2,log,logical,2,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['log'],['logical']
Testability,"//loglevel follows",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,log,loglevel,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['log'],['loglevel']
Testability,"//main logic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_TopK.hxx:7,log,logic,7,tmva/sofie/inc/TMVA/ROperator_TopK.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_TopK.hxx,1,['log'],['logic']
Testability,"//name of the temp file for redirected logs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:39,log,logs,39,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['log'],['logs']
Testability,"//node->Print(Log());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:14,Log,Log,14,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,1,['Log'],['Log']
Testability,"//oocoutP(nullptr,Generation) << ""All Test Statistics on data: "" << endl;; //allTS->Print(""v"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestCalculatorGeneric.cxx:38,Test,Test,38,roofit/roostats/src/HypoTestCalculatorGeneric.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestCalculatorGeneric.cxx,1,['Test'],['Test']
Testability,"//os << ""agreefraction test failed.\n"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.cxx:23,test,test,23,math/mathmore/test/VavilovTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.cxx,1,['test'],['test']
Testability,"//p2->GetYaxis()->SetBinLabel(i, ylabel);; // use for h3 same label as for h2 to test the merging",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:81,test,test,81,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['test'],['test']
Testability,"//printValue(Log.getLeft(I), true);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.cpp:13,Log,Log,13,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.cpp,2,['Log'],['Log']
Testability,"//printValue(Log.getRight(I), false);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.cpp:13,Log,Log,13,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.cpp,1,['Log'],['Log']
Testability,"//redirect received log info",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:20,log,log,20,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['log'],['log']
Testability,"//running over all the events and populating the test MVA histograms",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx:49,test,test,49,tmva/tmva/src/MethodBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx,1,['test'],['test']
Testability,"//s1=a.testTransform (v1, tf, t, t1, ""Transform3D TVector3 "" );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress3D.cxx:7,test,testTransform,7,math/genvector/test/stress3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress3D.cxx,1,['test'],['testTransform']
Testability,"//scale for cdf test (integral)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:16,test,test,16,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['test'],['test']
Testability,"//scale for der test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:16,test,test,16,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['test'],['test']
Testability,"//scale for integral test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:21,test,test,21,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['test'],['test']
Testability,"//scale for inverse test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:20,test,test,20,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['test'],['test']
Testability,"//scale for quantile test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:21,test,test,21,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['test'],['test']
Testability,"//scan log file to accumulate the individual Cpu Times",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx:7,log,log,7,test/stressHepix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx,1,['log'],['log']
Testability,"//send log to window only",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:7,log,log,7,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['log'],['log']
Testability,"//server debug logging level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:15,log,logging,15,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['log'],['logging']
Testability,"//sets the activation function of the output units to linear or logistic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSNNS.h:64,log,logistic,64,tmva/rmva/inc/TMVA/MethodRSNNS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSNNS.h,1,['log'],['logistic']
Testability,"//skip the master log",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx:18,log,log,18,gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,1,['log'],['log']
Testability,"//special logic to support the case where the same object is; //added multiple times in fFunctions.; //This case happens when the same object is added with different; //drawing modes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:10,log,logic,10,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,3,['log'],['logic']
Testability,"//special logic to support the case where the same object is; //added multiple times in fFunctions.; //This case happens when the same object is added with different; //drawing modes; //In the loop below we must be careful with objects (eg TCutG) that may; // have been added to the list of functions of several histograms; //and may have been already deleted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:10,log,logic,10,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['log'],['logic']
Testability,"//static llvm::cl::opt<bool>; //TestResultForARC(""test-result"",; //llvm::cl::desc(""Test the result of transformations by parsing it in ARC mode""));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/arcmt-test/arcmt-test.cpp:32,Test,TestResultForARC,32,interpreter/llvm-project/clang/tools/arcmt-test/arcmt-test.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/arcmt-test/arcmt-test.cpp,3,"['Test', 'test']","['Test', 'TestResultForARC', 'test-result']"
Testability,"//std::cout << ""File size = "" << fsize << "" estimated "" << 8 * Dim * ngen << std::endl;; // test Double32",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:92,test,test,92,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['test'],['test']
Testability,"//std::cout << ""File size = "" << fsize << "" estimated "" << 8 * Dim * ngen << std::endl;; // test storing as Double32_t; // dictionay exist only for square matrices between 3 and 6",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:92,test,test,92,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['test'],['test']
Testability,"//std::cout << ""StressMathCore: test number n = "" << n << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:32,test,test,32,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['test'],['test']
Testability,"//std::cout << ""StressMathMore: test number n = "" << n << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:32,test,test,32,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['test'],['test']
Testability,"//std::cout << qt4 << std::endl;; // this fails; // double a = 3;; //XYZPoint q4 = a*q1;; // std::cout << t3( a * q1) << std::endl;; // std::cout << a * t3(q1) << std::endl;; // test get/set with a matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/testGenVector.cxx:178,test,test,178,math/genvector/test/testGenVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/testGenVector.cxx,1,['test'],['test']
Testability,"//std::cout << testForwardPass<TReference<double>>(1, 8, 100, 50) << ""\n"";; //std::cout << testForwardPass<TReference<double>>(5, 9, 128, 64) << ""\n"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestLSTMForwardPass.cxx:15,test,testForwardPass,15,tmva/tmva/test/DNN/LSTM/TestLSTMForwardPass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestLSTMForwardPass.cxx,2,['test'],['testForwardPass']
Testability,"//std::exit(1);; //assert(false);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx:19,assert,assert,19,tmva/tmva/src/MsgLogger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx,1,['assert'],['assert']
Testability,//stub,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:2,stub,stub,2,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['stub'],['stub']
Testability,"//suppressing Logger outside the method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx:14,Log,Logger,14,tmva/tmva/src/MethodBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx,1,['Log'],['Logger']
Testability,"//switch off error messages to have test passing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h:36,test,test,36,test/TFormulaParsingTests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h,1,['test'],['test']
Testability,"//switch on/off real-time retrieval of log messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:39,log,log,39,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['log'],['log']
Testability,"//temp file to read redirected logs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:31,log,logs,31,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['log'],['logs']
Testability,"//temp file to redirect logs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:24,log,logs,24,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['log'],['logs']
Testability,"//temp[workerID] = - (y * log(sig) + (1.0 - y) * log(1.0 - sig));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/LossFunctions.hxx:26,log,log,26,tmva/tmva/src/DNN/Architectures/Cpu/LossFunctions.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/LossFunctions.hxx,2,['log'],['log']
Testability,"//template <class NotCompileIfScalarBackend = std::enable_if<!(std::is_same<double, ROOT::Double_v>::value)>>; // static double EvalPdf(const IModelFunctionTempl<ROOT::Double_v> &func, const UnBinData &data, const double *p, unsigned int i, double *, double *, bool, bool) {; // // evaluate the pdf contribution to the generic logl function in case of bin data; // // return actually the log of the pdf and its derivatives; // // func.SetParameters(p);; // const auto x = vecCore::FromPtr<ROOT::Double_v>(data.GetCoordComponent(i, 0));; // auto fval = func(&x, p);; // auto logPdf = ROOT::Math::Util::EvalLog(fval);; // return vecCore::Get<ROOT::Double_v>(logPdf, 0);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitUtil.h:327,log,logl,327,math/mathcore/inc/Fit/FitUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitUtil.h,4,['log'],"['log', 'logPdf', 'logl']"
Testability,"//test Access",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,test,test,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['test'],['test']
Testability,"//test Unuran using as empirical distribution.; // Use as input an histogram (using its buffer) or a TGraph and TGraph2D for multi-dimensional data; //; // run the test within ROOT (.x unuranHist.cxx+) or pass any extra parameter in the command line to get; // a graphics output (./unuranHist 1); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/test/unuranHist.cxx:2,test,test,2,math/unuran/test/unuranHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/test/unuranHist.cxx,2,['test'],['test']
Testability,"//test if it is now uniquely composed of numbers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx:2,test,test,2,core/base/src/TString.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx,1,['test'],['test']
Testability,"//test inversion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/testGenVector.cxx:2,test,test,2,math/genvector/test/testGenVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/testGenVector.cxx,1,['test'],['test']
Testability,"//test parabola using GSL Brent Root Finder ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testRootFinder.cxx:2,test,test,2,math/mathcore/test/testRootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testRootFinder.cxx,5,['test'],['test']
Testability,"//test parabola using TF1 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testRootFinder.cxx:2,test,test,2,math/mathcore/test/testRootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testRootFinder.cxx,1,['test'],['test']
Testability,"//test to be performed every fStep workers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h:2,test,test,2,proof/proofbench/inc/TProofBenchRunCPU.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TProofBenchRunCPU.h,2,['test'],['test']
Testability,"//test->Print(""v"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx:2,test,test,2,test/TFormulaTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx,1,['test'],['test']
Testability,"//testFormula = ""x - [test]^(TMath::Sin(pi*y*TMath::DegToRad())) - pol2(0) + gausn(0)*landau(0)+expo(10)"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx:2,test,testFormula,2,test/TFormulaTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx,2,['test'],"['test', 'testFormula']"
Testability,"//testFullGRU(size_t batchSize, size_t stateSize, size_t inputSize, size_t outputSize); // reconstruct 8 bit vector; // batchsize, statesize, inputsize, outputsize",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/TestFullGRU.cxx:2,test,testFullGRU,2,tmva/tmva/test/DNN/GRU/TestFullGRU.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/TestFullGRU.cxx,1,['test'],['testFullGRU']
Testability,"//testFullGRU<TReference<double>>(64, 10, 8, 8) ;; //testFullGRU<TReference<double>>(3, 8, 100, 50) ;; // test a full GRU with 5 time steps and different signal/backgrund time dependent shapes; // batchsize, statesize , inputsize, seed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/TestFullGRU.cxx:2,test,testFullGRU,2,tmva/tmva/test/DNN/GRU/TestFullGRU.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/TestFullGRU.cxx,3,['test'],"['test', 'testFullGRU']"
Testability,"//testFullLSTM(size_t batchSize, size_t stateSize, size_t inputSize, size_t outputSize); // reconstruct 8 bit vector; // batchsize, statesize, inputsize, outputsize",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx:2,test,testFullLSTM,2,tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx,1,['test'],['testFullLSTM']
Testability,"//testFullLSTM<TReference<double>>(64, 10, 8, 8) ;; //testFullLSTM<TReference<double>>(3, 8, 100, 50) ;; // test a full LSTM with 5 time steps and different signal/backgrund time dependent shapes; // batchsize, statesize , inputsize, seed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx:2,test,testFullLSTM,2,tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx,3,['test'],"['test', 'testFullLSTM']"
Testability,"//testFullRNN(size_t batchSize, size_t stateSize, size_t inputSize, size_t outputSize); // reconstruct 8 bit vector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNNCpu.cxx:2,test,testFullRNN,2,tmva/tmva/test/DNN/RNN/TestFullRNNCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNNCpu.cxx,2,['test'],['testFullRNN']
Testability,"//testFullRNN(size_t batchSize, size_t stateSize, size_t inputSize, size_t outputSize); // reconstruct 8 bit vector; // batchsize, statesize, inputsize, outputsize",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNN.cxx:2,test,testFullRNN,2,tmva/tmva/test/DNN/RNN/TestFullRNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNN.cxx,1,['test'],['testFullRNN']
Testability,"//testFullRNN<TReference<double>>(64, 10, 8, 8) ;; //testFullRNN<TReference<double>>(3, 8, 100, 50) ;; // test a full RNN with 5 time steps and different signal/backgrund time dependent shapes; // batchsize, statesize , inputsize, seed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNN.cxx:2,test,testFullRNN,2,tmva/tmva/test/DNN/RNN/TestFullRNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNN.cxx,3,['test'],"['test', 'testFullRNN']"
Testability,"//testOld->Print(""v"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx:2,test,testOld,2,test/TFormulaTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx,1,['test'],['testOld']
Testability,"//testPoisson2(tr,mu,h2);; // test differences",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testRandomDist.cxx:30,test,test,30,math/mathmore/test/testRandomDist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testRandomDist.cxx,1,['test'],['test']
Testability,"//tested in ExecuteEvent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:2,test,tested,2,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['test'],['tested']
Testability,"//testing addition and subtraction:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TestVectors.cxx:2,test,testing,2,test/TestVectors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TestVectors.cxx,1,['test'],['testing']
Testability,"//the following test required for forward and backward compatibility",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx:16,test,test,16,io/io/src/TKey.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx,3,['test'],['test']
Testability,"//the log is empty so far",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx:6,log,log,6,gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,1,['log'],['log']
Testability,"//the test below testing fArray[fNumber]>1 is to avoid a recursivity; //problem in some cases like:; // class aProblemChild: public TNamed {; // aProblemChild *canBeNull;; // };",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx:6,test,test,6,io/io/src/TStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx,2,['test'],"['test', 'testing']"
Testability,"//this is redefined in TGraphErrors; // (if fHistogram exist) && (if the log scale is on) &&; // (if the computed range minimum is > 0) && (if the fHistogram minimum is zero); // then it means fHistogram limits have been computed in linear scale; // therefore they might be too strict and cut some points. In that case the; // fHistogram limits should be recomputed ie: the existing fHistogram; // should not be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:73,log,log,73,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['log'],['log']
Testability,"//trainE = CalculateEstimator( Types::kTraining, i ) - fPrior/Float_t(GetNEvents()); // estimator for training sample //zjh; //testE = CalculateEstimator( Types::kTesting, i ) - fPrior/Float_t(GetNEvents()); // estimator for test sample //zjh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:127,test,testE,127,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,2,['test'],"['test', 'testE']"
Testability,"//transform to log ?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:15,log,log,15,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['log'],['log']
Testability,"//typedef ::testing::Types<ScalarBinned,VectorialBinned> TestTypes;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testGradientFitting.cxx:12,test,testing,12,math/mathcore/test/testGradientFitting.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testGradientFitting.cxx,2,"['Test', 'test']","['TestTypes', 'testing']"
Testability,"//unbinned PDF; // If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n); // If we do bin-by bin offsetting, we don't do this because it cancels out",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:112,log,log,112,roofit/roofitcore/src/RooNLLVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx,3,['log'],['log']
Testability,"//unsigned int n = std::min(n2Loop, dataV.size() );; // test operations like in CMS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress2D.cxx:56,test,test,56,math/genvector/test/stress2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress2D.cxx,1,['test'],['test']
Testability,"//void TestkdtreeIF(Int_t npoints=1000, Int_t bsize=9, Int_t nloop=1000, Int_t mode = 2);; //void TestSizeIF(Int_t nsec=36, Int_t nrows=159, Int_t npoints=1000, Int_t bsize=10, Int_t mode=1);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/kDTreeTest.cxx:7,Test,TestkdtreeIF,7,math/mathcore/test/kDTreeTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/kDTreeTest.cxx,2,['Test'],"['TestSizeIF', 'TestkdtreeIF']"
Testability,"//x_1- [test]^(TMath::Sin(pi*var*TMath::DegToRad())) - var1pol2(0) + gausn(0)*ylandau(0)+zexpo(10)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx:8,test,test,8,test/TFormulaTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaTests.cxx,1,['test'],['test']
Testability,"//y already in log scale",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:15,log,log,15,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['log'],['log']
Testability,"//z scale (linear, log, sqrt)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:19,log,log,19,hist/spectrumpainter/inc/TSpectrum2Painter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h,1,['log'],['log']
Testability,"//{'SAMME', 'SAMME.R'}, optional (default='SAMME.R'); //If 'SAMME.R' then use the SAMME.R real boosting algorithm.; //``base_estimator`` must support calculation of class probabilities.; //If 'SAMME' then use the SAMME discrete boosting algorithm.; //The SAMME.R algorithm typically converges faster than SAMME,; //achieving a lower test error with fewer boosting iterations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h:333,test,test,333,tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,1,['test'],['test']
Testability,"/; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:1794,test,testing,1794,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,1,['test'],['testing']
Testability,"/; // without much comments. //; // //; // Finally, for debugging reasons, the struct compareOptions can be //; // used to define the level of output of the tests, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms....................................OK; // Test 17: Buffer tests for Histograms.......................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:1941,Test,Test,1941,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['Test'],['Test']
Testability,"0 ""1.0 beta 4"" 0.90 90 0.90 [should have been 2.0.90]; * 0.95 ""1.0 beta 5"" 0.95 95 0.95 [should have been 2.0.95]; * 0.96 ""1.0 beta 6"" 0.96 96 0.96 [should have been 2.0.96]; * 0.97b ""1.00.97 beta 7"" 1.00.97 97 1.0.1 [should have been 2.0.97]; * 0.97c 0.97 97 2.0.97; * 0.98 0.98 98 2.0.98; * 0.99 0.99 98 2.0.99; * 0.99a-m 0.99 99 2.0.99; * 1.00 1.00 100 2.1.0 [100 should be 10000]; * 1.0.0 (from here on, the 100 2.1.0 [100 should be 10000]; * 1.0.1 png.h string is 10001 2.1.0; * 1.0.1a-e identical to the 10002 from here on, the shared library; * 1.0.2 source version) 10002 is 2.V where V is the source code; * 1.0.2a-b 10003 version, except as noted.; * 1.0.3 10003; * 1.0.3a-d 10004; * 1.0.4 10004; * 1.0.4a-f 10005; * 1.0.5 (+ 2 patches) 10005; * 1.0.5a-d 10006; * 1.0.5e-r 10100 (not source compatible); * 1.0.5s-v 10006 (not binary compatible); * 1.0.6 (+ 3 patches) 10006 (still binary incompatible); * 1.0.6d-f 10007 (still binary incompatible); * 1.0.6g 10007; * 1.0.6h 10007 10.6h (testing xy.z so-numbering); * 1.0.6i 10007 10.6i; * 1.0.6j 10007 2.1.0.6j (incompatible with 1.0.0); * 1.0.7beta11-14 DLLNUM 10007 2.1.0.7beta11-14 (binary compatible); * 1.0.7beta15-18 1 10007 2.1.0.7beta15-18 (binary compatible); * 1.0.7rc1-2 1 10007 2.1.0.7rc1-2 (binary compatible); * 1.0.7 1 10007 (still compatible); * ...; * 1.0.69 10 10069 10.so.0.69[.0]; * ...; * 1.2.59 13 10259 12.so.0.59[.0]; * ...; * 1.4.20 14 10420 14.so.0.20[.0]; * ...; * 1.5.30 15 10530 15.so.15.30[.0]; * ...; * 1.6.40 16 10640 16.so.16.40[.0]; *; * Henceforth the source version will match the shared-library major and; * minor numbers; the shared-library major version number will be used for; * changes in backward compatibility, as it is intended.; * The PNG_LIBPNG_VER macro, which is not used within libpng but is; * available for applications, is an unsigned integer of the form XYYZZ; * corresponding to the source version X.Y.Z (leading zeros in Y and Z).; * Beta versions were given the previous public releas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:8805,test,testing,8805,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['test'],['testing']
Testability,"05,""tS"");; axis->SetLabelSize(0.2);; axis->SetTickSize(0.2);. TDatime da(2003,02,28,12,00,00);; axis->SetTimeOffset(da.Convert());; axis->SetTimeFormat(""%d-%m-%Y"");; axis->Draw();; return c1;; }; End_Macro. Thanks to the TLatex directive `#splitline` it is possible to write the time; labels on two lines. In the previous example changing the `SetTimeFormat` line by. ~~~ {.cpp}; axis->SetLabelOffset(0.15);; axis->SetTimeFormat(""#splitline{%Y}{%d\/%m}"");; ~~~. will produce the following axis:. Begin_Macro; {; auto c1 = new TCanvas(""c1"",""Examples of TGaxis"",10,10,700,100);; c1->Range(-10,-1,10,1);. TGaxis *axis = new TGaxis(-8,0.,8,0.,-100000,150000,2405,""tS"");; axis->SetLabelSize(0.2);; axis->SetTickSize(0.2);. TDatime da(2003,02,28,12,00,00);; axis->SetTimeOffset(da.Convert());; axis->SetLabelOffset(0.15);; axis->SetTimeFormat(""#splitline{%Y}{%d/%m}"");; axis->Draw();; return c1;; }; End_Macro. The following example shows time axis on a TGraph:. Begin_Macro(source); {; TDatime da1(2008,02,28,15,52,00);; TDatime da2(2008,02,28,15,53,00);. double x[2],y[2];. y[0] = 1.;; y[1] = 2.;; x[0] = da1.Convert();; x[1] = da2.Convert();. TGraph mgr(2,x,y);; mgr.SetMarkerStyle(20);. mgr.Draw(""apl"");; mgr.GetXaxis()->SetTimeDisplay(1);; mgr.GetXaxis()->SetNdivisions(-503);; mgr.GetXaxis()->SetTimeFormat(""%Y-%m-%d %H:%M"");; mgr.GetXaxis()->SetTimeOffset(0,""gmt"");; }; End_Macro. The following example compares what the system time function `gmtime`; and `localtime` give with what gives `TGaxis`. It can be used; as referenced test to check if the time option of `TGaxis` is working properly. Begin_Macro(source); ../../../tutorials/graphs/timeonaxis3.C; End_Macro. The following macro illustrates the use, with histograms axis, of the time mode on the axis; with different time intervals and time formats. Begin_Macro(source); ../../../tutorials/graphs/timeonaxis.C; End_Macro. */; ////////////////////////////////////////////////////////////////////////////////; /// TGaxis default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:20508,test,test,20508,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['test'],['test']
Testability,"0`; no whisker drawn; - `w = 1`; whisker is drawn to end of distribution.; - `w = 2`; whisker is drawn to max 1.5*iqr. - `a = 0`; no anchor drawn; - `a = 1`; the anchors are drawn. - `p = 0`; no points drawn; - `p = 1`; only outliers are drawn; - `p = 2`; all datapoints are drawn; - `p = 3`: all datapoints are drawn scattered. - `h = 0`; no histogram is drawn; - `h = 1`; histogram at the left or bottom side is drawn; - `h = 2`; histogram at the right or top side is drawn; - `h = 3`; histogram at left and right or top and bottom (violin-style) is drawn. - `z = 0`; no zero indicator line is drawn; - `z = 1`; zero indicator line is drawn. As one can see all individual options for both candle and violin plots can be accessed by this; mechanism. In deed the keywords CANDLE(<option-string>) and VIOLIN(<option-string>) have the same; meaning. So you can parametrise an option-string for a candle plot and use the keywords VIOLIN and; vice versa, if you wish. Using a logarithmic x- or y-axis is possible for candle and violin charts. \since **ROOT version 6.11/01**. a logarithmic z-axis is possible, too but will only affect violin charts of course. \anchor HP140a; #### The CANDLE option. <a href=""http://en.wikipedia.org/wiki/Box_plot"">A Candle plot</a> (also known as; a ""box plot"" or ""whisker plot"") was invented in 1977 by John Tukey. It is a convenient; way to describe graphically a data distribution (D) with only five numbers:. 1. The minimum value of the distribution D (bottom or left whisker).; 2. The lower quartile (Q1): 25% of the data points in D are less than Q1 (bottom of the box).; 3. The median (M): 50% of the data points in D are less than M.; 4. The upper quartile (Q3): 75% of the data points in D are less than Q3 (top of the box).; 5. The maximum value of the distribution D (top or right whisker). In this implementation a TH2 is considered as a collection of TH1 along; X (option `CANDLE` or `CANDLEX`) or Y (option `CANDLEY`).; Each TH1 is represented as one candle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:44721,log,logarithmic,44721,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['log'],['logarithmic']
Testability,"17 events (minimal expected; /// frequency equal to one) and the weighted histogram with 500 events (minimal; /// expected frequency equal to 25); /// Begin_Macro; /// ../../../tutorials/math/chi2test.C(17); /// End_Macro; /// Fig 2. An example of comparison of the unweighted histogram with 217 events; /// and the weighted histogram with 500 events:; /// 1. unweighted histogram;; /// 2. weighted histogram;; /// 3. normalized residuals plot;; /// 4. normal Q-Q plot of residuals.; ///; /// The value of the test statistic \f$ \chi^{2} \f$ is equal to; /// 32.33 with p-value equal to 0.029, therefore the hypothesis of identity of; /// the two histograms is rejected for 0.05 significant level. The behavior of; /// the normalized residuals plot (see Fig. 2c) and the normal Q-Q plot (see; /// Fig. 2d) of residuals are not regular and we can identify the outlier or; /// bin with a big influence on \f$ \chi^{2} \f$.; ///; /// #### References:; ///; /// - [1] Pearson, K., 1904. On the Theory of Contingency and Its Relation to; /// Association and Normal Correlation. Drapers' Co. Memoirs, Biometric; /// Series No. 1, London.; /// - [2] Gagunashvili, N., 2006. \f$ \sigma^{2} \f$ test for comparison; /// of weighted and unweighted histograms. Statistical Problems in Particle; /// Physics, Astrophysics and Cosmology, Proceedings of PHYSTAT05,; /// Oxford, UK, 12-15 September 2005, Imperial College Press, London, 43-44.; /// Gagunashvili,N., Comparison of weighted and unweighted histograms,; /// arXiv:physics/0605123, 2006.; /// - [3] Cramer, H., 1946. Mathematical methods of statistics.; /// Princeton University Press, Princeton.; /// - [4] Haberman, S.J., 1973. The analysis of residuals in cross-classified tables.; /// Biometrics 29, 205-220.; /// - [5] Lewontin, R.C. and Felsenstein, J., 1965. The robustness of homogeneity; /// test in 2xN tables. Biometrics 21, 19-33.; /// - [6] Seber, G.A.F., Lee, A.J., 2003, Linear Regression Analysis.; /// John Wiley & Sons Inc., New York.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:13973,test,test,13973,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['test'],['test']
Testability,"1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redir",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3078,Test,Test,3078,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();. TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();. TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; End_Macro. Note that this functionality has some limitations and does not follow all the TGaxis setting.; In particular the number of divisions or the maximum number digits do not apply. \anchor GA02; ## Logarithmic axis. By default axis are linear. To define a `TGaxis` as logarithmic, it is; enough to create it with the option `""G""`. When plotting an histogram or a graph the logarithmic scale can be set using:. - `gPad->SetLogx(1);` set the logarithmic scale on the X axis; - `gPad->SetLogy(1);` set the logarithmic scale on the Y axis. When the `SetMoreLogLabels()` method is called more labels are drawn; when in logarithmic scale and there is a small number of decades (less than 3). \anchor GA03; ## Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify; the option `""B""`. It useful to superpose axis. \anchor GA03a; ## Arrow on axis; \since **ROOT version 6.27/01:**. To draw an arrow at the end of the axis use the option `"">""`. To draw it at the beginning; of the axis use the option `""<""`. To draw it on both ends use `""<>""`. Begin_Macro(source); {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);. auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");. auto f3 = new TF1(""x3"",""x*x*x"",-10,10);; f3->SetLineColor(kBlue);; f3->Draw(""same"");. // Draw the axis with arrows; auto ox = new TGaxis(-10,0,10,0,-10.,10.,510,""+-S>"");; ox->SetTickSize(0.009);; ox->SetLabelFont(42);; ox->S",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:4713,log,logarithmic,4713,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,2,['log'],['logarithmic']
Testability,":. Begin_Macro(source); {; TCanvas *c2 = new TCanvas(""c2"",""c2"",10,10,700,500);. gPad->DrawFrame(0.,-2.,10.,2);. TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();. TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();. TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; End_Macro. Note that this functionality has some limitations and does not follow all the TGaxis setting.; In particular the number of divisions or the maximum number digits do not apply. \anchor GA02; ## Logarithmic axis. By default axis are linear. To define a `TGaxis` as logarithmic, it is; enough to create it with the option `""G""`. When plotting an histogram or a graph the logarithmic scale can be set using:. - `gPad->SetLogx(1);` set the logarithmic scale on the X axis; - `gPad->SetLogy(1);` set the logarithmic scale on the Y axis. When the `SetMoreLogLabels()` method is called more labels are drawn; when in logarithmic scale and there is a small number of decades (less than 3). \anchor GA03; ## Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify; the option `""B""`. It useful to superpose axis. \anchor GA03a; ## Arrow on axis; \since **ROOT version 6.27/01:**. To draw an arrow at the end of the axis use the option `"">""`. To draw it at the beginning; of the axis use the option `""<""`. To draw it on both ends use `""<>""`. Begin_Macro(source); {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);. auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");. auto f3 = new TF1(""x3"",""x*x*x"",-10,10);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:4541,log,logarithmic,4541,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['log'],['logarithmic']
Testability,"; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://www.ietf.org/rfc/rfc1951.txt; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c:1780,test,testing,1780,graf2d/asimage/src/libAfterImage/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c,1,['test'],['testing']
Testability,"; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms....................................OK; // Test 17: Buffer tests for Histograms......................................OK; // Test 18: Extend axis tests for Histograms.................................OK; // Test 19: TH1-THn[Sparse] Conversion tests.................................OK; // Test 20: FillData tests for Histograms and Sparses...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:2181,Test,Test,2181,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,2,"['Test', 'test']","['Test', 'tests']"
Testability,"; // At the end of the test a table is printed showing the global results; // with the amount of I/O, Real Time and Cpu Time.; // One single number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files of a chain......................... OK; // Test 14 : Check correct rebuilt of Event.root in test 13........ OK; // Test 15 : Divert Tree branches to separate files................ OK; // Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK; // Test 17 : Test mkdir............................................ OK; // ******************************************************************; //* Linux pcbrun.cern.ch 2.4.20 #1 Thu Jan 9 12:21:02 MET 2003; //************************",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:2166,Test,Test,2166,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,2,['Test'],['Test']
Testability,"; // in SQL statements; // - bulk operation when inserting/updating/selecting data in database; // - uasge of basic data types when accessing result set of executed query; //; //; // 1. Creation of statement; // ======================================; // To create an instance of the TSQLStatement class, the TSQLServer::Statement() method; // should be used. Depending on the driver used for an ODBC connection,; // the appropriate object instance will be created. For the moment there are; // six different implementations of the TSQLStatement class: for MySQL,; // Oracle, PostgreSQL, SQLite3 and ODBC. Hopefully, support of ODBC will allow usage of; // statements for most existing RDBMS.; //; // // first, connect to the database; // TSQLServer* serv = TSQLServer::Connect(""mysql://hostname.domain:3306/test"",; // ""user"", ""pass"");; // // check if connection is ok; // if ((serv!=0) && serv->IsConnected()) {; // // create instance of sql-statement; // TSQLStatement* stmt = serv->Statement(""CREATE TABLE TESTTABLE (ID1 INT, ID2 INT, FFIELD VARCHAR(255), FVALUE VARCHAR(255))"";; // // process statement; // stmt->Process();; // // destroy object; // delete stmt;; // }; // delete serv;; //; //; // 2. Insert data to data base; // ===============================================; // There is a special syntax of SQL queries which allows to use values; // provided as parameters. For instance, to insert one row into the TESTTABLE created; // with the previous example, one can simply execute a query like:; //; // serv->Query(""INSERT INTO TESTTABLE VALUES (1, 2, \""name1\"", \""value1\"""");; //; // However, when many (100-1000) rows should be inserted, each call of; // TSQLServer::Query() method will cause communication loop with database; // server, and the statement has to be evaluated each time instead of using a prepared statement.; // As a result, insertion of data takes too much time.; //; // TSQLStatement provides a mechanism to insert many rows at once.; // First of all, an appropriat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:1698,test,test,1698,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,2,"['TEST', 'test']","['TESTTABLE', 'test']"
Testability,"; // recursive by an associative and commutative expression to use an; // accumulator variable, thus compiling the typical naive factorial or; // 'fib' implementation into efficient code.; // 3. TRE is performed if the function returns void, if the return; // returns the result returned by the call, or if the function returns a; // run-time constant on all exits from the function. It is possible, though; // unlikely, that the return returns something else (like constant 0), and; // can still be TRE'd. It can be TRE'd if ALL OTHER return instructions in; // the function return the exact same value.; // 4. If it can prove that callees do not access their caller stack frame,; // they are marked as eligible for tail call elimination (by the code; // generator).; //; // There are several improvements that could be made:; //; // 1. If the function has any alloca instructions, these instructions will be; // moved out of the entry block of the function, causing them to be; // evaluated each time through the tail recursion. Safely keeping allocas; // in the entry block requires analysis to proves that the tail-called; // function does not read or write the stack object.; // 2. Tail recursion is only performed if the call immediately precedes the; // return instruction. It's possible that there could be a jump between; // the call and the return.; // 3. There can be intervening operations between the call and the return that; // prevent the TRE from occurring. For example, there could be GEP's and; // stores to memory that will not be read or written by the call. This; // requires some substantial analysis (such as with DSA) to prove safe to; // move ahead of the call, but doing so could allow many more TREs to be; // performed, for example in TreeAdd/TreeAlloc from the treeadd benchmark.; // 4. The algorithm we use to detect if callees access their caller stack; // frames is very primitive.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h:2725,benchmark,benchmark,2725,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h,2,['benchmark'],['benchmark']
Testability,"; // stressIOPlugins [name]; //; // The name parameter is a protocol name, as expected; // in a url. The supported names are: xroot, root, http, https.; // If the name is omitted a selection of schemes are tested; // based on feature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... OK; // Test 4 : Filename formats when adding files to TChain.......... using Event_8a.root and Event_8b.root; // : treename in chain..................................... OK; // : treename to AddFile................................... OK; // : treename in filenames, slash-suffix style............. OK; // : bad treename to AddFile, good in filename............. OK; // : treename and url query in filename...............",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:1473,Test,Test,1473,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,2,['Test'],['Test']
Testability,"; ///\f[; /// \sum_{i=1}^{r} p_{i} = 1; ///\f]; /// and also expectation value of weight w1i equal to W1pi and expectation value; /// of weight w2i equal to W2pi. Weights in both the histograms are random; /// variables with distributions which can be approximated by a normal; /// probability distribution \f$ N(W_{1}p_{i},\sigma_{1i}^{2}) \f$ for the first histogram; /// and by a distribution \f$ N(W_{2}p_{i},\sigma_{2i}^{2}) \f$ for the second.; /// Here \f$ \sigma_{1i}^{2} \f$ and \f$ \sigma_{2i}^{2} \f$ are the variances; /// of w1i and w2i with estimators \f$ s_{1i}^{2} \f$ and \f$ s_{2i}^{2} \f$ respectively.; /// If the hypothesis of identity is valid, then the maximum likelihood and; /// Least Square Method estimator of pi,i=1,...,r, is; ///\f[; /// \hat{p}_{i} = \frac{w_{1i}W_{1}/s_{1i}^{2}+w_{2i}W_{2} /s_{2i}^{2}}{W_{1}^{2}/s_{1i}^{2}+W_{2}^{2}/s_{2i}^{2}}; ///\f]; /// We may then use the test statistic; ///\f[; /// X^{2} = \sum_{i=1}^{r} \frac{(w_{1i}-W_{1}\hat{p}_{i})^{2}}{s_{1i}^{2}} + \sum_{i=1}^{r} \frac{(w_{2i}-W_{2}\hat{p}_{i})^{2}}{s_{2i}^{2}} = \sum_{i=1}^{r} \frac{(W_{1}w_{2i}-W_{2}w_{1i})^{2}}{W_{1}^{2}s_{2i}^{2}+W_{2}^{2}s_{1i}^{2}}; ///\f]; /// and it has approximately a \f$ \chi^{2}_{(r-1)} \f$ distribution [2].; /// The normalized or studentised residuals [6]; ///\f[; /// r_{i} = \frac{w_{1i}-W_{1}\hat{p}_{i}}{s_{1i}\sqrt{1 - \frac{1}{(1+W_{2}^{2}s_{1i}^{2}/W_{1}^{2}s_{2i}^{2})}}}; ///\f]; /// have approximately a normal distribution with mean equal to 0 and standard; /// deviation 1. A recommended minimal expected frequency is equal to 10 for; /// the proposed test.; ///; /// #### Numerical examples:; ///; /// The method described herein is now illustrated with an example.; /// We take a distribution; ///\f[; /// \phi(x) = \frac{2}{(x-10)^{2}+1} + \frac{1}{(x-14)^{2}+1} (1); ///\f]; /// defined on the interval [4,16]. Events distributed according to the formula; /// (1) are simulated to create the unweighted histogram. Uniformly distributed; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:10335,test,test,10335,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"; Denoting by \f$ H_{L-1}\f$ the subspace spanned by \f$\textbf{w}_1,\ldots,\textbf{w}_{L-1}\f$; the function \f$\textbf{w}_L\f$ is by construction (see 4) the projection of the function; \f$ F_L\f$ onto the direction perpendicular to \f$ H_{L-1}\f$. Now, if the; length of \f$\textbf{w}_L\f$ (given by \f$\textbf{w}_L\bullet\textbf{w}_L\f$); is very small compared to the length of \f$\textbf{f}_L\f$ this new; function can not contribute much to the reduction of the sum of; squares of residuals. The test consists then in calculating the angle; \f$ \theta \f$ between the two vectors \f$\textbf{w}_L\f$ \f$ \textbf {f}_L\f$; (see also figure 1) and requiring that it's; *greater* then a threshold value which the user must set (TMultiDimFit::SetMinAngle). \image html multidimfit_img86.gif ""Figure 1: (a) angle \\f$\\theta\\f$ between \\f$\\textbf{w}_l\\f$ and \\f$\\textbf{f}_L\\f$, (b) angle \\f$ \\phi \\f$ between \\f$\\textbf{w}_L\\f$ and \\f$\\textbf{D}\\f$"". ## Test 2; Let \f$\textbf{D}\f$ be the data vector to be fitted. As illustrated in; figure 1, the \f$L^{\mbox{th}}\f$ function \f$\textbf{w}_L\f$; will contribute significantly to the reduction of \f$ S\f$, if the angle; \f$\phi^\prime\f$ between \f$\textbf{w}_L\f$ and \f$\textbf{D}\f$ is smaller than; an upper limit \f$ \phi \f$, defined by the user (MultiDimFit::SetMaxAngle). However, the method automatically readjusts the value of this angle; while fitting is in progress, in order to make the selection criteria; less and less difficult to be fulfilled. The result is that the; functions contributing most to the reduction of \f$ S\f$ are chosen first; (TMultiDimFit::TestFunction). In case \f$ \phi \f$ isn't defined, an alternative method of; performing this second test is used: The \f$L^{\mbox{th}}\f$; function \f$\textbf{f}_L\f$ is accepted if (refer also to equation (13)); \f[; \Delta S_L > \frac{S_{L-1}}{L_{max}-L}; \f]; where \f$ S_{L-1}\f$ is the sum of the \f$ L-1\f$ first residuals from the; \f$ L-1\f$ functi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:10504,Test,Test,10504,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['Test'],['Test']
Testability,"; | yx yy yz |; | zx zy zz |; ~~~. It describes a so called active rotation, i.e. rotation of objects inside; a static system of coordinates. In case you want to rotate the frame and; want to know the coordinates of objects in the rotated system, you should; apply the inverse rotation to the objects. If you want to transform coordinates; from the rotated frame to the original frame you have to apply the direct; transformation. A rotation around a specified axis means counterclockwise rotation around; the positive direction of the axis. ### Declaration, Access, Comparisons. ~~~; TRotation r; // r initialized as identity; TRotation m(r); // m = r; ~~~. There is no direct way to set the matrix elements - to ensure that; a TRotation object always describes a real rotation. But you can get the; values by the member functions XX()..ZZ() or the (,); operator:. ~~~; Double_t xx = r.XX(); // the same as xx=r(0,0); xx = r(0,0);. if (r==m) {...} // test for equality; if (r!=m) {..} // test for inequality; if (r.IsIdentity()) {...} // test for identity; ~~~. ### Rotation around axes; The following matrices describe counterclockwise rotations around coordinate; axes. ~~~; | 1 0 0 |; Rx(a) = | 0 cos(a) -sin(a) |; | 0 sin(a) cos(a) |. | cos(a) 0 sin(a) |; Ry(a) = | 0 1 0 |; | -sin(a) 0 cos(a) |. | cos(a) -sin(a) 0 |; Rz(a) = | sin(a) cos(a) 0 |; | 0 0 1 |; ~~~. and are implemented as member functions RotateX(), RotateY() and RotateZ():. ~~~; r.RotateX(TMath::Pi()); // rotation around the x-axis; ~~~. ### Rotation around arbitrary axis; The member function Rotate() allows to rotate around an arbitrary vector; (not necessary a unit one) and returns the result. ~~~; r.Rotate(TMath::Pi()/3,TVector3(3,4,5));; ~~~. It is possible to find a unit vector and an angle, which describe the; same rotation as the current one:. ~~~; Double_t angle;; TVector3 axis;; r.GetAngleAxis(angle,axis);; ~~~. ### Rotation of local axes; Member function RotateAxes() adds a rotation of local axes to; the cur",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:1286,test,test,1286,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['test'],['test']
Testability,";; ///; /// // Store and retrieve a single bit as bool.; /// using Bool = Bitfield::Element<bool, 0, 1>;; /// Bitfield::set<Bool>(Storage, true);; /// EXPECT_EQ(Storage, 0b00000001);; /// // ^; /// EXPECT_EQ(Bitfield::get<Bool>(Storage), true);; ///; /// // Store and retrieve a 2 bit typed enum.; /// // Note: enum underlying type must be unsigned.; /// enum class SuitEnum : uint8_t { CLUBS, DIAMONDS, HEARTS, SPADES };; /// // Note: enum maximum value needs to be passed in as last parameter.; /// using Suit = Bitfield::Element<SuitEnum, 1, 2, SuitEnum::SPADES>;; /// Bitfield::set<Suit>(Storage, SuitEnum::HEARTS);; /// EXPECT_EQ(Storage, 0b00000101);; /// // ^^; /// EXPECT_EQ(Bitfield::get<Suit>(Storage), SuitEnum::HEARTS);; ///; /// // Store and retrieve a 5 bit value as unsigned.; /// using Value = Bitfield::Element<unsigned, 3, 5>;; /// Bitfield::set<Value>(Storage, 10);; /// EXPECT_EQ(Storage, 0b01010101);; /// // ^^^^^; /// EXPECT_EQ(Bitfield::get<Value>(Storage), 10U);; ///; /// // Interpret the same 5 bit value as signed.; /// using SignedValue = Bitfield::Element<int, 3, 5>;; /// Bitfield::set<SignedValue>(Storage, -2);; /// EXPECT_EQ(Storage, 0b11110101);; /// // ^^^^^; /// EXPECT_EQ(Bitfield::get<SignedValue>(Storage), -2);; ///; /// // Ability to efficiently test if a field is non zero.; /// EXPECT_TRUE(Bitfield::test<Value>(Storage));; ///; /// // Alter Storage changes value.; /// Storage = 0;; /// EXPECT_EQ(Bitfield::get<Bool>(Storage), false);; /// EXPECT_EQ(Bitfield::get<Suit>(Storage), SuitEnum::CLUBS);; /// EXPECT_EQ(Bitfield::get<Value>(Storage), 0U);; /// EXPECT_EQ(Bitfield::get<SignedValue>(Storage), 0);; ///; /// Storage = 255;; /// EXPECT_EQ(Bitfield::get<Bool>(Storage), true);; /// EXPECT_EQ(Bitfield::get<Suit>(Storage), SuitEnum::SPADES);; /// EXPECT_EQ(Bitfield::get<Value>(Storage), 31U);; /// EXPECT_EQ(Bitfield::get<SignedValue>(Storage), -1);; /// \endcode; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Bitfields.h:2433,test,test,2433,interpreter/llvm-project/llvm/include/llvm/ADT/Bitfields.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Bitfields.h,2,['test'],['test']
Testability,"<td> Adjust normalization by given scale factor. Interpretation of number depends on code:; /// - Relative: relative adjustment factor for a normalized function,; /// - NumEvent: scale to match given number of events.; /// - Raw: relative adjustment factor for an un-normalized function.; ///; /// <tr><td> `Name(const chat* name)` <td> Give curve specified name in frame. Useful if curve is to be referenced later; ///; /// <tr><td> `Asymmetry(const RooCategory& c)` <td> Show the asymmetry of the PDF in given two-state category [F(+)-F(-)] / [F(+)+F(-)] rather than; /// the PDF projection. Category must have two states with indices -1 and +1 or three states with; /// indices -1,0 and +1.; ///; /// <tr><td> `ShiftToZero(bool flag)` <td> Shift entire curve such that lowest visible point is at exactly zero. Mostly useful when plotting \f$ -\log(L) \f$ or \f$ \chi^2 \f$ distributions; ///; /// <tr><td> `AddTo(const char* name, double_t wgtSelf, double_t wgtOther)` <td> Add constructed projection to already existing curve with given name and relative weight factors; /// <tr><td> `Components(const char* names)` <td> When plotting sums of PDFs, plot only the named components (*e.g.* only; /// the signal of a signal+background model).; /// <tr><td> `Components(const RooArgSet& compSet)` <td> As above, but pass a RooArgSet of the components themselves.; ///; /// <tr><th><th> Plotting control; /// <tr><td> `DrawOption(const char* opt)` <td> Select ROOT draw option for resulting TGraph object. Currently supported options are ""F"" (fill), ""L"" (line), and ""P"" (points).; /// \note Option ""P"" will cause RooFit to plot (and treat) this pdf as if it were data! This is intended for plotting ""corrected data""-type pdfs such as ""data-minus-background"" or unfolded datasets.; ///; /// <tr><td> `LineStyle(Int_t style)` <td> Select line style by ROOT line style code, default is solid; ///; /// <tr><td> `LineColor(Int_t color)` <td> Select line color by ROOT color code, default is blue; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:4658,log,log,4658,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['log'],['log']
Testability,"= to be used when one or both of the histograms is scaled; /// but the histogram originally was unweighted; /// - by default underflows and overflows are not included:; /// * ""OF"" = overflows included; /// * ""UF"" = underflows included; /// - ""P"" = print chi2, ndf, p_value, igood; /// - ""CHI2"" = returns chi2 instead of p-value; /// - ""CHI2/NDF"" = returns \f$ \chi^{2} \f$/ndf; /// \param[in] res not empty - computes normalized residuals and returns them in this array; ///; /// The current implementation is based on the papers \f$ \chi^{2} \f$ test for comparison; /// of weighted and unweighted histograms"" in Proceedings of PHYSTAT05 and; /// ""Comparison weighted and unweighted histograms"", arXiv:physics/0605123; /// by N.Gagunashvili. This function has been implemented by Daniel Haertl in August 2006.; ///; /// #### Introduction:; ///; /// A frequently used technique in data analysis is the comparison of; /// histograms. First suggested by Pearson [1] the \f$ \chi^{2} \f$ test of; /// homogeneity is used widely for comparing usual (unweighted) histograms.; /// This paper describes the implementation modified \f$ \chi^{2} \f$ tests; /// for comparison of weighted and unweighted histograms and two weighted; /// histograms [2] as well as usual Pearson's \f$ \chi^{2} \f$ test for; /// comparison two usual (unweighted) histograms.; ///; /// #### Overview:; ///; /// Comparison of two histograms expect hypotheses that two histograms; /// represent identical distributions. To make a decision p-value should; /// be calculated. The hypotheses of identity is rejected if the p-value is; /// lower then some significance level. Traditionally significance levels; /// 0.1, 0.05 and 0.01 are used. The comparison procedure should include an; /// analysis of the residuals which is often helpful in identifying the; /// bins of histograms responsible for a significant overall \f$ \chi^{2} \f$ value.; /// Residuals are the difference between bin contents and expected bin; /// contents. Most",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1620,test,test,1620,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"> **cpu** - *default* <td> New vectorized evaluation mode, using faster math functions and auto-vectorisation.; * Since ROOT 6.23, this is the default if `EvalBackend()` is not passed, succeeding the **legacy** backend.; * If all RooAbsArg objects in the model support vectorized evaluation,; * likelihood computations are 2 to 10 times faster than with the **legacy** backend; * - unless your dataset is so small that the vectorization is not worth it.; * The relative difference of the single log-likelihoods with respect to the legacy mode is usually better than \f$10^{-12}\f$,; * and for fit parameters it's usually better than \f$10^{-6}\f$. In past ROOT releases, this backend could be activated with the now deprecated `BatchMode()` option.; * <tr><td> **cuda** <td> Evaluate the likelihood on a GPU that supports CUDA.; * This backend re-uses code from the **cpu** backend, but compiled in CUDA kernels.; * Hence, the results are expected to be identical, modulo some numerical differences that can arise from the different order in which the GPU is summing the log probabilities.; * This backend can drastically speed up the fit if all RooAbsArg object in the model support it.; * <tr><td> **legacy** <td> The original likelihood evaluation method.; * Evaluates the PDF for each single data entry at a time before summing the negative log probabilities.; * <tr><td> **codegen** <td> **Experimental** - Generates and compiles minimal C++ code for the NLL on-the-fly and wraps it in the returned RooAbsReal.; * Also generates and compiles the code for the gradient using Automatic Differentiation (AD) with [Clad](https://github.com/vgvassilev/clad).; * This analytic gradient is passed to the minimizer, which can result in significant speedups for many-parameter fits,; * even compared to the **cpu** backend. However, if one of the RooAbsArg objects in the model does not support the code generation,; * this backend can't be used.; * <tr><td> **codegen_no_grad** <td> **Experimental** - Sa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4497,log,log,4497,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['log'],['log']
Testability,"AnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator for the advertised observables. The generated dependent values should be stored in the proxy; objects. For this, the assignment operator can be used (i.e. `xProxy; = 3.0` ). Never call assign to any proxy not known to be a dependent; via the generation code. Doing so may be ill-defined, e.g. in case; the proxy holds a function, and will trigger an assert. ### Batched function evaluations (Advanced usage). To speed up computations with large numbers of data events in unbinned fits,; it is beneficial to override `doEval()`. Like this, large spans of; computations can be done, without having to call `evaluate()` for each single data event.; `doEval()` should execute the same computation as `evaluate()`, but it; may choose an implementation that is capable of SIMD computations.; If doEval is not implemented, the classic and slower `evaluate()` will be; called for each data event.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5385,assert,assert,5385,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['assert'],['assert']
Testability,"Count = nnodes;. // find the maximum prune strength that still leaves the root's daughter nodes. while ( nnodes > 1 && !forceStop ) {; fPruneStrength += fDeltaPruneStrength;; Log() << ""----------------------------------------------------"" << Endl;; FindListOfNodes((DecisionTreeNode*)dt->GetRoot());; for( UInt_t i = 0; i < fPruneSequence.size(); i++ ); fPruneSequence[i]->SetTerminal(); // prune all the nodes from the sequence; // test the quality of the pruned tree; Double_t quality = 1.0 - dt->TestPrunedTreeQuality()/weights;; fQualityMap.insert(std::make_pair<const Double_t,Double_t>(quality,fPruneStrength));. nnodes = CountNodes((DecisionTreeNode*)dt->GetRoot()); // count the number of nodes in the pruned tree. Log() << ""Prune strength : "" << fPruneStrength << Endl;; Log() << ""Had "" << lastNodeCount << "" nodes, now have "" << nnodes << Endl;; Log() << ""Quality index is: "" << quality << Endl;. if (lastNodeCount == nnodes) errCount++;; else {; errCount=0; // reset counter; if ( nnodes < lastNodeCount / 2 ) {; Log() << ""Decreasing fDeltaPruneStrength to "" << fDeltaPruneStrength/2.0; << "" because the number of nodes in the tree decreased by a factor of 2."" << Endl;; fDeltaPruneStrength /= 2.;; }; }; lastNodeCount = nnodes;; if (errCount > 20) {; Log() << ""Increasing fDeltaPruneStrength to "" << fDeltaPruneStrength*2.0; << "" because the number of nodes in the tree didn't change."" << Endl;; fDeltaPruneStrength *= 2.0;; }; if (errCount > 40) {; Log() << ""Having difficulty determining the optimal prune strength, bailing out!"" << Endl;; forceStop = kTRUE;; }; // reset the tree for the next iteration; for( UInt_t i = 0; i < fPruneSequence.size(); i++ ); fPruneSequence[i]->SetTerminal(false);; fPruneSequence.clear();; }; // from the set of pruned trees, find the one with the optimal quality index; std::multimap<Double_t,Double_t>::reverse_iterator it = fQualityMap.rend(); ++it;; fPruneStrength = it->second;; FindListOfNodes((DecisionTreeNode*)dt->GetRoot());. // adjust the step",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:1496,Log,Log,1496,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,1,['Log'],['Log']
Testability,D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'.................................,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2246,Test,Test,2246,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2924,Test,Test,2924,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"E P I X G L O B A L B E N C H M A R K; // ===============================================================; //; // HEPiX-HEPNT is an organization comprised of UNIX and Windows support staff; // in the High Energy Physics community.; // One of the HEPIX activities is to gather knowledge about new hardware; // and software and to recommend common solutions (eg Scientific Linux); // see: http://wwwhepix.web.cern.ch/wwwhepix/; //; // This benchmark suite has been implemented following several requests; // from HEPIX members interested by a collection of benchmarks representative; // of typical applications.; //; // stressHepix is a single benchmark inclusing several standard ROOT benchmarks; // with a mixture of CPU intensive tests and I/O tests.; // The output of stressHepix is one single number (the ROOTMARK).; // A Pentium IV 2.8GHz running Linux SLC3 and gcc3.2.3 runs this benchmark; // with a reference at 800 ROOTMARKs.; // To build the executable for this benchmark, do; // cd $ROOTSYS/test; // make; //; // The default configuration of ROOT is enough.; // The output of this benchmark looks like:; //; /// stressHepix; ///; ///; ///Starting stressHepix benchmark (details will be in stressHepix.log); ///Takes 442 CP seconds on a 500 rootmarks machine (IBM Thinkpad centrino 1.4GHz VC++7.1); ///Takes 278 CP seconds on a 800 rootmarks reference machine (P IV 2.8 GHz, SLC3 gcc3.2.3); ///Takes 239 CP seconds on a 924 rootmarks machine (MacBook 2.0GHz gcc4.0.1); ///Takes 209 CP seconds on a 1056 rootmarks machine (MacBook 2.0GHz icc9.1); ///Takes 147 CP seconds on a 1512 rootmarks machine (MacPro 3.0GHz gcc4.0.1); ///Takes 142 CP seconds on a 1550 rootmarks machine (AMD64/280, FC5 gcc4.1); ///Takes 121 CP seconds on a 1828 rootmarks machine (MacPro 3.0GHz icc9.1); ///; ///Running : stressFit Minuit 2000, (takes 11 RT seconds on the ref machine); ///Running : stressLinear, (takes 26 RT seconds on the ref machine); ///Running : stressGeometry, (takes 77 RT seconds on the ref m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx:1137,benchmark,benchmark,1137,test/stressHepix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files of a chain......................... OK; // Test 14 : Check correct rebuilt of Event.root in test 13........ OK; // Test 15 : Divert Tree branches to separate files................ OK; // Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK; // Test 17 : Test mkdir............................................ OK; // ******************************************************************; //* Linux pcbrun.cern.ch 2.4.20 #1 Thu Jan 9 12:21:02 MET 2003; //******************************************************************; //stress : Total I/O = 703.7 Mbytes, I = 535.2, O = 168.5; //stress : Compr I/O = 557.0 Mbytes, I = 425.1, O = 131.9; //stress : Real Time = 64.84 seconds Cpu Time = 61.00 seconds; //**********************************************************",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:2450,Test,Test,2450,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,1,['Test'],['Test']
Testability,"H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally delete",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3155,Test,Test,3155,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"ID2, FFIELD, FVALUE) VALUES (?, ?, ?, ?)"", 100);; //; // Here question marks ""?"" indicate where statement parameters can be inserted.; // To specify values of parameters, SetInt(), SetDouble(), SetString() and other; // methods of the TSQLStatement class should be used. Before parameters values; // can be specified, the NextIteration() method of statement class should be called.; // For each new row, NextIteration() has to be called first, then parameters values are; // specified. There is one limitation for most type-aware DBMS - once a parameter is set as integer via; // SetInt(), all other rows should be specified as integer. At the end,; // TSQLStatement::Process() should be called. Here a small example:; //; // // first, create statement; // TSQLStatement* stmt = serv->Statement(""INSERT INTO TESTTABLE (ID1, ID2, FFIELD, FVALUE) VALUES (?, ?, ?, ?)"", 100);; //; // for (int n=0;n<357;n++); // if (stmt->NextIteration()) {; // stmt->SetInt(0, 123);; // stmt->SetUInt(1, n+10);; // stmt->SetString(2, Form(""name %d"",n), 200);; // stmt->SetString(3, Form(""value %d"", n+10), 200);; // }; //; // stmt->Process();; // delete stmt;; //; // The second argument in the TSQLServer::Statement() method specifies the depth of; // of buffers which are used to keep parameter values (100 in the example). It is not; // a limitation of the number of rows which can be inserted with the statement.; // When buffers are filled, they will be submitted to database and can be; // reused again. This happens transparent to the user in the NextIteration(); // method.; //; // Oracle and some ODBC drivers support buffering of parameter values and,; // as a result, bulk insert (update) operation. MySQL (native driver and; // MyODBC 3) does not support such a mode of operation, therefore adding; // new rows will result in communication loop to database.; //; // Local databases (SQLite3) do not use any buffering at all in the TSQLStatement; // implementation (but inside the library). They still profit ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:3804,TEST,TESTTABLE,3804,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['TEST'],['TESTTABLE']
Testability,"Integer: integer number; - kNESRealOne: real number with one digit (no exponent); - kNESRealTwo: real number with two digits (no exponent); - kNESRealThree: real number with three digits (no exponent); - kNESRealFour: real number with four digits (no exponent); - kNESReal: arbitrary real number; - kNESDegree: angle in degree:minutes:seconds format; - kNESMinSec: time in minutes:seconds format; - kNESMinSecCent: time in minutes:seconds.centiseconds format; - kNESHourMin: time in hour:minutes format; - kNESHourMinSec: time in hour:minutes:seconds format; - kNESDayMYear: date in day/month/year format; - kNESMDayYear: date in month/day/year format; - kNESHex: hex number. The following attributes can be specified:; - kNEAAnyNumber: any number is allowed; - kNEANonNegative: only non-negative numbers are allowed; - kNEAPositive: only positive numbers are allowed. Explicit limits can be specified individually:; - kNELNoLimits: no limits; - kNELLimitMin: lower limit only; - kNELLimitMax upper limit only; - kNELLimitMinMax both lower and upper limits. TGNumberEntryField is a plain vanilla entry field, whereas; TGNumberEntry adds two small buttons to increase and decrease the; numerical value in the field. The number entry widgets also support; using the up and down cursor keys to change the numerical values.; The step size can be selected with control and shift keys:; - -- small step (1 unit/factor of 3); - shift medium step (10 units/factor of 10); - control large step (100 units/factor of 30); - shift-control huge step (1000 units/factor of 100). The steps are either linear or logarithmic. The default behaviour; is set when the entry field is created, but it can be changed by; pressing the alt key at the same time. Changing the number in the widget will generate the event:; - kC_TEXTENTRY, kTE_TEXTCHANGED, widget id, 0. Hitting the enter key will generate:; - kC_TEXTENTRY, kTE_ENTER, widget id, 0. Hitting the tab key will generate:; - kC_TEXTENTRY, kTE_TAB, widget id, 0. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:2615,log,logarithmic,2615,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['log'],['logarithmic']
Testability,"LL, name and comment are terminated with; a zero byte, and that if extra is not Z_NULL, that extra_len bytes are; available there. If hcrc is true, a gzip header crc is included. Note that; the current versions of the command-line version of gzip (up through version; 1.3.x) do not support header crc's, and will report that it is a ""multi-part; gzip file"" and give up. If deflateSetHeader is not used, the default gzip header has text false,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1467,log,logarithm,1467,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['log'],['logarithm']
Testability,"LL, name and comment are terminated with; a zero byte, and that if extra is not Z_NULL, that extra_len bytes are; available there. If hcrc is true, a gzip header crc is included. Note that; the current versions of the command-line version of gzip (up through version; 1.3.x) do not support header crc's, and will report that it is a ""multi-part; gzip file"" and give up. If deflateSetHeader is not used, the default gzip header has text false,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate comp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1467,log,logarithm,1467,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['log'],['logarithm']
Testability,"OCCurve object calling GetROC.; \ingroup TMVA; */; /*! \class TMVA::Classification; * Class to perform two class classification.; * The first step before any analysis is to prepare the data,; * to do that you need to create an object of TMVA::DataLoader,; * in this object you need to configure the variables and the number of events; * to train/test.; * The class TMVA::Experimental::Classification needs a TMVA::DataLoader object,; * optional a TFile object to save the results and some extra options in a string; * like ""V:Color:Transformations=I;D;P;U;G:Silent:DrawProgressBar:ModelPersistence:Jobs=2"" where:; * V = verbose output; * Color = coloured screen output; * Silent = batch mode: boolean silent flag inhibiting any output from TMVA; * Transformations = list of transformations to test.; * DrawProgressBar = draw progress bar to display training and testing.; * ModelPersistence = to save the trained model in xml or serialized files.; * Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method.; * Basic example.; * \code; void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();. TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }. // Register the training and test trees. TTree *signalTree = (TTree *)input->Get(""TreeS"");; TTree *background = (TTree *)input->Get(""TreeB"");. TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");. dataloader->AddVariable(""myvar1 := var1+var2"", 'F');; dataloader->AddVariable(""myvar2 := var1-var2"", ""Expression 2"", """", 'F');; dataloader->AddVariable(""var3"", ""Variable 3"", ""units"", 'F');; dataloader->AddVariable(""var4"", ""Variable 4"", ""units"", 'F'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h:1388,test,test,1388,tmva/tmva/inc/TMVA/Classification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h,1,['test'],['test']
Testability,"Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file path of her/his choice, the log file is never * //; // * deleted. * //; // * * //; // * SKIPPED means that the test cannot be run. * //; // * * //; // * New tests can be easily added by providing a function performing the * ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3540,Test,Test,3540,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"Partitioning.h ---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements BalancedPartitioning, a recursive balanced graph; // partitioning algorithm.; //; // The algorithm is used to find an ordering of FunctionNodes while optimizing; // a specified objective. The algorithm uses recursive bisection; it starts; // with a collection of unordered FunctionNodes and tries to split them into; // two sets (buckets) of equal cardinality. Each bisection step is comprised of; // iterations that greedily swap the FunctionNodes between the two buckets while; // there is an improvement of the objective. Once the process converges, the; // problem is divided into two sub-problems of half the size, which are; // recursively applied for the two buckets. The final ordering of the; // FunctionNodes is obtained by concatenating the two (recursively computed); // orderings.; //; // In order to speed up the computation, we limit the depth of the recursive; // tree by a specified constant (SplitDepth) and apply at most a constant; // number of greedy iterations per split (IterationsPerSplit). The worst-case; // time complexity of the implementation is bounded by O(M*log^2 N), where; // N is the number of FunctionNodes and M is the number of; // FunctionNode-UtilityNode edges; (assuming that any collection of D; // FunctionNodes contains O(D) UtilityNodes). Notice that the two different; // recursive sub-problems are independent and thus can be efficiently processed; // in parallel.; //; // Reference:; // * Optimizing Function Layout for Mobile Applications,; // https://arxiv.org/abs/2211.09285; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BalancedPartitioning.h:1494,log,log,1494,interpreter/llvm-project/llvm/include/llvm/Support/BalancedPartitioning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BalancedPartitioning.h,1,['log'],['log']
Testability,"R""(//auto-generated test macro; #include <RooFit/Detail/MathFuncs.h>; #include <Math/CladDerivator.h>. #pragma cling optimize(2); )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:20,test,test,20,roofit/roofitcore/src/RooFuncWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx,1,['test'],['test']
Testability,"R""(; int CLASS_NAME::getGenerator(const RooArgSet &directVars, RooArgSet &generateVars, bool /*staticInitOK*/) const; {; // LIST HERE OVER WHICH VARIABLES INTERNAL GENERATION IS SUPPORTED, ASSIGN A; // NUMERIC CODE FOR EACH SUPPORTED (SET OF) PARAMETERS. THE EXAMPLE BELOW; // ASSIGNS CODE 1 TO INTEGRATION OVER VARIABLE X. YOU CAN ALSO IMPLEMENT; // MORE THAN ONE GENERATOR CONFIGURATION BY REPEATING THE matchArgs; // EXPRESSION MULTIPLE TIMES. IF THE FLAG staticInitOK IS TRUE, THEN IT IS; // SAFE TO PRECALCULATE INTERMEDIATE QUANTITIES IN initGenerator(), IF IT IS; // NOT SET THEN YOU SHOULD NOT ADVERTISE ANY GENERATOR METHOD THAT RELIES ON; // PRECALCULATIONS IN initGenerator(). // if (matchArgs(directVars,generateVars,x)) return 1;; return 0;; }. void CLASS_NAME::generateEvent(int code); {; // GENERATE SET OF OBSERVABLES DEFINED BY RETURN CODE ASSIGNED BY; // getGenerator(). RETURN THE GENERATED VALUES BY ASSIGNING THEM TO THE; // PROXY DATA MEMBERS THAT REPRESENT THE CHOSEN OBSERVABLES. // assert(code==1);; // x = 0;; return;; }; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:1007,assert,assert,1007,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['assert'],['assert']
Testability,"R""(; namespace ROOT::Internal::RDF::Testing{; int myInt{42};; }; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_compgraph.cxx:36,Test,Testing,36,tree/dataframe/test/dataframe_compgraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_compgraph.cxx,1,['Test'],['Testing']
Testability,"R""(Path to SavedModel from the previous training iteration.; The directory is also expected to contain a JSON specification of the ; outputs expected to be logged, where the first entry must be the ; inlining decision. The file containing the specification should be ; called output_spec.json. The expected JSON value is an array of ; dictionaries. Each dictionary should have 2 keys: . - ""tensor_spec, followed by the TensorSpec description of the; output; and ; - ""logging_name"", a string indicating the name to use when; logging the output values. . Example:; [; {; ""logging_name"" : ""some_name"", ; ""tensor_spec"" : { ; ""name"" : ""model_name"", ; ""port"" : 0,; ""shape"" : [2, 3],; ""type"" : ""float""; }; }; ]. The first value must always correspond to the decision.)""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DevelopmentModeInlineAdvisor.cpp:156,log,logged,156,interpreter/llvm-project/llvm/lib/Analysis/DevelopmentModeInlineAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DevelopmentModeInlineAdvisor.cpp,2,['log'],"['logged', 'logging']"
Testability,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:73,test,tests,73,roofit/roofitcore/test/stressRooFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx,8,"['log', 'test']","['logged', 'test', 'tests']"
Testability,"R""(usage: stressRooStats [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooStats_ref.root""); -w : write reference file, instead of reading file and running comparison tests; -n N : only run test with sequential number N; -a : run full suite of tests (default is basic suite); this overrides the -n single test option; -c : dump file stressRooStats_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx:75,test,tests,75,roofit/roostats/test/stressRooStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx,8,['test'],"['test', 'tests']"
Testability,"R""cpp(; #include <Math/CladDerivator.h>; #include ""TMath.h""; double l(double x){ return TMath::Log(2*x);})cpp""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx:95,Log,Log,95,math/mathcore/test/CladDerivatorTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx,1,['Log'],['Log']
Testability,"R""cpp(; #include <Math/CladDerivator.h>; #include ""TMath.h""; double l2(double x){ return TMath::Log(2*x);})cpp""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx:96,Log,Log,96,math/mathcore/test/CladDerivatorTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx,1,['Log'],['Log']
Testability,"R""cpp(; float testfunc(int a, int b, float c) {; return a + b * c;; }; )cpp""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:14,test,testfunc,14,core/metacling/test/TClingCallFuncTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx,1,['test'],['testfunc']
Testability,"S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2462,Test,Test,2462,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file path of her/his choice, the log file is never * //; // * deleted. * //; // * * //; // * SKIPPED means that the test cannot be run. * //; // * * //; // * New tests can be easily added by providing a function performing the * //; // * test and a name for the test; see examples below. * //; // * * //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3617,Test,Test,3617,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"T SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It offers much better speed, but for 64-bit applications only.; Name Speed on 64 bits Speed on 32 bits; XXH64 13.8 GB/s 1.9 GB/s; XXH32 6.8 GB/s 6.0 GB/s; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2425,test,test,2425,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['test'],['test']
Testability,"T version 6.09/03**. When a TGraph is drawn, the X-axis is drawn with increasing values from left to; right and the Y-axis from bottom to top. The two options `RX` and `RY` allow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18650,log,logarithmic,18650,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['log'],['logarithmic']
Testability,"TANT NOTE2: The branches created by this function will have names; /// corresponding to the collection or object names. It is important; /// to give names to collections to avoid misleading branch names or; /// identical branch names. By default collections have a name equal to; /// the corresponding class name, e.g. the default name for a TList is ""TList"".; ///; /// And in general, in case two or more master branches contain subbranches; /// with identical names, one must add a ""."" (dot) character at the end; /// of the master branch name. This will force the name of the subbranches; /// to be of the form `master.subbranch` instead of simply `subbranch`.; /// This situation happens when the top level object; /// has two or more members referencing the same class.; /// For example, if a Tree has two branches B1 and B2 corresponding; /// to objects of the same class MyClass, one can do:; /// ~~~ {.cpp}; /// tree.Branch(""B1."",""MyClass"",&b1,8000,1);; /// tree.Branch(""B2."",""MyClass"",&b2,8000,1);; /// ~~~; /// if MyClass has 3 members a,b,c, the two instructions above will generate; /// subbranches called B1.a, B1.b ,B1.c, B2.a, B2.b, B2.c; ///; /// Example:; /// ~~~ {.cpp}; /// {; /// TTree T(""T"",""test list"");; /// TList *list = new TList();; ///; /// TObjArray *a1 = new TObjArray();; /// a1->SetName(""a1"");; /// list->Add(a1);; /// TH1F *ha1a = new TH1F(""ha1a"",""ha1"",100,0,1);; /// TH1F *ha1b = new TH1F(""ha1b"",""ha1"",100,0,1);; /// a1->Add(ha1a);; /// a1->Add(ha1b);; /// TObjArray *b1 = new TObjArray();; /// b1->SetName(""b1"");; /// list->Add(b1);; /// TH1F *hb1a = new TH1F(""hb1a"",""hb1"",100,0,1);; /// TH1F *hb1b = new TH1F(""hb1b"",""hb1"",100,0,1);; /// b1->Add(hb1a);; /// b1->Add(hb1b);; ///; /// TObjArray *a2 = new TObjArray();; /// a2->SetName(""a2"");; /// list->Add(a2);; /// TH1S *ha2a = new TH1S(""ha2a"",""ha2"",100,0,1);; /// TH1S *ha2b = new TH1S(""ha2b"",""ha2"",100,0,1);; /// a2->Add(ha2a);; /// a2->Add(ha2b);; ///; /// T.Branch(list,16000,2);; /// T.Print();; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2421,test,test,2421,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['test'],['test']
Testability,"TIME_START First Use; // b1: [0,9] [3,4] [8,9]; // b2: [0,9] [6,9]; // b3: [2,4] [3,4]; // b4: [5,7] [6,7]; // b5: [5,7] [6,7]; //; // For the intervals on the left, the best we can do is overlap two; // variables (b3 and b4, for example); this gives us a stack size of; // 4*1024 bytes, not ideal. When treating first-use as the start of a; // lifetime, we can additionally overlap b1 and b5, giving us a 3*1024; // byte stack (better).; //; // Degenerate Slots:; // -----------------; //; // Relying entirely on first-use of stack slots is problematic,; // however, due to the fact that optimizations can sometimes migrate; // uses of a variable outside of its lifetime start/end region. Here; // is an example:; //; // int bar() {; // char b1[1024], b2[1024];; // if (...) {; // <uses of b2>; // return y;; // } else {; // <uses of b1>; // while (...) {; // char b3[1024];; // <uses of b3>; // }; // }; // }; //; // Before optimization, the control flow graph for the code above; // might look like the following:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------- block 2 -------+; // 2| <uses of b2> | 3| <uses of b1> |; // +-----------------------+ +-----------------------+; // | |; // | +------- block 3 -------+ <-\.; // | 4| <while condition> | |; // | +-----------------------+ |; // | / | |; // | / +------- block 4 -------+; // \ / 5| LIFETIME_START b3 | |; // \ / 6| <uses of b3> | |; // \ / 7| LIFETIME_END b3 | |; // \ | +------------------------+ |; // \ | \ /; // +------ block 5 -----+ \---------------; // 8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +---------------------+; //; // During optimization, however, it can happen that an instruction; // computing an address in ""b3"" (for example, a loop-invariant GEP) is; // hoisted up out of the loop from block 4 to block 2. [Note that; // this is not an actual load from the stack, o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:8422,test,test,8422,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['test'],['test']
Testability,"Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2693,Test,Test,2693,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"The XML file is built in memory before being dumped to disk.; //; // Like for normal ROOT files, XML files use the same I/O mechanism; // exploiting the ROOT/CINT dictionary. Any class having a dictionary; // can be saved in XML format.; //; // This first implementation does not support subdirectories; // or Trees.; //; // The shared library libRXML.so may be loaded dynamically; // via gSystem->Load(""libRXML""). This library is automatically; // loaded by the plugin manager as soon as a XML file is created; // via, eg; // TFile::Open(""file.xml"",""recreate"");; // TFile::Open returns a TXMLFile object. When a XML file is open in write mode,; // one can use the normal TObject::Write to write an object in the file.; // Alternatively one can use the new functions TDirectoryFile::WriteObject and; // TDirectoryFile::WriteObjectAny to write a TObject* or any class not deriving; // from TObject.; //; // example of a session saving a histogram to a XML file; // =====================================================; // TFile *f = TFile::Open(""Example.xml"",""recreate"");; // TH1F *h = new TH1F(""h"",""test"",1000,-2,2);; // h->FillRandom(""gaus"");; // h->Write();; // delete f;; //; // example of a session reading the histogram from the file; // ========================================================; // TFile *f = TFile::Open(""Example.xml"");; // TH1F *h = (TH1F*)f->Get(""h"");; // h->Draw();; //; // A new option in the canvas ""File"" menu is available to save; // a TCanvas as a XML file. One can also do; // canvas->Print(""Example.xml"");; //; // Configuring ROOT with the option ""xml""; // ======================================; // The XML package is enabled by default; //; // documentation; // =============; // See also classes TBufferXML, TKeyXML, TXMLEngine, TXMLSetup and TXMLPlayer.; // An example of XML file corresponding to the small example below; // can be found at http://root.cern/root/Example.xml; //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:2215,test,test,2215,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['test'],['test']
Testability,"This function searches for peaks in source spectrum. It is based on; /// deconvolution method. First the background is removed (if desired), then; /// Markov smoothed spectrum is calculated (if desired), then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1118,log,logical,1118,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['log'],['logical']
Testability,"TimeFormat(""%d/%m/%y"");; ht2->Draw();. ct->cd(3);; ht3->GetXaxis()->SetLabelSize(0.06);; TDatime dh(2001,9,23,15,00,00);; ht3->GetXaxis()->SetTimeDisplay(1);; ht3->GetXaxis()->SetTimeOffset(dh.Convert());; ht3->Draw();; }; End_Macro. The histogram limits times in seconds. If `wmin` and `wmax` are the histogram; limits, the time axis will spread around the time offset value from `TimeOffset+wmin`; to `TimeOffset+wmax`. Until now all the examples had a lowest value equal to 0.; The following example demonstrates how to define the histogram limits relatively; to the time offset value. Begin_Macro(source); {; // Define the time offset as 2003, January 1st; TDatime T0(2003,1,1,0,0,0);; auto X0 = T0.Convert();; gStyle->SetTimeOffset(X0);. // Define the lowest histogram limit as 2002, September 23rd; TDatime T1(2002,9,23,0,0,0);; auto X1 = T1.Convert()-X0;. // Define the highest histogram limit as 2003, March 7th; TDatime T2(2003,3,7,0,0,0);; auto X2 = T2.Convert(1)-X0;. auto h1 = new TH1F(""h1"",""test"",100,X1,X2);. TRandom r;; for (Int_t i=0;i<30000;i++) {; Double_t noise = r.Gaus(0.5*(X1+X2),0.1*(X2-X1));; h1->Fill(noise);; }. h1->GetXaxis()->SetTimeDisplay(1);; h1->GetXaxis()->SetLabelSize(0.03);; h1->GetXaxis()->SetTimeFormat(""%Y/%m/%d"");; h1->Draw();; }; End_Macro. Usually time axis are created automatically via histograms, but one may also want; to draw a time axis outside an ""histogram context"". Therefore it is useful to; understand how TGaxis works for such axis. The time offset can be defined using one of the three methods described before.; The time axis will spread around the time offset value. Actually it will go from; `TimeOffset+wmin` to `TimeOffset+wmax` where `wmin` and `wmax` are the minimum; and maximum values (in seconds) of the axis. Let's take again an example. Having; defined ""2003, February 28 at 12h"" we would like to see the axis a day before and; a day after. A TGaxis can be created the following way (a day has 86400 seconds):. ~~~ {.cpp}; TGaxis *ax",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:17588,test,test,17588,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['test'],['test']
Testability,"Vec - we just need to *write what; we mean*:; ~~~{.cpp}; auto goodMuons_pt = mu_pt[ (mu_pt > 10.f && abs(mu_eta) <= 2.f && mu_charge == -1) ]; ~~~; Now the clean collection of transverse momenta can be used within the rest of the data analysis, for; example to fill a histogram. \anchor operationsandfunctions; ## Arithmetic operations, logical operations and mathematical functions; Arithmetic operations on RVec instances can be performed: for example, they can be added, subtracted, multiplied.; ~~~{.cpp}; RVec<double> v1 {1.,2.,3.,4.};; RVec<float> v2 {5.f,6.f,7.f,8.f};; auto v3 = v1+v2;; auto v4 = 3 * v1;; ~~~; The supported operators are ; - +, -, *, /; - +=, -=, *=, /=; - <, >, ==, !=, <=, >=, &&, ||; - ~, !; - &, |, ^; - &=, |=, ^=; - <<=, >>=. The most common mathematical functions are supported. It is possible to invoke them passing ; RVecs as arguments.; - abs, fdim, fmod, remainder; - floor, ceil, trunc, round, lround, llround; - exp, exp2, expm1; - log, log10, log2, log1p; - pow; - sqrt, cbrt; - sin, cos, tan, asin, acos, atan, atan2, hypot; - sinh, cosh, tanh, asinh, acosh; - erf, erfc; - lgamma, tgamma. If the VDT library is available, the following functions can be invoked. Internally the calculations; are vectorized:; - fast_expf, fast_logf, fast_sinf, fast_cosf, fast_tanf, fast_asinf, fast_acosf, fast_atanf; - fast_exp, fast_log, fast_sin, fast_cos, fast_tan, fast_asin, fast_acos, fast_atan. \anchor owningandadoptingmemory; ## Owning and adopting memory; RVec has contiguous memory associated to it. It can own it or simply adopt it. In the latter case,; it can be constructed with the address of the memory associated to it and its length. For example:; ~~~{.cpp}; std::vector<int> myStlVec {1,2,3};; RVec<int> myRVec(myStlVec.data(), myStlVec.size());; ~~~; In this case, the memory associated to myStlVec and myRVec is the same, myRVec simply ""adopted it"".; If any method which implies a re-allocation is called, e.g. *emplace_back* or *resize*, the adopted; me",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:4017,log,log,4017,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['log'],['log']
Testability,YtoPixel = \frac{pyrange}{yrange}; /// \f]; /// where:; /// \f[; /// pylow = fAbsYlowNDC \times fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \ti,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2089,Log,Log,2089,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"\f[; ///\hat{p}_{i}= \frac{n_{i}+m_{i}}{N+M}; /// \f]; /// and then; /// \f[; /// X^{2} = \sum_{i=1}^{r}\frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r}\frac{(m_{i}-M\hat{p}_{i})^{2}}{M\hat{p}_{i}} =\frac{1}{MN} \sum_{i=1}^{r}\frac{(Mn_{i}-Nm_{i})^{2}}{n_{i}+m_{i}}; /// \f]; /// has approximately a \f$ \chi^{2}_{(r-1)} \f$ distribution [3].; /// The comparison procedure can include an analysis of the residuals which; /// is often helpful in identifying the bins of histograms responsible for; /// a significant overall \f$ \chi^{2} \f$ value. Most convenient for; /// analysis are the adjusted (normalized) residuals [4]; /// \f[; /// r_{i} = \frac{n_{i}-N\hat{p}_{i}}{\sqrt{N\hat{p}_{i}}\sqrt{(1-N/(N+M))(1-(n_{i}+m_{i})/(N+M))}}; /// \f]; /// If hypotheses of homogeneity are valid then residuals ri are; /// approximately independent and identically distributed random variables; /// having N(0,1) distribution. The application of the \f$ \chi^{2} \f$ test has; /// restrictions related to the value of the expected frequencies Npi,; /// Mpi, i=1,...,r. A conservative rule formulated in [5] is that all the; /// expectations must be 1 or greater for both histograms. In practical; /// cases when expected frequencies are not known the estimated expected; /// frequencies \f$ M\hat{p}_{i}, N\hat{p}_{i}, i=1,...,r \f$ can be used.; ///; /// #### Unweighted and weighted histograms comparison:; ///; /// A simple modification of the ideas described above can be used for the; /// comparison of the usual (unweighted) and weighted histograms. Let us; /// denote the number of events in the ith bin in the unweighted; /// histogram as ni and the common weight of events in the ith bin of the; /// weighted histogram as wi. The total number of events in the; /// unweighted histogram is equal to; ///\f[; /// N = \sum_{i=1}^{r} n_{i}; ///\f]; /// and the total weight of events in the weighted histogram is equal to; ///\f[; /// W = \sum_{i=1}^{r} w_{i}; ///\f]; /// Let us formulate ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:5386,test,test,5386,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,\f]; /// \f[; /// fYtoPixel = \frac{pyrange}{yrange}; /// \f]; /// where:; /// \f[; /// pylow = fAbsYlowNDC \times fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \time,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2070,Log,Log,2070,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"\right); \f]; where the relation [9] have been taken into account. The; contribution of the \f$L^{\mbox{th}}\f$ function to the reduction of S, is; given by; \f[; \Delta S_L = a^2_L\left(\textbf{w}_L^T\bullet\textbf{w}_L\right); \f]; Two test are now applied to decide whether this \f$L^{\mbox{th}}\f$; function is to be included in the final expression, or not. ## Test 1; Denoting by \f$ H_{L-1}\f$ the subspace spanned by \f$\textbf{w}_1,\ldots,\textbf{w}_{L-1}\f$; the function \f$\textbf{w}_L\f$ is by construction (see 4) the projection of the function; \f$ F_L\f$ onto the direction perpendicular to \f$ H_{L-1}\f$. Now, if the; length of \f$\textbf{w}_L\f$ (given by \f$\textbf{w}_L\bullet\textbf{w}_L\f$); is very small compared to the length of \f$\textbf{f}_L\f$ this new; function can not contribute much to the reduction of the sum of; squares of residuals. The test consists then in calculating the angle; \f$ \theta \f$ between the two vectors \f$\textbf{w}_L\f$ \f$ \textbf {f}_L\f$; (see also figure 1) and requiring that it's; *greater* then a threshold value which the user must set (TMultiDimFit::SetMinAngle). \image html multidimfit_img86.gif ""Figure 1: (a) angle \\f$\\theta\\f$ between \\f$\\textbf{w}_l\\f$ and \\f$\\textbf{f}_L\\f$, (b) angle \\f$ \\phi \\f$ between \\f$\\textbf{w}_L\\f$ and \\f$\\textbf{D}\\f$"". ## Test 2; Let \f$\textbf{D}\f$ be the data vector to be fitted. As illustrated in; figure 1, the \f$L^{\mbox{th}}\f$ function \f$\textbf{w}_L\f$; will contribute significantly to the reduction of \f$ S\f$, if the angle; \f$\phi^\prime\f$ between \f$\textbf{w}_L\f$ and \f$\textbf{D}\f$ is smaller than; an upper limit \f$ \phi \f$, defined by the user (MultiDimFit::SetMaxAngle). However, the method automatically readjusts the value of this angle; while fitting is in progress, in order to make the selection criteria; less and less difficult to be fulfilled. The result is that the; functions contributing most to the reduction of \f$ S\f$ are chosen first",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:10035,test,test,10035,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['test'],['test']
Testability,"], [FCT, vectors]; ///; /// Now look, what could be inside [FCT, ""others""], for example:; /// [FCT, ""others""] =; /// [; /// [double 0.1], [double 1.23],; /// [i32 1], [i32 2],; /// { double 1.0 }, ; StructTyID, NumElements = 1; /// { i32 1 }, ; StructTyID, NumElements = 1; /// { double 1, i32 1 }, ; StructTyID, NumElements = 2; /// { i32 1, double 1 } ; StructTyID, NumElements = 2; /// ]; ///; /// Let's explain the order. Float numbers will be less than integers, just; /// because of cmpType terms: FloatTyID < IntegerTyID.; /// Floats (with same fltSemantics) are sorted according to their value.; /// Then you can see integers, and they are, like a floats,; /// could be easy sorted among each others.; /// The structures. Structures are grouped at the tail, again because of their; /// TypeID: StructTyID > IntegerTyID > FloatTyID.; /// Structures with greater number of elements are greater. Structures with; /// greater elements going first are greater.; /// The same logic with vectors, arrays and other possible complex types.; ///; /// Bitcastable constants.; /// Let's assume, that some constant, belongs to some group of; /// ""so-called-equal"" values with different types, and at the same time; /// belongs to another group of constants with equal types; /// and ""really"" equal values.; ///; /// Now, prove that this is impossible:; ///; /// If constant A with type TyA is bitcastable to B with type TyB, then:; /// 1. All constants with equal types to TyA, are bitcastable to B. Since; /// those should be vectors (if TyA is vector), pointers; /// (if TyA is pointer), or else (if TyA equal to TyB), those types should; /// be equal to TyB.; /// 2. All constants with non-equal, but bitcastable types to TyA, are; /// bitcastable to B.; /// Once again, just because we allow it to vectors and pointers only.; /// This statement could be expanded as below:; /// 2.1. All vectors with equal bitwidth to vector A, has equal bitwidth to; /// vector B, and thus bitcastable to B as well.; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h:3427,log,logic,3427,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h,1,['log'],['logic']
Testability,"_longjmp_args;; ///; /// The thrown value here is a pointer to __wasm_longjmp_args struct object. We; /// use this struct to transfer two values by throwing a single value. Wasm; /// throw and catch instructions are capable of throwing and catching multiple; /// values, but it also requires multivalue support that is currently not very; /// reliable.; /// TODO Switch to throwing and catching two values without using the struct; ///; /// All longjmpable function calls will be converted to an invoke that will; /// unwind to this catchpad in case a longjmp occurs. Within the catchpad, we; /// test the thrown values using testSetjmp function as we do for Emscripten; /// SjLj. The main difference is, in Emscripten SjLj, we need to transform every; /// longjmpable callsite into a sequence of code including testSetjmp() call; in; /// Wasm SjLj we do the testing in only one place, in this catchpad.; ///; /// After testing calling testSetjmp(), if the longjmp does not correspond to; /// one of the setjmps within the current function, it rethrows the longjmp; /// by calling __wasm_longjmp(). If it corresponds to one of setjmps in the; /// function, we jump to the beginning of the function, which contains a switch; /// to each post-setjmp BB. Again, in Emscripten SjLj, this switch is added for; /// every longjmpable callsite; in Wasm SjLj we do this only once at the top of; /// the function. (after setjmpTable/setjmpTableSize initialization); ///; /// The below is the pseudocode for what we have described; ///; /// entry:; /// Initialize setjmpTable and setjmpTableSize; ///; /// setjmp.dispatch:; /// switch %label {; /// label 1: goto post-setjmp BB 1; /// label 2: goto post-setjmp BB 2; /// ...; /// default: goto splitted next BB; /// }; /// ...; ///; /// bb:; /// invoke void @foo() ;; foo is a longjmpable function; /// to label %next unwind label %catch.dispatch.longjmp; /// ...; ///; /// catch.dispatch.longjmp:; /// %0 = catchswitch within none [label %catch.longjmp] unwind ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:9956,test,testing,9956,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,2,['test'],"['testSetjmp', 'testing']"
Testability,"_paramIter->Next()) ) {; low = (RooAbsReal*)lowIntIter->Next() ;; high = (RooAbsReal*)highIntIter->Next() ;. if(param->getVal()>0) {; value += param->getVal()*(high->getVal() - nominal );; } else {; value += param->getVal()*(nominal - low->getVal());; }; ++i;; }; */; /* KC: the code below is wrong. Can't pull out a constant change to a non-linear shape deformation.; while( (param=(RooAbsReal*)paramIter.next()) ) {; low = (RooAbsReal*)lowIntIter.next() ;; high = (RooAbsReal*)highIntIter.next() ;. if(_interpCode.empty() || _interpCode.at(i)==0){; // piece-wise linear; if(param->getVal()>0); value += param->getVal()*(high->getVal() - nominal );; else; value += param->getVal()*(nominal - low->getVal());; } else if(_interpCode.at(i)==1){; // piece-wise log; if(param->getVal()>=0); value *= pow(high->getVal()/nominal, +param->getVal());; else; value *= pow(low->getVal()/nominal, -param->getVal());; } else if(_interpCode.at(i)==2){; // parabolic with linear; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }; } else if(_interpCode.at(i)==3){; //parabolic version of log-normal; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }. } else {; coutE(InputArguments) << ""PiecewiseInterpolation::analyticalIntegralWN ERROR: "" << param->GetName(); << "" with unknown interpolation code"" << endl ;; }; ++i;; }; */; // cout << ""value = "" << value <<endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:1467,log,log-normal,1467,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['log'],['log-normal']
Testability,"_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator for the advertised observables. The generated dependent values should be stored in the proxy; objects. For this, the assignment operator can be used (i.e. `xProxy; = 3.0` ). Never call assign to any proxy not known to be a dependent; vi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4297,assert,assert,4297,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['assert'],['assert']
Testability,"_t] if kTRUE the dataset related tests are skipped * //; // * * //; // * A certain number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : E",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2005,Test,Test,2005,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"a distribution; ///\f[; /// \phi(x) = \frac{2}{(x-10)^{2}+1} + \frac{1}{(x-14)^{2}+1} (1); ///\f]; /// defined on the interval [4,16]. Events distributed according to the formula; /// (1) are simulated to create the unweighted histogram. Uniformly distributed; /// events are simulated for the weighted histogram with weights calculated by; /// formula (1). Each histogram has the same number of bins: 20. Fig.1 shows; /// the result of comparison of the unweighted histogram with 200 events; /// (minimal expected frequency equal to one) and the weighted histogram with; /// 500 events (minimal expected frequency equal to 25); /// Begin_Macro; /// ../../../tutorials/math/chi2test.C; /// End_Macro; /// Fig 1. An example of comparison of the unweighted histogram with 200 events; /// and the weighted histogram with 500 events:; /// 1. unweighted histogram;; /// 2. weighted histogram;; /// 3. normalized residuals plot;; /// 4. normal Q-Q plot of residuals.; ///; /// The value of the test statistic \f$ \chi^{2} \f$ is equal to; /// 21.09 with p-value equal to 0.33, therefore the hypothesis of identity of; /// the two histograms can be accepted for 0.05 significant level. The behavior; /// of the normalized residuals plot (see Fig. 1c) and the normal Q-Q plot; /// (see Fig. 1d) of residuals are regular and we cannot identify the outliers; /// or bins with a big influence on \f$ \chi^{2} \f$.; ///; /// The second example presents the same two histograms but 17 events was added; /// to content of bin number 15 in unweighted histogram. Fig.2 shows the result; /// of comparison of the unweighted histogram with 217 events (minimal expected; /// frequency equal to one) and the weighted histogram with 500 events (minimal; /// expected frequency equal to 25); /// Begin_Macro; /// ../../../tutorials/math/chi2test.C(17); /// End_Macro; /// Fig 2. An example of comparison of the unweighted histogram with 217 events; /// and the weighted histogram with 500 events:; /// 1. unweighted histog",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12152,test,test,12152,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"a so called active rotation, i.e. rotation of objects inside; a static system of coordinates. In case you want to rotate the frame and; want to know the coordinates of objects in the rotated system, you should; apply the inverse rotation to the objects. If you want to transform coordinates; from the rotated frame to the original frame you have to apply the direct; transformation. A rotation around a specified axis means counterclockwise rotation around; the positive direction of the axis. ### Declaration, Access, Comparisons. ~~~; TRotation r; // r initialized as identity; TRotation m(r); // m = r; ~~~. There is no direct way to set the matrix elements - to ensure that; a TRotation object always describes a real rotation. But you can get the; values by the member functions XX()..ZZ() or the (,); operator:. ~~~; Double_t xx = r.XX(); // the same as xx=r(0,0); xx = r(0,0);. if (r==m) {...} // test for equality; if (r!=m) {..} // test for inequality; if (r.IsIdentity()) {...} // test for identity; ~~~. ### Rotation around axes; The following matrices describe counterclockwise rotations around coordinate; axes. ~~~; | 1 0 0 |; Rx(a) = | 0 cos(a) -sin(a) |; | 0 sin(a) cos(a) |. | cos(a) 0 sin(a) |; Ry(a) = | 0 1 0 |; | -sin(a) 0 cos(a) |. | cos(a) -sin(a) 0 |; Rz(a) = | sin(a) cos(a) 0 |; | 0 0 1 |; ~~~. and are implemented as member functions RotateX(), RotateY() and RotateZ():. ~~~; r.RotateX(TMath::Pi()); // rotation around the x-axis; ~~~. ### Rotation around arbitrary axis; The member function Rotate() allows to rotate around an arbitrary vector; (not necessary a unit one) and returns the result. ~~~; r.Rotate(TMath::Pi()/3,TVector3(3,4,5));; ~~~. It is possible to find a unit vector and an angle, which describe the; same rotation as the current one:. ~~~; Double_t angle;; TVector3 axis;; r.GetAngleAxis(angle,axis);; ~~~. ### Rotation of local axes; Member function RotateAxes() adds a rotation of local axes to; the current rotation and returns the result:. ~~~; TVec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:1336,test,test,1336,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['test'],['test']
Testability,"activities is to gather knowledge about new hardware; // and software and to recommend common solutions (eg Scientific Linux); // see: http://wwwhepix.web.cern.ch/wwwhepix/; //; // This benchmark suite has been implemented following several requests; // from HEPIX members interested by a collection of benchmarks representative; // of typical applications.; //; // stressHepix is a single benchmark inclusing several standard ROOT benchmarks; // with a mixture of CPU intensive tests and I/O tests.; // The output of stressHepix is one single number (the ROOTMARK).; // A Pentium IV 2.8GHz running Linux SLC3 and gcc3.2.3 runs this benchmark; // with a reference at 800 ROOTMARKs.; // To build the executable for this benchmark, do; // cd $ROOTSYS/test; // make; //; // The default configuration of ROOT is enough.; // The output of this benchmark looks like:; //; /// stressHepix; ///; ///; ///Starting stressHepix benchmark (details will be in stressHepix.log); ///Takes 442 CP seconds on a 500 rootmarks machine (IBM Thinkpad centrino 1.4GHz VC++7.1); ///Takes 278 CP seconds on a 800 rootmarks reference machine (P IV 2.8 GHz, SLC3 gcc3.2.3); ///Takes 239 CP seconds on a 924 rootmarks machine (MacBook 2.0GHz gcc4.0.1); ///Takes 209 CP seconds on a 1056 rootmarks machine (MacBook 2.0GHz icc9.1); ///Takes 147 CP seconds on a 1512 rootmarks machine (MacPro 3.0GHz gcc4.0.1); ///Takes 142 CP seconds on a 1550 rootmarks machine (AMD64/280, FC5 gcc4.1); ///Takes 121 CP seconds on a 1828 rootmarks machine (MacPro 3.0GHz icc9.1); ///; ///Running : stressFit Minuit 2000, (takes 11 RT seconds on the ref machine); ///Running : stressLinear, (takes 26 RT seconds on the ref machine); ///Running : stressGeometry, (takes 77 RT seconds on the ref machine); ///Running : stressSpectrum 1000, (takes 116 RT seconds on the ref machine); ///Running : stress -b 3000, (takes 138 RT seconds on the ref machine); ///; ///; ///****************************************************************************; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx:1377,log,log,1377,test/stressHepix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx,1,['log'],['log']
Testability,"aded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... OK; // Test 4 : Filename formats when adding files to TChain.......... using Event_8a.root and Event_8b.root; // : treename in chain..................................... OK; // : treename to AddFile................................... OK; // : treename in filenames, slash-suffix style............. OK; // : bad treename to AddFile, good in filename............. OK; // : treename and url query in filename.................... OK; // : treename given in url frag in filename................ OK; // : filename with a url query in Add...................... OK; // ****************************************************************************; //_____________________________batch only_____________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:2074,Test,Test,2074,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,1,['Test'],['Test']
Testability,"after data storage. If TSQLFile detects; any problems, ROLLBACK command will be used to restore; previous state of data base. If transactions not supported by SQL server,; they can be disabled by SetUseTransactions(kTransactionsOff). Or user; can take responsibility to use transactions function himself.; By default only indexes for basic tables are created.; In most cases usage of indexes increase performance to data reading,; but it also can increase time of writing data to database.; There are several modes of index usage available in SetUseIndexes() method; There is MakeSelectQuery(TClass*) method, which; produces SELECT statement to get objects data of specified class.; Difference from simple statement like:; mysql> SELECT * FROM TH1I_ver1; that not only data for that class, but also data from parent classes; will be extracted from other tables and combined in single result table.; Such select query can be useful for external access to objects data. Up to now MySQL 4.1 and Oracle 9i were tested.; Some extra work is required for other SQL databases.; Hopefully, this should be straightforward. Known problems and open questions.; -# TTree is not supported by TSQLFile. There is independent development; of TTreeSQL class, which allows to store trees directly in SQL database; -# TClonesArray is store objects in raw format,; which can not be accessed outside ROOT.; This will be changed later.; -# TDirectory cannot work. Hopefully, will (changes in ROOT basic I/O is required); -# Streamer infos are not written to file, therefore schema evolution; is not yet supported. All eforts are done to enable this feature in; the near future. ### Example how TSQLFile can be used. #### A session saving data to a SQL data base; ~~~{.cpp}; auto dbname = ""mysql://host.domain:3306/dbname"";; auto username = ""username"";; auto userpass = ""userpass"";. // Clean data base and create primary tables; auto f = new TSQLFile(dbname, ""recreate"", username, userpass);; // Write with standard I/O func",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:5787,test,tested,5787,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['test'],['tested']
Testability,"ain an identity matrix. This; is set by default, and can be reset using `SetLocalMasterIdentity()` function. Logical & Physical Objects.; There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local; reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the `fID` logical ID member of; TBuffer3D. If repeated addition of the same `fID` is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable; performance gains in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method. ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different `fLocalMaster` placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the `fLocalMaster` transform and the; `fColor` and `fTransparency` attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ### Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:5390,log,logical,5390,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['log'],['logical']
Testability,"aluate the function, store the return; // value alongside the virtual table, and rewrite each virtual call as a load; // from the virtual table.; // - Uniform return value optimization: if the conditions for virtual constant; // propagation hold and each function returns the same constant value, replace; // each virtual call with that constant.; // - Unique return value optimization for i1 return values: if the conditions; // for virtual constant propagation hold and a single vtable's function; // returns 0, or a single vtable's function returns 1, replace each virtual; // call with a comparison of the vptr against that vtable's address.; //; // This pass is intended to be used during the regular and thin LTO pipelines:; //; // During regular LTO, the pass determines the best optimization for each; // virtual call and applies the resolutions directly to virtual calls that are; // eligible for virtual call optimization (i.e. calls that use either of the; // llvm.assume(llvm.type.test) or llvm.type.checked.load intrinsics).; //; // During hybrid Regular/ThinLTO, the pass operates in two phases:; // - Export phase: this is run during the thin link over a single merged module; // that contains all vtables with !type metadata that participate in the link.; // The pass computes a resolution for each virtual call and stores it in the; // type identifier summary.; // - Import phase: this is run during the thin backends over the individual; // modules. The pass applies the resolutions previously computed during the; // import phase to each eligible virtual call.; //; // During ThinLTO, the pass operates in two phases:; // - Export phase: this is run during the thin link over the index which; // contains a summary of all vtables with !type metadata that participate in; // the link. It computes a resolution for each virtual call and stores it in; // the type identifier summary. Only single implementation devirtualization; // is supported.; // - Import phase: (same as with hybr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:1907,test,test,1907,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['test'],['test']
Testability,"alues from:; /// - strings: std::string, SmallString, formatv, StringRef, char*; /// (char*, and StringRef are references, not copies!); /// - numbers; /// - booleans; /// - null: nullptr; /// - arrays: {""foo"", 42.0, false}; /// - serializable things: types with toJSON(const T&)->Value, found by ADL; ///; /// They can also be constructed from object/array helpers:; /// - json::Object is a type like map<ObjectKey, Value>; /// - json::Array is a type like vector<Value>; /// These can be list-initialized, or used to build up collections in a loop.; /// json::ary(Collection) converts all items in a collection to Values.; ///; /// === Inspecting values ===; ///; /// Each Value is one of the JSON kinds:; /// null (nullptr_t); /// boolean (bool); /// number (double, int64 or uint64); /// string (StringRef); /// array (json::Array); /// object (json::Object); ///; /// The kind can be queried directly, or implicitly via the typed accessors:; /// if (std::optional<StringRef> S = E.getAsString(); /// assert(E.kind() == Value::String);; ///; /// Array and Object also have typed indexing accessors for easy traversal:; /// Expected<Value> E = parse(R""( {""options"": {""font"": ""sans-serif""}} )"");; /// if (Object* O = E->getAsObject()); /// if (Object* Opts = O->getObject(""options"")); /// if (std::optional<StringRef> Font = Opts->getString(""font"")); /// assert(Opts->at(""font"").kind() == Value::String);; ///; /// === Converting JSON values to C++ types ===; ///; /// The convention is to have a deserializer function findable via ADL:; /// fromJSON(const json::Value&, T&, Path) -> bool; ///; /// The return value indicates overall success, and Path is used for precise; /// error reporting. (The Path::Root passed in at the top level fromJSON call; /// captures any nested error and can render it in context).; /// If conversion fails, fromJSON calls Path::report() and immediately returns.; /// This ensures that the first fatal error survives.; ///; /// Deserializers are provided for:; /// - ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:1182,assert,assert,1182,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['assert'],['assert']
Testability,"ame and ml method name and title.; * You can to display the results calling the method Show, get the ROC-integral with the; * method GetROCIntegral or get the TMVA::ROCCurve object calling GetROC.; \ingroup TMVA; */; /*! \class TMVA::Classification; * Class to perform two class classification.; * The first step before any analysis is to prepare the data,; * to do that you need to create an object of TMVA::DataLoader,; * in this object you need to configure the variables and the number of events; * to train/test.; * The class TMVA::Experimental::Classification needs a TMVA::DataLoader object,; * optional a TFile object to save the results and some extra options in a string; * like ""V:Color:Transformations=I;D;P;U;G:Silent:DrawProgressBar:ModelPersistence:Jobs=2"" where:; * V = verbose output; * Color = coloured screen output; * Silent = batch mode: boolean silent flag inhibiting any output from TMVA; * Transformations = list of transformations to test.; * DrawProgressBar = draw progress bar to display training and testing.; * ModelPersistence = to save the trained model in xml or serialized files.; * Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method.; * Basic example.; * \code; void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();. TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }. // Register the training and test trees. TTree *signalTree = (TTree *)input->Get(""TreeS"");; TTree *background = (TTree *)input->Get(""TreeB"");. TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");. dataloader->AddVariable(""myvar1 := var1+var2"", 'F');; dataloader->AddVariable(""myv",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h:1269,test,testing,1269,tmva/tmva/inc/TMVA/Classification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h,1,['test'],['testing']
Testability,"ame processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3232,Test,Test,3232,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"an take advantage of ForeachSlot() to evaluate a thread-safe root mean square of column ""x"":; ~~~{.cpp}; // Thread-safe evaluation of RMS of column ""x"" using ForeachSlot; ROOT::EnableImplicitMT();; const unsigned int nSlots = df.GetNSlots();; std::vector<double> sumSqs(nSlots, 0.);; std::vector<unsigned int> ns(nSlots, 0);. df.ForeachSlot([&sumSqs, &ns](unsigned int slot, double x) { sumSqs[slot] += x*x; ns[slot] += 1; }, {""x""});; double sumSq = std::accumulate(sumSqs.begin(), sumSqs.end(), 0.); // sum all squares; unsigned int n = std::accumulate(ns.begin(), ns.end(), 0); // sum all counts; std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; ~~~; Notice how we created one `double` variable for each processing slot and later merged their results via `std::accumulate`. \anchor friends; ### Dataset joins with friend trees. Vertically concatenating multiple trees that have the same columns (creating a logical dataset with the same columns and; more rows) is trivial in RDataFrame: just pass the tree name and a list of file names to RDataFrame's constructor, or create a TChain; out of the desired trees and pass that to RDataFrame. Horizontal concatenations of trees or chains (creating a logical dataset with the same number of rows and the union of the; columns of multiple trees) leverages TTree's ""friend"" mechanism. Simple joins of trees that do not have the same number of rows are also possible with indexed friend trees (see below). To use friend trees in RDataFrame, set up trees with the appropriate relationships and then instantiate an RDataFrame; with the main tree:. ~~~{.cpp}; TTree main([...]);; TTree friend([...]);; main.AddFriend(&friend, ""myFriend"");. RDataFrame df(main);; auto df2 = df.Filter(""myFriend.MyCol == 42"");; ~~~. The same applies for TChains. Columns coming from the friend trees can be referred to by their full name, like in the example above,; or the friend tree name can be omitted in case the column name is not ambiguous (e.g. ""MyCol"" co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:71630,log,logical,71630,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['log'],['logical']
Testability,ange} + pylow = fYtoPixelk + fYtoPixel \times y; /// \f]; ///; /// \f[; /// \Rightarrow fYtoPixelk = pylow - pyrange \frac{ymin}{yrange}; /// \f]; /// \f[; /// fYtoPixel = \frac{pyrange}{yrange}; /// \f]; /// where:; /// \f[; /// pylow = fAbsYlowNDC \times fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - b,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:1928,LOG,LOG,1928,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['LOG'],['LOG']
Testability,"anvas. A Pad may contain other pads (unlimited pad hierarchy). A pad is a linked list of primitives of any type (graphics objects,; histograms, detectors, tracks, etc.). Adding a new element into a pad is in general performed by the Draw; member function of the object classes. It is important to realize that the pad is a linked list of references; to the original object.; For example, in case of a histogram, the histogram.Draw() operation; only stores a reference to the histogram object and not a graphical; representation of this histogram.; When the mouse is used to change (say the bin content), the bin content; of the original histogram is changed. The convention used in ROOT is that a Draw operation only adds; a reference to the object. The effective drawing is performed; when the canvas receives a signal to be painted. \image html gpad_pad1.png. This signal is generally sent when typing carriage return in the; command input or when a graphical operation has been performed on one; of the pads of this canvas.; When a Canvas/Pad is repainted, the member function Paint for all; objects in the Pad linked list is invoked. \image html gpad_pad2.png. When the mouse is moved on the Pad, The member function DistancetoPrimitive; is called for all the elements in the pad. DistancetoPrimitive returns; the distance in pixels to this object. When the object is within the distance window, the member function; ExecuteEvent is called for this object. In ExecuteEvent, move, changes can be performed on the object. For examples of DistancetoPrimitive and ExecuteEvent functions,; see classes; ~~~ {.cpp}; TLine::DistancetoPrimitive, TLine::ExecuteEvent; TBox::DistancetoPrimitive, TBox::ExecuteEvent; TH1::DistancetoPrimitive, TH1::ExecuteEvent; ~~~; A Pad supports linear and log scales coordinate systems.; The transformation coefficients are explained in TPad::ResizePad.; */; ////////////////////////////////////////////////////////////////////////////////; /// Pad default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:1897,log,log,1897,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['log'],['log']
Testability,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not be; allocated, or Z_VERSION_ERROR if the version of the library does not match; the version of the header file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2670,log,logarithm,2670,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['log'],['logarithm']
Testability,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When; any of extra, name, or comment are not Z_NULL and the respective field is; not present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not; be allocated, or Z_VERSION_ERROR if the version of the library does not; match the version of the header file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:2659,log,logarithm,2659,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['log'],['logarithm']
Testability,"aram[in] xxmin lower fitting range; /// \param[in] xxmax upper fitting range; /// \return A smart pointer to the TFitResult class; ///; /// \anchor HFitOpt; /// ### Histogram Fitting Options; ///; /// Here is the full list of fit options that can be given in the parameter `option`.; /// Several options can be used together by concatanating the strings without the need of any delimiters.; ///; /// option | description; /// -------|------------; /// ""L"" | Uses a log likelihood method (default is chi-square method). To be used when the histogram represents counts.; /// ""WL"" | Weighted log likelihood method. To be used when the histogram has been filled with weights different than 1. This is needed for getting correct parameter uncertainties for weighted fits.; /// ""P"" | Uses Pearson chi-square method. Uses expected errors instead of the observed one (default case). The expected error is instead estimated from the square-root of the bin function value.; /// ""MULTI"" | Uses Loglikelihood method based on multi-nomial distribution. In this case the function must be normalized and one fits only the function shape.; /// ""W"" | Fit using the chi-square method and ignoring the bin uncertainties and skip empty bins.; /// ""WW"" | Fit using the chi-square method and ignoring the bin uncertainties and include the empty bins.; /// ""I"" | Uses the integral of function in the bin instead of the default bin center value.; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; /// ""S"" | The full result of the fit is returned in the `TFit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1361,Log,Loglikelihood,1361,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Log'],['Loglikelihood']
Testability,"are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supported options are:. | Option | Description |; |-----------|------------------------------------------------------------------|; | ""GLSURF"" | Draw a surface.|; | ""GLSURF1"" | Surface with color levels|; | ""GLSURF2"" | The same as ""GLSURF1"" but without polygon outlines.|; | ""GLSURF3"" | Color level projection on top of plot (works only in cartesian coordinate system).|; | ""GLSURF4"" | Same as ""GLSURF"" but without polygon outlines.|. The surface painting in cartesian coordinates supports logarithmic scales along; X, Y, Z axis. In polar coordinates only the Z axis can be logarithmic,; in cylindrical coordinates only the Y axis. Additional options to SURF and LEGO - Coordinate systems:. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default, cartesian coordinates system.|; | ""POL"" | Polar coordinates system.|; | ""CYL"" | Cylindrical coordinates system.|; | ""SPH"" | Spherical coordinates system.|. \anchor HP290; #### TH3 as color boxes. The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLCOL"" | H3 is drawn using semi-transparent colored boxes. See `$ROOTSYS/tutorials/gl/glvox1.C`.|. \anchor HP29b; #### TH3 as boxes (spheres). The supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLBOX"" | TH3 as a set of boxes, size of box is proportional to bin content.|; | ""GLBOX1"" | The same as ""glbox"", but spheres are drawn instead of boxe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:100140,log,logarithmic,100140,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['log'],['logarithmic']
Testability,"asily specify template parameters or pass C++ callables to RDataFrame.; See [Efficient analysis in Python](#python) for possible ways to speed up hot paths in this case. Just-in-time compilation happens once, right before starting an event loop. To reduce the runtime cost of this step, make sure to book all operations *for all RDataFrame computation graphs*; before the first event loop is triggered: just-in-time compilation will happen once for all code required to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expected. Firstly, each result is duplicated for each worker thread, which e.g. in case of many (possibly multi-dimensional) histograms with fine binning can result in visible memory consumption during the event loop. The thread-local copies of the results are destroyed when the final result is produced. Reducing the number of threads or using coarser binning will reduce the memory usage. Secondly, just-in-time compilation of string expressions or non-templated actions (see the previous paragraph) causes Cling, ROOT's C++ interpreter, to allocate some memory for the generated code that is only released at the end of the application. This commonly results in memory usage creep in long-running applications that create many RDataFrames one after the other. Possible mitigations include creating and running each RDataFrame event loop in a sub-process, or booking all operations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:53033,log,logs,53033,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,2,['log'],"['logging', 'logs']"
Testability,"at can be performed. One is based on random sampling or; ray-tracing and provides a visual check on how navigation methods work for; a given geometry. The second actually checks the validity of the geometry; definition in terms of overlapping/extruding objects. Both types of checks; can be done for a given branch (starting with a given volume) as well as for; the geometry as a whole. #### TGeoChecker::CheckPoint(Double_t x, Double_t y, Double_t z). This method can be called directly from the TGeoManager class and print a; report on how a given point is classified by the modeller: which is the; full path to the deepest node containing it, and the (under)estimation; of the distance to the closest boundary (safety). #### TGeoChecker::RandomPoints(Int_t npoints). Can be called from TGeoVolume class. It first draws the volume and its; content with the current visualization settings. Then randomly samples points; in its bounding box, plotting in the geometry display only the points; classified as belonging to visible volumes. #### TGeoChecker::RandomRays(Int_t nrays, Double_t startx, starty, startz). Can be called and acts in the same way as the previous, but instead of points,; rays having random isotropic directions are generated from the given point.; A raytracing algorithm propagates all rays until they exit geometry, plotting; all segments crossing visible nodes in the same color as these. #### TGeoChecker::Test(Int_t npoints). Implementation of TGeoManager::Test(). Computes the time for the modeller; to find out ""Where am I?"" for a given number of random points. #### TGeoChecker::LegoPlot(ntheta, themin, themax, nphi, phimin, phimax,...). Implementation of TGeoVolume::LegoPlot(). Draws a spherical radiation length; lego plot for a given volume, in a given theta/phi range. #### TGeoChecker::Weight(Double_t precision). Implementation of TGeoVolume::Weight(). Estimates the total weight of a given; volume by material sampling. Accepts as input the desired precision.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoChecker.cxx:2073,Test,Test,2073,geom/geompainter/src/TGeoChecker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoChecker.cxx,2,['Test'],['Test']
Testability,"at it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expected to work for graphics if the isKernel test is changed.; //; // The current markUsedByKernel is sufficient for PromoteAlloca but is elided; // before codegen. Replacing this with an equivalent intrinsic which lasts until; // shortly after the machine function lowering of LDS would help break the name; // mapping. The other part needed is probably to amend PromoteAlloca to embed; // the LDS variables it creates in the same struct created here. That avoids the; // current hazard where a PromoteAlloca LDS variable might be allocated before; // the kernel scope (and thus error on the address check). Given a new invariant; // that no LDS variables exist outside of the structs managed here, and an; // intrinsic that lasts until after the LDS frame lowering, it should be; // possible to drop the name mapping and fold equivalent memory layouts.; //; //===----------------------------------------------------------------------===",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:9526,test,test,9526,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['test'],['test']
Testability,"athbf{D}^2 - \sum^l_{k=1} \frac{\left(\mathbf D\bullet \mathbf; w_k\right)}{\mathbf w_k^2}; \f}; So for each new function \f$ F_l\f$ included in the model, we get a; reduction of the sum of squares of residuals of \f$a_l^2\mathbf{w}_l^2\f$,; where \f$\mathbf{w}_l\f$ is given by [4] and \f$ a_l\f$ by [9]. Thus, using; the Gram-Schmidt orthogonalisation, we; can decide if we want to include this function in the final model,; *before* the matrix inversion. ## Function Selection Based on Residual; Supposing that \f$ L-1\f$ steps of the procedure have been performed, the; problem now is to consider the \f$L^{\mbox{th}}\f$ function. The sum of squares of residuals can be written as; \f[; S_L = \textbf{D}^T\bullet\textbf{D} -; \sum^L_{l=1}a^2_l\left(\textbf{w}_l^T\bullet\textbf{w}_l\right); \f]; where the relation [9] have been taken into account. The; contribution of the \f$L^{\mbox{th}}\f$ function to the reduction of S, is; given by; \f[; \Delta S_L = a^2_L\left(\textbf{w}_L^T\bullet\textbf{w}_L\right); \f]; Two test are now applied to decide whether this \f$L^{\mbox{th}}\f$; function is to be included in the final expression, or not. ## Test 1; Denoting by \f$ H_{L-1}\f$ the subspace spanned by \f$\textbf{w}_1,\ldots,\textbf{w}_{L-1}\f$; the function \f$\textbf{w}_L\f$ is by construction (see 4) the projection of the function; \f$ F_L\f$ onto the direction perpendicular to \f$ H_{L-1}\f$. Now, if the; length of \f$\textbf{w}_L\f$ (given by \f$\textbf{w}_L\bullet\textbf{w}_L\f$); is very small compared to the length of \f$\textbf{f}_L\f$ this new; function can not contribute much to the reduction of the sum of; squares of residuals. The test consists then in calculating the angle; \f$ \theta \f$ between the two vectors \f$\textbf{w}_L\f$ \f$ \textbf {f}_L\f$; (see also figure 1) and requiring that it's; *greater* then a threshold value which the user must set (TMultiDimFit::SetMinAngle). \image html multidimfit_img86.gif ""Figure 1: (a) angle \\f$\\theta\\f$ between \\f$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:9398,test,test,9398,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['test'],['test']
Testability,"ation comprised of UNIX and Windows support staff; // in the High Energy Physics community.; // One of the HEPIX activities is to gather knowledge about new hardware; // and software and to recommend common solutions (eg Scientific Linux); // see: http://wwwhepix.web.cern.ch/wwwhepix/; //; // This benchmark suite has been implemented following several requests; // from HEPIX members interested by a collection of benchmarks representative; // of typical applications.; //; // stressHepix is a single benchmark inclusing several standard ROOT benchmarks; // with a mixture of CPU intensive tests and I/O tests.; // The output of stressHepix is one single number (the ROOTMARK).; // A Pentium IV 2.8GHz running Linux SLC3 and gcc3.2.3 runs this benchmark; // with a reference at 800 ROOTMARKs.; // To build the executable for this benchmark, do; // cd $ROOTSYS/test; // make; //; // The default configuration of ROOT is enough.; // The output of this benchmark looks like:; //; /// stressHepix; ///; ///; ///Starting stressHepix benchmark (details will be in stressHepix.log); ///Takes 442 CP seconds on a 500 rootmarks machine (IBM Thinkpad centrino 1.4GHz VC++7.1); ///Takes 278 CP seconds on a 800 rootmarks reference machine (P IV 2.8 GHz, SLC3 gcc3.2.3); ///Takes 239 CP seconds on a 924 rootmarks machine (MacBook 2.0GHz gcc4.0.1); ///Takes 209 CP seconds on a 1056 rootmarks machine (MacBook 2.0GHz icc9.1); ///Takes 147 CP seconds on a 1512 rootmarks machine (MacPro 3.0GHz gcc4.0.1); ///Takes 142 CP seconds on a 1550 rootmarks machine (AMD64/280, FC5 gcc4.1); ///Takes 121 CP seconds on a 1828 rootmarks machine (MacPro 3.0GHz icc9.1); ///; ///Running : stressFit Minuit 2000, (takes 11 RT seconds on the ref machine); ///Running : stressLinear, (takes 26 RT seconds on the ref machine); ///Running : stressGeometry, (takes 77 RT seconds on the ref machine); ///Running : stressSpectrum 1000, (takes 116 RT seconds on the ref machine); ///Running : stress -b 3000, (takes 138 RT seconds on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx:1257,benchmark,benchmark,1257,test/stressHepix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx,2,['benchmark'],['benchmark']
Testability,"ay be changed at any time.; /// The new compression settings will only apply to branches created; /// or attached after the setting is changed and other objects written; /// after the setting is changed.; /// In case the file does not exist or is not a valid ROOT file,; /// it is made a Zombie. One can detect this situation with a code like:; /// ~~~{.cpp}; /// TFile f(""file.root"");; /// if (f.IsZombie()) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// If you open a file instead with TFile::Open(""file.root"") use rather; /// the following code as a nullptr is returned.; /// ~~~{.cpp}; /// TFile* f = TFile::Open(""file.root"");; /// if (!f) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// When opening the file, the system checks the validity of this directory.; /// If something wrong is detected, an automatic Recovery is performed. In; /// this case, the file is scanned sequentially reading all logical blocks; /// and attempting to rebuild a correct directory (see TFile::Recover).; /// One can disable the automatic recovery procedure when reading one; /// or more files by setting the environment variable ""TFile.Recover: 0""; /// in the system.rootrc file.; ///; /// A bit `TFile::kReproducible` can be enabled specifying; /// the `""reproducible""` url option when creating the file:; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""name.root?reproducible"",""RECREATE"",""File title"");; /// ~~~; /// Unlike regular `TFile`s, the content of such file has reproducible binary; /// content when writing exactly same data. This achieved by writing pre-defined; /// values for creation and modification date of TKey/TDirectory objects and; /// null value for TUUID objects inside TFile. As drawback, TRef objects stored; /// in such file cannot be read correctly.; ///; /// In case the name of the file is not reproducible either (in case of; /// creating temporary filenames) a value can be passed to the reproducibl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:5268,log,logical,5268,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['log'],['logical']
Testability,"bclasses of the SCEV class.; // These classes are used to represent certain types of subexpressions that we; // can handle. We only create one SCEV of a particular shape, so; // pointer-comparisons for equality are legal.; //; // One important aspect of the SCEV objects is that they are never cyclic, even; // if there is a cycle in the dataflow for an expression (ie, a PHI node). If; // the PHI node is one of the idioms that we can represent (e.g., a polynomial; // recurrence) then we represent it directly as a recurrence node, otherwise we; // represent it as a SCEVUnknown node.; //; // In addition to being able to represent expressions of various types, we also; // have folders that are used to build the *canonical* representation for a; // particular expression. These folders are capable of using a variety of; // rewrite rules to simplify the expressions.; //; // Once the folders are defined, we can implement the more interesting; // higher-level code, such as the code that recognizes PHI nodes of various; // types, computes the execution count of a loop, etc.; //; // TODO: We should use these routines and value representations to implement; // dependence analysis!; //; //===----------------------------------------------------------------------===//; //; // There are several good references for the techniques used in this analysis.; //; // Chains of recurrences -- a method to expedite the evaluation; // of closed-form functions; // Olaf Bachmann, Paul S. Wang, Eugene V. Zima; //; // On computational properties of chains of recurrences; // Eugene V. Zima; //; // Symbolic Evaluation of Chains of Recurrences for Loop Optimization; // Robert A. van Engelen; //; // Efficient Symbolic Analysis for Optimizing Compilers; // Robert A. van Engelen; //; // Using the chains of recurrences algebra for data dependence testing and; // induction variable substitution; // MS Thesis, Johnie Birch; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:2529,test,testing,2529,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['test'],['testing']
Testability,"been generated by; // stress.cxx and preplaced on some data servers.; // stressIOPlugins reads the remote files via various data; // access protocols to test ROOT IO plugins. The data read are; // tested via tests based on some of stress.cxx tests.; //; // Can be run as:; // stressIOPlugins [name]; //; // The name parameter is a protocol name, as expected; // in a url. The supported names are: xroot, root, http, https.; // If the name is omitted a selection of schemes are tested; // based on feature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... OK; // Test 4 : Filename formats when adding files to TChain.......... using Event_8a.root and Event_8b.root; // : treename in chain.................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:1249,Test,Test,1249,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,1,['Test'],['Test']
Testability,"bles for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,3};; /// for (std::string Str : Container); /// Body(Str);; /// </code>; /// which is syntactic sugar for approximately:; /// <code>; /// auto &&__range = Container;; /// auto __begin = std::begin(__range);; /// auto __end = std::end(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:3341,log,logical,3341,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['log'],['logical']
Testability,"br />; * Possible values: UseNone, UseOutlines, UseThumbs, UseOC<br />; * Default value: UseNone<br/>; * <br />; * <b>Direction</b> <i>(string)</i><br />; * Possible values: L2R, R2L<br />; * Default value: L2R.<br />; * <br />; * <b>ViewArea</b> <i>(string)</i><br />; * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />; * Default value: CropBox.<br />; * <br />; * <b>ViewClip</b> <i>(string)</i><br />; * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />; * Default value: CropBox<br />; * <br />; * <b>PrintArea</b> <i>(string)</i><br />; * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />; * Default value: CropBox<br />; * <br />; * <b>PrintClip</b> <i>(string)</i><br />; * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />; * Default value: CropBox.<br />; * <br />; * <b>PrintScaling</b> <i>(string)</i><br />; * Possible values: AppDefault, None<br />; * Default value: AppDefault.<br />; * <br />; * <b>Duplex</b> <i>(string)</i><br />; * Possible values: Simplex, DuplexFlipLongEdge, DuplexFlipShortEdge; * Default value: none<br />; * <br />; * <b>PickTrayByPDFSize</b> <i>(boolean)</i><br />; * Default value: false<br />; * <br />; * <b>PrintPageRange</b> <i>(Array)</i><br />; * Example: [[1,5], [7,9]]<br />; * Default value: as defined by PDF viewer application<br />; * <br />; * <b>NumCopies</b> <i>(Number)</i><br />; * Possible values: 1, 2, 3, 4, 5<br />; * Default value: 1<br />; * <br />; * For more information see the PDF Reference, sixth edition on Page 577; * @param {boolean} doReset True to reset the settings; * @function; * @returns jsPDF jsPDF-instance; * @example; * var doc = new jsPDF(); * doc.text('This is a test', 10, 10); * doc.viewerPreferences({'FitWindow': true}, true); * doc.save(""viewerPreferences.pdf""); *; * // Example printing 10 copies, using cropbox, and hiding UI.; * doc.viewerPreferences({; * 'HideWindowUI': true,; * 'PrintArea': 'CropBox',; * 'NumCopies': 10; * }); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:2586,test,test,2586,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['test'],['test']
Testability,"bservation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Compu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16774,test,test,16774,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['test'],['test']
Testability,"bug-info is marked out by ""-"" characters and a few; other special characters (+:=) where I want to highlight what's going on. Dest; |; this-block: A----A----A ====A----A----A----A---A---A; Src-block ++++B---B---B---B:::C; | |; First Last. The splice method is going to take all the instructions from First up to; (but not including) Last and insert them in _front_ of Dest, forming one; long list. All the DPValues attached to instructions _between_ First and; Last need no maintenence. However, we have to do special things with the; DPValues marked with the +:= characters. We only have three positions:; should the ""+"" DPValues be transferred, and if so to where? Do we move the; "":"" DPValues? Would they go in front of the ""="" DPValues, or should the ""=""; DPValues go before ""+"" DPValues?. We're told which way it should be by the bits carried in the iterators. The; ""Head"" bit indicates whether the specified position is supposed to be at the; front of the attached DPValues (true) or not (false). The Tail bit is true; on the other end of a range: is the range intended to include DPValues up to; the end (false) or not (true). FIXME: the tail bit doesn't need to be distinct from the head bit, we could; combine them. Here are some examples of different configurations:. Dest.Head = true, First.Head = true, Last.Tail = false. this-block: A----A----A++++B---B---B---B:::====A----A----A----A---A---A; | |; First Dest. Wheras if we didn't want to read from the Src list,. Dest.Head = true, First.Head = false, Last.Tail = false. this-block: A----A----AB---B---B---B:::====A----A----A----A---A---A; | |; First Dest. Or if we didn't want to insert at the head of Dest:. Dest.Head = false, First.Head = false, Last.Tail = false. this-block: A----A----A====B---B---B---B:::A----A----A----A---A---A; | |; First Dest. Tests for these various configurations can be found in the unit test file; BasicBlockDbgInfoTest.cpp. */; // Detach the marker at Dest -- this lets us move the ""===="" DPValues around.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp:1999,Test,Tests,1999,interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,2,"['Test', 'test']","['Tests', 'test']"
Testability,"bution, using the Kolmogorov test.; /// That is, it is used to compare two experimental distributions of unbinned data.; ///; /// ### Input:; /// a,b: One-dimensional arrays of length na, nb, respectively.; /// The elements of a and b must be given in ascending order.; /// option is a character string to specify options; /// ""D"" Put out a line of ""Debug"" printout; /// ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// ### Output:; /// The returned value prob is a calculated confidence level which gives a; /// statistical test for compatibility of a and b.; /// Values of prob close to zero are taken as indicating a small probability; /// of compatibility. For two point sets drawn randomly from the same parent; /// distribution, the value of prob should be uniformly distributed between; /// zero and one.; /// in case of error the function return -1; /// If the 2 sets have a different number of points, the minimum of; /// the two sets is used.; ///; /// ### Method:; /// The Kolmogorov test is used. The test statistic is the maximum deviation; /// between the two integrated distribution functions, multiplied by the; /// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; ///; /// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); /// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; /// Statistical Methods in Experimental Physics, (North-Holland,; /// Amsterdam 1971) 269-271); ///; /// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); ///; /// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; /// over the two sorted arrays a and b representing empirical distribution; /// functions. The for-loop handles 3 cases: when the next points to be; /// evaluated satisfy a>b, a<b, or a=b:; ///; /// ~~~ {.cpp}; /// for (Int_t i=0;i<na+nb;i++) {; /// if (a[ia-1] < b[ib-1]) {; /// rdiff -= sa;; /// ia++;; /// if (ia > na) {ok = kTRUE; break;}; /// } else if (a[ia-1] > b[ib-1]) {; /// rdiff += sb;; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1220,test,test,1220,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['test'],['test']
Testability,"by the standard library (<a; href=""http://www.cplusplus.com/reference/random/ranlux48/"">std::ranlux48</a>). The drawback of this generator is its; slow generation time.; - TRandom2 is based on the Tausworthe generator of L'Ecuyer, and it has the advantage; of being fast and using only 3 words (of 32 bits) for the state. The period however is not impressively long, it is; 10**26. Using the template TRandomGen class (template on the contained Engine type), it is possible to add any generator based; on the standard C++ random library (see the C++ <a href=""http://www.cplusplus.com/reference/random/"">random</a>; documentation.) or different variants of the MIXMAX generator using the ROOT::Math::MixMaxEngine. Some of the listed; generator above (e.g. TRandomMixMax256 or TRandomMT64) are convenient typedef's of generator built using the template; TRandomGen class. Please note also that this class (TRandom) implements also a very simple generator (linear congruential) with period =; \f$10^9\f$, known to have defects (the lower random bits are correlated) and it is failing the majority of the random; number generator tests. Therefore it should NOT be used in any statistical study. The following table shows some timings (in nanoseconds/call); for the random numbers obtained using a macbookpro 2.6 GHz Intel Core i7 CPU:. - TRandom 3 ns/call (but this is a very BAD Generator, not to be used); - TRandom2 5 ns/call; - TRandom3 5 ns/call; - ::TRandomMixMax 6 ns/call; - ::TRandomMixMax17 6 ns/call; - ::TRandomMT64 9 ns/call; - ::TRandomMixMax256 10 ns/call; - ::TRandomRanluxpp 14 ns/call; - ::TRandom1 80 ns/call; - ::TRandomRanlux48 250 ns/call. The following methods are provided to generate random numbers distributed according to some basic distributions:. - Exp(Double_t tau); - Integer(UInt_t imax); - Gaus(Double_t mean, Double_t sigma); - Rndm(); - Uniform(Double_t); - Landau(Double_t mean, Double_t sigma); - Poisson(Double_t mean); - Binomial(Int_t ntot, Double_t prob). Random n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:5226,test,tests,5226,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['test'],['tests']
Testability,"cal-AND and logical-OR operations on the RHS so; /// that it can be determined which nodes are executed next, depending on how; /// a LHS or RHS of a logical-AND or logical-OR is evaluated. This; /// information relies on the assigned IDs and are embedded within the; /// coverage region IDs of each branch region associated with a leaf-level; /// condition. This information helps the visualization tool reconstruct all; /// possible test vectors for the purposes of MC/DC analysis. If a ""next"" node; /// ID is '0', it means it's the end of the test vector. The following rules; /// are used:; ///; /// For logical-AND (""LHS && RHS""):; /// - If LHS is TRUE, execution goes to the RHS node.; /// - If LHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// For logical-OR (""LHS || RHS""):; /// - If LHS is TRUE, execution goes to the LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If LHS is FALSE, execution goes to the RHS node.; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// Finally, the condition IDs are also used when instrumenting the code to; /// indicate a unique offset into a temporary bitmap that represents the true; /// or false evaluation of that particular condition.; ///; /// NOTE regarding the use of CodeGenFunction::stripCond(). Even though, for; /// simplicity, parentheses and unary logical-NOT operators are considered; /// part of their underly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:2505,log,logical-OR,2505,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,1,['log'],['logical-OR']
Testability,"ce function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ### Master/Local Reference Frames. The `Core` section of TBuffer3D contains two members relating to reference; frames:; `fLocalFrame` & `fLocalMaster`. `fLocalFrame` indicates if any positions in the; buffer (bounding box and tessellation vertexes) are in local or master (world frame).; `fLocalMaster` is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If `fLocalFrame` is kFALSE, `fLocalMaster` should contain an identity matrix. This; is set by default, and can be reset using `SetLocalMasterIdentity()` function. Logical & Physical Objects.; There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local; reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the `fID` logical ID member of; TBuffer3D. If repeated addition of the same `fID` is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable; performance gains in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method. ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different `fLocalMaster` placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical obje",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:4923,log,logical,4923,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['log'],['logical']
Testability,"ce; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confidence belt. First; # this is done on the observed data to get an observed 1-sided upper limt.; #; # Finally, there expected limit and bands (from background-only) are; # formed by generating background-only data and finding the upper limit.; # The background-only is defined as such that the nuisance parameters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the modified test statistic; # in your $ROOTSYS/roofit/roostats/inc directory,; # add the additional line to the LinkDef.h file,; # and recompile root.; #; # Note, if you have a boundary on the parameter of interest (eg. cross-section); # the threshold on the two-sided test statistic starts off at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. Th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:2814,test,test,2814,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,2,['test'],['test']
Testability,"cense-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the RefCountedBase, ThreadSafeRefCountedBase, and; /// IntrusiveRefCntPtr classes.; ///; /// IntrusiveRefCntPtr is a smart pointer to an object which maintains a; /// reference count. (ThreadSafe)RefCountedBase is a mixin class that adds a; /// refcount member variable and methods for updating the refcount. An object; /// that inherits from (ThreadSafe)RefCountedBase deletes itself when its; /// refcount hits zero.; ///; /// For example:; ///; /// ```; /// class MyClass : public RefCountedBase<MyClass> {};; ///; /// void foo() {; /// // Constructing an IntrusiveRefCntPtr increases the pointee's refcount; /// // by 1 (from 0 in this case).; /// IntrusiveRefCntPtr<MyClass> Ptr1(new MyClass());; ///; /// // Copying an IntrusiveRefCntPtr increases the pointee's refcount by 1.; /// IntrusiveRefCntPtr<MyClass> Ptr2(Ptr1);; ///; /// // Constructing an IntrusiveRefCntPtr has no effect on the object's; /// // refcount. After a move, the moved-from pointer is null.; /// IntrusiveRefCntPtr<MyClass> Ptr3(std::move(Ptr1));; /// assert(Ptr1 == nullptr);; ///; /// // Clearing an IntrusiveRefCntPtr decreases the pointee's refcount by 1.; /// Ptr2.reset();; ///; /// // The object deletes itself when we return from the function, because; /// // Ptr3's destructor decrements its refcount to 0.; /// }; /// ```; ///; /// You can use IntrusiveRefCntPtr with isa<T>(), dyn_cast<T>(), etc.:; ///; /// ```; /// IntrusiveRefCntPtr<MyClass> Ptr(new MyClass());; /// OtherClass *Other = dyn_cast<OtherClass>(Ptr); // Ptr.get() not required; /// ```; ///; /// IntrusiveRefCntPtr works with any class that; ///; /// - inherits from (ThreadSafe)RefCountedBase,; /// - has Retain() and Release() methods, or; /// - specializes IntrusiveRefCntPtrInfo.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:1445,assert,assert,1445,interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,1,['assert'],['assert']
Testability,"ch can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ### Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer; did with it. This enables the viewer to be connected to a client which sends potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via; a TPad repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ### Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; SetSect",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:7030,log,logical,7030,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['log'],['logical']
Testability,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1807,test,test,1807,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,3,"['Test', 'test']","['Test', 'test']"
Testability,"ckground events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boosting can be applied several times (typically 100-500 times); and one ends up with a set of decision trees (a forest).; Gradient boosting works more like a function expansion approach, where; each tree corresponds to a summand. The parameters for each summand (tree); are determined by the minimization of a error function (binomial log-; likelihood for classification and Huber loss for regression).; A greedy algorithm is used, which means, that only one tree is modified; at a time, while the other trees stay fixed. ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Random Trees:. Similar to the ""Random Forests"" from Leo Breiman and Adele Cutler, it; uses the bagging algorithm together and bases the determination of the; best node-split during the training on a random subset of variables only; which is individually chosen for each split. ### Analysis:. Applying an individual decision tree to a test event results in a; classification of the event as either signal or background. For the; boosted decision tree selection, an event is successively subjected to; the whole set of decision trees and depending on how often it is; classified as signal, a ""likelihood"" estimator is constructed for the; event being signal or background. The value of this estimator is the; one which is then used to select the events from an event sample, and; the cut value on this estimator defines the efficiency and purity of; the selection. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:4490,test,test,4490,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['test'],['test']
Testability,"contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The ob",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7868,log,logical,7868,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['log'],['logical']
Testability,"contains two members relating to reference; frames:; `fLocalFrame` & `fLocalMaster`. `fLocalFrame` indicates if any positions in the; buffer (bounding box and tessellation vertexes) are in local or master (world frame).; `fLocalMaster` is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If `fLocalFrame` is kFALSE, `fLocalMaster` should contain an identity matrix. This; is set by default, and can be reset using `SetLocalMasterIdentity()` function. Logical & Physical Objects.; There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local; reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the `fID` logical ID member of; TBuffer3D. If repeated addition of the same `fID` is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable; performance gains in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method. ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different `fLocalMaster` placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the `fLocalMaster` transform and the; `fColor` and `fTransparency` attributes, which can be varied for each physical; object. As a minimum requirement",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:5045,log,logical,5045,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,2,['log'],['logical']
Testability,"crete implementation of the NeymanConstruction; interface that, as the name suggests, performs a NeymanConstruction. It produces; a RooStats::PointSetInterval, which is a concrete implementation of the; ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually incoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval.; Common configurations, such as the Feldman-Cousins approach, can be enforced by; other light weight classes. The Neyman Construction considers every point in the parameter space; independently, no assumptions are made that the interval is connected or of a; particular shape. As a result, the PointSetInterval class is used to represent; the result. The user indicate which points in the parameter space to perform; the construction by providing a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be; considered is factorized and so is the creation of the sampling distribution of; the test statistic (which is done by a concrete class implementing the; DistributionCreator interface). As a result, this class basically just drives the; construction by:. - using a DistributionCreator to create the SamplingDistribution of a user-; defined test statistic for each parameter point of interest,; - defining the acceptance region in the data by finding the thresholds on the; test statistic such that the integral of the sampling distribution is of the; appropriate size and consistent with the limits of integration; (eg. upper/lower/central limits),; - and finally updating the PointSetInterval based on whether the value of the; test statistic evaluated on the data are in the acceptance region. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:1798,test,test,1798,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,4,['test'],['test']
Testability,"ct, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This example shows how to use LLJIT and JITLink for out-of-process execution; // with debug support. A few notes beforehand:; //; // * Debuggers must implement the GDB JIT interface (gdb, udb, lldb 12+).; // * Debug support is currently limited to ELF on x86-64 platforms that run; // Unix-like systems.; // * There is a test for this example and it ships an IR file that is prepared; // for the instructions below.; //; //; // The following command line session provides a complete walkthrough of the; // feature using LLDB 12:; //; // [Terminal 1] Prepare a debuggable out-of-process JIT session:; //; // > cd llvm-project/build; // > ninja LLJITWithRemoteDebugging llvm-jitlink-executor; // > cp ../llvm/test/Examples/OrcV2Examples/Inputs/argc_sub1_elf.ll .; // > bin/LLJITWithRemoteDebugging --wait-for-debugger argc_sub1_elf.ll; // Found out-of-process executor: bin/llvm-jitlink-executor; // Launched executor in subprocess: 65535; // Attach a debugger and press any key to continue.; //; //; // [Terminal 2] Attach a debugger to the child process:; //; // (lldb) log enable lldb jit; // (lldb) settings set plugin.jit-loader.gdb.enable on; // (lldb) settings set target.source-map Inputs/ \; // /path/to/llvm-project/llvm/test/Examples/OrcV2Examples/Inputs/; // (lldb) attach -p 65535; // JITLoaderGDB::SetJITBreakpoint looking for JIT register hook; // JITLoaderGDB::SetJITBreakpoint setting JIT breakpoint; // Process 65535 stopped; // (lldb) b sub1; // Breakpoint 1: no locations (pending).; // WARNING: Unable to resolve breakpoint to any actual locations.; // (lldb) c; // Process 65535 resuming; //; //; // [Terminal 1] Press a key to start code generation and execution:; //; // Parsed input IR code from: argc_sub1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp:1090,test,test,1090,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,1,['test'],['test']
Testability,"ctice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expected to work for graphics if the isKernel test is changed.; //; // The current markUsedByKernel is sufficient for PromoteAlloca but is elided; // before codegen. Replacing this with an equivalent intrinsic which lasts until; // shortly after the machine function lowering of LDS would help break the name; // mapping. The other part needed is probab",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:8959,test,tests,8959,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['test'],['tests']
Testability,"ction returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 :",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2233,Test,Test,2233,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"ctor<double> sumSqs(nSlots, 0.);; std::vector<unsigned int> ns(nSlots, 0);. df.ForeachSlot([&sumSqs, &ns](unsigned int slot, double x) { sumSqs[slot] += x*x; ns[slot] += 1; }, {""x""});; double sumSq = std::accumulate(sumSqs.begin(), sumSqs.end(), 0.); // sum all squares; unsigned int n = std::accumulate(ns.begin(), ns.end(), 0); // sum all counts; std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; ~~~; Notice how we created one `double` variable for each processing slot and later merged their results via `std::accumulate`. \anchor friends; ### Dataset joins with friend trees. Vertically concatenating multiple trees that have the same columns (creating a logical dataset with the same columns and; more rows) is trivial in RDataFrame: just pass the tree name and a list of file names to RDataFrame's constructor, or create a TChain; out of the desired trees and pass that to RDataFrame. Horizontal concatenations of trees or chains (creating a logical dataset with the same number of rows and the union of the; columns of multiple trees) leverages TTree's ""friend"" mechanism. Simple joins of trees that do not have the same number of rows are also possible with indexed friend trees (see below). To use friend trees in RDataFrame, set up trees with the appropriate relationships and then instantiate an RDataFrame; with the main tree:. ~~~{.cpp}; TTree main([...]);; TTree friend([...]);; main.AddFriend(&friend, ""myFriend"");. RDataFrame df(main);; auto df2 = df.Filter(""myFriend.MyCol == 42"");; ~~~. The same applies for TChains. Columns coming from the friend trees can be referred to by their full name, like in the example above,; or the friend tree name can be omitted in case the column name is not ambiguous (e.g. ""MyCol"" could be used instead of; ""myFriend.MyCol"" in the example above if there is no column ""MyCol"" in the main tree). \note A common source of confusion is that trees that are written out from a multi-thread Snapshot() call will have their; entries (block-w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:71919,log,logical,71919,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['log'],['logical']
Testability,"d encourage the use of this source code as a component; * to supporting the PNG file format in commercial products. If you use; * this source code in a product, acknowledgment is not required but would; * be appreciated.; *; * END OF COPYRIGHT NOTICE, DISCLAIMER, and LICENSE.; *; * TRADEMARK; * =========; *; * The name ""libpng"" has not been registered by the Copyright owners; * as a trademark in any jurisdiction. However, because libpng has; * been distributed and maintained world-wide, continually since 1995,; * the Copyright owners claim ""common-law trademark protection"" in any; * jurisdiction where common-law trademark is recognized.; */; /*; * A ""png_get_copyright"" function is available, for convenient use in ""about""; * boxes and the like:; *; * printf(""%s"", png_get_copyright(NULL));; *; * Also, the PNG logo (in PNG format, of course) is supplied in the; * files ""pngbar.png"" and ""pngbar.jpg (88x31) and ""pngnow.png"" (98x31).; */; /*; * The contributing authors would like to thank all those who helped; * with testing, bug fixes, and patience. This wouldn't have been; * possible without all of you.; *; * Thanks to Frank J. T. Wojcik for helping with the documentation.; */; /* Note about libpng version numbers:; *; * Due to various miscommunications, unforeseen code incompatibilities; * and occasional factors outside the authors' control, version numbering; * on the library has not always been consistent and straightforward.; * The following table summarizes matters since version 0.89c, which was; * the first widely used release:; *; * source png.h png.h shared-lib; * version string int version; * ------- ------ ----- ----------; * 0.89c ""1.0 beta 3"" 0.89 89 1.0.89; * 0.90 ""1.0 beta 4"" 0.90 90 0.90 [should have been 2.0.90]; * 0.95 ""1.0 beta 5"" 0.95 95 0.95 [should have been 2.0.95]; * 0.96 ""1.0 beta 6"" 0.96 96 0.96 [should have been 2.0.96]; * 0.97b ""1.00.97 beta 7"" 1.00.97 97 1.0.1 [should have been 2.0.97]; * 0.97c 0.97 97 2.0.97; * 0.98 0.98 98 2.0.98; * 0.99 0.9",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:7135,test,testing,7135,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['test'],['testing']
Testability,"d shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster pla",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7219,log,logical,7219,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['log'],['logical']
Testability,"d->DrawFrame(0.,-2.,10.,2);. TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();. TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();. TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; End_Macro. Note that this functionality has some limitations and does not follow all the TGaxis setting.; In particular the number of divisions or the maximum number digits do not apply. \anchor GA02; ## Logarithmic axis. By default axis are linear. To define a `TGaxis` as logarithmic, it is; enough to create it with the option `""G""`. When plotting an histogram or a graph the logarithmic scale can be set using:. - `gPad->SetLogx(1);` set the logarithmic scale on the X axis; - `gPad->SetLogy(1);` set the logarithmic scale on the Y axis. When the `SetMoreLogLabels()` method is called more labels are drawn; when in logarithmic scale and there is a small number of decades (less than 3). \anchor GA03; ## Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify; the option `""B""`. It useful to superpose axis. \anchor GA03a; ## Arrow on axis; \since **ROOT version 6.27/01:**. To draw an arrow at the end of the axis use the option `"">""`. To draw it at the beginning; of the axis use the option `""<""`. To draw it on both ends use `""<>""`. Begin_Macro(source); {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);. auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");. auto f3 = new TF1(""x3"",""x*x*x"",-10,10);; f3->SetLineColor(kBlue);; f3->Draw(""same"");. // Draw the axis with arrows; auto o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:4646,log,logarithmic,4646,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['log'],['logarithmic']
Testability,"d; it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"". The architecture of the modeler is a combination between a GEANT-like; containment scheme and a normal CSG binary tree at the level of shapes. An; important common feature of all detector geometry descriptions is the; mother-daughter concept. This is the most natural approach when tracking; is concerned and imposes a set of constraints to the way geometry is defined.; Constructive solid geometry composition is used only in order to create more; complex shapes from an existing set of primitives through boolean operations.; This feature is not implemented yet but in future full definition of boolean; expressions will be supported. Practically every geometry defined in GEANT style can be mapped by the modeler.; The basic components used for building the logical hierarchy of the geometry; are called ""volumes"" and ""nodes"". Volumes (sometimes called ""solids"") are fully; defined geometrical objects having a given shape and medium and possibly; containing a list of nodes. Nodes represent just positioned instances of volumes; inside a container volume and they are not directly defined by user. They are; automatically created as a result of adding one volume inside other or dividing; a volume. The geometrical transformation hold by nodes is always defined with; respect to their mother (relative positioning). Reflection matrices are allowed.; All volumes have to be fully aware of their containees when the geometry is; closed. They will build additional structures (voxels) in order to fasten-up; the search algorithms. Finally, nodes can be regarded as bidirectional links; between containers and containees objects. The structure defined in this way is a graph structure since volumes are; replicable (same volume can become daughter node of several other vol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:2383,log,logical,2383,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['log'],['logical']
Testability,"dependencies that llvm doesn't already have.; // - support streaming, so that we don't need to buffer data during compilation; // - 0-decoding tensor values. Tensor values are potentially very large buffers; // of scalars. Because of their potentially large size, avoiding; // serialization/deserialization overhead is preferred.; //; // The simple logger produces an output of the form (each line item on its line); // - header: a json object describing the data that will follow.; // - context: e.g. function name, for regalloc, or ""default"" for module-wide; // optimizations like the inliner. This is the context to which the subsequent; // data corresponds.; // - observation number.; // - tensor values - raw bytes of the tensors, in the order given in the header.; // The values are in succession, i.e. no separator is found between successive; // tensor values. At the end, there is a new line character.; // - [score] - this is optional, and is present if it was present in the header.; // Currently, for final rewards, we output ""0"" scores after each observation,; // except for the last one.; // <repeat>; // The file should be read as binary, but the reason we use newlines is mostly; // ease of debugging: the log can be opened in a text editor and, while tensor; // values are inscrutable, at least the sequence of data can be easily observed.; // Of course, the buffer of tensor values could contain '\n' bytes. A reader; // should use the header information to know how much data to read for the; // tensor values, and not use line information for that.; //; // An example reader, used for test, is available at; // Analysis/models/log_reader.py; //; // Example:; // {""features"":[list of TensorSpecs], ""score"":<a tensor spec>}; // {""context"": ""aFunction""}; // {""observation"": 0}; // <bytes>; // {""outcome"": 0}; // <bytes for the tensor corresponding to the ""score"" spec in the header>; // {""observation"": 1}; // ...; // {""context"": ""anotherFunction""}; // {""observation"": 0}; // ...; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h:1649,log,log,1649,interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h,2,"['log', 'test']","['log', 'test']"
Testability,"der by beginning point).; // IR: Intervals to the right (in descending order by ending point).; //; // Root; // |; // V; // +------------MP:43------------+; // | IL IR |; // | [10,85] [10,85] |; // LS | [31,56] [31,56] | RS; // | [36,54] [36,54] |; // | [39,50] [39,50] |; // | [43,43] [43,43] |; // V V; // +------------MP:25------------+ MP:61------------+; // | IL IR | IL IR |; // | [15,40] [25,41] | [49,65] [50,75] |; // LS | [20,30] [15,40] | RS [50,75] [60,70] | RS; // | [25,41] [20,30] | [55,61] [49,65] |; // | | [60,70] [55,61] |; // V V V; // MP:15 +-------MP:36 MP:74; // IL IR | IL IR IL IR; // [11,16] [12,21] LS | [] [] [71,79] [74,80]; // [12,21] [11,16] | [74,80] [71,79]; // V; // MP:31; // IL IR; // [30,35] [30,35]; //; // The creation of an interval tree is done in 2 steps:; // 1) Insert the interval items by calling; // void insert(PointT Left, PointT Right, ValueT Value);; // Left, Right: the interval left and right limits.; // Value: the data associated with that specific interval.; //; // 2) Create the interval tree by calling; // void create();; //; // Once the tree is created, it is switched to query mode.; // Query the tree by using iterators or container.; //; // a) Iterators over intervals overlapping the given point with very weak; // ordering guarantees.; // find_iterator begin(PointType Point) const;; // find_iterator end() const;; // Point: a target point to be tested for inclusion in any interval.; //; // b) Container:; // IntervalReferences getContaining(PointT Point);; // Point: a target point to be tested for inclusion in any interval.; // Returns vector with all the intervals containing the target point.; //; // The returned intervals are in their natural tree location. They can; // be sorted:; //; // static void sortIntervals(IntervalReferences &Intervals, Sorting Sort);; //; // Ability to print the constructed interval tree:; // void print(raw_ostream &OS, bool HexFormat = true);; // Display the associated data in hexadecimal format.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalTree.h:5065,test,tested,5065,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalTree.h,2,['test'],['tested']
Testability,"ding to pidf. ### WARNING1:; If MyClass is the class of the referenced object, The TObject; part of MyClass must be Streamed. One should not; call MyClass::Class()->IgnoreTObjectStreamer(). ### WARNING2:; A TRef cannot point to another TRef. ## ObjectNumber. When an object is referenced (see TRef assignment operator or TRefArray::Add); a unique identifier is computed and stored in both the fUniqueID of the; referenced and referencing object. This uniqueID is computed by incrementing; by one the static global in TProcessID::fgNumber. fUniqueID is some sort of; serial object number in the current session. One can retrieve at any time; the current value of fgNumber by calling the static function TProcessID::GetObjectCount; or set this number via TProcessID::SetObjectCount. To avoid a growing table of fObjects in TProcessID, in case, for example,; one processes many events in a loop, it might be necessary to reset the; ObjectNumber at the end of processing of one event. See an example; in $ROOTSYS/test/Event.cxx (look at function Build). The value of ObjectNumber (say saveNumber=TProcessID::GetObjectCount()) may be; saved at the beginning of one event and reset to this original value; at the end of the event via TProcessID::SetObjectCount(saveNumber). These; actions may be stacked. ## Action on Demand. The normal behaviour of a TRef has been described above. In addition,; TRef supports also ""Actions on Demand"". It may happen that the object; referenced is not yet in memory, on a separate file or not yet computed.; In this case TRef is able to automatically execute an action:. - call to a compiled function (static function of member function); - call to an interpreted function; - execution of a C++ script. How to select this option?; In the definition of the TRef data member in the original class, do:; ~~~ {.cpp}; TRef fRef; //EXEC:execName. points to something; ~~~; When the special keyword ""EXEC:"" is found in the comment field of the member,; the next string is assumed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRef.cxx:4772,test,test,4772,core/base/src/TRef.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRef.cxx,1,['test'],['test']
Testability,"e Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms....................................OK; // Test 17: Buffer tests for Histograms......................................OK; // Test 18: Extend axis tests for Histograms.................................OK; // Test 19: TH1-THn[Sparse] Conversion tests.................................OK; // Test 20: FillData tests for Histograms and Sparses........................OK; // Test 21: Reference File Read for Histograms and Profiles..................OK; // ****************************************************************************; // stressHistogram: Real Time = 86.22 seconds Cpu Time = 85.64 seconds; // ROOTMARKS = 1292.62 ROOT version: 6.05/01 remotes/origin/master@v6-05-01-336-g5c3d5ff; // ****************************************************************************; // //; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:2746,Test,Test,2746,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,13,"['Test', 'test']","['Test', 'tests']"
Testability,"e \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Computations*.; John Hopkins University Press, Baltimore, 3 edition, 1996.; - <a name=""minuit""></a>F. James. *Minuit*. Long writeup D506, CERN, 1998.; - <a name=""wind72""></a>H. Wind. *Function p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16932,test,test,16932,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['test'],['test']
Testability,"e file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTLINE2; ## Line Width; The line width is expressed in pixel units.; The line width of any class inheriting from `TAttLine` can; be changed using the method `SetLineWidth` and retrieved using the; method `GetLineWidth`.; The following picture shows the line widths from 1 to 10 pixels. Begin_Macro; {; TCanvas *Lw = new TCanvas(""Lw"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineWidth(i);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. \anchor ATTLINE3; ## Line Style; Line styles are identified via integer numbers. The line style of any class; inheriting from `TAttLine` can be changed using the method; `SetLineStyle` and retrieved using the method `GetLineStyle`. The first 10 line styles are predefined as shown on the following picture:. Begin_Macro; {; TCanvas *Ls = new TCanvas(""Ls"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineStyle(i);; lh->SetLineWidth(3);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. Some line styles can be accessed via the following enum:. ~~~ {.cpp}; kSolid = 1; kDashed = 2; kDotted = 3; kDashDotted = 4; ~~~. Additional line styles can be defined using `TStyle::SetLineStyleString`.; For example the line style number 11 can be defined as follow:; ~~~ {.cpp}; gStyle->SetLineStyleString(11,""400 200"");; ~~~; Existing line styles (1 to 10) can be redefined using the same method.; */; ////////////////////////////////////////////////////////////////////////////////; /// AttLine default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx:2523,test,test,2523,core/base/src/TAttLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx,1,['test'],['test']
Testability,"e management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file path of her/his choice, the log file is never * //; // * deleted. * //; // * * //; // * SKIPPED means that the test cannot be run. * //; // * * //; // *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3463,Test,Test,3463,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"e option ""same"" had been specified. - **NOSTACKB** If the option ""nostackb"" is specified histograms are all painted on the same pad; next to each other as bar plots. - **PADS** if option ""pads"" is specified, the current pad/canvas is subdivided into; a number of pads equal to the number of histograms and each histogram; is painted into a separate pad. - **NOCLEAR** By default the background of the histograms is erased before drawing the; histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a; THStack on top of another plot. If the patterns used to draw the histograms in the; stack are transparent, then the plot behind will be visible. See the THistPainter class for the list of valid histograms' painting options. Example;. Begin_Macro(source); {; auto hs = new THStack(""hs"","""");; auto h1 = new TH1F(""h1"",""test hstack"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);; auto h2 = new TH1F(""h2"",""test hstack"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);; auto h3 = new TH1F(""h3"",""test hstack"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);; auto cs = new TCanvas(""cs"",""cs"",10,10,700,900);; TText T; T.SetTextFont(42); T.SetTextAlign(21);; cs->Divide(2,2);; cs->cd(1); hs->Draw(); T.DrawTextNDC(.5,.95,""Default drawing option"");; cs->cd(2); hs->Draw(""nostack""); T.DrawTextNDC(.5,.95,""Option \""nostack\"""");; cs->cd(3); hs->Draw(""nostackb""); T.DrawTextNDC(.5,.95,""Option \""nostackb\"""");; cs->cd(4); hs->Draw(""lego1""); T.DrawTextNDC(.5,.95,""Option \""lego1\"""");; }; End_Macro. A more complex example:. Begin_Macro(source); ../../../tutorials/hist/hstack.C; End_Macro. Note that picking is supported for all drawing modes. \since **ROOT version 6.07/07:**; Stacks of 2D histograms can also be painted as candle plots:; \since **ROOT version 6.09/02:**; Stacks of 2D histograms can also be painted as violin plots, combinations of candle and; violin plots are possible ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx:1838,test,test,1838,hist/hist/src/THStack.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx,3,['test'],['test']
Testability,"e-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass looks for instructions that can be replaced by a Test Data Class; // instruction, and replaces them when profitable.; //; // Roughly, the following rules are recognized:; //; // 1: fcmp pred X, 0 -> tdc X, mask; // 2: fcmp pred X, +-inf -> tdc X, mask; // 3: fcmp pred X, +-minnorm -> tdc X, mask; // 4: tdc (fabs X), mask -> tdc X, newmask; // 5: icmp slt (bitcast float X to int), 0 -> tdc X, mask [ie. signbit]; // 6: icmp sgt (bitcast float X to int), -1 -> tdc X, mask; // 7: icmp ne/eq (call @llvm.s390.tdc.*(X, mask)) -> tdc X, mask/~mask; // 8: and i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 & M2); // 9: or i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 | M2); // 10: xor i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 ^ M2); //; // The pass works in 4 steps:; //; // 1. All fcmp and icmp instructions in a function are checked for a match; // with rules 1-3 and 5-7. Their TDC equivalents are stored in; // the ConvertedInsts mapping. If the operand of a fcmp instruction is; // a fabs, it's also folded according to rule 4.; // 2. All and/or/xor i1 instructions whose both operands have been already; // mapped are mapped according to rules 8-10. LogicOpsWorklist is used; // as a queue of instructions to check.; // 3. All mapped instructions that are considered worthy of conversion (ie.; // replacing them will actually simplify the final code) are replaced; // with a call to the s390.tdc intrinsic.; // 4. All intermediate results of replaced instructions are removed if unused.; //; // Instructions that match rules 1-3 are considered unworthy of conversion; // on their own (since a comparison instruction is superior), but are mapped; // in the hopes of folding the result using rules 4 and 8-10 (likely removing; // the original comparison in the process).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp:1540,Log,LogicOpsWorklist,1540,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp,1,['Log'],['LogicOpsWorklist']
Testability,"e. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. the idea behind the boosting is, that signal events from the training; sample, that *end up in a background node (and vice versa) are given a; larger weight than events that are in the correct leave node. This; results in a re-weighed training event sample, with which then a new; decision tree can be developed. The boosting can be applied several; times (typically 100-500 times) and one ends up with a set of decision; trees (a forest). ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Analysis:. applying an individual decision tree to a test event results in a; classification of the event as either signal or background. For the; boosted decision tree selection, an event is successively subjected to; the whole set of decision trees and depending on how often it is; classified as signal, a ""likelihood"" estimator is constructed for the; event being signal or background. The value of this estimator is the; one which is then used to select the events from an event sample, and; the cut value on this estimator defines the efficiency and purity of; the selection.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:3529,test,test,3529,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,1,['test'],['test']
Testability,"e.c.b, the compiler will generate code; // &e + 4; //; // The compile-once run-everywhere instead generates the following code; // r = 4; // &e + r; // The ""4"" in ""r = 4"" can be changed based on a particular kernel version.; // For example, on a particular kernel version, if struct s is changed to; //; // struct s {; // int new_field;; // int a;; // int b;; // }; //; // By repeating the member access on the host, the bpf loader can; // adjust ""r = 4"" as ""r = 8"".; //; // This feature relies on the following three intrinsic calls:; // addr = preserve_array_access_index(base, dimension, index); // addr = preserve_union_access_index(base, di_index); // !llvm.preserve.access.index <union_ditype>; // addr = preserve_struct_access_index(base, gep_index, di_index); // !llvm.preserve.access.index <struct_ditype>; //; // Bitfield member access needs special attention. User cannot take the; // address of a bitfield acceess. To facilitate kernel verifier; // for easy bitfield code optimization, a new clang intrinsic is introduced:; // uint32_t __builtin_preserve_field_info(member_access, info_kind); // In IR, a chain with two (or more) intrinsic calls will be generated:; // ...; // addr = preserve_struct_access_index(base, 1, 1) !struct s; // uint32_t result = bpf_preserve_field_info(addr, info_kind); //; // Suppose the info_kind is FIELD_SIGNEDNESS,; // The above two IR intrinsics will be replaced with; // a relocatable insn:; // signness = /* signness of member_access */; // and signness can be changed by bpf loader based on the; // types on the host.; //; // User can also test whether a field exists or not with; // uint32_t result = bpf_preserve_field_info(member_access, FIELD_EXISTENCE); // The field will be always available (result = 1) during initial; // compilation, but bpf loader can patch with the correct value; // on the target host where the member_access may or may not be available; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp:2567,test,test,2567,interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,1,['test'],['test']
Testability,"eature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... OK; // Test 4 : Filename formats when adding files to TChain.......... using Event_8a.root and Event_8b.root; // : treename in chain..................................... OK; // : treename to AddFile................................... OK; // : treename in filenames, slash-suffix style............. OK; // : bad treename to AddFile, good in filename............. OK; // : treename and url query in filename.................... OK; // : treename given in url frag in filename................ OK; // : filename with a url query in Add...................... OK; // ****************************************************************************; //_______",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:1697,Test,Test,1697,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,1,['Test'],['Test']
Testability,"ect that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered as part of the; geometry. Visibility or tracking properties of volumes can be provided both; at build time or after geometry is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:5908,log,logical,5908,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['log'],['logical']
Testability,"ectrum (Fig. 12).; ///; /// \image html TSpectrum_Deconvolution_wide1.jpg Fig. 12 Study of Gold deconvolution algorithm.The original source spectrum is drawn with black color, spectrum after 100 iterations with red color, spectrum after 1000 iterations with blue color, spectrum after 10000 iterations with green color and spectrum after 100000 iterations with magenta color.; ///; /// For relatively narrow peaks in the above given example the Gold; /// deconvolution method is able to decompose overlapping peaks practically to; /// delta - functions. In the next example we have chosen a synthetic data; /// (spectrum, 256 channels) consisting of 5 very closely positioned, relatively; /// wide peaks (sigma =5), with added noise (Fig. 13). Thin lines represent; /// pure Gaussians (see Table 1); thick line is a resulting spectrum with; /// additive noise (10% of the amplitude of small peaks).; ///; /// \image html TSpectrum_Deconvolution_wide2.jpg Fig. 13 Testing example of synthetic spectrum composed of 5 Gaussians with added noise.; ///; /// | Peak # | Position | Height | Area |; /// |----------|----------|--------|--------|; /// | 1 | 50 | 500 | 10159 |; /// | 2 | 70 | 3000 | 60957 |; /// | 3 | 80 | 1000 | 20319 |; /// | 4 | 100 | 5000 | 101596 |; /// | 5 | 110 | 500 | 10159 |; ///; /// Table 1 Positions, heights and areas of peaks in the spectrum shown in Fig. 13.; ///; /// In ideal case, we should obtain the result given in Fig. 14. The areas of; /// the Gaussian components of the spectrum are concentrated completely to; /// delta-functions. When solving the overdetermined system of linear equations; /// with data from Fig. 13 in the sense of minimum least squares criterion; /// without any regularisation we obtain the result with large oscillations; /// (Fig. 15). From mathematical point of view, it is the optimal solution in; /// the unconstrained space of independent variables. From physical point of; /// view we are interested only in a meaningful solution. Therefo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:5604,Test,Testing,5604,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['Test'],['Testing']
Testability,"ed both; at build time or after geometry is closed, but global visualization settings; (see TGeoPainter class) should not be provided at build time, otherwise the; drawing package will be loaded. There is also a list of specific rules :; positioned daughters should not extrude their mother or intersect with sisters; unless this is specified (see TGeoVolume::AddNodeOverlap()), the top volume; (containing all geometry tree) must be specified before closing the geometry; and must not be positioned - it represents the global reference frame. After; building the full geometry tree, the geometry must be closed; (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:7806,log,logical,7806,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['log'],['logical']
Testability,"ed geometrical objects having a given shape and medium and possibly; containing a list of nodes. Nodes represent just positioned instances of volumes; inside a container volume and they are not directly defined by user. They are; automatically created as a result of adding one volume inside other or dividing; a volume. The geometrical transformation hold by nodes is always defined with; respect to their mother (relative positioning). Reflection matrices are allowed.; All volumes have to be fully aware of their containees when the geometry is; closed. They will build additional structures (voxels) in order to fasten-up; the search algorithms. Finally, nodes can be regarded as bidirectional links; between containers and containees objects. The structure defined in this way is a graph structure since volumes are; replicable (same volume can become daughter node of several other volumes),; every volume becoming a branch in this graph. Any volume in the logical graph; can become the actual top volume at run time (see TGeoManager::SetTopVolume()).; All functionalities of the modeler will behave in this case as if only the; corresponding branch starting from this volume is the registered geometry. \image html geom_graf.jpg. A given volume can be positioned several times in the geometry. A volume; can be divided according default or user-defined patterns, creating automatically; the list of division nodes inside. The elementary volumes created during the; dividing process follow the same scheme as usual volumes, therefore it is possible; to position further geometrical structures inside or to divide them further more; (see TGeoVolume::Divide()). The primitive shapes supported by the package are basically the GEANT3; shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel; planes. All basic primitives inherits from class TGeoBBox since the bounding box; of a solid is essential for the tracking algorithms. They also implement the; virtual methods def",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:3467,log,logical,3467,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['log'],['logical']
Testability,"ed in AP. */; /* Unchanged on exit. */; /* N - INTEGER. */; /* On entry, N specifies the order of the matrix A. */; /* N must be at least zero. */; /* Unchanged on exit. */; /* ALPHA - DOUBLE PRECISION. */; /* On entry, ALPHA specifies the scalar alpha. */; /* Unchanged on exit. */; /* X - DOUBLE PRECISION array of dimension at least */; /* ( 1 + ( n - 1 )*abs( INCX ) ). */; /* Before entry, the incremented array X must contain the n */; /* element vector x. */; /* Unchanged on exit. */; /* INCX - INTEGER. */; /* On entry, INCX specifies the increment for the Elements of */; /* X. INCX must not be zero. */; /* Unchanged on exit. */; /* AP - DOUBLE PRECISION array of DIMENSION at least */; /* ( ( n*( n + 1 ) )/2 ). */; /* Before entry with UPLO = 'U' or 'u', the array AP must */; /* contain the Upper triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 1, 2 ) */; /* and a( 2, 2 ) respectively, and so on. On exit, the array */; /* AP is overwritten by the Upper triangular part of the */; /* updated matrix. */; /* Before entry with UPLO = 'L' or 'l', the array AP must */; /* contain the Lower triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 2, 1 ) */; /* and a( 3, 1 ) respectively, and so on. On exit, the array */; /* AP is overwritten by the Lower triangular part of the */; /* updated matrix. */; /* Level 2 Blas routine. */; /* -- Written on 22-October-1986. */; /* Jack Dongarra, Argonne National Lab. */; /* Jeremy Du Croz, Nag Central Office. */; /* Sven Hammarling, Nag Central Office. */; /* Richard Hanson, Sandia National Labs. */; /* .. Parameters .. */; /* .. Local Scalars .. */; /* .. External Functions .. */; /* .. External Subroutines .. */; /* .. */; /* .. Executable Statements .. */; /* Test the input parameters. */; /* Parameter adjustments */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspr.cxx:2617,Test,Test,2617,math/minuit2/src/mndspr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspr.cxx,1,['Test'],['Test']
Testability,"ed to the identity matrix, but it may also be; initialized by an other TLorentzRotation,; by a pure TRotation or by a boost:. TLorentzRotation l; // l is; initialized as identity; TLorentzRotation m(l); // m = l; TRotation r;; TLorentzRotation lr(r);; TLorentzRotation lb1(bx,by,bz);; TVector3 b;; TLorentzRotation lb2(b);. The Matrix for a Lorentz boosts is:. ~~~; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; ~~~. with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta); and gamma'=(gamma-1)/beta*beta.; ### Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions; XX(), XY() .. TT(),; through the operator (int,int):. ~~~; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component. if (l==m) {...} // test for equality; if (l !=m) {...} // test for inequality; if (l.IsIdentity()) {...} // test for identity; ~~~. ### Transformations of a LorentzRotation. #### Compound transformations; There are four possibilities to find the product of two TLorentzRotation; transformations:. ~~~; TLorentzRotation a,b,c;; c = b*a;// product; c = a.MatrixMultiplication(b); // a is unchanged; a *= b;// Attention: a=a*b; c = a.Transform(b)// a=b*a then c=a; ~~~. #### Lorentz boosts. ~~~; Double_t bx, by, bz;; TVector3 v(bx,by,bz);; TLorentzRotation l;; l.Boost(v);; l.Boost(bx,by,bz);; ~~~. #### Rotations. ~~~; TVector3 axis;; l.RotateX(TMath::Pi()); // rotation around x-axis; l.Rotate(.5,axis);// rotation around specified vector; ~~~. #### Inverse transformation; The matrix for the inverse transformation of a TLorentzRotation is as follows:. ~~~; | xx yx zx -tx |; | |; | xy yy zy -ty |; | |; | xz yz zz -tz |; | |; |-xt -yt -zt tt |; ~~~. To return the inverse transformation keeping the current unchanged; use the membe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzRotation.cxx:1440,test,test,1440,math/physics/src/TLorentzRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzRotation.cxx,1,['test'],['test']
Testability,"ed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boosting can be applied several times (typically 100-500 times); and one ends up with a set of decision trees (a forest).; Gradient boosting works more like a function expansion approach, where; each tree corresponds to a summand. The parameters for each summand (tree); are determined by the minimization of a error function (binomial log-; likelihood for classification and Huber loss for regression).; A greedy algorithm is used, which means, that only one tree is modified; at a time, while the other trees stay fixed. ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Random Trees:. Similar to the ""Random Forests"" from Leo Breiman and Adele Cutler, it; uses the bagging algorithm together and bases the determination of the; best node-split during the training on a random subset of variables only; which is individually chosen for each split. ### Analysis:. Applying an individual decision tree to a test event results in a; classification of the event as either signal or background. For the; boosted decision tree selection, an event is successively subjected to; the whole set of decision trees and depending on how often it is; classi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:3747,log,log,3747,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['log'],['log']
Testability,"ed warranty. Mark Spychalla disclaims all warranties with regard to this software,; including all implied warranties of merchantability and fitness, in no; event shall Mark Spychalla be liable for any special, indirect or; consequential damages or any damages whatsoever resulting from loss of use,; data or profits, whether in an action of contract, negligence or other; tortious action, arising out of or in connection with the use or performance; of this software.; */; /*. NOTE ON X3D CODING STYLE:. Don't think I usually code in the gerberized fashion that X3D demonstrates.; X3D was written for speed at any cost. My goal was to write the fastest 3D; object viewer that I could, period. Regular programs ought to be written; with different goals in mind such as:. 1) A program has excellent documentation that ANYONE can read.; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H) Select a single indentation style and stick with it.; I) Use a consist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:1721,test,tests,1721,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['test'],['tests']
Testability,"ed, the names of the; variables X,Y are automatically taken from the current pad title. Example:. Assume a TTree object T and:; ~~~ {.cpp}; Root > T.Draw(""abs(fMomemtum):fEtot""); ~~~; the TCutG members fVarX, fVary will be set to:; ~~~ {.cpp}; fVarx = fEtot; fVary = abs(fMomemtum); ~~~; A graphical cut can be used in a TTree selection expression:; ~~~ {.cpp}; Root > T.Draw(""fEtot"",""cutg1""); ~~~; where ""cutg1"" is the name of an existing graphical cut. Note that, as shown in the example above, a graphical cut may be used in a; selection expression when drawing TTrees expressions of 1-d, 2-d or; 3-dimensions. The expressions used in TTree::Draw can reference the variables in; the fVarX, fVarY of the graphical cut plus other variables. When the TCutG object is created by TTree::Draw, it is added to the list of special objects in; the main TROOT object pointed by gROOT. To retrieve a pointer to this object; from the code or command line, do:; ~~~ {.cpp}; TCutG *mycutg;; mycutg = (TCutG*)gROOT->GetListOfSpecials()->FindObject(""CUTG""); mycutg->SetName(""mycutg"");; ~~~; When the TCutG is not created via TTree::Draw, one must set the variable names; corresponding to x,y if one wants to use the cut as input to TTree::Draw,eg; ~~~ {.cpp}; TCutG *cutg = new TCutG(""mycut"",6);; cutg->SetVarX(""y"");; cutg->SetVarY(""x"");; cutg->SetPoint(0,-0.3586207,1.509534);; cutg->SetPoint(1,-1.894181,-0.529661);; cutg->SetPoint(2,0.07780173,-1.21822);; cutg->SetPoint(3,-1.0375,-0.07944915);; cutg->SetPoint(4,0.756681,0.1853814);; cutg->SetPoint(5,-0.3586207,1.509534);; ~~~; Example of use of a TCutG in TTree::Draw:; ~~~ {.cpp}; tree.Draw(""x:y"",""mycutg && z>0 && sqrt(x)>1""); ~~~; A Graphical cut may be drawn via TGraph::Draw. It can be edited like a normal; TGraph. Being a TGraph the drawing options and behavior relatives to graphs apply.; They are listed in the TGraphPainter description.; See in particular ""Graphs in logarithmic scale"". A Graphical cut may be saved to a file via TCutG::Write.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:2981,log,logarithmic,2981,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,1,['log'],['logarithmic']
Testability,"efines the //; // subset, the number of routines to be tested as well as the pointes //; // for these. Every tests is mean to be simple enough to be understood //; // without much comments. //; // //; // Finally, for debugging reasons, the struct compareOptions can be //; // used to define the level of output of the tests, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles..........................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:1783,Test,Test,1783,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,2,['Test'],"['Test', 'Testing']"
Testability,"eight of events in the weighted histogram is equal to; ///\f[; /// W = \sum_{i=1}^{r} w_{i}; ///\f]; /// Let us formulate the hypothesis of identity of an unweighted histogram; /// to a weighted histogram so that there exist r constants p1,...,pr, such; /// that; ///\f[; /// \sum_{i=1}^{r} p_{i} = 1; ///\f]; /// for the unweighted histogram. The weight wi is a random variable with a; /// distribution approximated by the normal probability distribution; /// \f$ N(Wp_{i},\sigma_{i}^{2}) \f$ where \f$ \sigma_{i}^{2} \f$ is the variance of the weight wi.; /// If we replace the variance \f$ \sigma_{i}^{2} \f$; /// with estimate \f$ s_{i}^{2} \f$ (sum of squares of weights of; /// events in the ith bin) and the hypothesis of identity is valid, then the; /// maximum likelihood estimator of pi,i=1,...,r, is; ///\f[; /// \hat{p}_{i} = \frac{Ww_{i}-Ns_{i}^{2}+\sqrt{(Ww_{i}-Ns_{i}^{2})^{2}+4W^{2}s_{i}^{2}n_{i}}}{2W^{2}}; ///\f]; /// We may then use the test statistic; ///\f[; /// X^{2} = \sum_{i=1}^{r} \frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r} \frac{(w_{i}-W\hat{p}_{i})^{2}}{s_{i}^{2}}; ///\f]; /// and it has approximately a \f$ \sigma^{2}_{(r-1)} \f$ distribution [2]. This test, as well; /// as the original one [3], has a restriction on the expected frequencies. The; /// expected frequencies recommended for the weighted histogram is more than 25.; /// The value of the minimal expected frequency can be decreased down to 10 for; /// the case when the weights of the events are close to constant. In the case; /// of a weighted histogram if the number of events is unknown, then we can; /// apply this recommendation for the equivalent number of events as; ///\f[; /// n_{i}^{equiv} = \frac{ w_{i}^{2} }{ s_{i}^{2} }; ///\f]; /// The minimal expected frequency for an unweighted histogram must be 1. Notice; /// that any usual (unweighted) histogram can be considered as a weighted; /// histogram with events that have constant weights equal to 1.; /// The variance \f$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7248,test,test,7248,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"ent; // stmt->Process();; // // destroy object; // delete stmt;; // }; // delete serv;; //; //; // 2. Insert data to data base; // ===============================================; // There is a special syntax of SQL queries which allows to use values; // provided as parameters. For instance, to insert one row into the TESTTABLE created; // with the previous example, one can simply execute a query like:; //; // serv->Query(""INSERT INTO TESTTABLE VALUES (1, 2, \""name1\"", \""value1\"""");; //; // However, when many (100-1000) rows should be inserted, each call of; // TSQLServer::Query() method will cause communication loop with database; // server, and the statement has to be evaluated each time instead of using a prepared statement.; // As a result, insertion of data takes too much time.; //; // TSQLStatement provides a mechanism to insert many rows at once.; // First of all, an appropriate statement should be created:; //; // TSQLStatement* stmt = serv->Statement(""INSERT INTO TESTTABLE (ID1, ID2, FFIELD, FVALUE) VALUES (?, ?, ?, ?)"", 100);; //; // Here question marks ""?"" indicate where statement parameters can be inserted.; // To specify values of parameters, SetInt(), SetDouble(), SetString() and other; // methods of the TSQLStatement class should be used. Before parameters values; // can be specified, the NextIteration() method of statement class should be called.; // For each new row, NextIteration() has to be called first, then parameters values are; // specified. There is one limitation for most type-aware DBMS - once a parameter is set as integer via; // SetInt(), all other rows should be specified as integer. At the end,; // TSQLStatement::Process() should be called. Here a small example:; //; // // first, create statement; // TSQLStatement* stmt = serv->Statement(""INSERT INTO TESTTABLE (ID1, ID2, FFIELD, FVALUE) VALUES (?, ?, ?, ?)"", 100);; //; // for (int n=0;n<357;n++); // if (stmt->NextIteration()) {; // stmt->SetInt(0, 123);; // stmt->SetUInt(1, n+10);; // st",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:2980,TEST,TESTTABLE,2980,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['TEST'],['TESTTABLE']
Testability,"ept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via; a TPad repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ### Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; SetSectionsValid(TBuffer3D::kBoundingBox); will generate IDs for each physical; object internally. In the second you can specify a unique identifier from the; client, which allows the viewer to be more efficient. It can now cache both logical; and physical objects, and only discard physical objects no longer of interest as; part of scene rebuilds. ### Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ### Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:7929,log,logical,7929,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,2,['log'],['logical']
Testability,"epted for 0.05 significant level. The behavior; /// of the normalized residuals plot (see Fig. 1c) and the normal Q-Q plot; /// (see Fig. 1d) of residuals are regular and we cannot identify the outliers; /// or bins with a big influence on \f$ \chi^{2} \f$.; ///; /// The second example presents the same two histograms but 17 events was added; /// to content of bin number 15 in unweighted histogram. Fig.2 shows the result; /// of comparison of the unweighted histogram with 217 events (minimal expected; /// frequency equal to one) and the weighted histogram with 500 events (minimal; /// expected frequency equal to 25); /// Begin_Macro; /// ../../../tutorials/math/chi2test.C(17); /// End_Macro; /// Fig 2. An example of comparison of the unweighted histogram with 217 events; /// and the weighted histogram with 500 events:; /// 1. unweighted histogram;; /// 2. weighted histogram;; /// 3. normalized residuals plot;; /// 4. normal Q-Q plot of residuals.; ///; /// The value of the test statistic \f$ \chi^{2} \f$ is equal to; /// 32.33 with p-value equal to 0.029, therefore the hypothesis of identity of; /// the two histograms is rejected for 0.05 significant level. The behavior of; /// the normalized residuals plot (see Fig. 2c) and the normal Q-Q plot (see; /// Fig. 2d) of residuals are not regular and we can identify the outlier or; /// bin with a big influence on \f$ \chi^{2} \f$.; ///; /// #### References:; ///; /// - [1] Pearson, K., 1904. On the Theory of Contingency and Its Relation to; /// Association and Normal Correlation. Drapers' Co. Memoirs, Biometric; /// Series No. 1, London.; /// - [2] Gagunashvili, N., 2006. \f$ \sigma^{2} \f$ test for comparison; /// of weighted and unweighted histograms. Statistical Problems in Particle; /// Physics, Astrophysics and Cosmology, Proceedings of PHYSTAT05,; /// Oxford, UK, 12-15 September 2005, Imperial College Press, London, 43-44.; /// Gagunashvili,N., Comparison of weighted and unweighted histograms,; /// arXiv:physics/06",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:13297,test,test,13297,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"er struct; // IRAttribute. In the simplest case, a subclass inherits from IRAttribute with; // a proper Attribute::AttrKind as template parameter. The Attributor; // manifestation framework will then create and place a new attribute if it is; // allowed to do so (based on the abstract state). Other use cases can be; // achieved by overloading AbstractAttribute or IRAttribute methods.; //; //; // The ""mechanics"" of adding a new ""abstract attribute"":; // - Define a class (transitively) inheriting from AbstractAttribute and one; // (which could be the same) that (transitively) inherits from AbstractState.; // For the latter, consider the already available BooleanState and; // {Inc,Dec,Bit}IntegerState if they fit your needs, e.g., you require only a; // number tracking or bit-encoding.; // - Implement all pure methods. Also use overloading if the attribute is not; // conforming with the ""default"" behavior: A (set of) LLVM-IR attribute(s) for; // an argument, call site argument, function return value, or function. See; // the class and method descriptions for more information on the two; // ""Abstract"" classes and their respective methods.; // - Register opportunities for the new abstract attribute in the; // `Attributor::identifyDefaultAbstractAttributes` method if it should be; // counted as a 'default' attribute.; // - Add sufficient tests.; // - Add a Statistics object for bookkeeping. If it is a simple (set of); // attribute(s) manifested through the Attributor manifestation framework, see; // the bookkeeping function in Attributor.cpp.; // - If instructions with a certain opcode are interesting to the attribute, add; // that opcode to the switch in `Attributor::identifyAbstractAttributes`. This; // will make it possible to query all those instructions through the; // `InformationCache::getOpcodeInstMapForFunction` interface and eliminate the; // need to traverse the IR repeatedly.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:5395,test,tests,5395,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['test'],['tests']
Testability,ere is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogr,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1758,Test,Test,1758,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"eriments based on random values from the parent distribution,; /// compare the KS distance of the pseudoexperiment to the parent; /// distribution, and count all the KS values above the value; /// obtained from the original data to Monte Carlo distribution.; /// The number of pseudo-experiments nEXPT is by default 1000, and; /// it can be changed by specifying the option as ""X=number"",; /// for example ""X=10000"" for 10000 toys.; /// The function returns the probability.; /// (thanks to Ben Kilminster to submit this procedure). Note that; /// this option ""X"" is much slower.; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF; ///; /// NOTE1; /// A good description of the Kolmogorov test can be seen at:; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm; ///; /// NOTE2; /// see also alternative function TH1::Chi2Test; /// The Kolmogorov test is assumed to give better results than Chi2Test; /// in case of histograms with low statistics.; ///; /// NOTE3 (Jan Conrad, Fred James); /// ""The returned value PROB is calculated such that it will be; /// uniformly distributed between zero and one for compatible histograms,; /// provided the data are not binned (or the number of bins is very large; /// compared with the number of events). Users who have access to unbinned; /// data and wish exact confidence levels should therefore not put their data; /// into histograms, but should call directly TMath::KolmogorovTest. On; /// the other hand, since TH1 is a convenient way of collecting data and; /// saving space, this function has been provided. However, the values of; /// PROB for binned data will be shifted slightly higher than expected,; /// depending on the effects of the binning. For example, when comparing two; /// uniform distributions of 500 events in 100 bins, the values of PROB,; /// instead of being exactly uniformly distrib",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1948,test,test,1948,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"ernal buffers; * or an error code, which can be tested using ZSTD_isError().; *; * At any moment, it's possible to flush whatever data might remain stuck within internal buffer,; * using ZSTD_compressStream2() with ZSTD_e_flush. `output->pos` will be updated.; * Note that, if `output->size` is too small, a single invocation with ZSTD_e_flush might not be enough (return code > 0).; * In which case, make some room to receive more compressed data, and call again ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_flush until it returns 0, at which point you can change the; * operation.; * note: ZSTD_e_flush will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if internal buffers are entirely flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * Calling ZSTD_compressStream2() with ZSTD_e_end instructs to finish a frame.; * It will perform a flush and write frame epilogue.; * The epilogue is required for decoders to consider a frame completed.; * flush operation is the same, and follows same rules as calling ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_end until it returns 0, at which point you are free to; * start a new frame.; * note: ZSTD_e_end will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if frame fully completed and fully flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * *******************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:3955,test,tested,3955,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['test'],['tested']
Testability,es fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2182,Log,Log,2182,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"es=dcopy->GetNNodes();; if (previousNnodes == nnodes) troubleCount++;; else {; troubleCount=0; // reset counter; if (nnodes < previousNnodes / 2 ) fDeltaPruneStrength /= 2.;; }; previousNnodes = nnodes;; if (troubleCount > 20) {; if (methodIndex == 0 && fPruneStrength <=0) {//maybe you need larger stepsize ??; fDeltaPruneStrength *= 5;; Log() << kINFO << ""<PruneTree> trouble determining optimal prune strength""; << "" for Tree "" << methodIndex; << "" --> first try to increase the step size""; << "" currently Prunestrenght= "" << alpha; << "" stepsize "" << fDeltaPruneStrength << "" "" << Endl;; troubleCount = 0; // try again; fPruneStrength = 1; // if it was for the first time..; } else if (methodIndex == 0 && fPruneStrength <=2) {//maybe you need much larger stepsize ??; fDeltaPruneStrength *= 5;; Log() << kINFO << ""<PruneTree> trouble determining optimal prune strength""; << "" for Tree "" << methodIndex; << "" --> try to increase the step size even more.. ""; << "" if that still didn't work, TRY IT BY HAND""; << "" currently Prunestrenght= "" << alpha; << "" stepsize "" << fDeltaPruneStrength << "" "" << Endl;; troubleCount = 0; // try again; fPruneStrength = 3; // if it was for the first time..; } else {; forceStop=kTRUE;; Log() << kINFO << ""<PruneTree> trouble determining optimal prune strength""; << "" for Tree "" << methodIndex << "" at tested prune strength: "" << alpha << "" --> abort forced, use same strength as for previous tree:""; << fPruneStrength << Endl;; }; }; if (fgDebugLevel==1) Log() << kINFO << ""Pruneed with (""<<alpha; << "") give quality: "" << q.back(); << "" and #nodes: "" << nnodes; << Endl;; delete dcopy;; }; if (!forceStop) {; multimap<Double_t,Double_t>::reverse_iterator it=quality.rend();; it++;; fPruneStrength = it->second;; // adjust the step size for the next tree.. think that 20 steps are sort of; // fine enough.. could become a tunable option later..; fDeltaPruneStrength *= Double_t(q.size())/20.;; }. fTree->SetPruneStrength(fPruneStrength);; fTree->PruneTree();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:1818,Log,Log,1818,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,3,"['Log', 'test']","['Log', 'tested']"
Testability,"essProof -h * //; // * * //; // * To run interactively: * //; // * $ root * //; // * root[] .include $ROOTSYS/tutorials * //; // * root[] .L stressProof.cxx+ * //; // * root[] stressProof(master, tests, wrks, verbose, logfile, dyn, \ * //; // * dyn, skipds, h1src, eventsrc, dryrun) * //; // * * //; // * The arguments have the same meaning as above except for * //; // * verbose [Int_t] increasing verbosity (0 == minimal) * //; // * dyn [Bool_t] if kTRUE run in dynamic startup mode * //; // * skipds [Bool_t] if kTRUE the dataset related tests are skipped * //; // * * //; // * A certain number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:1578,Log,Log,1578,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,2,"['Log', 'Test']","['Log', 'Test']"
Testability,"essibility.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()). The next step is to normalize the frequencies.; FSE_normalizeCount() will ensure that sum of frequencies is == 2 ^'tableLog'.; It also guarantees a minimum of 1 to any Symbol with frequency >= 1.; You can use 'tableLog'==0 to mean ""use default tableLog value"".; If you are unsure of which tableLog value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:1653,test,tested,1653,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['test'],['tested']
Testability,"est 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2847,Test,Test,2847,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"et to 1, then; /// only floating-point registers are being saved (d8-dN, where N is; /// 8 + Reg). The special case of the R bit being set to 1 and Reg equal; /// to 7 indicates that no registers are saved.; /// R : 1-bit flag indicating whether the non-volatile registers are integer or; /// floating-point. 0 indicates integer, 1 indicates floating-point. The; /// special case of the R-flag being set and Reg being set to 7 indicates; /// that no non-volatile registers are saved.; /// L : 1-bit flag indicating whether the function saves/restores the link; /// register (LR); /// C : 1-bit flag indicating whether the function includes extra instructions; /// to setup a frame chain for fast walking. If this flag is set, r11 is; /// implicitly added to the list of saved non-volatile integer registers.; /// Stack Adjust : 10-bit field indicating the number of bytes of stack that are; /// allocated for this function. Only values between 0x000 and; /// 0x3f3 can be directly encoded. If the value is 0x3f4 or; /// greater, then the low 4 bits have special meaning as follows:; /// - Bit 0-1; /// indicate the number of words' of adjustment (1-4), minus 1; /// - Bit 2; /// indicates if the prologue combined adjustment into push; /// - Bit 3; /// indicates if the epilogue combined adjustment into pop; ///; /// RESTRICTIONS:; /// - IF C is SET:; /// + L flag must be set since frame chaining requires r11 and lr; /// + r11 must NOT be included in the set of registers described by Reg; /// - IF Ret is 0:; /// + L flag must be set; // NOTE: RuntimeFunction is meant to be a simple class that provides raw access; // to all fields in the structure. The accessor methods reflect the names of; // the bitfields that they correspond to. Although some obvious simplifications; // are possible via merging of methods, it would prevent the use of this class; // to fully inspect the contents of the data structure which is particularly; // useful for scenarios such as llvm-readobj to aid in testing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h:3844,test,testing,3844,interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,1,['test'],['testing']
Testability,"evisions. It does this by bisecting over an rsp file. Between two; build directories, this script will make the rsp file reference the current; build directory's version of some set of the rsp's object files/libraries, and; reference the other build directory's version of the same files for the; remaining set of object files/libraries. Build the target in two separate directories with the two compiler revisions,; keeping the rsp file around since ninja by default deletes the rsp file after; building.; $ ninja -d keeprsp mytarget. Create a script to build the target and run an interesting test. Get the; command to build the target via; $ ninja -t commands | grep mytarget; The command to build the target should reference the rsp file.; This script doesn't care if the test script returns 0 or 1 for specifically the; successful or failing test, just that the test script returns a different; return code for success vs failure.; Since the command that `ninja -t commands` is run from the build directory,; usually the test script cd's to the build directory. $ rsp_bisect.py --test=path/to/test_script --rsp=path/to/build/target.rsp; --other_rel_path=../Other; where --other_rel_path is the relative path from the first build directory to; the other build directory. This is prepended to files in the rsp. For a full example, if the foo target is suspected to contain a miscompile in; some file, have two different build directories, buildgood/ and buildbad/ and; run; $ ninja -d keeprsp foo; in both so we have two versions of all relevant object files that may contain a; miscompile, one built by a good compiler and one by a bad compiler. In buildgood/, run; $ ninja -t commands | grep '-o .*foo'; to get the command to link the files together. It may look something like; clang -o foo @foo.rsp. Now create a test script that runs the link step and whatever test reproduces a; miscompile and returns a non-zero exit code when there is a miscompile. For; example; ```; #!/bin/bash; # immedia",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py:1163,test,test,1163,interpreter/llvm-project/llvm/utils/rsp_bisect.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py,1,['test'],['test']
Testability,"ew:; ///; /// Comparison of two histograms expect hypotheses that two histograms; /// represent identical distributions. To make a decision p-value should; /// be calculated. The hypotheses of identity is rejected if the p-value is; /// lower then some significance level. Traditionally significance levels; /// 0.1, 0.05 and 0.01 are used. The comparison procedure should include an; /// analysis of the residuals which is often helpful in identifying the; /// bins of histograms responsible for a significant overall \f$ \chi^{2} \f$ value.; /// Residuals are the difference between bin contents and expected bin; /// contents. Most convenient for analysis are the normalized residuals. If; /// hypotheses of identity are valid then normalized residuals are; /// approximately independent and identically distributed random variables; /// having N(0,1) distribution. Analysis of residuals expect test of above; /// mentioned properties of residuals. Notice that indirectly the analysis; /// of residuals increase the power of \f$ \chi^{2} \f$ test.; ///; /// #### Methods of comparison:; ///; /// \f$ \chi^{2} \f$ test for comparison two (unweighted) histograms:; /// Let us consider two histograms with the same binning and the number; /// of bins equal to r. Let us denote the number of events in the ith bin; /// in the first histogram as ni and as mi in the second one. The total; /// number of events in the first histogram is equal to:; /// \f[; /// N = \sum_{i=1}^{r} n_{i}; /// \f]; /// and; /// \f[; /// M = \sum_{i=1}^{r} m_{i}; /// \f]; /// in the second histogram. The hypothesis of identity (homogeneity) [3]; /// is that the two histograms represent random values with identical; /// distributions. It is equivalent that there exist r constants p1,...,pr,; /// such that; /// \f[; ///\sum_{i=1}^{r} p_{i}=1; /// \f]; /// and the probability of belonging to the ith bin for some measured value; /// in both experiments is equal to pi. The number of events in the ith; /// bin is a rando",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:3047,test,test,3047,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Computations*.; John Hopkins University Press, Baltimore, 3 edition, 1996.; - <a name=""minuit""></a>F. James. *Minuit*. Long writeup D506, CERN, 1998.; - <a name=""wind72""></a>H. Wind. *Function parameterization*. Proceedings of the 1972 CERN Computing and Data Processing; School, volume 72-21 of Yellow report. CERN, 1972.; - <a name=""wind81""></a>H. Wind. 1. principal component analysis, 2. pattern recognition for track; finding, 3. interpolation and functional representation. Yellow report EP/81-12, CERN, 1981. [1]: classTMultiDimFit.html#bevington; [2]: classTMultiDimFit.html#mudifi; [4]: classTMultiDimFit.html#minuit; [5]: class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:17459,test,test,17459,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['test'],['test']
Testability,"for version 1 of this binary format. FDR mode is; /// defined as part of the compiler-rt project in xray_fdr_logging.h, and such; /// a log consists of the familiar 32 bit XRayHeader, followed by sequences of; /// of interspersed 16 byte Metadata Records and 8 byte Function Records.; ///; /// The following is an attempt to document the grammar of the format, which is; /// parsed by this function for little-endian machines. Since the format makes; /// use of BitFields, when we support big-endian architectures, we will need to; /// adjust not only the endianness parameter to llvm's RecordExtractor, but also; /// the bit twiddling logic, which is consistent with the little-endian; /// convention that BitFields within a struct will first be packed into the; /// least significant bits the address they belong to.; ///; /// We expect a format complying with the grammar in the following pseudo-EBNF; /// in Version 1 of the FDR log.; ///; /// FDRLog: XRayFileHeader ThreadBuffer*; /// XRayFileHeader: 32 bytes to identify the log as FDR with machine metadata.; /// Includes BufferSize; /// ThreadBuffer: NewBuffer WallClockTime NewCPUId FunctionSequence EOB; /// BufSize: 8 byte unsigned integer indicating how large the buffer is.; /// NewBuffer: 16 byte metadata record with Thread Id.; /// WallClockTime: 16 byte metadata record with human readable time.; /// Pid: 16 byte metadata record with Pid; /// NewCPUId: 16 byte metadata record with CPUId and a 64 bit TSC reading.; /// EOB: 16 byte record in a thread buffer plus mem garbage to fill BufSize.; /// FunctionSequence: NewCPUId | TSCWrap | FunctionRecord; /// TSCWrap: 16 byte metadata record with a full 64 bit TSC reading.; /// FunctionRecord: 8 byte record with FunctionId, entry/exit, and TSC delta.; ///; /// In Version 2, we make the following changes:; ///; /// ThreadBuffer: BufferExtents NewBuffer WallClockTime NewCPUId; /// FunctionSequence; /// BufferExtents: 16 byte metdata record describing how many usable bytes are; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/XRay/Trace.cpp:1059,log,log,1059,interpreter/llvm-project/llvm/lib/XRay/Trace.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/XRay/Trace.cpp,1,['log'],['log']
Testability,"from firstentry). Defaults to all entries.; /// \return The function returns the number of entries passing the selection.; ///; /// By default 50 lines are shown and you are asked for `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \para",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1541,log,log,1541,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['log'],['log']
Testability,"fully, support of ODBC will allow usage of; // statements for most existing RDBMS.; //; // // first, connect to the database; // TSQLServer* serv = TSQLServer::Connect(""mysql://hostname.domain:3306/test"",; // ""user"", ""pass"");; // // check if connection is ok; // if ((serv!=0) && serv->IsConnected()) {; // // create instance of sql-statement; // TSQLStatement* stmt = serv->Statement(""CREATE TABLE TESTTABLE (ID1 INT, ID2 INT, FFIELD VARCHAR(255), FVALUE VARCHAR(255))"";; // // process statement; // stmt->Process();; // // destroy object; // delete stmt;; // }; // delete serv;; //; //; // 2. Insert data to data base; // ===============================================; // There is a special syntax of SQL queries which allows to use values; // provided as parameters. For instance, to insert one row into the TESTTABLE created; // with the previous example, one can simply execute a query like:; //; // serv->Query(""INSERT INTO TESTTABLE VALUES (1, 2, \""name1\"", \""value1\"""");; //; // However, when many (100-1000) rows should be inserted, each call of; // TSQLServer::Query() method will cause communication loop with database; // server, and the statement has to be evaluated each time instead of using a prepared statement.; // As a result, insertion of data takes too much time.; //; // TSQLStatement provides a mechanism to insert many rows at once.; // First of all, an appropriate statement should be created:; //; // TSQLStatement* stmt = serv->Statement(""INSERT INTO TESTTABLE (ID1, ID2, FFIELD, FVALUE) VALUES (?, ?, ?, ?)"", 100);; //; // Here question marks ""?"" indicate where statement parameters can be inserted.; // To specify values of parameters, SetInt(), SetDouble(), SetString() and other; // methods of the TSQLStatement class should be used. Before parameters values; // can be specified, the NextIteration() method of statement class should be called.; // For each new row, NextIteration() has to be called first, then parameters values are; // specified. There is one limita",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:2313,TEST,TESTTABLE,2313,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,2,['TEST'],['TESTTABLE']
Testability,"function via TH1::Fit.; See TH1::Fit(TF1*, Option_t *, Option_t *, Double_t, Double_t) for the fitting documentation and the possible [fitting options](\ref HFitOpt). The FitPanel can also be used for fitting an histogram. See the [FitPanel documentation](https://root.cern/manual/fitting/#using-the-fit-panel). \anchor saving-histograms; ## Saving/reading histograms to/from a ROOT file. The following statements create a ROOT file and store a histogram; on the file. Because TH1 derives from TNamed, the key identifier on; the file is the histogram name:; ~~~ {.cpp}; TFile f(""histos.root"", ""new"");; TH1F h1(""hgaus"", ""histo from a gaussian"", 100, -3, 3);; h1.FillRandom(""gaus"", 10000);; h1->Write();; ~~~; To read this histogram in another Root session, do:; ~~~ {.cpp}; TFile f(""histos.root"");; TH1F *h = (TH1F*)f.Get(""hgaus"");; ~~~; One can save all histograms in memory to the file by:; ~~~ {.cpp}; file->Write();; ~~~. \anchor misc; ## Miscellaneous operations. ~~~ {.cpp}; TH1::KolmogorovTest(): statistical test of compatibility in shape; between two histograms; TH1::Smooth() smooths the bin contents of a 1-d histogram; TH1::Integral() returns the integral of bin contents in a given bin range; TH1::GetMean(int axis) returns the mean value along axis; TH1::GetStdDev(int axis) returns the sigma distribution along axis; TH1::GetEntries() returns the number of entries; TH1::Reset() resets the bin contents and errors of a histogram; ~~~; IMPORTANT NOTE: The returned values for GetMean and GetStdDev depend on how the; histogram statistics are calculated. By default, if no range has been set, the; returned values are the (unbinned) ones calculated at fill time. If a range has been; set, however, the values are calculated using the bins in range; THIS IS TRUE EVEN; IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset the range.; To ensure that the returned values are always those of the binned data stored in the; histogram, call TH1::ResetStats. See TH1::GetStats.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:20396,test,test,20396,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1689,Test,Test,1689,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"g ADC; channels `x` to energy `w`), then `func` must be supplied as `f^{-1}(w)`. Examples:. Begin_Macro(source); {; TCanvas *c2 = new TCanvas(""c2"",""c2"",10,10,700,500);. gPad->DrawFrame(0.,-2.,10.,2);. TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();. TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();. TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; End_Macro. Note that this functionality has some limitations and does not follow all the TGaxis setting.; In particular the number of divisions or the maximum number digits do not apply. \anchor GA02; ## Logarithmic axis. By default axis are linear. To define a `TGaxis` as logarithmic, it is; enough to create it with the option `""G""`. When plotting an histogram or a graph the logarithmic scale can be set using:. - `gPad->SetLogx(1);` set the logarithmic scale on the X axis; - `gPad->SetLogy(1);` set the logarithmic scale on the Y axis. When the `SetMoreLogLabels()` method is called more labels are drawn; when in logarithmic scale and there is a small number of decades (less than 3). \anchor GA03; ## Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify; the option `""B""`. It useful to superpose axis. \anchor GA03a; ## Arrow on axis; \since **ROOT version 6.27/01:**. To draw an arrow at the end of the axis use the option `"">""`. To draw it at the beginning; of the axis use the option `""<""`. To draw it on both ends use `""<>""`. Begin_Macro(source); {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);. auto f2 = new TF1(""x2"",""x*x"",-10,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:4471,Log,Logarithmic,4471,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['Log'],['Logarithmic']
Testability,"g multiple NLL terms to avoid numeric precision; /// loss that happens if you sum multiple terms of different orders; /// of magnitude.; ///; /// The weight-squared error correction works as follows:; /// adjust poisson such that; /// estimate of \f$N_\mathrm{expect}\f$ stays at the same value, but has a different variance, rescale; /// both the observed and expected count of the Poisson with a factor \f$ \sum w_{i} / \sum w_{i}^2 \f$; /// (the effective weight of the Poisson term),; /// i.e., change \f$\mathrm{Poisson}(N_\mathrm{observed} = \sum w_{i} | N_\mathrm{expect} )\f$; /// to \f$ \mathrm{Poisson}(\sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 | N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 ) \f$,; /// weighted by the effective weight \f$ \sum w_{i}^2 / \sum w_{i} \f$ in the likelihood.; /// Since here we compute the likelihood with the weight square, we need to multiply by the; /// square of the effective weight:; /// - \f$ W_\mathrm{expect} = N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective expected entries; /// - \f$ W_\mathrm{observed} = \sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective observed entries; ///; /// The extended term for the likelihood weighted by the square of the weight will be then:; ///; /// \f$ \left(\sum w_{i}^2 / \sum w_{i}\right)^2 \cdot W_\mathrm{expect} - (\sum w_{i}^2 / \sum w_{i})^2 \cdot W_\mathrm{observed} \cdot \log{W_\mathrm{expect}} \f$; ///; /// aund this is using the previous expressions for \f$ W_\mathrm{expect} \f$ and \f$ W_\mathrm{observed} \f$:; ///; /// \f$ \sum w_{i}^2 / \sum w_{i} \cdot N_\mathrm{expect} - \sum w_{i}^2 \cdot \log{W_\mathrm{expect}} \f$; ///; /// Since the weights are constants in the likelihood we can use \f$\log{N_\mathrm{expect}}\f$ instead of \f$\log{W_\mathrm{expect}}\f$.; ///; /// See also RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset),; /// which takes a dataset to extract \f$N_\mathrm{observed}\f$ and the; /// normalization set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2506,log,log,2506,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,4,['log'],['log']
Testability,"g value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function returns the size of compressed data (without header), necessarily <= `dstCapacity`.; If it returns '0', compressed data could not fit into 'dst'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()).; */; /* *** DECOMPRESSION *** */; /*! FSE_readNCount():; Read compactly saved 'normalizedCounter' from 'rBuffer'.; @return : size read from 'rBuffer',; or an erro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:2036,test,tested,2036,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['test'],['tested']
Testability,"g""; alt=""DOI""></a>; \endhtmlonly. ## For the impatient user; You can directly see RDataFrame in action in our [tutorials](https://root.cern/doc/master/group__tutorial__dataframe.html), in C++ or Python. ## Table of Contents; - [Cheat sheet](\ref cheatsheet); - [Introduction](\ref introduction); - [Crash course](\ref crash-course); - [Working with collections](\ref collections); - [Transformations: manipulating data](\ref transformations); - [Actions: getting results](\ref actions); - [Distributed execution in Python](\ref distrdf); - [Performance tips and parallel execution](\ref parallel-execution); - [More features](\ref more-features); - [Systematic variations](\ref systematics); - [RDataFrame objects as function arguments and return values](\ref rnode); - [Storing RDataFrame objects in collections](\ref RDFCollections); - [Executing callbacks every N events](\ref callbacks); - [Default column lists](\ref default-branches); - [Special helper columns: `rdfentry_` and `rdfslot_`](\ref helper-cols); - [Just-in-time compilation: column type inference and explicit declaration of column types](\ref jitting); - [User-defined custom actions](\ref generic-actions); - [Dataset joins with friend trees](\ref friends); - [Reading data formats other than ROOT trees](\ref other-file-formats); - [Computation graphs (storing and reusing sets of transformations)](\ref callgraphs); - [Visualizing the computation graph](\ref representgraph); - [Activating RDataFrame execution logs](\ref rdf-logging); - [Creating an RDataFrame from a dataset specification file](\ref rdf-from-spec); - [Adding a progress bar](\ref progressbar); - [Working with missing values in the dataset](\ref missing-values); - [Efficient analysis in Python](\ref python); - <a class=""el"" href=""classROOT_1_1RDataFrame.html#reference"" onclick=""javascript:toggleInherit('pub_methods_classROOT_1_1RDF_1_1RInterface')"">Class reference</a>. \anchor cheatsheet; ## Cheat sheet; These are the operations which can be performed ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:2685,log,logs,2685,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,2,['log'],"['logging', 'logs']"
Testability,gram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'..................................OK; // ****************************************************************************; // stressHistoFit: Real Time = 37.49 seconds Cpu Time = 37.24 seconds; // ROOTMARKS = 2663.8 ROOT version: 5.27/01 trunk@32822; // ****************************************************************************; //; // //; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2617,Test,Test,2617,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"gram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms....................................OK; // Test 17: Buffer tests for Histograms......................................OK; // Test 18: Extend axis tests for Histograms.................................OK; // Test 19: TH1-THn[Sparse] Conversion tests.................................OK; // Test 20: FillData tests for Histograms and Sparses........................OK; // Test 21: Reference File Read for Histograms and Pro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:2261,Test,Test,2261,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,2,"['Test', 'test']","['Test', 'tests']"
Testability,"grams, 1D and 2D //; // histograms with variable bins, TGraph, TGraphErrors, TGraph2D, //; // TGraph2DErrors //; // 2. Same as before, but trying linear fitters. //; // 3. Unbinned fits with trees of different dimensions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1413,Test,Test,1413,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"h are also considered outside CanonicalLoopInfo's; /// control and thus can have side-effects. The body block is the single entry; /// point into the loop body, which may contain arbitrary control flow as long; /// as all control paths eventually branch to the Latch block.; ///; /// TODO: Consider adding another standardized BasicBlock between Body CFG and; /// Latch to guarantee that there is only a single edge to the latch. It would; /// make loop transformations easier to not needing to consider multiple; /// predecessors of the latch (See redirectAllPredecessorsTo) and would give us; /// an equivalant to PreheaderIP, AfterIP and BodyIP for inserting code that; /// executes after each body iteration.; ///; /// There must be no loop-carried dependencies through llvm::Values. This is; /// equivalant to that the Latch has no PHINode and the Header's only PHINode is; /// for the induction variable.; ///; /// All code in Header, Cond, Latch and Exit (plus the terminator of the; /// Preheader) are CanonicalLoopInfo's responsibility and their build-up checked; /// by assertOK(). They are expected to not be modified unless explicitly; /// modifying the CanonicalLoopInfo through a methods that applies a OpenMP; /// loop-associated construct such as applyWorkshareLoop, tileLoops, unrollLoop,; /// etc. These methods usually invalidate the CanonicalLoopInfo and re-use its; /// basic blocks. After invalidation, the CanonicalLoopInfo must not be used; /// anymore as its underlying control flow may not exist anymore.; /// Loop-transformation methods such as tileLoops, collapseLoops and unrollLoop; /// may also return a new CanonicalLoopInfo that can be passed to other; /// loop-associated construct implementing methods. These loop-transforming; /// methods may either create a new CanonicalLoopInfo usually using; /// createLoopSkeleton and invalidate the input CanonicalLoopInfo, or reuse and; /// modify one of the input CanonicalLoopInfo and return it as representing the; /// mod",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:3098,assert,assertOK,3098,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['assert'],['assertOK']
Testability,"hadow location in an atomic way. Unfortunately, atomic store; /// of two disjoint locations can not be done without severe slowdown.; ///; /// Therefore, we implement an approximation that may err on the safe side.; /// In this implementation, every atomically accessed location in the program; /// may only change from (partially) uninitialized to fully initialized, but; /// not the other way around. We load the shadow _after_ the application load,; /// and we store the shadow _before_ the app store. Also, we always store clean; /// shadow (if the application store is atomic). This way, if the store-load; /// pair constitutes a happens-before arc, shadow store and load are correctly; /// ordered such that the load will get either the value that was stored, or; /// some later value (which is always clean).; ///; /// This does not work very well with Compare-And-Swap (CAS) and; /// Read-Modify-Write (RMW) operations. To follow the above logic, CAS and RMW; /// must store the new shadow before the app operation, and load the shadow; /// after the app operation. Computers don't work this way. Current; /// implementation ignores the load aspect of CAS/RMW, always returning a clean; /// value. It implements the store part as a simple atomic store by storing a; /// clean shadow.; ///; /// Instrumenting inline assembly.; ///; /// For inline assembly code LLVM has little idea about which memory locations; /// become initialized depending on the arguments. It can be possible to figure; /// out which arguments are meant to point to inputs and outputs, but the; /// actual semantics can be only visible at runtime. In the Linux kernel it's; /// also possible that the arguments only indicate the offset for a base taken; /// from a segment register, so it's dangerous to treat any asm() arguments as; /// pointers. We take a conservative approach generating calls to; /// __msan_instrument_asm_store(ptr, size); /// , which defer the memory unpoisoning to the runtime library.; /// The l",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:4620,log,logic,4620,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['log'],['logic']
Testability,"har b1[1024], b2[1024];; // if (...) {; // char b3[1024];; // <uses of b1, b3>;; // return x;; // } else {; // char b4[1024], b5[1024];; // <uses of b2, b4, b5>;; // return y;; // }; // }; //; // In the code above, ""b3"" and ""b4"" are declared in distinct lexical; // scopes, meaning that it is easy to prove that they can share the; // same stack slot. Variables ""b1"" and ""b2"" are declared in the same; // scope, meaning that from a lexical point of view, their lifetimes; // overlap. From a control flow pointer of view, however, the two; // variables are accessed in disjoint regions of the CFG, thus it; // should be possible for them to share the same stack slot. An ideal; // stack allocation for the function above would look like:; //; // slot 0: b1, b2; // slot 1: b3, b4; // slot 2: b5; //; // Achieving this allocation is tricky, however, due to the way; // lifetime markers are inserted. Here is a simplified view of the; // control flow graph for the code above:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------ block 2 -------+; // 2| LIFETIME_START b3 | 5| LIFETIME_START b4, b5 |; // 3| <uses of b1, b3> | 6| <uses of b2, b4, b5> |; // 4| LIFETIME_END b3 | 7| LIFETIME_END b4, b5 |; // +-----------------------+ +-----------------------+; // \. /.; // +------ block 3 -------+; // 8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +-----------------------+; //; // If we create live intervals for the variables above strictly based; // on the lifetime markers, we'll get the set of intervals on the; // left. If we ignore the lifetime start markers and instead treat a; // variable's lifetime as beginning with the first reference to the; // var, then we get the intervals on the right.; //; // LIFETIME_START First Use; // b1: [0,9] [3,4] [8,9]; // b2: [0,9] [6,9]; // b3: [2,4] [3,4]; // b4: [5,7] [6,7]; // b5: [5,7] [6,7]; //; // For the int",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:6524,test,test,6524,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['test'],['test']
Testability,"he pledged source size, or load a dictionary.; *; * Use ZSTD_compressStream2() with ZSTD_e_continue as many times as necessary to; * consume input stream. The function will automatically update both `pos`; * fields within `input` and `output`.; * Note that the function may not consume the entire input, for example, because; * the output buffer is already full, in which case `input.pos < input.size`.; * The caller must check if input has been entirely consumed.; * If not, the caller must make some room to receive more compressed data,; * and then present again remaining input data.; * note: ZSTD_e_continue is guaranteed to make some forward progress when called,; * but doesn't guarantee maximal forward progress. This is especially relevant; * when compressing with multiple threads. The call won't block if it can; * consume some input, but if it can't it will wait for some, but not all,; * output to be flushed.; * @return : provides a minimum amount of data remaining to be flushed from internal buffers; * or an error code, which can be tested using ZSTD_isError().; *; * At any moment, it's possible to flush whatever data might remain stuck within internal buffer,; * using ZSTD_compressStream2() with ZSTD_e_flush. `output->pos` will be updated.; * Note that, if `output->size` is too small, a single invocation with ZSTD_e_flush might not be enough (return code > 0).; * In which case, make some room to receive more compressed data, and call again ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_flush until it returns 0, at which point you can change the; * operation.; * note: ZSTD_e_flush will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if internal buffers are entirely flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:2106,test,tested,2106,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['test'],['tested']
Testability,"he program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http://uclibc.org"">uClibc</a>'s GNU getopt() and just a; * couple 100 bytes larger than uClibc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1145,Test,Test,1145,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['Test'],['Test']
Testability,"he status corresponding to the last AutoSave.; ///; /// if option contains ""SaveSelf"", gDirectory->SaveSelf() is called.; /// This allows another process to analyze the Tree while the Tree is being filled.; ///; /// if option contains ""FlushBaskets"", TTree::FlushBaskets is called and all; /// the current basket are closed-out and written to disk individually.; ///; /// By default the previous header is deleted after having written the new header.; /// if option contains ""Overwrite"", the previous Tree header is deleted; /// before written the new header. This option is slightly faster, but; /// the default option is safer in case of a problem (disk quota exceeded); /// when writing the new header.; ///; /// The function returns the number of bytes written to the file.; /// if the number of bytes is null, an error has occurred while writing; /// the header to the file.; ///; /// ## How to write a Tree in one process and view it from another process; ///; /// The following two scripts illustrate how to do this.; /// The script treew.C is executed by process1, treer.C by process2; ///; /// script treew.C:; /// ~~~ {.cpp}; /// void treew() {; /// TFile f(""test.root"",""recreate"");; /// TNtuple *ntuple = new TNtuple(""ntuple"",""Demo"",""px:py:pz:random:i"");; /// Float_t px, py, pz;; /// for ( Int_t i=0; i<10000000; i++) {; /// gRandom->Rannor(px,py);; /// pz = px*px + py*py;; /// Float_t random = gRandom->Rndm(1);; /// ntuple->Fill(px,py,pz,random,i);; /// if (i%1000 == 1) ntuple->AutoSave(""SaveSelf"");; /// }; /// }; /// ~~~; /// script treer.C:; /// ~~~ {.cpp}; /// void treer() {; /// TFile f(""test.root"");; /// TTree *ntuple = (TTree*)f.Get(""ntuple"");; /// TCanvas c1;; /// Int_t first = 0;; /// while(1) {; /// if (first == 0) ntuple->Draw(""px>>hpx"", """","""",10000000,first);; /// else ntuple->Draw(""px>>+hpx"","""","""",10000000,first);; /// first = (Int_t)ntuple->GetEntries();; /// c1.Update();; /// gSystem->Sleep(1000); //sleep 1 second; /// ntuple->Refresh();; /// }; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2473,test,test,2473,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['test'],['test']
Testability,"he suite of programs below test the essential parts of Root.; // In particular, there is an extensive test of the I/O and Trees.; // The test can be run in batch or with the interpreter.; // You must run; // gmake on Unix systems; // nmake on Windows; // To run in batch, do; // stress -b 1000 : with no parameters, run standard test with 1000 events; // stress -b 30: run test with 30 events only; //; // To run interactively, do; // root -b; // Root > .L stress.cxx; // Root > stress(1000) run standard test with 1000 events; // Root > stress(30) run with 30 events only; //; // The standard test with 1000 events will create several files.; // The size of all files is around 100 Mbytes.; // The test with 30 events only require around 20 Mbytes; // NB: The test must be run with more than 10 events; //; // The tests runs sequentially 16 tests. Each test will produce; // one line (Test OK or Test failed) with some result parameters.; // At the end of the test a table is printed showing the global results; // with the amount of I/O, Real Time and Cpu Time.; // One single number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:1207,test,test,1207,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,1,['test'],['test']
Testability,"he value; /// thrown by __wasm_longjmp function. In Emscripten library, we have this; /// struct:; ///; /// struct __WasmLongjmpArgs {; /// void *env;; /// int val;; /// };; /// struct __WasmLongjmpArgs __wasm_longjmp_args;; ///; /// The thrown value here is a pointer to __wasm_longjmp_args struct object. We; /// use this struct to transfer two values by throwing a single value. Wasm; /// throw and catch instructions are capable of throwing and catching multiple; /// values, but it also requires multivalue support that is currently not very; /// reliable.; /// TODO Switch to throwing and catching two values without using the struct; ///; /// All longjmpable function calls will be converted to an invoke that will; /// unwind to this catchpad in case a longjmp occurs. Within the catchpad, we; /// test the thrown values using testSetjmp function as we do for Emscripten; /// SjLj. The main difference is, in Emscripten SjLj, we need to transform every; /// longjmpable callsite into a sequence of code including testSetjmp() call; in; /// Wasm SjLj we do the testing in only one place, in this catchpad.; ///; /// After testing calling testSetjmp(), if the longjmp does not correspond to; /// one of the setjmps within the current function, it rethrows the longjmp; /// by calling __wasm_longjmp(). If it corresponds to one of setjmps in the; /// function, we jump to the beginning of the function, which contains a switch; /// to each post-setjmp BB. Again, in Emscripten SjLj, this switch is added for; /// every longjmpable callsite; in Wasm SjLj we do this only once at the top of; /// the function. (after setjmpTable/setjmpTableSize initialization); ///; /// The below is the pseudocode for what we have described; ///; /// entry:; /// Initialize setjmpTable and setjmpTableSize; ///; /// setjmp.dispatch:; /// switch %label {; /// label 1: goto post-setjmp BB 1; /// label 2: goto post-setjmp BB 2; /// ...; /// default: goto splitted next BB; /// }; /// ...; ///; /// bb:; /// invoke ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:9848,test,testSetjmp,9848,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,2,['test'],"['testSetjmp', 'testing']"
Testability,"here X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; ~~~; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; ~~~. For usage examples see $ROOTSYS/test/stressLinear.cxx; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:4310,test,test,4310,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['test'],['test']
Testability,"hich can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will gen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:9498,log,logical,9498,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['log'],['logical']
Testability,"hing to see if your C/C++ contains; // UB, this is not it.; //; // The rewritten semantics of each instruction will include the following; // components:; //; // 1) The original instruction, unmodified.; // 2) A propagation rule which translates dynamic information about the poison; // state of each input to whether the dynamic output of the instruction; // produces poison.; // 3) A creation rule which validates any poison producing flags on the; // instruction itself (e.g. checks for overflow on nsw).; // 4) A check rule which traps (to a handler function) if this instruction must; // execute undefined behavior given the poison state of it's inputs.; //; // This is a must analysis based transform; that is, the resulting code may; // produce a false negative result (not report UB when actually exists; // according to the LangRef spec), but should never produce a false positive; // (report UB where it doesn't exist).; //; // Use cases for this pass include:; // - Understanding (and testing!) the implications of the definition of poison; // from the LangRef.; // - Validating the output of a IR fuzzer to ensure that all programs produced; // are well defined on the specific input used.; // - Finding/confirming poison specific miscompiles by checking the poison; // status of an input/IR pair is the same before and after an optimization; // transform.; // - Checking that a bugpoint reduction does not introduce UB which didn't; // exist in the original program being reduced.; //; // The major sources of inaccuracy are currently:; // - Most validation rules not yet implemented for instructions with poison; // relavant flags. At the moment, only nsw/nuw on add/sub are supported.; // - UB which is control dependent on a branch on poison is not yet; // reported. Currently, only data flow dependence is modeled.; // - Poison which is propagated through memory is not modeled. As such,; // storing poison to memory and then reloading it will cause a false negative; // as we conside",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp:1803,test,testing,1803,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,1,['test'],['testing']
Testability,"his usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2299,test,test,2299,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['test'],['test']
Testability,"ht (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::ProfileLikelihoodCalculator; \ingroup Roostats. The ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator; (the interface class for tools which can produce both a RooStats HypoTestResult; and ConfInterval). The tool uses the profile likelihood ratio as a test statistic,; and assumes that Wilks' theorem is valid. Wilks' theorem states that \f$ -2 \cdot \ln(\lambda) \f$; (profile likelihood ratio) is asymptotically distributed as a \f$ \chi^2 \f$ distribution; with \f$ N \f$ degrees of freedom. Thus, \f$p\f$-values can be; constructed, and the profile likelihood ratio can be used to construct a; LikelihoodInterval. (In the future, this class could be extended to use toy; Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be; configured by specifying:. - A model common model (*e.g.* a family of specific models, which includes both; the null and alternate); - A data set; - A set of parameters of interest. The nuisance parameters will be all other; parameters of the model.; - A set of parameters which specify the null hypothesis (including values; and const/non-const status). The interface allows one to pass the model, data, and parameters either directly; or via a ModelConfig class. The alternate hypothesis leaves the parameter free; to take any value other than those specified by the null hypothesis. There is; therefore no need to specify the alternate parameters. After configuring the calculator, one only needs to call GetHypoTest() (which; will return a HypoTestResult pointer) or GetInterval() (which will return a; ConfInterval pointer). This calculator can work with bot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:1194,test,test,1194,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['test'],['test']
Testability,"i>; <li>A matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>A vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>Repeated calls to SubtractBackground() to specify background; sources</li>; <li>Repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanTau()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>; A detailed documentation of the various GetXXX() methods to control; systematic uncertainties is given with the method TUnfoldSys. <h3>Why to use complex binning schemes</h3>. in literature on unfolding, the ""standard"" test case is a; one-dimensional distribution without underflow or overflow bins.; The migration matrix is almost diagonal.; <br/>; <b>This ""standard"" case is rarely realized for real problems.</b>; <br/>; Often one has to deal with multi-dimensional distributions.; In addition, there are underflow and overflow bins; or other background bins, possibly determined with the help of auxillary; measurements.; <br/>; In TUnfoldDensity, such complex binning schemes are handled with the help; of the class TUnfoldBinning. For both the measurement and the truth; there is a tree structure. The tree nodes may correspond to single; bins (e.g. nuisance parameters) or may hold multi-dimensional distributions.; <br/>; For example, the ""measurement"" tree could have two leaves, one for; the primary distribution and one for auxillary measurements.; Similarly, the ""truth"" tree could have two leaves, one for the; signal and one for the background.; Each of the leaves may then have a multi-dimensional distribution.; <br/>; Th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:3074,test,test,3074,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['test'],['test']
Testability,"i] = new Double_t[ncolumns];; for (j = 0; j < ncolumns; j++) {; data[i][j] = 10 * i + j;; }; }. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create an interface; TGSimpleTableInterface *iface = new TGSimpleTableInterface(data, 6, 5);. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. //Update data; data[5][1] = 3.01;; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }; ~~~. It is also possible to visualise data from a tree. A simple macro; showing the use of a TTreeTableInterface follows. ~~~; {; // Open a root file.; TFile *file = new TFile(""$ROOTSYS/tutorials/hsimple.root"");; // Load a tree from the file; TNtuple *ntuple = (TNtuple *)file->Get(""ntuple"");. // Create an interface; TTreeTableInterface *iface = new TTreeTableInterface(ntuple);. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface, 10, 6);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. // Set a selection; iface->SetSelection(""px > 0."");; // Add a column; iface->AddColumn(""(px+py)/(px-py)"", 0);; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }; ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// TGTable constuctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:3204,Test,Test,3204,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['Test'],['Test']
Testability,"i^{2} \f$ test for; /// comparison two usual (unweighted) histograms.; ///; /// #### Overview:; ///; /// Comparison of two histograms expect hypotheses that two histograms; /// represent identical distributions. To make a decision p-value should; /// be calculated. The hypotheses of identity is rejected if the p-value is; /// lower then some significance level. Traditionally significance levels; /// 0.1, 0.05 and 0.01 are used. The comparison procedure should include an; /// analysis of the residuals which is often helpful in identifying the; /// bins of histograms responsible for a significant overall \f$ \chi^{2} \f$ value.; /// Residuals are the difference between bin contents and expected bin; /// contents. Most convenient for analysis are the normalized residuals. If; /// hypotheses of identity are valid then normalized residuals are; /// approximately independent and identically distributed random variables; /// having N(0,1) distribution. Analysis of residuals expect test of above; /// mentioned properties of residuals. Notice that indirectly the analysis; /// of residuals increase the power of \f$ \chi^{2} \f$ test.; ///; /// #### Methods of comparison:; ///; /// \f$ \chi^{2} \f$ test for comparison two (unweighted) histograms:; /// Let us consider two histograms with the same binning and the number; /// of bins equal to r. Let us denote the number of events in the ith bin; /// in the first histogram as ni and as mi in the second one. The total; /// number of events in the first histogram is equal to:; /// \f[; /// N = \sum_{i=1}^{r} n_{i}; /// \f]; /// and; /// \f[; /// M = \sum_{i=1}^{r} m_{i}; /// \f]; /// in the second histogram. The hypothesis of identity (homogeneity) [3]; /// is that the two histograms represent random values with identical; /// distributions. It is equivalent that there exist r constants p1,...,pr,; /// such that; /// \f[; ///\sum_{i=1}^{r} p_{i}=1; /// \f]; /// and the probability of belonging to the ith bin for some measured value; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:2900,test,test,2900,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"ifferences are:; // 1. Separate vftable and vbtable.; //; // 2. Each subobject with a vfptr gets its own vftable rather than an address; // point in a single vtable shared between all the subobjects.; // Each vftable is represented by a separate section and virtual calls; // must be done using the vftable which has a slot for the function to be; // called.; //; // 3. Virtual method definitions expect their 'this' parameter to point to the; // first vfptr whose table provides a compatible overridden method. In many; // cases, this permits the original vf-table entry to directly call; // the method instead of passing through a thunk.; // See example before VFTableBuilder::ComputeThisOffset below.; //; // A compatible overridden method is one which does not have a non-trivial; // covariant-return adjustment.; //; // The first vfptr is the one with the lowest offset in the complete-object; // layout of the defining class, and the method definition will subtract; // that constant offset from the parameter value to get the real 'this'; // value. Therefore, if the offset isn't really constant (e.g. if a virtual; // function defined in a virtual base is overridden in a more derived; // virtual base and these bases have a reverse order in the complete; // object), the vf-table may require a this-adjustment thunk.; //; // 4. vftables do not contain new entries for overrides that merely require; // this-adjustment. Together with #3, this keeps vf-tables smaller and; // eliminates the need for this-adjustment thunks in many cases, at the cost; // of often requiring redundant work to adjust the ""this"" pointer.; //; // 5. Instead of VTT and constructor vtables, vbtables and vtordisps are used.; // Vtordisps are emitted into the class layout if a class has; // a) a user-defined ctor/dtor; // and; // b) a method overriding a method in a virtual base.; //; // To get a better understanding of this code,; // you might want to see examples in test/CodeGenCXX/microsoft-abi-vtables-*.cpp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp:2043,test,test,2043,interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,1,['test'],['test']
Testability,"ifiers, the created Boolean nodes will assume that; the shapes are positioned with an identity transformation with respect; to the frame of the created composite. In order to provide some; positioning of the combination components, we have to attach after each; shape identifier the name of an existing transformation, separated by a; colon. Obviously all transformations created for this purpose have to be; objects with unique names in order to be properly substituted during; parsing. #### Composite Shape Example. One should have in mind that the same shape or matrix identifiers can be; used many times in the same expression, as in the following example:. ~~~{.cpp}; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; const Double_t sq2 = TMath::Sqrt(2.);; TGeoManager *mgr =; new TGeoManager(""Geom"",""composite shape example"");; TGeoMedium *medium = 0;; TGeoVolume *top = mgr->MakeBox(""TOP"",medium,100,250,250);; mgr->SetTopVolume(top);. // make shape components; TGeoBBox *sbox = new TGeoBBox(""B"",100,125*sq2,125*sq2);; TGeoTube *stub = new TGeoTube(""T"",0,100,250);; TGeoPgon *spgon = new TGeoPgon(""P"",0.,360.,6,2);; spgon->DefineSection(0,-250,0,80);; spgon->DefineSection(1,250,0,80);. // define some rotations; TGeoRotation *r1 = new TGeoRotation(""r1"",90,0,0,180,90,90);; r1->RegisterYourself();; TGeoRotation *r2 = new TGeoRotation(""r2"",90,0,45,90,45,270);; r2->RegisterYourself();; // create a composite; TGeoCompositeShape *cs = new TGeoCompositeShape(""cs"", ""((T+T:r1)-(P+P:r1))*B:r2"");; TGeoVolume *comp = new TGeoVolume(""COMP"",cs);; comp->SetLineColor(kRed);. // put it in the top volume; top->AddNode(comp,1);; mgr->CloseGeometry();; // visualize it with ray tracing; top->Raytrace();; }; ~~~. \image html geom_composite_shape004.png ""A composite shape example"" width=400px. Composite shapes can be subsequently used for defining volumes.; Moreover, these volumes contain other volumes, following the general; criteria. Volumes created based on composite shapes cannot be divided. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:6755,stub,stub,6755,geom/geom/src/TGeoCompositeShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx,1,['stub'],['stub']
Testability,"ight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; ***********************************************************************************/; /*! \class TMVA::MethodPDERS; \ingroup TMVA. This is a generalization of the above Likelihood methods to \f$ N_{var} \f$; dimensions, where \f$ N_{var} \f$ is the number of input variables; used in the MVA. If the multi-dimensional probability density functions; (PDFs) for signal and background were known, this method contains the entire; physical information, and is therefore optimal. Usually, kernel estimation; methods are used to approximate the PDFs using the events from the; training sample. A very simple probability density estimator (PDE) has been suggested; in [hep-ex/0211019](http://arxiv.org/abs/hep-ex/0211019). The; PDE for a given test event is obtained from counting the (normalized); number of signal and background (training) events that occur in the; ""vicinity"" of the test event. The volume that describes ""vicinity"" is; user-defined. A [search method based on binary-trees](http://arxiv.org/abs/hep-ex/0211019); is used to effectively reduce the; selection time for the range search. Three different volume definitions; are optional:. - *MinMax:* the volume is defined in each dimension with respect; to the full variable range found in the training sample.; - *RMS:* the volume is defined in each dimensions with respect; to the RMS estimated from the training sample.; - *Adaptive:* a volume element is defined in each dimensions with; respect to the RMS estimated from the training sample. The overall; scale of the volume element is then determined for each event so; that the total number of events confined in the volume be within; a user-defined range. The adaptive range search is used by default.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:1863,test,test,1863,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,2,['test'],['test']
Testability,"ilable aliases:; - RVecB (`bool`); - RVecC (`char`); - RVecD (`double`); - RVecF (`float`); - RVecI (`int`); - RVecL (`long`); - RVecLL (`long long`); - RVecU (`unsigned`); - RVecUL (`unsigned long`); - RVecULL (`unsigned long long`). \note RVec does not attempt to be exception safe. Exceptions thrown by element constructors during insertions, swaps or; other operations will be propagated potentially leaving the RVec object in an invalid state. \note RVec methods (e.g. `at` or `size`) follow the STL naming convention instead of the ROOT naming convention in order; to make RVec a drop-in replacement for `std::vector`. \htmlonly; <a href=""https://doi.org/10.5281/zenodo.1253756""><img src=""https://zenodo.org/badge/DOI/10.5281/zenodo.1253756.svg"" alt=""DOI""></a>; \endhtmlonly. ## Table of Contents; - [Example](\ref example); - [Arithmetic operations, logical operations and mathematical functions](\ref operationsandfunctions); - [Owning and adopting memory](\ref owningandadoptingmemory); - [Sorting and manipulation of indices](\ref sorting); - [Usage in combination with RDataFrame](\ref usagetdataframe); - [Reference for the RVec class](\ref RVecdoxyref); - [Reference for RVec helper functions](https://root.cern/doc/master/namespaceROOT_1_1VecOps.html). \anchor example; ## Example; Suppose to have an event featuring a collection of muons with a certain pseudorapidity,; momentum and charge, e.g.:; ~~~{.cpp}; std::vector<short> mu_charge {1, 1, -1, -1, -1, 1, 1, -1};; std::vector<float> mu_pt {56, 45, 32, 24, 12, 8, 7, 6.2};; std::vector<float> mu_eta {3.1, -.2, -1.1, 1, 4.1, 1.6, 2.4, -.5};; ~~~; Suppose you want to extract the transverse momenta of the muons satisfying certain; criteria, for example consider only negatively charged muons with a pseudorapidity; smaller or equal to 2 and with a transverse momentum greater than 10 GeV.; Such a selection would require, among the other things, the management of an explicit; loop, for example:; ~~~{.cpp}; std::vector<float> goodM",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:1657,log,logical,1657,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['log'],['logical']
Testability,"iling in-between code (if any); ///; /// The leading/trailing in-between code must not itself be a OMPCanonicalLoop; /// to avoid confusion which loop belongs to the nesting.; ///; /// There are three different kinds of iteration variables for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:3060,log,logical,3060,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['log'],['logical']
Testability,"in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)\f$ : the value of the PDFs of the discriminating variables; \f$y\f$ for the\f$i^{th}\f$ species and for event\f$e\f$,; - \f$x\f$ : the set of control variables which, by definition, do not appear in; the expression of the Likelihood function \f${\cal L}\f$. The extended log-Likelihood reads:. \f[; {\cal L}=\sum_{e=1}^{N}\ln \Big\{ \sum_{i=1}^{{\rm N}_{\rm s}}N_i{\rm f}_i(y_e) \Big\} -\sum_{i=1}^{{\rm N}_{\rm s}}N_i \tag{1}; \f]. From this expression, after maximization of \f${\cal L}\f$ with respect to the \f$N_i\f$ parameters,; a weight can be computed for every event and each species, in order to obtain later the true distribution; \f$\hbox{M}_i(x)\f$ of variable \f$x\f$. If \f${\rm n}\f$ is one of the; \f${\rm N}_{\rm s}\f$ species present in the data sample, the weight for this species is defined by:. \f[; \fbox{$; {_s{\cal P}}_{\rm n}(y_e)={\sum_{j=1}^{{\rm N}_{\rm s}} \hbox{V}_{{\rm n}j}{\rm f}_j(y_e)\over\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e) } $} , \tag{2}; \f]. where \f$\hbox{V}_{{\rm n}j}\f$. is the covariance matrix resulting from the Likelihood maximization.; This matrix can be used directly from the fit, but this is numerically; less accurate than the direct computation:. \f[; \hbox{ V}^{-1}_{{\rm n}j}~=~; {\partial^2(-{\cal L})\over\p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:2589,log,log-Likelihood,2589,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['log'],['log-Likelihood']
Testability,"ine color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetLineColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTLINE2; ## Line Width; The line width is expressed in pixel units.; The line width of any class inheriting from `TAttLine` can; be changed using the method `SetLineWidth` and retrieved using the; method `GetLineWidth`.; The following picture shows the line widths from 1 to 10 pixels. Begin_Macro; {; TCanvas *Lw = new TCanvas(""Lw"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineWidth(i);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. \anchor ATTLINE3; ## Line Style; Line styles are identified via integer numbers. The line style of any class; inheriting from `TAttLine` can be changed using the method; `SetLineStyle` and retrieved using the method `GetLineStyle`. The first 10 line styles are predefined as shown on the following picture:. Begin_Macro; {; TCanvas *Ls = new TCanvas(""Ls"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineStyle(i);; lh->SetLineWidth(3);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. Some line styles can be accessed via the following enum:. ~~~ {.cpp}; kSolid = 1; kDashed = 2; kDotted = 3; kDashDotted ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx:1921,test,test,1921,core/base/src/TAttLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx,1,['test'],['test']
Testability,"ing the beginning of this section.; // * Basic blocks 1, 3, 5 are placed in a separate section. A new symbol; // `foo.__part.1` will reference the beginning of this section.; // * Basic block 4 (note that it is not referenced in the list) is placed in; // one section, and a new symbol `foo.cold` will point to it.; //; // There are a couple of challenges to be addressed:; //; // 1. The last basic block of every cluster should not have any implicit; // fallthrough to its next basic block, as it can be reordered by the linker.; // The compiler should make these fallthroughs explicit by adding; // unconditional jumps..; //; // 2. All inter-cluster branch targets would now need to be resolved by the; // linker as they cannot be calculated during compile time. This is done; // using static relocations. Further, the compiler tries to use short branch; // instructions on some ISAs for small branch offsets. This is not possible; // for inter-cluster branches as the offset is not determined at compile; // time, and therefore, long branch instructions have to be used for those.; //; // 3. Debug Information (DebugInfo) and Call Frame Information (CFI) emission; // needs special handling with basic block sections. DebugInfo needs to be; // emitted with more relocations as basic block sections can break a; // function into potentially several disjoint pieces, and CFI needs to be; // emitted per cluster. This also bloats the object file and binary sizes.; //; // Basic Block Labels; // ==================; //; // With -fbasic-block-sections=labels, we encode the offsets of BB addresses of; // every function into the .llvm_bb_addr_map section. Along with the function; // symbols, this allows for mapping of virtual addresses in PMU profiles back to; // the corresponding basic blocks. This logic is implemented in AsmPrinter. This; // pass only assigns the BBSectionType of every function to ``labels``.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp:3419,log,logic,3419,interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp,1,['log'],['logic']
Testability,"ingroup Roostats. BernsteinCorrection is a utility in RooStats to augment a nominal PDF with a polynomial; correction term. This is useful for incorporating systematic variations to the nominal PDF.; The Bernstein basis polynomials are particularly appropriate because they are positive definite. This tool was inspired by the work of Glen Cowan together with Stephan Horner, Sascha Caron,; Eilam Gross, and others.; The initial implementation is independent work. The major step forward in the approach was; to provide a well defined algorithm that specifies the order of polynomial to be included; in the correction. This is an empirical algorithm, so in addition to the nominal model it; needs either a real data set or a simulated one. In the early work, the nominal model was taken; to be a histogram from Monte Carlo simulations, but in this implementation it is generalized to an; arbitrary PDF (which includes a RooHistPdf). The algorithm basically consists of a; hypothesis test of an nth-order correction (null) against a n+1-th order correction (alternate).; The quantity q = -2 log LR is used to determine whether the n+1-th order correction is a major; improvement to the n-th order correction. The distribution of q is expected to be roughly; \f$\chi^2\f$ with one degree of freedom if the n-th order correction is a good model for the data.; Thus, one only moves to the n+1-th order correction of q is relatively large. The chance that; one moves from the n-th to the n+1-th order correction when the n-th order correction; (eg. a type 1 error) is sufficient is given by the Prob(\f$\chi^2_1\f$ > threshold). The constructor; of this class allows you to directly set this tolerance (in terms of probability that the n+1-th; term is added unnecessarily). To do:; Add another method to the utility that will make the sampling distribution for -2 log lambda; for various m vs. m+1 order corrections using a nominal model and perhaps having two ways of; generating the toys (either via a h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx:1447,test,test,1447,roofit/roostats/src/BernsteinCorrection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx,1,['test'],['test']
Testability,"instance containing information describing the failure. Success is; /// represented by a null pointer value.; ///; /// Instances of Error also contains a 'Checked' flag, which must be set; /// before the destructor is called, otherwise the destructor will trigger a; /// runtime error. This enforces at runtime the requirement that all Error; /// instances be checked or returned to the caller.; ///; /// There are two ways to set the checked flag, depending on what state the; /// Error instance is in. For Error instances indicating success, it; /// is sufficient to invoke the boolean conversion operator. E.g.:; ///; /// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returne",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1193,test,testing,1193,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,1,['test'],['testing']
Testability,"intes //; // for these. Every tests is mean to be simple enough to be understood //; // without much comments. //; // //; // Finally, for debugging reasons, the struct compareOptions can be //; // used to define the level of output of the tests, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms...................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:1863,Test,Test,1863,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,2,['Test'],"['Test', 'Testing']"
Testability,"ints - number of data points; /// bsize - bucket size; /// nloop - number of loops; /// mode - tasks to be performed by the kdTree; /// - 0 : time building the tree; ///. void TestkdtreeIF(Int_t npoints, Int_t bsize, Int_t nloop, Int_t mode); {. Float_t rangey = 100;; Float_t rangez = 100;; Float_t drangey = 0.1;; Float_t drangez = 0.1;. //; Float_t *data0 = new Float_t[npoints*2];; Float_t *data[2];; data[0] = &data0[0];; data[1] = &data0[npoints];; //Int_t i;; for (Int_t i=0; i<npoints; i++){; data[0][i] = gRandom->Uniform(-rangey, rangey);; data[1][i] = gRandom->Uniform(-rangez, rangez);; }; TStopwatch timer;. // check time build; printf(""building kdTree ...\n"");; timer.Start(kTRUE);; TKDTreeIF *kdtree = new TKDTreeIF(npoints, 2, bsize, data);; kdtree->Build();; timer.Stop();; timer.Print();; if(mode == 0) return;. Float_t countern=0;; Float_t counteriter = 0;; Float_t counterfound = 0;. if (mode ==2){; if (nloop) timer.Start(kTRUE);; Int_t *res = new Int_t[npoints];; Int_t nfound = 0;; for (Int_t kloop = 0;kloop<nloop;kloop++){; if (kloop==0){; counteriter = 0;; counterfound= 0;; countern = 0;; }; for (Int_t i=0;i<npoints;i++){; Float_t point[2]={data[0][i],data[1][i]};; Float_t delta[2]={drangey,drangez};; Int_t iter =0;; nfound =0;; Int_t bnode =0;; //kdtree->FindBNode(point,delta, bnode);; //continue;; kdtree->FindInRangeA(point,delta,res,nfound,iter,bnode);; if (kloop==0){; //Bool_t isOK = kTRUE;; Bool_t isOK = kFALSE;; for (Int_t ipoint=0;ipoint<nfound;ipoint++); if (res[ipoint]==i) isOK =kTRUE;; counteriter+=iter;; counterfound+=nfound;; if (isOK) {; countern++;; }else{; printf(""Bug\n"");; }; }; }; }. if (nloop){; timer.Stop();; timer.Print();; }. delete [] res;; }; delete [] data0;. counteriter/=npoints;; counterfound/=npoints;; if (nloop) printf(""Find nearest point:\t%f\t%f\t%f\n"",countern, counteriter, counterfound);; }; */; ////////////////////////////////////////////////////////////////////////////////; ///Test TKDTree::FindNearestNeighbors() function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/kDTreeTest.cxx:2550,Test,Test,2550,math/mathcore/test/kDTreeTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/kDTreeTest.cxx,1,['Test'],['Test']
Testability,"ion, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some references:. - Alfred Inselberg's Homepage <http://www",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2681,log,logarithm,2681,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['log'],['logarithm']
Testability,ions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' w,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1620,Test,Test,1620,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"irection is reset to the steepest descent. ### How to use it... TMLP is build from 3 classes: TNeuron, TSynapse and; TMultiLayerPerceptron. Only TMultiLayerPerceptron should be used; explicitly by the user. TMultiLayerPerceptron will take examples from a TTree; given in the constructor. The network is described by a simple; string: The input/output layers are defined by giving the expression for; each neuron, separated by comas. Hidden layers are just described; by the number of neurons. The layers are separated by colons.; In addition, input/output layer formulas can be preceded by '@' (e.g ""@out""); if one wants to also normalize the data from the TTree.; Input and outputs are taken from the TTree given as second argument.; Expressions are evaluated as for TTree::Draw(), arrays are expended in; distinct neurons, one for each index.; This can only be done for fixed-size arrays.; If the formula ends with ""!"", softmax functions are used for the output layer.; One defines the training and test datasets by TEventLists. Example:; ~~~ {.cpp}; TMultiLayerPerceptron(""x,y:10:5:f"",inputTree);; ~~~. Both the TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exactly as; for a TCut. The learning method is defined using the TMultiLayerPerceptron::SetLearningMethod() .; Learning methods are :. - TMultiLayerPerceptron::kStochastic,; - TMultiLayerPerceptron::kBatch,; - TMultiLayerPerceptron::kSteepestDescent,; - TMultiLayerPerceptron::kRibierePolak,; - TMultiLayerPerceptron::kFletcherReeves,; - TMultiLayerPerceptron::kBFGS. A weight can be assigned to events, either in the constructor, either; with TMultiLayerPerceptron::SetEventWeight(). In addition, the TTree weight; is taken into account. Finally, one starts the training with; TMultiLayerPerceptron::Train(Int_t nepoch, Option_t* options). The",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:7252,test,test,7252,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['test'],['test']
Testability,"is, it will need to be; /// addressed.; ///; ///; /// All of these issues are made substantially more complex in the face of; /// mutations to the call graph while optimization passes are being run. When; /// mutations to the call graph occur we want to achieve two different things:; ///; /// - We need to update the call graph in-flight and invalidate analyses; /// cached on entities in the graph. Because of the cache-based analysis; /// design of the pass manager, it is essential to have stable identities for; /// the elements of the IR that passes traverse, and to invalidate any; /// analyses cached on these elements as the mutations take place.; ///; /// - We want to preserve the incremental and post-order traversal of the; /// graph even as it is refined and mutated. This means we want optimization; /// to observe the most refined form of the call graph and to do so in; /// post-order.; ///; /// To address this, the CGSCC manager uses both worklists that can be expanded; /// by passes which transform the IR, and provides invalidation tests to skip; /// entries that become dead. This extra data is provided to every SCC pass so; /// that it can carefully update the manager's traversal as the call graph; /// mutates.; ///; /// We also provide support for running function passes within the CGSCC walk,; /// and there we provide automatic update of the call graph including of the; /// pass manager to reflect call graph changes that fall out naturally as part; /// of scalar transformations.; ///; /// The patterns used to ensure the goals of post-order visitation of the fully; /// refined graph:; ///; /// 1) Sink toward the ""bottom"" as the graph is refined. This means that any; /// iteration continues in some valid post-order sequence after the mutation; /// has altered the structure.; ///; /// 2) Enqueue in post-order, including the current entity. If the current; /// entity's shape changes, it and everything after it in post-order needs; /// to be visited to observe t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:3873,test,tests,3873,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,1,['test'],['tests']
Testability,"istogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, since; * some features such as offsetting might not yet work in this case.; * </table>; */; /** @brief Protected implementation of the NLL creation routine.; *; * This virtual function can be overridden in case you want to change the NLL creation logic for custom PDFs.; *; * \note Never call this function directly. Instead, call RooAbsPdf::createNLL().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:10545,log,logic,10545,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['log'],['logic']
Testability,"it to dump the externals in a bunch of object; * files to create a .def file.; *; * Notes: Visual C++ puts an underscore before each exported symbol.; * This file removes them. I don't know if this is a problem; * this other compilers. If _MSC_VER is defined,; * the underscore is removed. If not, it isn't. To get a; * full dump of an object file, use the -f option. This can; * help determine the something that may be different with a; * compiler other than Visual C++.; * ======================================; * Corrections (Axel 2006-04-04):; * Conversion to C++. Mostly.; *; * Extension (Axel 2006-03-15); * As soon as an object file contains an /EXPORT directive (which; * is generated by the compiler when a symbol is declared as; * __declspec(dllexport) no to-be-exported symbols are printed,; * as the linker will see these directives, and if those directives; * are present we only export selectively (i.e. we trust the; * programmer).; *; * ======================================; * ======================================; * Corrections (Valery Fine 23/02/98):; *; * The ""(vector) deleting destructor"" MUST not be exported; * To recognize it the following test are introduced:; * ""@@UAEPAXI@Z"" scalar deleting dtor; * ""@@QAEPAXI@Z"" vector deleting dtor; * ""AEPAXI@Z"" vector deleting dtor with thunk adjustor; * ======================================; * Corrections (Valery Fine 12/02/97):; *; * It created a wrong EXPORTS for the global pointers and constants.; * The Section Header has been involved to discover the missing information; * Now the pointers are correctly supplied with ""DATA"" descriptor; * the constants with no extra descriptor.; *; * Corrections (Valery Fine 16/09/96):; *; * It didn't work for C++ code with global variables and class definitions; * The DumpExternalObject function has been introduced to generate .DEF; *file; *; * Author: Valery Fine 16/09/96 (E-mail: fine@vxcern.cern.ch); *----------------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/win/bindexplib/bindexplib.cxx:1991,test,test,1991,misc/win/bindexplib/bindexplib.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/win/bindexplib/bindexplib.cxx,1,['test'],['test']
Testability,ixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[ px = pxlow + u*pxrange \f]; /// \f[ = pxlow + Log(x/xmin)/alfa \f]; /// \f[ = pxlow -Log(xmin)/alfa + Log(x)/alfa \f]; /// \f[ = fXtoPixelk + fXtoPixel*Log(x) \f]; /// \f[ \Rightarrow fXtoPixelk = pxlow -Log(xmin)/alfa \f]; /// \f[ \Rightarrow fXtoPixel = 1/alfa \f]; ///; /// \f[ py = pylow - Log(y/ymin)/beta \f]; /// \f[ = fYtoPixelk + fYtoPixel*Log(y) \f]; /// \f[ \Rightarrow fYtoPixelk = pylow - Log(ymin,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2689,Log,Log,2689,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"j.; /// (setjmpTable/setjmpTableSize initialization + setjmp callsite; /// transformation); ///; /// 4) Create a catchpad with a wasm.catch() intrinsic, which returns the value; /// thrown by __wasm_longjmp function. In Emscripten library, we have this; /// struct:; ///; /// struct __WasmLongjmpArgs {; /// void *env;; /// int val;; /// };; /// struct __WasmLongjmpArgs __wasm_longjmp_args;; ///; /// The thrown value here is a pointer to __wasm_longjmp_args struct object. We; /// use this struct to transfer two values by throwing a single value. Wasm; /// throw and catch instructions are capable of throwing and catching multiple; /// values, but it also requires multivalue support that is currently not very; /// reliable.; /// TODO Switch to throwing and catching two values without using the struct; ///; /// All longjmpable function calls will be converted to an invoke that will; /// unwind to this catchpad in case a longjmp occurs. Within the catchpad, we; /// test the thrown values using testSetjmp function as we do for Emscripten; /// SjLj. The main difference is, in Emscripten SjLj, we need to transform every; /// longjmpable callsite into a sequence of code including testSetjmp() call; in; /// Wasm SjLj we do the testing in only one place, in this catchpad.; ///; /// After testing calling testSetjmp(), if the longjmp does not correspond to; /// one of the setjmps within the current function, it rethrows the longjmp; /// by calling __wasm_longjmp(). If it corresponds to one of setjmps in the; /// function, we jump to the beginning of the function, which contains a switch; /// to each post-setjmp BB. Again, in Emscripten SjLj, this switch is added for; /// every longjmpable callsite; in Wasm SjLj we do this only once at the top of; /// the function. (after setjmpTable/setjmpTableSize initialization); ///; /// The below is the pseudocode for what we have described; ///; /// entry:; /// Initialize setjmpTable and setjmpTableSize; ///; /// setjmp.dispatch:; /// switch ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:9633,test,test,9633,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,2,['test'],"['test', 'testSetjmp']"
Testability,"jects which may be deallocated at the end of a statement. Twines should; /// only be used as const references in arguments, when an API wishes; /// to accept possibly-concatenated strings.; ///; /// Twines support a special 'null' value, which always concatenates to form; /// itself, and renders as an empty string. This can be returned from APIs to; /// effectively nullify any concatenations performed on the result.; ///; /// \b Implementation; ///; /// Given the nature of a Twine, it is not possible for the Twine's; /// concatenation method to construct interior nodes; the result must be; /// represented inside the returned value. For this reason a Twine object; /// actually holds two values, the left- and right-hand sides of a; /// concatenation. We also have nullary Twine objects, which are effectively; /// sentinel values that represent empty strings.; ///; /// Thus, a Twine can effectively have zero, one, or two children. The \see; /// isNullary(), \see isUnary(), and \see isBinary() predicates exist for; /// testing the number of children.; ///; /// We maintain a number of invariants on Twine objects (FIXME: Why):; /// - Nullary twines are always represented with their Kind on the left-hand; /// side, and the Empty kind on the right-hand side.; /// - Unary twines are always represented with the value on the left-hand; /// side, and the Empty kind on the right-hand side.; /// - If a Twine has another Twine as a child, that child should always be; /// binary (otherwise it could have been folded into the parent).; ///; /// These invariants are check by \see isValid().; ///; /// \b Efficiency Considerations; ///; /// The Twine is designed to yield efficient and small code for common; /// situations. For this reason, the concat() method is inlined so that; /// concatenations of leaf nodes can be optimized into stores directly into a; /// single stack allocated object.; ///; /// In practice, not all compilers can be trusted to optimize concat() fully,; /// so we prov",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h:1899,test,testing,1899,interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h,1,['test'],['testing']
Testability,"ks.; - ndiv=2 --> 2 divisions, one tick mark in the middle of the axis.; - chopt : Drawing options (see below).; - gridlength: grid length on main tick marks. It should be noted that `func` is not defined in the user's coordinate space,; but in the new TGaxis space. If `x` is the original axis, `w` the new axis,; and `w = f(x)` (for example, `f` is a calibration function converting ADC; channels `x` to energy `w`), then `func` must be supplied as `f^{-1}(w)`. Examples:. Begin_Macro(source); {; TCanvas *c2 = new TCanvas(""c2"",""c2"",10,10,700,500);. gPad->DrawFrame(0.,-2.,10.,2);. TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();. TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();. TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; End_Macro. Note that this functionality has some limitations and does not follow all the TGaxis setting.; In particular the number of divisions or the maximum number digits do not apply. \anchor GA02; ## Logarithmic axis. By default axis are linear. To define a `TGaxis` as logarithmic, it is; enough to create it with the option `""G""`. When plotting an histogram or a graph the logarithmic scale can be set using:. - `gPad->SetLogx(1);` set the logarithmic scale on the X axis; - `gPad->SetLogy(1);` set the logarithmic scale on the Y axis. When the `SetMoreLogLabels()` method is called more labels are drawn; when in logarithmic scale and there is a small number of decades (less than 3). \anchor GA03; ## Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify; the option `""B""`. I",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:4120,log,logarithmic,4120,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['log'],['logarithmic']
Testability,"l be increased automatically; fDeltaPruneStrength = 1.0e-5;; Int_t nnodes = this->CountNodes((DecisionTreeNode*)dt->GetRoot());. Bool_t forceStop = kFALSE;; Int_t errCount = 0,; lastNodeCount = nnodes;. // find the maximum prune strength that still leaves the root's daughter nodes. while ( nnodes > 1 && !forceStop ) {; fPruneStrength += fDeltaPruneStrength;; Log() << ""----------------------------------------------------"" << Endl;; FindListOfNodes((DecisionTreeNode*)dt->GetRoot());; for( UInt_t i = 0; i < fPruneSequence.size(); i++ ); fPruneSequence[i]->SetTerminal(); // prune all the nodes from the sequence; // test the quality of the pruned tree; Double_t quality = 1.0 - dt->TestPrunedTreeQuality()/weights;; fQualityMap.insert(std::make_pair<const Double_t,Double_t>(quality,fPruneStrength));. nnodes = CountNodes((DecisionTreeNode*)dt->GetRoot()); // count the number of nodes in the pruned tree. Log() << ""Prune strength : "" << fPruneStrength << Endl;; Log() << ""Had "" << lastNodeCount << "" nodes, now have "" << nnodes << Endl;; Log() << ""Quality index is: "" << quality << Endl;. if (lastNodeCount == nnodes) errCount++;; else {; errCount=0; // reset counter; if ( nnodes < lastNodeCount / 2 ) {; Log() << ""Decreasing fDeltaPruneStrength to "" << fDeltaPruneStrength/2.0; << "" because the number of nodes in the tree decreased by a factor of 2."" << Endl;; fDeltaPruneStrength /= 2.;; }; }; lastNodeCount = nnodes;; if (errCount > 20) {; Log() << ""Increasing fDeltaPruneStrength to "" << fDeltaPruneStrength*2.0; << "" because the number of nodes in the tree didn't change."" << Endl;; fDeltaPruneStrength *= 2.0;; }; if (errCount > 40) {; Log() << ""Having difficulty determining the optimal prune strength, bailing out!"" << Endl;; forceStop = kTRUE;; }; // reset the tree for the next iteration; for( UInt_t i = 0; i < fPruneSequence.size(); i++ ); fPruneSequence[i]->SetTerminal(false);; fPruneSequence.clear();; }; // from the set of pruned trees, find the one with the optimal quality ind",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:1195,Log,Log,1195,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,3,['Log'],['Log']
Testability,"l for incorporating systematic variations to the nominal PDF.; The Bernstein basis polynomials are particularly appropriate because they are positive definite. This tool was inspired by the work of Glen Cowan together with Stephan Horner, Sascha Caron,; Eilam Gross, and others.; The initial implementation is independent work. The major step forward in the approach was; to provide a well defined algorithm that specifies the order of polynomial to be included; in the correction. This is an empirical algorithm, so in addition to the nominal model it; needs either a real data set or a simulated one. In the early work, the nominal model was taken; to be a histogram from Monte Carlo simulations, but in this implementation it is generalized to an; arbitrary PDF (which includes a RooHistPdf). The algorithm basically consists of a; hypothesis test of an nth-order correction (null) against a n+1-th order correction (alternate).; The quantity q = -2 log LR is used to determine whether the n+1-th order correction is a major; improvement to the n-th order correction. The distribution of q is expected to be roughly; \f$\chi^2\f$ with one degree of freedom if the n-th order correction is a good model for the data.; Thus, one only moves to the n+1-th order correction of q is relatively large. The chance that; one moves from the n-th to the n+1-th order correction when the n-th order correction; (eg. a type 1 error) is sufficient is given by the Prob(\f$\chi^2_1\f$ > threshold). The constructor; of this class allows you to directly set this tolerance (in terms of probability that the n+1-th; term is added unnecessarily). To do:; Add another method to the utility that will make the sampling distribution for -2 log lambda; for various m vs. m+1 order corrections using a nominal model and perhaps having two ways of; generating the toys (either via a histogram or via an independent model that is supposed to; reflect reality). That will allow one to make plots like Glen has at the end of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx:1554,log,log,1554,roofit/roostats/src/BernsteinCorrection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx,1,['log'],['log']
Testability,"l-AND or logical-OR is evaluated. This; /// information relies on the assigned IDs and are embedded within the; /// coverage region IDs of each branch region associated with a leaf-level; /// condition. This information helps the visualization tool reconstruct all; /// possible test vectors for the purposes of MC/DC analysis. If a ""next"" node; /// ID is '0', it means it's the end of the test vector. The following rules; /// are used:; ///; /// For logical-AND (""LHS && RHS""):; /// - If LHS is TRUE, execution goes to the RHS node.; /// - If LHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// For logical-OR (""LHS || RHS""):; /// - If LHS is TRUE, execution goes to the LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If LHS is FALSE, execution goes to the RHS node.; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// Finally, the condition IDs are also used when instrumenting the code to; /// indicate a unique offset into a temporary bitmap that represents the true; /// or false evaluation of that particular condition.; ///; /// NOTE regarding the use of CodeGenFunction::stripCond(). Even though, for; /// simplicity, parentheses and unary logical-NOT operators are considered; /// part of their underlying condition for both MC/DC and branch coverage, the; /// condition IDs themselves are assigned and tracked using the underlying; /// condition itself. Th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:2587,log,logical-OR,2587,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,2,['log'],"['logical-AND', 'logical-OR']"
Testability,"le RooTrace.cxx; \class RooTrace; \ingroup Roofitcore. Controls the memory tracing hooks in all RooFit; objects. When tracing is active, a table of live RooFit objects; is kept that can be queried at any time. In verbose mode, messages; are printed in addition at the construction and destruction of; each object. Usage example:; \code{.cpp}; void exampleRooTrace(); {; using namespace RooFit;. // Activate RooFit memory tracing; RooTrace::active(true);; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Show dump of all RooFit object in memory; RooTrace::dump();; ; // Activate verbose mode; RooTrace::verbose(true);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Put marker in trace list for future reference; RooTrace::mark();; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Show object added to memory since marker; RooTrace::printObjectCounts();; ; // Since verbose mode is still on, you will see messages; // pertaining to destructor calls of all RooFit objects; // made in this macro; //; // A call to RooTrace::dump() at the end of this macro; // should show that there a no RooFit object left in memory; }; \endcode. \note In the ROOT releases, the RooTrace is disabled at compile time and the; example above will not print any objects. If you are an advanced developer who; wants to use the RooTrace, you need to recompile ROOT after changing the; `TRACE_CREATE` and `TRACE_DESTROY` macros in RooTrace.h to call the RooTrace; functions:. \code{.cpp}; #define TRACE_CREATE RooTrace::create(this);; #define TRACE_DESTROY RooTrace::destroy(this);; \endcode. However, as ROOT is not build with this by default, the RooTrace is not tested; and there is no guarantee that this works.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:2648,test,tested,2648,roofit/roofitcore/src/RooTrace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx,1,['test'],['tested']
Testability,"le: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,3};; /// for (std::string Str : Container); /// Body(Str);; /// </code>; /// which is syntactic sugar for approximately:; /// <code>; /// auto &&__range = Container;; /// auto __begin = std::begin(__range);; /// auto __end = std::end(__range);; /// for (; __begin != __end; ++__begin) {; /// std::String Str = *__begin;; /// Body(Str);; /// }; /// </code>; /// In this example, the loop user variab",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:3457,log,logical,3457,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['log'],['logical']
Testability,"leInterface from the data that needs visualization and; then creating the TGTable using this interface. A simple macro to use a TGTable with a TGSimpleTableInterface:. ~~~; {; Int_t i = 0, j = 0;; UInt_t nrows = 6, ncolumns = 5;; Double_t** data = new Double_t*[nrows];; for (i = 0; i < nrows; i++) {; data[i] = new Double_t[ncolumns];; for (j = 0; j < ncolumns; j++) {; data[i][j] = 10 * i + j;; }; }. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create an interface; TGSimpleTableInterface *iface = new TGSimpleTableInterface(data, 6, 5);. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. //Update data; data[5][1] = 3.01;; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }; ~~~. It is also possible to visualise data from a tree. A simple macro; showing the use of a TTreeTableInterface follows. ~~~; {; // Open a root file.; TFile *file = new TFile(""$ROOTSYS/tutorials/hsimple.root"");; // Load a tree from the file; TNtuple *ntuple = (TNtuple *)file->Get(""ntuple"");. // Create an interface; TTreeTableInterface *iface = new TTreeTableInterface(ntuple);. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface, 10, 6);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. // Set a selection; iface->SetSelection(""px > 0."");; // Add a column; iface->AddColumn(""(px+py)/(px-py)"", 0);; //update the table view; table->Update();. // Layout an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:2126,Test,Test,2126,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['Test'],['Test']
Testability,"ll files is around 100 Mbytes.; // The test with 30 events only require around 20 Mbytes; // NB: The test must be run with more than 10 events; //; // The tests runs sequentially 16 tests. Each test will produce; // one line (Test OK or Test failed) with some result parameters.; // At the end of the test a table is printed showing the global results; // with the amount of I/O, Real Time and Cpu Time.; // One single number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files of a chain......................... OK; // Test 14 : Check correct rebuilt of Event.root in test 13........ OK; // Test 15 : Divert Tree branches to separate files................ OK; // Test 16 : CINT test (3 n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:1882,Test,Test,1882,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,1,['Test'],['Test']
Testability,"lti dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3309,Test,Test,3309,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"luded from the fit. See also later the note on the treatment; /// of empty bins. When using option ""I"" the residual is computed not using the function value at the bin center, `f(x(i)|p)`,; /// but the integral of the function in the bin, Integral{ f(x|p)dx }, divided by the bin volume.; /// When using option `P` (Pearson chi2), the expected error computed as `e(i) = sqrt(f(x(i)|p))` is used.; /// In this case empty bins are considered in the fit.; /// Both chi-square methods should not be used when the bin content represent counts, especially in case of low bin statistics,; /// because they could return a biased result.; ///; /// \anchor HFitNLL; /// ### Likelihood Fits; ///; /// When using option ""L"" a likelihood fit is used instead of the default chi-square fit.; /// The likelihood is built assuming a Poisson probability density function for each bin.; /// The negative log-likelihood to be minimized is; ///; /// \f[; /// NLL = - \sum_{i}{ \log {\mathrm P} ( y(i) | f(x(i) | p ) ) }; /// \f]; /// where `P(y|f)` is the Poisson distribution of observing a count `y(i)` in the bin when the expected count is `f(x(i)|p)`.; /// The exact likelihood used is the Poisson likelihood described in this paper:; /// S. Baker and R. D. Cousins, “Clarification of the use of chi-square and likelihood functions in fits to histograms,”; /// Nucl. Instrum. Meth. 221 (1984) 437.; ///; /// \f[; /// NLL = \sum_{i}{( f(x(i) | p ) + y(i)\log(y(i)/ f(x(i) | p )) - y(i)) }; /// \f]; /// By using this formulation, `2*NLL` can be interpreted as the chi-square resulting from the fit.; ///; /// This method should be always used when the bin content represents counts (i.e. errors are sqrt(N) ).; /// The likelihood method has the advantage of treating correctly bins with low statistics. In case of high; /// statistics/bin the distribution of the bin content becomes a normal distribution and the likelihood and the chi2 fit; /// give the same result.; ///; /// The likelihood method, although a bit sl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7855,log,log-likelihood,7855,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['log'],"['log', 'log-likelihood']"
Testability,"lytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cousins, James T. Linnemann, Jordan Tucker; # http://arxiv.org/abs/physics/0702156; # NIM A 595 (2008) 480--501; #; # - Statistical Challenges for Searches for New Physics at the LHC; # Author: Kyle Cranmer; # http://arxiv.org/abs/physics/0511028; #; # - Measures of Significance in HEP and Astrophysics; # Authors J. T. Linnemann; # http://arxiv.org/abs/physics/0312059; #; # \macro_image; # \macro_output; # \macro_code; #; # \authors Kyle Cranmer, Wouter Verkerke, Sven Kreiss, and Jolly Chen (Python translation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:1649,test,testing,1649,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['test'],"['test', 'testing']"
Testability,"mber.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,3};; /// for (std::string Str : Container); /// Body(Str);; /// </code>; /// which is syntactic sugar for approximately:; /// <code>; /// auto &&__range = Container;; /// auto __begin = std::begin(__range);; /// auto __end = std::end(__range);; /// for (; __begin != __end; ++__begin) {; /// std::String Str = *__begin;; /// Body(Str);; /// }; /// </code>; /// In this example, the loop user variable is `Str`, the loop iteration; /// variable is `__begin` of type `std::vector<std::string>::iterator` and the; /// logical iteration number type is `size_t` (unsigned version of; /// `std::vector<std::string>::iterator::difference_type` aka `ptrdiff_t`).; /// Therefore, the distance function will be; /// <code>; /// [&](size_t &Result) { Result = __end - __begin; }; /// </code>; /// and the loop variable function is; /// <code>; /// [&,__begin](std::vector<std::string>::iterator &Result, size_t Logical) {; /// Result = __begin + Logical;; /// }; /// </code>; /// The variable `__begin`, aka the loop iteration variable, is captured by; /// value because it is modified in the loop body, but both functions require; /// the initial value. The OpenMP specification explicitly leaves unspecified; /// when the loop expressions are evaluated such that a capture by reference is; /// suff",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:4587,log,logical,4587,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['log'],['logical']
Testability,"memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms implemented in the; /// OpenMP runtime depending on the number of active lanes:; ///; /// Full Warp Reduction; ///; /// The reduce algorithm within a warp where all lanes are active; /// is implemented in the runtime as follows:; ///; /// full_warp_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// for (int offset = WARPSIZE/2; offset > 0; offset /= 2); /// ShuffleReduceFn(reduce_data, 0, offset, 0);; /// }; ///; /// The algorithm completes in log(2, WARPSIZE) steps.; ///; /// 'ShuffleReduceFn' is used here with lane_id set to 0 because it is; /// not used therefore we save instructions by not retrieving lane_id; /// from the corresponding special registers. The 4th parameter, which; /// represents the version of the algorithm being used, is set to 0 to; /// signify full warp reduction.; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// #reduce_elem refers to an element in the local lane's data structure; /// #remote_elem is retrieved from a remote lane; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// reduce_elem = reduce_elem REDUCE_OP remote_elem;; ///; /// Contiguous Partial Warp Reduction; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:5126,log,log,5126,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['log'],['log']
Testability,"min functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file path of her/his choice, the log file is never * //; // * deleted. * //; // * * //; // * SKIPPED means that the test cannot be run. * //; // * * //; // * New tests can be easily added by providing a function performing the * //; // * test and a name for the test; see examples below. * //; // * * //; // * It is also possible to trigger the automatic PROOF valgrind setup by * //; // * means of the env GETPROOF_VALGRIND. * //; // * E.g. to run the master in valgrind do * //; // * * //; // * $ export GETPROOF_VALGRIND=""valgrind=mast",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3848,Test,Test,3848,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"mple and it ships an IR file that is prepared; // for the instructions below.; //; //; // The following command line session provides a complete walkthrough of the; // feature using LLDB 12:; //; // [Terminal 1] Prepare a debuggable out-of-process JIT session:; //; // > cd llvm-project/build; // > ninja LLJITWithRemoteDebugging llvm-jitlink-executor; // > cp ../llvm/test/Examples/OrcV2Examples/Inputs/argc_sub1_elf.ll .; // > bin/LLJITWithRemoteDebugging --wait-for-debugger argc_sub1_elf.ll; // Found out-of-process executor: bin/llvm-jitlink-executor; // Launched executor in subprocess: 65535; // Attach a debugger and press any key to continue.; //; //; // [Terminal 2] Attach a debugger to the child process:; //; // (lldb) log enable lldb jit; // (lldb) settings set plugin.jit-loader.gdb.enable on; // (lldb) settings set target.source-map Inputs/ \; // /path/to/llvm-project/llvm/test/Examples/OrcV2Examples/Inputs/; // (lldb) attach -p 65535; // JITLoaderGDB::SetJITBreakpoint looking for JIT register hook; // JITLoaderGDB::SetJITBreakpoint setting JIT breakpoint; // Process 65535 stopped; // (lldb) b sub1; // Breakpoint 1: no locations (pending).; // WARNING: Unable to resolve breakpoint to any actual locations.; // (lldb) c; // Process 65535 resuming; //; //; // [Terminal 1] Press a key to start code generation and execution:; //; // Parsed input IR code from: argc_sub1_elf.ll; // Initialized LLJIT for remote executor; // Running: argc_sub1_elf.ll; //; //; // [Terminal 2] Breakpoint hits; we change the argc value from 1 to 42:; //; // (lldb) JITLoaderGDB::JITDebugBreakpointHit hit JIT breakpoint; // JITLoaderGDB::ReadJITDescriptorImpl registering JIT entry at 0x106b34000; // 1 location added to breakpoint 1; // Process 65535 stopped; // * thread #1, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1; // frame #0: JIT(0x106b34000)`sub1(x=1) at argc_sub1.c:1:28; // -> 1 	int sub1(int x) { return x - 1; }; // 2 	int main(int argc, char **argv) { return sub1(ar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp:1612,test,test,1612,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,1,['test'],['test']
Testability,"mple of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files of a chain......................... OK; // Test 14 : Check correct rebuilt of Event.root in test 13........ OK; // Test 15 : Divert Tree branches to separate files................ OK; // Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK; // Test 17 : Test mkdir............................................ OK; // ******************************************************************; //* Linux pcbrun.cern.ch 2.4.20 #1 Thu Jan 9 12:21:02 MET 2003; //******************************************************************; //stress : Total I/O = 703.7 Mbytes, I = 535.2, O = 168.5; //stress : Compr I/O = 557.0 Mbytes, I = 425.1, O = 131.9; //stress : Real Time = 64.84 seconds Cpu Time = 61.00 seconds; //******************************************************************; //* ROOTMARKS = 600.1 * Root4.02/00 20041217/1146; //***********",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:2522,Test,Test,2522,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,2,['Test'],['Test']
Testability,n = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[ px = pxlow + u*pxrange \f]; /// \f[ = pxlow + Log(x/xmin)/alfa \f]; /// \f[ = pxlow -Log(xmin)/alfa + Log(x)/alfa \f]; /// \f[ = fXtoPixelk + fXtoPixel*Log(x) \f]; /// \f[ \Rightarrow fXtoPixelk = pxlow -Log(xmin)/alfa \f]; /// \f[ \Rightarrow fXtoPixel = 1/alfa \f]; ///; /// \f[ py = pylow - Log(y/ymin)/beta \f]; /// \f[ = fYtoPixelk + fYtoPixel*Log(y) \f]; /// \f[ \Rightarrow fYtoPixelk,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2670,Log,Log,2670,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"n [Bool_t] if kTRUE run in dynamic startup mode * //; // * skipds [Bool_t] if kTRUE the dataset related tests are skipped * //; // * * //; // * A certain number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:1929,Test,Test,1929,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"n be changed by SetText(new_label). Selecting a text or picture button will generate the event:; - kC_COMMAND, kCM_BUTTON, button id, user data.; */; /** \class TGCheckButton; \ingroup guiwidgets. Selects different options. Like text buttons, they have text or hot string as a label. Selecting a check button will generate the event:; - kC_COMMAND, kCM_CHECKBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMCHECKBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGRadioButton; \ingroup guiwidgets. Selects different options. Like text buttons, they have text or hot string as a label. Radio buttons are grouped usually in logical sets of two or more; buttons to present mutually exclusive choices. Selecting a radio button will generate the event:; - kC_COMMAND, kCM_RADIOBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMRADIOBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGSplitButton; \ingroup guiwidgets. Implements a button with added menu functionality.; There are 2 modes of operation available. If the button is split, a menu will popup when the menu area of the; button is clicked. Activating a menu item changes the functionality; of the button by having it emit a additional signal when it is; clicked. The signal emitted when the button is clicked, is the; ItemClick",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx:3387,log,logical,3387,gui/gui/src/TGButton.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx,1,['log'],['logical']
Testability,"n internal buffers with the method TSQLStatement::StoreResult().; // Information about selected fields (columns); // can be obtained with GetNumFields() and GetFieldName() methods.; // To receive data for the next result row, NextResultRow() method should be called.; // Value from each column can be retrieved with the GetInt(), GetDouble(),; // GetString() and other methods.; //; // There are no strict limitations on which method should be used; // to get column values. GetString() can be used as a generic method,; // which should always return correct result, but also conversions between most; // basic data types are supported. For instance, if a column contains integer; // values, GetInt(), GetLong64(), GetDouble() and GetString() methods can be used.; // If column has floating point format, GetDouble() and GetString() methods can; // be used without loss of precision while GetInt() or GetLong64() will return; // only the integer part of the value. One also can test whether; // a value is NULL with the IsNull() method.; //; // The buffer length specified for a statement in the TSQLServer::Statement() call; // will also be used to allocate buffers for column values. Usage of these; // buffers is transparent for users and does not limit the number of rows; // which can be accessed with one statement. Again, local databases do not work; // with buffers inside TSQLStatement at all and ignore this value.; // Example of select query:; //; // stmt = serv->Statement(""SELECT * FROM TESTTABLE"", 100);; // // process statement; // if (stmt->Process()) {; // // store result of statement in buffer; // stmt->StoreResult();; //; // // display info about selected field; // std::cout << ""NumFields = "" << stmt->GetNumFields() << std::endl;; // for (int n=0;n<stmt->GetNumFields();n++); // std::cout << ""Field "" << n << "" = "" << stmt->GetFieldName(n) << std::endl;; //; // // extract rows one after another; // while (stmt->NextResultRow()) {; // Double_t id1 = stmt->GetDouble(0);; // UI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:7414,test,test,7414,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['test'],['test']
Testability,"n number is multiplexed in the 4 most significant; bits of the 'fTimeHiAndVersion' field. There are two defined; versions:; ~~~ {.cpp}; MSB <---; Version 4-Bit Code Description; ------------------------------------------------------------; | 1 0 0 0 1 DCE version, as specified herein.; | 2 0 0 1 0 DCE Security version, with; | embedded POSIX UIDs.; | 3 0 0 1 1 node id is a random value; ------------------------------------------------------------; ~~~. ## Clock Sequence. The clock sequence value must be changed whenever:. The UUID generator detects that the local value of UTC; has gone backward; this may be due to re-syncing of the system; clock. While a node is operational, the UUID service always saves; the last UTC used to create a UUID. Each time a new UUID; is created, the current UTC is compared to the saved value; and if either the current value is less or the saved value; was lost, then the clock sequence is incremented modulo; 16,384, thus avoiding production of duplicated UUIDs. The clock sequence must be initialized to a random number; to minimize the correlation across system. This provides; maximum protection against node identifiers that may move; or switch from system to system rapidly. ## Clock Adjustment. UUIDs may be created at a rate greater than the system clock; resolution. Therefore, the system must also maintain an; adjustment value to be added to the lower-order bits of the; time. Logically, each time the system clock ticks, the; adjustment value is cleared. Every time a UUID is generated,; the current adjustment value is read and incremented, and; then added to the UTC time field of the UUID. ## Clock Overrun. The 100-nanosecond granularity of time should prove sufficient; even for bursts of UUID production in the next generation of; high-performance multiprocessors. If a system overruns the; clock adjustment by requesting too many UUIDs within a single; system clock tick, the UUID generator will stall until the; system clock catches up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:3835,Log,Logically,3835,core/base/src/TUUID.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx,1,['Log'],['Logically']
Testability,"n number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2081,Test,Test,2081,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"n succession.; *; * @param data Reference to a RooAbsData object representing the dataset.; * @param cmdArgs Variadic template arguments representing optional command arguments.; * You can pass either an arbitrary number of RooCmdArg instances; * or a single RooLinkedList that points to the RooCmdArg objects.; * @return An owning pointer to the created RooAbsReal NLL object.; * @return RooFitResult with fit status and parameters if option Save() is used, `nullptr` otherwise. The user takes ownership of the fit result.; *; * @tparam CmdArgs_t Template types for optional command arguments.; * Can either be an arbitrary number of RooCmdArg or a single RooLinkedList.; *; * \note This front-end function should not be re-implemented in derived PDF types.; * If you mean to customize the likelihood fitting routine,; * you need to override the virtual RooAbsPdf::fitToImpl() method.; *; * The following named arguments are supported:; *; * <table>; * <tr><th> Type of CmdArg <th> Options to control construction of -log(L); * <tr><td> <td> All command arguments that can also be passed to the NLL creation method.; * \see RooAbsPdf::createNLL(); *; * <tr><th><th> Options to control flow of fit procedure; * <tr><td> `Minimizer(""<type>"", ""<algo>"")` <td> Choose minimization package and optionally the algorithm to use. Default is MINUIT/MIGRAD through the RooMinimizer interface,; * but others can be specified (through RooMinimizer interface).; * <table>; * <tr><th> Type <th> Algorithm; * <tr><td> Minuit <td> migrad, simplex, minimize (=migrad+simplex), migradimproved (=migrad+improve); * <tr><td> Minuit2 <td> migrad, simplex, minimize, scan; * <tr><td> GSLMultiMin <td> conjugatefr, conjugatepr, bfgs, bfgs2, steepestdescent; * <tr><td> GSLSimAn <td> -; * </table>; *; * <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; * <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization of test statistic during minimization (on by ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1308,log,log,1308,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['log'],['log']
Testability,"nGL 3D graphics; library. The plotting options provided by `TGLHistPainter` start with; `GL` keyword. ### General information: plot types and supported options. The following types of plots are provided:. #### Lego - (`TGLLegoPainter`); The supported options are:. - `""GLLEGO"" :` Draw a lego plot.; - `""GLLEGO2"" :` Bins with color levels.; - `""GLLEGO3"" :` Cylindrical bars. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y (if you see; what it means). #### Surfaces (`TF2` and `TH2` with `""GLSURF""` options) - (`TGLSurfacePainter`); The supported options are:. - `""GLSURF"" :` Draw a surface.; - `""GLSURF1"" :` Surface with color levels; - `""GLSURF2"" :` The same as `""GLSURF1""` but without polygon outlines.; - `""GLSURF3"" :` Color level projection on top of plot (works only in cartesian coordinate system).; - `""GLSURF4"" :` Same as `""GLSURF""` but without polygon outlines. The surface painting in cartesian coordinates supports logarithmic scales along X, Y, Z axis.; In polar coordinates only the Z axis can be logarithmic, in cylindrical coordinates only the Y axis. #### Additional options to `SURF` and `LEGO` - Coordinate systems:; The supported options are:. - `"" "" :` Default, cartesian coordinates system.; - `""POL"" :` Polar coordinates system.; - `""CYL"" :` Cylindrical coordinates system.; - `""SPH"" :` Spherical coordinates system. #### `TH3` as boxes (spheres) - (`TGLBoxPainter`); The supported options are:. - `""GLBOX"" :` TH3 as a set of boxes, size of box is proportional to bin content.; - `""GLBOX1"":` the same as ""glbox"", but spheres are drawn instead of boxes. #### `TH3` as iso-surface(s) - (`TGLIsoPainter`); The supported option is:. - `""GLISO"" :` TH3 is drawn using iso-surfaces. #### `TH3` as color boxes - (`TGLVoxelPainter`); The supported option is:. - `""GLCOL"" :` TH3 is drawn using semi-transparent colored boxes.; See `$ROOTSYS/tutorials/gl/glvox1.C`. #### `TF3` (implicit function) - (`TGLTF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:1211,log,logarithmic,1211,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,1,['log'],['logarithmic']
Testability,"ncomplete: An incomplete TypeString;; /// IncompleteUsed: An incomplete TypeString that has been used in a; /// Recursive type encoding.; ///; /// A NonRecursive entry will have all of its sub-members expanded as fully; /// as possible. Whilst it may contain types which are recursive, the type; /// itself is not recursive and thus its encoding may be safely used whenever; /// the type is encountered.; ///; /// A Recursive entry will have all of its sub-members expanded as fully as; /// possible. The type itself is recursive and it may contain other types which; /// are recursive. The Recursive encoding must not be used during the expansion; /// of a recursive type's recursive branch. For simplicity the code uses; /// IncompleteCount to reject all usage of Recursive encodings for member types.; ///; /// An Incomplete entry is always a RecordType and only encodes its; /// identifier e.g. ""s(S){}"". Incomplete 'StubEnc' entries are ephemeral and; /// are placed into the cache during type expansion as a means to identify and; /// handle recursive inclusion of types as sub-members. If there is recursion; /// the entry becomes IncompleteUsed.; ///; /// During the expansion of a RecordType's members:; ///; /// If the cache contains a NonRecursive encoding for the member type, the; /// cached encoding is used;; ///; /// If the cache contains a Recursive encoding for the member type, the; /// cached encoding is 'Swapped' out, as it may be incorrect, and...; ///; /// If the member is a RecordType, an Incomplete encoding is placed into the; /// cache to break potential recursive inclusion of itself as a sub-member;; ///; /// Once a member RecordType has been expanded, its temporary incomplete; /// entry is removed from the cache. If a Recursive encoding was swapped out; /// it is swapped back in;; ///; /// If an incomplete entry is used to expand a sub-member, the incomplete; /// entry is marked as IncompleteUsed. The cache keeps count of how many; /// IncompleteUsed entries it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/XCore.cpp:1302,Stub,StubEnc,1302,interpreter/llvm-project/clang/lib/CodeGen/Targets/XCore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/XCore.cpp,1,['Stub'],['StubEnc']
Testability,"ndow and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 script Background_incr.C:; ///; /// Example of the estimation of background for number of iterations=6.; /// Original spectrum is shown in black color, estimated background in red color.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_incr.C; /// End_Macro; ///; /// ### Example 2 script Background_decr.C:; ///; /// In Example 1. one can notice that a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1858,log,logical,1858,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['log'],['logical']
Testability,"ng terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**. \class TRandom. @ingroup Random. This is the base class for the ROOT Random number generators.; This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived; classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the <a; href=""https://www.gnu.org/software/gsl/manual/html_node/Unix-random-number-generators.html"">BSD `rand` generator</a>,; that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated; in just few seconds. To generate random numbers, one should use one of the derived classes, which are:; - TRandom3: it is based on the ""Mersenne Twister generator"",; it is fast and a very long period of about \f$10^{6000}\f$. However it fails some of the most stringent tests of the; <a href=""http://simul.iro.umontreal.ca/testu01/tu01.html"">TestU01 suite</a>.; In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application; based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to; the ROOT generator, *gRandom*.; - ::TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplication of; 576 bits. This new implementation is built on the idea and the original code of Alexei Sibidanov, described in his; <a href=""https://arxiv.org/abs/1705.03123"">paper </a>. It generates random numbers with 52 bit precision (double; precision) and it has an higher luxury level than the original Ranlux generator (`p = 2048` instead of `p=794`).; - ::TRandomMixMax: Generator based on the family of the MIXMAX matrix generators (see the; <a href=""https://mixmax.hepforge.org"">MIXMAX HEPFORGE Web page</a> and the do",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:1264,test,tests,1264,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['test'],['tests']
Testability,nging the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphE,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1896,Test,Test,1896,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"note pixel coverage; * of the color or luminance channels and is returned as an associated alpha; * channel: the color/gray channels are scaled (pre-multiplied) by the alpha; * value.; *; * The samples are either contained directly in the image data, between 1 and 8; * bytes per pixel according to the encoding, or are held in a color-map indexed; * by bytes in the image data. In the case of a color-map the color-map entries; * are individual samples, encoded as above, and the image data has one byte per; * pixel to select the relevant sample from the color-map.; */; /* PNG_FORMAT_*; *; * #defines to be used in png_image::format. Each #define identifies a; * particular layout of sample data and, if present, alpha values. There are; * separate defines for each of the two component encodings.; *; * A format is built up using single bit flag values. All combinations are; * valid. Formats can be built up from the flag values or you can use one of; * the predefined values below. When testing formats always use the FORMAT_FLAG; * macros to test for individual features - future versions of the library may; * add new flags.; *; * When reading or writing color-mapped images the format should be set to the; * format of the entries in the color-map then png_image_{read,write}_colormap; * called to read or write the color-map and set the format correctly for the; * image data. Do not set the PNG_FORMAT_FLAG_COLORMAP bit directly!; *; * NOTE: libpng can be built with particular features disabled. If you see; * compiler errors because the definition of one of the following flags has been; * compiled out it is because libpng does not have the required support. It is; * possible, however, for the libpng configuration to enable the format on just; * read or just write; in that case you may see an error at run time. You can; * guard against this by checking for the definition of the appropriate; * ""_SUPPORTED"" macro, one of:; *; * PNG_SIMPLIFIED_{READ,WRITE}_{BGR,AFIRST}_SUPPORTED; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:2503,test,testing,2503,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['test'],"['test', 'testing']"
Testability,"nput data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file path of her/his choice, the log file is never * //; // * deleted. * //; // * * //; // * SKIPPED means that the test cannot be run. * //; // * * //; // * New tests can be easily added by providing a function performing the * //; // * test and a name for the test; see examples below. * //; // * * //; // * It is also possible to trigger the automatic PROOF valgrind setup by * //;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3694,Test,Test,3694,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"nst char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to determine if the reason gzopen failed was that the; file could not be opened.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1337,test,test,1337,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['test'],['test']
Testability,"ntries passing the selection.; ///; /// By default 50 lines are shown and you are asked for `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \param option The options string can contains the following parameters:; ///; /// - lenmax=dd; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1613,log,log,1613,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['log'],['log']
Testability,"number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files of a chain......................... OK; // Test 14 : Check correct rebuilt of Event.root in test 13........ OK; // Test 15 : Divert Tree branches to separate files................ OK; // Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK; // Test 17 : Test mkdir............................................ OK; // ******************************************************************; //* Linux pcbrun.cern.ch 2.4.20 #1 Thu Jan 9 12:21:02 MET 2003; //******************************************************************; //stress : Total I/O = 703.7 Mbytes, I = 535.2, O = 168.5; //stress : Compr I/O = 557.0 Mbytes, I ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:2308,Test,Test,2308,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,1,['Test'],['Test']
Testability,"number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the `fID` logical ID member of; TBuffer3D. If repeated addition of the same `fID` is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable; performance gains in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method. ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different `fLocalMaster` placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the `fLocalMaster` transform and the; `fColor` and `fTransparency` attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ### Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer; did with it. This enables the viewer to be connected to a client which sends pot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:5779,log,logical,5779,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,2,['log'],['logical']
Testability,"o reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)\f$ : the value of the PDFs of the discriminating variables; \f$y\f$ for the\f$i^{th}\f$ species and for event\f$e\f$,; - \f$x\f$ : the set of control variables which, by definition, do not appear in; the expression of the Likelihood function \f${\cal L}\f$. The extended log-Likelihood reads:. \f[; {\cal L}=\sum_{e=1}^{N}\ln \Big\{ \sum_{i=1}^{{\rm N}_{\rm s}}N_i{\rm f}_i(y_e) \Big\} -\sum_{i=1}^{{\rm N}_{\rm s}}N_i \tag{1}; \f]. From this expression, after maximization of \f${\cal L}\f$ with respect to the \f$N_i\f$ parameters,; a weight can be computed for every event and each species, in order to obtain later the true distribution; \f$\hbox{M}_i(x)\f$ of variable \f$x\f$. If \f${\rm n}\f$ is one of the;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:2036,log,log-Likelihood,2036,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['log'],['log-Likelihood']
Testability,"o row groups; * of one iMCU row while reading in the next iMCU row. (The last row group; * can't be processed until we have another row group for its below-context,; * and so we have to save the next-to-last group too for its above-context.); * We could do this most simply by copying data around in our buffer, but; * that'd be very slow. We can avoid copying any data by creating a rather; * strange pointer structure. Here's how it works. We allocate a workspace; * consisting of M+2 row groups (where M = min_DCT_scaled_size is the number; * of row groups per iMCU row). We create two sets of redundant pointers to; * the workspace. Labeling the physical row groups 0 to M+1, the synthesized; * pointer lists look like this:; * M+1 M-1; * master pointer --> 0 master pointer --> 0; * 1 1; * ... ...; * M-3 M-3; * M-2 M; * M-1 M+1; * M M-2; * M+1 M-1; * 0 0; * We read alternate iMCU rows using each master pointer; thus the last two; * row groups of the previous iMCU row remain un-overwritten in the workspace.; * The pointer lists are set up so that the required context rows appear to; * be adjacent to the proper places when we pass the pointer lists to the; * upsampler.; *; * The above pictures describe the normal state of the pointer lists.; * At top and bottom of the image, we diddle the pointer lists to duplicate; * the first or last sample row as necessary (this is cheaper than copying; * sample rows around).; *; * This scheme breaks down if M < 2, ie, min_DCT_scaled_size is 1. In that; * situation each iMCU row provides only one row group so the buffering logic; * must be different (eg, we must read two iMCU rows before we can emit the; * first row group). For now, we simply do not support providing context; * rows when min_DCT_scaled_size is 1. That combination seems unlikely to; * be worth providing --- if someone wants a 1/8th-size preview, they probably; * want it quick and dirty, so a context-free upsampler is sufficient.; */; /* Private buffer controller object */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:4645,log,logic,4645,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['log'],['logic']
Testability,"o see the HELP of a button, click on the right mouse button. You have access to the last clicked button via the method; GetClicked(). For example, bar->GetClicked()->GetName(); will return the name of the last clicked button. ~~~ {.cpp}; {; // run macro from tutorials directory of ROOT!; TControlBar bar(""vertical"");; bar.AddButton(""Help to run demos"","".x demoshelp.C"",; ""Explains how to run the demos"");; bar.AddButton(""framework"", "".x graphics/framework.C"",; ""An Example of Object Oriented User Interface"");; bar.AddButton(""hsimple"", "".x hsimple.C"",; ""An Example Creating Histograms/Ntuples on File"");; bar.AddButton(""hsum"", "".x hist/hsum.C"",; ""Filling histograms and some graphics options"");; bar.AddButton(""canvas"", "".x graphics/canvas.C"",; ""Canvas and Pad Management"");; bar.AddButton(""formula1"", "".x graphics/formula1.C"",; ""Simple Formula and Functions"");; bar.AddButton(""fillrandom"", "".x hist/fillrandom.C"",; ""Histograms with Random Numbers from a Function"");; bar.AddButton(""fit1"", "".x fit/fit1.C"",; ""A Simple Fitting Example"");; bar.AddButton(""draw2dopt"", "".x hist/draw2dopt.C"",; ""Drawing Options for 2D Histograms"");; bar.AddButton(""graph"", "".x graphs/graph.C"",; ""Examples of a simple graph"");; bar.AddButton(""tornado"", "".x graphics/tornado.C"",; ""Examples of 3-D PolyMarkers"");; bar.AddButton(""shapes"", "".x geom/shapes.C"",; ""The Geometry Shapes"");; bar.AddButton(""file_layout"", "".x io/file.C"",; ""The ROOT file format"");; bar.AddButton(""tree_layout"", "".x tree/tree.C"",; ""The Tree Data Structure"");; bar.AddButton(""ntuple1"", "".x tree/ntuple1.C"",; ""Ntuples and Selections"");; bar.AddButton(""run benchmarks"", "".x legacy/benchmarks.C"",; ""Runs all the ROOT benchmarks"");; bar.AddButton(""rootmarks"", "".x legacy/rootmarks.C"",; ""Prints an estimated ROOTMARKS for your machine"");; bar.AddButton(""edit_hsimple"", "".!vi hsimple.C &"",; ""Invokes the text editor on file hsimple.C"");; bar.AddButton(""Close Bar"", ""bar.Hide()"",; ""Close ControlBar"");; bar.Show();; }; ~~~; \image html gpad_controlbar.png; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TControlBar.cxx:2415,benchmark,benchmarks,2415,graf2d/gpad/src/TControlBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TControlBar.cxx,3,['benchmark'],['benchmarks']
Testability,"o the NLL creation method.; * \see RooAbsPdf::createNLL(); *; * <tr><th><th> Options to control flow of fit procedure; * <tr><td> `Minimizer(""<type>"", ""<algo>"")` <td> Choose minimization package and optionally the algorithm to use. Default is MINUIT/MIGRAD through the RooMinimizer interface,; * but others can be specified (through RooMinimizer interface).; * <table>; * <tr><th> Type <th> Algorithm; * <tr><td> Minuit <td> migrad, simplex, minimize (=migrad+simplex), migradimproved (=migrad+improve); * <tr><td> Minuit2 <td> migrad, simplex, minimize, scan; * <tr><td> GSLMultiMin <td> conjugatefr, conjugatepr, bfgs, bfgs2, steepestdescent; * <tr><td> GSLSimAn <td> -; * </table>; *; * <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; * <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization of test statistic during minimization (on by default); * <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; * <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, off by default; * <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; * <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; * <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 to 2, default is 1); * <tr><td> `MaxCalls(int n)` <td> Change maximum number of likelihood function calls from MINUIT (if `n <= 0`, the default of 500 * #%parameters is used); * <tr><td> `EvalErrorWall(bool flag=true)` <td> When parameters are in disallowed regions (e.g. PDF is negative), return very high value to fitter; * to force it out of that region. This can, however, mean that the fitter gets lost in this region. If; * this happens, try switching it off.; * <tr><td> `RecoverFromUndefinedRegions(double strength)` <td> When PDF is invalid (e.g. parameter in undefined region), try to direct minimiser away from that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2248,test,test,2248,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['test'],['test']
Testability,"oat>(""x"")` does not; the latter spelling; should be preferred for performance-critical applications. Python applications cannot easily specify template parameters or pass C++ callables to RDataFrame.; See [Efficient analysis in Python](#python) for possible ways to speed up hot paths in this case. Just-in-time compilation happens once, right before starting an event loop. To reduce the runtime cost of this step, make sure to book all operations *for all RDataFrame computation graphs*; before the first event loop is triggered: just-in-time compilation will happen once for all code required to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expected. Firstly, each result is duplicated for each worker thread, which e.g. in case of many (possibly multi-dimensional) histograms with fine binning can result in visible memory consumption during the event loop. The thread-local copies of the results are destroyed when the final result is produced. Reducing the number of threads or using coarser binning will reduce the memory usage. Secondly, just-in-time compilation of string expressions or non-templated actions (see the previous paragraph) causes Cling, ROOT's C++ interpreter, to allocate some memory for the generated code that is only released at the end of the application. This commonly results in memory usage creep in long-running applications that create many RDataFrames one after th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:52831,log,logging,52831,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['log'],['logging']
Testability,"of entries in GetNextPacket; // 8 -> 9: support for stateless connection via xproofd; // 9 -> 10: new features requested, tested at CAF; // 10 -> 11: new merging strategy; // 11 -> 12: new progress message; // 12 -> 13: exchange version/architecture/compiler info; // 13 -> 14: new proofserv environment setting; // 14 -> 15: add support for entry lists; new version of TFileInfo; // 15 -> 16: add support for generic non-data based processing; // 16 -> 17: new dataset handling system; support for TFileCollection processing; // 17 -> 18: support for reconnection on daemon restarts; // 18 -> 19: TProofProgressStatus used in kPROOF_PROGRESS, kPROOF_STOPPROCESS; // and kPROOF_GETNEXTPACKET messages in Master - worker communication; // 19 -> 20: Fix the asynchronous mode (required changes in some messages); // 20 -> 21: Add support for session queuing; // 21 -> 22: Add support for switching from sync to async while running ('Ctrl-Z' functionality); // 22 -> 23: New dataset features (default tree name; classification per fileserver); // 23 -> 24: Merging optimization; // 24 -> 25: Handling of 'data' dir; group information; // 25 -> 26: Use new TProofProgressInfo class; // 26 -> 27: Use new file for updating the session status; // 27 -> 28: Support for multi-datasets, fix global pack dirs, fix AskStatistics,; // package download, dataset caching; // 28 -> 29: Support for config parameters in EnablePackage, idle-timeout; // 29 -> 30: Add information about data dir in TSlaveInfo; // 30 -> 31: Development cycle 5.29; // 31 -> 32: New log path trasmission; // 32 -> 33: Development cycle 5.29/04 (fixed worker activation, new startup technology, ...); // 33 -> 34: Development cycle 5.33/02 (fix load issue, ...); // 34 -> 35: Development cycle 5.99/01 (PLite on workers, staging requests in separate dsmgr...); // 35 -> 36: SetParallel in dynamic mode (changes default in GoParallel), cancel staging requests; // 36 -> 37: Support for remote (web) PAR packages; // PROOF magic constants",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:1918,log,log,1918,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['log'],['log']
Testability,"of individual elements is a series of 2x2 transposes,; // with changing group size. HVX has two instructions:; // Vdd = V6_vdealvdd Vu, Vv, Rt; // Vdd = V6_shufvdd Vu, Vv, Rt; // that perform exactly that. The register Rt controls which transposes are; // going to happen: a bit at position n (counting from 0) indicates that a; // transpose with a group size of 2^n will take place. If multiple bits are; // set, multiple transposes will happen: vdealvdd will perform them starting; // with the largest group size, vshuffvdd will do them in the reverse order.; //; // The main observation is that each 2x2 transpose corresponds to swapping; // columns of bits in the binary representation of the values.; //; // The numbers {3,2,1,0} and the log2 of the number of contiguous 1 bits; // in a given column. The * denote the columns that will be swapped.; // The transpose with the group size 2^n corresponds to swapping columns; // 3 (the highest log) and log2(n):; //; // 3 2 1 0 0 2 1 3 0 2 3 1; // * * * * * *; // 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; // 1 0 0 0 1 8 1 0 0 0 8 1 0 0 0 8 1 0 0 0; // 2 0 0 1 0 2 0 0 1 0 1 0 0 0 1 1 0 0 0 1; // 3 0 0 1 1 A 1 0 1 0 9 1 0 0 1 9 1 0 0 1; // 4 0 1 0 0 4 0 1 0 0 4 0 1 0 0 2 0 0 1 0; // 5 0 1 0 1 C 1 1 0 0 C 1 1 0 0 A 1 0 1 0; // 6 0 1 1 0 6 0 1 1 0 5 0 1 0 1 3 0 0 1 1; // 7 0 1 1 1 E 1 1 1 0 D 1 1 0 1 B 1 0 1 1; // 8 1 0 0 0 1 0 0 0 1 2 0 0 1 0 4 0 1 0 0; // 9 1 0 0 1 9 1 0 0 1 A 1 0 1 0 C 1 1 0 0; // A 1 0 1 0 3 0 0 1 1 3 0 0 1 1 5 0 1 0 1; // B 1 0 1 1 B 1 0 1 1 B 1 0 1 1 D 1 1 0 1; // C 1 1 0 0 5 0 1 0 1 6 0 1 1 0 6 0 1 1 0; // D 1 1 0 1 D 1 1 0 1 E 1 1 1 0 E 1 1 1 0; // E 1 1 1 0 7 0 1 1 1 7 0 1 1 1 7 0 1 1 1; // F 1 1 1 1 F 1 1 1 1 F 1 1 1 1 F 1 1 1 1; // There is one special case that is not a perfect shuffle, but can be; // turned into one easily: when the shuffle operates on a vector pair,; // but the two vectors in the pair are swapped. The code that identifies; // perfect shuffles will reject it, unless the order is reversed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:2778,log,log,2778,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,1,['log'],['log']
Testability,"of sub; /// expressions in the stride and base of a SCEV corresponding to the; /// computation of a GCD (greatest common divisor) of base and stride. When; /// SCEV->delinearize fails, it returns the SCEV unchanged.; ///; /// For example: when analyzing the memory access A[i][j][k] in this loop nest; ///; /// void foo(long n, long m, long o, double A[n][m][o]) {; ///; /// for (long i = 0; i < n; i++); /// for (long j = 0; j < m; j++); /// for (long k = 0; k < o; k++); /// A[i][j][k] = 1.0;; /// }; ///; /// the delinearization input is the following AddRec SCEV:; ///; /// AddRec: {{{%A,+,(8 * %m * %o)}<%for.i>,+,(8 * %o)}<%for.j>,+,8}<%for.k>; ///; /// From this SCEV, we are able to say that the base offset of the access is %A; /// because it appears as an offset that does not divide any of the strides in; /// the loops:; ///; /// CHECK: Base offset: %A; ///; /// and then SCEV->delinearize determines the size of some of the dimensions of; /// the array as these are the multiples by which the strides are happening:; ///; /// CHECK: ArrayDecl[UnknownSize][%m][%o] with elements of sizeof(double); /// bytes.; ///; /// Note that the outermost dimension remains of UnknownSize because there are; /// no strides that would help identifying the size of the last dimension: when; /// the array has been statically allocated, one could compute the size of that; /// dimension by dividing the overall size of the array by the size of the known; /// dimensions: %m * %o * 8.; ///; /// Finally delinearize provides the access functions for the array reference; /// that does correspond to A[i][j][k] of the above C testcase:; ///; /// CHECK: ArrayRef[{0,+,1}<%for.i>][{0,+,1}<%for.j>][{0,+,1}<%for.k>]; ///; /// The testcases are checking the output of a function pass:; /// DelinearizationPass that walks through all loads and stores of a function; /// asking for the SCEV of the memory access with respect to all enclosing; /// loops, calling SCEV->delinearize on that and printing the results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp:1926,test,testcase,1926,interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,2,['test'],"['testcase', 'testcases']"
Testability,"of the file the tests //; // are exectued using the structure TTestSuite, that defines the //; // subset, the number of routines to be tested as well as the pointes //; // for these. Every tests is mean to be simple enough to be understood //; // without much comments. //; // //; // Finally, for debugging reasons, the struct compareOptions can be //; // used to define the level of output of the tests, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms..................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:1703,Test,Test,1703,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,2,['Test'],"['Test', 'Testing']"
Testability,"ollowing characteristics (only): overall sample means, \f$ x_i \f$,; for each input variable, \f$ i \f$,; class-specific sample means, \f$ x_{S(B),i}\f$,; and total covariance matrix \f$ T_{ij} \f$. The covariance matrix; can be decomposed into the sum of a _within_ (\f$ W_{ij} \f$); and a _between-class_ (\f$ B_{ij} \f$) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, \f$ F_i \f$, are then given by. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} W_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. where in TMVA is set \f$ N_S = N_B \f$, so that the factor; in front of the sum simplifies to \f$ \frac{1}{2}\f$.; The Fisher discriminant then reads. \f[; X_{Fi} = F_0 + \sum_{i=1}^{N_{SB}} F_i X_i; \f]. The offset \f$ F_0 \f$ centers the sample mean of \f$ x_{Fi} \f$; at zero. Instead of using the within-class matrix, the Mahalanobis variant; determines the Fisher coefficients as follows:. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} (W + B)_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. with resulting \f$ x_{Ma} \f$ that are very similar to the \f$ x_{Fi} \f$. TMVA provides two outputs for the ranking of the input variables:. - __Fisher test:__ the Fisher analysis aims at simultaneously maximising; the between-class separation, while minimising the within-class dispersion.; A useful measure of the discrimination power of a variable is hence given; by the diagonal quantity: \f$ \frac{B_{ii}}{W_{ii}} \f$ . - __Discrimination power:__ the value of the Fisher coefficient is a; measure of the discriminating power of a variable. The discrimination power; of set of input variables can therefore be measured by the scalar. \f[; \lambda = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} F_i (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. The corresponding numbers are printed on standard output.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:3460,test,test,3460,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['test'],['test']
Testability,om px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2278,Log,Log,2278,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"on object; // Any other data member can not be (yet) read from xml file and write to xml file.; //; // If data member of class is private or protected, it can not be accessed via; // member name. Two alternative way is supported. First, if for class member fValue; // exists function GetValue(), it will be used to get value from the class, and if; // exists SetValue(), it will be used to set appropriate data member. Names of setter; // and getter methods can be specified in comments filed like:; //; // int fValue; // *OPTION={GetMethod=""GetV"";SetMethod=""SetV""}; //; // If getter or setter methods does not available, address to data member will be; // calculated as predefined offset to object start address. In that case generated code; // should be used only on the same platform (OS + compiler), where it was generated.; //; // Generated streamers resolve inheritance tree for given class. This allows to have; // array (or vector) of object pointers on some basic class, while objects of derived; // class(es) are used.; //; // To access data from xml files, user should use TXmlFile class, which is different from; // ROOT TXMLFile, but provides very similar functionality. For example, to read; // object from xml file:; //; // TXmlFile file(""test.xml""); // open xml file; // file.ls(); // show list of keys in file; // TExample* ex1 = (TExample*) file.Get(""ex1"", TExample_streamer); // get object; // file.Close();; //; // To write object to file:; //; // TXmlFile outfile(""test2.xml"", ""recreate""); // create xml file; // TExample* ex1 = new TExample;; // outfile.Write(ex1, ""ex1"", TExample_streamer); // write object to file; // outfile.Close();; //; // Complete example for generating and using of external xml streamers can be taken from; // http://www-docs.gsi.de/~linev/xmlreader.tar.gz; //; // Any bug reports and requests for additional functionality are welcome.; //; // Sergey Linev, S.Linev@gsi.de; //; //________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx:3698,test,test,3698,io/xml/src/TXMLPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx,1,['test'],['test']
Testability,"on,; by a pure TRotation or by a boost:. TLorentzRotation l; // l is; initialized as identity; TLorentzRotation m(l); // m = l; TRotation r;; TLorentzRotation lr(r);; TLorentzRotation lb1(bx,by,bz);; TVector3 b;; TLorentzRotation lb2(b);. The Matrix for a Lorentz boosts is:. ~~~; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; ~~~. with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta); and gamma'=(gamma-1)/beta*beta.; ### Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions; XX(), XY() .. TT(),; through the operator (int,int):. ~~~; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component. if (l==m) {...} // test for equality; if (l !=m) {...} // test for inequality; if (l.IsIdentity()) {...} // test for identity; ~~~. ### Transformations of a LorentzRotation. #### Compound transformations; There are four possibilities to find the product of two TLorentzRotation; transformations:. ~~~; TLorentzRotation a,b,c;; c = b*a;// product; c = a.MatrixMultiplication(b); // a is unchanged; a *= b;// Attention: a=a*b; c = a.Transform(b)// a=b*a then c=a; ~~~. #### Lorentz boosts. ~~~; Double_t bx, by, bz;; TVector3 v(bx,by,bz);; TLorentzRotation l;; l.Boost(v);; l.Boost(bx,by,bz);; ~~~. #### Rotations. ~~~; TVector3 axis;; l.RotateX(TMath::Pi()); // rotation around x-axis; l.Rotate(.5,axis);// rotation around specified vector; ~~~. #### Inverse transformation; The matrix for the inverse transformation of a TLorentzRotation is as follows:. ~~~; | xx yx zx -tx |; | |; | xy yy zy -ty |; | |; | xz yz zz -tz |; | |; |-xt -yt -zt tt |; ~~~. To return the inverse transformation keeping the current unchanged; use the member function Inverse().; Invert() inverts the current TLorentzRotation:. ~~~; l1 = l2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzRotation.cxx:1529,test,test,1529,math/physics/src/TLorentzRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzRotation.cxx,1,['test'],['test']
Testability,"oncurrently to improve resource usage.; ROOT::RDF::RunGraphs() allows running multiple RDataFrame event loops concurrently:; ~~~{.cpp}; ROOT::EnableImplicitMT();; ROOT::RDataFrame df1(""tree1"", ""f1.root"");; ROOT::RDataFrame df2(""tree2"", ""f2.root"");; auto histo1 = df1.Histo1D(""x"");; auto histo2 = df2.Histo1D(""y"");. // just accessing result pointers, the event loops of separate RDataFrames run one after the other; histo1->Draw(); // runs first multi-thread event loop; histo2->Draw(); // runs second multi-thread event loop. // alternatively, with ROOT::RDF::RunGraphs, event loops for separate computation graphs can run concurrently; ROOT::RDF::RunGraphs({histo1, histo2});; histo1->Draw(); // results can then be used as usual; ~~~. ### Performance considerations. To obtain the maximum performance out of RDataFrame, make sure to avoid just-in-time compiled versions of transformations and actions if at all possible.; For instance, `Filter(""x > 0"")` requires just-in-time compilation of the corresponding C++ logic, while the equivalent `Filter([](float x) { return x > 0.; }, {""x""})` does not.; Similarly, `Histo1D(""x"")` requires just-in-time compilation after the type of `x` is retrieved from the dataset, while `Histo1D<float>(""x"")` does not; the latter spelling; should be preferred for performance-critical applications. Python applications cannot easily specify template parameters or pass C++ callables to RDataFrame.; See [Efficient analysis in Python](#python) for possible ways to speed up hot paths in this case. Just-in-time compilation happens once, right before starting an event loop. To reduce the runtime cost of this step, make sure to book all operations *for all RDataFrame computation graphs*; before the first event loop is triggered: just-in-time compilation will happen once for all code required to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the eve",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:51680,log,logic,51680,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['log'],['logic']
Testability,"onding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1637,test,test,1637,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['test'],['test']
Testability,"or the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGFrame; \ingroup guiwidgets. A subclasses of TGWindow, and is used as base; class for some simple widgets (buttons, labels, etc.).; It provides:; - position & dimension fields; - an 'options' attribute (see constant above); - a generic event handler; - a generic layout mechanism; - a generic border. \class TGCompositeFrame; \ingroup guiwidgets. The base class for composite widgets; (menu bars, list boxes, etc.).; It provides:; - a layout manager; - a frame container (TList *). \class TGVerticalFrame; \ingroup guiwidgets; A composite frame that layout their children in vertical way. \class TGHorizontalFrame; \ingroup guiwidgets; A composite frame that layout their children in horizontal way. \class TGMainFrame; \ingroup guiwidgets; Defines top level windows that interact with the system Window Manager. \class TGTransientFrame; \ingroup guiwidgets; Defines transient windows that typically are used for dialogs windows. \class TGGroupFrame; \ingroup guiwidgets; A composite frame with a border and a title.; It is typically used to group a number of logically related widgets visually together. \class TGHeaderFrame; \ingroup guiwidgets; Horizontal Frame used to contain header buttons and splitters; in a list view. Used to have resizable column headers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx:2022,log,logically,2022,gui/gui/src/TGFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx,1,['log'],['logically']
Testability,"ors, TGraph2D, //; // TGraph2DErrors //; // 2. Same as before, but trying linear fitters. //; // 3. Unbinned fits with trees of different dimensions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1482,Test,Test,1482,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"orted; by the modeler. In order to build a TGeoCompositeShape, one will have to define; first the primitive components. The object that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism of handling multiple geometries; at the same time will be soon implemented. TGeoManager is the owner of all geometry objects defined in a session,; therefore users must not try to control their deletion. It contains lists of; media, materials, transformations, shapes and volumes. Logical nodes (positioned; volumes) are created and destroyed by the TGeoVolume class. Physical; nodes and their global transformations are subjected to a caching mechanism; due to the sometimes very large memory requirements of logical graph expansion.; The caching mechanism is triggered by the total number of physical instances; of volumes and the cache manager is a client of TGeoManager. The manager class; also controls the painter client. This is linked with ROOT graphical libraries; loaded on demand in order to control visualization actions. ## Rules for building a valid geometry. A given geometry can be built in various ways, but there are mandatory steps; that have to be followed in order to be validated by the modeler. There are; general rules : volumes needs media and shapes in order to be created,; both container and containee volumes must be created before linking them together,; and the relative transformation matrix must be provided. All branches must; have an upper link point otherwise they will not be considered ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:5679,Log,Logical,5679,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['Log'],['Logical']
Testability,"ot > .L stress.cxx; // Root > stress(1000) run standard test with 1000 events; // Root > stress(30) run with 30 events only; //; // The standard test with 1000 events will create several files.; // The size of all files is around 100 Mbytes.; // The test with 30 events only require around 20 Mbytes; // NB: The test must be run with more than 10 events; //; // The tests runs sequentially 16 tests. Each test will produce; // one line (Test OK or Test failed) with some result parameters.; // At the end of the test a table is printed showing the global results; // with the amount of I/O, Real Time and Cpu Time.; // One single number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:1571,test,tests,1571,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"other signature is also allowed:; ~~~ {.cpp}; h->GetXaxis()->SetNdivisions(10, 5, 0, kTRUE);; ~~~; \anchor GA12; ## Maximum Number of Digits for the axis labels. The static method `TGaxis::SetMaxDigits` sets the maximum number of; digits permitted for the axis labels above which the notation with 10^N is used.; For example, to accept 6 digits number like 900000 on an axis call; `TGaxis::SetMaxDigits(6)`. The default value is 5.; `fgMaxDigits` must be greater than 0.; Warning: even when called on a particular TGaxis* instance, this static function; changes globally the number of digits for all axes (X, Y, ...) in the canvas.; If you want to change the maximum number of digits N only of the current TGaxis*,; and not all the others, use axis->SetNdivisions(N*1000000 + (axis->GetNdiv()%1000000)); instead of axis->SetMaxDigits(N). \anchor GA13; ## Optional grid. The option `""W""` allows to draw a grid on the primary tick marks. In case; of a log axis, the grid is only drawn for the primary tick marks if the number; of secondary and tertiary divisions is 0. `SetGridLength()` allows to define; the length of the grid. When plotting an histogram or a graph the grid can be set ON or OFF using:. - `gPad->SetGridy(1);` set the grid on the X axis; - `gPad->SetGridx(1);` set the grid on the Y axis; - `gPad->SetGrid(1,1);` set the grid on both axis. \anchor GA14; ## Time axis. Histograms' axis can be defined as ""time axis"". To do that it is enough to activate; the TAxis::SetTimeDisplay attribute on a given axis. If `h` is an histogram, it is; done the following way:. ~~~ {.cpp}; h->GetXaxis()->SetTimeDisplay(1); // The X axis is a time axis; ~~~. Two parameters can be adjusted in order to define time axis:. ### The time format:. Defines the format of the labels along the time axis. It can be changed using the TAxis; TAxis::SetTimeFormat. The time format is the one used by the C function **strftime()**.; It's a string containing the following formatting characters:. - for date :; - *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:12589,log,log,12589,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['log'],['log']
Testability,"output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : F",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2309,Test,Test,2309,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"ovide.; However to do this the viewer will force you to provide the raw tessellation, and the; resulting box will be axis aligned with the overall scene, which is non-ideal; for rotated shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interfac",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7028,Log,Logical,7028,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['Log'],['Logical']
Testability,"ow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### Highlight mode for graph. \since **ROOT version 6.15/01**. \image html hlGraph1.gif ""Highlight mode"". Highlight mode is implemented for `TGraph` (and for `TH1`) class. When; h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18764,log,logarithmic,18764,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,2,['log'],['logarithmic']
Testability,"pe:; * @code; * #include <string>; * #include <iostream>; * #include <cstdlib>; *; * #include ""BidirMMapPipe.h""; *; * int simplechild(BidirMMapPipe& pipe); * {; * // child does an echo loop; * while (pipe.good() && !pipe.eof()) {; * // read a string; * std::string str;; * pipe >> str;; * if (!pipe) return -1;; * if (pipe.eof()) break;; * // check if parent wants us to shut down; * if (!str.empty()) {; * std::cout << ""[CHILD] : read: "" << str << std::endl;; * str = ""... early in the morning?"";; * }; * pipe << str << BidirMMapPipe::flush;; * if (str.empty()) break;; * if (!pipe) return -1;; * std::cout << ""[CHILD] : wrote: "" << str << std::endl;; * }; * // send shutdown request acknowledged; * pipe << """" << BidirMMapPipe::flush;; *; * pipe.close();; * return 0;; * }; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechild);; * for (int i = 0; i < 5; ++i) {; * std::string str(""What shall we do with a drunken sailor..."");; * *pipe << str << BidirMMapPipe::flush;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: wrote: "" << str << std::endl;; * *pipe >> str;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: read: "" << str << std::endl;; * }; * // ask child to shut down; * pipe << """" << BidirMMapPipe::flush;; * // wait for it to see the shutdown request; * std::string s;; * pipe >> s;; * std::cout << ""[PARENT]: exit status of child: "" << pipe->close() <<; * std::endl;; * delete pipe;; * return 0;; * }; * @endcode; *; * When designing your own protocols to use over the pipe, there are a few; * things to bear in mind:; * - Do as http does: When building a request, send all the options and; * properties of that request with the request itself in a s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:6446,test,test,6446,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['test'],['test']
Testability,"physical representation (svbool, <vscale x 16 x i1>) -- a 16-element; /// scalable vector of i1s, i.e. <vscale x 16 x i1>.; ///; /// The SVE ptrue intrinsic is used to create a logical representation of an SVE; /// predicate. Suppose that we have two SVE ptrue intrinsic calls: P1 and P2. If; /// P1 creates a logical SVE predicate that is at least as wide as the logical; /// SVE predicate created by P2, then all of the bits that are true in the; /// physical representation of P2 are necessarily also true in the physical; /// representation of P1. P1 'encompasses' P2, therefore, the intrinsic call to; /// P2 is redundant and can be replaced by an SVE reinterpret of P1 via; /// convert.{to,from}.svbool.; ///; /// Currently, this pass only coalesces calls to SVE ptrue intrinsics; /// if they match the following conditions:; ///; /// - the call to the intrinsic uses either the SV_ALL or SV_POW2 patterns.; /// SV_ALL indicates that all bits of the predicate vector are to be set to; /// true. SV_POW2 indicates that all bits of the predicate vector up to the; /// largest power-of-two are to be set to true.; /// - the result of the call to the intrinsic is not promoted to a wider; /// predicate. In this case, keeping the extra ptrue leads to better codegen; /// -- coalescing here would create an irreducible chain of SVE reinterprets; /// via convert.{to,from}.svbool.; ///; /// EXAMPLE:; ///; /// %1 = <vscale x 8 x i1> ptrue(i32 SV_ALL); /// ; Logical: <1, 1, 1, 1, 1, 1, 1, 1>; /// ; Physical: <1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0>; /// ...; ///; /// %2 = <vscale x 4 x i1> ptrue(i32 SV_ALL); /// ; Logical: <1, 1, 1, 1>; /// ; Physical: <1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>; /// ...; ///; /// Here, %2 can be replaced by an SVE reinterpret of %1, giving, for instance:; ///; /// %1 = <vscale x 8 x i1> ptrue(i32 i31); /// %2 = <vscale x 16 x i1> convert.to.svbool(<vscale x 8 x i1> %1); /// %3 = <vscale x 4 x i1> convert.from.svbool(<vscale x 16 x i1> %2); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/SVEIntrinsicOpts.cpp:1771,Log,Logical,1771,interpreter/llvm-project/llvm/lib/Target/AArch64/SVEIntrinsicOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/SVEIntrinsicOpts.cpp,2,['Log'],['Logical']
Testability,"plicitly depends on r2 (the TOC pointer). And, so,; // we might produce code like this:; //; // .Ltmp526:; // addis 3, 2, .LC12@toc@ha; // .Ltmp1628:; // std 2, 40(1); // ld 5, 0(27); // ld 2, 8(27); // ld 11, 16(27); // ld 3, .LC12@toc@l(3); // rldicl 4, 4, 0, 32; // mtctr 5; // bctrl; // ld 2, 40(1); //; // And there is nothing wrong with this code, as such, but there is a linker bug; // in binutils (https://sourceware.org/bugzilla/show_bug.cgi?id=18414) that will; // misoptimize this code sequence to this:; // nop; // std r2,40(r1); // ld r5,0(r27); // ld r2,8(r27); // ld r11,16(r27); // ld r3,-32472(r2); // clrldi r4,r4,32; // mtctr r5; // bctrl; // ld r2,40(r1); // because the linker does not know (and does not check) that the value in r2; // changed in between the instruction using the .LC12@toc@ha (TOC-relative); // relocation and the instruction using the .LC12@toc@l(3) relocation.; // Because it finds these instructions using the relocations (and not by; // scanning the instructions), it has been asserted that there is no good way; // to detect the change of r2 in between. As a result, this bug may never be; // fixed (i.e. it may become part of the definition of the ABI). GCC was; // updated to add extra dependencies on r2 to instructions using the @toc@l; // relocations to avoid this problem, and we'll do the same here.; //; // This is done as a separate pass because:; // 1. These extra r2 dependencies are not really properties of the; // instructions, but rather due to a linker bug, and maybe one day we'll be; // able to get rid of them when targeting linkers without this bug (and,; // thus, keeping the logic centralized here will make that; // straightforward).; // 2. There are ISel-level peephole optimizations that propagate the @toc@l; // relocations to some user instructions, and so the exta dependencies do; // not apply only to a fixed set of instructions (without undesirable; // definition replication).; //; //===------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp:1588,assert,asserted,1588,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,1,['assert'],['asserted']
Testability,"po(3) is a substitute for `exp([3]+[4]*x)`. pol3(5) is a substitute for `par[5]+par[6]*x+par[7]*x**2+par[8]*x**3`; (here Pol3 stands for Polynomial of degree 3). TMath functions can be part of the expression, eg:. - `TMath::Landau(x)*sin(x)`; - `TMath::Erf(x)`. Comparisons operators are also supported (&&, ||, ==, <=, >=, !); Examples:. sin(x*(x<0.5 || x>1)). If the result of a comparison is TRUE, the result is 1, otherwise 0. Already predefined names can be given. For example, if the formula. TFormula old(sin(x*(x<0.5 || x>1))) one can assign a name to the formula. By default; the name of the object = title = formula itself.; old.SetName(""old"").; then, old can be reused in a new expression.; TFormula new(""x*old"") is equivalent to:; TFormula new(""x*sin(x*(x<0.5 || x>1))""). Up to 4 dimensions are supported (indicated by x, y, z, t); An expression may have 0 parameters or a list of parameters; indicated by the sequence [par_number]. A graph showing the logic to compile and analyze a formula; is shown in TFormula::Compile and TFormula::Analyze.; Once a formula has been compiled, it can be evaluated for a given; set of parameters. see graph in TFormula::EvalPar. This class is the base class for the function classes TF1,TF2 and TF3.; It is also used by the ntuple selection mechanism TNtupleFormula. In version 7 of TFormula, the usage of fOper has been changed; to improve the performance of TFormula::EvalPar.; Conceptually, fOper was changed from a simple array of Int_t; to an array of composite values.; For example a 'ylandau(5)' operation used to be encoded as 4105;; it is now encoded as (klandau >> kTFOperShift) + 5; Any class inheriting from TFormula and using directly fOper (which; is now a private data member), needs to be updated to take this; in consideration. The member functions recommended to set and; access fOper are: SetAction, GetAction, GetActionParam; For more performant access to the information, see the implementation; TFormula::EvalPar. ### CHANGING DEFA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:1552,log,logic,1552,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['log'],['logic']
Testability,"protocol changed; // 3 -> 4: introduction of multi-level-master support; // 4 -> 5: added friends support; // 5 -> 6: drop TFTP, support for asynchronous queries; // 6 -> 7: support for multisessions, archieve, retrieve, ...; // 7 -> 8: return number of entries in GetNextPacket; // 8 -> 9: support for stateless connection via xproofd; // 9 -> 10: new features requested, tested at CAF; // 10 -> 11: new merging strategy; // 11 -> 12: new progress message; // 12 -> 13: exchange version/architecture/compiler info; // 13 -> 14: new proofserv environment setting; // 14 -> 15: add support for entry lists; new version of TFileInfo; // 15 -> 16: add support for generic non-data based processing; // 16 -> 17: new dataset handling system; support for TFileCollection processing; // 17 -> 18: support for reconnection on daemon restarts; // 18 -> 19: TProofProgressStatus used in kPROOF_PROGRESS, kPROOF_STOPPROCESS; // and kPROOF_GETNEXTPACKET messages in Master - worker communication; // 19 -> 20: Fix the asynchronous mode (required changes in some messages); // 20 -> 21: Add support for session queuing; // 21 -> 22: Add support for switching from sync to async while running ('Ctrl-Z' functionality); // 22 -> 23: New dataset features (default tree name; classification per fileserver); // 23 -> 24: Merging optimization; // 24 -> 25: Handling of 'data' dir; group information; // 25 -> 26: Use new TProofProgressInfo class; // 26 -> 27: Use new file for updating the session status; // 27 -> 28: Support for multi-datasets, fix global pack dirs, fix AskStatistics,; // package download, dataset caching; // 28 -> 29: Support for config parameters in EnablePackage, idle-timeout; // 29 -> 30: Add information about data dir in TSlaveInfo; // 30 -> 31: Development cycle 5.29; // 31 -> 32: New log path trasmission; // 32 -> 33: Development cycle 5.29/04 (fixed worker activation, new startup technology, ...); // 33 -> 34: Development cycle 5.33/02 (fix load issue, ...); // 34 -> 35: Development",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:493,test,tested,493,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['test'],['tested']
Testability,"r points; # to be tested based on the value of the parameter of interest; # and the conditional MLE (eg. profiled) values of the nuisance parameters.; #; # At each parameter point, pseudo-experiments are generated using this; # fixed reference model and then the test statistic is evaluated.; # The auxiliary measurements (global observables) associated with the; # constraint terms in nuisance parameters are also fluctuated in the; # process of generating the pseudo-experiments in a frequentist manner; # forming an 'unconditional ensemble'. One could form a 'conditional'; # ensemble in which these auxiliary measurements are fixed. Note that the; # nuisance parameters are not randomized, which is a Bayesian procedure.; # Note, the nuisance parameters are floating in the fits. For each point,; # the threshold that defines the 95% acceptance region is found. This; # forms a ""Confidence Belt"".; #; # After constructing the confidence belt, one can find the confidence; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confidence belt. First; # this is done on the observed data to get an observed 1-sided upper limt.; #; # Finally, there expected limit and bands (from background-only) are; # formed by generating background-only data and finding the upper limit.; # The background-only is defined as such that the nuisance parameters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the mo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:1970,test,test,1970,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,1,['test'],['test']
Testability,"r some PostScript printers (very often; for the colour printers) as they need more space to grip the paper; for mechanical reasons. Note that some PostScript colour printers; can also use the so called special A4 format permitting the full; usage of the A4 area; in this case larger margins are not necessary; and Type=1 or 2 can be used.; - 3 : Encapsulated PostScript. This Type permits the generation of files; which can be included in other documents, for example in LaTeX files. ## Making several pictures in the same Postscript file: case 1. The following macro is an example illustrating how to open a Postscript; file and draw several pictures. The generation of a new Postscript page; is automatic when `TCanvas::Clear` is called by `object->Draw()`. ~~~ {.cpp}; {; TFile f(""hsimple.root"");; TCanvas c1(""c1"",""canvas"",800,600);. // select postscript output type; // type = 111 portrait ps; // type = 112 landscape ps; // type = 113 eps; Int_t type = 111;. // create a postscript file and set the paper size; TPostScript ps(""test.ps"",type);; ps.Range(16,24); //set x,y of printed page. // draw 3 histograms from file hsimple.root on separate pages; hpx->Draw();; c1.Update(); //force drawing in a macro; hprof->Draw();; c1.Update();; hpx->Draw(""lego1"");; c1.Update();; ps.Close();; }; ~~~. ## Making several pictures in the same Postscript file: case 2. This example shows 2 pages. The canvas is divided.; `TPostScript::NewPage` must be called before starting a new; picture.`object->Draw` does not clear the canvas in this case; because we clear only the pads and not the main canvas.; Note that `c1->Update` must be called at the end of the first picture. ~~~ {.cpp}; {; TFile *f1 = new TFile(""hsimple.root"");; TCanvas *c1 = new TCanvas(""c1"");; TPostScript *ps = new TPostScript(""file.ps"",112);; c1->Divide(2,1);; // picture 1; ps->NewPage();; c1->cd(1);; hpx->Draw();; c1->cd(2);; hprof->Draw();; c1->Update();. // picture 2; ps->NewPage();; c1->cd(1);; hpxpy->Draw();; c1->cd(2);; ntuple->",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx:4260,test,test,4260,graf2d/postscript/src/TPostScript.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx,1,['test'],['test']
Testability,"r, such; /// that; ///\f[; /// \sum_{i=1}^{r} p_{i} = 1; ///\f]; /// for the unweighted histogram. The weight wi is a random variable with a; /// distribution approximated by the normal probability distribution; /// \f$ N(Wp_{i},\sigma_{i}^{2}) \f$ where \f$ \sigma_{i}^{2} \f$ is the variance of the weight wi.; /// If we replace the variance \f$ \sigma_{i}^{2} \f$; /// with estimate \f$ s_{i}^{2} \f$ (sum of squares of weights of; /// events in the ith bin) and the hypothesis of identity is valid, then the; /// maximum likelihood estimator of pi,i=1,...,r, is; ///\f[; /// \hat{p}_{i} = \frac{Ww_{i}-Ns_{i}^{2}+\sqrt{(Ww_{i}-Ns_{i}^{2})^{2}+4W^{2}s_{i}^{2}n_{i}}}{2W^{2}}; ///\f]; /// We may then use the test statistic; ///\f[; /// X^{2} = \sum_{i=1}^{r} \frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r} \frac{(w_{i}-W\hat{p}_{i})^{2}}{s_{i}^{2}}; ///\f]; /// and it has approximately a \f$ \sigma^{2}_{(r-1)} \f$ distribution [2]. This test, as well; /// as the original one [3], has a restriction on the expected frequencies. The; /// expected frequencies recommended for the weighted histogram is more than 25.; /// The value of the minimal expected frequency can be decreased down to 10 for; /// the case when the weights of the events are close to constant. In the case; /// of a weighted histogram if the number of events is unknown, then we can; /// apply this recommendation for the equivalent number of events as; ///\f[; /// n_{i}^{equiv} = \frac{ w_{i}^{2} }{ s_{i}^{2} }; ///\f]; /// The minimal expected frequency for an unweighted histogram must be 1. Notice; /// that any usual (unweighted) histogram can be considered as a weighted; /// histogram with events that have constant weights equal to 1.; /// The variance \f$ z_{i}^{2} \f$ of the difference between the weight wi; /// and the estimated expectation value of the weight is approximately equal to:; ///\f[; /// z_{i}^{2} = Var(w_{i}-W\hat{p}_{i}) = N\hat{p}_{i}(1-N\hat{p}_{i})\left(\frac{Ws_{i}^{2}}{\sqr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7495,test,test,7495,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Testability,"r-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function returns the size of compressed data (without header), necessarily <= `dstCapacity`.; If it returns '0', compressed data could not fit into 'dst'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()).; */; /* *** DECOMPRESSION *** */; /*! FSE_readNCount():; Read compactly saved 'normalizedCounter' from 'rBuffer'.; @return : size read from 'rBuffer',; or an errorCode, which can be tested using FSE_isError().; maxSymbolValuePtr[0] and tableLogPtr[0] will also be updated with their respective values */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:2388,test,tested,2388,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,3,['test'],['tested']
Testability,"r: Fons Rademakers 14/08/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \file TNetFile.cxx; \class TNetFile; \ingroup IO. A TNetFile is like a normal TFile except that it reads and writes; its data via a rootd server (for more on the rootd daemon see the; source files in `root/rootd/src/`). TNetFile file names are in; standard URL format with protocol ""root"" or ""roots"". The following; are valid TNetFile URL's:; - `root://hpbrun.cern.ch/root/hsimple.root`; - `root://pcna49a:5151/~na49/data/run821.root`; - `root://pcna49d.cern.ch:5050//v1/data/run810.root`. The only difference with the well known httpd URL's is that the root; of the remote file tree is the user's home directory. Therefore an; absolute pathname requires a // after the host or port specifier; (see last example). Further the expansion of the standard shell; characters, like ~, $, .., are handled as expected.; TNetFile (actually TUrl) uses 1094 as default port for rootd. Connecting to a rootd requires the remote user id and password.; TNetFile allows three ways for you to provide your login:; Setting it globally via the static functions:; 1. TAuthenticate::SetGlobalUser() and TAuthenticate::SetGlobalPasswd(); 2. Getting it from the `~/.netrc` file (same file as used by ftp); 3. Command line prompt; The different methods will be tried in the order given above.; On machines with AFS rootd will authenticate using AFS (if it was; compiled with AFS support). If the protocol is specified as ""rootk"" kerberos5 will be used for; authentication. The rootd daemon lives in the directory `$ROOTSYS/bin`. It can be; started either via inetd or by hand from the command line (no need; to be super user).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:1412,log,login,1412,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['log'],['login']
Testability,"r; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more abstract shape description; (""a sphere of inner radius x, outer radius y""). This enables a viewer; which knows how to draw (tessellate) the shape itself to do so, which can bring; considerable performance and quality benefits, while providing a generic fallback; suitable for all viewers. The rules for client negotiation with the viewer are:. - If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; - Complete the mandatory Core section.; - Complete the ShapeSpecific section if applicable.; - Complete the BoundingBox if you can.; - Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:3454,test,test,3454,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['test'],['test']
Testability,rac{pyrange}{yrange}; /// \f]; /// where:; /// \f[; /// pylow = fAbsYlowNDC \times fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f];,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2102,Log,Log,2102,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,rac{ymin}{yrange}; /// \f]; /// \f[; /// fYtoPixel = \frac{pyrange}{yrange}; /// \f]; /// where:; /// \f[; /// pylow = fAbsYlowNDC \times fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarr,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2047,Log,Log,2047,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,range}; /// \f]; /// \f[; /// fYtoPixel = \frac{pyrange}{yrange}; /// \f]; /// where:; /// \f[; /// pylow = fAbsYlowNDC \times fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPix,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2058,Log,Log,2058,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"ransformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may still be different from the ones used in RooFit. This; /// happens when Minuit tries out values that lay outside the RooFit parameter's range(s). RooFit's setVal (called; /// inside SetPdfParamVal) then clips the RooAbsArg's value to one of the range limits, instead of setting it to the; /// value Minuit intended. When this happens, i.e. syncParameterValuesFromMinuitCalls is called with; /// minuit_internal = false and the values do not match the previous values stored in _minuitInternalX *but* the; /// values after SetPdfParamVal did not get set to the intended value, the _minuitInternalRooFitXMismatch flag is; /// set. This information can be used by calculators, if desired, for instance when a calculator does not want to make; /// use of the range information in the RooAbsArg parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:2800,log,log,2800,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,1,['log'],['log']
Testability,raph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'..................................OK; // ****************************************************************************; // stressHistoFit: Real Time = 37.49 seconds Cpu Time = 37.24 seconds; // ROO,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2407,Test,Test,2407,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,raphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'..................................OK; // ****************************************************************************; // stressHistoFit: Real Time = 37.49 seconds Cpu Time = 37.24 seconds; // ROOTMARKS = 2663.8 ROOT version: 5.27/01 trunk@32822; // **************,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2477,Test,Test,2477,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"rawn with increasing values from left to; right and the Y-axis from bottom to top. The two options `RX` and `RY` allow to; change this order. The option `RX` allows to draw the X-axis with increasing values; from right to left and the `RY` option allows to draw the Y-axis with increasing; values from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto c = new TCanvas();; c->Divide(2,1);; auto g = new TGraphErrors();; g->SetTitle(""Simple Graph"");. g->SetPoint(0,-4,-3);; g->SetPoint(1,1,1);; g->SetPoint(2,2,1);; g->SetPoint(3,3,4);; g->SetPoint(4,5,5);. g->SetPointError(0,1.,2.);; g->SetPointError(1,2,1);; g->SetPointError(2,2,3);; g->SetPointError(3,3,2);; g->SetPointError(4,4,5);. g->GetXaxis()->SetNdivisions(520);. g->SetMarkerStyle(21);; c->cd(1); gPad->SetGrid(1,1);; g->Draw(""APL"");. c->cd(2); gPad->SetGrid(1,1);; g->Draw(""A RX RY PL"");; }; End_Macro. \anchor GrP7; ### Graphs in logarithmic scale. Like histograms, graphs can be drawn in logarithmic scale along X and Y. When; a pad is set to logarithmic scale with TPad::SetLogx() and/or with TPad::SetLogy(); the points building the graph are converted into logarithmic scale. But **only** the; points not the lines connecting them which stay linear. This can be clearly seen; on the following example:. Begin_Macro(source); {; // A graph with 3 points; Double_t xmin = 750.;; Double_t xmax = 1000;; auto g = new TGraph(3);; g->SetPoint(0,xmin,0.1);; g->SetPoint(1,845,0.06504);; g->SetPoint(2,xmax,0.008);. // The same graph with n points; Int_t n = 10000;; Double_t dx = (xmax-xmin)/n;; Double_t x = xmin;; auto g2 = new TGraph();; for (Int_t i=0; i<n; i++) {; g2->SetPoint(i, x, g->Eval(x));; x = x + dx;; }. auto cv = new TCanvas(""cv"",""cv"",800,600);; cv->SetLogy();; cv->SetGridx();; cv->SetGridy();; g->Draw(""AL*"");. g2->SetMarkerColor(kRed);; g2->SetMarkerStyle(1);; g2->Draw(""P"");; }. End_Macro. \anchor GrP8; #### Highlight mode for graph. \since **ROOT version 6.15/01**. \",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:18709,log,logarithmic,18709,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['log'],['logarithmic']
Testability,"rays: {""foo"", 42.0, false}; /// - serializable things: types with toJSON(const T&)->Value, found by ADL; ///; /// They can also be constructed from object/array helpers:; /// - json::Object is a type like map<ObjectKey, Value>; /// - json::Array is a type like vector<Value>; /// These can be list-initialized, or used to build up collections in a loop.; /// json::ary(Collection) converts all items in a collection to Values.; ///; /// === Inspecting values ===; ///; /// Each Value is one of the JSON kinds:; /// null (nullptr_t); /// boolean (bool); /// number (double, int64 or uint64); /// string (StringRef); /// array (json::Array); /// object (json::Object); ///; /// The kind can be queried directly, or implicitly via the typed accessors:; /// if (std::optional<StringRef> S = E.getAsString(); /// assert(E.kind() == Value::String);; ///; /// Array and Object also have typed indexing accessors for easy traversal:; /// Expected<Value> E = parse(R""( {""options"": {""font"": ""sans-serif""}} )"");; /// if (Object* O = E->getAsObject()); /// if (Object* Opts = O->getObject(""options"")); /// if (std::optional<StringRef> Font = Opts->getString(""font"")); /// assert(Opts->at(""font"").kind() == Value::String);; ///; /// === Converting JSON values to C++ types ===; ///; /// The convention is to have a deserializer function findable via ADL:; /// fromJSON(const json::Value&, T&, Path) -> bool; ///; /// The return value indicates overall success, and Path is used for precise; /// error reporting. (The Path::Root passed in at the top level fromJSON call; /// captures any nested error and can render it in context).; /// If conversion fails, fromJSON calls Path::report() and immediately returns.; /// This ensures that the first fatal error survives.; ///; /// Deserializers are provided for:; /// - bool; /// - int and int64_t; /// - double; /// - std::string; /// - vector<T>, where T is deserializable; /// - map<string, T>, where T is deserializable; /// - std::optional<T>, where T is deserial",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:1534,assert,assert,1534,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['assert'],['assert']
Testability,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1474,log,logging,1474,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['log'],['logging']
Testability,"rd. ### General information: plot types and supported options. The following types of plots are provided:. #### Lego - (`TGLLegoPainter`); The supported options are:. - `""GLLEGO"" :` Draw a lego plot.; - `""GLLEGO2"" :` Bins with color levels.; - `""GLLEGO3"" :` Cylindrical bars. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y (if you see; what it means). #### Surfaces (`TF2` and `TH2` with `""GLSURF""` options) - (`TGLSurfacePainter`); The supported options are:. - `""GLSURF"" :` Draw a surface.; - `""GLSURF1"" :` Surface with color levels; - `""GLSURF2"" :` The same as `""GLSURF1""` but without polygon outlines.; - `""GLSURF3"" :` Color level projection on top of plot (works only in cartesian coordinate system).; - `""GLSURF4"" :` Same as `""GLSURF""` but without polygon outlines. The surface painting in cartesian coordinates supports logarithmic scales along X, Y, Z axis.; In polar coordinates only the Z axis can be logarithmic, in cylindrical coordinates only the Y axis. #### Additional options to `SURF` and `LEGO` - Coordinate systems:; The supported options are:. - `"" "" :` Default, cartesian coordinates system.; - `""POL"" :` Polar coordinates system.; - `""CYL"" :` Cylindrical coordinates system.; - `""SPH"" :` Spherical coordinates system. #### `TH3` as boxes (spheres) - (`TGLBoxPainter`); The supported options are:. - `""GLBOX"" :` TH3 as a set of boxes, size of box is proportional to bin content.; - `""GLBOX1"":` the same as ""glbox"", but spheres are drawn instead of boxes. #### `TH3` as iso-surface(s) - (`TGLIsoPainter`); The supported option is:. - `""GLISO"" :` TH3 is drawn using iso-surfaces. #### `TH3` as color boxes - (`TGLVoxelPainter`); The supported option is:. - `""GLCOL"" :` TH3 is drawn using semi-transparent colored boxes.; See `$ROOTSYS/tutorials/gl/glvox1.C`. #### `TF3` (implicit function) - (`TGLTF3Painter`); The supported option is:. - `""GLTF3"" :` Draw a `TF3`. #### Parametric surfaces - (`TGL",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:1295,log,logarithmic,1295,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,1,['log'],['logarithmic']
Testability,"ribution.; <br/>; The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to a one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. <h3>How to choose the regularisation settings</h3>. In TUnfoldDensity, two methods are implemented to determine tau**2; <ol>; <li>ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class</li>; <li>ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized.; This function is implemented in the TUnfoldDensity class</li>; </ol>; Each of the algorithms has its own advantages and disadvantages.; The algorithm (1) does not work if the input data are too similar to the; MC prediction. Typical no-go cases of the L-curve scan are:; <ul>; <li>the number of measurements is too small (e.g. ny=nx); <li>the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y for a ""closure test""]; </ul>; The algorithm (2) only works if the variable does have a real minimum; as a function of tau. If global correlations are minimized, the situation; is as follows:; The matrix of migration typically introduces negative correlations.; The area constraint introduces some positive correlation.; Regularisation on the ""size"" introduces no correlation.; Regularisation on 1st or 2nd derivatives adds positive correlations.; <br/>; For these reasons, ""size"" regularisation does not work well with; the tau-scan: the higher tau, the smaller rho, but there is no minimum.; As a result, large values of tau (too strong regularisation) are found.; In contrast, the tau-scan is expected to work better with 1st or 2nd; derivative regularisation, because at some point the negative; correlations from migrations are approximately cancelled by the; positive correlations from the regularisation conditions.; <br/>; whichever algorithm is used, the output has to be checked:; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:5098,test,test,5098,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['test'],['test']
Testability,"rix of Double_t:. ~~~; | xx xy xz |; | yx yy yz |; | zx zy zz |; ~~~. It describes a so called active rotation, i.e. rotation of objects inside; a static system of coordinates. In case you want to rotate the frame and; want to know the coordinates of objects in the rotated system, you should; apply the inverse rotation to the objects. If you want to transform coordinates; from the rotated frame to the original frame you have to apply the direct; transformation. A rotation around a specified axis means counterclockwise rotation around; the positive direction of the axis. ### Declaration, Access, Comparisons. ~~~; TRotation r; // r initialized as identity; TRotation m(r); // m = r; ~~~. There is no direct way to set the matrix elements - to ensure that; a TRotation object always describes a real rotation. But you can get the; values by the member functions XX()..ZZ() or the (,); operator:. ~~~; Double_t xx = r.XX(); // the same as xx=r(0,0); xx = r(0,0);. if (r==m) {...} // test for equality; if (r!=m) {..} // test for inequality; if (r.IsIdentity()) {...} // test for identity; ~~~. ### Rotation around axes; The following matrices describe counterclockwise rotations around coordinate; axes. ~~~; | 1 0 0 |; Rx(a) = | 0 cos(a) -sin(a) |; | 0 sin(a) cos(a) |. | cos(a) 0 sin(a) |; Ry(a) = | 0 1 0 |; | -sin(a) 0 cos(a) |. | cos(a) -sin(a) 0 |; Rz(a) = | sin(a) cos(a) 0 |; | 0 0 1 |; ~~~. and are implemented as member functions RotateX(), RotateY() and RotateZ():. ~~~; r.RotateX(TMath::Pi()); // rotation around the x-axis; ~~~. ### Rotation around arbitrary axis; The member function Rotate() allows to rotate around an arbitrary vector; (not necessary a unit one) and returns the result. ~~~; r.Rotate(TMath::Pi()/3,TVector3(3,4,5));; ~~~. It is possible to find a unit vector and an angle, which describe the; same rotation as the current one:. ~~~; Double_t angle;; TVector3 axis;; r.GetAngleAxis(angle,axis);; ~~~. ### Rotation of local axes; Member function RotateAxes() adds a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:1249,test,test,1249,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['test'],['test']
Testability,"rk is described by a simple; string: The input/output layers are defined by giving the expression for; each neuron, separated by comas. Hidden layers are just described; by the number of neurons. The layers are separated by colons.; In addition, input/output layer formulas can be preceded by '@' (e.g ""@out""); if one wants to also normalize the data from the TTree.; Input and outputs are taken from the TTree given as second argument.; Expressions are evaluated as for TTree::Draw(), arrays are expended in; distinct neurons, one for each index.; This can only be done for fixed-size arrays.; If the formula ends with ""!"", softmax functions are used for the output layer.; One defines the training and test datasets by TEventLists. Example:; ~~~ {.cpp}; TMultiLayerPerceptron(""x,y:10:5:f"",inputTree);; ~~~. Both the TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exactly as; for a TCut. The learning method is defined using the TMultiLayerPerceptron::SetLearningMethod() .; Learning methods are :. - TMultiLayerPerceptron::kStochastic,; - TMultiLayerPerceptron::kBatch,; - TMultiLayerPerceptron::kSteepestDescent,; - TMultiLayerPerceptron::kRibierePolak,; - TMultiLayerPerceptron::kFletcherReeves,; - TMultiLayerPerceptron::kBFGS. A weight can be assigned to events, either in the constructor, either; with TMultiLayerPerceptron::SetEventWeight(). In addition, the TTree weight; is taken into account. Finally, one starts the training with; TMultiLayerPerceptron::Train(Int_t nepoch, Option_t* options). The; first argument is the number of epochs while option is a string that; can contain: ""text"" (simple text output) , ""graph""; (evoluting graphical training curves), ""update=X"" (step for; the text/graph output update) or ""+"" (will skip the; randomisation and start from the previous values). All combi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:7501,test,test,7501,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['test'],['test']
Testability,"rmation helps the visualization tool reconstruct all; /// possible test vectors for the purposes of MC/DC analysis. If a ""next"" node; /// ID is '0', it means it's the end of the test vector. The following rules; /// are used:; ///; /// For logical-AND (""LHS && RHS""):; /// - If LHS is TRUE, execution goes to the RHS node.; /// - If LHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// For logical-OR (""LHS || RHS""):; /// - If LHS is TRUE, execution goes to the LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If LHS is FALSE, execution goes to the RHS node.; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// Finally, the condition IDs are also used when instrumenting the code to; /// indicate a unique offset into a temporary bitmap that represents the true; /// or false evaluation of that particular condition.; ///; /// NOTE regarding the use of CodeGenFunction::stripCond(). Even though, for; /// simplicity, parentheses and unary logical-NOT operators are considered; /// part of their underlying condition for both MC/DC and branch coverage, the; /// condition IDs themselves are assigned and tracked using the underlying; /// condition itself. This is done solely for consistency since parentheses; /// and logical-NOTs are ignored when checking whether the condition is; /// actually an instrumentable condition. This can also make debugging a bit; /// easi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:2872,log,logical-AND,2872,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,1,['log'],['logical-AND']
Testability,"rmation.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // DependenceAnalysis is an LLVM pass that analyses dependences between memory; // accesses. Currently, it is an (incomplete) implementation of the approach; // described in; //; // Practical Dependence Testing; // Goff, Kennedy, Tseng; // PLDI 1991; //; // There's a single entry point that analyzes the dependence between a pair; // of memory references in a function, returning either NULL, for no dependence,; // or a more-or-less detailed description of the dependence between them.; //; // Currently, the implementation cannot propagate constraints between; // coupled RDIV subscripts and lacks a multi-subscript MIV test.; // Both of these are conservative weaknesses;; // that is, not a source of correctness problems.; //; // Since Clang linearizes some array subscripts, the dependence; // analysis is using SCEV->delinearize to recover the representation of multiple; // subscripts, and thus avoid the more expensive and less precise MIV tests. The; // delinearization is controlled by the flag -da-delinearize.; //; // We should pay some careful attention to the possibility of integer overflow; // in the implementation of the various tests. This could happen with Add,; // Subtract, or Multiply, with both APInt's and SCEV's.; //; // Some non-linear subscript pairs can be handled by the GCD test; // (and perhaps other tests).; // Should explore how often these things occur.; //; // Finally, it seems like certain test cases expose weaknesses in the SCEV; // simplification, especially in the handling of sign and zero extensions.; // It could be useful to spend time exploring these.; //; // Please note that this is work in progress and the interface is subject to; // change.; //; //===----------------------------------------------------------------------===//; // //; // In memory of Ken Kennedy, 1945 - 2007 //; // //; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:1329,test,tests,1329,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['test'],['tests']
Testability,"rray( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 objects), we switch to new one TProcessID; maximum 65535 including the TProcessIDs read from file).; However TRefArray can not switch to new TProcessID if they already; contain objects. When the TProcessID has been switched due to overflow and an new; object is added to an existing, empty TRefArray, you will see:. ~~~ {.cpp}; Warning in <TRefArray::AddAtAndExpand>: The ProcessID for the 0x5f83819e8 has been switched to ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef:4; ~~~; If the TRefArray was not empty,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:2013,test,test,2013,core/cont/src/TRefArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx,1,['test'],['test']
Testability,"rs to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `ModularL(true)` in the internal call to the NLL creation method.; * <tr><td> `ParallelGradientOptions(bool enable=true, int orderStrategy=0, int chainFactor=1)` <td> **Experimental** - Control gradient parallelization settings. The first argument; * only disables or enables gradient parallelization, this is on by default.; * The second argument determines the internal partial derivative calculation; * ordering strategy. The third argument determines the number of partial; * derivatives that are executed per task package on each worker.; * <tr><td> `ParallelDescentOptions(bool enable=false, int splitStrategy=0, int numSplits=4)` <td> **Experimental** - Control settings related to the parallelization of likelihoods; * outside of the gradient calculation but in the minimization, most prominently; * in the linesearch step. The first argument this disables or enables likelihood; * parallelization. The second argument determines whether to split the task batches; * per event or per likelihood component. And the third argument how many events or; * respectively components to include in each batch.; * <tr><td> `TimingAnalysis(bool flag)` <td> **Experimental** - Log timings. This feature logs timings with NewStyle likelihoods on multiple processes simultaneously; * and outputs the timings at the end of a run to json log files, which can be analyzed with the; * `RooFit::MultiProcess::HeatmapAnalyzer`. Only works with simultaneous likelihoods.; * </table>; */; /** @brief Protected implementation of the likelihood fitting routine.; *; * This virtual function can be overridden in case you want to change the likelihood fitting logic for custom PDFs.; *; * \note Never call this function directly. Instead, call RooAbsPdf::fitTo().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:8430,Log,Log,8430,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,4,"['Log', 'log']","['Log', 'log', 'logic', 'logs']"
Testability,"rs: David Gonzalez Maline November 2008; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//; // //; // //; // Here there is a set of tests for the histogram classes (including //; // histograms and profiles). The methods tested work on: //; // //; // 1. Projection testing (with and without weights) //; // 2. Rebinning //; // 3. Addition, multiplication an division operations. //; // 4. Building and copying instances. //; // 5. I/O functionality (including reference with older versions). //; // 6. Labeling. //; // 7. Interpolation //; // //; // To see the tests individually, at the bottom of the file the tests //; // are exectued using the structure TTestSuite, that defines the //; // subset, the number of routines to be tested as well as the pointes //; // for these. Every tests is mean to be simple enough to be understood //; // without much comments. //; // //; // Finally, for debugging reasons, the struct compareOptions can be //; // used to define the level of output of the tests, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:1123,test,tests,1123,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['test'],['tests']
Testability,rse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'..................................OK; // ****************************************************************************; // stressHistoFit: Real Time = 37.49 seconds Cpu Time = 37.24 seconds; // ROOTMARKS = 2663.8 ROOT version: 5.27/01 trunk@32822; // ****************************************************************************; //; // //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2547,Test,Test,2547,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"rst analysis, etc.; // These files contain a visualization that allows inspecting the CFG and the; // state of the analysis at each point.; // Static assets (HTMLLogger.js, HTMLLogger.css) and SVG graphs etc are embedded; // so each output file is self-contained.; //; // VIEWS; //; // The timeline and function view are always shown. These allow selecting basic; // blocks, statements within them, and processing iterations (BBs are visited; // multiple times when e.g. loops are involved).; // These are written directly into the HTML body.; //; // There are also listings of particular basic blocks, and dumps of the state; // at particular analysis points (i.e. BB2 iteration 3 statement 2).; // These are only shown when the relevant BB/analysis point is *selected*.; //; // DATA AND TEMPLATES; //; // The HTML proper is mostly static.; // The analysis data is in a JSON object HTMLLoggerData which is embedded as; // a <script> in the <head>.; // This gets rendered into DOM by a simple template processor which substitutes; // the data into <template> tags embedded in the HTML. (see inflate() in JS).; //; // SELECTION; //; // This is the only real interactive mechanism.; //; // At any given time, there are several named selections, e.g.:; // bb: B2 (basic block 0 is selected); // elt: B2.4 (statement 4 is selected); // iter: B2:1 (iteration 1 of the basic block is selected); // hover: B3 (hovering over basic block 3); //; // The selection is updated by mouse events: hover by moving the mouse and; // others by clicking. Elements that are click targets generally have attributes; // (id or data-foo) that define what they should select.; // See watchSelection() in JS for the exact logic.; //; // When the ""bb"" selection is set to ""B2"":; // - sections <section data-selection=""bb""> get shown; // - templates under such sections get re-rendered; // - elements with class/id ""B2"" get class ""bb-select""; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.cpp:2176,log,logic,2176,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.cpp,1,['log'],['logic']
Testability,"run) * //; // * * //; // * The arguments have the same meaning as above except for * //; // * verbose [Int_t] increasing verbosity (0 == minimal) * //; // * dyn [Bool_t] if kTRUE run in dynamic startup mode * //; // * skipds [Bool_t] if kTRUE the dataset related tests are skipped * //; // * * //; // * A certain number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:1777,Test,Test,1777,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,2,"['Test', 'log']","['Test', 'logs']"
Testability,"ry large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawing. In all these cases AddObject() returns kNone, as it does for successful addition,; simply indicating it does not require you to provide further information about; this object. You should not try to make any assumptions about what the viewer did with it. This enables the viewer to be connected to a client which sends potentia",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:8255,log,logical,8255,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,2,['log'],['logical']
Testability,"ry_classes. A node represent a volume positioned inside another.They store links to both; volumes and to the TGeoMatrix representing the relative positioning. Node are; never instantiated directly by users, but created as a result of volume operations.; Adding a volume named A with a given user ID inside a volume B will create a node; node named A_ID. This will be added to the list of nodes stored by B. Also,; when applying a division operation in N slices to a volume A, a list of nodes; B_1, B_2, ..., B_N is also created. A node B_i does not represent a unique; object in the geometry because its container A might be at its turn positioned; as node inside several other volumes. Only when a complete branch of nodes; is fully defined up to the top node in the geometry, a given path like:. /TOP_1/.../A_3/B_7 will represent an unique object. Its global transformation matrix can be computed as the pile-up of all local; transformations in its branch. We will therefore call ""logical graph"" the; hierarchy defined by nodes and volumes. The expansion of the logical graph by; all possible paths defines a tree structure where all nodes are unique; ""touchable"" objects. We will call this the ""physical tree"". Unlike the logical; graph, the physical tree can become a huge structure with several milions of nodes; in case of complex geometries, therefore it is not always a good idea to keep it; transient in memory. Since a the logical and physical structures are correlated, the; modeller rather keeps track only of the current branch, updating the current; global matrix at each change of the level in geometry. The current physical node; is not an object that can be asked for at a given moment, but rather represented; by the combination: current node + current global matrix. However, physical nodes; have unique ID's that can be retrieved for a given modeler state. These can be; fed back to the modeler in order to force a physical node to become current.; The advantage of this comes fro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx:1435,log,logical,1435,geom/geom/src/TGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx,1,['log'],['logical']
Testability,rying linear fitters. //; // 3. Unbinned fits with trees of different dimensions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphEr,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1551,Test,Test,1551,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,"s a minimum amount of data remaining to be flushed from internal buffers; * or an error code, which can be tested using ZSTD_isError().; *; * At any moment, it's possible to flush whatever data might remain stuck within internal buffer,; * using ZSTD_compressStream2() with ZSTD_e_flush. `output->pos` will be updated.; * Note that, if `output->size` is too small, a single invocation with ZSTD_e_flush might not be enough (return code > 0).; * In which case, make some room to receive more compressed data, and call again ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_flush until it returns 0, at which point you can change the; * operation.; * note: ZSTD_e_flush will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if internal buffers are entirely flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * Calling ZSTD_compressStream2() with ZSTD_e_end instructs to finish a frame.; * It will perform a flush and write frame epilogue.; * The epilogue is required for decoders to consider a frame completed.; * flush operation is the same, and follows same rules as calling ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_end until it returns 0, at which point you are free to; * start a new frame.; * note: ZSTD_e_end will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if frame fully completed and fully flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * **********",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:3086,test,tested,3086,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['test'],['tested']
Testability,"s and parameters. \since **6.00/00:**; TF1 supports using lambda expressions in the formula. This allows, by using a full C++ syntax the full power of lambda; functions and still maintain the capability of storing the function in a file which cannot be done with; function pointer or lambda written not as expression, but as code (see items below). Example on how using lambda to define a sum of two functions.; Note that is necessary to provide the number of parameters. ~~~~{.cpp}; TF1 f1(""f1"",""sin(x)"",0,10);; TF1 f2(""f2"",""cos(x)"",0,10);; TF1 fsum(""f1"",""[&](double *x, double *p){ return p[0]*f1(x) + p[1]*f2(x); }"",0,10,2);; ~~~~. \anchor F4; ### 4 - A general C function with parameters. Consider the macro myfunc.C below:. ~~~~{.cpp}; // Macro myfunc.C; Double_t myfunction(Double_t *x, Double_t *par); {; Float_t xx =x[0];; Double_t f = TMath::Abs(par[0]*sin(par[1]*xx)/xx);; return f;; }; void myfunc(); {; auto f1 = new TF1(""myfunc"",myfunction,0,10,2);; f1->SetParameters(2,1);; f1->SetParNames(""constant"",""coefficient"");; f1->Draw();; }; void myfit(); {; auto h1 = new TH1F(""h1"",""test"",100,0,10);; h1->FillRandom(""myfunc"",20000);; TF1 *f1 = (TF1 *)gROOT->GetFunction(""myfunc"");; f1->SetParameters(800,1);; h1->Fit(""myfunc"");; }; ~~~~. In an interactive session you can do:. ~~~~; Root > .L myfunc.C; Root > myfunc();; Root > myfit();; ~~~~. TF1 objects can reference other TF1 objects of type A or B defined above. This excludes CLing or compiled functions. However, there is a restriction. A function cannot reference a basic function if the basic function is a polynomial polN. Example:. ~~~~{.cpp}; {; auto fcos = new TF1 (""fcos"", ""[0]*cos(x)"", 0., 10.);; fcos->SetParNames( ""cos"");; fcos->SetParameter( 0, 1.1);. auto fsin = new TF1 (""fsin"", ""[0]*sin(x)"", 0., 10.);; fsin->SetParNames( ""sin"");; fsin->SetParameter( 0, 2.1);. auto fsincos = new TF1 (""fsc"", ""fcos+fsin"");. auto fs2 = new TF1 (""fs2"", ""fsc+fsc"");; }; ~~~~. \anchor F5; ### 5 - A general C++ function object (functor) with pa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:3649,test,test,3649,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['test'],['test']
Testability,s py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[ px = pxlow + u*pxrange \f]; /// \f[ = pxlow + Log(x/xmin)/alfa \f]; /// \f[ = pxlow -Log(xmin)/alfa + Log(x)/alfa \f]; /// \f[ = fXtoPixelk + fXtoPixel*Log(x) \f]; /// \f[ \Rightarrow fXtoPixelk = pxlow -Log(xmin)/alfa \f]; /// \f[ \Rightarrow fXtoPixel = 1/alfa \f]; ///; /// \f[ py = pylow - Log(y/ymin)/beta \f]; /// \f[ = fYtoPixelk + fYtoPixel*Log(y) \f]; /// \f[ \Rightarrow fYtoPixelk = pylow - Log(ymin)/beta \f]; /,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2702,Log,Log,2702,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"s the next one, and \a; /// clear(), which empties out the container. All three are constant time; /// operations. None of these deletes any nodes; in particular, if there is a; /// single node in the list, then these have identical semantics:; /// \li \c L.remove(L.front());; /// \li \c L.erase(L.begin());; /// \li \c L.clear();; ///; /// As a convenience for callers, there are parallel APIs that take a \c; /// Disposer (such as \c std::default_delete<T>): \a removeAndDispose(), \a; /// eraseAndDispose(), and \a clearAndDispose(). These have different names; /// because the extra semantic is otherwise non-obvious. They are equivalent; /// to calling \a std::for_each() on the range to be discarded.; ///; /// The currently available \p Options customize the nodes in the list. The; /// same options must be specified in the \a ilist_node instantiation for; /// compatibility (although the order is irrelevant).; /// \li Use \a ilist_tag to designate which ilist_node for a given \p T this; /// list should use. This is useful if a type \p T is part of multiple,; /// independent lists simultaneously.; /// \li Use \a ilist_sentinel_tracking to always (or never) track whether a; /// node is a sentinel. Specifying \c true enables the \a; /// ilist_node::isSentinel() API. Unlike \a ilist_node::isKnownSentinel(),; /// which is only appropriate for assertions, \a ilist_node::isSentinel() is; /// appropriate for real logic.; ///; /// Here are examples of \p Options usage:; /// \li \c simple_ilist<T> gives the defaults. \li \c; /// simple_ilist<T,ilist_sentinel_tracking<true>> enables the \a; /// ilist_node::isSentinel() API.; /// \li \c simple_ilist<T,ilist_tag<A>,ilist_sentinel_tracking<false>>; /// specifies a tag of A and that tracking should be off (even when; /// LLVM_ENABLE_ABI_BREAKING_CHECKS are enabled).; /// \li \c simple_ilist<T,ilist_sentinel_tracking<false>,ilist_tag<A>> is; /// equivalent to the last.; ///; /// See \a is_valid_option for steps on adding a new option.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/simple_ilist.h:2085,assert,assertions,2085,interpreter/llvm-project/llvm/include/llvm/ADT/simple_ilist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/simple_ilist.h,2,"['assert', 'log']","['assertions', 'logic']"
Testability,"s, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms....................................OK; // Test 17: Buffer tests for Histograms......................................OK; // Test 18: Extend axis tests for Histograms.................................OK; // Test 19: TH1-THn[Sparse] Conversion tests.................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:2101,Test,Test,2101,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,2,"['Test', 'test']","['Test', 'tests']"
Testability,"se information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation of the FastISel class.; //; // ""Fast"" instruction selection is designed to emit very poor code quickly.; // Also, it is not designed to be able to do much lowering, so most illegal; // types (e.g. i64 on 32-bit targets) and operations are not supported. It is; // also not intended to be able to do much optimization, except in a few cases; // where doing optimizations reduces overall compile time. For example, folding; // constants into immediate fields is often done, because it's cheap and it; // reduces the number of instructions later phases have to examine.; //; // ""Fast"" instruction selection is able to fail gracefully and transfer; // control to the SelectionDAG selector for operations that it doesn't; // support. In many cases, this allows us to avoid duplicating a lot of; // the complicated lowering logic that SelectionDAG currently has.; //; // The intended use for ""fast"" instruction selection is ""-O0"" mode; // compilation, where the quality of the generated code is irrelevant when; // weighed against the speed at which the code can be generated. Also,; // at -O0, the LLVM optimizers are not running, and this makes the; // compile time of codegen a much higher portion of the overall compile; // time. Despite its limitations, ""fast"" instruction selection is able to; // handle enough code on its own to provide noticeable overall speedups; // in -O0 compiles.; //; // Basic operations are supported in a target-independent way, by reading; // the same instruction descriptions that the SelectionDAG selector reads,; // and identifying simple arithmetic operations that can be directly selected; // from simple operators. More complicated operations currently require; // target-specific code.; //; //===--------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:1239,log,logic,1239,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['log'],['logic']
Testability,"se v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Demo program which implements an example LLVM exception implementation, and; // shows several test cases including the handling of foreign exceptions.; // It is run with type info types arguments to throw. A test will; // be run for each given type info type. While type info types with the value; // of -1 will trigger a foreign C++ exception to be thrown; type info types; // <= 6 and >= 1 will cause the associated generated exceptions to be thrown; // and caught by generated test functions; and type info types > 6; // will result in exceptions which pass through to the test harness. All other; // type info types are not supported and could cause a crash. In all cases,; // the ""finally"" blocks of every generated test functions will executed; // regardless of whether or not that test function ignores or catches the; // thrown exception.; //; // examples:; //; // ExceptionDemo; //; // causes a usage to be printed to stderr; //; // ExceptionDemo 2 3 7 -1; //; // results in the following cases:; // - Value 2 causes an exception with a type info type of 2 to be; // thrown and caught by an inner generated test function.; // - Value 3 causes an exception with a type info type of 3 to be; // thrown and caught by an outer generated test function.; // - Value 7 causes an exception with a type info type of 7 to be; // thrown and NOT be caught by any generated function.; // - Value -1 causes a foreign C++ exception to be thrown and not be; // caught by any generated function; //; // Cases -1 and 7 are caught by a C++ test harness where the validity of; // of a C++ catch(...) clause catching a generated exception with a; // type info type of 7 is explained by: example in rules 1.6.4 in; // http://itanium-cxx-abi.github.io/cxx-abi/abi-eh.h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp:1104,test,test,1104,interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,2,['test'],['test']
Testability,"sed.; if ncolors = 52 and colors=0, a Grey Scale palette is used.; if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; if ncolors = 54 and colors=0, a two-color hue palette palette is used.(dark blue through neutral gray to bright yellow); if ncolors = 55 and colors=0, a Rain Bow palette is used.; if ncolors = 56 and colors=0, an inverted Dark Body Radiator palette is used. If `ncolors > 0 && colors == 0`, the default palette is used with a maximum of ncolors. The default palette defines:. - index 0 to 9 : shades of grey; - index 10 to 19 : shades of brown; - index 20 to 29 : shades of blue; - index 30 to 39 : shades of red; - index 40 to 49 : basic colors. The color numbers specified in the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a color can be changed thanks to; `TColor::SetRGB()`. \since **ROOT version 6.19/01**. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; For more details see `TPaletteAxis`. \anchor HP24; ### Drawing a sub-range of a 2D histogram; the [cutg] option. Using a `TCutG` object, it is possible to draw a sub-range of a 2D; histogram. One must create a graphical cut (mouse or C++) and specify the name; of the cut between `[]` in the `Draw()` option.; For example (fit2a.C), with a `TCutG` named `cutg`, one can call:. myhist->Draw(""surf1 [cutg]"");. To invert the cut, it is enough to put a `-` in front of its name:. myhist->Draw(""surf1 [-cutg]"");. It is possible to apply several cuts (`,` means logical AND):. myhist->Draw(""surf1 [cutg1,cutg2]"");. Begin_Macro(source); ../../../tutorials/fit/fit2a.C; End_Macro. \anchor HP25; ### Drawing options for 3D histograms. | Option | Description |; |----------|------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:90048,log,log,90048,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['log'],['log']
Testability,"shifts & logicals only happen on integrals f.e.; // * All of the constants in a switch statement are of the correct type; // * The code is in valid SSA form; // * It should be illegal to put a label into any other type (like a structure); // or to return one. [except constant arrays!]; // * Only phi nodes can be self referential: 'add i32 %0, %0 ; <int>:0' is bad; // * PHI nodes must have an entry for each predecessor, with no extras.; // * PHI nodes must be the first thing in a basic block, all grouped together; // * All basic blocks should only end with terminator insts, not contain them; // * The entry node to a function must not have predecessors; // * All Instructions must be embedded into a basic block; // * Functions cannot take a void-typed parameter; // * Verify that a function's argument list agrees with it's declared type.; // * It is illegal to specify a name for a void value.; // * It is illegal to have a internal global value with no initializer; // * It is illegal to have a ret instruction that returns a value that does not; // agree with the function return value type.; // * Function call argument types match the function prototype; // * A landing pad is defined by a landingpad instruction, and can be jumped to; // only by the unwind edge of an invoke instruction.; // * A landingpad instruction must be the first non-PHI instruction in the; // block.; // * Landingpad instructions must be in a function with a personality function.; // * Convergence control intrinsics are introduced in ConvergentOperations.rst.; // The applied restrictions are too numerous to list here.; // * The convergence entry intrinsic and the loop heart must be the first; // non-PHI instruction in their respective block. This does not conflict with; // the landing pads, since these two kinds cannot occur in the same block.; // * All other things that are tested by asserts spread about the code...; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:2786,test,tested,2786,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,2,"['assert', 'test']","['asserts', 'tested']"
Testability,"simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Un",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:1270,assert,assertion,1270,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['assert'],['assertion']
Testability,"sion don't need this; if __name__ == ""__main__"":; # With an already setup cluster that exposes a Dask scheduler endpoint; client = Client(""dask_scheduler.domain.com:8786""). # The Dask RDataFrame constructor accepts the Dask Client object as an optional argument; df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); ~~~. If an instance of [distributed.Client](http://distributed.dask.org/en/stable/api.html#distributed.Client) is not; provided to the RDataFrame object, it will be created for you and it will run the computations in the local machine; using all cores available. ### Choosing the number of distributed tasks. A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; generically tries to infer how many cores are available in the cluster through the connection object. The number of; tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; a batch system. The client object created at the beginning of the application does not automatically know how many cores; will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks. The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional; keyword argument `npartitions` when creating the RDataFrame object. This parameter is accepted irrespectively of the; backend used:. ~~~{.py}; import ROOT. # Define correct imports and access the distributed RDataFrame ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:40645,log,logic,40645,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['log'],['logic']
Testability,"so valid for 2-dim); /// - ""N"" include comparison of normalizations; /// - ""D"" Put out a line of ""Debug"" printout; /// - ""M"" Return the Maximum Kolmogorov distance instead of prob; /// - ""X"" Run the pseudo experiments post-processor with the following procedure:; /// make pseudoexperiments based on random values from the parent distribution,; /// compare the KS distance of the pseudoexperiment to the parent; /// distribution, and count all the KS values above the value; /// obtained from the original data to Monte Carlo distribution.; /// The number of pseudo-experiments nEXPT is by default 1000, and; /// it can be changed by specifying the option as ""X=number"",; /// for example ""X=10000"" for 10000 toys.; /// The function returns the probability.; /// (thanks to Ben Kilminster to submit this procedure). Note that; /// this option ""X"" is much slower.; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF; ///; /// NOTE1; /// A good description of the Kolmogorov test can be seen at:; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm; ///; /// NOTE2; /// see also alternative function TH1::Chi2Test; /// The Kolmogorov test is assumed to give better results than Chi2Test; /// in case of histograms with low statistics.; ///; /// NOTE3 (Jan Conrad, Fred James); /// ""The returned value PROB is calculated such that it will be; /// uniformly distributed between zero and one for compatible histograms,; /// provided the data are not binned (or the number of bins is very large; /// compared with the number of events). Users who have access to unbinned; /// data and wish exact confidence levels should therefore not put their data; /// into histograms, but should call directly TMath::KolmogorovTest. On; /// the other hand, since TH1 is a convenient way of collecting data and; /// saving space, this function has been provided. However, the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1593,test,test,1593,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['test'],['test']
Testability,"ssociated functions are automatically painted when an histogram is drawn.; To avoid the painting of the associated functions the option `HIST`; should be added to the list of the options used to paint the histogram. \anchor HP29; ### Drawing using OpenGL. The class `TGLHistPainter` allows to paint data set using the OpenGL 3D; graphics library. The plotting options start with `GL` keyword.; In addition, in order to inform canvases that OpenGL should be used to render; 3D representations, the following option should be set:. gStyle->SetCanvasPreferGL(true);. \anchor HP29a; #### General information: plot types and supported options. The following types of plots are provided:. For lego plots the supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supported options are:. | Option | Description |; |-----------|------------------------------------------------------------------|; | ""GLSURF"" | Draw a surface.|; | ""GLSURF1"" | Surface with color levels|; | ""GLSURF2"" | The same as ""GLSURF1"" but without polygon outlines.|; | ""GLSURF3"" | Color level projection on top of plot (works only in cartesian coordinate system).|; | ""GLSURF4"" | Same as ""GLSURF"" but without polygon outlines.|. The surface painting in cartesian coordinates supports logarithmic scales along; X, Y, Z axis. In polar coordinates only the Z axis can be logarithmic,; in cylindrical coordinates only the Y axis. Additional options to SURF and LEGO - Coordinate systems:. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default, cartesian coordinates system.|; | ""POL"" | Pol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:99429,log,logarithmic,99429,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['log'],['logarithmic']
Testability,"st 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2770,Test,Test,2770,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"start chrome in batch, used for image production, like ""$prog --headless --disable-gpu $geometry $url""; /// WebGui.ChromeHeadless: command to start chrome in headless mode, like ""fork: --headless --disable-gpu $geometry $url""; /// WebGui.ChromeInteractive: command to start chrome in interactive mode, like ""$prog $geometry --app=\'$url\' &""; /// WebGui.Firefox: full path to Mozilla Firefox executable; /// WebGui.FirefoxHeadless: command to start Firefox in headless mode, like ""fork:--headless --private-window --no-remote $profile $url""; /// WebGui.FirefoxInteractive: command to start Firefox in interactive mode, like ""$prog --private-window \'$url\' &""; /// WebGui.FirefoxProfile: name of Firefox profile to use; /// WebGui.FirefoxProfilePath: file path to Firefox profile; /// WebGui.FirefoxRandomProfile: usage of random Firefox profile -1 never, 0 - only for headless mode (dflt), 1 - always; /// WebGui.LaunchTmout: time required to start process in seconds (default 30 s); /// WebGui.OperationTmout: time required to perform WebWindow operation like execute command or update drawings; /// WebGui.RecordData: if specified enables data recording for each web window 0 - off, 1 - on; /// WebGui.JsonComp: compression factor for JSON conversion, if not specified - each widget uses own default values; /// WebGui.ForceHttp: 0 - off (default), 1 - always create real http server to run web window; /// WebGui.Console: -1 - output only console.error(), 0 - add console.warn(), 1 - add console.log() output; /// WebGui.ConnCredits: 10 - number of packets which can be send by server or client without acknowledge from receiving side; /// WebGui.openui5src: alternative location for openui5 like https://openui5.hana.ondemand.com/1.128.0/; /// WebGui.openui5libs: list of pre-loaded ui5 libs like sap.m, sap.ui.layout, sap.ui.unified; /// WebGui.openui5theme: openui5 theme like sap_belize (default) or sap_fiori_3; ///; /// THttpServer-related parameters documented in \ref CreateServer method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:2732,log,log,2732,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['log'],['log']
Testability,"strained and linear independent.; 6. Perform a Principal Component Analysis on; \f$Q_i = P_i / P^\prime_i\, i = 1, \ldots, 5\f$, to get linear; indenpendent (among themselves, but not independent of \f$\mathbf{x}\f$) quantities; \f$\mathbf{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16224,Test,Testing,16224,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,"['Test', 'test']","['Testing', 'testing']"
Testability,"stribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::Mean(kappa, beta2); and sqrt(Vavilov::Variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. Two subclasses are provided:; - VavilovFast uses the algorithm by; A. Rotondi and P. Montagna, Fast calculation of Vavilov distribution,; <A HREF=""http://dx.doi.org/10.1016/0168-583X(90)90749-K"">Nucl. Instr. and Meth. B47 (1990) 215-224</A>,; which has been implemented in; <A HREF=""https://cern-tex.web.cern.ch/cern-tex/shortwrupsdir/g115/top.html"">; CERNLIB (G115)</A>. - VavilovAccurate uses the algorithm by; B. Schorr, Programs for the Landau and the Vavilov distributions and the corresponding random numbers,; <A HREF=""http://dx.doi.org/10.1016/0010-4655(74)90091-5"">Computer Phys. Comm. 7 (1974) 215-224</A>,; which has been implemented in; <A HREF=""https://cern-tex.web.cern.ch/cern-tex/shortwrupsdir/g116/top.html"">; CERNLIB (G116)</A>. Both subclasses store coefficients needed to calculate \f$p(\lambda; \kappa, \beta^2)\f$; for fixed values of \f$\kappa\f$ and \f$\beta^2\f$.; Changing these values is computationally expensive. VavilovFast is about 5 times faster for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h:1904,log,log,1904,math/mathmore/inc/Math/Vavilov.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h,1,['log'],['log']
Testability,"stribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; B. Schorr, Programs for the Landau and the Vavilov distributions and the corresponding random numbers,; <A HREF=""http://dx.doi.org/10.1016/0010-4655(74)90091-5"">Computer Phys. Comm. 7 (1974) 215-224</A>,; which has been implemented in; <A HREF=""https://cern-tex.web.cern.ch/cern-tex/shortwrupsdir/g116/top.html"">; CERNLIB (G116)</A>. The class stores coefficients needed to calculate \f$p(\lambda; \kappa, \beta^2)\f$; for fixed values of \f$\kappa\f$ and \f$\beta^2\f$.; Changing these values is computationally expensive. The parameter \f$\kappa\f$ should be in the range \f$0.01 \le \kappa \le 10\f$.; In contrast to the CERNLIB implementation, all values of \f$\kappa \ge 0.001\f$ may be used,; but may result in slower running and/or inaccurate results. The parameter \f$\beta^2\f$ must be in the range \f$0 \le \beta^2 \le 1\f$. Two parameters which are fixed in the CERNLIB implementation may be set by the user:; - epsilonPM corresponds to \f$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:1735,log,log,1735,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['log'],['log']
Testability,"t included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71.dll; /// They can be found either in MS VC++ 7.1 Free Toolkit or; /// download from other Internet sites; /// 2) ORACLE_HOME environment variable should be specified and point to; /// location, where Instant Client files are extracted; /// 3) Run odbc_install.exe from account with administrative rights; /// 3) In $ORACLE_HOME/network/admin/ directory appropriate *.ora files; /// like ldap.ora, sqlnet.ora, tnsnames.ora should be installed.; /// Contact your Oracle administrator to get these files.; /// After Oracle ODBC driver is installed, appropriate entry in ODBC drivers; /// list like ""Oracle in instantclient10_2"" should appear. Connection; /// string example:; /// ""odbcd://DRIVER={Oracle in instantclient10_2};DBQ=db-test;UID=user_name;PWD=user_pass;"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:2877,test,test,2877,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['test'],['test']
Testability,"t should reference the rsp file.; This script doesn't care if the test script returns 0 or 1 for specifically the; successful or failing test, just that the test script returns a different; return code for success vs failure.; Since the command that `ninja -t commands` is run from the build directory,; usually the test script cd's to the build directory. $ rsp_bisect.py --test=path/to/test_script --rsp=path/to/build/target.rsp; --other_rel_path=../Other; where --other_rel_path is the relative path from the first build directory to; the other build directory. This is prepended to files in the rsp. For a full example, if the foo target is suspected to contain a miscompile in; some file, have two different build directories, buildgood/ and buildbad/ and; run; $ ninja -d keeprsp foo; in both so we have two versions of all relevant object files that may contain a; miscompile, one built by a good compiler and one by a bad compiler. In buildgood/, run; $ ninja -t commands | grep '-o .*foo'; to get the command to link the files together. It may look something like; clang -o foo @foo.rsp. Now create a test script that runs the link step and whatever test reproduces a; miscompile and returns a non-zero exit code when there is a miscompile. For; example; ```; #!/bin/bash; # immediately bail out of script if any command returns a non-zero return code; set -e; clang -o foo @foo.rsp; ./foo; ```. With buildgood/ as the working directory, run; $ path/to/llvm-project/llvm/utils/rsp_bisect.py \; --test=path/to/test_script --rsp=./foo.rsp --other_rel_path=../buildbad/; If rsp_bisect is successful, it will print the first file in the rsp file that; when using the bad build directory's version causes the test script to return a; different return code. foo.rsp.0 and foo.rsp.1 will also be written. foo.rsp.0; will be a copy of foo.rsp with the relevant file using the version in; buildgood/, and foo.rsp.1 will be a copy of foo.rsp with the relevant file; using the version in buildbad/. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py:1957,test,test,1957,interpreter/llvm-project/llvm/utils/rsp_bisect.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py,4,['test'],['test']
Testability,"t when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms....................................OK; // Test 17: Buffer tests for Histograms......................................OK; // Test 18: Extend axis tests for Histograms.................................OK; // Test 19: TH1-THn[Sparse] Conversion tests.................................OK; // Test 20: FillData tests for Histograms and Sparses........................OK; // Test 21: Reference File Read for Histograms and Profiles..................OK; // ********************************************************",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:2341,Test,Test,2341,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,2,"['Test', 'test']","['Test', 'tests']"
Testability,"t, the; /// OMPCanonicalLoop may also be wrapped in a CompoundStmt:; ///; /// [...]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- CompoundStmt; /// |- Leading in-between code (if any); /// |- OMPCanonicalLoop; /// | `- ForStmt/CXXForRangeStmt; /// | `- ...; /// `- Trailing in-between code (if any); ///; /// The leading/trailing in-between code must not itself be a OMPCanonicalLoop; /// to avoid confusion which loop belongs to the nesting.; ///; /// There are three different kinds of iteration variables for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility wit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:2733,Log,Logical,2733,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['Log'],['Logical']
Testability,"t:$Id$; // Author: Rene Brun 05/11/98; /////////////////////////////////////////////////////////////////; //; // R O O T T E S T S U I T E and B E N C H M A R K S; // ======================================================; //; // The suite of programs below test the essential parts of Root.; // In particular, there is an extensive test of the I/O and Trees.; // The test can be run in batch or with the interpreter.; // You must run; // gmake on Unix systems; // nmake on Windows; // To run in batch, do; // stress -b 1000 : with no parameters, run standard test with 1000 events; // stress -b 30: run test with 30 events only; //; // To run interactively, do; // root -b; // Root > .L stress.cxx; // Root > stress(1000) run standard test with 1000 events; // Root > stress(30) run with 30 events only; //; // The standard test with 1000 events will create several files.; // The size of all files is around 100 Mbytes.; // The test with 30 events only require around 20 Mbytes; // NB: The test must be run with more than 10 events; //; // The tests runs sequentially 16 tests. Each test will produce; // one line (Test OK or Test failed) with some result parameters.; // At the end of the test a table is printed showing the global results; // with the amount of I/O, Real Time and Cpu Time.; // One single number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile........................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:945,test,test,945,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,4,['test'],"['test', 'tests']"
Testability,"t:DrawProgressBar:ModelPersistence:Jobs=2"" where:; * V = verbose output; * Color = coloured screen output; * Silent = batch mode: boolean silent flag inhibiting any output from TMVA; * Transformations = list of transformations to test.; * DrawProgressBar = draw progress bar to display training and testing.; * ModelPersistence = to save the trained model in xml or serialized files.; * Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method.; * Basic example.; * \code; void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();. TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }. // Register the training and test trees. TTree *signalTree = (TTree *)input->Get(""TreeS"");; TTree *background = (TTree *)input->Get(""TreeB"");. TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");. dataloader->AddVariable(""myvar1 := var1+var2"", 'F');; dataloader->AddVariable(""myvar2 := var1-var2"", ""Expression 2"", """", 'F');; dataloader->AddVariable(""var3"", ""Variable 3"", ""units"", 'F');; dataloader->AddVariable(""var4"", ""Variable 4"", ""units"", 'F');. dataloader->AddSpectator(""spec1 := var1*2"", ""Spectator 1"", ""units"", 'F');; dataloader->AddSpectator(""spec2 := var1*3"", ""Spectator 2"", ""units"", 'F');. // global event weights per tree (see below for setting event-wise weights); Double_t signalWeight = 1.0;; Double_t backgroundWeight = 1.0;. dataloader->SetBackgroundWeightExpression(""weight"");. TMVA::Experimental::Classification *cl = new TMVA::Experimental::Classification(dataloader, Form(""Jobs=%d"", jobs));. cl->BookMethod(TMVA::Types::kBDT, ""BDTG"", ""!H:!V:NTrees=2000:MinNodeSize=2.5%:BoostType=Grad:Shrin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h:1980,test,test,1980,tmva/tmva/inc/TMVA/Classification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h,1,['test'],['test']
Testability,"tString() methods can; // be used without loss of precision while GetInt() or GetLong64() will return; // only the integer part of the value. One also can test whether; // a value is NULL with the IsNull() method.; //; // The buffer length specified for a statement in the TSQLServer::Statement() call; // will also be used to allocate buffers for column values. Usage of these; // buffers is transparent for users and does not limit the number of rows; // which can be accessed with one statement. Again, local databases do not work; // with buffers inside TSQLStatement at all and ignore this value.; // Example of select query:; //; // stmt = serv->Statement(""SELECT * FROM TESTTABLE"", 100);; // // process statement; // if (stmt->Process()) {; // // store result of statement in buffer; // stmt->StoreResult();; //; // // display info about selected field; // std::cout << ""NumFields = "" << stmt->GetNumFields() << std::endl;; // for (int n=0;n<stmt->GetNumFields();n++); // std::cout << ""Field "" << n << "" = "" << stmt->GetFieldName(n) << std::endl;; //; // // extract rows one after another; // while (stmt->NextResultRow()) {; // Double_t id1 = stmt->GetDouble(0);; // UInt_t id2 = stmt->GetUInt(1);; // const char* name1 = stmt->GetString(2);; // const char* name2 = stmt->GetString(3);; // std::cout << id1 << "" - "" << id2 << "" "" << name1 << "" "" << name2 << std::endl;; // }; // }; //; // 4. Working with date/time parameters; // ====================================; // The current implementation supports date, time, date&time and timestamp; // data (all time intervals are not supported yet). To set or get date/time values,; // the following methods should be used:; // SetTime()/GetTime() - only time (hour:min:sec),; // SetDate()/GetDate() - only date (year-month-day),; // SetDatime()/GetDatime() - date and time; // SetTimestamp()/GetTimestamp() - timestamp with seconds fraction; // For some of these methods TDatime type can be used as parameter / return value.; // Be aware that TD",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:7936,TEST,TESTTABLE,7936,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['TEST'],['TESTTABLE']
Testability,"t\{ v_{p-1}(i)^{\frac{\left[v_{p-1}(i+p)+v_{p-1}(i-p)\right]}{2}} \right\}; /// \f]; ///; /// where p = 1, 2, ..., numberIterations. In fact it represents second order; /// difference filter (-1,2,-1).; ///; /// One can also change the; /// direction of the change of the clipping window, the order of the clipping; /// filter, to include smoothing, to set width of smoothing window and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1505,log,logical,1505,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['log'],['logical']
Testability,"table for this benchmark, do; // cd $ROOTSYS/test; // make; //; // The default configuration of ROOT is enough.; // The output of this benchmark looks like:; //; /// stressHepix; ///; ///; ///Starting stressHepix benchmark (details will be in stressHepix.log); ///Takes 442 CP seconds on a 500 rootmarks machine (IBM Thinkpad centrino 1.4GHz VC++7.1); ///Takes 278 CP seconds on a 800 rootmarks reference machine (P IV 2.8 GHz, SLC3 gcc3.2.3); ///Takes 239 CP seconds on a 924 rootmarks machine (MacBook 2.0GHz gcc4.0.1); ///Takes 209 CP seconds on a 1056 rootmarks machine (MacBook 2.0GHz icc9.1); ///Takes 147 CP seconds on a 1512 rootmarks machine (MacPro 3.0GHz gcc4.0.1); ///Takes 142 CP seconds on a 1550 rootmarks machine (AMD64/280, FC5 gcc4.1); ///Takes 121 CP seconds on a 1828 rootmarks machine (MacPro 3.0GHz icc9.1); ///; ///Running : stressFit Minuit 2000, (takes 11 RT seconds on the ref machine); ///Running : stressLinear, (takes 26 RT seconds on the ref machine); ///Running : stressGeometry, (takes 77 RT seconds on the ref machine); ///Running : stressSpectrum 1000, (takes 116 RT seconds on the ref machine); ///Running : stress -b 3000, (takes 138 RT seconds on the ref machine); ///; ///; ///****************************************************************************; ///* *; ///* S T R E S S H E P I X S U M M A R Y *; ///* *; ///* ROOTMARKS = 789.3 * Root5.13/03 20060830/1441; ///* *; ///* Real Time = 401.1 seconds, CpuTime = 281.8 seconds; ///* Linux pcbrun 2.4.21-47.EL.cernsmp #1 SMP Mon Jul 24 15:33:5; ///****************************************************************************; //; // If you run this benchmark on a new platform, please report the results; // at rootdev@cern.ch. Send the output shown above and also the; // log file stressHepix.log that contains more details about the individual; // tests. Your results will be shown at http://root.cern/root/Benchmark.html; //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx:2762,benchmark,benchmark,2762,test/stressHepix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx,5,"['Benchmark', 'benchmark', 'log', 'test']","['Benchmark', 'benchmark', 'log', 'tests']"
Testability,"tandard C++ interfaces for hashing; // arbitrary data and building hash functions for user-defined types. This; // interface was originally proposed in N3333[1] and is currently under review; // for inclusion in a future TR and/or standard.; //; // The primary interfaces provide are comprised of one type and three functions:; //; // -- 'hash_code' class is an opaque type representing the hash code for some; // data. It is the intended product of hashing, and can be used to implement; // hash tables, checksumming, and other common uses of hashes. It is not an; // integer type (although it can be converted to one) because it is risky; // to assume much about the internals of a hash_code. In particular, each; // execution of the program has a high probability of producing a different; // hash_code for a given input. Thus their values are not stable to save or; // persist, and should only be used during the execution for the; // construction of hashing datastructures.; //; // -- 'hash_value' is a function designed to be overloaded for each; // user-defined type which wishes to be used within a hashing context. It; // should be overloaded within the user-defined type's namespace and found; // via ADL. Overloads for primitive types are provided by this library.; //; // -- 'hash_combine' and 'hash_combine_range' are functions designed to aid; // programmers in easily and intuitively combining a set of data into; // a single hash_code for their object. They should only logically be used; // within the implementation of a 'hash_value' routine or similar context.; //; // Note that 'hash_combine_range' contains very special logic for hashing; // a contiguous array of integers or pointers. This logic is *extremely* fast,; // on a modern Intel ""Gainestown"" Xeon (Nehalem uarch) @2.2 GHz, these were; // benchmarked at over 6.5 GiB/s for large keys, and <20 cycles/hash for keys; // under 32-bytes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h:1910,log,logically,1910,interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,4,"['benchmark', 'log']","['benchmarked', 'logic', 'logically']"
Testability,"tations in the local machine; using all cores available. ### Choosing the number of distributed tasks. A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; generically tries to infer how many cores are available in the cluster through the connection object. The number of; tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; a batch system. The client object created at the beginning of the application does not automatically know how many cores; will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks. The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional; keyword argument `npartitions` when creating the RDataFrame object. This parameter is accepted irrespectively of the; backend used:. ~~~{.py}; import ROOT. # Define correct imports and access the distributed RDataFrame appropriate for the; # backend used in the analysis; RDataFrame = ROOT.RDF.Experimental.Distributed.[BACKEND].RDataFrame. if __name__ == ""__main__"":; # The `npartitions` optional argument tells the RDataFrame how many tasks are desired; df = RDataFrame(""mytree"",""myfile.root"", npartitions=NPARTITIONS); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); ~~~. Note that when processing a TTree or TChain dataset, the `npartitions` value should not exceed the number of clusters in; the dataset. The number of clusters in a TTree can be retrieved by typing `rootls -lt myfile.root`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:41313,log,logic,41313,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['log'],['logic']
Testability,"tatus(""a"",1);; /// mytree.SetBranchStatus(""b"",1);; /// ~~~; /// when calling mytree.GetEntry(i); only branches ""a"" and ""b"" will be read.; ///; /// __WARNING!!__; /// If your Tree has been created in split mode with a parent branch ""parent."",; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative is to call directly; /// ~~~ {.cpp}; /// brancha.GetEntry(i); /// branchb.GetEntry(i);; /// ~~~; /// ## IMPORTANT NOTE; ///; /// By default, GetEntry reuses the space allocated by the previous object; /// for each branch. You can force the previous object to be automatically; /// deleted if you call mybranch.SetAutoDelete(true) (default is false).; ///; /// Example:; ///; /// Consider the example in $ROOTSYS/test/Event.h; /// The top level branch in the tree T is declared with:; /// ~~~ {.cpp}; /// Event *event = 0; //event must be null or point to a valid object; /// //it must be initialized; /// T.SetBranchAddress(""event"",&event);; /// ~~~; /// When reading the Tree, one can choose one of these 3 options:; ///; /// ## OPTION 1; ///; /// ~~~ {.cpp}; /// for (Long64_t i=0;i<nentries;i++) {; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// The default (recommended). At the first entry an object of the class; /// Event will be created and pointed by event. At the following entries,; /// event will be overwritten by the new data. All internal members that are; /// TObject* are automatically deleted. It is important that these members; /// be in a valid state when GetEntry is called. Pointers must be correctly; /// initialized. However these internal members will not be deleted if the; /// characters ""->"" are specified as ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1835,test,test,1835,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['test'],['test']
Testability,"tbf{w}_L\f$ \f$ \textbf {f}_L\f$; (see also figure 1) and requiring that it's; *greater* then a threshold value which the user must set (TMultiDimFit::SetMinAngle). \image html multidimfit_img86.gif ""Figure 1: (a) angle \\f$\\theta\\f$ between \\f$\\textbf{w}_l\\f$ and \\f$\\textbf{f}_L\\f$, (b) angle \\f$ \\phi \\f$ between \\f$\\textbf{w}_L\\f$ and \\f$\\textbf{D}\\f$"". ## Test 2; Let \f$\textbf{D}\f$ be the data vector to be fitted. As illustrated in; figure 1, the \f$L^{\mbox{th}}\f$ function \f$\textbf{w}_L\f$; will contribute significantly to the reduction of \f$ S\f$, if the angle; \f$\phi^\prime\f$ between \f$\textbf{w}_L\f$ and \f$\textbf{D}\f$ is smaller than; an upper limit \f$ \phi \f$, defined by the user (MultiDimFit::SetMaxAngle). However, the method automatically readjusts the value of this angle; while fitting is in progress, in order to make the selection criteria; less and less difficult to be fulfilled. The result is that the; functions contributing most to the reduction of \f$ S\f$ are chosen first; (TMultiDimFit::TestFunction). In case \f$ \phi \f$ isn't defined, an alternative method of; performing this second test is used: The \f$L^{\mbox{th}}\f$; function \f$\textbf{f}_L\f$ is accepted if (refer also to equation (13)); \f[; \Delta S_L > \frac{S_{L-1}}{L_{max}-L}; \f]; where \f$ S_{L-1}\f$ is the sum of the \f$ L-1\f$ first residuals from the; \f$ L-1\f$ functions previously accepted; and \f$ L_{max}\f$ is the total number; of functions allowed in the final expression of the fit (defined by; user). From this we see, that by restricting \f$ L_{max}\f$ -- the number of; terms in the final model -- the fit is more difficult to perform,; since the above selection criteria is more limiting. The more coefficients we evaluate, the more the sum of squares of; residuals \f$ S\f$ will be reduced. We can evaluate \f$ S\f$ before inverting; \f$\mathsf{B}\f$ as shown below. ## Coefficients and Coefficient Errors; Having found a parameterization, that is th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:11177,Test,TestFunction,11177,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['Test'],['TestFunction']
Testability,"tch (0); // case 0:; // default:; // if (const ::testing::AssertionResult gtest_ar_ =; // ::testing::AssertionResult((a == b))); // ;; // else; // return ::testing::internal::AssertHelper(; // ::testing::TestPartResult::kFatalFailure,; // ""<path to project>"",; // <line number>,; // ::testing::internal::GetBoolAssertionFailureMessage(; // gtest_ar_, ""a == b"", ""false"", ""true""); // .c_str()) = ::testing::Message();; //; // where AssertionResult is defined similarly to; //; // class AssertionResult {; // public:; // AssertionResult(const AssertionResult& other);; // explicit AssertionResult(bool success) : success_(success) {}; // operator bool() const { return success_; }; // ...; // private:; // bool success_;; // };; //; // In order for the analyzer to correctly handle this assertion, it needs to; // know that the boolean value of the expression ""a == b"" is stored the; // 'success_' field of the original AssertionResult temporary and propagated; // (via the copy constructor) into the 'success_' field of the object stored; // in 'gtest_ar_'. That boolean value will then be returned from the bool; // conversion method in the if statement. This guarantees that the assertion; // holds when the return path is not taken.; //; // If the success value is not properly propagated, then the eager case split; // on evaluating the expression can cause pernicious false positives; // on the non-return path:; //; // ASSERT(ptr != NULL); // *ptr = 7; // False positive null pointer dereference here; //; // Unfortunately, the bool constructor cannot be inlined (because its; // implementation is not present in the headers) and the copy constructor is; // not inlined (because it is constructed into a temporary and the analyzer; // does not inline these since it does not yet reliably call temporary; // destructors).; //; // This checker compensates for the missing inlining by propagating the; // _success value across the bool and copy constructors so the assertion behaves; // as expected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GTestChecker.cpp:1502,assert,assertion,1502,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GTestChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GTestChecker.cpp,3,"['ASSERT', 'assert']","['ASSERT', 'assertion']"
Testability,"te it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = new Event();; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// These rules affect users of TTree::Branch(),; /// TTree::SetBranchAddress(), and TChain::SetBranchAddress(); /// as well because those routines call this one.; ///; /// An example of a tree with branches with objects allocated; /// and owned by us:; /// ~~~ {.cpp}; /// TFile* f1 = new TFile(""myfile_original.root"");; /// TTree* t1 = (TTree*) f->Get(""MyTree"");; /// TFile* f2 = new TFile(""myfile_copy.root"", ""recreate"");; /// TTree* t2 = t1->Clone(0);; /// for (Int_t i = 0; i < 10; ++i) {; /// t1->GetEntry(i);; /// t2->Fill();; /// }; /// t2->Write(); /// delete f2;; /// f2 = 0;; /// delete f1;; /// f1 = 0;; /// ~~~; /// An example of a branch with an object allocated by us,; /// but owned by the caller:; /// ~~~ {.cpp}; /// TFile* f = new TFile(""myfile.root"", ""recreate"");; /// TTree* t = new TTree(""t"", ""A test tree.""); /// Event* event = 0;; /// TBranchElement* br = t->Branch(""event."", &event);; /// for (Int_t i = 0; i < 10; ++i) {; /// ... Fill event with meaningful data in some way.; /// t->Fill();; /// }; /// t->Write();; /// delete event;; /// event = 0;; /// delete f;; /// f = 0;; /// ~~~; /// Notice that the only difference between this example; /// and the following example is that the event pointer; /// is zero when the branch is created.; ///; /// An example of a branch with an object allocated and; /// owned by the caller:; /// ~~~ {.cpp}; /// TFile* f = new TFile(""myfile.root"", ""recreate"");; /// TTree* t = new TTree(""t"", ""A test tree.""); /// Event* event = new Event();; /// TBranchElement* br = t->Branch(""event."", &event);; /// for (Int_t i = 0; i < 10; ++i) {; /// ... Fill event with meaningful data in some way.; /// t->Fill();; /// }; /// t->Write();; /// delete event;; /// event = 0;; /// delete f;; /// f = 0;; /// ~~~; /// If AutoDelete is on (see TB",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:2375,test,test,2375,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['test'],['test']
Testability,"ted as being the original source.; *; * 3. This Copyright notice may not be removed or altered from any; * source or altered source distribution.; *; * The Contributing Authors and Group 42, Inc. specifically permit,; * without fee, and encourage the use of this source code as a component; * to supporting the PNG file format in commercial products. If you use; * this source code in a product, acknowledgment is not required but would; * be appreciated.; *; * END OF COPYRIGHT NOTICE, DISCLAIMER, and LICENSE.; *; * TRADEMARK; * =========; *; * The name ""libpng"" has not been registered by the Copyright owners; * as a trademark in any jurisdiction. However, because libpng has; * been distributed and maintained world-wide, continually since 1995,; * the Copyright owners claim ""common-law trademark protection"" in any; * jurisdiction where common-law trademark is recognized.; */; /*; * A ""png_get_copyright"" function is available, for convenient use in ""about""; * boxes and the like:; *; * printf(""%s"", png_get_copyright(NULL));; *; * Also, the PNG logo (in PNG format, of course) is supplied in the; * files ""pngbar.png"" and ""pngbar.jpg (88x31) and ""pngnow.png"" (98x31).; */; /*; * The contributing authors would like to thank all those who helped; * with testing, bug fixes, and patience. This wouldn't have been; * possible without all of you.; *; * Thanks to Frank J. T. Wojcik for helping with the documentation.; */; /* Note about libpng version numbers:; *; * Due to various miscommunications, unforeseen code incompatibilities; * and occasional factors outside the authors' control, version numbering; * on the library has not always been consistent and straightforward.; * The following table summarizes matters since version 0.89c, which was; * the first widely used release:; *; * source png.h png.h shared-lib; * version string int version; * ------- ------ ----- ----------; * 0.89c ""1.0 beta 3"" 0.89 89 1.0.89; * 0.90 ""1.0 beta 4"" 0.90 90 0.90 [should have been 2.0.90]; * 0.95 ""1.0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:6927,log,logo,6927,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['log'],['logo']
Testability,"ters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the modified test statistic; # in your $ROOTSYS/roofit/roostats/inc directory,; # add the additional line to the LinkDef.h file,; # and recompile root.; #; # Note, if you have a boundary on the parameter of interest (eg. cross-section); # the threshold on the two-sided test statistic starts off at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. This is because the range of the parameter in; # the fit is the same as the range in the scan. In the future, these should be independently; # controlled, but they are not now. As a result the ~50% of pseudo-experiments that have an; # upward fluctuation end up with muhat = muMax. Because of this, the upper range of the; # parameter should be well above the expected upper limit... but not too high or one will; # need a ve",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:3346,test,test,3346,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,1,['test'],['test']
Testability,"the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a color can be changed thanks to; `TColor::SetRGB()`. \since **ROOT version 6.19/01**. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; For more details see `TPaletteAxis`. \anchor HP24; ### Drawing a sub-range of a 2D histogram; the [cutg] option. Using a `TCutG` object, it is possible to draw a sub-range of a 2D; histogram. One must create a graphical cut (mouse or C++) and specify the name; of the cut between `[]` in the `Draw()` option.; For example (fit2a.C), with a `TCutG` named `cutg`, one can call:. myhist->Draw(""surf1 [cutg]"");. To invert the cut, it is enough to put a `-` in front of its name:. myhist->Draw(""surf1 [-cutg]"");. It is possible to apply several cuts (`,` means logical AND):. myhist->Draw(""surf1 [cutg1,cutg2]"");. Begin_Macro(source); ../../../tutorials/fit/fit2a.C; End_Macro. \anchor HP25; ### Drawing options for 3D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""SCAT"" | Draw a scatter plot (legacy draw option).|; | ""ISO"" | Draw a Gouraud shaded 3d iso surface through a 3d histogram. It paints one surface at the value computed as follow: `SumOfWeights/(NbinsX*NbinsY*NbinsZ)`|; | ""BOX"" | Draw a for each cell with volume proportional to the content's absolute value. An hidden line removal algorithm is used|; | ""BOX1"" | Same as BOX but an hidden surface removal algorithm is used|; | ""BOX2"" | Same as ""COL"". The boxes' colors are picked in the current palette according to the bins' contents (default)|; | ""BOX2Z"" | Same as ""BOX2"". In addition the color palette is also drawn.|; | ""BOX3"" | Same as BOX1, but the border lines of each lego-bar are not drawn.|. No",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:90765,log,logical,90765,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['log'],['logical']
Testability,"the rsp file reference the current; build directory's version of some set of the rsp's object files/libraries, and; reference the other build directory's version of the same files for the; remaining set of object files/libraries. Build the target in two separate directories with the two compiler revisions,; keeping the rsp file around since ninja by default deletes the rsp file after; building.; $ ninja -d keeprsp mytarget. Create a script to build the target and run an interesting test. Get the; command to build the target via; $ ninja -t commands | grep mytarget; The command to build the target should reference the rsp file.; This script doesn't care if the test script returns 0 or 1 for specifically the; successful or failing test, just that the test script returns a different; return code for success vs failure.; Since the command that `ninja -t commands` is run from the build directory,; usually the test script cd's to the build directory. $ rsp_bisect.py --test=path/to/test_script --rsp=path/to/build/target.rsp; --other_rel_path=../Other; where --other_rel_path is the relative path from the first build directory to; the other build directory. This is prepended to files in the rsp. For a full example, if the foo target is suspected to contain a miscompile in; some file, have two different build directories, buildgood/ and buildbad/ and; run; $ ninja -d keeprsp foo; in both so we have two versions of all relevant object files that may contain a; miscompile, one built by a good compiler and one by a bad compiler. In buildgood/, run; $ ninja -t commands | grep '-o .*foo'; to get the command to link the files together. It may look something like; clang -o foo @foo.rsp. Now create a test script that runs the link step and whatever test reproduces a; miscompile and returns a non-zero exit code when there is a miscompile. For; example; ```; #!/bin/bash; # immediately bail out of script if any command returns a non-zero return code; set -e; clang -o foo @foo.rsp; ./foo;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py:1222,test,test,1222,interpreter/llvm-project/llvm/utils/rsp_bisect.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/rsp_bisect.py,1,['test'],['test']
Testability,"then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image htm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1294,log,logical,1294,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['log'],['logical']
Testability,"tic variations to the nominal PDF.; The Bernstein basis polynomials are particularly appropriate because they are positive definite. This tool was inspired by the work of Glen Cowan together with Stephan Horner, Sascha Caron,; Eilam Gross, and others.; The initial implementation is independent work. The major step forward in the approach was; to provide a well defined algorithm that specifies the order of polynomial to be included; in the correction. This is an empirical algorithm, so in addition to the nominal model it; needs either a real data set or a simulated one. In the early work, the nominal model was taken; to be a histogram from Monte Carlo simulations, but in this implementation it is generalized to an; arbitrary PDF (which includes a RooHistPdf). The algorithm basically consists of a; hypothesis test of an nth-order correction (null) against a n+1-th order correction (alternate).; The quantity q = -2 log LR is used to determine whether the n+1-th order correction is a major; improvement to the n-th order correction. The distribution of q is expected to be roughly; \f$\chi^2\f$ with one degree of freedom if the n-th order correction is a good model for the data.; Thus, one only moves to the n+1-th order correction of q is relatively large. The chance that; one moves from the n-th to the n+1-th order correction when the n-th order correction; (eg. a type 1 error) is sufficient is given by the Prob(\f$\chi^2_1\f$ > threshold). The constructor; of this class allows you to directly set this tolerance (in terms of probability that the n+1-th; term is added unnecessarily). To do:; Add another method to the utility that will make the sampling distribution for -2 log lambda; for various m vs. m+1 order corrections using a nominal model and perhaps having two ways of; generating the toys (either via a histogram or via an independent model that is supposed to; reflect reality). That will allow one to make plots like Glen has at the end of his DRAFT; very easily. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx:2323,log,log,2323,roofit/roostats/src/BernsteinCorrection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx,1,['log'],['log']
Testability,"tice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c:1794,test,testing,1794,builtins/zlib/deflate_cf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c,1,['test'],['testing']
Testability,"timisation of signal efficiency for given background; efficiency, applying rectangular minimum and maximum requirements. Also implemented is a ""decorrelate/diagonalized cuts approach"",; which improves over the uncorrelated cuts approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. Other optimisation criteria, such as maximising the signal significance-; squared, \f$ \frac{S^2}{(S+B)} \f$, with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in general. Note also that; for rare signals, Poissonian statistics should be used, which modifies; the significance criterion. The rectangular cut of a volume in the variable space is performed using; a binary tree to sort the training events. This provides a significant; reduction in computing time (up to several orders of magnitudes, depending; on the complexity of the problem at hand). Technically, optimisation is achieved in TMVA by two methods:. 1. Monte Carlo generation using uniform priors for the lower cut value,; and the cut width, thrown within the variable ranges. 2. A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample.; The GA is configurable by many external settings through the option; string. For difficult cases (such as many variables), some tuning; may be necessary to achieve satisfying results. Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown; superior results, and often failed due to convergence at local minima. The tests we have performed so far showed that in generic applications,; the GA is superior to MC sampling, and hence GA is the default method.; It is worthwhile trying both anyway. **Decorrelated (or ""diagonalized"") Cuts**. See class description for Method Likelihood for a detailed explanation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:2987,test,tests,2987,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['test'],['tests']
Testability,"tion ROOT::RDF::SaveGraph() on any node that is not the head node, the computation graph of the branch; the node belongs to is printed. By using the head node, the entire computation graph is printed. Following there is an example of usage:; ~~~{.cpp}; // First, a sample computational graph is built; ROOT::RDataFrame df(""tree"", ""f.root"");. auto df2 = df.Define(""x"", []() { return 1; }); .Filter(""col0 % 1 == col0""); .Filter([](int b1) { return b1 <2; }, {""cut1""}); .Define(""y"", []() { return 1; });. auto count = df2.Count();. // Prints the graph to the rd1.dot file in the current directory; ROOT::RDF::SaveGraph(df, ""./mydot.dot"");; // Prints the graph to standard output; ROOT::RDF::SaveGraph(df);; ~~~. The generated graph can be rendered using one of the graphviz filters, e.g. `dot`. For instance, the image below can be generated with the following command:; ~~~{.sh}; $ dot -Tpng computation_graph.dot -ocomputation_graph.png; ~~~. \image html RDF_Graph2.png. \anchor rdf-logging; ### Activating RDataFrame execution logs. RDataFrame has experimental support for verbose logging of the event loop runtimes and other interesting related information. It is activated as follows:; ~~~{.cpp}; #include <ROOT/RLogger.hxx>. // this increases RDF's verbosity level as long as the `verbosity` variable is in scope; auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);; ~~~. or in Python:; ~~~{.python}; import ROOT. verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kInfo); ~~~. More information (e.g. start and end of each multi-thread task) is printed using `ELogLevel.kDebug` and even more; (e.g. a full dump of the generated code that RDataFrame just-in-time-compiles) using `ELogLevel.kDebug+10`. \anchor rdf-from-spec; ### Creating an RDataFrame from a dataset specification file. RDataFrame can be created using a dataset specification JSON file: . ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:76991,log,logging,76991,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,2,['log'],"['logging', 'logs']"
Testability,"tion helps the visualization tool reconstruct all; /// possible test vectors for the purposes of MC/DC analysis. If a ""next"" node; /// ID is '0', it means it's the end of the test vector. The following rules; /// are used:; ///; /// For logical-AND (""LHS && RHS""):; /// - If LHS is TRUE, execution goes to the RHS node.; /// - If LHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// For logical-OR (""LHS || RHS""):; /// - If LHS is TRUE, execution goes to the LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If LHS is FALSE, execution goes to the RHS node.; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// Finally, the condition IDs are also used when instrumenting the code to; /// indicate a unique offset into a temporary bitmap that represents the true; /// or false evaluation of that particular condition.; ///; /// NOTE regarding the use of CodeGenFunction::stripCond(). Even though, for; /// simplicity, parentheses and unary logical-NOT operators are considered; /// part of their underlying condition for both MC/DC and branch coverage, the; /// condition IDs themselves are assigned and tracked using the underlying; /// condition itself. This is done solely for consistency since parentheses; /// and logical-NOTs are ignored when checking whether the condition is; /// actually an instrumentable condition. This can also make debugging a bit; /// easier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:3008,log,logical-OR,3008,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,3,['log'],"['logical-NOT', 'logical-NOTs', 'logical-OR']"
Testability,"tion' contains the word 'fast' and nentries is -1, the; /// cloning will be done without unzipping or unstreaming the baskets; /// (i.e., a direct copy of the raw bytes on disk).; ///; /// When 'fast' is specified, 'option' can also contain a sorting; /// order for the baskets in the output file.; ///; /// There are currently 3 supported sorting order:; ///; /// - SortBasketsByOffset (the default); /// - SortBasketsByBranch; /// - SortBasketsByEntry; ///; /// When using SortBasketsByOffset the baskets are written in the; /// output file in the same order as in the original file (i.e. the; /// baskets are sorted by their offset in the original file; Usually; /// this also means that the baskets are sorted by the index/number of; /// the _last_ entry they contain); ///; /// When using SortBasketsByBranch all the baskets of each individual; /// branches are stored contiguously. This tends to optimize reading; /// speed when reading a small number (1->5) of branches, since all; /// their baskets will be clustered together instead of being spread; /// across the file. However it might decrease the performance when; /// reading more branches (or the full entry).; ///; /// When using SortBasketsByEntry the baskets with the lowest starting; /// entry are written first. (i.e. the baskets are sorted by the; /// index/number of the first entry they contain). This means that on; /// the file the baskets will be in the order in which they will be; /// needed when reading the whole tree sequentially.; ///; /// For examples of CloneTree, see tutorials:; ///; /// - copytree.C:; /// A macro to copy a subset of a TTree to a new TTree.; /// The input file has been generated by the program in; /// $ROOTSYS/test/Event with: Event 1000 1 1 1; ///; /// - copytree2.C:; /// A macro to copy a subset of a TTree to a new TTree.; /// One branch of the new Tree is written to a separate file.; /// The input file has been generated by the program in; /// $ROOTSYS/test/Event with: Event 1000 1 1 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2749,test,test,2749,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['test'],['test']
Testability,"to do this the viewer will force you to provide the raw tessellation, and the; resulting box will be axis aligned with the overall scene, which is non-ideal; for rotated shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ### Master/Local Reference Frames. The `Core` section of TBuffer3D contains two members relating to reference; frames:; `fLocalFrame` & `fLocalMaster`. `fLocalFrame` indicates if any positions in the; buffer (bounding box and tessellation vertexes) are in local or master (world frame).; `fLocalMaster` is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If `fLocalFrame` is kFALSE, `fLocalMaster` should contain an identity matrix. This; is set by default, and can be reset using `SetLocalMasterIdentity()` function. Logical & Physical Objects.; There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local; reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the `fID` logical ID member of; TBuffer3D. If repeated addition of the same `fID` is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable; performance gains in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the inte",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:4544,Log,Logical,4544,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['Log'],['Logical']
Testability,"to extract the transverse momenta of the muons satisfying certain; criteria, for example consider only negatively charged muons with a pseudorapidity; smaller or equal to 2 and with a transverse momentum greater than 10 GeV.; Such a selection would require, among the other things, the management of an explicit; loop, for example:; ~~~{.cpp}; std::vector<float> goodMuons_pt;; const auto size = mu_charge.size();; for (size_t i=0; i < size; ++i) {; if (mu_pt[i] > 10 && abs(mu_eta[i]) <= 2. && mu_charge[i] == -1) {; goodMuons_pt.emplace_back(mu_pt[i]);; }; }; ~~~; These operations become straightforward with RVec - we just need to *write what; we mean*:; ~~~{.cpp}; auto goodMuons_pt = mu_pt[ (mu_pt > 10.f && abs(mu_eta) <= 2.f && mu_charge == -1) ]; ~~~; Now the clean collection of transverse momenta can be used within the rest of the data analysis, for; example to fill a histogram. \anchor operationsandfunctions; ## Arithmetic operations, logical operations and mathematical functions; Arithmetic operations on RVec instances can be performed: for example, they can be added, subtracted, multiplied.; ~~~{.cpp}; RVec<double> v1 {1.,2.,3.,4.};; RVec<float> v2 {5.f,6.f,7.f,8.f};; auto v3 = v1+v2;; auto v4 = 3 * v1;; ~~~; The supported operators are ; - +, -, *, /; - +=, -=, *=, /=; - <, >, ==, !=, <=, >=, &&, ||; - ~, !; - &, |, ^; - &=, |=, ^=; - <<=, >>=. The most common mathematical functions are supported. It is possible to invoke them passing ; RVecs as arguments.; - abs, fdim, fmod, remainder; - floor, ceil, trunc, round, lround, llround; - exp, exp2, expm1; - log, log10, log2, log1p; - pow; - sqrt, cbrt; - sin, cos, tan, asin, acos, atan, atan2, hypot; - sinh, cosh, tanh, asinh, acosh; - erf, erfc; - lgamma, tgamma. If the VDT library is available, the following functions can be invoked. Internally the calculations; are vectorized:; - fast_expf, fast_logf, fast_sinf, fast_cosf, fast_tanf, fast_asinf, fast_acosf, fast_atanf; - fast_exp, fast_log, fast_sin, fast_cos, fas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:3383,log,logical,3383,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['log'],['logical']
Testability,"tructions allow the conditional execution of; /// a comparison. They set the NZCV flags to a predefined value if their; /// predicate is false. This allows to express arbitrary conjunctions, for; /// example ""cmp 0 (and (setCA (cmp A)) (setCB (cmp B)))""; /// expressed as:; /// cmp A; /// ccmp B, inv(CB), CA; /// check for CB flags; ///; /// This naturally lets us implement chains of AND operations with SETCC; /// operands. And we can even implement some other situations by transforming; /// them:; /// - We can implement (NEG SETCC) i.e. negating a single comparison by; /// negating the flags used in a CCMP/FCCMP operations.; /// - We can negate the result of a whole chain of CMP/CCMP/FCCMP operations; /// by negating the flags we test for afterwards. i.e.; /// NEG (CMP CCMP CCCMP ...) can be implemented.; /// - Note that we can only ever negate all previously processed results.; /// What we can not implement by flipping the flags to test is a negation; /// of two sub-trees (because the negation affects all sub-trees emitted so; /// far, so the 2nd sub-tree we emit would also affect the first).; /// With those tools we can implement some OR operations:; /// - (OR (SETCC A) (SETCC B)) can be implemented via:; /// NEG (AND (NEG (SETCC A)) (NEG (SETCC B))); /// - After transforming OR to NEG/AND combinations we may be able to use NEG; /// elimination rules from earlier to implement the whole thing as a; /// CCMP/FCCMP chain.; ///; /// As complete example:; /// or (or (setCA (cmp A)) (setCB (cmp B))); /// (and (setCC (cmp C)) (setCD (cmp D)))""; /// can be reassociated to:; /// or (and (setCC (cmp C)) setCD (cmp D)); // (or (setCA (cmp A)) (setCB (cmp B))); /// can be transformed to:; /// not (and (not (and (setCC (cmp C)) (setCD (cmp D)))); /// (and (not (setCA (cmp A)) (not (setCB (cmp B))))))""; /// which can be implemented as:; /// cmp C; /// ccmp D, inv(CD), CC; /// ccmp A, CA, inv(CD); /// ccmp B, CB, inv(CA); /// check for CB flags; ///; /// A counterexample is ""or ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:1103,test,test,1103,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['test'],['test']
Testability,"try tree, the geometry must be closed; (see TGeoManager::CloseGeometry()). Voxelization can be redone per volume after; this process. Below is the general scheme of the manager class. \image html geom_mgr.jpg. ## An interactive session. Provided that a geometry was successfully built and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically se",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8349,log,logical,8349,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['log'],['logical']
Testability,"ts; //; // The tests runs sequentially 16 tests. Each test will produce; // one line (Test OK or Test failed) with some result parameters.; // At the end of the test a table is printed showing the global results; // with the amount of I/O, Real Time and Cpu Time.; // One single number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files of a chain......................... OK; // Test 14 : Check correct rebuilt of Event.root in test 13........ OK; // Test 15 : Divert Tree branches to separate files................ OK; // Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK; // Test 17 : Test mkdir............................................ OK; // *********************",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:2024,Test,Test,2024,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,2,['Test'],['Test']
Testability,"ty; // requirements would be that they are not address taken to ensure that we; // don't break pointer equality checks, and that variables are either read-; // or write-only. For functions, this is the case if either all copies are; // [local_]unnamed_addr, or we can propagate reference edge attributes; // (which is how this is guaranteed for variables, when analyzing whether; // they are read or write-only).; //; // However, we only get to this code for weak-for-linkage values in one of; // two cases:; // 1) The prevailing copy is not in IR (it is in native code).; // 2) The prevailing copy in IR is not exported from its module.; // Additionally, at least for the new LTO API, case 2 will only happen if; // there is exactly one definition of the value (i.e. in exactly one; // module), as duplicate defs are result in the value being marked exported.; // Likely, users of the legacy LTO API are similar, however, currently there; // are llvm-lto based tests of the legacy LTO API that do not mark; // duplicate linkonce_odr copies as exported via the tool, so we need; // to handle that case below by checking the number of copies.; //; // Generally, we only want to internalize a weak-for-linker value in case; // 2, because in case 1 we cannot see how the value is used to know if it; // is read or write-only. We also don't want to bloat the binary with; // multiple internalized copies of non-prevailing linkonce/weak functions.; // Note if we don't internalize, we will convert non-prevailing copies to; // available_externally anyway, so that we drop them after inlining. The; // only reason to internalize such a function is if we indeed have a single; // copy, because internalizing it won't increase binary size, and enables; // use of inliner heuristics that are more aggressive in the face of a; // single call to a static (local). For variables, internalizing a read or; // write only variable can enable more aggressive optimization. However, we; // already perform this elsewhe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:1103,test,tests,1103,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,1,['test'],['tests']
Testability,"type PDFs, each to be customized; * by a separate customizer instance, that share parameters. To ensure that; * the customized clones also share their respective split leaves, i.e.; * ```; * PDF1(x,y, A) and PDF2(z, A) ---> PDF1_run1(x,y, A_run1) and PDF2_run1(x,y, A_run1); * PDF1_run2(x,y, A_run2) and PDF2_run2(x,y, A_run2); * ```; * feed the same split leaf list into both customizers. In that case, the second customizer; * will pick up the split leaves instantiated by the first customizer and the link between; * the two PDFs is retained.; *; * ### Customising with pre-defined leaves; * If leaf nodes are provided in the sets, the customiser will use them. This is a complete; * example that customises the `yield` parameter, and splits (automatically clones) the; * mean of the Gaussian. This is a short version of the tutorial rf514_RooCustomizer.C.; * ```; * RooRealVar E(""Energy"",""Energy"",0,3000);; *; * RooRealVar meanG(""meanG"",""meanG"", peak[1]);; * RooRealVar fwhm(""fwhm"", ""fwhm"", 5/(2*Sqrt(2*Log(2))));; * RooGaussian gauss(""gauss"", ""gauss"", E, meanG, fwhm);; *; * RooPolynomial linear(""linear"",""linear"",E,RooArgList());; *; * RooRealVar yieldSig(""yieldSig"", ""yieldSig"", 1, 0, 1.E4);; * RooRealVar yieldBkg(""yieldBkg"", ""yieldBkg"", 1, 0, 1.E4);; *; * RooAddPdf model(""model"",""model"",; * RooArgList(gauss,linear),; * RooArgList(yieldSig, yieldBkg));; *; * RooCategory sample(""sample"",""sample"");; * sample.defineType(""BBG1m2T"");; * sample.defineType(""BBG2m2T"");; *; *; * RooArgSet customisedLeaves;; * RooArgSet allLeaves;; *; * RooRealVar mass(""M"", ""M"", 1, 0, 12000);; * RooFormulaVar yield1(""yieldSig_BBG1m2T"",""sigy1"",""M/3.360779"",mass);; * RooFormulaVar yield2(""yieldSig_BBG2m2T"",""sigy2"",""M/2"",mass);; * allLeaves.add(yield1);; * allLeaves.add(yield2);; *; *; * RooCustomizer cust(model, sample, customisedLeaves, &allLeaves);; * cust.splitArg(yieldSig, sample);; * cust.splitArg(meanG, sample);; *; * auto pdf1 = cust.build(""BBG1m2T"");; * auto pdf2 = cust.build(""BBG2m2T"");; * ```; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:4921,Log,Log,4921,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['Log'],['Log']
Testability,"tzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodBase; \ingroup TMVA. Virtual base Class for all MVA method. MethodBase hosts several specific evaluation methods. The kind of MVA that provides optimal performance in an analysis strongly; depends on the particular application. The evaluation factory provides a; number of numerical benchmark results to directly assess the performance; of the MVA training on the independent test sample. These are:. - The _signal efficiency_ at three representative background efficiencies; (which is 1 &minus; rejection).; - The _significance_ of an MVA estimator, defined by the difference; between the MVA mean values for signal and background, divided by the; quadratic sum of their root mean squares.; - The _separation_ of an MVA _x_, defined by the integral; \f[; \frac{1}{2} \int \frac{(S(x) - B(x))^2}{(S(x) + B(x))} dx; \f]; where; \f$ S(x) \f$ and \f$ B(x) \f$ are the signal and background distributions,; respectively. The separation is zero for identical signal and background MVA; shapes, and it is one for disjunctive shapes.; - The average, \f$ \int x \mu (S(x)) dx \f$, of the signal \f$ \mu_{transform} \f$.; The \f$ \mu_{transform} \f$ of an MVA denotes the transformation that yields; a uniform background distribution. In this way, the signal distributions; \f$ S(x) \f$ can be directly compared among",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:1619,benchmark,benchmark,1619,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"ulti dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file path of her/his choice, the log file is never * //; // * deleted. * //; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3386,Test,Test,3386,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Test'],['Test']
Testability,"upported options. The following types of plots are provided:. For lego plots the supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLLEGO"" | Draw a lego plot. It works also for `TH2Poly`.|; | ""GLLEGO2""| Bins with color levels.|; | ""GLLEGO3""| Cylindrical bars.|. Lego painter in cartesian supports logarithmic scales for X, Y, Z.; In polar only Z axis can be logarithmic, in cylindrical only Y. For surface plots (`TF2` and `TH2`) the supported options are:. | Option | Description |; |-----------|------------------------------------------------------------------|; | ""GLSURF"" | Draw a surface.|; | ""GLSURF1"" | Surface with color levels|; | ""GLSURF2"" | The same as ""GLSURF1"" but without polygon outlines.|; | ""GLSURF3"" | Color level projection on top of plot (works only in cartesian coordinate system).|; | ""GLSURF4"" | Same as ""GLSURF"" but without polygon outlines.|. The surface painting in cartesian coordinates supports logarithmic scales along; X, Y, Z axis. In polar coordinates only the Z axis can be logarithmic,; in cylindrical coordinates only the Y axis. Additional options to SURF and LEGO - Coordinate systems:. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default, cartesian coordinates system.|; | ""POL"" | Polar coordinates system.|; | ""CYL"" | Cylindrical coordinates system.|; | ""SPH"" | Spherical coordinates system.|. \anchor HP290; #### TH3 as color boxes. The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLCOL"" | H3 is drawn using semi-transparent colored boxes. See `$ROOTSYS/tutorials/gl/glvox1.C`.|. \anchor HP29b; #### TH3 as boxes (spheres). The supported options are:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GLBOX"" | TH3 as a set of boxes, size of box is prop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:100056,log,logarithmic,100056,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['log'],['logarithmic']
Testability,"utations are 2 to 10 times faster than with the **legacy** backend; * - unless your dataset is so small that the vectorization is not worth it.; * The relative difference of the single log-likelihoods with respect to the legacy mode is usually better than \f$10^{-12}\f$,; * and for fit parameters it's usually better than \f$10^{-6}\f$. In past ROOT releases, this backend could be activated with the now deprecated `BatchMode()` option.; * <tr><td> **cuda** <td> Evaluate the likelihood on a GPU that supports CUDA.; * This backend re-uses code from the **cpu** backend, but compiled in CUDA kernels.; * Hence, the results are expected to be identical, modulo some numerical differences that can arise from the different order in which the GPU is summing the log probabilities.; * This backend can drastically speed up the fit if all RooAbsArg object in the model support it.; * <tr><td> **legacy** <td> The original likelihood evaluation method.; * Evaluates the PDF for each single data entry at a time before summing the negative log probabilities.; * <tr><td> **codegen** <td> **Experimental** - Generates and compiles minimal C++ code for the NLL on-the-fly and wraps it in the returned RooAbsReal.; * Also generates and compiles the code for the gradient using Automatic Differentiation (AD) with [Clad](https://github.com/vgvassilev/clad).; * This analytic gradient is passed to the minimizer, which can result in significant speedups for many-parameter fits,; * even compared to the **cpu** backend. However, if one of the RooAbsArg objects in the model does not support the code generation,; * this backend can't be used.; * <tr><td> **codegen_no_grad** <td> **Experimental** - Same as **codegen**, but doesn't generate and compile the gradient code and use the regular numerical differentiation instead.; * This is expected to be slower, but useful for debugging problems with the analytic gradient.; * </table>; * <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4771,log,log,4771,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['log'],['log']
Testability,"veral ones) :; errorCode = FSE_initDState(&DState, &DStream, DTablePtr);. You can then decode your data, symbol after symbol.; For information the maximum number of bits read by FSE_decodeSymbol() is 'tableLog'.; Keep in mind that symbols are decoded in reverse order, like a LIFO stack (last in, first out).; unsigned char symbol = FSE_decodeSymbol(&DState, &DStream);. You can retrieve any bitfield you eventually stored into the bitStream (in reverse order); Note : maximum allowed nbBits is 25, for 32-bits compatibility; size_t bitField = BIT_readBits(&DStream, nbBits);. All above operations only read from local register (which size depends on size_t).; Refueling the register from memory is manually performed by the reload method.; endSignal = FSE_reloadDStream(&DStream);. BIT_reloadDStream() result tells if there is still some more data to read from DStream.; BIT_DStream_unfinished : there is still some data left into the DStream.; BIT_DStream_endOfBuffer : Dstream reached end of buffer. Its container may no longer be completely filled.; BIT_DStream_completed : Dstream reached its exact end, corresponding in general to decompression completed.; BIT_DStream_tooFar : Dstream went too far. Decompression result is corrupted. When reaching end of buffer (BIT_DStream_endOfBuffer), progress slowly, notably if you decode multiple symbols per loop,; to properly detect the exact end of stream.; After each decoded symbol, check if DStream is fully consumed using this simple test :; BIT_reloadDStream(&DStream) >= BIT_DStream_completed. When it's done, verify decompression is fully completed, by checking both DStream and the relevant states.; Checking if DStream has reached its end is performed by :; BIT_endOfDStream(&DStream);; Check also the states. There might be some symbols left there, if some high probability ones (>50%) are possible.; FSE_endOfDState(&DState);; */; /* *****************************************; * FSE unsafe API; *******************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:2140,test,test,2140,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['test'],['test']
Testability,"versus sqrt(x); /// - ""px:py:pz:2.5*E"": produces a 3-d scatter-plot of px vs py ps pz; /// and the color number of each marker will be 2.5*E.; /// If the color number is negative it is set to 0.; /// If the color number is greater than the current number of colors; /// it is set to the highest color number. The default number of; /// colors is 50. See TStyle::SetPalette for setting a new color palette.; ///; /// The expressions can use all the operations and built-in functions; /// supported by TFormula (see TFormula::Analyze()), including free; /// functions taking numerical arguments (e.g. TMath::Bessel()).; /// In addition, you can call member functions taking numerical; /// arguments. For example, these are two valid expressions:; /// ~~~ {.cpp}; /// TMath::BreitWigner(fPx,3,2); /// event.GetHistogram()->GetXaxis()->GetXmax(); /// ~~~; /// \endparblock; /// \param [in] selection; /// \parblock; /// A string containing a selection expression.; /// In a selection all usual C++ mathematical and logical operators are allowed.; /// The value corresponding to the selection expression is used as a weight; /// to fill the histogram (a weight of 0 is equivalent to not filling the histogram).\n; /// \n; /// Examples:; /// - ""x<y && sqrt(z)>3.2"": returns a weight = 0 or 1; /// - ""(x+y)*(sqrt(z)>3.2)"": returns a weight = x+y if sqrt(z)>3.2, 0 otherwise\n; /// \n; /// If the selection expression returns an array, it is iterated over in sync with the; /// array returned by the varexp argument (as described below in ""Drawing expressions using arrays and array; /// elements""). For example, if, for a given event, varexp evaluates to; /// `{1., 2., 3.}` and selection evaluates to `{0, 1, 0}`, the resulting histogram is filled with the value 2. For example, for each event here we perform a simple object selection:; /// ~~~{.cpp}; /// // Muon_pt is an array: fill a histogram with the array elements > 100 in each event; /// tree->Draw('Muon_pt', 'Muon_pt > 100'); /// ~~~; /// \endpa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2510,log,logical,2510,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['log'],['logical']
Testability,"vide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:7405,log,logical,7405,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['log'],['logical']
Testability,"whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many info-zippers for bug reports and testing.; *; * REFERENCES; *; * APPNOTE.TXT documentation file in PKZIP 1.93a distribution.; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; * INTERFACE; *; * void lm_init (int pack_level, ush *flags); * Initialize the ""longest match"" routines for a new file; *; * ulg deflate (void); * Processes a new input file and return its compressed length. Sets; * the compressed length, crc, deflate flags and internal file; * attributes.; */; /* #include ""zip.h"" */; /* #include ""ZIP.h"" */; /* ===========================================================================; * Configuration parameters; */; /* Compile with MEDIUM_MEM to reduce the memory requirements or; * with SMALL_MEM to use as little memory as possible. Use BIG_MEM if the; * entire input file can be held in memory (not possible",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:1776,test,testing,1776,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['test'],['testing']
Testability,"will produce one line (Test OK or Test FAILED) . At the end of //; // the test a table is printed showing the global results Real Time and //; // Cpu Time. One single number (ROOTMARKS) is also calculated showing the //; // relative performance of your machine compared to a reference machine //; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory and 120 GBytes IDE disk. //; // //; // In the main routine the fitter can be chosen through TVirtualFitter : //; // - Minuit //; // - Minuit2 //; // - Fumili //; //; // To run the test, do, eg; // root -b -q stressFit.cxx; // root -b -q ""stressFit.cxx(\""Minuit2\"")""; // root -b -q ""stressFit.cxx+(\""Minuit2\"")""; // //; // The verbosity can be set through the global parameter gVerbose : //; // -1: off 1: on //; // The tolerance on the parameter deviation from the minimum can be set //; // through gAbsTolerance . //; // //; // An example of output when all the tests run OK is shown below: //; // ******************************************************************* //; // * Minimization - S T R E S S suite * //; // ******************************************************************* //; // ******************************************************************* //; // * Starting S T R E S S * //; // ******************************************************************* //; // Test 1 : Wood.................................................. OK //; // Test 2 : RosenBrock............................................ OK //; // Test 3 : Powell................................................ OK //; // Test 4 : Fletcher.............................................. OK //; // Test 5 : GoldStein1............................................ OK //; // Test 6 : GoldStein2............................................ OK //; // Test 7 : TrigoFletcher......................................... OK //; // ******************************************************************* //; // //; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*_*//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:1681,test,tests,1681,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,8,"['Test', 'test']","['Test', 'tests']"
Testability,"with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'..................................OK; // ****************************************************************************; // stressHistoFit: Real Time = 37.49 seconds Cpu Time = 37.24 seconds; // ROOTMARKS = 2663.8 ROOT version: 5.27/01 trunk@32822; // ****************************************************************************; //; // //; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2687,Test,Test,2687,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,9,['Test'],['Test']
Testability,"x, nodesy). Example:; ///; /// h2->Draw(""SPEC n(40,40)"");; ///; /// Sometimes the displayed region is rather large. When displaying all; /// channels pictures become very dense and complicated. It is very difficult; /// to understand the overall shape of data. ""n(nx,ny)"" allows to change the; /// density of displayed channels. Only the channels coinciding with given; /// nodes are displayed.; ///; /// The visualization angles can be changed with a(alpha, beta, view).; /// Example:; ///; /// h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; ///; /// Alpha defines the angle between bottom horizontal screen line and the; /// displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) changes the scale of the Z-axis Possible values are:; ///; /// - 0 = Linear (default); /// - 1 = Log; /// - 2 = Sqrt; ///; /// If gPad->SetLogz() has been set, log scale on Z-axis is set automatically.; /// No need to use the zs() operator. Note that the X and Y axis are always; /// linear.; ///; /// ci(r,g,b), were r,g and b are floats defines the colors increments.; /// For sophisticated shading (Light, Height and LightHeight Display Modes; /// Groups) the color palette starts from the basic pen color (see pa(); /// function). There is a predefined number of color levels (256). Color in; /// every level is calculated by adding the increments of the r, g, b; /// components to the previous level. Using this function one can change the; /// color increments between two neighbouring color levels. The function does; /// not apply dor the Simple Display Modes Group. The default values are:; /// (1,1,1).; ///; /// ca(color_algorithm) allows to choose the Color Algorithm.; /// To define the colors one can employ one of the following color algorithms; /// (RGB, CMY, CIE, YIQ, HVS ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:4477,Log,Log,4477,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,2,"['Log', 'log']","['Log', 'log']"
Testability,x-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[ px = pxlow + u*pxrange \f]; /// \f[ = pxlow + Log(x/xmin)/a,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2338,Log,Log,2338,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"x;; /// x = x == e ? d : x;; /// x = e == x ? d : x; (this one is not in the spec); /// cond-update-stmt:; /// if (x ordop expr) { x = expr; }; /// if (expr ordop x) { x = expr; }; /// if (x == e) { x = d; }; /// if (e == x) { x = d; } (this one is not in the spec); /// conditional-update-capture-atomic:; /// v = x; cond-update-stmt; (IsPostfixUpdate=true, IsFailOnly=false); /// cond-update-stmt; v = x; (IsPostfixUpdate=false, IsFailOnly=false); /// if (x == e) { x = d; } else { v = x; } (IsPostfixUpdate=false,; /// IsFailOnly=true); /// r = x == e; if (r) { x = d; } (IsPostfixUpdate=false, IsFailOnly=false); /// r = x == e; if (r) { x = d; } else { v = x; } (IsPostfixUpdate=false,; /// IsFailOnly=true); ///; /// \param Loc The insert and source location description.; /// \param X The target atomic pointer to be updated.; /// \param V Memory address where to store captured value (for; /// compare capture only).; /// \param R Memory address where to store comparison result; /// (for compare capture with '==' only).; /// \param E The expected value ('e') for forms that use an; /// equality comparison or an expression ('expr') for; /// forms that use 'ordop' (logically an atomic maximum or; /// minimum).; /// \param D The desired value for forms that use an equality; /// comparison. If forms that use 'ordop', it should be; /// \p nullptr.; /// \param AO Atomic ordering of the generated atomic instructions.; /// \param Op Atomic compare operation. It can only be ==, <, or >.; /// \param IsXBinopExpr True if the conditional statement is in the form where; /// x is on LHS. It only matters for < or >.; /// \param IsPostfixUpdate True if original value of 'x' must be stored in; /// 'v', not an updated one (for compare capture; /// only).; /// \param IsFailOnly True if the original value of 'x' is stored to 'v'; /// only when the comparison fails. This is only valid for; /// the case the comparison is '=='.; ///; /// \return Insertion point after generated atomic capture IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:1328,log,logically,1328,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['log'],['logically']
Testability,"ximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, \ldots, M\f$.; 4. Determine from \f$\mathbf{x}\f$ a set of at least five relevant; coordinates \f$\mathbf{x}^\prime\f$, using contrains, *or; alternative:*; 5. Perform a Principal Component Analysis (using TPrincipal), and use; to get a linear transformation \f$\mathbf{x} \rightarrow \mathbf{x}^\prime\f$, so that; \f$\mathbf{x}^\prime\f$ are constrained and linear independent.; 6. Perform a Principal Component Analysis on; \f$Q_i = P_i / P^\prime_i\, i = 1, \ldots, 5\f$, to get linear; indenpendent (among themselves, but not independent of \f$\mathbf{x}\f$) quantities; \f$\mathbf{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:15783,Test,Test,15783,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['Test'],['Test']
Testability,"y require around 20 Mbytes; // NB: The test must be run with more than 10 events; //; // The tests runs sequentially 16 tests. Each test will produce; // one line (Test OK or Test failed) with some result parameters.; // At the end of the test a table is printed showing the global results; // with the amount of I/O, Real Time and Cpu Time.; // One single number (ROOTMARKS) is also calculated showing the relative; // performance of your machine compared to a reference machine; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory; // and 120 GBytes IDE disk.; //; // An example of output when all the tests run OK is shown below:; // ******************************************************************; // * Starting R O O T - S T R E S S test suite with 1000 events; // ******************************************************************; // Test 1 : Functions, Random Numbers, Histogram Fits............. OK; // Test 2 : Check size & compression factor of a Root file........ OK; // Test 3 : Purge, Reuse of gaps in TFile......................... OK; // Test 4 : Test of 2-d histograms, functions, 2-d fits........... OK; // Test 5 : Test graphics & Postscript............................ OK; // Test 6 : Test subdirectories in a Root file.................... OK; // Test 7 : TNtuple, selections, TCut, TCutG, TEventList.......... OK; // Test 8 : Trees split and compression modes..................... OK; // Test 9 : Analyze Event.root file of stress 8................... OK; // Test 10 : Create 10 files starting from Event.root.............. OK; // Test 11 : Test chains of Trees using the 10 files............... OK; // Test 12 : Compare histograms of test 9 and 11................... OK; // Test 13 : Test merging files of a chain......................... OK; // Test 14 : Check correct rebuilt of Event.root in test 13........ OK; // Test 15 : Divert Tree branches to separate files................ OK; // Test 16 : CINT test (3 nested loops) with LHCb trigger.......... OK; // Test 17 : Test ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:1953,Test,Test,1953,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,1,['Test'],['Test']
Testability,"y were replaced by RooTemplateProxy<class T>. Two typedefs have been defined for backward compatibility:; - `RooRealProxy = RooTemplateProxy<RooAbsReal>`. Any generic object that converts to a real value.; - `RooCategoryProxy = RooTemplateProxy<RooAbsCategory>`. Any category object. To modernise a class, one can change the template argument of the proxy to the most appropriate type,; and increment the class version of the owner. <table>; <tr><th> %RooFit before %ROOT 6.22 <th> %RooFit starting with %ROOT 6.22; <tr><td>; ~~~{.cpp}; // In .h: Declare member; RooRealProxy pdfProxy;. ClassDefOverride(MyPdf, 1); };. // In .cxx: Initialise proxy in constructor; // The proxy will accept any RooAbsArg, so the type of; // ""thePdf"" has to be checked manually.; MyPdf::MyPdf(name, title, ...) :; pdfProxy(""pdfProxy"", ""Proxy holding a PDF"", this, thePdf) {; [ Extra checking here ... ]; }. // In .cxx: Accessing the proxy; RooAbsArg* absArg = pdfProxy.absArg();; RooAbsPdf* pdf = dynamic_cast<RooAbsPdf*>(absArg);; assert(pdf); // Manual type checking ...; pdf->fitTo(...);; ~~~; <td>; ~~~{.cpp}; // In .h: Declare member; RooTemplateProxy<RooAbsPdf> pdfProxy;. ClassDefOverride(MyPdf, 2); };. // In .cxx: Initialise proxy in constructor; // The program will not compile if ""thePdf"" is not a; // type deriving from RooAbsPdf; MyPdf::MyPdf(name, title, ...) :; pdfProxy(""pdfProxy"", ""Proxy holding a PDF"", this, thePdf) {. }. // In .cxx: Accessing the proxy. pdfProxy->fitTo(...);; ~~~; </table>. ### How to modernise old code. 1. Choose the proper template argument for the proxy.; - If a PDF is stored: `RooTemplateProxy<RooAbsPdf>`.; - If a real-valued object is stored: `RooTemplateProxy<RooAbsReal>`.; - If a category is stored: `RooTemplateProxy<RooCategory>`.; - If a variable is stored (i.e. one wants to be able to assign values to it): `RooTemplateProxy<RooRealVar>`; Other template arguments are possible, as long as they derive from RooAbsArg.; 2. Increment the class version of the owning cla",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h:2388,assert,assert,2388,roofit/roofitcore/inc/RooTemplateProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h,1,['assert'],['assert']
Testability,y-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[ px = pxlow + u*pxrange \f]; /// \f[ = pxlow + Log(x/xmin)/alfa \f]; /// \f[ = pxlow -Log(xmin)/alfa + Log(x)/alfa \f]; /// \f[ = fXtoPixelk + fXtoPixel*Log(x) \f]; /// \f[ \Rightarrow fXtoPixelk = pxlow -Log(xmin)/alfa \f]; /// \f[ \Rightarrow fXtoPixel = 1/alfa \f]; ///; /// \f[ py = pylow - Log(y/ymin)/beta \f]; /// \f[ = fYtoPixelk + fYtoPixel*Log(y) \f]; /// \f[,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2647,Log,Log,2647,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"ypes: //; // //; // 1. 1D and 2D Objects, including 1D and 2D histograms, 1D and 2D //; // histograms with variable bins, TGraph, TGraphErrors, TGraph2D, //; // TGraph2DErrors //; // 2. Same as before, but trying linear fitters. //; // 3. Unbinned fits with trees of different dimensions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1344,Test,Test,1344,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Test'],['Test']
Testability,yrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Con,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2213,Log,Log,2213,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,yrange \frac{ymin}{yrange}; /// \f]; /// \f[; /// fYtoPixel = \frac{pyrange}{yrange}; /// \f]; /// where:; /// \f[; /// pylow = fAbsYlowNDC \times fCh; /// \f]; /// \f[; /// pyrange = fAbsHNDC \times fCh; /// \f]; ///; /// ### Conversion from px to x; ///; /// \f[; /// \Rightarrow x = \frac{xrange(px-pxlow)}{pxrange}+ xmin = fPixeltoXk + fPixeltoX \times px; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoXk = xmin - pxlow \times\frac{xrange}{pxrange}; /// \f]; /// \f[; /// fPixeltoX = \frac{xrange}{pxrange}; /// \f]; ///; /// ### Conversion from py to y; ///; /// \f[; /// \Rightarrow y = \frac{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ ,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2038,Log,Log,2038,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,yrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[ px = pxlow + u*pxrange \f]; /// \f[ = pxlow + Log(x/xmin)/alfa \f]; /// \f[ = pxlow -Log(xmin)/alfa + Log(x)/alfa \f]; /// \f[ = fXtoPixelk + fXtoPixel*Log(x) \f]; /// \f[ \Rightarrow fXtoPixelk = pxlow -Log(xmin)/alfa \f]; /// \f[ \Rightarrow fXtoPixel = 1/alfa \f]; ///; /// \f[ py = pylow - Log(y/ymin)/beta \f]; /// \f[ = fYtoPixelk + fYtoPixel*Log(y) \f]; /// \f[ \Rightarro,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2658,Log,Log,2658,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"ytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cousins, James T. Linnemann, Jordan Tucker; # http:#arxiv.org/abs/physics/0702156; # NIM A 595 (2008) 480--501; #; # - Statistical Challenges for Searches for New Physics at the LHC; # Author: Kyle Cranmer; # http:#arxiv.org/abs/physics/0511028; #; # - Measures of Significance in HEP and Astrophysics; # Author: J. T. Linnemann; # http:#arxiv.org/abs/physics/0312059; #; # \macro_image; # \macro_output; # \macro_code; #; # \authors Kyle Cranmer, Wouter Verkerke, Sven Kreiss, and Jolly Chen (Python translation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:2726,test,testing,2726,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,2,['test'],"['test', 'testing']"
Testability,"zation Examples, Fred James //; // //; // from the //; // Proceedings of the 1972 CERN Computing and Data Processing School //; // Pertisau, Austria, 10-24 September, 1972 (CERN 72-21) //; // //; // Here a collection of test problems is assembled which were found to be //; // useful in verifying and comparing minimization routines. Many of these //; // are standard functions upon which it has become conventional to try all //; // new methods, quoting the performance in the publication of the algorithm //; // //; // Each test will produce one line (Test OK or Test FAILED) . At the end of //; // the test a table is printed showing the global results Real Time and //; // Cpu Time. One single number (ROOTMARKS) is also calculated showing the //; // relative performance of your machine compared to a reference machine //; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory and 120 GBytes IDE disk. //; // //; // In the main routine the fitter can be chosen through TVirtualFitter : //; // - Minuit //; // - Minuit2 //; // - Fumili //; //; // To run the test, do, eg; // root -b -q stressFit.cxx; // root -b -q ""stressFit.cxx(\""Minuit2\"")""; // root -b -q ""stressFit.cxx+(\""Minuit2\"")""; // //; // The verbosity can be set through the global parameter gVerbose : //; // -1: off 1: on //; // The tolerance on the parameter deviation from the minimum can be set //; // through gAbsTolerance . //; // //; // An example of output when all the tests run OK is shown below: //; // ******************************************************************* //; // * Minimization - S T R E S S suite * //; // ******************************************************************* //; // ******************************************************************* //; // * Starting S T R E S S * //; // ******************************************************************* //; // Test 1 : Wood.................................................. OK //; // Test 2 : RosenBrock............................................ OK //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:1298,test,test,1298,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,1,['test'],['test']
Testability,"{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16417,test,test,16417,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['test'],['test']
Testability,{yrange(py-pylow)}{pyrange}+ ymin = fPixeltoYk + fPixeltoY \times py; /// \f]; ///; /// \f[; /// \Rightarrow fPixeltoYk = ymin - pylow \times\frac{yrange}{pyrange}; /// \f]; /// \f[; /// fPixeltoY = \frac{yrange}{pyrange}; /// \f]; ///; /// ### Computation of the coefficients in case of LOG scales; ///; /// #### Conversion from pixel coordinates to world coordinates; ///; /// \f[; /// u = \frac{Log(x) - Log(xmin)}{Log(xmax) - Log(xmin)} = \frac{Log(x/xmin)}{Log(xmax/xmin)} = \frac{px - pxlow}{pxrange}; /// \f]; ///; /// \f[ \Rightarrow Log(\frac{x}{xmin}) = u \times Log(\frac{xmax}{xmin}) \f]; /// \f[ x = xmin \times e^{(u \times Log(\frac{xmax}{xmin})} \f]; /// Let:; /// \f[ alfa = \frac{Log(\frac{xmax}{xmin})}{fAbsWNDC} \f]; ///; /// \f[ x = xmin \times e^{(-alfa \times pxlow)} + e^{(alfa \times px)} \f]; /// \f[ x = fPixeltoXk \times e^{(fPixeltoX \times px)} \f]; /// \f[ ==> fPixeltoXk = xmin \times e^{(-alfa*pxlow)} \f]; /// \f[ fPixeltoX = alfa \f]; ///; /// \f[; /// v = \frac{Log(y) - Log(ymin)}{Log(ymax) - Log(ymin)} = \frac{Log(y/ymin)}{Log(ymax/ymin)} = \frac{py - pylow}{pyrange}; /// \f]; /// Let:; /// \f[ beta = Log(\frac{ymax}{ymin}) \f]; /// \f[ Log(\frac{y}{ymin}) = beta \times pylow - beta \times py \f]; /// \f[ \frac{y}{ymin} = e^{(beta \times pylow - beta \times py)} \f]; /// \f[ y = ymin \times e^{(beta \times pylow)} \times e^{(-beta \times py)}\f]; /// \f[ \Rightarrow y = fPixeltoYk \times e^{(fPixeltoY \times py)} \f]; /// \f[ fPixeltoYk = ymin \times e^{(beta \times pylow)} \f]; /// \f[ fPixeltoY = -beta \f]; ///; /// #### Conversion from World coordinates to pixel coordinates; ///; /// \f[ px = pxlow + u*pxrange \f]; /// \f[ = pxlow + Log(x/xmin)/alfa \f]; /// \f[ = pxlow -Log(xmin)/alfa + Log(x)/alfa \f]; /// \f[ = fXtoPixelk + fXtoPixel*Log(x) \f]; /// \f[ \Rightarrow fXtoPixelk = pxlow -Log(xmin)/alfa \f]; /// \f[ \Rightarrow fXtoPixel = 1/alfa \f]; ///; /// \f[ py = pylow - Log(y/ymin)/beta \f]; /// \f[ = fYtoPixelk + fYtoPixel*Log(y) \f],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:2638,Log,Log,2638,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Log'],['Log']
Testability,"}^{2} \f$ and \f$ s_{2i}^{2} \f$ respectively.; /// If the hypothesis of identity is valid, then the maximum likelihood and; /// Least Square Method estimator of pi,i=1,...,r, is; ///\f[; /// \hat{p}_{i} = \frac{w_{1i}W_{1}/s_{1i}^{2}+w_{2i}W_{2} /s_{2i}^{2}}{W_{1}^{2}/s_{1i}^{2}+W_{2}^{2}/s_{2i}^{2}}; ///\f]; /// We may then use the test statistic; ///\f[; /// X^{2} = \sum_{i=1}^{r} \frac{(w_{1i}-W_{1}\hat{p}_{i})^{2}}{s_{1i}^{2}} + \sum_{i=1}^{r} \frac{(w_{2i}-W_{2}\hat{p}_{i})^{2}}{s_{2i}^{2}} = \sum_{i=1}^{r} \frac{(W_{1}w_{2i}-W_{2}w_{1i})^{2}}{W_{1}^{2}s_{2i}^{2}+W_{2}^{2}s_{1i}^{2}}; ///\f]; /// and it has approximately a \f$ \chi^{2}_{(r-1)} \f$ distribution [2].; /// The normalized or studentised residuals [6]; ///\f[; /// r_{i} = \frac{w_{1i}-W_{1}\hat{p}_{i}}{s_{1i}\sqrt{1 - \frac{1}{(1+W_{2}^{2}s_{1i}^{2}/W_{1}^{2}s_{2i}^{2})}}}; ///\f]; /// have approximately a normal distribution with mean equal to 0 and standard; /// deviation 1. A recommended minimal expected frequency is equal to 10 for; /// the proposed test.; ///; /// #### Numerical examples:; ///; /// The method described herein is now illustrated with an example.; /// We take a distribution; ///\f[; /// \phi(x) = \frac{2}{(x-10)^{2}+1} + \frac{1}{(x-14)^{2}+1} (1); ///\f]; /// defined on the interval [4,16]. Events distributed according to the formula; /// (1) are simulated to create the unweighted histogram. Uniformly distributed; /// events are simulated for the weighted histogram with weights calculated by; /// formula (1). Each histogram has the same number of bins: 20. Fig.1 shows; /// the result of comparison of the unweighted histogram with 200 events; /// (minimal expected frequency equal to one) and the weighted histogram with; /// 500 events (minimal expected frequency equal to 25); /// Begin_Macro; /// ../../../tutorials/math/chi2test.C; /// End_Macro; /// Fig 1. An example of comparison of the unweighted histogram with 200 events; /// and the weighted histogram with 500 events:; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:11036,test,test,11036,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['test'],['test']
Usability," (toroot) can be used; to automatically translate a GEANT detector geometry into a ROOT geometry. a Geometry object is entered into the list of geometries into the; ROOT main object (see TROOT description) when the TGeometry; constructor is invoked.; Several geometries may coexist in memory.; /; A Geometry object consist of the following linked lists:. - the TMaterial list (material definition only).; - the TRotmatrix list (Rotation matrices definition only).; - the TShape list (volume definition only).; - the TNode list assembling all detector elements. Only the Build and Draw functions for a geometry are currently supported. The conversion program from Geant to Root has been added in the list; of utilities in utils directory.(see g2root); The executable module of g2root can be found in $ROOTSYS/bin/g2root. To use this conversion program, type the shell command:. ~~~ {.cpp}; g2root geant_rzfile macro_name; ~~~. for example. ~~~ {.cpp}; g2root na49.geom na49.C; ~~~. will convert the GEANT RZ file na49.geom into a ROOT macro na49.C. To generate the Geometry structure within Root, do:. ~~~ {.cpp}; Root > .x na49.C; Root > na49.Draw(); Root > wh.x3d() (this invokes the 3-d Root viewer); Root > TFile gna49(""na49.root"",""NEW"") //open a new root file; Root > na49.Write() //Write the na49 geometry structure; Root > gna49.Write() //Write all keys (in this case only one); ~~~. Note: all keys are also written on closing of the file, gna49.Close or; when the program exits, Root closes all open files correctly.; Once this file has been written, in a subsequent session, simply do:. ~~~ {.cpp}; Root > TFile gna49(""na49.root""); Root > na49.Draw(); ~~~. The figure below shows the geometry above using the x3d viewer.; This x3d viewer is invoked by selecting ""View x3d"" in the View menu; of a canvas (See example of this tool bar in TCanvas). \image html g3d_na49.png; */; ////////////////////////////////////////////////////////////////////////////////; /// Geometry default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx:1815,simpl,simply,1815,graf3d/g3d/src/TGeometry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx,1,['simpl'],['simply']
Usability," **argv); {; // Create a new ROOT binary machine independent file.; // Note that this file may contain any kind of ROOT objects, histograms,trees; // pictures, graphics objects, detector geometries, tracks, events, etc..; // This file is now becoming the current directory.; TFile hfile(""htree.root"",""RECREATE"",""Demo ROOT file with histograms & trees"");. // Create some histograms and a profile histogram; TH1F hpx(""hpx"",""This is the px distribution"",100,-4,4);; TH2F hpxpy(""hpxpy"",""py ps px"",40,-4,4,40,-4,4);; TProfile hprof(""hprof"",""Profile of pz versus px"",100,-4,4,0,20);. // Define some simple structures; typedef struct {Float_t x,y,z;} POINT;; typedef struct {; Int_t ntrack,nseg,nvertex;; UInt_t flag;; Float_t temperature;; } EVENTN;; POINT point;; EVENTN eventn;. // Create a ROOT Tree; TTree tree(""T"",""An example of ROOT tree with a few branches"");; tree.Branch(""point"",&point,""x:y:z"");; tree.Branch(""eventn"",&eventn,""ntrack/I:nseg:nvertex:flag/i:temperature/F"");; tree.Branch(""hpx"",""TH1F"",&hpx,128000,0);. Float_t px,py,pz;. // Here we start a loop on 1000 events; for ( Int_t i=0; i<1000; i++) {; gRandom->Rannor(px,py);; pz = px*px + py*py;; const auto random = gRandom->::Rndm(1);. // Fill histograms; hpx.Fill(px);; hpxpy.Fill(px,py,1);; hprof.Fill(px,pz,1);. // Fill structures; point.x = 10*(random-1);; point.y = 5*random;; point.z = 20*random;; eventn.ntrack = Int_t(100*random);; eventn.nseg = Int_t(2*eventn.ntrack);; eventn.nvertex = 1;; eventn.flag = Int_t(random+0.5);; eventn.temperature = 20+random;. // Fill the tree. For each event, save the 2 structures and 3 objects; // In this simple example, the objects hpx, hprof and hpxpy are slightly; // different from event to event. We expect a big compression factor!; tree->Fill();; }; // End of the loop. tree.Print();. // Save all objects in this file; hfile.Write();. // Close the file. Note that this is automatically done when you leave; // the application upon file destruction.; hfile.Close();. return 0;; }; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:14132,simpl,simple,14132,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['simpl'],['simple']
Usability," - when selected object (histogram as a whole) is different from previous; then emit `Picked()` signal; - when selected (highlighted) bin from histogram is different from previous; then emit `Highlighted()` signal. Any user function (or functions) has to be defined; `UserFunction(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y)`.; In example (see below) has name `PrintInfo()`. All parameters of user; function are taken from. void TCanvas::Highlighted(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y). - `pad` is pointer to pad with highlighted histogram; - `obj` is pointer to highlighted histogram; - `x` is highlighted x bin for 1D histogram; - `y` is highlighted y bin for 2D histogram (for 1D histogram not in use). Example how to create a connection from any `TCanvas` object to a user; `UserFunction()` slot (see also `TQObject::Connect()` for additional info). TQObject::Connect(""TCanvas"", ""Highlighted(TVirtualPad*,TObject*,Int_t,Int_t)"",; 0, 0, ""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. or use non-static ""simplified"" function; `TCanvas::HighlightConnect(const char *slot)`. c1->HighlightConnect(""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. NOTE the signal and slot string must have a form; ""(TVirtualPad*,TObject*,Int_t,Int_t)"". root [0] .x $ROOTSYS/tutorials/hsimple.C; root [1] hpx->SetHighlight(kTRUE); root [2] .x hlprint.C. file `hlprint.C`; ~~~ {.cpp}; void PrintInfo(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y); {; auto h = (TH1F *)obj;; if (!h->IsHighlight()) // after highlight disabled; h->SetTitle(""highlight disable"");; else; h->SetTitle(TString::Format(""bin[%03d] (%5.2f) content %g"", x,; h->GetBinCenter(x), h->GetBinContent(x)));; pad->Update();; }. void hlprint(); {; if (!gPad) return;; gPad->GetCanvas()->HighlightConnect(""PrintInfo(TVirtualPad*,TObject*,Int_t,Int_t)"");; }; ~~~. \image html hlsimple.gif ""Highlight mode and simple user function"". For more complex demo please see for example `$ROOTSYS/tutorials/tree/temperature.C` file. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:107244,simpl,simplified,107244,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['simpl'],"['simple', 'simplified']"
Usability," // It is an array of a variable number of tracks per event.; // Each element of the array is an object of class Track with the members:; // private:; // Float_t fPx; //X component of the momentum; // Float_t fPy; //Y component of the momentum; // Float_t fPz; //Z component of the momentum; // Float_t fRandom; //A random track quantity; // Float_t fMass2; //The mass square of this particle; // Float_t fBx; //X intercept at the vertex; // Float_t fBy; //Y intercept at the vertex; // Float_t fMeanCharge; //Mean charge deposition of all hits of this track; // Float_t fXfirst; //X coordinate of the first point; // Float_t fXlast; //X coordinate of the last point; // Float_t fYfirst; //Y coordinate of the first point; // Float_t fYlast; //Y coordinate of the last point; // Float_t fZfirst; //Z coordinate of the first point; // Float_t fZlast; //Z coordinate of the last point; // Double32_t fCharge; //Charge of this track; // Double32_t fVertex[3]; //Track vertex position; // Int_t fNpoint; //Number of points for this track; // Short_t fValid; //Validity criterion; // Int_t fNsp; //Number of points for this track with a special value; // Double32_t *fPointValue; //[fNsp] a special quantity for some point.; // TBits fTriggerBits; //Bits triggered by this track.; //; // An example of a batch program to use the Event/Track classes is given; // in this directory: MainEvent.; // Look also in the same directory at the following macros:; // - eventa.C an example how to read the tree; // - eventb.C how to read events conditionally; //; // During the processing of the event (optionally) also a large number; // of histograms can be filled. The creation and handling of the; // histograms is taken care of by the HistogramManager class.; //; // This version of the Event class is a simplified version suitable for; // use in a multi-threads environment as all Event objects are; // independent from each other.; //; ////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/EventMT.cxx:2917,simpl,simplified,2917,test/EventMT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/EventMT.cxx,1,['simpl'],['simplified']
Usability," /// A <em> simple Region </em> is connected to the remaining graph by just two; /// edges. One edge entering the Region and another one leaving the Region.; ///; /// An <em> extended Region </em> (or just Region) is a subgraph that can be; /// transform into a simple Region. The transformation is done by adding; /// BasicBlocks that merge several entry or exit edges so that after the merge; /// just one entry and one exit edge exists.; ///; /// The \e Entry of a Region is the first BasicBlock that is passed after; /// entering the Region. It is an element of the Region. The entry BasicBlock; /// dominates all BasicBlocks in the Region.; ///; /// The \e Exit of a Region is the first BasicBlock that is passed after; /// leaving the Region. It is not an element of the Region. The exit BasicBlock,; /// postdominates all BasicBlocks in the Region.; ///; /// A <em> canonical Region </em> cannot be constructed by combining smaller; /// Regions.; ///; /// Region A is the \e parent of Region B, if B is completely contained in A.; ///; /// Two canonical Regions either do not intersect at all or one is; /// the parent of the other.; ///; /// The <em> Program Structure Tree</em> is a graph (V, E) where V is the set of; /// Regions in the control flow graph and E is the \e parent relation of these; /// Regions.; ///; /// Example:; ///; /// \verbatim; /// A simple control flow graph, that contains two regions.; ///; /// 1; /// / |; /// 2 |; /// / \ 3; /// 4 5 |; /// | | |; /// 6 7 8; /// \ | /; /// \ |/ Region A: 1 -> 9 {1,2,3,4,5,6,7,8}; /// 9 Region B: 2 -> 9 {2,4,5,6,7}; /// \endverbatim; ///; /// You can obtain more examples by either calling; ///; /// <tt> ""opt -passes='print<regions>' anyprogram.ll"" </tt>; /// or; /// <tt> ""opt -view-regions-only anyprogram.ll"" </tt>; ///; /// on any LLVM file you are interested in.; ///; /// The first call returns a textual representation of the program structure; /// tree, the second one creates a graphical representation using graphviz.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h:1698,simpl,simple,1698,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,1,['simpl'],['simple']
Usability," /// [GNU] '__PRETTY_FUNCTION__'; /// [GNU] '(' compound-statement ')'; /// [GNU] '__builtin_va_arg' '(' assignment-expression ',' type-name ')'; /// [GNU] '__builtin_offsetof' '(' type-name ',' offsetof-member-designator')'; /// [GNU] '__builtin_choose_expr' '(' assign-expr ',' assign-expr ','; /// assign-expr ')'; /// [GNU] '__builtin_FILE' '(' ')'; /// [CLANG] '__builtin_FILE_NAME' '(' ')'; /// [GNU] '__builtin_FUNCTION' '(' ')'; /// [MS] '__builtin_FUNCSIG' '(' ')'; /// [GNU] '__builtin_LINE' '(' ')'; /// [CLANG] '__builtin_COLUMN' '(' ')'; /// [GNU] '__builtin_source_location' '(' ')'; /// [GNU] '__builtin_types_compatible_p' '(' type-name ',' type-name ')'; /// [GNU] '__null'; /// [OBJC] '[' objc-message-expr ']'; /// [OBJC] '\@selector' '(' objc-selector-arg ')'; /// [OBJC] '\@protocol' '(' identifier ')'; /// [OBJC] '\@encode' '(' type-name ')'; /// [OBJC] objc-string-literal; /// [C++] simple-type-specifier '(' expression-list[opt] ')' [C++ 5.2.3]; /// [C++11] simple-type-specifier braced-init-list [C++11 5.2.3]; /// [C++] typename-specifier '(' expression-list[opt] ')' [C++ 5.2.3]; /// [C++11] typename-specifier braced-init-list [C++11 5.2.3]; /// [C++] 'const_cast' '<' type-name '>' '(' expression ')' [C++ 5.2p1]; /// [C++] 'dynamic_cast' '<' type-name '>' '(' expression ')' [C++ 5.2p1]; /// [C++] 'reinterpret_cast' '<' type-name '>' '(' expression ')' [C++ 5.2p1]; /// [C++] 'static_cast' '<' type-name '>' '(' expression ')' [C++ 5.2p1]; /// [C++] 'typeid' '(' expression ')' [C++ 5.2p1]; /// [C++] 'typeid' '(' type-id ')' [C++ 5.2p1]; /// [C++] 'this' [C++ 9.3.2]; /// [G++] unary-type-trait '(' type-id ')'; /// [G++] binary-type-trait '(' type-id ',' type-id ')' [TODO]; /// [EMBT] array-type-trait '(' type-id ',' integer ')'; /// [clang] '^' block-literal; ///; /// constant: [C99 6.4.4]; /// integer-constant; /// floating-constant; /// enumeration-constant -> identifier; /// character-constant; ///; /// id-expression: [C++ 5.1]; /// unqualified-id; /// qu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp:2691,simpl,simple-type-specifier,2691,interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,1,['simpl'],['simple-type-specifier']
Usability," : Too many parameters; /// 10 : z specified but not x and y; /// 11 : z and y specified but not x; /// 12 : y specified but not x; /// 13 : z and x specified but not y; /// 20 : non integer value for parameter number; /// 21 : atan2 requires two arguments; /// 22 : pow requires two arguments; /// 23 : degree of polynomial not specified; /// 24 : Degree of polynomial must be positive; /// 25 : Degree of polynomial must be less than 20; /// 26 : Unknown name; /// 27 : Too many constants in expression; /// 28 : strstr requires two arguments; /// 29 : interpreted or compiled function have to return a numerical type; /// 30 : Bad numerical expression; /// 31 : Part of the variable exist but some of it is not accessible or useable; /// 40 : '(' is expected; /// 41 : ')' is expected; /// 42 : '[' is expected; /// 43 : ']' is expected; ///; /// \image html TFormula_analyze.png; ///; /// ### Special functions; ///; /// By default, the formula is assigned fNumber=0. However, the following; /// formula built with simple functions are assigned fNumber:; ///; /// ""gaus"" 100 (or gausn); /// ""xygaus"" 110; /// ""expo"" 200; /// ""polN"" 300+N; /// ""landau"" 400; /// ""xylandau"" 410; ///; /// Note that expressions like gaus(0), expo(1) will force fNumber=0; ///; /// ### Warning when deriving a class from TFormula; ///; /// If you overload this member function, you also HAVE TO; /// never call the constructor:; ///; /// ~~~ {.cpp}; /// TFormula::TFormula(const char *name,const char *expression); /// ~~~; ///; /// and write your own constructor; ///; /// ~~~ {.cpp}; /// MyClass::MyClass(const char *name,const char *expression) : TFormula(); /// ~~~; ///; /// which has to call the TFormula default constructor and whose implementation; /// should be similar to the implementation of the normal TFormula constructor; ///; /// This is necessary because the normal TFormula constructor call indirectly; /// the virtual member functions Analyze, DefaultString, DefaultValue; /// and DefaultVariable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:4609,simpl,simple,4609,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['simpl'],['simple']
Usability," <-- a root increment; // f(%iv.1); // %iv.2 = add %iv, 2 <-- a root increment; // f(%iv.2); // %iv.scale_m_1 = add %iv, scale-1 <-- a root increment; // f(%iv.scale_m_1); // ...; // %iv.next = add %iv, scale; // %cmp = icmp(%iv, ...); // br %cmp, header, exit; //; // Notably, we do not require that f(%iv), f(%iv.1), etc. be isolated groups of; // instructions. In other words, the instructions in f(%iv), f(%iv.1), etc. can; // be intermixed with eachother. The restriction imposed by this algorithm is; // that the relative order of the isomorphic instructions in f(%iv), f(%iv.1),; // etc. be the same.; //; // First, we collect the use set of %iv, excluding the other increment roots.; // This gives us f(%iv). Then we iterate over the loop instructions (scale-1); // times, having collected the use set of f(%iv.(i+1)), during which we:; // - Ensure that the next unmatched instruction in f(%iv) is isomorphic to; // the next unmatched instruction in f(%iv.(i+1)).; // - Ensure that both matched instructions don't have any external users; // (with the exception of last-in-chain reduction instructions).; // - Track the (aliasing) write set, and other side effects, of all; // instructions that belong to future iterations that come before the matched; // instructions. If the matched instructions read from that write set, then; // f(%iv) or f(%iv.(i+1)) has some dependency on instructions in; // f(%iv.(j+1)) for some j > i, and we cannot reroll the loop. Similarly,; // if any of these future instructions had side effects (could not be; // speculatively executed), and so do the matched instructions, when we; // cannot reorder those side-effect-producing instructions, and rerolling; // fails.; //; // Finally, we make sure that all loop instructions are either loop increment; // roots, belong to simple latch code, parts of validated reductions, part of; // f(%iv) or part of some f(%iv.i). If all of that is true (and all reductions; // have been validated), then we reroll the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:2030,simpl,simple,2030,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,1,['simpl'],['simple']
Usability," = f->Get<TTree>(""t3"");; auto newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");. Long64_t nentries = t3->GetEntries(); // read the number of entries in the t3. for (Long64_t i = 0; i < nentries; i++) {; new_v = gRandom->Gaus(0, 1);; newBranch->Fill();; }. t3->Write("""", TObject::kOverwrite); // save only the new version of the tree; }; ~~~; It is not always possible to add branches to existing datasets stored in TFiles: for example,; these files might not be writeable, just readable. In addition, modifying in place a TTree; causes a new TTree instance to be written and the previous one to be deleted.; For this reasons, ROOT offers the concept of friends for TTree and TChain:; if is good practice to rely on friend trees rather than adding a branch manually. \anchor fullexample; ## An Example. Begin_Macro; ../../../tutorials/tree/tree.C; End_Macro. ~~~ {.cpp}; // A simple example with histograms and a tree; //; // This program creates :; // - a one dimensional histogram; // - a two dimensional histogram; // - a profile histogram; // - a tree; //; // These objects are filled with some random numbers and saved on a file. #include ""TFile.h""; #include ""TH1.h""; #include ""TH2.h""; #include ""TProfile.h""; #include ""TRandom.h""; #include ""TTree.h"". //__________________________________________________________________________; main(int argc, char **argv); {; // Create a new ROOT binary machine independent file.; // Note that this file may contain any kind of ROOT objects, histograms,trees; // pictures, graphics objects, detector geometries, tracks, events, etc..; // This file is now becoming the current directory.; TFile hfile(""htree.root"",""RECREATE"",""Demo ROOT file with histograms & trees"");. // Create some histograms and a profile histogram; TH1F hpx(""hpx"",""This is the px distribution"",100,-4,4);; TH2F hpxpy(""hpxpy"",""py ps px"",40,-4,4,40,-4,4);; TProfile hprof(""hprof"",""Profile of pz versus px"",100,-4,4,0,20);. // Define some simple structures; typedef struct {Float_t x,y,z;} POI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:12044,simpl,simple,12044,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['simpl'],['simple']
Usability," = null;; bool _call_try_exit = true;. objc_exception_try_enter(&d);; if (!setjmp(d.jmp_buf)) {; ... try body ...; } else {; // exception path; id _caught = objc_exception_extract(&d);. // enter new try scope for handlers; if (!setjmp(d.jmp_buf)) {; ... match exception and execute catch blocks ... // fell off end, rethrow.; _rethrow = _caught;; ... jump-through-finally to finally_rethrow ...; } else {; // exception in catch block; _rethrow = objc_exception_extract(&d);; _call_try_exit = false;; ... jump-through-finally to finally_rethrow ...; }; }; ... jump-through-finally to finally_end ... finally:; if (_call_try_exit); objc_exception_try_exit(&d);. ... finally block ....; ... dispatch to finally destination ... finally_rethrow:; objc_exception_throw(_rethrow);. finally_end:; }. This framework differs slightly from the one gcc uses, in that gcc; uses _rethrow to determine if objc_exception_try_exit should be called; and if the object should be rethrown. This breaks in the face of; throwing nil and introduces unnecessary branches. We specialize this framework for a few particular circumstances:. - If there are no catch blocks, then we avoid emitting the second; exception handling context. - If there is a catch-all catch block (i.e. @catch(...) or @catch(id; e)) we avoid emitting the code to rethrow an uncaught exception. - FIXME: If there is no @finally block we can do a few more; simplifications. Rethrows and Jumps-Through-Finally; --. '@throw;' is supported by pushing the currently-caught exception; onto ObjCEHStack while the @catch blocks are emitted. Branches through the @finally block are handled with an ordinary; normal cleanup. We do not register an EH cleanup; fragile-ABI ObjC; exceptions are not compatible with C++ exceptions, and this is; hardly the only place where this will go wrong. @synchronized(expr) { stmt; } is emitted as if it were:; id synch_value = expr;; objc_sync_enter(synch_value);; @try { stmt; } @finally { objc_sync_exit(synch_value); }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:2910,simpl,simplifications,2910,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['simpl'],['simplifications']
Usability," Author: Bertrand Bellenot 20/06/06; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGTextEditor; \ingroup guiwidgets. A simple text editor that uses the TGTextEdit widget.; It provides all functionalities of TGTextEdit as copy, paste, cut,; search, go to a given line number. In addition, it provides the; possibilities for compiling, executing or interrupting a running; macro. This class can be used in following ways:; - with file name as argument:; new TGTextEditor(""hsimple.C"");; - with a TMacro* as argument:; TMacro *macro = new TMacro(""hsimple.C"");; new TGTextEditor(macro);. ### Basic Features:. #### New Document. To create a new blank document, select File menu / New, or click; the New toolbar button. It will create a new instance of; TGTextEditor. #### Open/Save File. To open a file, select File menu / Open or click on the Open; toolbar button. This will bring up the standard File Dialog for; opening files.; If the current document has not been saved yet, you will be asked; either to save or abandon the changes.; To save the file using the same name, select File menu / Save or; the toolbar Save button. To change the file n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:1043,simpl,simple,1043,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['simpl'],['simple']
Usability," Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be varied (i.e. it is not possible to; call \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" on them. These limitations will be lifted in future releases. See the Vary() method for more information and [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) ; for an example usage of Vary and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in the analysis. \anchor rnode; ### RDataFrame objects as function arguments and return values; RDataFrame variables/nodes are relatively cheap to copy and it's possible to both pass them to (or move them into); functions and to return them from functions. However, in general each dataframe node will have a different C++ type,; wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:59543,feedback,feedback,59543,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['feedback'],['feedback']
Usability," FIXME: In the absence of cache misses (i.e. L1I/L1D/iTLB/dTLB hits/misses),; // and load/store conflicts, the latency of a load is determined by the depth; // of the load pipeline. So, we could use field `LoadLatency` in the; // MCSchedModel to model that latency.; // Field `LoadLatency` often matches the so-called 'load-to-use' latency from; // L1D, and it usually already accounts for any extra latency due to data; // forwarding.; // When doing throughput analysis, `LoadLatency` is likely to; // be a better predictor of load latency than instruction latency. This is; // particularly true when simulating code with temporal/spatial locality of; // memory accesses.; // Using `LoadLatency` (instead of the instruction latency) is also expected; // to improve the load queue allocation for long latency instructions with; // folded memory operands (See PR39829).; //; // FIXME: On some processors, load/store operations are split into multiple; // uOps. For example, X86 AMD Jaguar natively supports 128-bit data types, but; // not 256-bit data types. So, a 256-bit load is effectively split into two; // 128-bit loads, and each split load consumes one 'LoadQueue' entry. For; // simplicity, this class optimistically assumes that a load instruction only; // consumes one entry in the LoadQueue. Similarly, store instructions only; // consume a single entry in the StoreQueue.; // In future, we should reassess the quality of this design, and consider; // alternative approaches that let instructions specify the number of; // load/store queue entries which they consume at dispatch stage (See; // PR39830).; //; // An instruction that both 'mayStore' and 'HasUnmodeledSideEffects' is; // conservatively treated as a store barrier. It forces older store to be; // executed before newer stores are issued.; //; // An instruction that both 'MayLoad' and 'HasUnmodeledSideEffects' is; // conservatively treated as a load barrier. It forces older loads to execute; // before newer loads are issued.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h:1382,simpl,simplicity,1382,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,1,['simpl'],['simplicity']
Usability," Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; ***********************************************************************************/; /*! \class TMVA::MethodPDERS; \ingroup TMVA. This is a generalization of the above Likelihood methods to \f$ N_{var} \f$; dimensions, where \f$ N_{var} \f$ is the number of input variables; used in the MVA. If the multi-dimensional probability density functions; (PDFs) for signal and background were known, this method contains the entire; physical information, and is therefore optimal. Usually, kernel estimation; methods are used to approximate the PDFs using the events from the; training sample. A very simple probability density estimator (PDE) has been suggested; in [hep-ex/0211019](http://arxiv.org/abs/hep-ex/0211019). The; PDE for a given test event is obtained from counting the (normalized); number of signal and background (training) events that occur in the; ""vicinity"" of the test event. The volume that describes ""vicinity"" is; user-defined. A [search method based on binary-trees](http://arxiv.org/abs/hep-ex/0211019); is used to effectively reduce the; selection time for the range search. Three different volume definitions; are optional:. - *MinMax:* the volume is defined in each dimension with respect; to the full variable range found in the training sample.; - *RMS:* the volume is defined in each dimensions with respect; to the RMS estimated from the training sample.; - *Adaptive:* a volume element is defined in each dimensions with; respect to the RMS estimated from the training sample. The overall; scale of the volume element is then determined for each event so; that the total number of events confined in the volume ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:1721,simpl,simple,1721,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['simpl'],['simple']
Usability," HP26); - [Drawing of 3D implicit functions](\ref HP27); - [Associated functions drawing](\ref HP28); - [Drawing using OpenGL](\ref HP29); - [General information: plot types and supported options](\ref HP29a); - [TH3 as color boxes](\ref HP290); - [TH3 as boxes (spheres)](\ref HP29b); - [TH3 as iso-surface(s)](\ref HP29c); - [TF3 (implicit function)](\ref HP29d); - [Parametric surfaces](\ref HP29e); - [Interaction with the plots](\ref HP29f); - [Selectable parts](\ref HP29g); - [Rotation and zooming](\ref HP29h); - [Panning](\ref HP29i); - [Box cut](\ref HP29j); - [Plot specific interactions (dynamic slicing etc.)](\ref HP29k); - [Surface with option ""GLSURF""](\ref HP29l); - [TF3](\ref HP29m); - [Box](\ref HP29n); - [Iso](\ref HP29o); - [Parametric plot](\ref HP29p); - [Highlight mode for histogram](\ref HP30); - [Highlight mode and user function](\ref HP30a). \anchor HP00; ## Introduction. Histograms are drawn via the `THistPainter` class. Each histogram has a; pointer to its own painter (to be usable in a multithreaded program). When the; canvas has to be redrawn, the `Paint` function of each objects in the; pad is called. In case of histograms, `TH1::Paint` invokes directly; `THistPainter::Paint`. To draw a histogram `h` it is enough to do:. h->Draw();. `h` can be of any kind: 1D, 2D or 3D. To choose how the histogram will; be drawn, the `Draw()` method can be invoked with an option. For instance; to draw a 2D histogram as a lego plot it is enough to do:. h->Draw(""lego"");. `THistPainter` offers many options to paint 1D, 2D and 3D histograms. When the `Draw()` method of a histogram is called for the first time; (`TH1::Draw`), it creates a `THistPainter` object and saves a; pointer to this ""painter"" as a data member of the histogram. The; `THistPainter` class specializes in the drawing of histograms. It is; separated from the histogram so that one can have histograms without the; graphics overhead, for example in a batch program. Each histogram having its own; pain",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3161,usab,usable,3161,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['usab'],['usable']
Usability," No, we will just need to replicate the; ones that we have already created. ~~~ {.cpp}; chamber->AddNode(wire_co, 1, new TGeoTranslation(-0.2,0,0));; chamber->AddNode(wire_co, 2, new TGeoTranslation(0.2,0,0));; ~~~. The 2 nodes that we have created inside chamber will both point to a wire_co; object, but will be completely distinct : WIRE_CO_1 and WIRE_CO_2. We will; want now to place symmetrically 1000 chambers on a pad, following a pattern; of 20 rows and 50 columns. One way to do this will be to replicate our chamber; by positioning it 1000 times in different positions of the pad. Unfortunately,; this is far from being the optimal way of doing what we want.; Imagine that we would like to find out which of the 1000 chambers is containing; a (x,y,z) point defined in the pad reference. You will never have to do that,; since the modeller will take care of it for you, but let's guess what it has; to do. The most simple algorithm will just loop over all daughters, convert; the point from mother to local reference and check if the current chamber; contains the point or not. This might be efficient for pads with few chambers,; but definitely not for 1000. Fortunately the modeler is smarter than that and; create for each volume some optimization structures called voxels (see Voxelization); to minimize the penalty having too many daughters, but if you have 100 pads like; this in your geometry you will anyway loose a lot in your tracking performance. The way out when volumes can be arranged according to simple patterns is the; usage of divisions. We will describe them in detail later on. Let's think now; at a different situation : instead of 1000 chambers of the same type, we may; have several types of chambers. Let's say all chambers are cylindrical and have; a wire inside, but their dimensions are different. However, we would like all; to be represented by a single volume family, since they have the same properties.; */; /** \class TGeoVolumeMulti; \ingroup Geometry_class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:9782,simpl,simple,9782,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['simpl'],['simple']
Usability," RooWorkspace objects that; /// can clone PDFs into a series of variations that are joined together; /// into a RooSimultaneous PDF.; ///; /// ## Splitting a single PDF; /// The simplest use case is to take a workspace PDF as prototype and; /// ""split"" a parameter of that PDF into two specialized parameters; /// depending on a category in the dataset.; ///; /// For example, given a Gaussian; /// PDF \f$ G(x \,|\, m,s) \f$ we want to construct a \f$ G_a(x \,|\, m_a,s) \f$ and a \f$ G_b(x \,|\, m_b,s) \f$; /// with different mean parameters to be fit to a dataset with observables; /// \f$ (x,c) \f$ where \f$ c \f$ is a category with states 'a' and 'b'.; ///; /// Using RooSimWSTool, one can create a simultaneous PDF from \f$ G_a \f$ and \f$ G_b \f$; /// from \f$ G \f$ with the following commands:; /// ```; /// RooSimWSTool wst(wspace);; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c""));; /// ```; ///; /// #### Splitting using a product category; /// From this simple example one can go to builds of arbitrary complexity; /// by specifying multiple SplitParam arguments on multiple parameters; /// involving multiple splitting categories. Splits can also be performed; /// in the product of multiple categories, *i.e.*,; /// ```; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c,d""));; /// ```; /// splits the parameter \f$ m \f$ in the product of the states of \f$ c \f$ and; /// \f$ d \f$.; ///; /// #### Constrained split; /// Another possibility; /// is the ""constrained"" split, which clones the parameter for all but one state; /// and inserts a formula specialization in a chosen state that evaluates; /// to \f$ 1 - \sum_i(a_i) \f$ where \f$ a_i \f$ are all other specializations. For example,; /// given a category \f$ c \f$ with the states `""A"",""B"",""C"",""D""`, the specification; /// ```; /// SplitParamConstrained(""m"",""c"",""D""); /// ```; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:1813,simpl,simple,1813,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['simpl'],['simple']
Usability, The current cases; /// that trigger this are:; ///; /// * When parsing X::Y (with no 'typename') where X is dependent; /// * When parsing X<Y> where X is undeclared; ///; /// decl-specifier:; /// storage-class-specifier; /// type-specifier; /// function-specifier; /// 'friend'; /// 'typedef'; /// [C++11] 'constexpr'; /// [C++20] 'consteval'; /// [GNU] attributes declaration-specifiers[opt]; ///; /// storage-class-specifier:; /// 'register'; /// 'static'; /// 'extern'; /// 'mutable'; /// 'auto'; /// [GNU] '__thread'; /// [C++11] 'thread_local'; /// [C11] '_Thread_local'; ///; /// function-specifier:; /// 'inline'; /// 'virtual'; /// 'explicit'; ///; /// typedef-name:; /// identifier; ///; /// type-specifier:; /// simple-type-specifier; /// class-specifier; /// enum-specifier; /// elaborated-type-specifier; /// typename-specifier; /// cv-qualifier; ///; /// simple-type-specifier:; /// '::'[opt] nested-name-specifier[opt] type-name; /// '::'[opt] nested-name-specifier 'template'; /// simple-template-id [TODO]; /// 'char'; /// 'wchar_t'; /// 'bool'; /// 'short'; /// 'int'; /// 'long'; /// 'signed'; /// 'unsigned'; /// 'float'; /// 'double'; /// 'void'; /// [GNU] typeof-spec,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:1535,simpl,simple-type-specifier,1535,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,2,['simpl'],['simple-type-specifier']
Usability," Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, divided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especially the; derivative of compound functions, one can write:. - for a neuron: product of the local derivative with the; weighted sum on the outputs of the derivatives.; - for a synapse: product of the input with the local derivative; of the output neuron. This computation is called back-propagation of the errors. A; loop over all examples is called an epoch.; Six learning methods are implemented. #### Stochastic minimization:. is the most trivial learning method. This is the Robbins-Monro; stochastic approximation applied to multilayer perceptrons. The; weights are updated after each example according to the formula:; \f$w_{ij}(t+1) = w_{ij}(t) + \Delta w_{ij}(t)\f$. with. \f$\Delta w_{ij}(t) = - \eta(d e_p / d w_{ij} + \delta) + \epsilon \Delta w_{ij}(t-1)\f$. The parameters for this method are Eta, EtaDecay, Delta and; Epsilon. #### Steepest descent with fixed step size (batch learning):. It is the same as the stochastic; minimization, but the weights are updated after considering all the; examples, with the total derivative dEdw. The parameters for this; method are Eta, EtaDecay, Delta and Epsilon. #### Steepest descent algorithm:. Weights are set to the minimum along the line defined by the gradient. The; only parameter for this method is Tau. Lower tau = higher precision =; slower search. A value Tau = 3 seems reasonable. #### Conjugate gradients with the Polak-Ribiere updating formula:. Weights are set to the minimum al",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:4594,learn,learning,4594,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['learn'],['learning']
Usability," Users are responsible for the thread-safety of this callable when executing with implicit multi-threading enabled. |; | ForeachSlot() | Same as Foreach(), but the user-defined function must take an extra `unsigned int slot` as its first parameter. `slot` will take a different value, `0` to `nThreads - 1`, for each thread of execution. This is meant as a helper in writing thread-safe Foreach() actions when using RDataFrame after ROOT::EnableImplicitMT(). ForeachSlot() works just as well with single-thread execution: in that case `slot` will always be `0`. |; | Snapshot() | Write the processed dataset to disk, in a new TTree and TFile. Custom columns can be saved as well, filtered entries are not saved. Users can specify which columns to save (default is all). Snapshot, by default, overwrites the output file if it already exists. Snapshot() can be made *lazy* setting the appropriate flag in the snapshot options.|. ### Queries. These operations do not modify the dataframe or book computations but simply return information on the RDataFrame object. | **Operation** | **Description** |; |---------------------|-----------------|; | Describe() | Get useful information describing the dataframe, e.g. columns and their types. |; | GetColumnNames() | Get the names of all the available columns of the dataset. |; | GetColumnType() | Return the type of a given column as a string. |; | GetColumnTypeNamesList() | Return the list of type names of columns in the dataset. |; | GetDefinedColumnNames() | Get the names of all the defined columns. |; | GetFilterNames() | Return the names of all filters in the computation graph. |; | GetNRuns() | Return the number of event loops run by this RDataFrame instance so far. |; | GetNSlots() | Return the number of processing slots that RDataFrame will use during the event loop (i.e. the concurrency level). |; | SaveGraph() | Store the computation graph of an RDataFrame in [DOT format (graphviz)](https://en.wikipedia.org/wiki/DOT_(graph_descriptio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:10278,simpl,simply,10278,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['simpl'],['simply']
Usability," X and inserts an element from the second; /// argument \a Y as selected by the third argument \a N. That result then; /// has elements zeroed out also as selected by the third argument \a N. The; /// resulting 128-bit vector of [4 x float] is then returned.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128 _mm_insert_ps(__m128 X, __m128 Y, const int N);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VINSERTPS </c> instruction.; ///; /// \param X; /// A 128-bit vector source operand of [4 x float]. With the exception of; /// those bits in the result copied from parameter \a Y and zeroed by bits; /// [3:0] of \a N, all bits from this parameter are copied to the result.; /// \param Y; /// A 128-bit vector source operand of [4 x float]. One single-precision; /// floating-point element from this source, as determined by the immediate; /// parameter, is copied to the result.; /// \param N; /// Specifies which bits from operand \a Y will be copied, which bits in the; /// result they will be copied to, and which bits in the result will be; /// cleared. The following assignments are made: \n; /// Bits [7:6] specify the bits to copy from operand \a Y: \n; /// 00: Selects bits [31:0] from operand \a Y. \n; /// 01: Selects bits [63:32] from operand \a Y. \n; /// 10: Selects bits [95:64] from operand \a Y. \n; /// 11: Selects bits [127:96] from operand \a Y. \n; /// Bits [5:4] specify the bits in the result to which the selected bits; /// from operand \a Y are copied: \n; /// 00: Copies the selected bits from \a Y to result bits [31:0]. \n; /// 01: Copies the selected bits from \a Y to result bits [63:32]. \n; /// 10: Copies the selected bits from \a Y to result bits [95:64]. \n; /// 11: Copies the selected bits from \a Y to result bits [127:96]. \n; /// Bits[3:0]: If any of these bits are set, the corresponding result; /// element is cleared.; /// \returns A 128-bit vector of [4 x float] containing the copied; /// single-precision floating point ele",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1182,clear,cleared,1182,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['clear'],['cleared']
Usability," a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide IDCT routines with various output sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 input DCT block.; *; * For N<8 we simply take the corresponding low-frequency coefficients of; * the 8x8 input DCT block and apply an NxN point IDCT on the sub-block; * to yield the downscaled outputs.; * This can be seen as direct low-pass downsampling from the DCT domain; * point of view rather than the usual spatial domain point of view,; * yielding significant computational savings and results at least; * as good as common bilinear (averaging) spatial downsampling.; *; * For N>8 we apply a partial NxN IDCT on the 8 input coefficients as; * lower frequencies and higher frequencies assumed to be zero.; * It turns out that the computational effort is similar to the 8x8 IDCT; * regarding the output size.; * Furthermore, the scaling and descaling is the same for all IDCT sizes.; *; * CAUTION: We rely on the FIX() macro except for the N=1,2,4,8 cases; * since there would be too many additional constants to pre-calculate.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:1711,simpl,simply,1711,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['simpl'],['simply']
Usability," and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsCategory.cxx; \class RooAbsCategory; \ingroup Roofitcore. RooAbsCategory is the base class for objects that represent a discrete value with a finite number of states. Each state is denoted by an integer and a name. Both can be used to retrieve and; set states, but referring to states by index is more efficient. Conversion between; index and name can be done using lookupName() or lookupIndex().; It is possible to iterate through all defined states using begin() and end(). For category classes deriving from RooAbsCategory, states can only be evaluated, *i.e.*, queried.; Refer to RooAbsCategoryLValue and its derived classes for categories where states can also be set. The; simplest category class whose states can be set, queried and saved in a dataset, refer to RooCategory. ### Interface change in ROOT-6.22; Category data were based in the class RooCatType, holding an index state and a category name truncated to 256; characters. This wastes 64 bytes of storage space per entry, and prevents fast retrieval of category data.; Since ROOT-6.22, categories are only represented by an integer. RooAbsCategory::lookupName() can be used to; retrieve the corresponding state name. There is no limit for the length of the state name. To not break old code, the old RooCatType interfaces are still available. Whenever possible,; the following replacements should be used:; - lookupType() \f$ \rightarrow \f$ lookupName() / lookupIndex(); - typeIterator() \f$ \rightarrow \f$ range-based for loop / begin() / end(); - isValidIndex(Int_t index) \f$ \rightarrow \f$ hasIndex(); - isValid(const RooCatType&) \f$ \rightarrow \f$ hasIndex() / hasLabel(); **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx:1391,simpl,simplest,1391,roofit/roofitcore/src/RooAbsCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx,1,['simpl'],['simplest']
Usability," as the special type [ROOT::RVec](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html): for example, a column containing an array of floating point numbers can be read as a ROOT::RVecF. C-style arrays (with variable or static size), STL vectors and most other collection types can be read this way. RVec is a container similar to std::vector (and can be used just like a std::vector) but it also offers a rich interface to operate on the array elements in a vectorised fashion, similarly to Python's NumPy arrays. For example, to fill a histogram with the ""pt"" of selected particles for each event, Define() can be used to create a column that contains the desired array elements as follows:. ~~~{.cpp}; // h is filled with all the elements of `good_pts`, for each event; auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); .Histo1D(""good_pts"");; ~~~. And in Python:. ~~~{.py}; h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); ~~~. Learn more at ROOT::VecOps::RVec. \anchor transformations; ## Transformations: manipulating data; \anchor Filters; ### Filters; A filter is created through a call to `Filter(f, columnList)` or `Filter(filterString)`. In the first overload, `f` can; be a function, a lambda expression, a functor class, or any other callable object. It must return a `bool` signalling; whether the event has passed the selection (`true`) or not (`false`). It should perform ""read-only"" operations on the; columns, and should not have side-effects (e.g. modification of an external or static variable) to ensure correctness; when implicit multi-threading is active. The second overload takes a string with a valid C++ expression in which column; names are used as variable names (e.g. `Filter(""x[0] + x[1] > 0"")`). This is a convenience feature that comes with a; certain runtime overhead: C++ code has to be generated on the fly from this expression before using it in the event; loop. See the paragraph about ""Just-in-time compilatio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:28271,Learn,Learn,28271,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['Learn'],['Learn']
Usability," as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kern",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:2662,simpl,simplification,2662,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['simpl'],['simplification']
Usability," bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1113,simpl,simple,1113,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['simpl'],['simple']
Usability," by comas. Hidden layers are just described; by the number of neurons. The layers are separated by colons.; In addition, input/output layer formulas can be preceded by '@' (e.g ""@out""); if one wants to also normalize the data from the TTree.; Input and outputs are taken from the TTree given as second argument.; Expressions are evaluated as for TTree::Draw(), arrays are expended in; distinct neurons, one for each index.; This can only be done for fixed-size arrays.; If the formula ends with ""!"", softmax functions are used for the output layer.; One defines the training and test datasets by TEventLists. Example:; ~~~ {.cpp}; TMultiLayerPerceptron(""x,y:10:5:f"",inputTree);; ~~~. Both the TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exactly as; for a TCut. The learning method is defined using the TMultiLayerPerceptron::SetLearningMethod() .; Learning methods are :. - TMultiLayerPerceptron::kStochastic,; - TMultiLayerPerceptron::kBatch,; - TMultiLayerPerceptron::kSteepestDescent,; - TMultiLayerPerceptron::kRibierePolak,; - TMultiLayerPerceptron::kFletcherReeves,; - TMultiLayerPerceptron::kBFGS. A weight can be assigned to events, either in the constructor, either; with TMultiLayerPerceptron::SetEventWeight(). In addition, the TTree weight; is taken into account. Finally, one starts the training with; TMultiLayerPerceptron::Train(Int_t nepoch, Option_t* options). The; first argument is the number of epochs while option is a string that; can contain: ""text"" (simple text output) , ""graph""; (evoluting graphical training curves), ""update=X"" (step for; the text/graph output update) or ""+"" (will skip the; randomisation and start from the previous values). All combinations; are available. Example:; ~~~ {.cpp}; net.Train(100,""text, graph, update=10"");; ~~~. When the neural net is trained,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:7635,learn,learning,7635,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['learn'],['learning']
Usability," channels (RGB).; * 4: Three color channels and an alpha channel (RGBA).; *; * The components are encoded in one of two ways:; *; * a) As a small integer, value 0..255, contained in a single byte. For the; * alpha channel the original value is simply value/255. For the color or; * luminance channels the value is encoded according to the sRGB specification; * and matches the 8-bit format expected by typical display devices.; *; * The color/gray channels are not scaled (pre-multiplied) by the alpha; * channel and are suitable for passing to color management software.; *; * b) As a value in the range 0..65535, contained in a 2-byte integer. All; * channels can be converted to the original value by dividing by 65535; all; * channels are linear. Color channels use the RGB encoding (RGB end-points) of; * the sRGB specification. This encoding is identified by the; * PNG_FORMAT_FLAG_LINEAR flag below.; *; * When the simplified API needs to convert between sRGB and linear colorspaces,; * the actual sRGB transfer curve defined in the sRGB specification (see the; * article at <https://en.wikipedia.org/wiki/SRGB>) is used, not the gamma=1/2.2; * approximation used elsewhere in libpng.; *; * When an alpha channel is present it is expected to denote pixel coverage; * of the color or luminance channels and is returned as an associated alpha; * channel: the color/gray channels are scaled (pre-multiplied) by the alpha; * value.; *; * The samples are either contained directly in the image data, between 1 and 8; * bytes per pixel according to the encoding, or are held in a color-map indexed; * by bytes in the image data. In the case of a color-map the color-map entries; * are individual samples, encoded as above, and the image data has one byte per; * pixel to select the relevant sample from the color-map.; */; /* PNG_FORMAT_*; *; * #defines to be used in png_image::format. Each #define identifies a; * particular layout of sample data and, if present, alpha values. There are; * separa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:1181,simpl,simplified,1181,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['simpl'],['simplified']
Usability," copy of the object is shared; memory call Update() also whenever the mapped object(s) change(s); call Update() to put a fresh copy in the shared memory. This extra; step is necessary since it is not possible to share objects with; virtual pointers between processes (the vtbl ptr points to the; originators unique address space and can not be used by the; consumer process(es)). Consumer processes can map the memory region; from this file and access the objects stored in it via the Get(); method (which returns a copy of the object stored in the shared; memory with correct vtbl ptr set). Only objects of classes with a; Streamer() member function defined can be shared. I know the current implementation is not ideal (you need to copy to; and from the shared memory file) but the main problem is with the; class' virtual_table pointer. This pointer points to a table unique; for every process. Therefore, different options are:; -# One could allocate an object directly in shared memory in the; producer, but the consumer still has to copy the object from; shared memory into a local object which has the correct vtbl; pointer for that process (copy ctor's can be used for creating; the local copy).; -# Another possibility is to only allow objects without virtual; functions in shared memory (like simple C structs), or to; forbid (how?) the consumer from calling any virtual functions; of the objects in shared memory.; -# A last option is to copy the object internals to shared memory; and copy them again from there. This is what is done in the; TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the; full inheritance chain) to rebuild the object in the consumer. Most; classes don't provide these copy ctor's, especially not when objects; contain collections, etc. 2) is too limiting or dangerous (calling; accidentally a virtual function will segv). So since we have a; robust Streamer mechanism I opted for 3).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:1506,simpl,simple,1506,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['simpl'],['simple']
Usability," display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter019.jpg; ///; /// Height modes group, display mode = surface, 64 x 64 channels.; /// \image html spectrumpainter020.jpg; ///; /// Height modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter021.jpg; ///; /// Light - height modes group, display mode = surface, 64 x 64 channels. The weight; /// between both shading algorithms is set to 0.5. One can observe the influence of; /// both shadings.; ///; /// #### Function: TSpectrum2Painter::SetPenAttr(Int_t color,Int_t style,Int_t width); ///; /// Using this function one can change pen color, pen style and pen width.; /// Possible pen styles are:; ///; /// - ` kPenStyleSolid,`; /// - ` kPenStyleDash,`; /// - ` kPenStyleDot,`; /// - ` kPenStyleDashDot.`; ///; /// Default values:; ///; /// - ` color = kBlack`; /// - ` style = kPenStyleSolid`; /// - ` width = 1`; ///; /// \image html spectrumpainter022.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels. Pen width = 3.; ///; /// #### Function: TSpectrum2Painter::SetNodes(Int_t nodesx,Int_t nodesy); ///; /// Sometimes the displayed region is rather large. When displaying all channels; /// pictures become very dense and complicated. It is very difficult to understand; /// overall shape of the data. Therefore in the package we have implemented the; /// possibility to change the density of displayed channels. Only channels; /// coinciding with given nodes are displayed. In the next figure we introduce the; /// example of the above presented spectrum with number of nodes set to 64x64.; ///; /// Default values:; ///; /// - ` nodesx = Xmax-Xmin+1`; /// - ` nodesy = Ymax-Ymin+1`; ///; /// \image html spectrumpainter023.jpg; ///; /// Simple modes group, display mode = grid, 256 x 256 channels.; /// Number of nodes is 64x64.; ///; /// #### Function: void TSpectrum2Painter::SetAngles (Int_t alpha,Int_t beta, Int_t view); ///; /// One can change the angles of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:5218,Simpl,Simple,5218,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['Simpl'],['Simple']
Usability," distributedly. Nonetheless, not all; parts of the RDataFrame API currently work with this package. The subset that is currently available is:; - AsNumpy; - Count; - Define; - DefinePerSample; - Filter; - Graph; - Histo[1,2,3]D; - HistoND; - Max; - Mean; - Min; - Profile[1,2,3]D; - Redefine; - Snapshot; - Stats; - StdDev; - Sum; - Systematic variations: Vary and [VariationsFor](\ref ROOT::RDF::Experimental::VariationsFor).; - Parallel submission of distributed graphs: [RunGraphs](\ref ROOT::RDF::RunGraphs).; - Information about the dataframe: GetColumnNames. with support for more operations coming in the future. Data sources other than TTree and TChain (e.g. CSV, RNTuple) are; currently not supported. \note The distributed RDataFrame module requires at least Python version 3.8. ### Connecting to a Spark cluster. In order to distribute the RDataFrame workload, you can connect to a Spark cluster you have access to through the; official [Spark API](https://spark.apache.org/docs/latest/rdd-programming-guide.html#initializing-spark), then hook the; connection instance to the distributed `RDataFrame` object like so:. ~~~{.py}; import pyspark; import ROOT. # Create a SparkContext object with the right configuration for your Spark cluster; conf = SparkConf().setAppName(appName).setMaster(master); sc = SparkContext(conf=conf). # Point RDataFrame calls to the Spark specific RDataFrame; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. # The Spark RDataFrame constructor accepts an optional ""sparkcontext"" parameter; # and it will distribute the application to the connected cluster; df = RDataFrame(""mytree"", ""myfile.root"", sparkcontext = sc); ~~~. If an instance of [SparkContext](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.SparkContext.html); is not provided, the default behaviour is to create one in the background for you. ### Connecting to a Dask cluster. Similarly, you can connect to a Dask cluster by creating your own connection objec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:38259,guid,guide,38259,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['guid'],['guide']
Usability," field is the offset into the base type.; // The last field has the same meaning as the last field of our scalar TBAA:; // it's an integer which if equal to 1 indicates that the access is ""constant"".; //; // The struct type node has a name and a list of pairs, one pair for each member; // of the struct. The first element of each pair is a type node (a struct type; // node or a scalar type node), specifying the type of the member, the second; // element of each pair is the offset of the member.; //; // Given an example; // typedef struct {; // short s;; // } A;; // typedef struct {; // uint16_t s;; // A a;; // } B;; //; // For an access to B.a.s, we attach !5 (a path tag node) to the load/store; // instruction. The base type is !4 (struct B), the access type is !2 (scalar; // type short) and the offset is 4.; //; // !0 = !{!""Simple C/C++ TBAA""}; // !1 = !{!""omnipotent char"", !0} // Scalar type node; // !2 = !{!""short"", !1} // Scalar type node; // !3 = !{!""A"", !2, i64 0} // Struct type node; // !4 = !{!""B"", !2, i64 0, !3, i64 4}; // // Struct type node; // !5 = !{!4, !2, i64 4} // Path tag node; //; // The struct type nodes and the scalar type nodes form a type DAG.; // Root (!0); // char (!1) -- edge to Root; // short (!2) -- edge to char; // A (!3) -- edge with offset 0 to short; // B (!4) -- edge with offset 0 to short and edge with offset 4 to A; //; // To check if two tags (tagX and tagY) can alias, we start from the base type; // of tagX, follow the edge with the correct offset in the type DAG and adjust; // the offset until we reach the base type of tagY or until we reach the Root; // node.; // If we reach the base type of tagY, compare the adjusted offset with; // offset of tagY, return Alias if the offsets are the same, return NoAlias; // otherwise.; // If we reach the Root node, perform the above starting from base type of tagY; // to see if we reach base type of tagX.; //; // If they have different roots, they're part of different potentially; // unrelated ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp:3446,Simpl,Simple,3446,interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,1,['Simpl'],['Simple']
Usability," file. If you are writing the file, fill in the information; * you want to put into the PNG file, using png_set_*() functions, then; * call png_write_info().; *; * The names chosen should be very close to the PNG specification, so; * consult that document for information about the meaning of each field.; *; * With libpng < 0.95, it was only possible to directly set and read the; * the values in the png_info_struct, which meant that the contents and; * order of the values had to remain fixed. With libpng 0.95 and later,; * however, there are now functions that abstract the contents of; * png_info_struct from the application, so this makes it easier to use; * libpng with dynamic libraries, and even makes it possible to use; * libraries that don't have all of the libpng ancillary chunk-handing; * functionality. In libpng-1.5.0 this was moved into a separate private; * file that is not visible to applications.; *; * The following members may have allocated storage attached that should be; * cleaned up before the structure is discarded: palette, trans, text,; * pcal_purpose, pcal_units, pcal_params, hist, iccp_name, iccp_profile,; * splt_palettes, scal_unit, row_pointers, and unknowns. By default, these; * are automatically freed when the info structure is deallocated, if they were; * allocated internally by libpng. This behavior can be changed by means; * of the png_data_freer() function.; *; * More allocation details: all the chunk-reading functions that; * change these members go through the corresponding png_set_*; * functions. A function to clear these members is available: see; * png_free_data(). The png_set_* functions do not depend on being; * able to point info structure members to any of the storage they are; * passed (they make their own copies), EXCEPT that the png_set_text; * functions use the same storage passed to them in the text_ptr or; * itxt_ptr structure argument, and the png_set_rows and png_set_unknowns; * functions do not make their own copies.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h:2199,clear,clear,2199,graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,1,['clear'],['clear']
Usability," from the second; /// argument \a Y as selected by the third argument \a N. That result then; /// has elements zeroed out also as selected by the third argument \a N. The; /// resulting 128-bit vector of [4 x float] is then returned.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128 _mm_insert_ps(__m128 X, __m128 Y, const int N);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VINSERTPS </c> instruction.; ///; /// \param X; /// A 128-bit vector source operand of [4 x float]. With the exception of; /// those bits in the result copied from parameter \a Y and zeroed by bits; /// [3:0] of \a N, all bits from this parameter are copied to the result.; /// \param Y; /// A 128-bit vector source operand of [4 x float]. One single-precision; /// floating-point element from this source, as determined by the immediate; /// parameter, is copied to the result.; /// \param N; /// Specifies which bits from operand \a Y will be copied, which bits in the; /// result they will be copied to, and which bits in the result will be; /// cleared. The following assignments are made: \n; /// Bits [7:6] specify the bits to copy from operand \a Y: \n; /// 00: Selects bits [31:0] from operand \a Y. \n; /// 01: Selects bits [63:32] from operand \a Y. \n; /// 10: Selects bits [95:64] from operand \a Y. \n; /// 11: Selects bits [127:96] from operand \a Y. \n; /// Bits [5:4] specify the bits in the result to which the selected bits; /// from operand \a Y are copied: \n; /// 00: Copies the selected bits from \a Y to result bits [31:0]. \n; /// 01: Copies the selected bits from \a Y to result bits [63:32]. \n; /// 10: Copies the selected bits from \a Y to result bits [95:64]. \n; /// 11: Copies the selected bits from \a Y to result bits [127:96]. \n; /// Bits[3:0]: If any of these bits are set, the corresponding result; /// element is cleared.; /// \returns A 128-bit vector of [4 x float] containing the copied; /// single-precision floating point elements from the operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1984,clear,cleared,1984,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['clear'],['cleared']
Usability," genreflex | Use genreflex rather than rootcint to generate the dictionary.; /// par | Create a PAR file with the minimal set of code needed to read the content of the ROOT file. The name of the PAR file is basename(dirname), with extension '.par' enforced; the PAR file will be created at dirname(dirname).; ///; /// If, in addition to one of the 3 above options, the option ""+"" is specified,; /// the function will generate:; /// - a script called MAKEP to build the shared lib; /// - a dirnameLinkDef.h file; /// - rootcint will be run to generate a dirnameProjectDict.cxx file; /// - dirnameProjectDict.cxx will be compiled with the current options in compiledata.h; /// - a shared lib dirname.so will be created.; /// If the option ""++"" is specified, the generated shared lib is dynamically; /// linked with the current executable module.; /// If the option ""+"" and ""nocompile"" are specified, the utility files are generated; /// as in the option ""+"" but they are not executed.; /// Example:; /// file.MakeProject(""demo"",""*"",""recreate++"");; /// - creates a new directory demo unless it already exist; /// - clear the previous directory content; /// - generate the xxx.h files for all classes xxx found in this file; /// and not yet known to the CINT dictionary.; /// - creates the build script MAKEP; /// - creates a LinkDef.h file; /// - runs rootcint generating demoProjectDict.cxx; /// - compiles demoProjectDict.cxx into demoProjectDict.o; /// - generates a shared lib demo.so; /// - dynamically links the shared lib demo.so to the executable; /// If only the option ""+"" had been specified, one can still link the; /// shared lib to the current executable module with:; ///; /// gSystem->load(""demo/demo.so"");; ///; /// The following feature is not yet enabled:; /// One can restrict the list of classes to be generated by using expressions like:; ///; /// classes = ""Ali*"" generate code only for classes starting with Ali; /// classes = ""myClass"" generate code for class MyClass only.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:3073,clear,clear,3073,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['clear'],['clear']
Usability," given by <tt>bini</tt>, with the true underlying spectrum given by <tt>xini</tt>. The detector response is described by <tt>Adet</tt>, with <tt>Adet</tt> filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis.; <p>; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of <tt>xini</tt> and <tt>Adet</tt>.<br><br>; <p>; The unfolding can be performed by; \code{.cpp}; TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; \endcode; where <tt>kreg</tt> determines the regularisation of the unfolding. In general, overregularisation (too small <tt>kreg</tt>) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large <tt>kreg</tt>) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be determined following guidelines in <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a> using the distribution of the <tt>|d_i|</tt> that can be obtained by <tt>tsvdunf->GetD()</tt> and/or using pseudo-experiments.; <p>; Covariance matrices on the measured spectrum (for either the total uncertainties or individual sources of uncertainties) can be propagated to covariance matrices using the <tt>GetUnfoldCovMatrix</tt> method, which uses pseudo experiments for the propagation. In addition, <tt>GetAdetCovMatrix</tt> allows for the propagation of the statistical uncertainties on the response matrix using pseudo experiments. The covariance matrix corresponding to <tt>Bcov</tt> is also computed as described in <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a> and can be obtained from <tt>tsvdunf->GetXtau()</tt> and its (regularisation independent) inverse from <tt>tsvdunf->GetXinv()</tt>. The dist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:3050,guid,guidelines,3050,hist/hist/src/TSVDUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx,1,['guid'],['guidelines']
Usability," has been chosen over a faster but more; difficult to maintain code. Nevertheless, the time penalty does not; exceed a factor 2. ### The MLP. The multilayer perceptron is a simple feed-forward network with; the following structure:. \image html mlp.png. It is made of neurons characterized by a bias and weighted links; between them (let's call those links synapses). The input neurons; receive the inputs, normalize them and forward them to the first; hidden layer. Each neuron in any subsequent layer first computes a linear; combination of the outputs of the previous layer. The output of the; neuron is then function of that combination with <I>f</I> being; linear for output neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. 1. A linear combination of sigmoids can approximate any; continuous function.; 2. Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, divided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especially the; derivative of compound functions, one can write:. - for a neuron: product of the local derivative with the; weighted sum on the outputs of the derivatives.; - for a synapse: product of the input with the local derivative; of the output neuron. This computation is called back-propagation of the errors. A; loop over all examples is called an epoch.; Six learning methods are implemented. #### Stochastic minimization:. is the most trivial learning method. This is the Robbins-Monro; stochastic approximation applied to multilayer perceptrons. The; weights are updated after each example accord",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:3742,Learn,Learning,3742,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['Learn'],['Learning']
Usability," in a 32 or 64-bit; /// register. These are represented with the VCC bank. During selection, we need; /// to be able to unambiguously go back from a register class to a register; /// bank. To distinguish whether an SGPR should use the SGPR or VCC register; /// bank, we need to know the use context type. An SGPR s1 value always means a; /// VCC bank value, otherwise it will be the SGPR bank. A scalar compare sets; /// SCC, which is a 1-bit unaddressable register. This will need to be copied to; /// a 32-bit virtual register. Taken together, this means we need to adjust the; /// type of boolean operations to be regbank legal. All SALU booleans need to be; /// widened to 32-bits, and all VALU booleans need to be s1 values.; ///; /// A noteworthy exception to the s1-means-vcc rule is for legalization artifact; /// casts. G_TRUNC s1 results, and G_SEXT/G_ZEXT/G_ANYEXT sources are never vcc; /// bank. A non-boolean source (such as a truncate from a 1-bit load from; /// memory) will require a copy to the VCC bank which will require clearing the; /// high bits and inserting a compare.; ///; /// \par Constant bus restriction; ///; /// VALU instructions have a limitation known as the constant bus; /// restriction. Most VALU instructions can use SGPR operands, but may read at; /// most 1 SGPR or constant literal value (this to 2 in gfx10 for most; /// instructions). This is one unique SGPR, so the same SGPR may be used for; /// multiple operands. From a register bank perspective, any combination of; /// operands should be legal as an SGPR, but this is contextually dependent on; /// the SGPR operands all being the same register. There is therefore optimal to; /// choose the SGPR with the most uses to minimize the number of copies.; ///; /// We avoid trying to solve this problem in RegBankSelect. Any VALU G_*; /// operation should have its source operands all mapped to VGPRs (except for; /// VCC), inserting copies from any SGPR operands. This the most trivial legal; /// mapping. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:2582,clear,clearing,2582,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['clear'],['clearing']
Usability," integer.); * Upsampling will typically produce max_v_samp_factor pixel rows from each; * row group (times any additional scale factor that the upsampler is; * applying).; *; * The coefficient controller will deliver data to us one iMCU row at a time;; * each iMCU row contains v_samp_factor * DCT_scaled_size sample rows, or; * exactly min_DCT_scaled_size row groups. (This amount of data corresponds; * to one row of MCUs when the image is fully interleaved.) Note that the; * number of sample rows varies across components, but the number of row; * groups does not. Some garbage sample rows may be included in the last iMCU; * row at the bottom of the image.; *; * Depending on the vertical scaling algorithm used, the upsampler may need; * access to the sample row(s) above and below its current input row group.; * The upsampler is required to set need_context_rows TRUE at global selection; * time if so. When need_context_rows is FALSE, this controller can simply; * obtain one iMCU row at a time from the coefficient controller and dole it; * out as row groups to the postprocessor.; *; * When need_context_rows is TRUE, this controller guarantees that the buffer; * passed to postprocessing contains at least one row group's worth of samples; * above and below the row group(s) being processed. Note that the context; * rows ""above"" the first passed row group appear at negative row offsets in; * the passed buffer. At the top and bottom of the image, the required; * context rows are manufactured by duplicating the first or last real sample; * row; this avoids having special cases in the upsampling inner loops.; *; * The amount of context is fixed at one row group just because that's a; * convenient number for this controller to work with. The existing; * upsamplers really only need one sample row of context. An upsampler; * supporting arbitrary output rescaling might wish for more than one row; * group of context when shrinking the image; tough, we don't handle that.; * (This is ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:1765,simpl,simply,1765,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['simpl'],['simply']
Usability," into; one single I/O buffer or to make several branches.; Making several branches is particularly interesting in the data analysis phase,; when it is desirable to have a high reading rate and not all columns are equally interesting. \anchor creatingattreetoc; ## Create a TTree to store columnar data; - [Construct a TTree](\ref creatingattree); - [Add a column of Fundamental Types and Arrays thereof](\ref addcolumnoffundamentaltypes); - [Add a column of a STL Collection instances](\ref addingacolumnofstl); - [Add a column holding an object](\ref addingacolumnofobjs); - [Add a column holding a TObjectArray](\ref addingacolumnofobjs); - [Fill the tree](\ref fillthetree); - [Add a column to an already existing Tree](\ref addcoltoexistingtree); - [An Example](\ref fullexample). \anchor creatingattree; ## Construct a TTree. ~~~ {.cpp}; TTree tree(name, title); ~~~; Creates a Tree with name and title. Various kinds of branches can be added to a tree:; - Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran; structures.; - Any C++ object or collection, provided by the STL or ROOT. In the following, the details about the creation of different types of branches are given. \anchor addcolumnoffundamentaltypes; ## Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures.; It is strongly recommended to persistify those as objects rather than lists of leaves. ~~~ {.cpp}; auto branch = tree.Branch(branchname, address, leaflist, bufsize); ~~~; - address is the address of the first item of a structure; - leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2965,simpl,simple,2965,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['simpl'],['simple']
Usability," involving induction; // variables in loops.; //; // There are several aspects to this library. First is the representation of; // scalar expressions, which are represented as subclasses of the SCEV class.; // These classes are used to represent certain types of subexpressions that we; // can handle. We only create one SCEV of a particular shape, so; // pointer-comparisons for equality are legal.; //; // One important aspect of the SCEV objects is that they are never cyclic, even; // if there is a cycle in the dataflow for an expression (ie, a PHI node). If; // the PHI node is one of the idioms that we can represent (e.g., a polynomial; // recurrence) then we represent it directly as a recurrence node, otherwise we; // represent it as a SCEVUnknown node.; //; // In addition to being able to represent expressions of various types, we also; // have folders that are used to build the *canonical* representation for a; // particular expression. These folders are capable of using a variety of; // rewrite rules to simplify the expressions.; //; // Once the folders are defined, we can implement the more interesting; // higher-level code, such as the code that recognizes PHI nodes of various; // types, computes the execution count of a loop, etc.; //; // TODO: We should use these routines and value representations to implement; // dependence analysis!; //; //===----------------------------------------------------------------------===//; //; // There are several good references for the techniques used in this analysis.; //; // Chains of recurrences -- a method to expedite the evaluation; // of closed-form functions; // Olaf Bachmann, Paul S. Wang, Eugene V. Zima; //; // On computational properties of chains of recurrences; // Eugene V. Zima; //; // Symbolic Evaluation of Chains of Recurrences for Loop Optimization; // Robert A. van Engelen; //; // Efficient Symbolic Analysis for Optimizing Compilers; // Robert A. van Engelen; //; // Using the chains of recurrences algebra for ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:1535,simpl,simplify,1535,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simplify']
Usability," is paths from the entry without a definition do not result in; // phi nodes.; //; // entry; // / \; // A \; // / \ Y; // B C /; // \ / \ /; // D E; // \ /; // F; //; // Assume that A contains a divergent branch. We are interested; // in the set of all blocks where each block is reachable from A; // via two disjoint paths. This would be the set {D, F} in this; // case.; // To generally reduce this query to SSA construction we introduce; // a virtual variable x and assign to x different values in each; // successor block of A.; //; // entry; // / \; // A \; // / \ Y; // x = 0 x = 1 /; // \ / \ /; // D E; // \ /; // F; //; // Our flavor of SSA construction for x will construct the following; //; // entry; // / \; // A \; // / \ Y; // x0 = 0 x1 = 1 /; // \ / \ /; // x2 = phi E; // \ /; // x3 = phi; //; // The blocks D and F contain phi nodes and are thus each reachable; // by two disjoins paths from A.; //; // -- Remarks --; // * In case of cycle exits we need to check for temporal divergence.; // To this end, we check whether the definition of x differs between the; // cycle exit and the cycle header (_after_ SSA construction).; //; // * In the presence of irreducible control flow, the fixed point is; // reached only after multiple iterations. This is because labels; // reaching the header of a cycle must be repropagated through the; // cycle. This is true even in a reducible cycle, since the labels; // may have been produced by a nested irreducible cycle.; //; // * Note that SyncDependenceAnalysis is not concerned with the points; // of convergence in an irreducible cycle. It's only purpose is to; // identify join blocks. The ""diverged entry"" criterion is; // separately applied on join blocks to determine if an entire; // irreducible cycle is assumed to be divergent.; //; // * Relevant related work:; // A simple algorithm for global data flow analysis problems.; // Matthew S. Hecht and Jeffrey D. Ullman.; // SIAM Journal on Computing, 4(4):519–532, December 1975.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:3684,simpl,simple,3684,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,1,['simpl'],['simple']
Usability," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2203,Clear,ClearErrors,2203,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['Clear'],['ClearErrors']
Usability," kIndexesBasic) |. Normally these functions should be called immediately after TSQLFile constructor.; When objects data written to database, by default START TRANSACTION/COMMIT; SQL commands are used before and after data storage. If TSQLFile detects; any problems, ROLLBACK command will be used to restore; previous state of data base. If transactions not supported by SQL server,; they can be disabled by SetUseTransactions(kTransactionsOff). Or user; can take responsibility to use transactions function himself.; By default only indexes for basic tables are created.; In most cases usage of indexes increase performance to data reading,; but it also can increase time of writing data to database.; There are several modes of index usage available in SetUseIndexes() method; There is MakeSelectQuery(TClass*) method, which; produces SELECT statement to get objects data of specified class.; Difference from simple statement like:; mysql> SELECT * FROM TH1I_ver1; that not only data for that class, but also data from parent classes; will be extracted from other tables and combined in single result table.; Such select query can be useful for external access to objects data. Up to now MySQL 4.1 and Oracle 9i were tested.; Some extra work is required for other SQL databases.; Hopefully, this should be straightforward. Known problems and open questions.; -# TTree is not supported by TSQLFile. There is independent development; of TTreeSQL class, which allows to store trees directly in SQL database; -# TClonesArray is store objects in raw format,; which can not be accessed outside ROOT.; This will be changed later.; -# TDirectory cannot work. Hopefully, will (changes in ROOT basic I/O is required); -# Streamer infos are not written to file, therefore schema evolution; is not yet supported. All eforts are done to enable this feature in; the near future. ### Example how TSQLFile can be used. #### A session saving data to a SQL data base; ~~~{.cpp}; auto dbname = ""mysql://host.domain:330",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:5479,simpl,simple,5479,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['simpl'],['simple']
Usability," kShadowsNotPainted`; /// - ` kShadowsPainted`; ///; /// Default values:; ///; /// - ` shading = kShaded`; /// - ` shadow = kShadowsNotPainted`; ///; /// \image html spectrumpainter035.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels, not shaded.; /// \image html spectrumpainter036.jpg; ///; /// Light modes group, display mode = surface, 64 x 64 channels, shaded, with; /// shadow.; ///; /// #### Function: TSpectrum2Painter::SetBezier(Int_t bezier); ///; /// For kModeGroupSimple display modes group and for kDisplayModeGrid,; /// kDisplayModeLinesX >and kDisplayModeLinesY display modes one; /// can smooth data using Bezier smoothing algorithm. The function does not apply; /// for other display modes groups and display modes. Possible values are:; ///; /// - ` kNoBezierInterpol`; /// - ` kBezierInterpol`; ///; /// Default value is:; ///; /// - ` bezier = kNoBezierInterpol.`; ///; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels with Bezier; /// smoothing.; ///; /// #### Function: TSpectrum2Painter::SetContourWidth(Int_t width); ///; /// This function applies only for kDisplayModeContours display mode.; /// One can change the width between horizontal slices and thus their density.; /// Default value: width=50.; /// \image html spectrumpainter037.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels. Width between; /// slices was set to 30.; ///; /// #### Function: TSpectrum2Painter::SetLightHeightWeight(Double_t weight); ///; /// For kModeGroupLightHeight display modes group one can change the; /// weight between both shading algorithm. The function does not apply for other; /// display modes groups. Default value is: weight=0.5.; /// \image html spectrumpainter038.jpg; ///; /// Light - height modes group, display mode = surface, 64 x 64 channels.; /// The weight between both shading algorithms is set to 0.7.; ///; /// #### Function: TSpectrum2Painter::SetChanMarks(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:12456,Simpl,Simple,12456,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['Simpl'],['Simple']
Usability," limits. Suppose we want to position the same box inside 2 different volumes; and we want the Z size to match the one of each container:. ~~~ {.cpp}; TGeoVolume *container1 = gGeoManager->MakeBox(""C1"", imed, 10,10,30);; TGeoVolume *container2 = gGeoManager->MakeBox(""C2"", imed, 10,10,20);; TGeoVolume *pvol = gGeoManager->MakeBox(""PVOL"", jmed, 3,3,-1);; container1->AddNode(pvol, 1);; container2->AddNode(pvol, 1);; ~~~. Note that the third parameter of PVOL is negative, which does not make sense; as half-length on Z. This is interpreted as: when positioned, create a box; replacing all invalid parameters with the corresponding dimensions of the; container. This is also internally handled by the TGeoVolumeMulti class, which; does not need to be instantiated by users. ### Dividing volumes. Volumes can be divided according a pattern. The most simple division can; be done along one axis, that can be: X, Y, Z, Phi, Rxy or Rxyz. Let's take; the most simple case: we would like to divide a box in N equal slices along X; coordinate, representing a new volume family. Supposing we already have created; the initial box, this can be done like:. ~~~ {.cpp}; TGeoVolume *slicex = box->Divide(""SLICEX"", 1, N);; ~~~. where SLICE is the name of the new family representing all slices and 1 is the; slicing axis. The meaning of the axis index is the following: for all volumes; having shapes like box, trd1, trd2, trap, gtra or para - 1,2,3 means X,Y,Z; for; tube, tubs, cone, cons - 1 means Rxy, 2 means phi and 3 means Z; for pcon and; pgon - 2 means phi and 3 means Z; for spheres 1 means R and 2 means phi.; In fact, the division operation has the same effect as positioning volumes; in a given order inside the divided container - the advantage being that the; navigation in such a structure is much faster. When a volume is divided, a; volume family corresponding to the slices is created. In case all slices can; be represented by a single shape, only one volume is added to the family and; position",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:13625,simpl,simple,13625,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['simpl'],['simple']
Usability," name; /// const std::vector<std::string>& fileNames -> vector of file names; /// TFileCollection& files -> collection of TFileInfo objects; /// TChain& files -> TChain with the file paths; /// TTree& tree -> Reference to an existing TTree object; /// \endcode; /// For legacy, the following signature is also supported:; /// * `Process(<dataset>, TSelector& selector, const std::string& treeName, ULong64_t nToProcess)`:; /// where selector is a TSelector derived class describing the analysis and the other arguments; /// have the same meaning as above.; ///; /// For either set of signatures, the processing function is executed as many times as; /// needed by a pool of fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TTreeProcessorMP never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TTreeProcessorMP::Process is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Process will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a lambda expression, an std::function, a loaded macro, a; /// functor class or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard container (vector, list, deque), an initializer list; /// or a pointer to a TCollection (TList*, TObjArray*, ...).; /// \endparblock; /// **Note:** the version of ROOT::TTreeProcessorMP::Process that takes a TFileCollection* as argument incurs; /// in the overhead of copying data from the TCollection to an STL container. Only; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:1811,simpl,simply,1811,tree/treeplayer/src/TTreeProcessorMP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx,1,['simpl'],['simply']
Usability," new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; - If the objects are added using the placement new then the Clear must; deallocate the memory.; - If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; - To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3987,Clear,Clear,3987,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,6,"['Clear', 'clear']","['Clear', 'clearing']"
Usability," object; - 3rd parameter - the name of do/redo method; - 4th parameter - the name of undo method; Since redo,undo methods are the same, undo name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; ~~~; For objects derived from TObject class name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");; ~~~. 2. Setting undo, redo parameters.; ~~~ {.cpp}; Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color. com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; ~~~; 1st argument - the number of undo, redo parameters; the other arguments - undo, redo values; Since the number of undo,redo parameters is the same one can use; ~~~ {.cpp}; com->SetArgs(1, new_color, old_color);; ~~~. 3. Undo, redo method execution; ~~~ {.cpp}; com->Redo(); // execute redo method; com->Undo(); // execute undo method; ~~~. 4. Merged commands; It possible to group several commands together so an end user; can undo and redo them with one command.; ~~~ {.cpp}; TQCommand *update = new TQCommand(gPad, ""Modified()"");; com->Add(update);; ~~~. 5. Macro commands; ""Merging"" allows to create macro commands, e.g.; ~~~ {.cpp}; TQCommand *macro = new TQCommand(""my macro"");; macro->Add(com1);; macro->Add(com2);; ...; ~~~; During Redo operation commands composing macro command are executed; sequentially in direct order (first in first out). During Undo,; they are executed in reverse order (last in first out). 6. Undo manager.; TQUndoManager is recorder of undo and redo operations. This is; command history list which can be traversed backwards and upwards; performing undo and redo operations.; To register command TQUndoManager::Add(TObject*) method is used.; ~~~ {.cpp}; TQUndoManager *history = new TQUndoManager();; history->Add(com);; ~~~; TQUndoManager::Add automatically invokes execution of command's Redo method. Use TQUndoManager::Undo to undo commands in history list.; Redo is ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx:2406,undo,undo,2406,core/base/src/TQCommand.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx,1,['undo'],['undo']
Usability," of (see TBuffer3D.h and TBuffer3DTypes.h). - TBuffer3DSphere - solid, hollow and cut spheres*; - TBuffer3DTubeSeg - angle tube segment; - TBuffer3DCutTube - angle tube segment with plane cut ends. *OpenGL only supports solid spheres at present - cut/hollow ones will be; requested tessellated. Anyone is free to add new TBuffer3D classes, but it should be clear that the; viewers require updating to be able to take advantage of them. The number of; native shapes in OpenGL will be expanded over time. BoundingBox: You are not obliged to complete this, as any viewer; requiring one internally (OpenGL) will build one for you if you do not provide.; However to do this the viewer will force you to provide the raw tessellation, and the; resulting box will be axis aligned with the overall scene, which is non-ideal; for rotated shapes. As we need to support orientated (rotated) bounding boxes, TBuffer3D requires; the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(),; for simpler case of setting an axis aligned bounding box. ## Master/Local Reference Frames. The Core section of TBuffer3D contains two members relating to reference frames:; fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer; (bounding box and tessellation vertexes) are in local or master (world frame).; fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This; is set by default, and can be reset using SetLocalMasterIdentity() function. ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relative",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:6404,simpl,simpler,6404,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['simpl'],['simpler']
Usability," optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero),; no header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but; is slow and reduces compression ratio; memLevel=9 uses maximum memory; for optimal speed. The default value is 8. See zconf.h for total memory; usage as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as fast as; Z_HUFFMAN_ONLY, but give better compression for PNG image data. The strategy; parameter only affects the compression ratio but not the correctness of the; compressed output even if it is not set appropriately. Z_FIXED prevents the; use of dynamic Huffman codes, allowing for a simpler decoder for special; applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if a parameter is invalid (such as an invalid; method). msg is set to null if there is no error message. deflateInit2 does; not perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3118,simpl,simpler,3118,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['simpl'],['simpler']
Usability," pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. \f[; P_{\mathrm{int}} = \arcsin; \left( 2\: \frac{P_{\mathrm{ext}}-a}{b-a} - 1 \right); P_{\mathrm{ext}} = a + \frac{b - a}{2} \left( \sin P_{\mathrm{int}} + 1 \right); \f]. so that the internal value \f$P_{\mathrm{int}}\f$ can take on any value, while; the external value \f$P_{\mathrm{ext}}\f$ can take on values only between the lower; limit \f$a\f$ and the upper limit \f$b\f$.; Since the transformation is necessarily non-linear, it would transform a; nice linea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:2323,simpl,simple,2323,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['simpl'],['simple']
Usability," potentially; millions of objects, and only accept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via a TPad; repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ## Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; will generate IDs for each physical object internally. In the second you; can specify a unique identifier from the client, which allows the viewer to be more; efficient. It can now cache both logical and physical objects, and only discard; physical objects no longer of interest as part of scene rebuilds. ## Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ## Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:10368,simpl,simple,10368,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['simpl'],['simple']
Usability," provides the; possibilities for compiling, executing or interrupting a running; macro. This class can be used in following ways:; - with file name as argument:; new TGTextEditor(""hsimple.C"");; - with a TMacro* as argument:; TMacro *macro = new TMacro(""hsimple.C"");; new TGTextEditor(macro);. ### Basic Features:. #### New Document. To create a new blank document, select File menu / New, or click; the New toolbar button. It will create a new instance of; TGTextEditor. #### Open/Save File. To open a file, select File menu / Open or click on the Open; toolbar button. This will bring up the standard File Dialog for; opening files.; If the current document has not been saved yet, you will be asked; either to save or abandon the changes.; To save the file using the same name, select File menu / Save or; the toolbar Save button. To change the file name use File menu /; Save As... or corresponding SaveAs button on the toolbar. #### Text Selection. You can move the cursor by simply clicking on the desired location; with the left mouse button. To highlight some text, press the mouse; and drag the mouse while holding the left button pressed.; To select a word, double-click on it;; to select the text line - triple-click on it;; to select all do quadruple-click. #### Cut, Copy, Paste. After selecting some text, you can cut or copy it to the clipboard.; A subsequent paste operation will insert the contents of the; clipboard at the current cursor location. #### Text Search. The editor uses a standard Search dialog. You can specify a forward; or backward search direction starting from the current cursor; location according to the selection made of a case sensitive mode; or not. The last search can be repeated by pressing F3. #### Text Font. You can change the text font by selecting Edit menu / Set Font.; The Font Dialog pops up and shows the Name, Style, and Size of any; available font. The selected font sample is shown in the preview; area. #### Executing Macros. You can execute th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:2194,simpl,simply,2194,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['simpl'],['simply']
Usability," resync method.; *; * read_restart_marker calls resync_to_restart if it finds a marker other than; * the restart marker it was expecting. (This code is *not* used unless; * a nonzero restart interval has been declared.) cinfo->unread_marker is; * the marker code actually found (might be anything, except 0 or FF).; * The desired restart marker number (0..7) is passed as a parameter.; * This routine is supposed to apply whatever error recovery strategy seems; * appropriate in order to position the input stream to the next data segment.; * Note that cinfo->unread_marker is treated as a marker appearing before; * the current data-source input point; usually it should be reset to zero; * before returning.; * Returns FALSE if suspension is required.; *; * This implementation is substantially constrained by wanting to treat the; * input as a data stream; this means we can't back up. Therefore, we have; * only the following actions to work with:; * 1. Simply discard the marker and let the entropy decoder resume at next; * byte of file.; * 2. Read forward until we find another marker, discarding intervening; * data. (In theory we could look ahead within the current bufferload,; * without having to discard data if we don't find the desired marker.; * This idea is not implemented here, in part because it makes behavior; * dependent on buffer size and chance buffer-boundary positions.); * 3. Leave the marker unread (by failing to zero cinfo->unread_marker).; * This will cause the entropy decoder to process an empty data segment,; * inserting dummy zeroes, and then we will reprocess the marker.; *; * #2 is appropriate if we think the desired marker lies ahead, while #3 is; * appropriate if the found marker is a future restart marker (indicating; * that we have missed the desired restart marker, probably because it got; * corrupted).; * We apply #2 or #3 if the found marker is a restart marker no more than; * two counts behind or ahead of the expected one. We also apply #2 if the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:1290,Simpl,Simply,1290,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,2,"['Simpl', 'resume']","['Simply', 'resume']"
Usability," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1708,learn,learn,1708,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['learn'],['learn']
Usability," system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |; | ""I"" | Combine with option 'A' it draws invisible axis |; | ""L"" | A simple polyline is drawn |; | ""F"" | A fill area is drawn ('CF' draw a smoothed fill area) |; | ""C"" | A smooth Curve is drawn |; | ""*"" | A Star is plotted at each point |; | ""P"" | The current marker is plotted at each point |; | ""B"" | A Bar chart is drawn |; | ""1"" | When a graph is drawn as a bar chart, this option makes the bars start from the bottom of the pad. By default they start at 0. |; | ""X+"" | The X-axis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""PFC"" | Palette Fill Color: graph's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: graph's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: graph's marker color is taken in the current palette. |; | ""RX"" | Reverse the X axis. |; | ""RY"" | Reverse the Y axis. |. Drawing options can be combined. In the following example the graph; is drawn as a smooth curve (option ""C"") with markers (option ""P"") and; with axes (option ""A""). Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",20",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:2159,simpl,simple,2159,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['simpl'],['simple']
Usability," tail of the basic block in; /// question. As a result of this, calls that would have qualified for the; /// sibling call optimization were no longer eligible for optimization since; /// said calls were no longer right in the ""tail position"" (i.e. the immediate; /// predecessor of a ReturnInst instruction).; ///; /// Since the sibling call optimization causes the callee to reuse the caller's; /// stack, if we could delay the generation of the stack protector check until; /// later in CodeGen after the sibling call decision was made, we get both the; /// tail call optimization and the stack protector check!; ///; /// A few goals in solving this problem were:; ///; /// 1. Preserve the architecture independence of stack protector generation.; ///; /// 2. Preserve the normal IR level stack protector check for platforms like; /// OpenBSD for which we support platform-specific stack protector; /// generation.; ///; /// The main problem that guided the present solution is that one can not; /// solve this problem in an architecture independent manner at the IR level; /// only. This is because:; ///; /// 1. The decision on whether or not to perform a sibling call on certain; /// platforms (for instance i386) requires lower level information; /// related to available registers that can not be known at the IR level.; ///; /// 2. Even if the previous point were not true, the decision on whether to; /// perform a tail call is done in LowerCallTo in SelectionDAG (or; /// CallLowering in GlobalISel) which occurs after the Stack Protector; /// Pass. As a result, one would need to put the relevant callinst into the; /// stack protector check success basic block (where the return inst is; /// placed) and then move it back later at ISel/MI time before the; /// stack protector check if the tail call optimization failed. The MI; /// level option was nixed immediately since it would require; /// platform-specific pattern matching. The ISel level option was; /// nixed because SelectionDAG ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h:1580,guid,guided,1580,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,1,['guid'],['guided']
Usability," the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4417,learn,learning,4417,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['learn'],['learning']
Usability," the color palette is; /// calculated according to the fictive light source position in 3-d space.; /// Using this function one can change the position of the source and thus; /// to achieve various graphical effects. This function does not apply for; /// Simple and Height display modes groups. Default is:; /// lp(1000,1000,100).; ///; /// s(shading,shadow) allows to set the shading.; /// The picture's surface is composed of triangles. If desired the edges of; /// the neighbouring triangles can be smoothed (shaded). If desired the; /// display of the shadow can be painted as well. The function does not apply; /// for Simple display modes group. The possible values for shading are:; ///; /// - 0 = Not Shaded; /// - 1 = Shaded; ///; /// The possible values for shadow are:; ///; /// - 0 = Shadows are not painted; /// - 1 = Shadows are painted; ///; /// Default values: s(1,0); ///; /// b(bezier) set the Bezier smoothing.; /// For Simple display modes group and for Grid, LinesX and LinesY display; /// modes one can smooth data using Bezier smoothing algorithm. The function; /// does not apply for other display modes groups and display modes. Possible; /// values are:; ///; /// - 0 = No bezier smoothing; /// - 1 = Bezier smoothing; ///; /// Default value is: b(0); ///; /// cw(width) set the contour width.; /// This function applies only for the Contours display mode. One can change; /// the width between horizontal slices and thus their density.; /// Default value: cw(50); ///; /// lhw(weight) set the light height weight.; /// For LightHeight display modes group one can change the weight between; /// both shading algorithms. The function does not apply for other display; /// modes groups. Default value is lhw(0.5).; ///; /// cm(enable,color,width,height,style) allows to draw a marker on each node.; /// In addition to the surface drawn using any above given algorithm one can; /// display channel marks. One can control the color as well as the width,; /// height (in pixels) ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:7266,Simpl,Simple,7266,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['Simpl'],['Simple']
Usability," the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separate series of operator meta-type exists to simplify the construction of composite expressions; /// meta-types in all capitals (SUM) create pdfs, meta types in lower case (sum) create; /// functions.; ///; /// <table>; /// <tr><th> Expression <th> Effect; /// <tr><td> `SUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create sum pdf name with value `f1*pdf1+f2*pdf2+(1-f1-f2)*pdf3`; /// <tr><td> `RSUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create recursive sum pdf name with value `f1*pdf1 + (1-f1)(f2*pdf2 + (1-f2)pdf3)`; /// <tr><td> `ASUM::name(f1*amp1,f2*amp2,amp3]` <td> Create sum pdf name with value `f1*amp1+f2*amp2+(1-f1-f2)*amp3` where `amplX` are amplitudes of type RooAbsReal; /// <tr><td> `sum::name(a1,a2,a3]` <td> Create sum function with value `a1+a2+a3`; /// <tr><td> `sum::name(a1*b1,a2*b2,a3*b 3]` <td> Create sum function with value `a1*b1+a2*b2+a3*b3`; /// <tr><td> `PROD::name(pdf1,pdf2]` <td> Create product of pdf with `name` with given input pdfs; /// <tr><td> `PROD::name(pdf1|x,pdf2]` <td> Create product of conditional pdf `pdf1` given `x` and `pdf2`; /// <tr><td> `prod::nam",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:2044,simpl,simplify,2044,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['simpl'],['simplify']
Usability," the control flow edges from InBB to OutBB have now been replaced, the; /// function also updates any PHINodes in OutBB. For each such PHINode, the; /// operands corresponding to incoming blocks are moved to a new PHINode in the; /// hub, and the hub is made an operand of the original PHINode.; ///; /// Input CFG:; /// ----------; ///; /// Def; /// |; /// v; /// In1 In2; /// | |; /// | |; /// v v; /// Foo ---> Out1 Out2; /// |; /// v; /// Use; ///; ///; /// Create hub: Incoming = {In1, In2}, Outgoing = {Out1, Out2}; /// ----------------------------------------------------------; ///; /// Def; /// |; /// v; /// In1 In2 Foo; /// | Hub | |; /// | + - - | - - + |; /// | ' v ' V; /// +------> Guard1 -----> Out1; /// ' | '; /// ' v '; /// ' Guard2 -----> Out2; /// ' ' |; /// + - - - - - + |; /// v; /// Use; ///; /// Limitations:; /// -----------; /// 1. This assumes that all terminators in the CFG are direct branches (the; /// ""br"" instruction). The presence of any other control flow such as; /// indirectbr, switch or callbr will cause an assert.; ///; /// 2. The updates to the PHINodes are not sufficient to restore SSA; /// form. Consider a definition Def, its use Use, incoming block In2 and; /// outgoing block Out2, such that:; /// a. In2 is reachable from D or contains D.; /// b. U is reachable from Out2 or is contained in Out2.; /// c. U is not a PHINode if U is contained in Out2.; ///; /// Clearly, Def dominates Out2 since the program is valid SSA. But when the; /// hub is introduced, there is a new path through the hub along which Use is; /// reachable from entry without passing through Def, and SSA is no longer; /// valid. To fix this, we need to look at all the blocks post-dominated by; /// the hub on the one hand, and dominated by Out2 on the other. This is left; /// for the caller to accomplish, since each specific use of this function; /// may have additional information which simplifies this fixup. For example,; /// see restoreSSA() in the UnifyLoopExits pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:1932,Clear,Clearly,1932,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,2,"['Clear', 'simpl']","['Clearly', 'simplifies']"
Usability," then hash(F) == hash(G). This consistency property; // is critical to ensuring all possible merging opportunities are exploited.; // Collisions in the hash affect the speed of the pass but not the correctness; // or determinism of the resulting transformation.; //; // When a match is found the functions are folded. If both functions are; // overridable, we move the functionality into a new internal function and; // leave two overridable thunks to it.; //; //===----------------------------------------------------------------------===//; //; // Future work:; //; // * virtual functions.; //; // Many functions have their address taken by the virtual function table for; // the object they belong to. However, as long as it's only used for a lookup; // and call, this is irrelevant, and we'd like to fold such functions.; //; // * be smarter about bitcasts.; //; // In order to fold functions, we will sometimes add either bitcast instructions; // or bitcast constant expressions. Unfortunately, this can confound further; // analysis since the two functions differ where one has a bitcast and the; // other doesn't. We should learn to look through bitcasts.; //; // * Compare complex types with pointer types inside.; // * Compare cross-reference cases.; // * Compare complex expressions.; //; // All the three issues above could be described as ability to prove that; // fA == fB == fC == fE == fF == fG in example below:; //; // void fA() {; // fB();; // }; // void fB() {; // fA();; // }; //; // void fE() {; // fF();; // }; // void fF() {; // fG();; // }; // void fG() {; // fE();; // }; //; // Simplest cross-reference case (fA <--> fB) was implemented in previous; // versions of MergeFunctions, though it presented only in two function pairs; // in test-suite (that counts >50k functions); // Though possibility to detect complex cross-referencing (e.g.: A->B->C->D->A); // could cover much more cases.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MergeFunctions.cpp:2818,learn,learn,2818,interpreter/llvm-project/llvm/lib/Transforms/IPO/MergeFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MergeFunctions.cpp,2,"['Simpl', 'learn']","['Simplest', 'learn']"
Usability," under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TypeBasedAliasAnalysis pass, which implements; // metadata-based TBAA.; //; // In LLVM IR, memory does not have types, so LLVM's own type system is not; // suitable for doing TBAA. Instead, metadata is added to the IR to describe; // a type system of a higher level language. This can be used to implement; // typical C/C++ TBAA, but it can also be used to implement custom alias; // analysis behavior for other languages.; //; // We now support two types of metadata format: scalar TBAA and struct-path; // aware TBAA. After all testing cases are upgraded to use struct-path aware; // TBAA and we can auto-upgrade existing bc files, the support for scalar TBAA; // can be dropped.; //; // The scalar TBAA metadata format is very simple. TBAA MDNodes have up to; // three fields, e.g.:; // !0 = !{ !""an example type tree"" }; // !1 = !{ !""int"", !0 }; // !2 = !{ !""float"", !0 }; // !3 = !{ !""const float"", !2, i64 1 }; //; // The first field is an identity field. It can be any value, usually; // an MDString, which uniquely identifies the type. The most important; // name in the tree is the name of the root node. Two trees with; // different root node names are entirely disjoint, even if they; // have leaves with common names.; //; // The second field identifies the type's parent node in the tree, or; // is null or omitted for a root node. A type is considered to alias; // all of its descendants and all of its ancestors in the tree. Also,; // a type is considered to alias all types in other trees, so that; // bitcode produced from multiple front-ends is handled conservatively.; //; // If the third field is present, it's an integer which if equal to 1; // indicates that the type is ""constant"" (mean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp:1135,simpl,simple,1135,interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,1,['simpl'],['simple']
Usability," v2 {5.f,6.f,7.f,8.f};; auto v3 = v1+v2;; auto v4 = 3 * v1;; ~~~; The supported operators are ; - +, -, *, /; - +=, -=, *=, /=; - <, >, ==, !=, <=, >=, &&, ||; - ~, !; - &, |, ^; - &=, |=, ^=; - <<=, >>=. The most common mathematical functions are supported. It is possible to invoke them passing ; RVecs as arguments.; - abs, fdim, fmod, remainder; - floor, ceil, trunc, round, lround, llround; - exp, exp2, expm1; - log, log10, log2, log1p; - pow; - sqrt, cbrt; - sin, cos, tan, asin, acos, atan, atan2, hypot; - sinh, cosh, tanh, asinh, acosh; - erf, erfc; - lgamma, tgamma. If the VDT library is available, the following functions can be invoked. Internally the calculations; are vectorized:; - fast_expf, fast_logf, fast_sinf, fast_cosf, fast_tanf, fast_asinf, fast_acosf, fast_atanf; - fast_exp, fast_log, fast_sin, fast_cos, fast_tan, fast_asin, fast_acos, fast_atan. \anchor owningandadoptingmemory; ## Owning and adopting memory; RVec has contiguous memory associated to it. It can own it or simply adopt it. In the latter case,; it can be constructed with the address of the memory associated to it and its length. For example:; ~~~{.cpp}; std::vector<int> myStlVec {1,2,3};; RVec<int> myRVec(myStlVec.data(), myStlVec.size());; ~~~; In this case, the memory associated to myStlVec and myRVec is the same, myRVec simply ""adopted it"".; If any method which implies a re-allocation is called, e.g. *emplace_back* or *resize*, the adopted; memory is released and new one is allocated. The previous content is copied in the new memory and; preserved. \anchor sorting; ## Sorting and manipulation of indices. ### Sorting; RVec complies to the STL interfaces when it comes to iterations. As a result, standard algorithms; can be used, for example sorting:; ~~~{.cpp}; RVec<double> v{6., 4., 5.};; std::sort(v.begin(), v.end());; ~~~. For convenience, helpers are provided too:; ~~~{.cpp}; auto sorted_v = Sort(v);; auto reversed_v = Reverse(v);; ~~~. ### Manipulation of indices. It is also possib",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:4600,simpl,simply,4600,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['simpl'],['simply']
Usability," volume and a transformation are called NODES and; their creation is fully handled by the modeler. They represent the link; elements in the hierarchy of volumes. Nodes are unique and distinct geometrical; objects ONLY from their container point of view. Since volumes can be replicated; in the geometry, the same node may be found on different branches. \image html geom_t_example.png width=600px. An important observation is that volume objects are owned by the TGeoManager; class. This stores a list of all volumes in the geometry, that is cleaned; upon destruction. Let's consider positioning now our wire in the middle of a gas chamber. We; need first to define the gas chamber :. ~~~ {.cpp}; TGeoVolume *chamber = gGeoManager->MakeTube(""CHAMBER"", ptrGAS, 0, 1, 1);; ~~~. Now we can put the wire inside :. ~~~ {.cpp}; chamber->AddNode(wire_co, 1);; ~~~. If we inspect now the chamber volume in a browser, we will notice that it has; one daughter. Of course the gas has some container also, but let's keep it like; that for the sake of simplicity. The full prototype of AddNode() is :. ~~~ {.cpp}; TGeoVolume::AddNode(TGeoVolume *daughter, Int_t usernumber,; TGeoMatrix *matrix=gGeoIdentity); ~~~. Since we did not supplied the third argument, the wire will be positioned with; an identity transformation inside the chamber. One will notice that the inner; radii of the wire and chamber are both zero - therefore, aren't the two volumes; overlapping ? The answer is no, the modeler is even relaying on the fact that; any daughter is fully contained by its mother. On the other hand, neither of; the nodes positioned inside a volume should overlap with each other. We will; see that there are allowed some exceptions to those rules. ### Overlapping volumes. Positioning volumes that does not overlap their neighbours nor extrude; their container is sometimes quite strong constraint. Some parts of the geometry; might overlap naturally, e.g. two crossing tubes. The modeller supports such; cases on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:6179,simpl,simplicity,6179,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['simpl'],['simplicity']
Usability," we also look for the presence of the VCTP instruction,; /// which determines whether we can generated the tail-predicated low-overhead; /// loop form.; ///; /// Assumptions and Dependencies:; /// Low-overhead loops are constructed and executed using a setup instruction:; /// DLS, WLS, DLSTP or WLSTP and an instruction that loops back: LE or LETP.; /// WLS(TP) and LE(TP) are branching instructions with a (large) limited range; /// but fixed polarity: WLS can only branch forwards and LE can only branch; /// backwards. These restrictions mean that this pass is dependent upon block; /// layout and block sizes, which is why it's the last pass to run. The same is; /// true for ConstantIslands, but this pass does not increase the size of the; /// basic blocks, nor does it change the CFG. Instructions are mainly removed; /// during the transform and pseudo instructions are replaced by real ones. In; /// some cases, when we have to revert to a 'normal' loop, we have to introduce; /// multiple instructions for a single pseudo (see RevertWhile and; /// RevertLoopEnd). To handle this situation, t2WhileLoopStartLR and t2LoopEnd; /// are defined to be as large as this maximum sequence of replacement; /// instructions.; ///; /// A note on VPR.P0 (the lane mask):; /// VPT, VCMP, VPNOT and VCTP won't overwrite VPR.P0 when they update it in a; /// ""VPT Active"" context (which includes low-overhead loops and vpt blocks).; /// They will simply ""and"" the result of their calculation with the current; /// value of VPR.P0. You can think of it like this:; /// \verbatim; /// if VPT active: ; Between a DLSTP/LETP, or for predicated instrs; /// VPR.P0 &= Value; /// else; /// VPR.P0 = Value; /// \endverbatim; /// When we're inside the low-overhead loop (between DLSTP and LETP), we always; /// fall in the ""VPT active"" case, so we can consider that all VPR writes by; /// one of those instruction is actually a ""and"".; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:2334,simpl,simply,2334,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['simpl'],['simply']
Usability," { color:#444444 }; .line { padding-left: 1ex; border-left: 3px solid #ccc }; .line { white-space: pre }; .msg { -webkit-box-shadow:1px 1px 7px #000 }; .msg { box-shadow:1px 1px 7px #000 }; .msg { -webkit-border-radius:5px }; .msg { border-radius:5px }; .msg { font-family:Helvetica, sans-serif; font-size:8pt }; .msg { float:left }; .msg { position:relative }; .msg { padding:0.25em 1ex 0.25em 1ex }; .msg { margin-top:10px; margin-bottom:10px }; .msg { font-weight:bold }; .msg { max-width:60em; word-wrap: break-word; white-space: pre-wrap }; .msgT { padding:0x; spacing:0x }; .msgEvent { background-color:#fff8b4; color:#000000 }; .msgControl { background-color:#bbbbbb; color:#000000 }; .msgNote { background-color:#ddeeff; color:#000000 }; .mrange { background-color:#dfddf3 }; .mrange { border-bottom:1px solid #6F9DBE }; .PathIndex { font-weight: bold; padding:0px 5px; margin-right:5px; }; .PathIndex { -webkit-border-radius:8px }; .PathIndex { border-radius:8px }; .PathIndexEvent { background-color:#bfba87 }; .PathIndexControl { background-color:#8c8c8c }; .PathIndexPopUp { background-color: #879abc; }; .PathNav a { text-decoration:none; font-size: larger }; .CodeInsertionHint { font-weight: bold; background-color: #10dd10 }; .CodeRemovalHint { background-color:#de1010 }; .CodeRemovalHint { border-bottom:1px solid #6F9DBE }; .msg.selected{ background-color:orange !important; }. table.simpletable {; padding: 5px;; font-size:12pt;; margin:20px;; border-collapse: collapse; border-spacing: 0px;; }; td.rowname {; text-align: right;; vertical-align: top;; font-weight: bold;; color:#444444;; padding-right:2ex;; }. /* Hidden text. */; input.spoilerhider + label {; cursor: pointer;; text-decoration: underline;; display: block;; }; input.spoilerhider {; display: none;; }; input.spoilerhider ~ .spoiler {; overflow: hidden;; margin: 10px auto 0;; height: 0;; opacity: 0;; }; input.spoilerhider:checked + label + .spoiler{; height: auto;; opacity: 1;; }; </style>; </head>; <body>)<<<""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:3438,simpl,simpletable,3438,interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,1,['simpl'],['simpletable']
Usability,""""""" Commands for managing clang diagnostic breakpoints. Syntax: clangdiag enable [<warning>|<diag-name>]; clangdiag disable; clangdiag diagtool [<path>|reset]. The following subcommands are supported:. enable -- Enable clang diagnostic breakpoints.; disable -- Disable all clang diagnostic breakpoints.; diagtool -- Return, set, or reset diagtool path. This command sets breakpoints in clang, and clang based tools, that; emit diagnostics. When a diagnostic is emitted, and clangdiag is; enabled, it will use the appropriate diagtool application to determine; the name of the DiagID, and set breakpoints in all locations that; 'diag::name' appears in the source. Since the new breakpoints are set; after they are encountered, users will need to launch the executable a; second time in order to hit the new breakpoints. For in-tree builds, the diagtool application, used to map DiagID's to; names, is found automatically in the same directory as the target; executable. However, out-or-tree builds must use the 'diagtool'; subcommand to set the appropriate path for diagtool in the clang debug; bin directory. Since this mapping is created at build-time, it's; important for users to use the same version that was generated when; clang was compiled, or else the id's won't match. Notes:; - Substrings can be passed for both <warning> and <diag-name>.; - If <warning> is passed, only enable the DiagID(s) for that warning.; - If <diag-name> is passed, only enable that DiagID.; - Rerunning enable clears existing breakpoints.; - diagtool is used in breakpoint callbacks, so it can be changed; without the need to rerun enable.; - Adding this to your ~.lldbinit file makes clangdiag available at startup:; ""command script import /path/to/clangdiag.py"". """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py:1495,clear,clears,1495,interpreter/llvm-project/clang/utils/clangdiag.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py,1,['clear'],['clears']
Usability,""""""" Create a simple model and run statistical tests . This script can be used to make simple statistical using histfactory.; It takes values for signal, background, and data as input, and; can optionally take uncertainties on signal or background.; The model is created and saved to an output ROOT file, and; the model can be fit if requested. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:13,simpl,simple,13,tutorials/histfactory/makeQuickModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py,2,['simpl'],['simple']
Usability,""""""" Make a simple measurement using HistFactory; ; Take in simple values for signal, background data, ; and potentially uncertainty on signal and background. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:11,simpl,simple,11,tutorials/histfactory/makeQuickModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py,2,['simpl'],['simple']
Usability,"""""""; <html>; <title>{}</title>; <meta charset=""utf-8"" />; <head>; <link rel='stylesheet' type='text/css' href='style.css'>; <script type=""text/javascript"">; /* Simple helper to show/hide the expanded message of a remark. */; function toggleExpandedMessage(e) {{; var FullTextElems = e.parentElement.parentElement.getElementsByClassName(""full-info"");; if (!FullTextElems || FullTextElems.length < 1) {{; return false;; }}; var FullText = FullTextElems[0];; if (FullText.style.display == 'none') {{; e.innerHTML = '-';; FullText.style.display = 'block';; }} else {{; e.innerHTML = '+';; FullText.style.display = 'none';; }}; }}; </script>; </head>; <body>; <div class=""centered"">; <table class=""source"">; <thead>; <tr>; <th style=""width: 2%"">Line</td>; <th style=""width: 3%"">Hotness</td>; <th style=""width: 10%"">Optimization</td>; <th style=""width: 70%"">Source</td>; <th style=""width: 15%"">Inline Context</td>; </tr>; </thead>; <tbody>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py:160,Simpl,Simple,160,interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,1,['Simpl'],['Simple']
Usability,"""""""; A 3-line progress bar, which looks like::. Header; 20% [===========----------------------------------]; progress message. The progress bar is colored, if the terminal supports color; output; and adjusts to the width of the terminal.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:14,progress bar,progress bar,14,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,2,['progress bar'],['progress bar']
Usability,"""""""; A class that can be used to portably generate formatted output to; a terminal. `TerminalController` defines a set of instance variables whose; values are initialized to the control sequence necessary to; perform a given action. These can be simply included in normal; output to the terminal:. >>> term = TerminalController(); >>> print('This is '+term.GREEN+'green'+term.NORMAL). Alternatively, the `render()` method can used, which replaces; '${action}' with the string required to perform 'action':. >>> term = TerminalController(); >>> print(term.render('This is ${GREEN}green${NORMAL}')). If the terminal doesn't support a given action, then the value of; the corresponding instance variable will be set to ''. As a; result, the above code will still work on terminals that do not; support color, except that their output will not be colored.; Also, this means that you can test whether the terminal supports a; given action by simply testing the truth value of the; corresponding instance variable:. >>> term = TerminalController(); >>> if term.CLEAR_SCREEN:; ... print('This terminal supports clearning the screen.'). Finally, if the width and height of the terminal are known, then; they will be stored in the `COLS` and `LINES` attributes.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:246,simpl,simply,246,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,3,"['clear', 'simpl']","['clearning', 'simply']"
Usability,"""""""; A simple progress bar which doesn't need any terminal support. This prints out a progress bar like:; 'Header: 0.. 10.. 20.. ...'; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:7,simpl,simple,7,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,3,"['progress bar', 'simpl']","['progress bar', 'simple']"
Usability,"""""""; BOL=cr UP=cuu1 DOWN=cud1 LEFT=cub1 RIGHT=cuf1; CLEAR_SCREEN=clear CLEAR_EOL=el CLEAR_BOL=el1 CLEAR_EOS=ed BOLD=bold; BLINK=blink DIM=dim REVERSE=rev UNDERLINE=smul NORMAL=sgr0; HIDE_CURSOR=cinvis SHOW_CURSOR=cnorm""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:65,clear,clear,65,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['clear'],['clear']
Usability,"""""""; CmpRuns - A simple tool for comparing two static analyzer runs to determine; which reports have been added, removed, or changed. This is designed to support automated testing using the static analyzer, from; two perspectives:; 1. To monitor changes in the static analyzer's reports on real code bases,; for regression testing. 2. For use by end users who want to integrate regular static analyzer testing; into a buildbot like environment. Usage:. # Load the results of both runs, to obtain lists of the corresponding; # AnalysisDiagnostic objects.; #; resultsA = load_results_from_single_run(singleRunInfoA, delete_empty); resultsB = load_results_from_single_run(singleRunInfoB, delete_empty). # Generate a relation from diagnostics in run A to diagnostics in run B; # to obtain a list of triples (a, b, confidence).; diff = compare_results(resultsA, resultsB). """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py:17,simpl,simple,17,interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,1,['simpl'],['simple']
Usability,"""""""; Minimal clang-rename integration with Vim. Before installing make sure one of the following is satisfied:. * clang-rename is in your PATH; * `g:clang_rename_path` in ~/.vimrc points to valid clang-rename executable; * `binary` in clang-rename.py points to valid to clang-rename executable. To install, simply put this into your ~/.vimrc for python2 support. noremap <leader>cr :pyf <path-to>/clang-rename.py<cr>. For python3 use the following command (note the change from :pyf to :py3f). noremap <leader>cr :py3f <path-to>/clang-rename.py<cr>. IMPORTANT NOTE: Before running the tool, make sure you saved the file. All you have to do now is to place a cursor on a variable/function/class which; you would like to rename and press '<leader>cr'. You will be prompted for a new; name if the cursor points to a valid symbol.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py:307,simpl,simply,307,interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,1,['simpl'],['simply']
Usability,"""""""; Run a simple example with RDataFrame, using the previously created; connection to the HTCondor cluster.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:11,simpl,simple,11,tutorials/dataframe/distrdf004_dask_lxbatch.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py,1,['simpl'],['simple']
Usability,"""""""; Test simple function without parameters; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:10,simpl,simple,10,bindings/pyroot/pythonizations/test/tf_pycallables.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py,1,['simpl'],['simple']
Usability,"""""""; This script is run by GitHub actions to ensure that the code in PR's conform to; the coding style of LLVM. It can also be installed as a pre-commit git hook to; check the coding style before submitting it. The canonical source of this script; is in the LLVM source tree under llvm/utils/git. For C/C++ code it uses clang-format and for Python code it uses darker (which; in turn invokes black). You can learn more about the LLVM coding style on llvm.org:; https://llvm.org/docs/CodingStandards.html. You can install this script as a git hook by symlinking it to the .git/hooks; directory:. ln -s $(pwd)/llvm/utils/git/code-format-helper.py .git/hooks/pre-commit. You can control the exact path to clang-format or darker with the following; environment variables: $CLANG_FORMAT_PATH and $DARKER_FORMAT_PATH.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py:408,learn,learn,408,interpreter/llvm-project/llvm/utils/git/code-format-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py,1,['learn'],['learn']
Usability,"""""""; Unicode case folding database conversion utility. Parses the database and generates a C++ function which implements the case; folding algorithm. The database entries are of the form:. <code>; <status>; <mapping>; # <name>. <status> can be one of four characters:; C - Common mappings; S - mappings for Simple case folding; F - mappings for Full case folding; T - special case for Turkish I characters. Right now this generates a function which implements simple case folding (C+S; entries).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/unicode-case-fold.py:307,Simpl,Simple,307,interpreter/llvm-project/llvm/utils/unicode-case-fold.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/unicode-case-fold.py,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"""""""; wciia - Whose Code Is It Anyway. Determines code owner of the file/folder relative to the llvm source root.; Code owner is determined from the content of the CODE_OWNERS.TXT ; by parsing the D: field. usage:. utils/wciia.py path. limitations:; - must be run from llvm source root; - very simplistic algorithm; - only handles * as a wildcard; - not very user friendly ; - does not handle the proposed F: field. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/wciia.py:293,simpl,simplistic,293,interpreter/llvm-project/llvm/utils/wciia.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/wciia.py,1,['simpl'],['simplistic']
Usability,"""""""A simple helper function to fill a test tree: this makes the example stand-alone.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:5,simpl,simple,5,tutorials/dataframe/df001_introduction.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py,1,['simpl'],['simple']
Usability,"""""""A simple test case to check the working of mapper.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:5,simpl,simple,5,bindings/experimental/distrdf/test/test_callable_generator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py,1,['simpl'],['simple']
Usability,"""""""Clear the caches in between tests.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:3,Clear,Clear,3,bindings/experimental/distrdf/test/backend/test_graph_caching.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py,1,['Clear'],['Clear']
Usability,"""""""Examples:; - rooteventselector source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root'. - rooteventselector -f 101 source.root:tree dest.root; Copy a subset of the tree 'tree' from 'source.root' to 'dest.root'. The new tree contains events from the old tree except the first hundred. - rooteventselector -l 100 source.root:tree dest.root; Copy a subset of the tree 'tree' from 'source.root' to 'dest.root'. The new tree contains the first hundred events from the old tree. - rooteventselector --recreate source.root:tree dest.root; Recreate the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. - rooteventselector -c 1 source.root:tree dest.root; Change the compression factor of the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. For more information about compression settings of ROOT file, please look at the reference guide available on the ROOT site. - rooteventselector -s ""(branch1Value > 100)&&( branch2Value )"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and apply a selection to the output tree. - rooteventselector -e ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and remove branches matching ""muon_*"". - rooteventselector -e ""*"" -i ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and only write branches matching ""muon_*""; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rooteventselector.py:934,guid,guide,934,main/python/rooteventselector.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rooteventselector.py,1,['guid'],['guide']
Usability,"""""""Examples:; - rootslimtree source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root'. - rootslimtree --recreate source.root:tree dest.root; Recreate the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. - rootslimtree -c 1 source.root:tree dest.root; Change the compression factor of the destination file 'dest.root' and copy the tree 'tree' from 'source.root' to 'dest.root'. For more information about compression settings of ROOT file, please look at the reference guide available on the ROOT site. - rootslimtree -e ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and remove branches matching ""muon_*"". - rootslimtree -e ""*"" -i ""muon_*"" source.root:tree dest.root; Copy the tree 'tree' from 'source.root' to 'dest.root' and only write branches matching ""muon_*""; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rootslimtree.py:534,guid,guide,534,main/python/rootslimtree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rootslimtree.py,1,['guid'],['guide']
Usability,"""""""Extracts a list of result types from the given comment. We allow annotations in the comment of the matcher to specify what; nodes a matcher can match on. Those comments have the form:; Usable as: Any Matcher | (Matcher<T1>[, Matcher<t2>[, ...]]). Returns ['*'] in case of 'Any Matcher', or ['T1', 'T2', ...].; Returns the empty list if no 'Usable as' specification could be; parsed.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:188,Usab,Usable,188,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,2,['Usab'],['Usable']
Usability,"""""""ROOTs Object-Oriented Technologies.\n; root is an interactive interpreter of C++ code. It uses the ROOT framework. For more information on ROOT, please refer to\n; An extensive Users Guide is available from that site (see below).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/root-argparse.py:186,Guid,Guide,186,core/base/src/root-argparse.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/root-argparse.py,1,['Guid'],['Guide']
Usability,"""""""ShTest is a format with one file per test. This is the primary format for regression tests as described in the LLVM; testing guide:. http://llvm.org/docs/TestingGuide.html. The ShTest files contain some number of shell-like command pipelines, along; with assertions about what should be in the output.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/shtest.py:128,guid,guide,128,interpreter/llvm-project/llvm/utils/lit/lit/formats/shtest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/shtest.py,1,['guid'],['guide']
Usability,"""""""Simplify clang arguments before running C-Reduce to reduce the time the; interestingness test takes to run.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py:3,Simpl,Simplify,3,interpreter/llvm-project/clang/utils/creduce-clang-crash.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py,1,['Simpl'],['Simplify']
Usability,"""""""Specify the constraint engine used by the analyzer. Specifying; 'basic' uses a simpler, less powerful constraint model used by; checker-0.160 and earlier.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:82,simpl,simpler,82,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['simpl'],['simpler']
Usability,"""""""Test ability to override a simple function with an abstract base""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:30,simpl,simple,30,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['simpl'],['simple']
Usability,"""""""Test ability to override a simple function""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:30,simpl,simple,30,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['simpl'],['simple']
Usability,"""""""Test usability of AVX by default.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:8,usab,usability,8,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['usab'],['usability']
Usability,"""""""This function kills a process with ``pid`` and all its running children; (recursively). It is currently implemented using the psutil module on some; platforms which provides a simple platform neutral implementation. TODO: Reimplement this without using psutil on all platforms so we can; remove our dependency on it. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py:179,simpl,simple,179,interpreter/llvm-project/llvm/utils/lit/lit/util.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py,1,['simpl'],['simple']
Usability,"""""""Update Options.td for the flags changes in https://reviews.llvm.org/Dxyz. This script translates Options.td from using Flags to control option visibility; to using Vis instead. It is meant to be idempotent and usable to help update; downstream forks if they have their own changes to Options.td. Usage:; ```sh; % update_options_td_flags.py path/to/Options.td > Options.td.new; % mv Options.td.new path/to/Options.td; ```. This script will be removed after the next LLVM release.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py:213,usab,usable,213,interpreter/llvm-project/clang/utils/update_options_td_flags.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py,1,['usab'],['usable']
Usability,"""""""Usability of pointer to array""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Usab,Usability,3,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,1,['Usab'],['Usability']
Usability,"""""""Usability of std::vector<> of some enums""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Usab,Usability,3,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['Usab'],['Usability']
Usability,"""""""Usability of std::vector<bool> which can be a specialization""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Usab,Usability,3,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['Usab'],['Usability']
Usability,"""""""When '%(prog)s' analyzes a project by interposing a compiler; wrapper, which executes a real compiler for compilation and do other; tasks (record the compiler invocation). Because of this interposing,; '%(prog)s' does not know what compiler your project normally uses.; Instead, it simply overrides the CC environment variable, and guesses; your default compiler. If you need '%(prog)s' to use a specific compiler for *compilation*; then you can use this option to specify a path to that compiler.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:285,simpl,simply,285,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['simpl'],['simply']
Usability,"""""""\; namespace CrossInheritance {; std::string call_base1(Base1* b) {; try {; b->sum_value(-7);; } catch (CPyCppyy::PyException& e) {; e.clear();; return e.what();; }; return """";; } }""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:138,clear,clear,138,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['clear'],['clear']
Usability,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:40,Simpl,Simple,40,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,7,['Simpl'],['Simple']
Usability,"""""""namespace no_default_ctor {; struct NoDefCtor1 {; NoDefCtor1(int) {}; virtual ~NoDefCtor1() {}; };. struct NoDefCtor2 {; NoDefCtor2() = delete;; virtual ~NoDefCtor2() {}; };. class NoDefCtor3 {; NoDefCtor3() = default;; public:; virtual ~NoDefCtor3() {}; };. class Simple {}; }""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:268,Simpl,Simple,268,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['Simpl'],['Simple']
Usability,"# -------------------------------------------------------------------------; # # P A R T 5 : U S I N G H Y B R I D C A L C U L A T O R; # # W I T H A N A L T E R N A T I V E T E S T S T A T I S T I C; #; # A likelihood ratio test statistics should be 1-to-1 with the count x; # when the value of b is fixed in the likelihood. This is implemented; # by the SimpleLikelihoodRatioTestStat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:356,Simpl,SimpleLikelihoodRatioTestStat,356,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['Simpl'],['SimpleLikelihoodRatioTestStat']
Usability,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:257,simpl,simply,257,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['simpl'],['simply']
Usability,# A simple evaluator of boolean expressions.; #; # Grammar:; # expr :: or_expr; # or_expr :: and_expr ('||' and_expr)*; # and_expr :: not_expr ('&&' not_expr)*; # not_expr :: '!' not_expr; # '(' or_expr ')'; # match_expr; # match_expr :: braced_regex; # identifier; # braced_regex match_expr; # identifier match_expr; # identifier :: [-+=._a-zA-Z0-9]+; # braced_regex :: '{{' python_regex '}}'; # Evaluates `string` as a boolean expression.; # Returns True or False. Throws a ValueError on syntax error.; #; # Variables in `variables` are true.; # Regexes that match any variable in `variables` are true.; # 'true' is true.; # All other identifiers are false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py:4,simpl,simple,4,interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,1,['simpl'],['simple']
Usability,"# A simple helper function to fill a test tree: this makes the example stand-alone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:4,simpl,simple,4,tutorials/dataframe/df002_dataModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py,2,['simpl'],['simple']
Usability,"# A simple helper function to fill a test tree: this makes the example; # stand-alone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df003_profiles.py:4,simpl,simple,4,tutorials/dataframe/df003_profiles.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df003_profiles.py,1,['simpl'],['simple']
Usability,"# A simple operation to check",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:4,simpl,simple,4,bindings/experimental/distrdf/test/test_proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py,1,['simpl'],['simple']
Usability,"# Add profile likelihood calculation of significance. Redo each; # fit while keeping parameter nsig fixed to zero. For each toy,; # the difference in -log(L) of both fits is stored, well; # a simple significance interpretation of the delta(-logL); # Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:192,simpl,simple,192,tutorials/roofit/rf803_mcstudy_addons2.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py,1,['simpl'],['simple']
Usability,"# Also reading data from a TFile can be done in a context manager. Information; # stored in the objects of the file can be queried and used inside the context.; # After the context, the objects are not usable anymore because the file is; # automatically closed. This means you should use this pattern as a quick way; # to get information or modify objects from a certain file, without needing to; # keep the histograms alive afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py:202,usab,usable,202,tutorials/pyroot/pyroot005_tfile_context_manager.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py,1,['usab'],['usable']
Usability,# Automatically derive the list of man pages from the contents of the command; # guide subdirectory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:81,guid,guide,81,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['guid'],['guide']
Usability,# Automatically derive the list of man pages from the contents of the command; # guide subdirectory. This was copied from llvm/docs/conf.py.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:81,guid,guide,81,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,1,['guid'],['guide']
Usability,"# Automatically derive the list of man pages from the contents of the command; # guide subdirectory. This was copied from llvm/docs/conf.py.; #basedir = os.path.dirname(__file__); #man_page_authors = u'Maintained by the Cling Team (<http://compiler-research.org>)'; #command_guide_subpath = 'CommandGuide'; #command_guide_path = os.path.join(basedir, command_guide_subpath); #for name in os.listdir(command_guide_path):; # # Ignore non-ReST files and the index page.; # if not name.endswith('.rst') or name in ('index.rst',):; # continue; #; # # Otherwise, automatically extract the description.; # file_subpath = os.path.join(command_guide_subpath, name); # with open(os.path.join(command_guide_path, name)) as f:; # title = f.readline().rstrip('\n'); # header = f.readline().rstrip('\n'); #; # if len(header) != len(title):; # print((; # ""error: invalid header in %r (does not match title)"" % (; # file_subpath,)), file=sys.stderr); # if ' - ' not in title:; # print((; # (""error: invalid title in %r ""; # ""(expected '<name> - <description>')"") % (; # file_subpath,)), file=sys.stderr); #; # # Split the name out of the title.; # name,description = title.split(' - ', 1); # man_pages.append((file_subpath.replace('.rst',''), name,; # description, man_page_authors, 1)); # If true, show URL addresses after external links.; #man_show_urls = False; # -- Options for Texinfo output ------------------------------------------------; # Grouping the document tree into Texinfo files. List of tuples; # (source start file, target name, title, author,; # dir menu entry, description, category)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:81,guid,guide,81,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,1,['guid'],['guide']
Usability,# Avoid re-entering the lock by finding out if kill needs to be run; # again here but call it if necessary once we have left the lock.; # We could use a reentrant lock here instead but this code seems; # clearer to me.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:204,clear,clearer,204,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['clear'],['clearer']
Usability,"# Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py:898,learn,learn,898,tutorials/roofit/rf408_RDataFrameToRooFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py,1,['learn'],['learn']
Usability,"# Borrowed from Quixote, with simplifications.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:30,simpl,simplifications,30,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['simpl'],['simplifications']
Usability,"# By default, DenseMap instances use DenseMapPair to hold key-value; # entries. When the entry is a DenseMapPair, unwrap it to expose the; # children as simple std::pair values.; #; # This entry type is customizable (a template parameter). For other; # types, expose the entry type as is.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lldbDataFormatters.py:153,simpl,simple,153,interpreter/llvm-project/llvm/utils/lldbDataFormatters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lldbDataFormatters.py,1,['simpl'],['simple']
Usability,"# Caching behavior seems to be more clear to the user; can always override said; # behavior (i.e. re-read from file) with an explicit Get() call",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:36,clear,clear,36,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,2,['clear'],['clear']
Usability,# Check for a simple name,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py:14,simpl,simple,14,interpreter/llvm-project/llvm/utils/extract_symbols.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py,1,['simpl'],['simple']
Usability,"# Clear TList before Python list deletes the objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:2,Clear,Clear,2,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,1,['Clear'],['Clear']
Usability,"# Clear some environment variables that might affect Clang.; #; # This first set of vars are read by Clang, but shouldn't affect tests; # that aren't specifically looking for these features, or are required; # simply to run the tests at all.; #; # FIXME: Should we have a tool that enforces this?; # safe_env_vars = (; # 'TMPDIR', 'TEMP', 'TMP', 'USERPROFILE', 'PWD',; # 'MACOSX_DEPLOYMENT_TARGET', 'IPHONEOS_DEPLOYMENT_TARGET',; # 'VCINSTALLDIR', 'VC100COMNTOOLS', 'VC90COMNTOOLS',; # 'VC80COMNTOOLS')",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:2,Clear,Clear,2,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,2,"['Clear', 'simpl']","['Clear', 'simply']"
Usability,"# Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:2,Clear,Clear,2,tutorials/roofit/rf212_plottingInRanges_blinding.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py,1,['Clear'],['Clear']
Usability,"# Compute the learned likelihood ratio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:14,learn,learned,14,tutorials/roofit/rf615_simulation_based_inference.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py,1,['learn'],['learned']
Usability,"# Compute which files are to be considered for the various tasks; # The indexes of starting files in each task are simply the list of files; # from above, except for the last value which corresponds to the end of the; # last file. Also, they are inclusive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:115,simpl,simply,115,bindings/experimental/distrdf/python/DistRDF/Ranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py,1,['simpl'],['simply']
Usability,"# Convert inputs to format readable by machine learning tools",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py:47,learn,learning,47,tutorials/tmva/tmva101_Training.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py,1,['learn'],['learning']
Usability,# Count the number of immediate predecessors *not yet output* for each; # vertex. Initially this is simply their in-degrees.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:100,simpl,simply,100,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,1,['simpl'],['simply']
Usability,"# Create a composite pythonizor.; #; # A composite is a type of pythonizor, i.e. it is a callable that expects two; # parameters: a class proxy and a string with the name of that class.; # A composite is created with the following parameters:; # - A string to match the class/es to be pythonized; # - A string to match the method/s to be pythonized in the class/es; # - A callable that will post-process the return value of the matched method/s; #; # Here we create a composite that will match TGraph, TGraph2D and their error; # subclasses, and will pythonize their getter methods of the X,Y,Z coordinate; # and error arrays, which in C++ return a pointer to a double.; # The pythonization consists in setting the size of the array that the getter; # method returns, so that it is known in Python and the array is fully usable; # (its length can be obtained, it is iterable).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py:821,usab,usable,821,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py,1,['usab'],['usable']
Usability,"# Create the learned pdf and NLL sum based on the learned likelihood ratio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:13,learn,learned,13,tutorials/roofit/rf615_simulation_based_inference.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py,4,['learn'],['learned']
Usability,"# Define functions to compute the learned likelihood.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:34,learn,learned,34,tutorials/roofit/rf618_mixture_models.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py,1,['learn'],['learned']
Usability,"# Express your chain of operations with clarity!; # We are discussing an example here but it is not hard to imagine much more; # complex pipelines of actions acting on data. Those might require code; # which is well organised, for example allowing to conditionally add filters; # or again to clearly separate filters and actions without the need of; # writing the entire pipeline on one line. This can be easily achieved.; # We'll show this re-working the `Count` example:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:292,clear,clearly,292,tutorials/dataframe/df001_introduction.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py,1,['clear'],['clearly']
Usability,"# FIXME: Add fuzzy matching. One simple and possible effective idea would; # be to bin the diagnostics, print them in a normalized form (based solely; # on the structure of the diagnostic), compute the diff, then use that as; # the basis for matching. This has the nice property that we don't depend; # in any way on the diagnostic format.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py:33,simpl,simple,33,interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,1,['simpl'],['simple']
Usability,"# For simplicity, select only events with exactly two muons and require opposite charge",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py:6,simpl,simplicity,6,tutorials/dataframe/df102_NanoAODDimuonAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py,1,['simpl'],['simplicity']
Usability,"# Guess the content type based on the file's extension. Encoding; # will be ignored, although we should check for simple things like; # gzip'd or compressed files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py:114,simpl,simple,114,interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,1,['simpl'],['simple']
Usability,"# Hack to bypass ClearProxiedObjects()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:17,Clear,ClearProxiedObjects,17,tutorials/roofit/rf615_simulation_based_inference.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py,3,['Clear'],['ClearProxiedObjects']
Usability,"# However, it is less clear how to justify the prior used in randomizing; # the nuisance parameters (since that is a property of the ensemble,; # and y is a property of each toy pseudo experiment. In that case,; # one probably wants to consider a different y0 which will be held; # constant and the prior $\pi(b) = Pois(y0 | tau b) * \eta(b)$.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:22,clear,clear,22,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['clear'],['clear']
Usability,"# Insert report crashes link.; # Disabled for the time being until we decide exactly when this should; # be enabled. Also the radar reporter needs to be fixed to report; # multiple files.; # kReportReplacements.append((re.compile('<!-- REPORTCRASHES -->'),; # '<br>These files will automatically be attached to ' +; # 'reports filed here: <a href=""report_crashes"">Report Crashes</a>.')); ###; # Other simple parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:401,simpl,simple,401,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['simpl'],['simple']
Usability,"# LIT python file, a simple tuple",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py:21,simpl,simple,21,interpreter/llvm-project/llvm/utils/release/bump-version.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py,1,['simpl'],['simple']
Usability,"# Let's create a simple dataframe with ten rows and two columns",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:17,simpl,simple,17,tutorials/dataframe/df026_AsNumpyArrays.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py,1,['simpl'],['simple']
Usability,"# Many people pythonized the RooWorkspace themselves, by adding a new; # attribute `_import` that calls getattr(self, ""import"") under the; # hood. However, `_import` is now the reference to the original cppyy; # overload, and resetting it with a wrapper around `import` would cause; # infinite recursions! We prevent resetting any import-related function; # here, which results in a clearer error to the user than an infinite; # call stack involving the internal pythonization code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:383,clear,clearer,383,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,1,['clear'],['clearer']
Usability,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:739,simpl,simple,739,tutorials/pyroot/pyroot002_pythonizationDecorator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py,1,['simpl'],['simple']
Usability,"# Note: This simple Pythonization caused me days of headache.; # Initially, I was also checking of `len(kwargs) == 0`, but it just; # didn't work. Eventually, I understood that when cppy attempts; # implicit conversion, a magic `__cppyy_no_implicit=True` keyword; # argument is added, hence the `len(kwargs) == 0` check breaks the; # implicit conversion!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooargset.py:13,simpl,simple,13,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooargset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooargset.py,1,['simpl'],['simple']
Usability,"# Okay, if all input is acceptable, we simply pass; # it to the MakeSimpleMeasurement function, which; # does the real work.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:39,simpl,simply,39,tutorials/histfactory/makeQuickModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py,1,['simpl'],['simply']
Usability,"# One line may contain multiple function declarations.; # Skip if the mangled name has been added before.; # The line number may come from an included file, we simply require; # the search string (normally the function's spelling name, but is; # the class's spelling name for class specializations) to appear on; # the line to exclude functions from other files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:160,simpl,simply,160,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,1,['simpl'],['simply']
Usability,"# Operating on branches which are collections of objects; # Here we deal with the simplest of the cuts: we decide to accept the event; # only if the number of tracks is greater than 8.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:82,simpl,simplest,82,tutorials/dataframe/df002_dataModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py,1,['simpl'],['simplest']
Usability,# Otherwise simplify by assuming W < H,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py:12,simpl,simplify,12,interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,1,['simpl'],['simplify']
Usability,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:329,simpl,simply,329,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['simpl'],['simply']
Usability,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:292,simpl,simply,292,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['simpl'],['simply']
Usability,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:566,clear,clearly,566,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['clear'],['clearly']
Usability,"# Plot the learned and analytical summed negativelogarithmic likelihood",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:11,learn,learned,11,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,1,['learn'],['learned']
Usability,"# Prevent this new Python proxy from owning the C++ object; # Otherwise we get an 'already deleted' error in; # TList::Clear when the application ends",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:119,Clear,Clear,119,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,1,['Clear'],['Clear']
Usability,"# Process rootEventselector in simplified slimtree mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rootslimtree.py:31,simpl,simplified,31,main/python/rootslimtree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rootslimtree.py,1,['simpl'],['simplified']
Usability,# Python2 doesn't have list.clear(),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:28,clear,clear,28,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['clear'],['clear']
Usability,"# Pythonization for __enter__ and __exit__ methods; # These make TFile usable in a `with` statement as a context manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py:71,usab,usable,71,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,1,['usab'],['usable']
Usability,"# Reads file line-by-line, extracts Common and Simple case fold mappings and; # returns a (from_char, to_char, from_name) tuple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/unicode-case-fold.py:47,Simpl,Simple,47,interpreter/llvm-project/llvm/utils/unicode-case-fold.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/unicode-case-fold.py,1,['Simpl'],['Simple']
Usability,# Silly programmers refuse to print in simple machine readable; # formats. Whatever.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/token-delta.py:39,simpl,simple,39,interpreter/llvm-project/clang/utils/token-delta.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/token-delta.py,1,['simpl'],['simple']
Usability,# Simple case...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py:2,Simpl,Simple,2,interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,1,['Simpl'],['Simple']
Usability,# Simplify some common prefixes and suffixes,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mir_test_checks.py:2,Simpl,Simplify,2,interpreter/llvm-project/llvm/utils/update_mir_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mir_test_checks.py,1,['Simpl'],['Simplify']
Usability,"# Simply strategy, just return symbols in order of occurrence, even across; # multiple runs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py:2,Simpl,Simply,2,interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,1,['Simpl'],['Simply']
Usability,"# TMVA Deep learning ( CPU or GPU)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:12,learn,learning,12,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['learn'],['learning']
Usability,"# TODO(yln): interferes with progress bar; # Some tests use threads internally, and at least on Linux each of these; # threads counts toward the current process limit. Try to raise the (soft); # process limit so that tests don't fail due to resource exhaustion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py:29,progress bar,progress bar,29,interpreter/llvm-project/llvm/utils/lit/lit/run.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py,1,['progress bar'],['progress bar']
Usability,"# TODO: this reliese on CPPOverload cooking up a func_code object, which atm; # is simply not implemented for p3 :/; # convince inspect that cppyy method proxies are possible drop-ins for python; # methods and classes for pydoc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:83,simpl,simply,83,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,1,['simpl'],['simply']
Usability,"# The basename for the epub file. It defaults to the project name.; #epub_basename = project; # The HTML theme for the epub output. Since the default themes are not optimized; # for small screen space, using the same theme for HTML and epub output is; # usually not wise. This defaults to 'epub', a theme designed to save visual; # space.; #epub_theme = 'epub'; # The language of the text. It defaults to the language option; # or 'en' if the language is not set.; #epub_language = ''; # The scheme of the identifier. Typical schemes are ISBN or URL.; #epub_scheme = ''; # The unique identifier of the text. This can be a ISBN number; # or the project homepage.; #epub_identifier = ''; # A unique identification for the text.; #epub_uid = ''; # A tuple containing the cover image and cover page html template filenames.; #epub_cover = (); # A sequence of (type, uri, title) tuples for the guide element of content.opf.; #epub_guide = (); # HTML files that should be inserted before the pages created by sphinx.; # The format is a list of tuples containing the path and title.; #epub_pre_files = []; # HTML files shat should be inserted after the pages created by sphinx.; # The format is a list of tuples containing the path and title.; #epub_post_files = []; # A list of files that should not be packed into the epub file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:889,guid,guide,889,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['guid'],['guide']
Usability,"# The file contains json object per line.; # An example of the line (formatted json):; # {; # ""file"": ""simple.c"",; # ""pass"": ""Deduce function attributes in RPO"",; # ""bugs"": [; # [; # {; # ""action"": ""drop"",; # ""metadata"": ""DISubprogram"",; # ""name"": ""fn2""; # },; # {; # ""action"": ""drop"",; # ""metadata"": ""DISubprogram"",; # ""name"": ""fn1""; # }; # ]; # ]; # }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py:103,simpl,simple,103,interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py,1,['simpl'],['simple']
Usability,"# The previous example is just a simple one, but there are many ways in which a; # class can be pythonized. Typical examples are the redefinition of dunder; # methods (e.g. `__iter__` and `__next__` to make your objects iterable from; # Python). If you need some inspiration, many ROOT classes are pythonized in; # the way we just saw; their pythonizations can be seen at:; # https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/python/ROOT/pythonization; # The @pythonization decorator offers a few more options when it comes to; # matching classes that you want to pythonize. We saw that we can match a; # single class, but we can also specify a list of classes to pythonize.; #; # The following code defines a couple of new classes:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:33,simpl,simple,33,tutorials/pyroot/pyroot002_pythonizationDecorator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py,1,['simpl'],['simple']
Usability,"# The snapshotted dataframe should be usable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:38,usab,usable,38,bindings/experimental/distrdf/test/backend/test_graph_caching.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py,1,['usab'],['usable']
Usability,"# The struct model relies on data being a POD, but for C++ objects, there; # can be hidden data (e.g. vtable, thunks, or simply private members), and; # the alignment of Cling and Numba also need not be the same. Therefore, the; # struct is split in a series of byte members to get the total size right; # and to allow addressing at the correct offsets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:121,simpl,simply,121,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,1,['simpl'],['simply']
Usability,"# This file is a minimal clang-format sublime-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Put this file into your sublime Packages directory, e.g. on Linux:; # ~/.config/sublime-text-2/Packages/User/clang-format-sublime.py; # - Add a key binding:; # { ""keys"": [""ctrl+shift+c""], ""command"": ""clang_format"" },; #; # With this integration you can press the bound key and clang-format will; # format the current lines and selections for all cursor positions. The lines; # or regions are extended to the next bigger syntactic entities.; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py:717,undo,undo,717,interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,1,['undo'],['undo']
Usability,"# This file is a minimal clang-format vim-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Add to your .vimrc:; #; # if has('python'); # map <C-I> :pyf <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:pyf <path-to-this-file>/clang-format.py<cr>; # elseif has('python3'); # map <C-I> :py3f <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:py3f <path-to-this-file>/clang-format.py<cr>; # endif; #; # The if-elseif-endif conditional should pick either the python3 or python2; # integration depending on your vim setup.; #; # The first mapping enables clang-format for NORMAL and VISUAL mode, the second; # mapping adds support for INSERT mode. Change ""C-I"" to another binding if you; # need clang-format on a different key (C-I stands for Ctrl+i).; #; # With this integration you can press the bound key and clang-format will; # format the current line in NORMAL and INSERT mode or the selected region in; # VISUAL mode. The line or region is extended to the next bigger syntactic; # entity.; #; # You can also pass in the variable ""l:lines"" to choose the range for; # formatting. This variable can either contain ""<start line>:<end line>"" or; # ""all"" to format the full file. So, to format the full file, write a function; # like:; # :function FormatFile(); # : let l:lines=""all""; # : if has('python'); # : pyf <path-to-this-file>/clang-format.py; # : elseif has('python3'); # : py3f <path-to-this-file>/clang-format.py; # : endif; # :endfunction; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py:1649,undo,undo,1649,interpreter/llvm-project/clang/tools/clang-format/clang-format.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py,1,['undo'],['undo']
Usability,"# This is an empty task. This can happen:; # - If all trees assigned to this task are empty.; # - If the computed starting cluster is equal to the ending cluster.; # These would effectively lead to creating a TChain with zero usable; # entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:226,usab,usable,226,bindings/experimental/distrdf/python/DistRDF/Ranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py,1,['usab'],['usable']
Usability,"# To simplify output, we'll only proceed if the very first line of the block; # texts is common to each of them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py:5,simpl,simplify,5,interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,1,['simpl'],['simplify']
Usability,"# Training strategies; # one can catenate several training strings with different parameters (e.g. learning rates or regularizations; # parameters) The training string must be concatenated with the `|` delimiter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:99,learn,learning,99,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,1,['learn'],['learning']
Usability,"# Use Keras Deep Learning via PyMVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:17,Learn,Learning,17,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['Learn'],['Learning']
Usability,# Use the helper even when no timeout is required to make; # other code simpler (i.e. avoid bunch of ``!= None`` checks),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:72,simpl,simpler,72,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['simpl'],['simpler']
Usability,"# Visualize partial error. For partial error visualization the covariance matrix is first reduced as follows; # ___ -1; # Vred = V22 = V11 - V12 * V22 * V21; #; # Where V11,V12,V21, represent a block decomposition of the covariance matrix into observables that; # are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), V22bar; # is the Shur complement of V22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:443,simpl,simple,443,tutorials/roofit/rf610_visualerror.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py,1,['simpl'],['simple']
Usability,"# We apply a simple cut and define a new column.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:13,simpl,simple,13,tutorials/dataframe/df019_Cache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py,1,['simpl'],['simple']
Usability,"# We're only interested in this dependency if it's a *generated*; # file, i.e. it is in our set of targets. Also, we must check that; # currtarget is actually a target we know about: the dependency; # cache is not cleared when build.ninja changes, so it can contain; # stale data from targets that existed only in past builds in the; # same directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:214,clear,cleared,214,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,1,['clear'],['cleared']
Usability,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:309,clear,clearly,309,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['clear'],['clearly']
Usability,"# adding the node update function; # when an update is present in graph_nets, the update function has the _model attribute; # otherwise it is just a simple function defining output = input.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:149,simpl,simple,149,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['simpl'],['simple']
Usability,"# clear the profile file env, so that we don't generate profdata; # when capturing the cc1 command",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py:2,clear,clear,2,interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,1,['clear'],['clear']
Usability,"# create minimizer giving a name and a name (optionally) for the specific algorithm; # possible choices are:; # minimizerName algoName; #; # Minuit Migrad, Simplex,Combined,Scan (default is Migrad); # Minuit2 Migrad, BFGS, Simplex,Combined,Scan (default is Migrad); # GSLMultiMin ConjugateFR, ConjugatePR, BFGS, BFGS2, SteepestDescent; # GSLSimAn; # Genetic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:156,Simpl,Simplex,156,tutorials/fit/NumericalMinimization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py,2,['Simpl'],['Simplex']
Usability,"# for 2-d plots to inspect correlations:; # wspace.defineSet(""poi"",""s,rho""); # test simpler cases where parameters are known.; # wspace[""tau""].setConstant(); # wspace[""rho""].setConstant(); # wspace[""b""].setConstant(); # wspace[""bbar""].setConstant(); # inspect workspace; # wspace.Print(); # ----------------------------------------------------------; # Generate toy data; # generate toy data assuming current value of the parameters; # import into workspace.; # add Verbose() to see how it's being generated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:84,simpl,simpler,84,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['simpl'],['simpler']
Usability,"# https://packaging.python.org/guides/single-sourcing-package-version/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:31,guid,guides,31,bindings/pyroot/cppyy/cppyy/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py,1,['guid'],['guides']
Usability,"# introduce the actual component type; would have been a header,; # but this simply has to match what is in crossinheritance.cxx",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:77,simpl,simply,77,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['simpl'],['simply']
Usability,"# keep the running time short by default; # -------------------------------------------------------------------------; # # P A R T 5 : U S I N G H Y B R I D C A L C U L A T O R W I T H; # # A N A L T E R N A T I V E T E S T S T A T I S T I C; #; # A likelihood ratio test statistics should be 1-to-1 with the count x; # when the value of b is fixed in the likelihood. This is implemented; # by the SimpleLikelihoodRatioTestStat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:398,Simpl,SimpleLikelihoodRatioTestStat,398,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['Simpl'],['SimpleLikelihoodRatioTestStat']
Usability,"# make a simple model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py:9,simpl,simple,9,tutorials/roostats/rs401c_FeldmanCousins.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py,1,['simpl'],['simple']
Usability,"# make a simple model via the workspace factory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:9,simpl,simple,9,tutorials/roostats/IntervalExamples.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py,1,['simpl'],['simple']
Usability,"# pip does not resolve dependencies before building binaries, so unless; # packages are installed one-by-one, on old install is used or the build; # will simply fail hard. The following is not completely quiet, but at; # least a lot less conspicuous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:154,simpl,simply,154,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,1,['simpl'],['simply']
Usability,"# progress bar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:2,progress bar,progress bar,2,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,2,['progress bar'],['progress bar']
Usability,"# pythonization of std::string; placed here because it's simpler to write the; # custom ""npos"" object (to allow easy result checking of find/rfind) in Python",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:57,simpl,simpler,57,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,1,['simpl'],['simpler']
Usability,"# ratio Ntoys Null/ntoys ALT; # -------------------------------------------------------; # A New Test Statistic Class for this example.; # It simply returns the sum of the values in a particular; # column of a dataset.; # You can ignore this class and focus on the macro below",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:142,simpl,simply,142,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['simpl'],['simply']
Usability,"# ratio Ntoys Null/ntoys ALT; # ----------------------------------; # A New Test Statistic Class for this example.; # It simply returns the sum of the values in a particular; # column of a dataset.; # You can ignore this class and focus on the macro below",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:121,simpl,simply,121,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['simpl'],['simply']
Usability,"# the following will simply fail if there is a naming problem (e.g.; # std::, allocator<int>, etc., etc.); note the parsing required ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:21,simpl,simply,21,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['simpl'],['simply']
Usability,"# the function pointer of this overload can not be exactly typed, but; # only the storage size is relevant, so simply use a void*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:111,simpl,simply,111,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,1,['simpl'],['simply']
Usability,"# this is a universal, but platform-specific package; a combination; # that wheel does not recognize, thus simply fool it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:107,simpl,simply,107,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,2,['simpl'],['simply']
Usability,"# training2 = ROOT.TString(""LearningRate=1e-3,Momentum=0.9""; # ""ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,""; # ""MaxEpochs=20,WeightDecay=1e-4,Regularization=None,""; # ""Optimizer=SGD,DropConfig=0.0+0.0+0.0+0.""); # General Options.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:28,Learn,LearningRate,28,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['Learn'],['LearningRate']
Usability,# very simplistic way of findning the best match,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/wciia.py:7,simpl,simplistic,7,interpreter/llvm-project/llvm/utils/wciia.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/wciia.py,1,['simpl'],['simplistic']
Usability,"#!/usr/bin/env python; #; # Given a previous good compile narrow down miscompiles.; # Expects two directories named ""before"" and ""after"" each containing a set of; # assembly or object files where the ""after"" version is assumed to be broken.; # You also have to provide a script called ""link_test"". It is called with a; # list of files which should be linked together and result tested. ""link_test""; # should returns with exitcode 0 if the linking and testing succeeded.; #; # If a response file is provided, only the object files that are listed in the; # file are inspected. In addition, the ""link_test"" is called with a temporary; # response file representing one iteration of bisection.; #; # abtest.py operates by taking all files from the ""before"" directory and; # in each step replacing one of them with a file from the ""bad"" directory.; #; # Additionally you can perform the same steps with a single .s file. In this; # mode functions are identified by "" -- Begin function FunctionName"" and; # "" -- End function"" markers. The abtest.py then takes all; # function from the file in the ""before"" directory and replaces one function; # with the corresponding function from the ""bad"" file in each step.; #; # Example usage to identify miscompiled files:; # 1. Create a link_test script, make it executable. Simple Example:; # clang ""$@"" -o /tmp/test && /tmp/test || echo ""PROBLEM""; # 2. Run the script to figure out which files are miscompiled:; # > ./abtest.py; # somefile.s: ok; # someotherfile.s: skipped: same content; # anotherfile.s: failed: './link_test' exitcode != 0; # ...; # Example usage to identify miscompiled functions inside a file:; # 3. Run the tests on a single file (assuming before/file.s and; # after/file.s exist); # > ./abtest.py file.s; # funcname1 [0/XX]: ok; # funcname2 [1/XX]: ok; # funcname3 [2/XX]: skipped: same content; # funcname4 [3/XX]: failed: './link_test' exitcode != 0; # ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/abtest.py:1309,Simpl,Simple,1309,interpreter/llvm-project/llvm/utils/abtest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/abtest.py,1,['Simpl'],['Simple']
Usability,"## Book Keras recurrent models; # Book the different types of recurrent models in Keras (SimpleRNN, LSTM or GRU)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:89,Simpl,SimpleRNN,89,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['Simpl'],['SimpleRNN']
Usability,"## Book TMVA recurrent models; # Book the different types of recurrent models in TMVA (SimpleRNN, LSTM or GRU)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:87,Simpl,SimpleRNN,87,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['Simpl'],['SimpleRNN']
Usability,"## Restricting the fit range; The fit range can be restricted through. fit->SetRangeX(first bin #, last bin #);; and freed using. fit->ReleaseRangeX();; For 2D histograms the Y range can be similarly restricted using. fit->SetRangeY(first bin #, last bin #);; fit->ReleaseRangeY();; and for 3D histograms also. fit->SetRangeZ(first bin #, last bin #);; fit->ReleaseRangeZ();; It is also possible to exclude individual bins from the fit through. fit->ExcludeBin(bin #);; where the given bin number is assumed to follow the TH1::GetBin() numbering.; Any bins excluded in this way can be included again using the corresponding. fit->IncludeBin(bin #);. ## Weights histograms; Weights histograms (for a motivation see the above publication) can be specified; for the individual MC sources through. fit->SetWeight(parameter #, pointer to weights histogram);; and unset by specifying a null pointer. ## Obtaining fit results; The fit is carried out through. Int_t status = fit->Fit();; where status is the code returned from the ""MINIMIZE"" command. For fits; that converged, parameter values and errors can be obtained through. fit->GetResult(parameter #, value, error);; and the histogram corresponding to the total Monte Carlo prediction (which; is not the same as a simple weighted sum of the input Monte Carlo distributions); can be obtained by. TH1* result = fit->GetPlot();; ## Using different histograms; It is possible to change the histogram being fitted through. fit->SetData(TH1* data);; and to change the template histogram for a given parameter number through. fit->SetMC(parameter #, TH1* MC);; This can speed up code in case of multiple data or template histograms;; however, it should be done with care as any settings are taken over from; the previous fit. In addition, neither the dimensionality nor the numbers of; bins of the histograms should change (in that case it is better to instantiate; a new TFractionFitter object). ## Errors; Any serious inconsistency results in an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:4707,simpl,simple,4707,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['simpl'],['simple']
Usability,"## Rewrite function for TMVA::Factory::TrainAllMethods. This function provides interactive training.; # The training will be started on separated thread. The main thread will periodically check for updates and will create; # the JS output which will update the plots and progress bars. The main thread must contain `while True`, because, if not; # it will cause crash (output will be flushed by tornado IOLoop (runs on main thread), but the output streams are; # C++ atomic types); # @param fac the factory object pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:271,progress bar,progress bars,271,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['progress bar'],['progress bars']
Usability,"## We will inefficiently calculate an approximation of pi by generating; ## some data and doing very simple filtering and analysis on it.; ## We start by creating an empty dataframe where we will insert 10 million; ## random points in a square of side 2.0 (that is, with an inscribed unit; ## circle).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py:101,simpl,simple,101,tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## An example of complex analysis with RDataFrame: reconstructing the Higgs boson.; ##; ## This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z; ## bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a; ## subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons; ## analysis published on CERN Open Data portal ([10.7483/OPENDATA.CMS.JKB8.RR42](http://opendata.cern.ch/record/5500)).; ## The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons,; ## four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of; ## about 125 GeV.; ##; ## The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs; ## boson from the selected muons and electrons:; ## 1. Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the; ## leptons and quality of the tracks.; ## 2. Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on; ## the reconstructed objects.; ## 3. Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass.; ##; ## Another aim of this version of the tutorial is to show a way to blend C++ and Python code. All the functions that; ## make computations on data to define new columns or filter existing ones in a precise way, better suited to be written; ## in C++, have been moved to a header that is then declared to the ROOT C++ interpreter. The functions that instead; ## create nodes of the computational graph (e.g. Filter, Define) remain inside the main Python script.; ##; ## The tutorial has the fast mode enabled by default,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:172,simpl,simplified,172,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,1,['simpl'],['simplified']
Usability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Simple RDataFrame example in Python.; ##; ## This tutorial shows a minimal example of RDataFrame. It starts without input; ## data, generates a new column `x` with random numbers, and finally draws; ## a histogram for `x`.; ##; ## \macro_code; ## \macro_output; ##; ## \date September 2021; ## \author Enric Tejedor (CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df000_simple.py:65,Simpl,Simple,65,tutorials/dataframe/df000_simple.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df000_simple.py,1,['Simpl'],['Simple']
Usability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Use the ""trivial data source"", an example data source implementation.; ##; ## This tutorial illustrates how use the RDataFrame in combination with a; ## RDataSource. In this case we use a RTrivialDS, which is nothing more; ## than a simple generator: it does not interface to any existing dataset.; ## The RTrivialDS has a single column, col0, which has value n for entry n.; ##; ## Note that RTrivialDS is only a demo data source implementation and superior alternatives; ## typically exist for production use (e.g. constructing an empty RDataFrame as `RDataFrame(nEntries)`).; ##; ## \macro_code; ##; ## \date September 2017; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py:298,simpl,simple,298,tutorials/dataframe/df010_trivialDataSource.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_fit; ## \notebook; ## Fitting multiple functions to different ranges of a 1-D histogram; ## Example showing how to fit in a sub-range of an histogram; ## A histogram is created and filled with the bin contents and errors; ## defined in the table below.; ## Three Gaussians are fitted in sub-ranges of this histogram.; ## A new function (a sum of 3 Gaussians) is fitted on another subrange; ## Note that when fitting simple functions, such as Gaussians, the initial; ## values of parameters are automatically computed by ROOT.; ## In the more complicated case of the sum of 3 Gaussians, the initial values; ## of parameters must be given. In this particular case, the initial values; ## are taken from the result of the individual fits.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \authors Jonas Rembser, Rene Brun (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py:447,simpl,simple,447,tutorials/fit/multifit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_hist; ## \notebook; ## Example creating a simple ratio plot of two histograms using the `pois` division option.; ## Two histograms are set up and filled with random numbers. The constructor of `TRatioPlot`; ## takes the to histograms, name and title for the object, drawing options for the histograms (`hist` and `E` in this case); ## and a drawing option for the output graph.; ## Inspired by the tutorial of Paul Gessinger.; ##; ## \macro_image; ## \macro_code; ##; ## \author Alberto Ferro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/hist/ratioplot1.py:73,simpl,simple,73,tutorials/hist/ratioplot1.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/hist/ratioplot1.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_pyroot; ## A Simple GUI Example; ##; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gui_ex.py:44,Simpl,Simple,44,tutorials/pyroot/gui_ex.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gui_ex.py,1,['Simpl'],['Simple']
Usability,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## A Simple Graph with error bars; ##; ## \macro_image; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py:62,Simpl,Simple,62,tutorials/pyroot/gerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py,1,['Simpl'],['Simple']
Usability,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## A Simple histogram drawing example; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py:62,Simpl,Simple,62,tutorials/pyroot/h1ReadAndDraw.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py,1,['Simpl'],['Simple']
Usability,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## Simple example illustrating how to use the C++ interpreter; ##; ## \macro_image; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py:60,Simpl,Simple,60,tutorials/pyroot/hsum.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py,1,['Simpl'],['Simple']
Usability,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -nodraw; ## This tutorial illustrates how PyROOT supports declaring C++ callables from; ## Python callables making them, for example, usable with RDataFrame. The feature; ## uses the numba Python package for just-in-time compilation of the Python callable; ## and supports fundamental types and ROOT::RVec thereof.; ##; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py:186,usab,usable,186,tutorials/pyroot/pyroot004_NumbaDeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py,1,['usab'],['usable']
Usability,"## \file; ## \ingroup tutorial_pyroot; ## \notebook; ## A Simple Graph Example; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py:58,Simpl,Simple,58,tutorials/pyroot/graph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py,1,['Simpl'],['Simple']
Usability,"## \file; ## \ingroup tutorial_rcanvas; ##; ## This ROOT 7 example demonstrates how to create a ROOT 7 canvas (RCanvas) and; ## draw ROOT 7 boxes in it (RBox). It generates a set of boxes using the; ## ""normal"" coordinates' system.; ## Run macro with python3 -i box.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date 2021-06-15; ## \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; ## is welcome!; ## \author Sergey Linev",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rbox.py:490,Feedback,Feedback,490,tutorials/rcanvas/rbox.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rbox.py,1,['Feedback'],['Feedback']
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## A tutorial that explains you how to solve problems with binning effects and; ## numerical stability in binned fits.; ##; ## ### Introduction; ##; ## In this tutorial, you will learn three new things:; ##; ## 1. How to reduce the bias in binned fits by changing the definition of the; ## normalization integral; ##; ## 2. How to completely get rid of binning effects by integrating the pdf over each bin; ##; ## 3. How to improve the numeric stability of fits with a greatly different; ## number of events per bin, using a constant per-bin counterterm; ##; ## \macro_code; ## \macro_output; ##; ## \date January 2023; ## \author Jonas Rembser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:236,learn,learn,236,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['learn'],['learn']
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## Performing a simple fit with RooLagrangianMorphFunc; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date January 2022; ## \author Rahul Balasubramanian",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:73,simpl,simple,73,tutorials/roofit/rf712_lagrangianmorphfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:851,intuit,intuition,851,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,1,['intuit'],['intuition']
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Code HistFactory Models in JSON.; ##; ## With the HS3 standard, it is possible to code RooFit-Models of any kind as JSON files.; ## In this tutorial, you can see how to code up a (simple) HistFactory-based model in JSON and import it into a RooWorkspace.; ##; ## \macro_code; ##; ## \date November 2021; ## \author Carsten Burgard",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py:236,simpl,simple,236,tutorials/roofit/rf515_hfJSON.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: simple uncorrelated multi-dimensional pdfs; ##; ## `pdf = gauss(x,mx,sx) * gauss(y,my,sy)`; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py:81,simpl,simple,81,tutorials/roofit/rf304_uncorrprod.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in RooFit.; ##; ## This tutorial shows how to use SBI in ROOT. As reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## We compare the approach of using the likelihood ratio trick to morphing.; ##; ## An introduction of SBI can be found in https://arxiv.org/pdf/2010.06439.; ##; ## A short recap:; ## The idea of SBI is to fit a surrogate model to the data, in order to really; ## learn the likelihood function instead of calculating it. Therefore, a classifier is trained to discriminate between; ## samples from a target distribution (here the Gaussian) $$x\sim p(x|\theta)$$ and a reference distribution (here the Uniform); ## $$x\sim p_{ref}(x|\theta)$$.; ##; ## The output of the classifier $$\hat{s}(\theta)$$ is a monotonic function of the likelihood ration and can be turned into an estimate of the likelihood ratio; ## via $$\hat{r}(\theta)=\frac{1-\hat{s}(\theta)}{\hat{s}(\theta)}.$$; ## This is called the likelihood ratio trick.; ##; ## In the end we compare the negative logarithmic likelihoods of the learned, morphed and analytical likelihood with minuit and as a plot.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:198,simpl,simple,198,tutorials/roofit/rf615_simulation_based_inference.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py,3,"['learn', 'simpl']","['learn', 'learned', 'simple']"
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in multiple dimensions in RooFit.; ##; ## This tutorial shows how to use SBI in higher dimension in ROOT.; ## This tutorial transfers the simple concepts of the 1D case introduced in; ## rf615_simulation_based_inference.py onto the higher dimensional case.; ##; ## Again as reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be Gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## Furthermore, we compare SBI to the approach of moment morphing. In this case,; ## we can conclude, that SBI is way more sample eficcient when it comes to; ## estimating the negative log likelihood ratio.; ##; ## For an introductory background see rf615_simulation_based_inference.py; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:231,simpl,simple,231,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,2,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use of mixture models in RooFit.; ##; ## This tutorial shows, how to use mixture models for Likelihood Calculation in ROOT. Instead of directly; ## calculating the likelihood we use simulation based inference (SBI) as shown in tutorial 'rf615_simulation_based_inference.py'.; ## We train the classifier to discriminate between samples from an background hypothesis here the zz samples and a target; ## hypothesis, here the higgs samples. The data preparation is based on the tutorial 'df106_HiggsToFourLeptons.py'.; ##; ## An introduction to mixture models can be found here https://arxiv.org/pdf/1506.02169.; ##; ## A short summary:; ## We assume the whole probability distribution can be written as a mixture of several components, i.e.; ## $$p(x|\theta)= \sum_{c}w_{c}(\theta)p_{c}(x|\theta)$$; ## We can write the likelihood ratio in terms of pairwise classification problems; ## \begin{align*}; ## \frac{p(x|\mu)}{p(x|0)}&= \frac{\sum_{c}w_{c}(\mu)p_{c}(x|\mu)}{\sum_{c'}w_{c'}(0)p_{c'}(x|0)}\\; ## &=\sum_{c}\Bigg[\sum_{c'}\frac{w_{c'}(0)}{w_{c}(\mu)}\frac{p_{c'}(x|0)}{p_{c}(x|\mu)}\Bigg]^{-1},; ## \end{align*}; ## where mu is the signal strength, and a value of 0 corresponds to the background hypothesis. Using this decomposition, one is able to use the pairwise likelihood ratios.; ##; ## Since the only free parameter in our case is mu, the distributions are independent of this parameter and the dependence on the signal strength can be encoded into the weights.; ## Thus, the subratios simplify dramatically since they are independent of theta and these ratios can be pre-computed and the classifier does; ## not need to be parametrized.; ##; ## If you wish to see an analysis done with template histograms see 'hf001_example.py'.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date September 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:1556,simpl,simplify,1556,tutorials/roofit/rf618_mixture_models.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py,1,['simpl'],['simplify']
Usability,"## \file; ## \ingroup tutorial_roostats; ## \notebook -js; ## High Level Factory: creation of a simple model; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Danilo Piparo (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py:96,simpl,simple,96,tutorials/roostats/rs601_HLFactoryexample.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py,1,['simpl'],['simple']
Usability,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial illustrates how to prepare ROOT datasets to be nicely readable; ## by most machine learning methods. This requires filtering the initial complex; ## datasets and writing the data in a flat format.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:159,learn,learning,159,tutorials/tmva/tmva100_DataPreparation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py,1,['learn'],['learning']
Usability,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial illustrates how you can test a trained BDT model using the fast; ## tree inference engine offered by TMVA and external tools such as scikit-learn.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py:216,learn,learn,216,tutorials/tmva/tmva102_Testing.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py,1,['learn'],['learn']
Usability,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial show how you can train a machine learning model with any package; ## reading the training data directly from ROOT files. Using XGBoost, we illustrate; ## how you can convert an externally trained model in a format serializable and readable; ## with the fast tree inference engine offered by TMVA.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch; # XGBoost has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py:109,learn,learning,109,tutorials/tmva/tmva101_Training.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py,1,['learn'],['learning']
Usability,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:356,Learn,Learning,356,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['Learn'],['Learning']
Usability,"## \file; ## \ingroup tutorial_vecops; ## \notebook -nodraw; ## In this tutorial we learn how combinations of RVecs can be built.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2018; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py:84,learn,learn,84,tutorials/vecops/vo005_Combinations.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py,1,['learn'],['learn']
Usability,"## \file; ## \ingroup tutorial_vecops; ## \notebook -nodraw; ## In this tutorial we learn how elements of an RVec can be easily sorted and; ## selected.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2018; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo004_SortAndSelect.py:84,learn,learn,84,tutorials/vecops/vo004_SortAndSelect.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo004_SortAndSelect.py,1,['learn'],['learn']
Usability,"## \file; ## \ingroup tutorial_vecops; ## \notebook -nodraw; ## In this tutorial we learn how the RVec class can be used to; ## adopt existing memory or allocate some.; ##; ## \macro_code; ## \macro_output; ##; ## \date May 2018; ## \author Danilo Piparo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py:84,learn,learn,84,tutorials/vecops/vo001_AdoptOrOwnMemory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py,1,['learn'],['learn']
Usability,"## macro for performing a classification using a Recurrent Neural Network; ## @param use_type; ## use_type = 0 use Simple RNN network; ## use_type = 1 use LSTM network; ## use_type = 2 use GRU; ## use_type = 3 build 3 different networks with RNN, LSTM and GRU",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:115,Simpl,Simple,115,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['Simpl'],['Simple']
Usability,#######################################################################; # Example use case: progress bar; #######################################################################,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:93,progress bar,progress bar,93,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['progress bar'],['progress bar']
Usability,###; # Check exit code of a simple executable with no input,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py:28,simpl,simple,28,interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,1,['simpl'],['simple']
Usability,###; # Countable iteration; # Simplifies some calculations,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py:30,Simpl,Simplifies,30,interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,1,['Simpl'],['Simplifies']
Usability,#: Clear the screen and move to home position,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:3,Clear,Clear,3,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['Clear'],['Clear']
Usability,#: Clear to the beginning of the line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:3,Clear,Clear,3,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['Clear'],['Clear']
Usability,#: Clear to the end of the line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:3,Clear,Clear,3,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['Clear'],['Clear']
Usability,#: Clear to the end of the screen; # Output modes:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:3,Clear,Clear,3,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['Clear'],['Clear']
Usability,"#; # Draw hpx as a lego. Clicking on the lego area will show; # a ""transparent cube"" to guide you rotating the lego in real time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py:88,guid,guide,88,tutorials/pyroot/h1ReadAndDraw.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py,1,['guid'],['guide']
Usability,"#; # Get the text after the ""="". Macro expansion can make relying on tokens fraught...and; # member.get_tokens() simply does not always return anything.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:113,simpl,simply,113,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,1,['simpl'],['simply']
Usability,"#; # Implement a pkgutil-style namespace package as per the guidance on; # https://packaging.python.org/guides/packaging-namespace-packages.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:60,guid,guidance,60,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,2,['guid'],"['guidance', 'guides']"
Usability,"#; # This is a universal (Python2/Python3), but platform-specific (has; # compiled parts) package; a combination that wheel does not recognize,; # thus simply fool it.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:152,simpl,simply,152,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,1,['simpl'],['simply']
Usability,"'''; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;. // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);. auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };. ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:154,simpl,simple,154,tutorials/dataframe/df002_dataModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py,1,['simpl'],['simple']
Usability,"* //; // * verbose [Int_t] increasing verbosity (0 == minimal) * //; // * dyn [Bool_t] if kTRUE run in dynamic startup mode * //; // * skipds [Bool_t] if kTRUE the dataset related tests are skipped * //; // * * //; // * A certain number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin fun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:1862,Simpl,Simple,1862,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Simpl'],['Simple']
Usability,"* For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:1566,progress bar,progress bar,1566,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['progress bar'],['progress bar']
Usability,"* processes are inner loops and need to be as fast as possible. On most; * machines, particularly CPUs with pipelines or instruction prefetch,; * a (subscript-check-less) C table lookup; *		x = sample_range_limit[x];; * is faster than explicit tests; *		if (x < 0) x = 0;; *		else if (x > MAXJSAMPLE) x = MAXJSAMPLE;; * These processes all use a common table prepared by the routine below.; *; * For most steps we can mathematically guarantee that the initial value; * of x is within MAXJSAMPLE+1 of the legal range, so a table running from; * -(MAXJSAMPLE+1) to 2*MAXJSAMPLE+1 is sufficient. But for the initial; * limiting step (just after the IDCT), a wildly out-of-range value is ; * possible if the input data is corrupt. To avoid any chance of indexing; * off the end of memory and getting a bad-pointer trap, we perform the; * post-IDCT limiting thus:; *		x = range_limit[x & MASK];; * where MASK is 2 bits wider than legal sample data, ie 10 bits for 8-bit; * samples. Under normal circumstances this is more than enough range and; * a correct output will be generated; with bogus input data the mask will; * cause wraparound, and we will safely generate a bogus-but-in-range output.; * For the post-IDCT step, we want to convert the data from signed to unsigned; * representation by adding CENTERJSAMPLE at the same time that we limit it.; * So the post-IDCT limiting table ends up looking like this:; * CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,; * MAXJSAMPLE (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0 (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0,1,...,CENTERJSAMPLE-1; * Negative inputs select values from the upper half of the table after; * masking.; *; * We can save some space by overlapping the start of the post-IDCT table; * with the simpler range limiting table. The post-IDCT table begins at; * sample_range_limit + CENTERJSAMPLE.; *; * Note that the table is allocated in near data space on PCs; it's small; * enough and used often enough to justify this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:1993,simpl,simpler,1993,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['simpl'],['simpler']
Usability,"* the virtual array manager expects this. The source arrays will be scanned; * in the corresponding order, which means multiple passes through the source; * arrays for most of the transforms. That could result in much thrashing; * if the image is larger than main memory.; *; * If cropping or trimming is involved, the destination arrays may be smaller; * than the source arrays. Note it is not possible to do horizontal flip; * in-place when a nonzero Y crop offset is specified, since we'd have to move; * data from one block row to another but the virtual array manager doesn't; * guarantee we can touch more than one row at a time. So in that case,; * we have to use a separate destination array.; *; * Some notes about the operating environment of the individual transform; * routines:; * 1. Both the source and destination virtual arrays are allocated from the; * source JPEG object, and therefore should be manipulated by calling the; * source's memory manager.; * 2. The destination's component count should be used. It may be smaller; * than the source's when forcing to grayscale.; * 3. Likewise the destination's sampling factors should be used. When; * forcing to grayscale the destination's sampling factors will be all 1,; * and we may as well take that as the effective iMCU size.; * 4. When ""trim"" is in effect, the destination's dimensions will be the; * trimmed values but the source's will be untrimmed.; * 5. When ""crop"" is in effect, the destination's dimensions will be the; * cropped values but the source's will be uncropped. Each transform; * routine is responsible for picking up source data starting at the; * correct X and Y offset for the crop region. (The X and Y offsets; * passed to the transform routines are measured in iMCU blocks of the; * destination.); * 6. All the routines assume that the source and destination buffers are; * padded out to a full iMCU boundary. This is true, although for the; * source buffer it is an undocumented property of jdcoefct.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:2695,undo,undocumented,2695,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['undo'],['undocumented']
Usability,"*************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * Test 8 : H1: by-name processing ........................... OK * * //; // * Test 9 : H1: multi dataset processing ..................... OK * * //; // * Test 10 : H1: multi dataset and entry list ................. OK * * //; // * Test 11 : Package management with 'event' .................. OK * * //; // * Test 12 : Package argument passing ......................... OK * * //; // * Test 13 : Simple 'event' generation ........................ OK * * //; // * Test 14 : Input data propagation ........................... OK * * //; // * Test 15 : H1, Simple: async mode :.......................... OK * * //; // * Test 16 : Admin functionality .............................. OK * * //; // * Test 17 : Dynamic sub-mergers functionality ................ OK * * //; // * Test 18 : Event range processing ........................... OK * * //; // * Test 19 : Event range, TPacketizerAdaptive ................. OK * * //; // * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 :",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:2626,Simpl,Simple,2626,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Simpl'],['Simple']
Usability,"**********************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGListBox; \ingroup guiwidgets. A listbox is a box, possibly with scrollbar, containing entries.; Currently entries are simple text strings (TGTextLBEntry).; A TGListBox looks a lot like a TGCanvas. It has a TGViewPort; containing a TGLBContainer which contains the entries and it also; has a vertical scrollbar which becomes visible if there are more; items than fit in the visible part of the container. The TGListBox is user callable. The other classes are service; classes of the listbox. A listbox contains a container frame which is viewed through a; viewport. If the container is larger than the viewport than a; vertical scrollbar is added. Selecting an item in the listbox will generate the event:; - kC_COMMAND, kCM_LISTBOX, listbox id, item id. \class TGLBEntry; \ingroup guiwidgets. Basic listbox entries.; Listbox entries are created by a TGListBox and not by the user. \class TGTextLBEntry; \ingroup guiwidgets. Text string listbox entries.; A TGTextLBEntry is for TGListBox internal use. \class TGLineLBEntry; \ingroup guiwidgets. Line style and width listbox entries.; Line example and width number. \class TGI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx:1081,simpl,simple,1081,gui/gui/src/TGListBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx,1,['simpl'],['simple']
Usability,"***************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /* \class TGedEditor; \ingroup ged. The main class of ROOT graphics editor. It manages the appearance; of objects editors according to the selected object in the canvas; (an object became selected after the user click on it using the; left-mouse button). Every object editor provides an object specific GUI and follows a; simple naming convention: it has as a name the object class name; concatenated with 'Editor' (e.g. for TGraph objects the object; editor is TGraphEditor). The ROOT graphics editor can be activated by selecting 'Editor'; from the View canvas menu, or SetLine/Fill/Text/MarkerAttributes; from the context menu. The algorithm in use is simple: according to; the selected object <obj> in the canvas it looks for a class name; <obj>Editor. If a class with this name exists, the editor verifies; that this class derives from the base editor class TGedFrame.; It makes an instance of the object editor, scans all object base; classes searching the corresponding object editors and makes an; instance of the base class editor too. Once the object editor is in; place, it sets the user interface elements according to the object; state and is ready for interactions. When a new object of a; different class is selected, a new object editor is loaded in the; editor frame. The old one is cached in memory for potential reuse. Any created canvas will be shown with the editor if you have a; .rootrc file in your working directory containing the line:; Canvas.ShowEditor: true. An created object can be set as selected in a macro by:; canvas->Selected(parent_pad_of_object, object, 1);; The first parameter can be the canvas itself or the pad containing; 'object'. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx:1086,simpl,simple,1086,gui/ged/src/TGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx,1,['simpl'],['simple']
Usability,"**********************************/; /** \class TQCommand; \ingroup Base. The Command design pattern is based on the idea, that all editing; in an application is done by creating instances of command objects.; Command objects apply changes to the edited object and then are; stored on a command stack. Furthermore, each command knows how to; undo its changes to bring the edited object back to its previous; state. As long as the application only uses command objects to; change the state of the edited object, it is possible to undo; a sequence of commands by traversing the command stack downwards and; calling the ""undo"" method of each command in turn. It is also; possible to redo a sequence of commands by traversing the command; stack upwards and calling the ""redo"" method of each command. Examples:. 1. Create a new command; ~~~ {.cpp}; TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; ~~~; - 1st parameter - the name of class; - 2nd parameter - object; - 3rd parameter - the name of do/redo method; - 4th parameter - the name of undo method; Since redo,undo methods are the same, undo name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; ~~~; For objects derived from TObject class name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");; ~~~. 2. Setting undo, redo parameters.; ~~~ {.cpp}; Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color. com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; ~~~; 1st argument - the number of undo, redo parameters; the other arguments - undo, redo values; Since the number of undo,redo parameters is the same one can use; ~~~ {.cpp}; com->SetArgs(1, new_color, old_color);; ~~~. 3. Undo, redo method execution; ~~~ {.cpp}; com->Redo(); // execute redo method; com->Undo(); // execute undo method; ~~~. 4. Merged commands; It possible to group several commands togeth",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx:1466,undo,undo,1466,core/base/src/TQCommand.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx,3,['undo'],['undo']
Usability,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1446,simpl,simplify,1446,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['simpl'],['simplify']
Usability,"********************/; /** \class TClonesArray; \ingroup Containers; An array of clone (identical) objects. Memory for the objects; stored in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1383,Clear,Clear,1383,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['Clear'],['Clear']
Usability,"************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMultiLayerPerceptron. This class describes a neural network.; There are facilities to train the network and use the output. The input layer is made of inactive neurons (returning the; optionally normalized input) and output neurons are linear.; The type of hidden neurons is free, the default being sigmoids.; (One should still try to pass normalized inputs, e.g. between [0.,1]). The basic input is a TTree and two (training and test) TEventLists.; Input and output neurons are assigned a value computed for each event; with the same possibilities as for TTree::Draw().; Events may be weighted individually or via TTree::SetWeight().; 6 learning methods are available: kStochastic, kBatch,; kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS. This implementation, written by C. Delaere, is *inspired* from; the mlpfit package from J.Schwindling et al. with some extensions:. - the algorithms are globally the same; - in TMultilayerPerceptron, there is no limitation on the number of; layers/neurons, while MLPFIT was limited to 2 hidden layers; - TMultilayerPerceptron allows you to save the network in a root file, and; provides more export functionalities; - TMultilayerPerceptron gives more flexibility regarding the normalization of; inputs/outputs; - TMultilayerPerceptron provides, thanks to Andrea Bocci, the possibility to; use cross-entropy errors, which allows to train a network for pattern; classification based on Bayesian posterior probability. ### Introduction. Neural Networks are more and more used in various fields for data; analysis and classification, both for research and commercial; institutions. Some randomly chosen examples are:. - image analysis; - financi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:1078,learn,learning,1078,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['learn'],['learning']
Usability,"***********; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRecorder; \ingroup guirecorder. Class provides direct recorder/replayer interface for a user.; See 'ROOT EVENT RECORDING SYSTEM' for more information about usage. Implementation uses C++ design pattern State. Functionality of; recorder is divided into 4 classes according to the current; state of recorder. Internally, there is a pointer to TRecorderState object.; This object changes whenever state of recorder is changed.; States of recorder are the following:. - INACTIVE Implemented in TRecorderInactive class.; Default state after TRecorder object is created. - RECORDING Implemented in TRecorderRecording class. - REPLAYING Implemented in TRecorderReplaying class. - PAUSED Implemented in TRecorderPause class.; Pause of replaying. Every command for TRecorder is just passed; to TRecordeState object.; Depending on the current state of recorder, this command is passed; to some of the above mentioned classes and if valid, handled there. Switching between states is not possible from outside. States are; switched directly by state objects via:. ChangeState(TRecorderState* newstate, Bool_t deletePreviousState);. When recorder is switched to a new state, the old state object is; typically deleted. The only exception is switching from REPLAYING; state to PAUSED state. The previous state (REPLAYING) is not; deleted in order to be used again after TRecorder::Resume call. ### STATE TRANSITIONS:. - INACTIVE -> RECORDING via TRecorder::Start (Starts recording); - RECORDING -> INACTIVE via TRecorder::Stop (Stops recording). - INACTIVE -> REPLAYING via TRecorder::Replay (Starts replaying); - REPLAYING -> INACTIVE via TRecorder::ReplayStop (Stops replaying). - REPLAYING -> PAUSED via ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:1107,PAUSE,PAUSED,1107,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['PAUSE'],['PAUSED']
Usability,"*****/; /** \class TTask; \ingroup Base. \legacy{TTask}. TTask is a base class that can be used to build a complex tree of Tasks.; Each TTask derived class may contain other TTasks that can be executed; recursively, such that a complex program can be dynamically built and executed; by invoking the services of the top level Task or one of its subtasks. Use the TTask::Add function to add a subtask to an existing TTask.; To execute a TTask, one calls the ExecuteTask function. ExecuteTask will; call recursively:. - the TTask::Exec function of the derived class; - TTask::ExecuteTasks to execute for each task the list of its subtasks. If the top level task (see example below) is added to the list of Root; browsable objects, the tree of tasks can be visualized by the Root browser.; The browser can be used to start a task, set break points at the beginning; of a task or when the task has completed. At a breakpoint, data structures; generated by the execution up this point may be inspected asynchronously; and then the execution can be resumed by selecting the ""Continue"" function; of a task.; //; A Task may be active or inactive (controlled by TTask::SetActive).; When a task is not active, its sub tasks are not executed.; //; A TTask tree may be made persistent, saving the status of all the tasks.; //; The Root browser's picture below has been generated by executing; the following script:; ~~~ {.cpp}; {; TTask *aliroot = new TTask(""aliroot"",""ALICE reconstruction main task"");; TTask *geominit = new TTask(""geomInit"",""Initialize ALICE geometry"");; TTask *matinit = new TTask(""matInit"",""Initialize ALICE materials"");; TTask *physinit = new TTask(""physInit"",""Initialize Physics processes"");; TTask *tracker = new TTask(""tracker"",""Track reconstruction manager"");; TTask *tpcrec = new TTask(""tpcrec"",""TPC reconstruction"");; TTask *itsrec = new TTask(""itsrec"",""ITS reconstruction"");; TTask *muonrec = new TTask(""muonRec"",""Muon Reconstruction"");; TTask *phosrec = new TTask(""phosRec"",""Phos Reco",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx:1448,resume,resumed,1448,core/base/src/TTask.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTask.cxx,1,['resume'],['resumed']
Usability,", kPink, etc are defined in the header file; Rtypes.h that is included in all ROOT other header files. It is better; to use these keywords in user code instead of hardcoded color numbers, e.g.:. ~~~ {.cpp}; myObject.SetFillColor(kRed);; myObject.SetFillColor(kYellow-10);; myLine.SetLineColor(kMagenta+2);; ~~~. Begin_Macro(source); {; auto w = new TColorWheel();; auto cw = new TCanvas(""cw"",""cw"",0,0,400,400);; w->SetCanvas(cw);; w->Draw();; }; End_Macro. The complete list of predefined color names is the following:. ~~~ {.cpp}; kWhite = 0, kBlack = 1, kGray = 920, kRed = 632, kGreen = 416,; kBlue = 600, kYellow = 400, kMagenta = 616, kCyan = 432, kOrange = 800,; kSpring = 820, kTeal = 840, kAzure = 860, kViolet = 880, kPink = 900; ~~~. Note the special role of color `kWhite` (color number 0). It is the default; background color also. For instance in a PDF or PS files (as paper is usually white); it is simply not painted. To have a white color behaving like the other color the; simplest is to define an other white color not attached to the color index 0:. ~~~ {.cpp}; Int_t ci = TColor::GetFreeColorIndex();; TColor *color = new TColor(ci, 1., 1., 1.);; ~~~. \anchor C03; ## Bright and dark colors; Dark and bright colors are used to add 3D effects to graphical objects like; TWbox, TPave, TPaveText, TPaveLabel, etc. and in colored lego plots. Two static functions are available that return the bright or dark color number corresponding; to a given color index. If these variants don't already exist, they are created as needed:; ~~~ {.cpp}; Int_t dark = TColor::GetColorDark(color_index);; Int_t bright = TColor::GetColorBright(color_index);; ~~~. \anchor C031; ## Accessible Color Schemes; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:3659,simpl,simplest,3659,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['simpl'],['simplest']
Usability,", the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method can be called multiple times, but at most; /// once for each splitting category in use. For simple builds with a single; /// prototype, restriction can be specified with a Restrict() argument; /// on the build command line.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:4783,simpl,simple,4783,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['simpl'],['simple']
Usability,", the special Tree constructor; /// for TClonesArray is called.; /// The collection itself cannot be a TClonesArray.; ///; /// The function returns the total number of branches created.; ///; /// If name is given, all branch names will be prefixed with name_.; ///; /// IMPORTANT NOTE1: This function should not be called with splitlevel < 1.; ///; /// IMPORTANT NOTE2: The branches created by this function will have names; /// corresponding to the collection or object names. It is important; /// to give names to collections to avoid misleading branch names or; /// identical branch names. By default collections have a name equal to; /// the corresponding class name, e.g. the default name for a TList is ""TList"".; ///; /// And in general, in case two or more master branches contain subbranches; /// with identical names, one must add a ""."" (dot) character at the end; /// of the master branch name. This will force the name of the subbranches; /// to be of the form `master.subbranch` instead of simply `subbranch`.; /// This situation happens when the top level object; /// has two or more members referencing the same class.; /// For example, if a Tree has two branches B1 and B2 corresponding; /// to objects of the same class MyClass, one can do:; /// ~~~ {.cpp}; /// tree.Branch(""B1."",""MyClass"",&b1,8000,1);; /// tree.Branch(""B2."",""MyClass"",&b2,8000,1);; /// ~~~; /// if MyClass has 3 members a,b,c, the two instructions above will generate; /// subbranches called B1.a, B1.b ,B1.c, B2.a, B2.b, B2.c; ///; /// Example:; /// ~~~ {.cpp}; /// {; /// TTree T(""T"",""test list"");; /// TList *list = new TList();; ///; /// TObjArray *a1 = new TObjArray();; /// a1->SetName(""a1"");; /// list->Add(a1);; /// TH1F *ha1a = new TH1F(""ha1a"",""ha1"",100,0,1);; /// TH1F *ha1b = new TH1F(""ha1b"",""ha1"",100,0,1);; /// a1->Add(ha1a);; /// a1->Add(ha1b);; /// TObjArray *b1 = new TObjArray();; /// b1->SetName(""b1"");; /// list->Add(b1);; /// TH1F *hb1a = new TH1F(""hb1a"",""hb1"",100,0,1);; /// TH1F *hb1b = new TH1F",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1852,simpl,simply,1852,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['simpl'],['simply']
Usability,", when some of class members can not be converted to; normalized form or when class has custom streamer.; For instance, for TH1 class two tables are required: TH1_ver4 and TH1_raw4; Most of members are stored in TH1_ver4 table column-wise, and only member:; Double_t* fBuffer; //[fBufferSize]; can not be represented as column while size of array is not fixed.; Therefore, fBuffer will be written as list of values in TH1_raw4 table.; All objects, stored in the DB, will be registered in table ""ObjectsTable"".; In this there are following columns:; | Name | Description |; |------|-------------|; | ""key:id"" | key identifier to which belong object |; | ""obj:id"" | object identifier |; | ""Class"" | object class name |; | ""Version"" | object class version |. Data in each ""ObjectsTable"" row uniquely identify, in which table; and which column object is stored. In normal situation all class data should be sorted column-wise.; Up to now following member are supported:; -# Basic data types. Here is everything clear. Column SQL type will be as much as possible; close to the original type of value.; -# Fixed array of basic data types. In this case n columns like fArr[0],; fArr[1] and so on will be created.; If there is multidimensional array, names will be fArr2[1][2][1] and so on; -# Parent class. In this case version of parent class is stored and; data of parent class will be stored with the same obj:id in correspondent table.; There is a special case, when parent store nothing (this is for instance TQObject).; In that case just -1 is written to avoid any extra checks if table exist or not.; -# Object as data member. In that case object is saved in normal way to data base and column; will contain id of this object.; -# Pointer on object. Same as before. In case if object was already stored, just its id; will be placed in the column. For NULL pointer 0 is used.; -# TString. Now column with limited width like VARCAHR(255) in MySQL is used.; Later this will be improved to support maximu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:1895,clear,clear,1895,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['clear'],['clear']
Usability,",...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1931,Clear,Clear,1931,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['Clear'],['Clear']
Usability,"--------+ +-------------+ +-------------+ +-------------+; // | | | |; // V V | +----------+; // +-------------+ +----+ | |; // | ADD | |0xff| | |; // +-------------+ +----+ | |; // | | | |; // V V | |; // +-------------+ | |; // | AND | | |; // +-------------+ | |; // | | |; // +-----+ | |; // | | |; // V V V; // +-------------+; // | CMP |; // +-------------+; //; // The AND node may be safely removed for some combinations of inputs. In; // particular we need to take into account the extension type of the Input,; // the exact values of AddConstant, CompConstant, and CC, along with the nominal; // width of the input (this can work for any width inputs, the above graph is; // specific to 8 bits.; //; // The specific equations were worked out by generating output tables for each; // AArch64CC value in terms of and AddConstant (w1), CompConstant(w2). The; // problem was simplified by working with 4 bit inputs, which means we only; // needed to reason about 24 distinct bit patterns: 8 patterns unique to zero; // extension (8,15), 8 patterns unique to sign extensions (-8,-1), and 8; // patterns present in both extensions (0,7). For every distinct set of; // AddConstant and CompConstants bit patterns we can consider the masked and; // unmasked versions to be equivalent if the result of this function is true for; // all 16 distinct bit patterns of for the current extension type of Input (w0).; //; // sub w8, w0, w1; // and w10, w8, #0x0f; // cmp w8, w2; // cset w9, AArch64CC; // cmp w10, w2; // cset w11, AArch64CC; // cmp w9, w11; // cset w0, eq; // ret; //; // Since the above function shows when the outputs are equivalent it defines; // when it is safe to remove the AND. Unfortunately it only runs on AArch64 and; // would be expensive to run during compiles. The equations below were written; // in a test harness that confirmed they gave equivalent outputs to the above; // for all inputs function, so they can be used determine if the removal is; // legal instead.; //; // i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:1191,simpl,simplified,1191,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simplified']
Usability,"---------+-----------|; ## | | |; ## | noffbar | noff |; ## | tau bbar | tau b rho |; ## | | |; ## +-----------------------------> x; ## ~~~; ##; ## Left in this way, the problem is under-constrained. However, one may; ## have some auxiliary measurement (usually based on Monte Carlo) to; ## constrain rho. Let us call this auxiliary measurement that gives; ## the nominal value of rho ""rhonom"". Thus, there is a 'constraint' term in; ## the full model: P(rhonom | rho). In this case, we consider a Gaussian; ## constraint with standard deviation sigma.; ##; ## In the example, the initial values of the parameters are:; ##; ## ~~~{.cpp}; ## - s = 40; ## - b = 100; ## - tau = 5; ## - bbar = 1000; ## - rho = 1; ## (sigma for rho = 20%); ## ~~~; ##; ## and in the toy dataset:; ##; ## ~~~{.cpp}; ## - non = 139; ## - noff = 528; ## - nonbar = 993; ## - noffbar = 4906; ## - rhonom = 1.27824; ## ~~~; ##; ## Note, the covariance matrix of the parameters has large off-diagonal terms.; ## Clearly s,b are anti-correlated. Similarly, since noffbar >> nonbar, one would; ## expect bbar,tau to be anti-correlated.; ##; ## This can be seen below.; ##; ## ~~~{.cpp}; ## GLOBAL b bbar rho s tau; ## b 0.96820 1.000 0.191 -0.942 -0.762 -0.209; ## bbar 0.91191 0.191 1.000 0.000 -0.146 -0.912; ## rho 0.96348 -0.942 0.000 1.000 0.718 -0.000; ## s 0.76250 -0.762 -0.146 0.718 1.000 0.160; ## tau 0.92084 -0.209 -0.912 -0.000 0.160 1.000; ## ~~~; ##; ## Similarly, since tau*rho appears as a product, we expect rho,tau; ## to be anti-correlated. When the error on rho is significantly; ## larger than 1/sqrt(bbar), tau is essentially known and the; ## correlation is minimal (tau mainly cares about bbar, and rho about b,s).; ## In the alternate parametrization (bbar* tau * rho) the correlation coefficient; ## for rho,tau is large (and negative).; ##; ## The code below uses best-practices for RooFit & RooStats as of June 2010.; ##; ## It proceeds as follows:; ## - create a workspace to hold the model; ## - u",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:3853,Clear,Clearly,3853,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['Clear'],['Clearly']
Usability,"-----------------------------"" << Endl;; FindListOfNodes((DecisionTreeNode*)dt->GetRoot());; for( UInt_t i = 0; i < fPruneSequence.size(); i++ ); fPruneSequence[i]->SetTerminal(); // prune all the nodes from the sequence; // test the quality of the pruned tree; Double_t quality = 1.0 - dt->TestPrunedTreeQuality()/weights;; fQualityMap.insert(std::make_pair<const Double_t,Double_t>(quality,fPruneStrength));. nnodes = CountNodes((DecisionTreeNode*)dt->GetRoot()); // count the number of nodes in the pruned tree. Log() << ""Prune strength : "" << fPruneStrength << Endl;; Log() << ""Had "" << lastNodeCount << "" nodes, now have "" << nnodes << Endl;; Log() << ""Quality index is: "" << quality << Endl;. if (lastNodeCount == nnodes) errCount++;; else {; errCount=0; // reset counter; if ( nnodes < lastNodeCount / 2 ) {; Log() << ""Decreasing fDeltaPruneStrength to "" << fDeltaPruneStrength/2.0; << "" because the number of nodes in the tree decreased by a factor of 2."" << Endl;; fDeltaPruneStrength /= 2.;; }; }; lastNodeCount = nnodes;; if (errCount > 20) {; Log() << ""Increasing fDeltaPruneStrength to "" << fDeltaPruneStrength*2.0; << "" because the number of nodes in the tree didn't change."" << Endl;; fDeltaPruneStrength *= 2.0;; }; if (errCount > 40) {; Log() << ""Having difficulty determining the optimal prune strength, bailing out!"" << Endl;; forceStop = kTRUE;; }; // reset the tree for the next iteration; for( UInt_t i = 0; i < fPruneSequence.size(); i++ ); fPruneSequence[i]->SetTerminal(false);; fPruneSequence.clear();; }; // from the set of pruned trees, find the one with the optimal quality index; std::multimap<Double_t,Double_t>::reverse_iterator it = fQualityMap.rend(); ++it;; fPruneStrength = it->second;; FindListOfNodes((DecisionTreeNode*)dt->GetRoot());. // adjust the step size for the next tree automatically; fPruneStrength = 1.0e-3;; fDeltaPruneStrength = (fPruneStrength - 1.0)/(Double_t)fQualityMap.size();. return new PruningInfo(it->first, it->second, fPruneSequence);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:2199,clear,clear,2199,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,1,['clear'],['clear']
Usability,"--------------------------------------------------------------------===//; //; // DependenceAnalysis is an LLVM pass that analyses dependences between memory; // accesses. Currently, it is an (incomplete) implementation of the approach; // described in; //; // Practical Dependence Testing; // Goff, Kennedy, Tseng; // PLDI 1991; //; // There's a single entry point that analyzes the dependence between a pair; // of memory references in a function, returning either NULL, for no dependence,; // or a more-or-less detailed description of the dependence between them.; //; // Currently, the implementation cannot propagate constraints between; // coupled RDIV subscripts and lacks a multi-subscript MIV test.; // Both of these are conservative weaknesses;; // that is, not a source of correctness problems.; //; // Since Clang linearizes some array subscripts, the dependence; // analysis is using SCEV->delinearize to recover the representation of multiple; // subscripts, and thus avoid the more expensive and less precise MIV tests. The; // delinearization is controlled by the flag -da-delinearize.; //; // We should pay some careful attention to the possibility of integer overflow; // in the implementation of the various tests. This could happen with Add,; // Subtract, or Multiply, with both APInt's and SCEV's.; //; // Some non-linear subscript pairs can be handled by the GCD test; // (and perhaps other tests).; // Should explore how often these things occur.; //; // Finally, it seems like certain test cases expose weaknesses in the SCEV; // simplification, especially in the handling of sign and zero extensions.; // It could be useful to spend time exploring these.; //; // Please note that this is work in progress and the interface is subject to; // change.; //; //===----------------------------------------------------------------------===//; // //; // In memory of Ken Kennedy, 1945 - 2007 //; // //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:1855,simpl,simplification,1855,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['simpl'],['simplification']
Usability,"----------------------------------------------------------------|; | ""SCAT"" | Draw a scatter plot (legacy draw option).|; | ""COL"" | Draw a color plot. All the bins are painted even the empty bins (default).|; | ""COLZ"" | Same as ""COL"". In addition the color palette is also drawn.|; | ""0"" | When used with any COL options, the empty bins are not drawn.|; | ""TEXT"" | Draw bin contents as text (format set via `gStyle->SetPaintTextFormat`).|; | ""TEXTN"" | Draw bin names as text.|; | ""TEXTnn"" | Draw bin contents as text at angle nn (0 < nn <= 90).|; | ""L"" | Draw the bins boundaries as lines. The lines attributes are the TGraphs ones.|; | ""P"" | Draw the bins boundaries as markers. The markers attributes are the TGraphs ones.|; | ""F"" | Draw the bins boundaries as filled polygons. The filled polygons attributes are the TGraphs ones.|. `TH2Poly` can be drawn as a color plot (option COL). `TH2Poly` bins can have any; shapes. The bins are defined as graphs. The following macro is a very simple; example showing how to book a TH2Poly and draw it. Begin_Macro(source); {; auto ch2p1 = new TCanvas(""ch2p1"",""ch2p1"",600,400);; auto h2p = new TH2Poly();; h2p->SetName(""h2poly_name"");; h2p->SetTitle(""h2poly_title"");; double px1[] = {0, 5, 6};; double py1[] = {0, 0, 5};; double px2[] = {0, -1, -1, 0};; double py2[] = {0, 0, -1, 3};; double px3[] = {4, 3, 0, 1, 2.4};; double py3[] = {4, 3.7, 1, 3.7, 2.5};; h2p->AddBin(3, px1, py1);; h2p->AddBin(4, px2, py2);; h2p->AddBin(5, px3, py3);; h2p->Fill(0.1, 0.01, 3);; h2p->Fill(-0.5, -0.5, 7);; h2p->Fill(-0.7, -0.5, 1);; h2p->Fill(1, 3, 1.5);; double fx[] = {0.1, -0.5, -0.7, 1};; double fy[] = {0.01, -0.5, -0.5, 3};; double fw[] = {3, 1, 1, 1.5};; h2p->FillN(4, fx, fy, fw);; h2p->Draw(""col"");; }; End_Macro. Rectangular bins are a frequent case. The special version of; the `AddBin` method allows to define them more easily like; shown in the following example (th2polyBoxes.C). Begin_Macro(source); ../../../tutorials/hist/th2polyBoxes.C; End_Macro. One `",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:83767,simpl,simple,83767,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['simpl'],['simple']
Usability,"--------------------------------------------------===//; //; // This file contains the declaration of the MCPseudoProbe to support the pseudo; // probe encoding for AutoFDO. Pseudo probes together with their inline context; // are encoded in a DFS recursive way in the .pseudoprobe sections. For each; // .pseudoprobe section, the encoded binary data consist of a single or mutiple; // function records each for one outlined function. A function record has the; // following format :; //; // FUNCTION BODY (one for each outlined function present in the text section); // GUID (uint64); // GUID of the function's source name which may be different from the; // actual binary linkage name. This GUID will be used to decode and; // generate a profile against the source function name.; // NPROBES (ULEB128); // Number of probes originating from this function.; // NUM_INLINED_FUNCTIONS (ULEB128); // Number of callees inlined into this function, aka number of; // first-level inlinees; // PROBE RECORDS; // A list of NPROBES entries. Each entry contains:; // INDEX (ULEB128); // TYPE (uint4); // 0 - block probe, 1 - indirect call, 2 - direct call; // ATTRIBUTE (uint3); // 1 - reserved; // 2 - Sentinel; // 4 - HasDiscriminator; // ADDRESS_TYPE (uint1); // 0 - code address for regular probes (for downwards compatibility); // - GUID of linkage name for sentinel probes; // 1 - address delta; // CODE_ADDRESS (uint64 or ULEB128); // code address or address delta, depending on ADDRESS_TYPE; // DISCRIMINATOR (ULEB128) if HasDiscriminator; // INLINED FUNCTION RECORDS; // A list of NUM_INLINED_FUNCTIONS entries describing each of the inlined; // callees. Each record contains:; // INLINE SITE; // ID of the callsite probe (ULEB128); // FUNCTION BODY; // A FUNCTION BODY entry describing the inlined function.; //; // TODO: retire the ADDRESS_TYPE encoding for code addresses once compatibility; // is no longer an issue.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h:1645,GUID,GUID,1645,interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,1,['GUID'],['GUID']
Usability,"----------===//; // APInt Class; //===----------------------------------------------------------------------===//; /// Class for arbitrary precision integers.; ///; /// APInt is a functional replacement for common case unsigned integer type like; /// ""unsigned"", ""unsigned long"" or ""uint64_t"", but also allows non-byte-width; /// integer sizes and large integer value types such as 3-bits, 15-bits, or more; /// than 64-bits of precision. APInt provides a variety of arithmetic operators; /// and methods to manipulate integer values of any bit-width. It supports both; /// the typical integer arithmetic and comparison operations as well as bitwise; /// manipulation.; ///; /// The class has several invariants worth noting:; /// * All bit, byte, and word positions are zero-based.; /// * Once the bit width is set, it doesn't change except by the Truncate,; /// SignExtend, or ZeroExtend operations.; /// * All binary operators must be on APInt instances of the same bit width.; /// Attempting to use these operators on instances with different bit; /// widths will yield an assertion.; /// * The value is stored canonically as an unsigned value. For operations; /// where it makes a difference, there are both signed and unsigned variants; /// of the operation. For example, sdiv and udiv. However, because the bit; /// widths must be the same, operations such as Mul and Add produce the same; /// results regardless of whether the values are interpreted as signed or; /// not.; /// * In general, the class tries to follow the style of computation that LLVM; /// uses in its IR. This simplifies its use for LLVM.; /// * APInt supports zero-bit-width values, but operations that require bits; /// are not defined on it (e.g. you cannot ask for the sign of a zero-bit; /// integer). This means that operations like zero extension and logical; /// shifts are defined, but sign extension and ashr is not. Zero bit values; /// compare and hash equal to themselves, and countLeadingZeros returns 0.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:1652,simpl,simplifies,1652,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,1,['simpl'],['simplifies']
Usability,"--------|-------|--------|--------------|; /// | Points | X | X | X | X |; /// | Grid | X | X | X | X |; /// | Contours | X | - | X | - |; /// | Bars | X | - | X | - |; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// #### Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); ///; /// This function controls the display mode group and display mode of the; /// histogram drawing. To illustrate the possible effects of the various display; /// modes we introduce a set of examples. Default values:; ///; /// - `modeGroup = kModeGroupLightHeight `; /// - `displayMode = kDisplayModeSurface `; ///; /// \image html spectrumpainter001.jpg; ///; /// Simple modes group, display mode = points, 256 x 256 channels.; /// \image html spectrumpainter002.jpg; ///; /// Simple modes group, display mode = grid, 64 x 64 channels.; /// \image html spectrumpainter003.jpg; ///; /// Simple modes group, display mode = contours, 64 x 64 channels.; /// \image html spectrumpainter004.jpg; ///; /// Simple modes group, display mode = bars, 64 x 64 channels.; /// \image html spectrumpainter005.jpg; ///; /// Simple modes group, display mode = linesX, 64 x 64 channels.; /// \image html spectrumpainter006.jpg; ///; /// Simple modes group, display mode = linesY, 64 x 64 channels.; /// \image html spectrumpainter007.jpg; ///; /// Simple modes group, display mode = barsX, 64 x 64 channels.; /// \image html spectrumpainter008.jpg; ///; /// Simple modes group, display mode = barsY, 64 x 64 channels.; /// \image html spectrumpainter009.jpg; ///; /// Simple modes group, display mode = needles, 64 x 64 channels.; /// \image html spectrumpainter010.jpg; ///; /// Simple modes group, display mode = triangles, 64 x 64 channels.; /// \image html spectrumpainter011.jpg; ///; /// Light modes group, disp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:2440,Simpl,Simple,2440,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['Simpl'],['Simple']
Usability,"-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRecorder; \ingroup guirecorder. Class provides direct recorder/replayer interface for a user.; See 'ROOT EVENT RECORDING SYSTEM' for more information about usage. Implementation uses C++ design pattern State. Functionality of; recorder is divided into 4 classes according to the current; state of recorder. Internally, there is a pointer to TRecorderState object.; This object changes whenever state of recorder is changed.; States of recorder are the following:. - INACTIVE Implemented in TRecorderInactive class.; Default state after TRecorder object is created. - RECORDING Implemented in TRecorderRecording class. - REPLAYING Implemented in TRecorderReplaying class. - PAUSED Implemented in TRecorderPause class.; Pause of replaying. Every command for TRecorder is just passed; to TRecordeState object.; Depending on the current state of recorder, this command is passed; to some of the above mentioned classes and if valid, handled there. Switching between states is not possible from outside. States are; switched directly by state objects via:. ChangeState(TRecorderState* newstate, Bool_t deletePreviousState);. When recorder is switched to a new state, the old state object is; typically deleted. The only exception is switching from REPLAYING; state to PAUSED state. The previous state (REPLAYING) is not; deleted in order to be used again after TRecorder::Resume call. ### STATE TRANSITIONS:. - INACTIVE -> RECORDING via TRecorder::Start (Starts recording); - RECORDING -> INACTIVE via TRecorder::Stop (Stops recording). - INACTIVE -> REPLAYING via TRecorder::Replay (Starts replaying); - REPLAYING -> INACTIVE via TRecorder::ReplayStop (Stops replaying). - REPLAYING -> PAUSED via TRecorder::Pause (Pause replaying)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:1152,Pause,Pause,1152,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['Pause'],['Pause']
Usability,"-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN; \ingroup TMVA. Interface to Clermond-Ferrand artificial neural network. The CFMlpANN belong to the class of Multilayer Perceptrons (MLP), which are; feed-forward networks according to the following propagation schema:. \image html tmva_mlp.png Schema for artificial neural network. The input layer contains as many neurons as input variables used in the MVA.; The output layer contains two neurons for the signal and background; event classes. In between the input and output layers are a variable number; of <i>k</i> hidden layers with arbitrary numbers of neurons. (While the; structure of the input and output layers is determined by the problem, the; hidden layers can be configured by the user through the option string; of the method booking.). As indicated in the sketch, all neuron inputs to a layer are linear; combinations of the neuron output of the previous layer. The transfer; from input to output within a neuron is performed by means of an ""activation; function"". In general, the activation function of a neuron can be; zero (deactivated), one (linear), or non-linear. The above example uses; a sigmoid activation function. The transfer function of the output layer; is usually linear. As a consequence: an ANN without hidden layer should; give identical discrimination power as a linear discriminant analysis (Fisher).; In case of one hidden layer, the ANN computes a linear combination of; sigmoid. The learning method used by the CFMlpANN is only stochastic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:2519,learn,learning,2519,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['learn'],['learning']
Usability,"-[MeanY])/[SigmaY]),2))`, a 2d Gaussian without correlation.; - `bigaus` is a substitute for `[Constant]*ROOT::Math::bigaussian_pdf (x,y,[SigmaX],[SigmaY],[Rho],[MeanX],[MeanY])`, a 2d gaussian including a correlation parameter.; 3. Three Dimensional functions:; - `xyzgaus` is for a 3d Gaussians without correlations:; `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2))`. ### An expanded note on variables and parameters. In a TFormula, a variable is a defined by a name `x`, `y`, `z` or `t` or an; index like `x[0]`, `x[1]`, `x[2]`; that is `x[N]` where N is an integer. ```; TFormula("""", ""x[0] * x[1] + 10""); ```. Parameters are similar and can take any name. It is specified using brackets; e.g. `[expected_mass]` or `[0]`. ```; TFormula("""", ""exp([expected_mass])-1""); ```. Variables and parameters can be combined in the same TFormula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this way parameters can be used identically; to variables. See below for an example that uses only parameters to model a; function. ```; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");. tf.EvalPar(nullptr, params);; ```. ### A note on operators. All operators of C/C++ are allowed in a TFormula with a few caveats. The operators `|`, `&`, `%` can be used but will raise an error if u",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:5861,simpl,simple,5861,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['simpl'],['simple']
Usability,"-aligned splitting planes, there are many different ways; to construct kd-trees. The canonical method of kd-tree construction has the following constraints:. * As one moves down the tree, one cycles through the axes used to select the splitting planes.; (For example, the root would have an x-aligned plane, the root's children would both have y-aligned; planes, the root's grandchildren would all have z-aligned planes, and so on.); * At each step, the point selected to create the splitting plane is the median of the points being; put into the kd-tree, with respect to their coordinates in the axis being used. (Note the assumption; that we feed the entire set of points into the algorithm up-front.). This method leads to a balanced kd-tree, in which each leaf node is about the same distance from the root.; However, balanced trees are not necessarily optimal for all applications.; The following pseudo-code illustrates this canonical construction procedure (NOTE, that the procedure used; by the TKDTree class is a bit different, the following pseudo-code is given as a simple illustration of the; concept):. ~~~~; function kdtree (list of points pointList, int depth); {; if pointList is empty; return nil;; else; {; // Select axis based on depth so that axis cycles through all valid values; var int axis := depth mod k;. // Sort point list and choose median as pivot element; select median from pointList;. // Create node and construct subtrees; var tree_node node;; node.location := median;; node.leftChild := kdtree(points in pointList before median, depth+1);; node.rightChild := kdtree(points in pointList after median, depth+1);; return node;; }; }; ~~~~. Our construction method is optimized to save memory, and differs a bit from the constraints above.; In particular, the division axis is chosen as the one with the biggest spread, and the point to create the; splitting plane is chosen so, that one of the two subtrees contains exactly 2^k terminal nodes and is a; perfectly balance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:2567,simpl,simple,2567,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['simpl'],['simple']
Usability,"-back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common wnext == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to av",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:2233,simpl,simplification,2233,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,"['Simpl', 'simpl']","['Simplified', 'simplification']"
Usability,"-back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common write == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to av",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:2233,simpl,simplification,2233,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,2,"['Simpl', 'simpl']","['Simplified', 'simplification']"
Usability,". Here \f${\vec\theta}_0\f$ is some initial value of parameters. In general case:. \f[; {\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k} +; \sum^n_{j=1}{(f_j - F_j)\over\sigma^2_j}\cdot; {\partial^2f_j\over\partial\theta_i\partial\theta_k}\tag{4}; \f]. In FUMILI algorithm for second derivatives of Chi-square approximate; expression is used when last term in (4) is discarded. It is often; done, not always wittingly, and sometimes causes troubles, for example,; if user wants to limit parameters with positive values by writing down; \f$\theta_i^2\f$ instead of \f$\theta_i\f$. FUMILI will fail if one tries; minimize \f$\chi^2 = g^2(\vec\theta)\f$ where g is arbitrary function. Approximate value is:; \f[{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}\approx; Z_{ik}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k}\tag{5}; \f]. Then the equations for parameter increments are; \f[\left(\partial\chi^2\over\partial\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k Z_{ik}\cdot(\theta_k-\theta^0_k) = 0,; \qquad i=1\ldots m\tag{6}; \f]. Remarkable feature of algorithm is the technique for step; restriction. For an initial value of parameter \f${\vec\theta}^0\f$ a; parallelepiped \f$P_0\f$ is built with the center at \f${\vec\theta}^0\f$ and; axes parallel to coordinate axes \f$\theta_i\f$. The lengths of; parallelepiped sides along i-th axis is \f$2b_i\f$, where \f$b_i\f$ is such a; value that the functions \f$f_j(\vec\theta)\f$ are quasi-linear all over; the parallelepiped. FUMILI takes into account simple linear inequalities in the form:; \f[; \theta_i^{\rm min}\le\theta_i\le\theta^{\rm max}_i\tag{7}; \f]. They form parallelepiped \f$P\f$ (\f$P_0\f$ may be deformed by \f$P\f$).; Very similar step formulae are used in FUMILI for negative logarithm; of the likelihood function with the same idea - linearization of; function argument. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:3062,simpl,simple,3062,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['simpl'],['simple']
Usability,"/ mapping has several properties which complicate matching:; //; // - It may be ambiguous; many architectures can legally encode particular; // variants of an instruction in different ways (for example, using a smaller; // encoding for small immediates). Such ambiguities should never be; // arbitrarily resolved by the assembler, the assembler is always responsible; // for choosing the ""best"" available instruction.; //; // - It may depend on the subtarget or the assembler context. Instructions; // which are invalid for the current mode, but otherwise unambiguous (e.g.,; // an SSE instruction in a file being assembled for i486) should be accepted; // and rejected by the assembler front end. However, if the proper encoding; // for an instruction is dependent on the assembler context then the matcher; // is responsible for selecting the correct machine instruction for the; // current mode.; //; // The core matching algorithm attempts to exploit the regularity in most; // instruction sets to quickly determine the set of possibly matching; // instructions, and the simplify the generated code. Additionally, this helps; // to ensure that the ambiguities are intentionally resolved by the user.; //; // The matching is divided into two distinct phases:; //; // 1. Classification: Each operand is mapped to the unique set which (a); // contains it, and (b) is the largest such subset for which a single; // instruction could match all members.; //; // For register classes, we can generate these subgroups automatically. For; // arbitrary operands, we expect the user to define the classes and their; // relations to one another (for example, 8-bit signed immediates as a; // subset of 32-bit immediates).; //; // By partitioning the operands in this way, we guarantee that for any; // tuple of classes, any single instruction must match either all or none; // of the sets of operands which could classify to that tuple.; //; // In addition, the subset relation amongst classes induces a parti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:2475,simpl,simplify,2475,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['simpl'],['simplify']
Usability,"/ platform ABI's struct-layout algorithm, with the high-level goal; // of duplicating MSVC's layout. For non-bitfields, this follows; // the standard algorithm. The basic bitfield layout rule is to; // allocate an entire unit of the bitfield's declared type; // (e.g. 'unsigned long'), then parcel it up among successive; // bitfields whose declared types have the same size, making a new; // unit as soon as the last can no longer store the whole value.; // Since it completely replaces the platform ABI's algorithm,; // settings like !useBitFieldTypeAlignment() do not apply.; // A zero-width bitfield forces the use of a new storage unit for; // later bitfields. In general, this occurs by rounding up the; // current size of the struct as if the algorithm were about to; // place a non-bitfield of the field's formal type. Usually this; // does not change the alignment of the struct itself, but it does; // on some targets (those that useZeroLengthBitfieldAlignment(),; // e.g. ARM). In ms_struct layout, zero-width bitfields are; // ignored unless they follow a non-zero-width bitfield.; // A field alignment restriction (e.g. from #pragma pack) or; // specification (e.g. from __attribute__((aligned))) changes the; // formal alignment of the field. For System V, this alters the; // required alignment of the notional storage unit that must contain; // the bitfield. For ms_struct, this only affects the placement of; // new storage units. In both cases, the effect of #pragma pack is; // ignored on zero-width bitfields.; // On System V, a packed field (e.g. from #pragma pack or; // __attribute__((packed))) always uses the next available bit; // offset.; // In an ms_struct struct, the alignment of a fundamental type is; // always equal to its size. This is necessary in order to mimic; // the i386 alignment rules on targets which might not fully align; // all types (e.g. Darwin PPC32, where alignof(long long) == 4).; // First, some simple bookkeeping to perform for ms_struct structs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:3175,simpl,simple,3175,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['simpl'],['simple']
Usability,"/ propagate the shadow bits through some of the arithmetic; /// instruction (including MOV), store the shadow bits on every memory; /// write, report a bug on some other instructions (e.g. JMP) if the; /// associated shadow is poisoned.; ///; /// But there are differences too. The first and the major one:; /// compiler instrumentation instead of binary instrumentation. This; /// gives us much better register allocation, possible compiler; /// optimizations and a fast start-up. But this brings the major issue; /// as well: msan needs to see all program events, including system; /// calls and reads/writes in system libraries, so we either need to; /// compile *everything* with msan or use a binary translation; /// component (e.g. DynamoRIO) to instrument pre-built libraries.; /// Another difference from Memcheck is that we use 8 shadow bits per; /// byte of application memory and use a direct shadow mapping. This; /// greatly simplifies the instrumentation code and avoids races on; /// shadow updates (Memcheck is single-threaded so races are not a; /// concern there. Memcheck uses 2 shadow bits per byte with a slow; /// path storage that uses 8 bits per byte).; ///; /// The default value of shadow is 0, which means ""clean"" (not poisoned).; ///; /// Every module initializer should call __msan_init to ensure that the; /// shadow memory is ready. On error, __msan_warning is called. Since; /// parameters and return values may be passed via registers, we have a; /// specialized thread-local shadow for return values; /// (__msan_retval_tls) and parameters (__msan_param_tls).; ///; /// Origin tracking.; ///; /// MemorySanitizer can track origins (allocation points) of all uninitialized; /// values. This behavior is controlled with a flag (msan-track-origins) and is; /// disabled by default.; ///; /// Origins are 4-byte values created and interpreted by the runtime library.; /// They are stored in a second shadow mapping, one 4-byte value for 4 bytes; /// of application memor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:1686,simpl,simplifies,1686,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['simpl'],['simplifies']
Usability,/* !__x86_64__ */; /// Returns the program status and control \c EFLAGS register with the \c VM; /// and \c RF flags cleared.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the \c PUSHFD + \c POP instruction sequence.; ///; /// \returns The 32-bit value of the EFLAGS register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ia32intrin.h:117,clear,cleared,117,interpreter/llvm-project/clang/lib/Headers/ia32intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ia32intrin.h,1,['clear'],['cleared']
Usability,/* !defined __ARM_NEON__ */; /* The 'intrinsics' code simply won't compile without this -mfpu=neon:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:54,simpl,simply,54,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['simpl'],['simply']
Usability,"/* 'message' follows the X/Open approach of using @1, @2 to insert; * parameters previously supplied using the above functions. Errors in; * specifying the parameters will simply result in garbage substitutions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:172,simpl,simply,172,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['simpl'],['simply']
Usability,"/* --- simple histogram functions --- */; /*! HIST_count():; * Provides the precise count of each byte within a table 'count'.; * 'count' is a table of unsigned int, of minimum size (*maxSymbolValuePtr+1).; * Updates *maxSymbolValuePtr with actual largest symbol value detected.; * @return : count of the most frequent symbol (which isn't identified).; * or an error code, which can be tested using HIST_isError().; * note : if return == srcSize, there is only one symbol.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h:7,simpl,simple,7,builtins/zstd/compress/hist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h,1,['simpl'],['simple']
Usability,/* ...Fortran */; /* Split #if into 2 because some HP-UX can't handle long #if */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:54,UX,UX,54,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['UX'],['UX']
Usability,/* 16BIT */; /* Build a single 8-bit table: same as the 16-bit case but much simpler (and; * typically much faster). Note that libpng currently does no sBIT processing; * (apparently contrary to the spec) so a 256-entry table is always generated.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:77,simpl,simpler,77,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simpler']
Usability,"/* 16BIT */; /* The 'exp()' case must invert the above, taking a 20-bit fixed point; * logarithmic value and returning a 16 or 8-bit number as appropriate. In; * each case only the low 16 bits are relevant - the fraction - since the; * integer bits (the top 4) simply determine a shift.; *; * The worst case is the 16-bit distinction between 65535 and 65534. This; * requires perhaps spurious accuracy in the decoding of the logarithm to; * distinguish log2(65535/65534.5) - 10^-5 or 17 bits. There is little chance; * of getting this accuracy in practice.; *; * To deal with this the following exp() function works out the exponent of the; * fractional part of the logarithm by using an accurate 32-bit value from the; * top four fractional bits then multiplying in the remaining bits.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:261,simpl,simply,261,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simply']
Usability,/* 255 is used here for the component values for consistency with the code; * that undoes premultiplication in pngwrite.c.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:83,undo,undoes,83,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['undo'],['undoes']
Usability,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:877,simpl,simple,877,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['simpl'],['simple']
Usability,"/* ========================== */; /* *** simple functions *** */; /* ========================== */; /** HUF_compress() :; * Compress content from buffer 'src', of size 'srcSize', into buffer 'dst'.; * 'dst' buffer must be already allocated.; * Compression runs faster if `dstCapacity` >= HUF_compressBound(srcSize).; * `srcSize` must be <= `HUF_BLOCKSIZE_MAX` == 128 KB.; * @return : size of compressed data (<= `dstCapacity`).; * Special values : if return == 0, srcData is not compressible => Nothing is stored within dst !!!; * if HUF_isError(return), compression failed (more details using HUF_getErrorName()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:41,simpl,simple,41,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['simpl'],['simple']
Usability,"/* ==========================================; * XXH3 128 bits (a.k.a XXH128); * ==========================================; * XXH3's 128-bit variant has better mixing and strength than the 64-bit variant,; * even without counting the significantly larger output size.; *; * For example, extra steps are taken to avoid the seed-dependent collisions; * in 17-240 byte inputs (See XXH3_mix16B and XXH128_mix32B).; *; * This strength naturally comes at the cost of some speed, especially on short; * lengths. Note that longer hashes are about as fast as the 64-bit version; * due to it using only a slight modification of the 64-bit loop.; *; * XXH128 is also more oriented towards 64-bit machines. It is still extremely; * fast for a _128-bit_ hash on 32-bit (it usually clears XXH64).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:769,clear,clears,769,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['clear'],['clears']
Usability,"/* =========================================================================; * Copy the source state to the destination state.; * To simplify the source, this is not supported for 16-bit MSDOS (which; * doesn't have enough memory anyway to duplicate compression states).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:134,simpl,simplify,134,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['simpl'],['simplify']
Usability,"/* ===========================================================================; * For Z_RLE, simply look for runs of bytes, generate matches only of distance; * one. Do not maintain a hash table. (It will be regenerated if this run of; * deflate switches away from Z_RLE.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c:93,simpl,simply,93,builtins/zlib/deflate_cf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c,2,['simpl'],['simply']
Usability,"/* ===========================================================================; * Send one empty static block to give enough lookahead for inflate.; * This takes 10 bits, of which 7 may remain in the bit buffer.; * The current inflate code requires 9 bits of lookahead. If the; * last two codes for the previous block (real code plus EOB) were coded; * on 5 bits or less, inflate may have only 5+3 bits of lookahead to decode; * the last real code. In this case we send two empty static blocks instead; * of one. (There are no problems if the previous block is stored or fixed.); * To simplify the code, we assume the worst case of last real code encoded; * on one bit only.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/trees.c:585,simpl,simplify,585,graf2d/asimage/src/libAfterImage/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/trees.c,1,['simpl'],['simplify']
Usability,"/* ===========================================================================; Clear the error and end-of-file flags, and do the same for the real file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:80,Clear,Clear,80,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['Clear'],['Clear']
Usability,"/* @(#)root/auth:$Id$ */; /* Author: Martin Nicolay 22/11/1988 */; /******************************************************************************; Copyright (C) 2006 Martin Nicolay <m.nicolay@osm-gmbh.de>. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Lesser General Public; License as published by the Free Software Foundation; either; version 2.1 of the License, or (at your option) any later; version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,; MA 02110-1301 USA; ******************************************************************************/; /*******************************************************************************; * *; * Simple RSA public key code. *; * Adaptation in library for ROOT by G. Ganis, July 2003 *; * (gerardo.ganis@cern.ch) *; * *; * Header used by internal rsa functions *; * *; *******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/res/rsaaux.h:1083,Simpl,Simple,1083,net/auth/res/rsaaux.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/res/rsaaux.h,4,['Simpl'],['Simple']
Usability,"/* @(#)root/auth:$Id$ */; /* Author: Martin Nicolay 22/11/1988 */; /******************************************************************************; Copyright (C) 2006 Martin Nicolay <m.nicolay@osm-gmbh.de>. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Lesser General Public; License as published by the Free Software Foundation; either; version 2.1 of the License, or (at your option) any later; version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,; MA 02110-1301 USA; ******************************************************************************/; /*******************************************************************************; * *; * Simple RSA public key code. *; * Adaptation in library for ROOT by G. Ganis, July 2003 *; * (gerardo.ganis@cern.ch) *; * *; *******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx:1083,Simpl,Simple,1083,net/auth/src/rsaaux.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx,3,['Simpl'],['Simple']
Usability,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1361,simpl,simply,1361,core/clib/src/keys.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c,1,['simpl'],['simply']
Usability,/* A longjmp because of a bug in the application storage allocator or a; * simple failure to allocate the png_struct.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:75,simpl,simple,75,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simple']
Usability,"/* Added in libpng-1.6.0, a different check for the validity of a set of cHRM; * chunk chromaticities. Earlier checks used to simply look for the overflow; * condition (where the determinant of the matrix to solve for XYZ ends up zero; * because the chromaticity values are not all distinct.) Despite this it is; * theoretically possible to produce chromaticities that are apparently valid; * but that rapidly degrade to invalid, potentially crashing, sets because of; * arithmetic inaccuracies when calculations are performed on them. The new; * check is to round-trip xy -> XYZ -> xy and then check that the result is; * within a small percentage of the original.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:126,simpl,simply,126,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simply']
Usability,/* Added to libpng-1.5.4: check the color type to determine whether there; * is any alpha or transparency in the image and simply cancel the; * background and alpha mode stuff if there isn't.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:123,simpl,simply,123,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['simpl'],['simply']
Usability,"/* After finish_decompress, we can close the input file.; 	 * Here we postpone it until after no more JPEG errors are possible,; 	 * so as to simplify the setjmp error logic above. (Actually, I don't; 	 * think that jpeg_destroy can do an error exit, but why assume anything...); 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:142,simpl,simplify,142,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['simpl'],['simplify']
Usability,"/* Ah yes...we have a ""g_blow_chunks"" function.; * ""g_blow_chunks"" simply compresses all the chunks. This operation; * consists of freeing every memory area that should be freed (but; * which we haven't gotten around to doing yet). And, no,; * ""g_blow_chunks"" doesn't follow the naming scheme, but it is a; * much better name than ""g_mem_chunk_clean_all"" or something; * similar.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.h:67,simpl,simply,67,graf2d/win32gdk/gdk/src/glib/gmem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.h,1,['simpl'],['simply']
Usability,"/* Alpha in the output is irrelevant, simply map the opaque input; * pixels to the 6x6x6 color-map.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:38,simpl,simply,38,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simply']
Usability,/* An uninitialized gamma is assumed to be sRGB for the simplified API. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:56,simpl,simplified,56,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simplified']
Usability,/* And clear rest of color map: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c:7,clear,clear,7,graf2d/win32gdk/src/gifquantize.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c,2,['clear'],['clear']
Usability,"/* And simply copy these bytes. Some optimization is possible here,; * depending on the value of 'bytes_to_copy'. Special case the low; * byte counts, which we know to be frequent.; *; * Notice that these cases all 'return' rather than 'break' - this; * avoids an unnecessary test on whether to restore the last byte; * below.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:7,simpl,simply,7,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simply']
Usability,"/* Apollo 6.7, CRAY, old Sun, VAX/Ultrix vcc/cc and new ultrix; can't hack more than 31 arg's.; e.g. ultrix >= 4.3 gives message:; zow35> cc -c -DDECFortran cfortest.c; cfe: Fatal: Out of memory: cfortest.c; zow35>; Old __hpux had the problem, but new 'HP-UX A.09.03 A 9000/735' is fine; if using -Aa, otherwise we have a problem.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:256,UX,UX,256,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['UX'],['UX']
Usability,"/* Basic control structions. Read libpng-manual.txt or libpng.3 for more info.; *; * png_struct is the cache of information used while reading or writing a single; * PNG file. One of these is always required, although the simplified API; * (below) hides the creation and destruction of it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:222,simpl,simplified,222,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['simpl'],['simplified']
Usability,"/* Because we can't have introduced any new blank space into the; * tokens (we didn't do any new expansions), we don't need to; * perform field splitting. If we were going to honor IFS or do any; * expansions, we would have to do field splitting on each word; * here. Also, if we were going to do any expansion we would need to; * remove any zero-length words that didn't contain quotes; * originally; but since there's no expansion we know all words have; * nonzero length, unless they contain quotes.; * ; * So, we simply remove quotes, and don't do any field splitting or; * empty word removal, since we know there was no way to introduce; * such things.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c:517,simpl,simply,517,graf2d/win32gdk/gdk/src/glib/gshell.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c,1,['simpl'],['simply']
Usability,"/* Behavior of FORTRAN LOGICAL. All machines' LOGICAL is same size as C's int.; Conversion is automatic except for arrays which require F2CLOGICALV/C2FLOGICALV.; f2c, MIPS f77 [DECstation, SGI], VAX Ultrix f77,; HP-UX f77 : as in C.; VAX/VMS FORTRAN, VAX Ultrix fort,; Absoft Unix Fortran, IBM RS/6000 xlf : LS Bit = 0/1 = TRUE/FALSE.; Apollo : neg. = TRUE, else FALSE.; [Apollo accepts -1 as TRUE for function values, but NOT all other neg. values.]; [DECFortran for Ultrix RISC is also called f77 but is the same as VAX/VMS.]; [MIPS f77 treats .eqv./.neqv. as .eq./.ne. and hence requires LOGICAL_STRICT.]*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:215,UX,UX,215,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['UX'],['UX']
Usability,"/* Both must be defined for libpng to be able to handle the interlace,; * otherwise it gets handled below by simply reading and writing the passes; * directly.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:109,simpl,simply,109,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['simpl'],['simply']
Usability,"/* Buffer for distances. To simplify the code, d_buf and l_buf have; * the same number of elements. To use different lengths, an extra flag; * array would be necessary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:28,simpl,simplify,28,builtins/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h,3,['simpl'],['simplify']
Usability,"/* By default, use the simpler non-cosited sampling alignment */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:23,simpl,simpler,23,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['simpl'],['simpler']
Usability,"/* CHECK_FOR_INVALID_INDEX */; /*******************************************************************************; * Section 5: SIMPLIFIED API; *******************************************************************************; *; * Please read the documentation in libpng-manual.txt (TODO: write said; * documentation) if you don't understand what follows.; *; * The simplified API hides the details of both libpng and the PNG file format; * itself. It allows PNG files to be read into a very limited number of; * in-memory bitmap formats or to be written from the same formats. If these; * formats do not accommodate your needs then you can, and should, use the more; * sophisticated APIs above - these support a wide variety of in-memory formats; * and a wide variety of sophisticated transformations to those formats as well; * as a wide variety of APIs to manipulate ancillary information.; *; * To read a PNG file using the simplified API:; *; * 1) Declare a 'png_image' structure (see below) on the stack, set the; * version field to PNG_IMAGE_VERSION and the 'opaque' pointer to NULL; * (this is REQUIRED, your program may crash if you don't do it.); * 2) Call the appropriate png_image_begin_read... function.; * 3) Set the png_image 'format' member to the required sample format.; * 4) Allocate a buffer for the image and, if required, the color-map.; * 5) Call png_image_finish_read to read the image and, if required, the; * color-map into your buffers.; *; * There are no restrictions on the format of the PNG input itself; all valid; * color types, bit depths, and interlace methods are acceptable, and the; * input image is transformed as necessary to the requested in-memory format; * during the png_image_finish_read() step. The only caveat is that if you; * request a color-mapped image from a PNG that is full-color or makes; * complex use of an alpha channel the transformation is extremely lossy and the; * result may look terrible.; *; * To write a PNG file using the simplified API:;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:126,SIMPL,SIMPLIFIED,126,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,"['SIMPL', 'simpl']","['SIMPLIFIED', 'simplified']"
Usability,/* Calculate a reciprocal. The correct calculation is simply; * component/alpha*65535 << 15. (I.e. 15 bits of precision); this; * allows correct rounding by adding .5 before the shift. 'reciprocal'; * is only initialized when required.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:54,simpl,simply,54,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['simpl'],['simply']
Usability,"/* Checking the gamma values for being >0 was added in 1.5.4 along with the; * premultiplied alpha support; this actually hides an undocumented feature; * of the previous implementation which allowed gamma processing to be; * disabled in background handling. There is no evidence (so far) that this; * was being used; however, png_set_background itself accepted and must still; * accept '0' for the gamma value it takes, because it isn't always used.; *; * Since this is an API change (albeit a very minor one that removes an; * undocumented API feature) the following checks were only enabled in; * libpng-1.6.0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:131,undo,undocumented,131,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,2,['undo'],['undocumented']
Usability,"/* Checks whether the supplied bytes match the PNG signature. We allow; * checking less than the full 8-byte signature so that those apps that; * already read the first few bytes of a file to determine the file type; * can simply check the remaining bytes for extra assurance. Returns; * an integer less than, equal to, or greater than zero if sig is found,; * respectively, to be less than, to match, or be greater than the correct; * PNG signature (this is the same behavior as strcmp, memcmp, etc).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:223,simpl,simply,223,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simply']
Usability,/* Clear hash table and send Clear to make sure the decoder do the same. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:3,Clear,Clear,3,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,2,['Clear'],['Clear']
Usability,/* Clear internal model */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRolke.cxx:3,Clear,Clear,3,math/physics/src/TRolke.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRolke.cxx,1,['Clear'],['Clear']
Usability,/* Clear left-over bits */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c:3,Clear,Clear,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,1,['Clear'],['Clear']
Usability,/* Clear the input bit accumulator */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:3,Clear,Clear,3,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,4,['Clear'],['Clear']
Usability,"/* Clear the job description, but keep the mutex/cond */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:3,Clear,Clear,3,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Clear'],['Clear']
Usability,/* Clear the whole attr in case its content changed by syscall. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['Clear'],['Clear']
Usability,/* ClearsSuperRegs */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:3,Clear,ClearsSuperRegs,3,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,2,['Clear'],['ClearsSuperRegs']
Usability,/* Code range.; 										 * for some locales that would; 										 * be sufficient to simply set; 										 * range of characteres; 										 * supported by font */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:88,simpl,simply,88,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['simpl'],['simply']
Usability,"/* Compress whatever is at avail_in and next_in and write to the output file.; Return -1 if there is an error writing to the output file, otherwise 0.; flush is assumed to be a valid deflate() flush value. If flush is Z_FINISH,; then the deflate() state is reset to start a new gzip stream. If gz->direct; is true, then simply write to the output file without compressing, and; ignore flush. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c:320,simpl,simply,320,builtins/zlib/gzwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c,1,['simpl'],['simply']
Usability,/* Compressed SVG files (.svgz) are simply gzipped SVG files */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:36,simpl,simply,36,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['simpl'],['simply']
Usability,/* Compute the DC value after the required point transform by Al.; * This is simply an arithmetic right shift.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:77,simpl,simply,77,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,3,['simpl'],['simply']
Usability,/* Compute the sum of the absolute differences of the unsigned 8-bit; values in A and B. Return the value in the lower 16-bit word; the; upper words are cleared. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h:153,clear,cleared,153,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,1,['clear'],['cleared']
Usability,"/* Consistent with all the above colorspace handling an obviously *invalid*; * chunk is just ignored, so does not invalidate the color space. An; * alternative is to set the 'invalid' flags at the start of this routine; * and only clear them in they were not set before and all the tests pass.; */; /* The keyword must be at least one character and there is a; * terminator (0) byte and the compression method byte, and the; * 'zlib' datastream is at least 11 bytes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:231,clear,clear,231,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['clear'],['clear']
Usability,/* Const alpha < 1 and const color: Simple PDF draw orders; and an extra extended Graphics State for the alpha const */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:36,Simpl,Simple,36,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['Simpl'],['Simple']
Usability,"/* Convert from meters * 1,000,000 to inches * 100,000, meters to; * inches is simply *(100/2.54), so we want *(10/2.54) == 500/127.; * Notice that this can overflow - a warning is output and 0 is; * returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngget.c:79,simpl,simply,79,graf2d/asimage/src/libAfterImage/libpng/pngget.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngget.c,1,['simpl'],['simply']
Usability,"/* Counter-intuitively the data transformations must be called *after*; * png_write_info, not before as in the read code, but the 'set' functions; * must still be called before. Just set the color space information, never; * write an interlaced image.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:11,intuit,intuitively,11,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['intuit'],['intuitively']
Usability,"/* Create an error message in allocated memory and set state->err and; state->msg accordingly. Free any previous error message already there. Do; not try to free or allocate space if the error is Z_MEM_ERROR (out of; memory). Simply save the error message as a static string. If there is an; allocation failure constructing the error message, then convert the error to; out of memory. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:226,Simpl,Simply,226,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['Simpl'],['Simply']
Usability,/* Default attributes for simple form (no masking). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h:26,simpl,simple,26,interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/gfniintrin.h,1,['simpl'],['simple']
Usability,"/* Default the input file gamma if required - this is necessary because; * libpng assumes that if no gamma information is present the data is in the; * output format, but the simplified API deduces the gamma from the input; * format.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:175,simpl,simplified,175,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simplified']
Usability,"/* Define to 1 or 0, depending whether the compiler supports simple visibility; declarations. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h:61,simpl,simple,61,graf2d/win32gdk/gdk/src/iconv/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h,1,['simpl'],['simple']
Usability,/* Define to 500 only on HP-UX. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h:28,UX,UX,28,graf2d/win32gdk/gdk/src/iconv/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h,1,['UX'],['UX']
Usability,/* Dictionary is cleared if !cdict */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:17,clear,cleared,17,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['clear'],['cleared']
Usability,/* Discard marker and let entropy decoder resume processing. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:42,resume,resume,42,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['resume'],['resume']
Usability,"/* Dither file to 8-bit. Supply a palette, the current number; * of elements in the palette, the maximum number of elements; * allowed, and a histogram if possible. If the current number; * of colors is greater than the maximum number, the palette will be; * modified to fit in the maximum number. ""full_quantize"" indicates; * whether we need a quantizing cube set up for RGB images, or if we; * simply are reducing the number of colors in a paletted image.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:396,simpl,simply,396,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['simpl'],['simply']
Usability,"/* Due to quantization, we will usually find that many of the input; * coefficients are zero, especially the AC terms. We can exploit this; * by short-circuiting the IDCT calculation for any column in which all; * the AC terms are zero. In that case each output is equal to the; * DC coefficient (with scale factor as needed).; * With typical images and quantization tables, half or more of the; * column DCT calculations can be simplified this way.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c:429,simpl,simplified,429,graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,5,['simpl'],['simplified']
Usability,/* END of code to demonstrate user chunk support */; /* START of code to check that libpng has the required text support; this only; * checks for the write support because if read support is missing the chunk; * will simply not be reported back to pngtest.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:217,simpl,simply,217,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['simpl'],['simply']
Usability,/* Encoded data is simply the next bit of the two's-complement DC value */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:19,simpl,simply,19,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,2,['simpl'],['simply']
Usability,/* Ensure hash/chain table insertion resumes no sooner than lowlimit */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:37,resume,resumes,37,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['resume'],['resumes']
Usability,/* Example of using row callbacks to make a simple progress meter */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:44,simpl,simple,44,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['simpl'],['simple']
Usability,"/* FASTEST */; /* ===========================================================================; * For Z_RLE, simply look for runs of bytes, generate matches only of distance; * one. Do not maintain a hash table. (It will be regenerated if this run of; * deflate switches away from Z_RLE.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:108,simpl,simply,108,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,1,['simpl'],['simply']
Usability,"/* Finally, clear history */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:12,clear,clear,12,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['clear'],['clear']
Usability,"/* Find the polygon normal. It is important to get a reasonable; * normal even when the polygon is self-intersecting (eg. a bowtie).; * Otherwise, the computed normal could be very tiny, but perpendicular; * to the true plane of the polygon due to numerical noise. Then all; * the triangles would appear to be degenerate and we would incorrectly; * decompose the polygon as a fan (or simply not render it at all).; *; * We use a sum-of-triangles normal algorithm rather than the more; * efficient sum-of-trapezoids method (used in CheckOrientation(); * in normal.c). This lets us explicitly reverse the signed area; * of some triangles to get a reasonable normal in the self-intersecting; * case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/render.c:384,simpl,simply,384,graf3d/eve7/glu/render.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/render.c,1,['simpl'],['simply']
Usability,"/* First segment of ""simple"" table: limit[x] = 0 for x < 0 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:21,simpl,simple,21,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['simpl'],['simple']
Usability,"/* Fixed point gamma.; *; * The code to calculate the tables used below can be found in the shell script; * contrib/tools/intgamma.sh; *; * To calculate gamma this code implements fast log() and exp() calls using only; * fixed point arithmetic. This code has sufficient precision for either 8-bit; * or 16-bit sample values.; *; * The tables used here were calculated using simple 'bc' programs, but C double; * precision floating point arithmetic would work fine.; *; * 8-bit log table; * This is a table of -log(value/255)/log(2) for 'value' in the range 128 to; * 255, so it's the base 2 logarithm of a normalized 8-bit floating point; * mantissa. The numbers are 32-bit fractions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:374,simpl,simple,374,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simple']
Usability,/* Flags are always defined to simplify the code. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:31,simpl,simplify,31,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['simpl'],['simplify']
Usability,/* Following flag is set for events on the event queue during; * translation and cleared afterwards.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.c:81,clear,cleared,81,graf2d/win32gdk/gdk/src/gdk/gdkevents.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.c,2,['clear'],['cleared']
Usability,"/* For pixel depths up to 4 bpp the 8-pixel mask can be expanded to fit; * into 32 bits, then a single loop over the bytes using the four byte; * values in the 32-bit mask can be used. For the 'display' option the; * expanded mask may also not require any masking within a byte. To; * make this work the PACKSWAP option must be taken into account - it; * simply requires the pixels to be reversed in each byte.; *; * The 'regular' case requires a mask for each of the first 6 passes,; * the 'display' case does a copy for the even passes in the range; * 0..6. This has already been handled in the test above.; *; * The masks are arranged as four bytes with the first byte to use in; * the lowest bits (little-endian) regardless of the order (PACKSWAP or; * not) of the pixels in each byte.; *; * NOTE: the whole of this logic depends on the caller of this function; * only calling it on rows appropriate to the pass. This function only; * understands the 'x' logic; the 'y' logic is handled by the caller.; *; * The following defines allow generation of compile time constant bit; * masks for each pixel depth and each possibility of swapped or not; * swapped bytes. Pass 'p' is in the range 0..6; 'x', a pixel index,; * is in the range 0..7; and the result is 1 if the pixel is to be; * copied in the pass, 0 if not. 'S' is for the sparkle method, 'B'; * for the block method.; *; * With some compilers a compile time expression of the general form:; *; * (shift >= 32) ? (a >> (shift-32)) : (b >> shift); *; * Produces warnings with values of 'shift' in the range 33 to 63; * because the right hand side of the ?: expression is evaluated by; * the compiler even though it isn't used. Microsoft Visual C (various; * versions) and the Intel C compiler are known to do this. To avoid; * this the following macros are used in 1.5.6. This is a temporary; * solution to avoid destabilizing the code during the release process.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:355,simpl,simply,355,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simply']
Usability,"/* For safety clear out the input and output pointers (currently zlib; * doesn't use them on Init, but it might in the future).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:14,clear,clear,14,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['clear'],['clear']
Usability,"/* Formula taken from the Calendar FAQ; the formula was for the; * Julian Period which starts on 1 January 4713 BC, so we add; * 1,721,425 to the number of days before doing the formula.; *; * I'm sure this can be simplified for our 1 January 1 AD period; * start, but I can't figure out how to unpack the formula. ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c:214,simpl,simplified,214,graf2d/win32gdk/gdk/src/glib/gdate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c,1,['simpl'],['simplified']
Usability,"/* From Andreas Dilger e-mail to png-implement, 26 March 1998:; *; * In most cases, the ""simple transparency"" should be done prior to doing; * gray-to-RGB, or you will have to test 3x as many bytes to check if a; * pixel is transparent. You would also need to make sure that the; * transparency information is upgraded to RGB.; *; * To summarize, the current flow is:; * - Gray + simple transparency -> compare 1 or 2 gray bytes and composite; * with background ""in place"" if transparent,; * convert to RGB if necessary; * - Gray + alpha -> composite with gray background and remove alpha bytes,; * convert to RGB if necessary; *; * To support RGB backgrounds for gray images we need:; * - Gray + simple transparency -> convert to RGB + simple transparency,; * compare 3 or 6 bytes and composite with; * background ""in place"" if transparent; * (3x compare/pixel compared to doing; * composite with gray bkgrnd); * - Gray + alpha -> convert to RGB + alpha, composite with background and; * remove alpha bytes (3x float; * operations/pixel compared with composite; * on gray background); *; * Greg's change will do this. The reason it wasn't done before is for; * performance, as this increases the per-pixel operations. If we would check; * in advance if the background was gray or RGB, and position the gray-to-RGB; * transform appropriately, then it would save a lot of work/time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:89,simpl,simple,89,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,4,['simpl'],['simple']
Usability,"/* From boringssl/src/include/openssl/mem.h:; *; * OpenSSL has, historically, had a complex set of malloc debugging options.; * However, that was written in a time before Valgrind and ASAN. Since we now; * have those tools, the OpenSSL allocation functions are simply macros around; * the standard memory functions.; *; * #define OPENSSL_free free */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:261,simpl,simply,261,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['simpl'],['simply']
Usability,/* Functions g_strlcpy and g_strlcat were originally developed by; * Todd C. Miller <Todd.Miller@courtesan.com> to simplify writing secure code.; * See ftp://ftp.openbsd.org/pub/OpenBSD/src/lib/libc/string/strlcpy.3; * for more information.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c:115,simpl,simplify,115,graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,1,['simpl'],['simplify']
Usability,/* GC function types.; * Copy: Overwrites destination pixels with the source pixels.; * Invert: Inverts the destination pixels.; * Xor: Xor's the destination pixels with the source pixels.; * Clear: set pixels to 0; * And: source AND destination; * And Reverse: source AND (NOT destination); * And Invert: (NOT source) AND destination; * Noop: destination; * Or: source OR destination; * Nor: (NOT source) AND (NOT destination); * Equiv: (NOT source) XOR destination; * Xor Reverse: source OR (NOT destination); * Copy Inverted: NOT source; * Xor Inverted: (NOT source) OR destination; * Nand: (NOT source) OR (NOT destination); * Set: set pixels to 1; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkgc.h:192,Clear,Clear,192,graf2d/win32gdk/gdk/src/gdk/gdkgc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkgc.h,1,['Clear'],['Clear']
Usability,/* GRR TO DO (2.0 or whenever): simplify other internal calling interfaces */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:32,simpl,simplify,32,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['simpl'],['simplify']
Usability,/* GRelation; *; * Indexed Relations. Imagine a really simple table in a; * database. Relations are not ordered. This data type is meant for; * maintaining a N-way mapping.; *; * g_relation_new() creates a relation with FIELDS fields; *; * g_relation_destroy() frees all resources; * g_tuples_destroy() frees the result of g_relation_select(); *; * g_relation_index() indexes relation FIELD with the provided; * equality and hash functions. this must be done before any; * calls to insert are made.; *; * g_relation_insert() inserts a new tuple. you are expected to; * provide the right number of fields.; *; * g_relation_delete() deletes all relations with KEY in FIELD; * g_relation_select() returns ...; * g_relation_count() counts ...; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grel.h:55,simpl,simple,55,graf2d/win32gdk/gdk/src/glib/grel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grel.h,1,['simpl'],['simple']
Usability,/* HP-UX without +ppu or IBMR2 without -qextname. NOT reccomended. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:6,UX,UX,6,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['UX'],['UX']
Usability,"/* HP/UX 9.01 cc requires the blank between '_Icf(3,G,T0,UN,LN) CCCF(T1,1,0)' */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:6,UX,UX,6,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['UX'],['UX']
Usability,"/* Handle gamma correction. Screen_gamma=(display_exponent).; * NOTE: this API simply sets the screen and file gamma values. It will; * therefore override the value for gamma in a PNG file if it is called after; * the file header has been read - use with care - call before reading the PNG; * file for best results!; *; * These routines accept the same gamma values as png_set_alpha_mode (described; * above). The PNG_GAMMA_ defines and PNG_DEFAULT_sRGB can be passed to either; * API (floating point or fixed.) Notice, however, that the 'file_gamma' value; * is the inverse of a 'screen gamma' value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:79,simpl,simply,79,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['simpl'],['simply']
Usability,"/* Here we are at a dead end:; 				 * According to URI matching, a callback should be; 				 * responsible for handling the request,; 				 * we called it, but the callback declared itself; 				 * not responsible.; 				 * We use a goto here, to get out of this dead end,; 				 * and continue with the default handling.; 				 * A goto here is simpler and better to understand; 				 * than some curious loop. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:340,simpl,simpler,340,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['simpl'],['simpler']
Usability,"/* How the alpha channel is interpreted - this affects how the color channels; * of a PNG file are returned to the calling application when an alpha channel,; * or a tRNS chunk in a palette file, is present.; *; * This has no effect on the way pixels are written into a PNG output; * datastream. The color samples in a PNG datastream are never premultiplied; * with the alpha samples.; *; * The default is to return data according to the PNG specification: the alpha; * channel is a linear measure of the contribution of the pixel to the; * corresponding composited pixel, and the color channels are unassociated; * (not premultiplied). The gamma encoded color channels must be scaled; * according to the contribution and to do this it is necessary to undo; * the encoding, scale the color values, perform the composition and re-encode; * the values. This is the 'PNG' mode.; *; * The alternative is to 'associate' the alpha with the color information by; * storing color channel values that have been scaled by the alpha.; * image. These are the 'STANDARD', 'ASSOCIATED' or 'PREMULTIPLIED' modes; * (the latter being the two common names for associated alpha color channels).; *; * For the 'OPTIMIZED' mode, a pixel is treated as opaque only if the alpha; * value is equal to the maximum value.; *; * The final choice is to gamma encode the alpha channel as well. This is; * broken because, in practice, no implementation that uses this choice; * correctly undoes the encoding before handling alpha composition. Use this; * choice only if other serious errors in the software or hardware you use; * mandate it; the typical serious error is for dark halos to appear around; * opaque areas of the composited PNG image because of arithmetic overflow.; *; * The API function png_set_alpha_mode specifies which of these choices to use; * with an enumerated 'mode' value and the gamma of the required output:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:752,undo,undo,752,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['undo'],"['undo', 'undoes']"
Usability,/* IDAT logic needs to happen here to simplify getting the two flags; * right.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:38,simpl,simplify,38,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simplify']
Usability,"/* If here there is no read callback pointer set and no support is; * compiled in to just save the unknown chunks, so simply skip this; * chunk. If 'keep' is something other than AS_DEFAULT or NEVER then; * the app has erroneously asked for unknown chunk saving when there; * is no support.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:118,simpl,simply,118,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simply']
Usability,"/* If however the HashTable if full, we send a clear first and; * Clear the hash table.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:47,clear,clear,47,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"/* If recursing, clear list of pending dispatches */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:17,clear,clear,17,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,1,['clear'],['clear']
Usability,"/* If we allocate less than 65520 bytes, we assume that farmalloc; * will return a usable pointer which doesn't have to be normalized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c:83,usab,usable,83,builtins/zlib/zutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c,2,['usab'],['usable']
Usability,"/* If we are drawing on a window, calculate the region that is; * outside the source pixmap, and invalidate that, causing it to; * be cleared. XXX; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdrawable-win32.c:134,clear,cleared,134,graf2d/win32gdk/gdk/src/gdk/win32/gdkdrawable-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdrawable-win32.c,1,['clear'],['cleared']
Usability,"/* If we are forced to suspend, we must undo the assignments to any newly; * nonzero coefficients in the block, because otherwise we'd get confused; * next time about which coefficients were already nonzero.; * But we need not undo addition of bits to already-nonzero coefficients;; * instead, we can test the current bit to see if we already did it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:40,undo,undo,40,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,2,['undo'],['undo']
Usability,/* If you create a static date struct you need to clear it to get it; * in a sane state before use. You can clear a whole array at; * once with the ndates argument.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h:50,clear,clear,50,graf2d/win32gdk/gdk/src/glib/gdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h,2,['clear'],['clear']
Usability,"/* In 1.5.2 the definition of PNG_FUNCTION has been changed to always treat; * 'attributes' as a storage class - the attributes go at the start of the; * function definition, and attributes are always appended regardless of the; * compiler. This considerably simplifies these macros but may cause problems; * if any compilers both need function attributes and fail to handle them as; * a storage class (this is unlikely.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:259,simpl,simplifies,259,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['simpl'],['simplifies']
Usability,"/* In order to simplify the code, particularly on 16 bit machines, match; * distances are limited to MAX_DIST instead of WSIZE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:15,simpl,simplify,15,builtins/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h,2,['simpl'],['simplify']
Usability,"/* In order to simplify the code, particularly on 16 bit machines, match; * distances are limited to MAX_DIST instead of WSIZE.; */; /* Define fseek() commands */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h:15,simpl,simplify,15,core/zip/src/ZIP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h,1,['simpl'],['simplify']
Usability,"/* In order to simplify the code, particularly on 16 bit machines, match; * distances are limited to MAX_DIST instead of WSIZE.; */; /* in trees.c */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.h:15,simpl,simplify,15,graf2d/asimage/src/libAfterImage/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.h,1,['simpl'],['simplify']
Usability,"/* Initialize COM/APPn processing.; * By default, we examine and then discard APP0 and APP14,; * but simply discard COM and all other APPn.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:101,simpl,simply,101,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['simpl'],['simply']
Usability,"/* Internal data */; /* The mesh structure is similar in spirit, notation, and operations; * to the ""quad-edge"" structure (see L. Guibas and J. Stolfi, Primitives; * for the manipulation of general subdivisions and the computation of; * Voronoi diagrams, ACM Transactions on Graphics, 4(2):74-123, April 1985).; * For a simplified description, see the course notes for CS348a,; * ""Mathematical Foundations of Computer Graphics"", available at the; * Stanford bookstore (and taught during the fall quarter).; * The implementation also borrows a tiny subset of the graph-based approach; * use in Mantyla's Geometric Work Bench (see M. Mantyla, An Introduction; * to Sold Modeling, Computer Science Press, Rockville, Maryland, 1988).; *; * The fundamental data structure is the ""half-edge"". Two half-edges; * go together to make an edge, but they point in opposite directions.; * Each half-edge has a pointer to its mate (the ""symmetric"" half-edge Sym),; * its origin vertex (Org), the face on its left side (Lface), and the; * adjacent half-edges in the CCW direction around the origin vertex; * (Onext) and around the left face (Lnext). There is also a ""next""; * pointer for the global edge list (see below).; *; * The notation used for mesh navigation:; *	Sym = the mate of a half-edge (same edge, but opposite direction); *	Onext = edge CCW around origin vertex (keep same origin); *	Dnext = edge CCW around destination vertex (keep same dest); *	Lnext = edge CCW around left face (dest becomes new origin); *	Rnext = edge CCW around right face (origin becomes new dest); *; * ""prev"" means to substitute CW for CCW in the definitions above.; *; * The mesh keeps global lists of all vertices, faces, and edges,; * stored as doubly-linked circular lists with a dummy header node.; * The mesh stores pointers to these dummy headers (vHead, fHead, eHead).; *; * The circular edge list is special; since half-edges always occur; * in pairs (e and e->Sym), each half-edge stores a pointer in only; * one dir",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.h:320,simpl,simplified,320,graf3d/eve7/glu/mesh.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.h,1,['simpl'],['simplified']
Usability,/* Internal feedback buffer pass-through tokens */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:12,feedback,feedback,12,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['feedback'],['feedback']
Usability,/* Is this a build of a DLL where compilation of the object modules requires; * different preprocessor settings to those required for a simple library? If; * so PNG_BUILD_DLL must be set.; *; * If libpng is used inside a DLL but that DLL does not export the libpng APIs; * PNG_BUILD_DLL must not be set. To avoid the code below kicking in build a; * static library of libpng then link the DLL against that.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:136,simpl,simple,136,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['simpl'],['simple']
Usability,"/* It is up to the application to check that the profile class matches the; * application requirements; the spec provides no guidance, but it's pretty; * weird if the profile is not scanner ('scnr'), monitor ('mntr'), printer; * ('prtr') or 'spac' (for generic color spaces). Issue a warning in these; * cases. Issue an error for device link or abstract profiles - these don't; * contain the records necessary to transform the color-space to anything; * other than the target device (and not even that for an abstract profile).; * Profiles of these classes may not be embedded in images.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:125,guid,guidance,125,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['guid'],['guidance']
Usability,"/* It seems that it *must* be 8x8, at least on my machine. ; * Thus, tile an 8x8 bitmap with the stipple in case it is; * smaller, or simply use just the top left 8x8 in case it is; * larger.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c:134,simpl,simply,134,graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,1,['simpl'],['simply']
Usability,"/* Its regular code - if in pixel range simply add it to output */; /* stream, otherwise trace to codes linked list until the prefix */; /* is in pixel range:					 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c:40,simpl,simply,40,graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,1,['simpl'],['simply']
Usability,/* Just a dumb implementation for now. Could use fseek() except; * it doesn't work on pipes. Not clear that being smart is worth; * any trouble anyway --- large skips are infrequent.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:97,clear,clear,97,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['clear'],['clear']
Usability,"/* Known chunks that exist in pngtest.png must be supported or pngtest will fail; * simply as a result of re-ordering them. This may be fixed in 1.7; *; * pngtest allocates a single row buffer for each row and overwrites it,; * therefore if the write side doesn't support the writing of interlaced images; * nothing can be done for an interlaced image (and the code below will fail; * horribly trying to write extra data after writing garbage).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:84,simpl,simply,84,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['simpl'],['simply']
Usability,"/* Likewise */; /* We would like to #include any system header file which could define; iconv_t, 1. in order to eliminate the risk that the user gets compilation; errors because some other system header file includes /usr/include/iconv.h; which defines iconv_t or declares iconv after this file, 2. when compiling; for LIBICONV_PLUG, we need the proper iconv_t type in order to produce; binary compatible code.; But gcc's #include_next is not portable. Thus, once libiconv's iconv.h; has been installed in /usr/local/include, there is no way any more to; include the original /usr/include/iconv.h. We simply have to get away; without it.; Ad 1. The risk that a system header file does; #include ""iconv.h"" or #include_next ""iconv.h""; is small. They all do #include <iconv.h>.; Ad 2. The iconv_t type is a pointer type in all cases I have seen. (It; has to be a scalar type because (iconv_t)(-1) is a possible return value; from iconv_open().) */; /* Define iconv_t ourselves. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:601,simpl,simply,601,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['simpl'],['simply']
Usability,/* Linear feedback shift register */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,feedback,feedback,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['feedback'],['feedback']
Usability,"/* MAKECRCH */; /*; Generate tables for a byte-wise 32-bit CRC calculation on the polynomial:; x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x+1. Polynomials over GF(2) are represented in binary, one bit per coefficient,; with the lowest powers in the most significant bit. Then adding polynomials; is just exclusive-or, and multiplying a polynomial by x is a right shift by; one. If we call the above polynomial p, and represent a byte as the; polynomial q, also with the lowest power in the most significant bit (so the; byte 0xb1 is the polynomial x^7+x^3+x+1), then the CRC is (q*x^32) mod p,; where a mod b means the remainder after dividing a by b. This calculation is done using the shift-register method of multiplying and; taking the remainder. The register is initialized to zero, and for each; incoming bit, x^32 is added mod p to the register if the bit is a one (where; x^32 mod p is p+x^32 = x^26+...+1), and the register is multiplied mod p by; x (which is shifting right by one and adding x^32 mod p if the bit shifted; out is a one). We start with the highest power (least significant bit) of; q and repeat for all eight bits of q. The first table is simply the CRC of all possible eight bit values. This is; all the information needed to generate CRCs on data a byte at a time for all; combinations of CRC register values and incoming bytes. The remaining tables; allow for word-at-a-time CRC calculation for both big-endian and little-; endian machines, where a word is four bytes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/crc32.c:1182,simpl,simply,1182,builtins/zlib/crc32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/crc32.c,3,['simpl'],['simply']
Usability,"/* MAKEFIXED */; /*; Update the window with the last wsize (normally 32K) bytes written before; returning. If window does not exist yet, create it. This is only called; when a window is already in use, or when output has been written during this; inflate call, but the end of the deflate stream has not been reached yet.; It is also called to create a window for dictionary data when a dictionary; is loaded. Providing output buffers larger than 32K to inflate() should provide a speed; advantage, since only the last 32K of output is copied to the sliding window; upon return from inflate(), and since all distances after the first 32K of; output will fall in the output data, making match copies simpler and faster.; The advantage may be dependent on the size of the processor's data caches.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:698,simpl,simpler,698,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['simpl'],['simpler']
Usability,/* Macros to simplify using the error and trace message stuff */; /* The first parameter is either type of cinfo pointer */; /* Fatal errors (print message and exit) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:13,simpl,simplify,13,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,1,['simpl'],['simplify']
Usability,"/* Main part of ""simple"" table: limit[x] = x */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:17,simpl,simple,17,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['simpl'],['simple']
Usability,"/* Major TODO Items:; - Control dependent poison UB; - Strict mode - (i.e. must analyze every operand); - Poison through memory; - Function ABIs; - Full coverage of intrinsics, etc.. (ouch). Instructions w/Unclear Semantics:; - shufflevector - It would seem reasonable for an out of bounds mask element; to produce poison, but the LangRef does not state.; - all binary ops w/vector operands - The likely interpretation would be that; any element overflowing should produce poison for the entire result, but; the LangRef does not state.; - Floating point binary ops w/fmf flags other than (nnan, noinfs). It seems; strange that only certian flags should be documented as producing poison. Cases of clear poison semantics not yet implemented:; - Exact flags on ashr/lshr produce poison; - NSW/NUW flags on shl produce poison; - Inbounds flag on getelementptr produce poison; - fptosi/fptoui (out of bounds input) produce poison; - Scalable vector types for insertelement/extractelement; - Floating point binary ops w/fmf nnan/noinfs flags produce poison; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp:697,clear,clear,697,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,1,['clear'],['clear']
Usability,"/* Manage the read buffer; this simply reallocates the buffer if it is not small; * enough (or if it is not allocated). The routine returns a pointer to the; * buffer; if an error occurs and 'warn' is set the routine returns NULL, else; * it will call png_error (via png_malloc) on failure. (warn == 2 means; * 'silent').; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:32,simpl,simply,32,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simply']
Usability,"/* Merge together all vertices at exactly the same location.; * This is more efficient than processing them one at a time,; * simplifies the code (see ConnectLeftDegenerate), and is also; * important for correct handling of certain degenerate cases.; * For example, suppose there are two identical edges A and B; * that belong to different contours (so without this code they would; * be processed by separate sweep events). Suppose another edge C; * crosses A and B from above. When A is processed, we split it; * at its intersection point with C. However this also splits C,; * so when we insert B we may compute a slightly different; * intersection point. This might leave two edges with a small; * gap between them. This kind of error is especially obvious; * when using boundary extraction (GLU_TESS_BOUNDARY_ONLY).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:126,simpl,simplifies,126,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['simpl'],['simplifies']
Usability,"/* NOTE: below 'PNG_READ_ALPHA_MODE_SUPPORTED' is presumed to also enable the; * background support (see the comments in scripts/pnglibconf.dfa), this; * allows pre-multiplication of the alpha channel to be implemented as; * compositing on black. This is probably sub-optimal and has been done in; * 1.5.4 betas simply to enable external critique and testing (i.e. to; * implement the new API quickly, without lots of internal changes.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:312,simpl,simply,312,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['simpl'],['simply']
Usability,/* NOTE: this is the historical approach which simply; * truncates the results.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:47,simpl,simply,47,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['simpl'],['simply']
Usability,/* NOTE: this routine is not used internally! */; /* Build a grayscale palette. Palette is assumed to be 1 << bit_depth; * large of png_color. This lets grayscale images be treated as; * paletted. Most useful for gamma correction and simplification; * of code. This API is not used internally.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:234,simpl,simplification,234,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simplification']
Usability,/* NTRAIN: Nb of events used during the learning */; /* NTEST: Nb of events used for the test */; /* TIN: Input variables */; /* TOUT: type of the event */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:40,learn,learning,40,tmva/tmva/src/MethodCFMlpANN_Utils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx,2,['learn'],['learning']
Usability,"/* Nasty, need to remove any dot above. Though; 		 * I think only E WITH DOT ABOVE occurs in practice; 		 * which could simplify this considerably.; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c:120,simpl,simplify,120,graf2d/win32gdk/gdk/src/glib/guniprop.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c,1,['simpl'],['simplify']
Usability,/* Need to treat single statements specially. For example:; *; * for (A *a in b) if (stuff()) break;; * for (A *a in b) xxxyy;; *; * The following code simply scans ahead to the semi to find the actual end.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:152,simpl,simply,152,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['simpl'],['simply']
Usability,/* No alpha and const color: Simple PDF draw orders */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:29,Simpl,Simple,29,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['Simpl'],['Simple']
Usability,/* No need to print an error message. We simply abandon the compression; the buffer cannot be compressed or compressed buffer would be larger than original buffer; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c:41,simpl,simply,41,core/lzma/src/ZipLZMA.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c,1,['simpl'],['simply']
Usability,"/* Note that the actions of the A table were performed inside the AA table.; VAX Ultrix vcc, and HP-UX cc, didn't evaluate arguments to functions left to; right, so we had to split the original table into the current robust two. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:100,UX,UX,100,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['UX'],['UX']
Usability,"/* Note: if you selected 12-bit data precision, it is dangerous to turn off; * ENTROPY_OPT_SUPPORTED. The standard Huffman tables are only good for 8-bit; * precision, so jchuff.c normally uses entropy optimization to compute; * usable tables for higher precision. If you don't want to do optimization,; * you'll have to supply different default Huffman tables.; * The exact same statements apply for progressive JPEG: the default tables; * don't work for progressive mode. (This may get fixed, however.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:229,usab,usable,229,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['usab'],['usable']
Usability,"/* Note: this enum and the behavior it controls are effectively internal; * implementation details of the compressor. They are expected to continue; * to evolve and should be considered only in the context of extremely; * advanced performance tuning.; *; * Zstd currently supports the use of a CDict in three ways:; *; * - The contents of the CDict can be copied into the working context. This; * means that the compression can search both the dictionary and input; * while operating on a single set of internal tables. This makes; * the compression faster per-byte of input. However, the initial copy of; * the CDict's tables incurs a fixed cost at the beginning of the; * compression. For small compressions (< 8 KB), that copy can dominate; * the cost of the compression.; *; * - The CDict's tables can be used in-place. In this model, compression is; * slower per input byte, because the compressor has to search two sets of; * tables. However, this model incurs no start-up cost (as long as the; * working context's tables can be reused). For small inputs, this can be; * faster than copying the CDict's tables.; *; * - The CDict's tables are not used at all, and instead we use the working; * context alone to reload the dictionary and use params based on the source; * size. See ZSTD_compress_insertDictionary() and ZSTD_compress_usingDict().; * This method is effective when the dictionary sizes are very small relative; * to the input size, and the input size is fairly large to begin with.; *; * Zstd has a simple internal heuristic that selects which strategy to use; * at the beginning of a compression. However, if experimentation shows that; * Zstd is making poor choices, it is possible to override that choice with; * this enum.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1517,simpl,simple,1517,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['simpl'],['simple']
Usability,"/* Now initialize if required, setting the new parameters, otherwise just; * do a simple reset to the previous parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:82,simpl,simple,82,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['simpl'],['simple']
Usability,"/* Now recompute all bit lengths, scanning in increasing frequency.; * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all; * lengths instead of fixing only the wrong ones. This idea is taken; * from 'ar' written by Haruhiko Okumura.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:109,simpl,simpler,109,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,4,['simpl'],['simpler']
Usability,/* Now simply add the Counts until we have half of the Count: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c:7,simpl,simply,7,graf2d/win32gdk/src/gifquantize.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c,2,['simpl'],['simply']
Usability,"/* Old CFARGT14 -> CFARGT14FS as seen below, for Absoft cross-compile yields:; SunOS> cc -c -Xa -DAbsoftUNIXFortran c.c; ""c.c"", line 406: warning: argument mismatch; Haven't checked if this is ANSI C or a SunOS bug. SunOS -Xs works ok.; Behavior is most clearly seen in example:; #define A 1 , 2; #define C(X,Y,Z) x=X. y=Y. z=Z.; #define D(X,Y,Z) C(X,Y,Z); D(x,A,z); Output from preprocessor is: x = x . y = 1 . z = 2 .; #define CFARGT14(F,S,M,T1,T2,T3,T4,T5,T6,T7,T8,T9,TA,TB,TC,TD,TE) \; CFARGT14FS(F,S,M,T1,T2,T3,T4,T5,T6,T7,T8,T9,TA,TB,TC,TD,TE); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:254,clear,clearly,254,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['clear'],['clearly']
Usability,"/* On reaching window size, dictionaries are invalidated.; * For simplification, if window size is reached anywhere within next block,; * the dictionary is invalidated for the full block.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h:65,simpl,simplification,65,builtins/zstd/compress/zstd_compress_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h,1,['simpl'],['simplification']
Usability,"/* On read if the image is a 16-bit per component image and there is no gAMA; * or sRGB chunk assume that the components are sRGB encoded. Notice that; * images output by the simplified API always have gamma information; setting; * this flag only affects the interpretation of 16-bit images from an; * external source. It is recommended that the application expose this flag; * to the user; the user can normally easily recognize the difference between; * linear and sRGB encoding. This flag has no effect on write - the data; * passed to the write APIs must have the correct encoding (as defined; * above.); *; * If the flag is not set (the default) input 16-bit per component data is; * assumed to be linear.; *; * NOTE: the flag can only be set after the png_image_begin_read_ call,; * because that call initializes the 'flags' field.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:175,simpl,simplified,175,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['simpl'],['simplified']
Usability,"/* One beyond end of row */; /* At the start sp will point to the first byte to copy and dp to where; * it is copied to. ep always points just beyond the end of the row, so; * the loop simply copies (channels-1) channels until sp reaches ep.; *; * at_start: 0 -- convert AG, XG, ARGB, XRGB, AAGG, XXGG, etc.; * nonzero -- convert GA, GX, RGBA, RGBX, GGAA, RRGGBBXX, etc.; */; /* GA, GX, XG cases */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c:185,simpl,simply,185,graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,1,['simpl'],['simply']
Usability,/* Other chars are simply themselves when escaped with a backslash.; 			 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:19,simpl,simply,19,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['simpl'],['simply']
Usability,/* Output any partial block and the clear code. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:36,clear,clear,36,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['clear'],['clear']
Usability,"/* PNG_OUT_OF_RANGE returns true if value is outside the range; * ideal-delta..ideal+delta. Each argument is evaluated twice.; * ""ideal"" and ""delta"" should be constants, normally simple; * integers, ""value"" a variable. Added to libpng-1.2.6 JB; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:179,simpl,simple,179,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['simpl'],['simple']
Usability,"/* Pass 2: process rows from work array, store into output array. */; /* Note that we must descale the results by a factor of 8 == 2**3, */; /* and also undo the PASS1_BITS scaling. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c:153,undo,undo,153,graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,4,['undo'],['undo']
Usability,/* Perform some simple filtering. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c:16,simpl,simple,16,interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,1,['simpl'],['simple']
Usability,"/* Point to where post-IDCT table starts */; /* End of simple table, rest of first half of post-IDCT table */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:55,simpl,simple,55,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['simpl'],['simple']
Usability,"/* Prepare the reader to ignore all recognized chunks whose data will not; * be used, i.e., all chunks recognized by libpng except for those; * involved in basic image reading:; *; * IHDR, PLTE, IDAT, IEND; *; * Or image data handling:; *; * tRNS, bKGD, gAMA, cHRM, sRGB, [iCCP] and sBIT.; *; * This provides a small performance improvement and eliminates any; * potential vulnerability to security problems in the unused chunks.; *; * At present the iCCP chunk data isn't used, so iCCP chunk can be ignored; * too. This allows the simplified API to be compiled without iCCP support,; * however if the support is there the chunk is still checked to detect; * errors (which are unfortunately quite common.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:532,simpl,simplified,532,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simplified']
Usability,"/* Provide simple macro statement wrappers (adapted from Perl):; * G_STMT_START { statements; } G_STMT_END;; * can be used as a single statement, as in; * if (x) G_STMT_START { ... } G_STMT_END; else ...; *; * For gcc we will wrap the statements within `({' and `})' braces.; * For SunOS they will be wrapped within `if (1)' and `else (void) 0',; * and otherwise within `do' and `while (0)'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h:11,simpl,simple,11,graf2d/win32gdk/gdk/src/glib/gmacros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h,1,['simpl'],['simple']
Usability,"/* READ_BACKGROUND */; /* Scale 16-bit depth files to 8-bit depth. If both of these are set then the; * one that pngrtran does first (scale) happens. This is necessary to allow the; * TRANSFORM and API behavior to be somewhat consistent, and it's simpler.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:247,simpl,simpler,247,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['simpl'],['simpler']
Usability,"/* Read the data from whatever input you are using. The default routine; * reads from a file pointer. Note that this routine sometimes gets called; * with very small lengths, so you should implement some kind of simple; * buffering if you are using unbuffered reads. This should never be asked; * to read more than 64K on a 16-bit machine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c:212,simpl,simple,212,graf2d/asimage/src/libAfterImage/libpng/pngrio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c,1,['simpl'],['simple']
Usability,"/* Resizable arrays, remove fills any cleared spot and shortens the; * array, while preserving the order. remove_fast will distort the; * order by moving the last element to the position of the removed ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h:38,clear,cleared,38,graf2d/win32gdk/gdk/src/glib/garray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h,1,['clear'],['cleared']
Usability,/* Resizable pointer array. This interface is much less complicated; * than the above. Add appends appends a pointer. Remove fills any; * cleared spot and shortens the array. remove_fast will again distort; * order. ; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h:138,clear,cleared,138,graf2d/win32gdk/gdk/src/glib/garray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h,1,['clear'],['cleared']
Usability,"/* Return a list of the symbols sorted by code length */; /* It's not real clear to me why we don't need to consider the codelength; * changes made above, but the JPEG spec seems to think this works.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:75,clear,clear,75,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['clear'],['clear']
Usability,"/* Return flags indicating compile-time options. Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:; 1.0: size of uInt; 3.2: size of uLong; 5.4: size of voidpf (pointer); 7.6: size of z_off_t. Compiler, assembler, and debug options:; 8: DEBUG; 9: ASMV or ASMINF -- use ASM code; 10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention; 11: 0 (reserved). One-time table building (smaller code, but not thread-safe if true):; 12: BUILDFIXED -- build static block decoding tables when needed; 13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed; 14,15: 0 (reserved). Library content (indicates missing functionality):; 16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking; deflate code when not needed); 17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect; and decode gzip streams (to avoid linking crc code); 18-19: 0 (reserved). Operation variations (changes in library functionality):; 20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate; 21: FASTEST -- deflate algorithm with only one, lowest compression level; 22,23: 0 (reserved). The sprintf variant used by gzprintf (zero is best):; 24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format; 25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!; 26: 0 = returns value, 1 = void -- 1 means inferred string length returned. Remainder:; 27-31: 0 (reserved); */; /* utility functions */; /*; The following utility functions are implemented on top of the; basic stream-oriented functions. To simplify the interface, some; default options are assumed (compression level and memory usage,; standard memory allocation functions). The source code of these; utility functions can easily be modified if you need special options.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1564,simpl,simplify,1564,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['simpl'],['simplify']
Usability,"/* Rows of zeroes can be exploited in the same way as we did with columns.; * However, the column calculation has created many nonzero AC terms, so; * the simplification applies less often (typically 5% to 10% of the time).; * And testing floats for zero is relatively expensive, so we don't bother.; */; /* Even part */; /* Apply signed->unsigned and prepare float->int conversion */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c:155,simpl,simplification,155,graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,1,['simpl'],['simplification']
Usability,"/* Rows of zeroes can be exploited in the same way as we did with columns.; * However, the column calculation has created many nonzero AC terms, so; * the simplification applies less often (typically 5% to 10% of the time).; * On machines with very fast multiplication, it's possible that the; * test takes more time than it's worth. In that case this section; * may be commented out.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c:155,simpl,simplification,155,graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,2,['simpl'],['simplification']
Usability,"/* SIGMA mapps differently depending on whether it is; 	 * final or not. The following simplified test would; 	 * fail in the case of combining marks following the; 	 * sigma, but I don't think that occurs in real text.; 	 * The test here matches that in ICU.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c:87,simpl,simplified,87,graf2d/win32gdk/gdk/src/glib/guniprop.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c,1,['simpl'],['simplified']
Usability,/* SIMPLIFIED READ || SIMPLIFIED_WRITE */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:3,SIMPL,SIMPLIFIED,3,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['SIMPL'],['SIMPLIFIED']
Usability,/* SIMPLIFIED READ/WRITE */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3,SIMPL,SIMPLIFIED,3,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['SIMPL'],['SIMPLIFIED']
Usability,/* SIMPLIFIED READ/WRITE */; /* These are initialization functions for hardware specific PNG filter; * optimizations; list these here then select the appropriate one at compile; * time using the macro PNG_FILTER_OPTIMIZATIONS. If the macro is not defined; * the generic code is used.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:3,SIMPL,SIMPLIFIED,3,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['SIMPL'],['SIMPLIFIED']
Usability,/* SIMPLIFIED READ/WRITE SUPPORT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:3,SIMPL,SIMPLIFIED,3,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['SIMPL'],['SIMPLIFIED']
Usability,/* SIMPLIFIED READ/WRITE sRGB support */; /* SIMPLIFIED READ/WRITE SUPPORT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3,SIMPL,SIMPLIFIED,3,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,2,['SIMPL'],['SIMPLIFIED']
Usability,"/* SIMPLIFIED READ; *; * This code currently relies on the sequential reader, though it could easily; * be made to work with the progressive one.; */; /* Arguments to png_image_finish_read: */; /* Encoding of PNG data (used by the color-map code) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:3,SIMPL,SIMPLIFIED,3,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['SIMPL'],['SIMPLIFIED']
Usability,/* SIMPLIFIED_READ */; /* The base/delta tables are required for both read and write (but currently; * only the simplified versions.); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:112,simpl,simplified,112,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simplified']
Usability,/* SIMPLIFIED_WRITE */; /*******************************************************************************; * END OF SIMPLIFIED API; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:115,SIMPL,SIMPLIFIED,115,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['SIMPL'],['SIMPLIFIED']
Usability,"/* Section 4: exported functions; * Here are the function definitions most commonly used. This is not; * the place to find out how to use libpng. See libpng-manual.txt for the; * full explanation, see example.c for the summary. This just provides; * a simple one line description of the use of each function.; *; * The PNG_EXPORT() and PNG_EXPORTA() macros used below are defined in; * pngconf.h and in the *.dfn files in the scripts directory.; *; * PNG_EXPORT(ordinal, type, name, (args));; *; * ordinal: ordinal that is used while building; * *.def files. The ordinal value is only; * relevant when preprocessing png.h with; * the *.dfn files for building symbol table; * entries, and are removed by pngconf.h.; * type: return type of the function; * name: function name; * args: function arguments, with types; *; * When we wish to append attributes to a function prototype we use; * the PNG_EXPORTA() macro instead.; *; * PNG_EXPORTA(ordinal, type, name, (args), attributes);; *; * ordinal, type, name, and args: same as in PNG_EXPORT().; * attributes: function attributes; */; /* Returns the version number of the library */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:252,simpl,simple,252,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['simpl'],['simple']
Usability,"/* Section F.2.2.2: decode the AC coefficients */; /* Since zeroes are skipped, output area must be cleared beforehand */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:100,clear,cleared,100,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,2,['clear'],['cleared']
Usability,/* Send Clear to make sure the encoder is initialized. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:8,Clear,Clear,8,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['Clear'],['Clear']
Usability,"/* Send ourselves a selection clear message so that gtk thinks we don't; * have the selection, and will claim it anew when needed, and; * we thus get a chance to store data in the Windows clipboard.; * Otherwise, if a gtkeditable does a copy to clipboard several times; * only the first one actually gets copied to the Windows clipboard,; * as only the first one causes a call to gdk_property_change.; *; * Hmm, there is something fishy with this. Cut and paste inside the; * same app didn't work, the gtkeditable immediately forgot the; * clipboard contents in gtk_editable_selection_clear as a result of; * this message. OTOH, when I changed gdk_selection_owner_get to; * always return NULL, it works. Sigh.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c:30,clear,clear,30,graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,1,['clear'],['clear']
Usability,"/* Set out_color_components and conversion method based on requested space.; * Also clear the component_needed flags for any unused components,; * so that earlier pipeline stages can avoid useless computation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c:84,clear,clear,84,graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,1,['clear'],['clear']
Usability,"/* Set the least significant BITS bits of a bignum, clear the; rest. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:52,clear,clear,52,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['clear'],['clear']
Usability,/* Simple case with no context needed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:3,Simpl,Simple,3,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['Simpl'],['Simple']
Usability,"/* Simple function to write the signature. If we have already written; * the magic bytes of the signature, or more likely, the PNG stream is; * being embedded into another stream and doesn't need its own signature,; * we should call png_set_sig_bytes() to tell libpng how many of the; * bytes have already been written.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:3,Simpl,Simple,3,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['Simpl'],['Simple']
Usability,"/* Simple signature checking function. This is the same as calling; * png_check_sig(sig, n) := !png_sig_cmp(sig, 0, n).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3,Simpl,Simple,3,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['Simpl'],['Simple']
Usability,/* Simple top-down heapsort. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c:3,Simpl,Simple,3,builtins/zstd/dictBuilder/divsufsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c,2,['Simpl'],['Simple']
Usability,"/* Simple version, good for code maintenance, but unfortunately slow for small inputs */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Simpl,Simple,3,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,['Simpl'],['Simple']
Usability,/* Simply discard the low byte. This was the default behavior prior; * to libpng-1.5.4.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:3,Simpl,Simply,3,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['Simpl'],['Simply']
Usability,/* Simply retry the function call. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Simpl,Simply,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Simpl'],['Simply']
Usability,"/* Some simplifying macros, which reduce the need to worry whether the; * buffers have been allocated. These also make USE_BUF () an lvalue,; * which is used in g_io_channel_read_to_end ().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:8,simpl,simplifying,8,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,1,['simpl'],['simplifying']
Usability,"/* Step 5: while (scan lines remain to be written) */; /* jpeg_write_scanlines(...); */; /* Here we use the library's state variable cinfo.next_scanline as the; 	* loop counter, so that we don't have to keep track ourselves.; 	* To keep things simple, we pass one scanline per call; you can pass; 	* more if you wish, though.; 	*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:244,simpl,simple,244,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,1,['simpl'],['simple']
Usability,"/* Stop when cur_match becomes <= limit. To simplify the code,; * we prevent matches with the string of window index 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:44,simpl,simplify,44,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['simpl'],['simplify']
Usability,"/* Stop when cur_match becomes <= limit. To simplify the code,; * we prevent matches with the string of window index 0.; */; /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.; * It is easy to get rid of this optimization if necessary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:44,simpl,simplify,44,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['simpl'],['simplify']
Usability,"/* Such complex bit manipulation for this simple task, sigh.; * The X cursor and Windows cursor concepts are quite different.; * We assume here that we are always called with fg == black and; * bg == white, *or* the other way around. Random colours won't work.; * (Well, you will get a cursor, but not in those colours.); */; /* Note: The comments below refer to the case fg==black and; * bg==white.; */; /* First set masked-out source bits, as all source bits matter on Windoze.; * As we invert them below, they will be clear in the final XORmask.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c:42,simpl,simple,42,graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcursor-win32.c,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"/* Support for relocatable packages. */; /* Sets the original and the current installation prefix of the package.; Relocation simply replaces a pathname starting with the original prefix; by the corresponding pathname with the current prefix instead. Both; prefixes should be directory names without trailing slash (i.e. use """"; instead of ""/""). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:126,simpl,simply,126,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['simpl'],['simply']
Usability,"/* Test the reading of a simple mock category that has the states; * one = 0; * two = 1; * three = 2; * four = 3; * The ranges ""evens"" and ""odds"" for even and odd state names are defined.; * Now, we check that set ranges are read and written properly, and that; * sharing of those ranges works even after reading back.; * A mock file can be created as follows:; RooCategory cat(""cat"", ""a category""); cat.defineType(""one""); cat.defineType(""two""); cat.defineType(""three""); cat.defineType(""four""); cat.addToRange(""evens"", ""two,four""); cat.addToRange(""odds"", ""one,three""); RooDataSet data(""data"", ""a dataset with a category"", RooArgSet(cat)); data.fill(); TFile outfile(""/tmp/testCategories.root"", ""RECREATE""); outfile.WriteObject(&cat, ""catOrig""); outfile.WriteObject(&data, ""data""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:25,simpl,simple,25,roofit/roofitcore/test/testProxiesAndCategories.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx,1,['simpl'],['simple']
Usability,/* The CLEAR LZ code. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib_private.h:7,CLEAR,CLEAR,7,graf2d/asimage/src/libAfterImage/libungif/gif_lib_private.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib_private.h,1,['CLEAR'],['CLEAR']
Usability,"/* The JPEG spec simply gives the ranges 0..13 for Ah and Al, but that; * seems wrong: the upper bound ought to depend on data precision.; * Perhaps they really meant 0..N+1 for N-bit precision.; * Here we allow 0..10 for 8-bit data; Al larger than 10 results in; * out-of-range reconstructed DC values during the first DC scan,; * which might cause problems for some decoders.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:17,simpl,simply,17,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['simpl'],['simply']
Usability,/* The Microsoft C Run-Time Library for Windows CE doesn't have; * errno. We define it as a global variable to simplify porting.; * Its value is always 0 and should not be used. We rename it to; * avoid conflict with other libraries that use the same workaround.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h:111,simpl,simplify,111,graf2d/asimage/src/libAfterImage/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h,1,['simpl'],['simplify']
Usability,/* The Microsoft C Run-Time Library for Windows CE doesn't have; * errno. We define it as a global variable to simplify porting.; * Its value is always 0 and should not be used.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c:111,simpl,simplify,111,builtins/zlib/zutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c,2,['simpl'],['simplify']
Usability,"/* The PNG spec requires this:; * ""If the iCCP chunk is present, the image samples conform to the colour; * space represented by the embedded ICC profile as defined by the; * International Color Consortium [ICC]. The colour space of the ICC profile; * shall be an RGB colour space for colour images (PNG colour types 2, 3, and; * 6), or a greyscale colour space for greyscale images (PNG colour types 0; * and 4).""; *; * This checking code ensures the embedded profile (on either read or write); * conforms to the specification requirements. Notice that an ICC 'gray'; * color-space profile contains the information to transform the monochrome; * data to XYZ or L*a*b (according to which PCS the profile uses) and this; * should be used in preference to the standard libpng K channel replication; * into R, G and B channels.; *; * Previously it was suggested that an RGB profile on grayscale data could be; * handled. However it it is clear that using an RGB profile in this context; * must be an error - there is no specification of what it means. Thus it is; * almost certainly more correct to ignore the profile.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:935,clear,clear,935,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['clear'],['clear']
Usability,"/* The above gives exact (to 16 binary places) log2 values for 8-bit images,; * for 16-bit images we use the most significant 8 bits of the 16-bit value to; * get an approximation then multiply the approximation by a correction factor; * determined by the remaining up to 8 bits. This requires an additional step; * in the 16-bit case.; *; * We want log2(value/65535), we have log2(v'/255), where:; *; * value = v' * 256 + v''; * = v' * f; *; * So f is value/v', which is equal to (256+v''/v') since v' is in the range 128; * to 255 and v'' is in the range 0 to 255 f will be in the range 256 to less; * than 258. The final factor also needs to correct for the fact that our 8-bit; * value is scaled by 255, whereas the 16-bit values must be scaled by 65535.; *; * This gives a final formula using a calculated value 'x' which is value/v' and; * scaling by 65536 to match the above table:; *; * log2(x/257) * 65536; *; * Since these numbers are so close to '1' we can use simple linear; * interpolation between the two end values 256/257 (result -368.61) and 258/257; * (result 367.179). The values used below are scaled by a further 64 to give; * 16-bit precision in the interpolation:; *; * Start (256): -23591; * Zero (257): 0; * End (258): 23499; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:972,simpl,simple,972,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simple']
Usability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:761,simpl,simply,761,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['simpl'],['simply']
Usability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is; not compatible with the zlib.h header file used by the application.; This check is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller.; If zalloc and zfree are set to Z_NULL, deflateInit updates them to; use default allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at; all (the input data is simply copied a block at a time).; Z_DEFAULT_COMPRESSION requests a default compromise between speed and; compression (currently equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_STREAM_ERROR if level is not a valid compression level,; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION).; msg is set to null if there is no error message. deflateInit does not; perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:761,simpl,simply,761,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['simpl'],['simply']
Usability,"/* The color-map will be grayscale, so we may as well convert the; * input RGB values to a simple grayscale and use the grayscale; * code above.; *; * NOTE: calling this apparently damages the recognition of the; * transparent color in background color handling; call; * png_set_tRNS_to_alpha before png_set_background_fixed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:91,simpl,simple,91,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simple']
Usability,"/* The declarations that formerly were made here have been merged into; * lz4frame.h, protected by the LZ4F_STATIC_LINKING_ONLY macro. Going forward,; * it is recommended to simply include that header directly.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h:174,simpl,simply,174,builtins/lz4/lz4frame_static.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h,1,['simpl'],['simply']
Usability,"/* The following functions are from Tk8.0, but heavily modified.; Here are tk's licensing terms. I hope these terms don't conflict; with the GNU Library General Public License? They shouldn't, as; they are looser that the GLPL, yes? */; /*; This software is copyrighted by the Regents of the University of; California, Sun Microsystems, Inc., and other parties. The following; terms apply to all files associated with the software unless explicitly; disclaimed in individual files. The authors hereby grant permission to use, copy, modify, distribute,; and license this software and its documentation for any purpose, provided; that existing copyright notices are retained in all copies and that this; notice is included verbatim in any distributions. No written agreement,; license, or royalty fee is required for any of the authorized uses.; Modifications to this software may be copyrighted by their authors; and need not follow the licensing terms described here, provided that; the new terms are clearly indicated on the first page of each file where; they apply. IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY; FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES; ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY; DERIVATIVES THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGE. THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. THIS SOFTWARE; IS PROVIDED ON AN ""AS IS"" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE; NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR; MODIFICATIONS. GOVERNMENT USE: If you are acquiring this software on behalf of the; U.S. government, the Government shall have only ""Restricted Rights""; in the software and related documentation as defined in the Federal ; Acquisition Regulations (FARs) in Clause 52.227",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:1001,clear,clearly,1001,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['clear'],['clearly']
Usability,"/* The following two API calls simply set fields in png_struct, so it is safe; * to do them now even though error handling is not yet set up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:31,simpl,simply,31,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simply']
Usability,"/* The format allows default tables to be repeated, but it isn't useful.; * When using simple heuristics to select encoding type, we don't want; * to confuse these tables with dictionaries. When running more careful; * analysis, we don't need to waste time checking both repeating tables; * and default tables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c:87,simpl,simple,87,builtins/zstd/compress/zstd_compress_sequences.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c,1,['simpl'],['simple']
Usability,/* The loop is for the number of '1' bits in the mask and clearing; each mask bit as it is processed. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:58,clear,clearing,58,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,1,['clear'],['clearing']
Usability,"/* The reference white is simply the sum of the end-point (X,Y,Z) vectors,; * thus:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:26,simpl,simply,26,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simply']
Usability,"/* The reverse calculation is more difficult because the original tristimulus; * value had 9 independent values (red,green,blue)x(X,Y,Z) however only 8; * derived values were recorded in the cHRM chunk;; * (red,green,blue,white)x(x,y). This loses one degree of freedom and; * therefore an arbitrary ninth value has to be introduced to undo the; * original transformations.; *; * Think of the original end-points as points in (X,Y,Z) space. The; * chromaticity values (c) have the property:; *; * C; * c = ---------; * X + Y + Z; *; * For each c (x,y,z) from the corresponding original C (X,Y,Z). Thus the; * three chromaticity values (x,y,z) for each end-point obey the; * relationship:; *; * x + y + z = 1; *; * This describes the plane in (X,Y,Z) space that intersects each axis at the; * value 1.0; call this the chromaticity plane. Thus the chromaticity; * calculation has scaled each end-point so that it is on the x+y+z=1 plane; * and chromaticity is the intersection of the vector from the origin to the; * (X,Y,Z) value with the chromaticity plane.; *; * To fully invert the chromaticity calculation we would need the three; * end-point scale factors, (red-scale, green-scale, blue-scale), but these; * were not recorded. Instead we calculated the reference white (X,Y,Z) and; * recorded the chromaticity of this. The reference white (X,Y,Z) would have; * given all three of the scale factors since:; *; * color-C = color-c * color-scale; * white-C = red-C + green-C + blue-C; * = red-c*red-scale + green-c*green-scale + blue-c*blue-scale; *; * But cHRM records only white-x and white-y, so we have lost the white scale; * factor:; *; * white-C = white-c*white-scale; *; * To handle this the inverse transformation makes an arbitrary assumption; * about white-scale:; *; * Assume: white-Y = 1.0; * Hence: white-scale = 1/white-y; * Or: red-Y + green-Y + blue-Y = 1.0; *; * Notice the last statement of the assumption gives an equation in three of; * the nine values we want to calculate. 8 mor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:335,undo,undo,335,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['undo'],['undo']
Usability,"/* The row have a sequence of bytes containing [0..255] and we need; * to turn it into another row containing [0..65535], to do this we; * calculate:; *; * (input / 255) * 65535; *; * Which happens to be exactly input * 257 and this can be achieved; * simply by byte replication in place (copying backwards).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:252,simpl,simply,252,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['simpl'],['simply']
Usability,"/* The samples of the image have one to four channels whose components have; * original values in the range 0 to 1.0:; *; * 1: A single gray or luminance channel (G).; * 2: A gray/luminance channel and an alpha channel (GA).; * 3: Three red, green, blue color channels (RGB).; * 4: Three color channels and an alpha channel (RGBA).; *; * The components are encoded in one of two ways:; *; * a) As a small integer, value 0..255, contained in a single byte. For the; * alpha channel the original value is simply value/255. For the color or; * luminance channels the value is encoded according to the sRGB specification; * and matches the 8-bit format expected by typical display devices.; *; * The color/gray channels are not scaled (pre-multiplied) by the alpha; * channel and are suitable for passing to color management software.; *; * b) As a value in the range 0..65535, contained in a 2-byte integer. All; * channels can be converted to the original value by dividing by 65535; all; * channels are linear. Color channels use the RGB encoding (RGB end-points) of; * the sRGB specification. This encoding is identified by the; * PNG_FORMAT_FLAG_LINEAR flag below.; *; * When the simplified API needs to convert between sRGB and linear colorspaces,; * the actual sRGB transfer curve defined in the sRGB specification (see the; * article at <https://en.wikipedia.org/wiki/SRGB>) is used, not the gamma=1/2.2; * approximation used elsewhere in libpng.; *; * When an alpha channel is present it is expected to denote pixel coverage; * of the color or luminance channels and is returned as an associated alpha; * channel: the color/gray channels are scaled (pre-multiplied) by the alpha; * value.; *; * The samples are either contained directly in the image data, between 1 and 8; * bytes per pixel according to the encoding, or are held in a color-map indexed; * by bytes in the image data. In the case of a color-map the color-map entries; * are individual samples, encoded as above, and the image data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:503,simpl,simply,503,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['simpl'],['simply']
Usability,/* The simple WM_DROPFILES dnd */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdnd.h:7,simpl,simple,7,graf2d/win32gdk/gdk/src/gdk/gdkdnd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdnd.h,1,['simpl'],['simple']
Usability,"/* The standard Huffman tables are only valid for 8-bit data precision.; * If the precision is higher, force optimization on so that usable; * tables will be computed. This test can be removed if default tables; * are supplied that are valid for the desired precision.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:133,usab,usable,133,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['usab'],['usable']
Usability,"/* There are several different allowed syntax variants:; 		 * - ""80"" for a single port using every network interface; 		 * - ""localhost:80"" for a single port using only localhost; 		 * - ""80,localhost:8080"" for two ports, one bound to localhost; 		 * - ""80,127.0.0.1:8084,[::1]:8086"" for three ports, one bound; 		 * to IPv4 localhost, one to IPv6 localhost; 		 * - ""+80"" use port 80 for IPv4 and IPv6; 		 * - ""+80r,+443s"" port 80 (HTTP) is a redirect to port 443 (HTTPS),; 		 * for both: IPv4 and IPv4; 		 * - ""+443s,localhost:8080"" port 443 (HTTPS) for every interface,; 		 * additionally port 8080 bound to localhost connections; 		 *; 		 * If we just look for 's' anywhere in the string, ""localhost:80""; 		 * will be detected as SSL (false positive).; 		 * Looking for 's' after a digit may cause false positives in; 		 * ""my24service:8080"".; 		 * Looking from 's' backward if there are only ':' and numbers; 		 * before will not work for ""24service:8080"" (non SSL, port 8080); 		 * or ""24s"" (SSL, port 24).; 		 *; 		 * Remark: Initially hostnames were not allowed to start with a; 		 * digit (according to RFC 952), this was allowed later (RFC 1123,; 		 * Section 2.1).; 		 *; 		 * To get this correct, the entire string must be parsed as a whole,; 		 * reading it as a list element for element and parsing with an; 		 * algorithm equivalent to parse_port_string.; 		 *; 		 * In fact, we use local interface names here, not arbitrary; 		 * hostnames, so in most cases the only name will be ""localhost"".; 		 *; 		 * So, for now, we use this simple algorithm, that may still return; 		 * a false positive in bizarre cases.; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:1545,simpl,simple,1545,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['simpl'],['simple']
Usability,/* There simply isn't any code in libpng to strip out bits; * from bytes when the components are less than a byte in; * size!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c:9,simpl,simply,9,graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,1,['simpl'],['simply']
Usability,"/* These intrinsics are being made available for compatibility with; the IBM XL compiler. For documentation please see the ""z/OS XL; C/C++ Programming Guide"" publicly available on the web. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h:151,Guid,Guide,151,interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/htmxlintrin.h,1,['Guid'],['Guide']
Usability,"/* This ""hash"" function will just return the key's adress as an; * unsigned integer. Useful for hashing on plain adresses or; * simple integer values.; * passing NULL into g_hash_table_new() as GHashFunc has the; * same effect as passing g_direct_hash().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghash.h:128,simpl,simple,128,graf2d/win32gdk/gdk/src/glib/ghash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghash.h,1,['simpl'],['simple']
Usability,"/* This Key is already there, or the string is old one, so; * simple take new code as our CrntCode:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:62,simpl,simple,62,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['simpl'],['simple']
Usability,"/* This file is arranged in several sections:; *; * 1. [omitted]; * 2. Any configuration options that can be specified by for the application; * code when it is built. (Build time configuration is in pnglibconf.h); * 3. Type definitions (base types are defined in pngconf.h), structure; * definitions.; * 4. Exported library functions.; * 5. Simplified API.; * 6. Implementation options.; *; * The library source code has additional files (principally pngpriv.h) that; * allow configuration of the library.; */; /* Section 1: [omitted] */; /* Section 2: run time configuration; * See pnglibconf.h for build time configuration; *; * Run time configuration allows the application to choose between; * implementations of certain arithmetic APIs. The default is set; * at build time and recorded in pnglibconf.h, but it is safe to; * override these (and only these) settings. Note that this won't; * change what the library does, only application code, and the; * settings can (and probably should) be made on a per-file basis; * by setting the #defines before including png.h; *; * Use macros to read integers from PNG data or use the exported; * functions?; * PNG_USE_READ_MACROS: use the macros (see below) Note that; * the macros evaluate their argument multiple times.; * PNG_NO_USE_READ_MACROS: call the relevant library function.; *; * Use the alternative algorithm for compositing alpha samples that; * does not use division?; * PNG_READ_COMPOSITE_NODIV_SUPPORTED: use the 'no division'; * algorithm.; * PNG_NO_READ_COMPOSITE_NODIV: use the 'division' algorithm.; *; * How to handle benign errors if PNG_ALLOW_BENIGN_ERRORS is; * false?; * PNG_ALLOW_BENIGN_ERRORS: map calls to the benign error; * APIs to png_warning.; * Otherwise the calls are mapped to png_error.; */; /* Section 3: type definitions, including structures and compile time; * constants.; * See pngconf.h for base types that vary by machine/system; */; /* This triggers a compiler error in png.c, if png.c and png.h; * do not agr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:342,Simpl,Simplified,342,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['Simpl'],['Simplified']
Usability,"/* This function originally from Jean-Edouard Lachand-Robert, and; * available at www.codeguru.com. Simplified for our needs, now; * handles just one-bit deep bitmaps (in Window parlance, ie those; * that GDK calls bitmaps (and not pixmaps), with zero pixels being; * transparent.; */; /*; * BitmapToRegion : Create a region from the ""non-transparent"" pixels of; * a bitmap; * Author : Jean-Edouard Lachand-Robert; * (http://www.geocities.com/Paris/LeftBank/1160/resume.htm), June 1998.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c:100,Simpl,Simplified,100,graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,2,"['Simpl', 'resume']","['Simplified', 'resume']"
Usability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64/powerpc64le. It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary. Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h:33,simpl,simplify,33,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,1,['simpl'],['simplify']
Usability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64le. It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary. Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h:33,simpl,simplify,33,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h,1,['simpl'],['simplify']
Usability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64le.; It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary.; Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/nmmintrin.h:33,simpl,simplify,33,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/nmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/nmmintrin.h,2,['simpl'],['simplify']
Usability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64le.; It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary.; Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. In the specific case of X86 SSE3 intrinsics, the PowerPC VMX/VSX ISA; is a good match for most SIMD operations. However the Horizontal; add/sub requires the data pairs be permuted into a separate; registers with vertical even/odd alignment for the operation.; And the addsub operation requires the sign of only the even numbered; elements be flipped (xored with -0.0).; For larger blocks of code using these intrinsic implementations,; the compiler be should be able to schedule instructions to avoid; additional latency. In the specific case of the monitor and mwait instructions there are; no direct equivalent in the PowerISA at this time. So those; intrinsics are not implemented. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h:33,simpl,simplify,33,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h,1,['simpl'],['simplify']
Usability,/* This is available for the caller to store in 'state' if required. Do not; * call the parser after setting it (the parser sometimes clears it.); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:134,clear,clears,134,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['clear'],['clears']
Usability,"/* This is much harder to do simply (and quickly). Perhaps; * we need to go through a median cut routine, but those; * don't always behave themselves with only a few colors; * as input. So we will just find the closest two colors,; * and throw out one of them (chosen somewhat randomly).; * [We don't understand this at all, so if someone wants to; * work on improving it, be our guest - AED, GRP]; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:29,simpl,simply,29,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['simpl'],['simply']
Usability,"/* This is not the place to learn how to use libpng. The file libpng-manual.txt; * describes how to use libpng, and the file example.c summarizes it; * with some code on which to build. This file is useful for looking; * at the actual function definitions and structure components. If that; * file has been stripped from your copy of libpng, you can find it at; * <http://www.libpng.org/pub/png/libpng-manual.txt>; *; * If you just need to read a PNG file and don't want to read the documentation; * skip to the end of this file and read the section entitled 'simplified API'.; */; /* Version information for png.h - this should match the version in png.c */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:28,learn,learn,28,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,"['learn', 'simpl']","['learn', 'simplified']"
Usability,"/* This is similar to png_text_compress, above, except that it does not require; * all of the data at once and, instead of buffering the compressed result,; * writes it as IDAT chunks. Unlike png_text_compress it *can* png_error out; * because it calls the write interface. As a result it does its own error; * reporting and does not return an error code. In the event of error it will; * just call png_error. The input data length may exceed 32-bits. The 'flush'; * parameter is exactly the same as that to deflate, with the following; * meanings:; *; * Z_NO_FLUSH: normal incremental output of compressed data; * Z_SYNC_FLUSH: do a SYNC_FLUSH, used by png_write_flush; * Z_FINISH: this is the end of the input, do a Z_FINISH and clean up; *; * The routine manages the acquire and release of the png_ptr->zstream by; * checking and (at the end) clearing png_ptr->zowner; it does some sanity; * checks on the 'mode' flags while doing this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:846,clear,clearing,846,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['clear'],['clearing']
Usability,"/* This is simple - its pixel scalar, so add it to output: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c:11,simpl,simple,11,graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,1,['simpl'],['simple']
Usability,/* This return code means it was not a simple case. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:39,simpl,simple,39,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['simpl'],['simple']
Usability,/* Time to do some clearance: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:19,clear,clearance,19,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['clear'],['clearance']
Usability,"/* To avoid the trouble of installing a file that is shared by many; 	 GNU packages -- many packaging systems have problems with this --,; 	 simply inline the aliases here. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:141,simpl,simply,141,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['simpl'],['simply']
Usability,"/* To avoid the troubles of an extra file charset.alias_vms in the; 	 sources of many GNU packages, simply inline the aliases here. */; /* The list of encodings is taken from the OpenVMS 7.3-1 documentation; 	 ""Compaq C Run-Time Library Reference Manual for OpenVMS systems""; 	 section 10.7 ""Handling Different Character Sets"". */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:100,simpl,simply,100,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['simpl'],['simply']
Usability,"/* To avoid the troubles of installing a separate file in the same; 	 directory as the DLL and of retrieving the DLL's directory at; 	 runtime, simply inline the aliases here. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:144,simpl,simply,144,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['simpl'],['simply']
Usability,"/* To simplify the code, we prevent matches with the string; * of window index 0 (in particular we have to avoid a match; * of the string with itself at the start of the input file).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:6,simpl,simplify,6,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,8,['simpl'],['simplify']
Usability,"/* To use this define PNG_FILTER_OPTIMIZATIONS as the name of a function to; * call to install hardware optimizations for the above functions; simply; * replace whatever elements of the pp->read_filter[] array with a hardware; * specific (or, for that matter, generic) optimization.; *; * To see an example of this examine what configure.ac does when; * --enable-arm-neon is specified on the command line.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:143,simpl,simply,143,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simply']
Usability,/* Transposing pixels within a block just requires transposing the; * DCT coefficients.; * Partial iMCUs at the edges require no special treatment; we simply; * process all the available DCT blocks for every component.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:151,simpl,simply,151,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['simpl'],['simply']
Usability,/* Undo last swap */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/priorityq.c:3,Undo,Undo,3,graf3d/eve7/glu/priorityq.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/priorityq.c,1,['Undo'],['Undo']
Usability,"/* Undocumented GCC/Clang operand modifier: %e0 = lower D half, %f0 = upper D half */; /* https://github.com/gcc-mirror/gcc/blob/38cf91e5/gcc/config/arm/arm.c#L22486 */; /* https://github.com/llvm-mirror/llvm/blob/2c4ca683/lib/Target/ARM/ARMAsmPrinter.cpp#L399 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Undo,Undocumented,3,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Undo'],['Undocumented']
Usability,"/* Undocumented. For PINT, etc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:3,Undo,Undocumented,3,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['Undo'],['Undocumented']
Usability,"/* Undoes intrapixel differencing,; * NOTE: this is apparently only supported in the 'sequential' reader.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:3,Undo,Undoes,3,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['Undo'],['Undoes']
Usability,"/* Update progression status, and verify that scan order is legal.; * Note that inter-scan inconsistencies are treated as warnings; * not fatal errors ... not clear if this is right way to behave.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:159,clear,clear,159,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,2,['clear'],['clear']
Usability,"/* Update screen clearing, pix copying variables */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:17,clear,clearing,17,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['clear'],['clearing']
Usability,/* Update the round buffer pos and clear the input buffer to be reset */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:35,clear,clear,35,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['clear'],['clear']
Usability,"/* Updates weights and biases, given the learning rate */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:41,learn,learning,41,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,3,['learn'],['learning']
Usability,"/* Use direct access to info_ptr here because otherwise the simplified API; * would require PNG_EASY_ACCESS_SUPPORTED (just for this.) Note this is; * checking the value after libpng expansions, not the original value in the; * PNG.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:60,simpl,simplified,60,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simplified']
Usability,/* Utility function to skip chunks that are not used by the simplified image; * read functions and an appropriate macro to call it.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:60,simpl,simplified,60,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simplified']
Usability,/* Utility used below - a simple accurate power of ten from an integral; * exponent.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:26,simpl,simple,26,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['simpl'],['simple']
Usability,/* VAX/VMS does not let us \-split long #if lines. */; /* Split #if into 2 because some HP-UX can't handle long #if */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:91,UX,UX,91,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['UX'],['UX']
Usability,/* Variable alpha and const color: Simple PDF draw orders; and an extra extended Graphics State + Xobject + Shader; object for the alpha mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:35,Simpl,Simple,35,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['Simpl'],['Simple']
Usability,"/* WARNING: * png_read_transform_info (pngrtran.c) performs a simpler set of; * calculations to calculate the final pixel depth, then; * png_do_read_transforms actually does the transforms. This means that the; * code which effectively calculates this value is actually repeated in three; * separate places. They must all match. Innocent changes to the order of; * transformations can and will break libpng in a way that causes memory; * overwrites.; *; * TODO: fix this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:62,simpl,simpler,62,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simpler']
Usability,"/* We are deallocating memory. If the amount requested would cause; us to try to deallocate back past the base of the mmap'd region; then do nothing, and return NULL. Otherwise, deallocate the; memory and return the old break value. */; /* only munmap whole mapping, called via mmalloc_detach, smaller size; reductions cause the breakval to be reduced but not the mapping; to be undone (rdm). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:379,undo,undone,379,core/clib/src/mmapsup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c,1,['undo'],['undone']
Usability,/* We check the simple case first. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:16,simpl,simple,16,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['simpl'],['simple']
Usability,"/* We could a use a for loop here, but that combined with; -funroll-loops can expand to a lot of code. The while; loop avoids unrolling and the compiler commons the xor; from clearing the mask bit with the (m != 0) test. The; result is a more compact loop setup and body. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:175,clear,clearing,175,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,1,['clear'],['clearing']
Usability,/* We did finish the row. Undo our little suspension hack if a previous; * call suspended; then mark the main buffer empty.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c:26,Undo,Undo,26,graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,2,['Undo'],['Undo']
Usability,"/* We make P be a point in front of us if there is one in front,; (it simplifies the code) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:70,simpl,simplifies,70,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,3,['simpl'],['simplifies']
Usability,"/* We need UTF-8 encoding of numbers to encode the weights if; * we are using wcsxfrm. However, we aren't encoding Unicode; * characters, so we can't simply use g_unichar_to_utf8.; *; * The following routine is taken (with modification) from GNU; * libc's strxfrm routine:; *; * Copyright (C) 1995-1999,2000,2001 Free Software Foundation, Inc.; * Written by Ulrich Drepper <drepper@cygnus.com>, 1995.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gunicollate.c:150,simpl,simply,150,graf2d/win32gdk/gdk/src/glib/gunicollate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gunicollate.c,1,['simpl'],['simply']
Usability,/* We need to ensure that the application background exists in; * the colormap and that completely transparent pixels map to; * it. Achieve this simply by ensuring that the entry; * selected for the background really is the background color.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:145,simpl,simply,145,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simply']
Usability,"/* We reset the empty-input-file flag for each image,; * but we don't clear the input buffer.; * This is correct behavior for reading a series of images from one source.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:70,clear,clear,70,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['clear'],['clear']
Usability,/* We simply emit the Al'th bit of the DC coefficient value. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:6,simpl,simply,6,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,3,['simpl'],['simply']
Usability,/* We simply have to copy the right amount of data (the destination's; * image size) starting at the given X and Y offsets in the source.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:6,simpl,simply,6,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['simpl'],['simply']
Usability,"/* Wrapper around textinput.; * Modes: -1 = init, 0 = line mode, 1 = one char at a time mode, 2 = cleanup, 3 = clear input line; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:111,clear,clear,111,core/textinput/src/Getline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx,1,['clear'],['clear']
Usability,/* Write a very simple .gz header:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:16,simpl,simple,16,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['simpl'],['simple']
Usability,"/* Write the data to whatever output you are using. The default routine; * writes to a file pointer. Note that this routine sometimes gets called; * with very small lengths, so you should implement some kind of simple; * buffering if you are using unbuffered writes. This should never be asked; * to write more than 64K on a 16-bit machine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c:211,simpl,simple,211,graf2d/asimage/src/libAfterImage/libpng/pngwio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c,1,['simpl'],['simple']
Usability,/* ZSTD_invalidateRepCodes() doesn't work for extDict variants.; * Simply copy the prefix to the beginning in that case.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:67,Simpl,Simply,67,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Simpl'],['Simply']
Usability,"/* __gl_meshTessellateMonoRegion( face ) tessellates a monotone region; * (what else would it do??) The region must consist of a single; * loop of half-edges (see mesh.h) oriented CCW. ""Monotone"" in this; * case means that any vertical line intersects the interior of the; * region in a single interval. ; *; * Tessellation consists of adding interior edges (actually pairs of; * half-edges), to split the region into non-overlapping triangles.; *; * The basic idea is explained in Preparata and Shamos (which I don''t; * have handy right now), although their implementation is more; * complicated than this one. The are two edge chains, an upper chain; * and a lower chain. We process all vertices from both chains in order,; * from right to left.; *; * The algorithm ensures that the following invariant holds after each; * vertex is processed: the untessellated region consists of two; * chains, where one chain (say the upper) is a single edge, and; * the other chain is concave. The left vertex of the single edge; * is always to the left of all vertices in the concave chain.; *; * Each step consists of adding the rightmost unprocessed vertex to one; * of the two chains, and forming a fan of triangles from the rightmost; * of two chain endpoints. Determining whether we can add each triangle; * to the fan is a simple orientation test. By making the fan as large; * as possible, we restore the invariant (check it yourself).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tessmono.c:1320,simpl,simple,1320,graf3d/eve7/glu/tessmono.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tessmono.c,1,['simpl'],['simple']
Usability,/* allow negative subscripts of simple table */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:32,simpl,simple,32,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['simpl'],['simple']
Usability,/* also undocumented */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:8,undo,undocumented,8,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['undo'],['undocumented']
Usability,/* aucune simplification ! (sic) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:10,simpl,simplification,10,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,2,['simpl'],['simplification']
Usability,"/* bit buffer */; /*The inflate algorithm uses a sliding 32K byte window on the uncompressed; stream to find repeated byte strings. This is implemented here as a; circular buffer. The index is updated simply by incrementing and then; and'ing with 0x7fff (32K-1). */; /*It is left to other modules to supply the 32K area. It is assumed; to be usable as if it were declared ""uch slide[32768];"" or as just; ""uch *slide;"" and then malloc'ed in the latter case. The definition; must be in unzip.h, included above. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:201,simpl,simply,201,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,2,"['simpl', 'usab']","['simply', 'usable']"
Usability,/* clear code ... reset */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c:3,clear,clear,3,graf2d/win32gdk/src/gifdecode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c,2,['clear'],['clear']
Usability,/* clear error */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:3,clear,clear,3,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['clear'],['clear']
Usability,/* clear error and end-of-file */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:3,clear,clear,3,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['clear'],['clear']
Usability,/* clear for scratch use */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c:3,clear,clear,3,graf2d/win32gdk/gdk/src/glib/gdate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c,1,['clear'],['clear']
Usability,/* clear hash table if present */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:3,clear,clear,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['clear'],['clear']
Usability,/* clear out the buffer */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:3,clear,clear,3,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,1,['clear'],['clear']
Usability,"/* clear the hash table, we don't use it when dithering */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:3,clear,clear,3,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['clear'],['clear']
Usability,/* clear the state of the scanline : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/scanline.c:3,clear,clear,3,graf2d/asimage/src/libAfterImage/scanline.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/scanline.c,1,['clear'],['clear']
Usability,/* clear-text blocksize */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsalib.cxx:3,clear,clear-text,3,net/auth/src/rsalib.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsalib.cxx,1,['clear'],['clear-text']
Usability,/* clears */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.h:3,clear,clears,3,bindings/pyroot/cppyy/CPyCppyy/src/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.h,1,['clear'],['clears']
Usability,/* default is to simply get a byte from stdin */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:17,simpl,simply,17,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['simpl'],['simply']
Usability,/* default is to simply write the buffer to stdout */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:17,simpl,simply,17,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['simpl'],['simply']
Usability,"/* deflate.c -- compress data using the deflation algorithm; * Copyright (C) 1995-2005 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://www.ietf.org/rfc/rfc1951.txt; *; * A description of the Rabin and Karp algorithm is given in the book; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c:651,simpl,simple,651,graf2d/asimage/src/libAfterImage/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c,1,['simpl'],['simple']
Usability,"/* deflate.c -- compress data using the deflation algorithm; * Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:665,simpl,simple,665,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['simpl'],['simple']
Usability,/* empty feedback buffer and/or nothing else to print */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:9,feedback,feedback,9,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['feedback'],['feedback']
Usability,/* eslint-disable @stylistic/js/key-spacing */; /* eslint-disable @stylistic/js/comma-spacing */; /* eslint-disable @stylistic/js/object-curly-spacing */; // some icons taken from http://uxrepo.com/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:187,ux,uxrepo,187,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['ux'],['uxrepo']
Usability,"/* eslint-disable space-infix-ops */; // Calculate an angle between two unit vectors; //; // Since we measure angle between radii of circular arcs,; // we can use simplified math (without length normalization); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:163,simpl,simplified,163,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simplified']
Usability,/* fclose is broken for pipes in HP/UX */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:36,UX,UX,36,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['UX'],['UX']
Usability,/* free previously allocated message and clear */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:41,clear,clear,41,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['clear'],['clear']
Usability,"/* function still to develop tests for:; void SetCurrentEvent( Long64_t ievt ) const { fCurrentEventIdx = ievt; }; void SetCurrentType ( Types::ETreeType type ) const { fCurrentTreeIdx = TreeIndex(type); }. void SetEventCollection( std::vector<Event*>*, Types::ETreeType );; const std::vector<Event*>& GetEventCollection( Types::ETreeType type = Types::kMaxTreeType ) const;; const TTree* GetEventCollectionAsTree();. Results* GetResults ( const TString &,Types::ETreeType type, Types::EAnalysisType analysistype );; void DivideTrainingSet( UInt_t blockNum );; void MoveTrainingBlock( Int_t blockInd,Types::ETreeType dest, Bool_t applyChanges = kTRUE );; void IncrementNClassEvents( Int_t type, UInt_t classNumber );; Long64_t GetNClassEvents ( Int_t type, UInt_t classNumber );; void ClearNClassEvents ( Int_t type );; TTree* GetTree( Types::ETreeType type );; void InitSampling( Float_t fraction, Float_t weight, UInt_t seed = 0 );; void EventResult( Bool_t successful, Long64_t evtNumber = -1 );; void CreateSampling() const;; UInt_t TreeIndex(Types::ETreeType type) const;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:785,Clear,ClearNClassEvents,785,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['Clear'],['ClearNClassEvents']
Usability,"/* g_date_new() returns an invalid date, you then have to _set() stuff; * to get a usable object. You can also allocate a GDate statically,; * then call g_date_clear() to initialize.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h:83,usab,usable,83,graf2d/win32gdk/gdk/src/glib/gdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h,1,['usab'],['usable']
Usability,"/* gmarkup.c - Simple XML-like parser; *; * Copyright 2000 Red Hat, Inc.; *; * GLib is free software; you can redistribute it and/or modify it; * under the terms of the GNU Lesser General Public License as; * published by the Free Software Foundation; either version 2 of the; * License, or (at your option) any later version.; *; * GLib is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with GLib; see the file COPYING.LIB. If not,; * write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:15,Simpl,Simple,15,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,1,['Simpl'],['Simple']
Usability,"/* gmarkup.h - Simple XML-like string parser/writer; *; * Copyright 2000 Red Hat, Inc.; *; * GLib is free software; you can redistribute it and/or modify it; * under the terms of the GNU Lesser General Public License as; * published by the Free Software Foundation; either version 2 of the; * License, or (at your option) any later version.; *; * GLib is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with GLib; see the file COPYING.LIB. If not,; * write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h:15,Simpl,Simple,15,graf2d/win32gdk/gdk/src/glib/gmarkup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h,1,['Simpl'],['Simple']
Usability,"/* image gamma of input image */; /* Compression parameters --- these fields must be set before calling; * jpeg_start_compress(). We recommend calling jpeg_set_defaults() to; * initialize everything to reasonable defaults, then changing anything; * the application specifically wants to change. That way you won't get; * burnt when new parameters are added. Also note that there are several; * helper routines to simplify changing parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:413,simpl,simplify,413,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['simpl'],['simplify']
Usability,"/* increment, check for overflow and undo increment if so. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:37,undo,undo,37,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['undo'],['undo']
Usability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2005 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:255,simpl,simplify,255,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['simpl'],['simplify']
Usability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2012 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:255,simpl,simplify,255,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['simpl'],['simplify']
Usability,/* its seems that this simple formula is completely sufficient; 			 and even better then more complicated one : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c:23,simpl,simple,23,graf2d/asimage/src/libAfterImage/transform.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c,1,['simpl'],['simple']
Usability,"/* keep is currently just the per-chunk setting, if there was no; * setting change it to the global default now (not that this may; * still be AS_DEFAULT) then obtain the cache of the chunk if required,; * if not simply skip the chunk.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:213,simpl,simply,213,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simply']
Usability,/* last job is empty -> will be simplified into a last empty block */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:32,simpl,simplified,32,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['simpl'],['simplified']
Usability,/* make sure the buffer is clear */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:27,clear,clear,27,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['clear'],['clear']
Usability,/* match referencing will resume from there */; /* cannot reference an extDict and a dictCtx at the same time */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:26,resume,resume,26,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['resume'],['resume']
Usability,/* merely a shortcut so we can; 									 * somewhat simplify code in loops */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:53,simpl,simplify,53,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['simpl'],['simplify']
Usability,/* non-simple--look up in lists */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:7,simpl,simple--look,7,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['simpl'],['simple--look']
Usability,"/* not padded */; /* The ICC specification does not exclude zero length tags, therefore the; * start might actually be anywhere if there is no data, but this would be; * a clear abuse of the intent of the standard so the start is checked for; * being in range. All defined tag types have an 8 byte header - a 4 byte; * type signature then 0.; */; /* This is a hard error; potentially it can cause read outside the; * profile.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:172,clear,clear,172,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['clear'],['clear']
Usability,/* note: LZ4_streamHC_t and LZ4_stream_t are simple POD types */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:45,simpl,simple,45,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['simpl'],['simple']
Usability,/* now undo things */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c:7,undo,undo,7,interpreter/llvm-project/llvm/lib/Support/regexec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c,1,['undo'],['undo']
Usability,"/* nullify last candidate if it's still unsorted; * simplification, detrimental to compression ratio, beneficial for speed */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:52,simpl,simplification,52,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,1,['simpl'],['simplification']
Usability,/* output_processing means that the libpng-processed row will be; * 8-bit GA and it has to be processing to single byte color-map; * values. Entry 254 is replaced by either a completely; * transparent entry or by the background color at full; * precision (and the background color is not a simple gray; * level in this case.); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:290,simpl,simple,290,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['simpl'],['simple']
Usability,"/* over-simplification; could also check if context is currently running in streaming mode, and in which case, report how many bytes are left to be flushed within output buffer */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:8,simpl,simplification,8,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['simpl'],['simplification']
Usability,"/* pngdebug.h - Debugging macros for libpng, also used in pngtest.c; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2013 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */; /* Define PNG_DEBUG at compile time for debugging information. Higher; * numbers for PNG_DEBUG mean more debugging information. This has; * only been added since version 0.95 so it is not implemented throughout; * libpng yet, but more support will be added as needed.; *; * png_debug[1-2]?(level, message ,arg{0-2}); * Expands to a statement (either a simple expression or a compound; * do..while(0) statement) that outputs a message with parameter; * substitution if PNG_DEBUG is defined to 2 or more. If PNG_DEBUG; * is undefined, 0 or 1 every png_debug expands to a simple expression; * (actually ((void)0)).; *; * level: level of detail of message, starting at 0. A level 'n'; * message is preceded by 'n' 3-space indentations (not implemented; * on Microsoft compilers unless PNG_DEBUG_FILE is also; * defined, to allow debug DLL compilation with no standard IO).; * message: a printf(3) style text string. A trailing '\n' is added; * to the message.; * arg: 0 to 2 arguments for printf(3) style substitution in message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h:770,simpl,simple,770,graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,2,['simpl'],['simple']
Usability,"/* pngtest.c - a simple test program to test libpng; *; * Copyright (c) 2018-2019 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This program reads in a PNG image, writes it out again, and then; * compares the two files. If the files are identical, this shows that; * the basic chunk handling, filtering, and (de)compression code is working; * properly. It does not currently test all of the transforms, although; * it probably should.; *; * The program will report ""FAIL"" in certain legitimate cases:; * 1) when the compression level or filter selection method is changed.; * 2) when the maximum IDAT size (PNG_ZBUF_SIZE in pngconf.h) is not 8192.; * 3) unknown unsafe-to-copy ancillary chunks or unknown critical chunks; * exist in the input file.; * 4) others not listed here...; * In these cases, it is best to check with another tool such as ""pngcheck""; * to see what the differences between the two files are.; *; * If a filename is given on the command-line, then this file is used; * for the input, rather than the default ""pngtest.png"". This allows; * testing a wide variety of files easily. You can also test a number; * of files at once by typing ""pngtest -m file1.png file2.png ...""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:17,simpl,simple,17,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['simpl'],['simple']
Usability,/* preserve end - base : can trigger clearTable's threshold */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:37,clear,clearTable,37,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['clear'],['clearTable']
Usability,"/* previously typedef'd to LZ4_stream_t */; /*! LZ4_initStream() : v1.9.0+; * An LZ4_stream_t structure must be initialized at least once.; * This is automatically done when invoking LZ4_createStream(),; * but it's not when the structure is simply declared on stack (for example).; *; * Use LZ4_initStream() to properly initialize a newly declared LZ4_stream_t.; * It can also initialize any arbitrary buffer of sufficient size,; * and will @return a pointer of proper type upon initialization.; *; * Note : initialization fails if size and alignment conditions are not respected.; * In which case, the function will @return NULL.; * Note2: An LZ4_stream_t structure guarantees correct alignment and size.; * Note3: Before v1.9.0, use LZ4_resetStream() instead; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:241,simpl,simply,241,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['simpl'],['simply']
Usability,"/* pthread_t may be any data type, so a simple cast to unsigned long; 		 * can rise a warning/error, depending on the platform.; 		 * Here memcpy is used as an anything-to-anything cast. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:40,simpl,simple,40,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['simpl'],['simple']
Usability,"/* public fields */; /* Color conversion buffer. When using separate upsampling and color; * conversion steps, this buffer holds one upsampled row group until it; * has been color converted and output.; * Note: we do not allocate any storage for component(s) which are full-size,; * ie do not need rescaling. The corresponding entry of color_buf[] is; * simply set to point to the input data array, thereby avoiding copying.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:354,simpl,simply,354,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['simpl'],['simply']
Usability,/* resume */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,resume,resume,3,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['resume'],['resume']
Usability,/* resume reading a marker */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:3,resume,resume,3,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['resume'],['resume']
Usability,/* safety */; /* Now clear everything out for safety; the following may not have been; * done.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:21,clear,clear,21,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['clear'],['clear']
Usability,/* simple code is just the value */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:3,simpl,simple,3,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['simpl'],['simple']
Usability,/* simple ordered dither */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:3,simpl,simple,3,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['simpl'],['simple']
Usability,/* simple short-cut to pre-selected XXH3_128bits variant */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,simpl,simple,3,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['simpl'],['simple']
Usability,/* simplified; some data might still be left within streaming output buffer */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:3,simpl,simplified,3,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['simpl'],['simplified']
Usability,/* simplify later checks */; /* save the current position for rewinding (only if reading) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:3,simpl,simplify,3,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['simpl'],['simplify']
Usability,/* simply scale it down to a thumbnail size */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:3,simpl,simply,3,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['simpl'],['simply']
Usability,/* state is now re-usable (with identical preferences) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:19,usab,usable,19,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['usab'],['usable']
Usability,"/* text, sPLT or unknown chunks */; /* Magic to create a struct when there is no struct to call the user supplied; * memory allocators. Because error handling has not been set up the memory; * handlers can't safely call png_error, but this is an obscure and undocumented; * restriction so libpng has to assume that the 'free' handler, at least, might; * call png_error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:258,undo,undocumented,258,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['undo'],['undocumented']
Usability,/* this ain't worth a crap it seems. The code below seems to perform 20% slower then ; plain and simple one component at a time ; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c:97,simpl,simple,97,graf2d/asimage/src/libAfterImage/transform.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.c,1,['simpl'],['simple']
Usability,/* to clear the sign bit ! */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.c:6,clear,clear,6,graf2d/asimage/src/libAfterImage/asstorage.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asstorage.c,3,['clear'],['clear']
Usability,/* undocumented */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps/gl2ps.h:3,undo,undocumented,3,graf3d/gl/src/gl2ps/gl2ps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps/gl2ps.h,1,['undo'],['undocumented']
Usability,/* undocumented functions */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3,undo,undocumented,3,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['undo'],['undocumented']
Usability,/* undocumented! */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:3,undo,undocumented,3,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['undo'],['undocumented']
Usability,"/* unsigned *b; code lengths in bits (all assumed <= BMAX) */; /* unsigned n; number of codes (assumed <= N_MAX) */; /* unsigned s; number of simple-valued codes (0..s-1) */; /* ush *d; list of base values for non-simple codes */; /* ush *e; list of extra bits for non-simple codes */; /* struct huft **t; result: starting table */; /* int *m; maximum lookup bits, returns actual */; /* Given a list of code lengths and a maximum table size, make a set of; tables to decode that set of codes. Return zero on success, one if; the given code set is incomplete (the tables are still built in this; case), two if the input is invalid (all zero length codes or an; oversubscribed set of lengths), and three if not enough memory.; The code with value 256 is special, and the tables are constructed; so that no bits beyond that code are fetched when that code is; decoded. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:142,simpl,simple-valued,142,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,3,['simpl'],"['simple', 'simple-valued']"
Usability,"/* utility functions */; /*; The following utility functions are implemented on top of the basic; stream-oriented functions. To simplify the interface, some default options; are assumed (compression level and memory usage, standard memory allocation; functions). The source code of these utility functions can be modified if; you need special options.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:128,simpl,simplify,128,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['simpl'],['simplify']
Usability,/* was the simple RE an unbackslashed $? */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:11,simpl,simple,11,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['simpl'],['simple']
Usability,/* we need to allocate new usable list of colors based on available bpp */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c:27,usab,usable,27,graf2d/asimage/src/libAfterImage/asvisual.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.c,1,['usab'],['usable']
Usability,/* zlib INPUT BUFFER */; /* The setting of 'avail_in' used to be outside the loop; by setting it; * inside it is possible to chunk the input to zlib and simply rely on; * zlib to advance the 'next_in' pointer. This allows arbitrary; * amounts of data to be passed through zlib at the unavoidable cost of; * requiring a window save (memcpy of up to 32768 output bytes); * every ZLIB_IO_MAX input bytes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:153,simpl,simply,153,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['simpl'],['simply']
Usability,"/* zlib.h sometimes #defines const to nothing, undo this. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:47,undo,undo,47,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['undo'],['undo']
Usability,"/* zstd versions <= 1.3.4 mistakenly report corruption when; * FSE_readNCount() receives a buffer < 4 bytes.; * Fixed by https://github.com/facebook/zstd/pull/1146.; * This can happen when the last set_compressed table present is 2; * bytes and the bitstream is only one byte.; * In this exceedingly rare case, we will simply emit an uncompressed; * block, since it isn't worth optimizing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:319,simpl,simply,319,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,2,['simpl'],['simply']
Usability,/*! Check the type of analysis the deep learning network can do */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h:40,learn,learning,40,tmva/tmva/inc/TMVA/MethodDL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h,1,['learn'],['learning']
Usability,"/*! LZ4F_getFrameInfo() :; * This function extracts frame parameters (max blockSize, frame checksum, etc.).; * Usage is optional. Objective is to provide relevant information for allocation purposes.; * This function works in 2 situations :; * - At the beginning of a new frame, in which case it will decode this information from `srcBuffer`, and start the decoding process.; * Amount of input data provided must be large enough to successfully decode the frame header.; * A header size is variable, but is guaranteed to be <= LZ4F_HEADER_SIZE_MAX bytes. It's possible to provide more input data than this minimum.; * - After decoding has been started. In which case, no input is read, frame parameters are extracted from dctx.; * The number of bytes consumed from srcBuffer will be updated within *srcSizePtr (necessarily <= original value).; * Decompression must resume from (srcBuffer + *srcSizePtr).; * @return : an hint about how many srcSize bytes LZ4F_decompress() expects for next call,; * or an error code which can be tested using LZ4F_isError(); * note 1 : in case of error, dctx is not modified. Decoding operations can resume from where they stopped.; * note 2 : frame parameters are *copied into* an already allocated LZ4F_frameInfo_t structure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:865,resume,resume,865,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,2,['resume'],['resume']
Usability,"/*! LZ4_attach_dictionary() :; * This is an experimental API that allows; * efficient use of a static dictionary many times.; *; * Rather than re-loading the dictionary buffer into a working context before; * each compression, or copying a pre-loaded dictionary's LZ4_stream_t into a; * working LZ4_stream_t, this function introduces a no-copy setup mechanism,; * in which the working stream references the dictionary stream in-place.; *; * Several assumptions are made about the state of the dictionary stream.; * Currently, only streams which have been prepared by LZ4_loadDict() should; * be expected to work.; *; * Alternatively, the provided dictionaryStream may be NULL,; * in which case any existing dictionary stream is unset.; *; * If a dictionary is provided, it replaces any pre-existing stream history.; * The dictionary contents are the only history that can be referenced and; * logically immediately precede the data compressed in the first subsequent; * compression call.; *; * The dictionary will only remain attached to the working stream through the; * first compression call, at the end of which it is cleared. The dictionary; * stream (and source buffer) must remain in-place / accessible / unchanged; * through the completion of the first compression call on the stream.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1122,clear,cleared,1122,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['clear'],['cleared']
Usability,"/*! LZ4_decoderRingBufferSize() : v1.8.2+; * Note : in a ring buffer scenario (optional),; * blocks are presumed decompressed next to each other; * up to the moment there is not enough remaining space for next block (remainingSize < maxBlockSize),; * at which stage it resumes from beginning of ring buffer.; * When setting such a ring buffer for streaming decompression,; * provides the minimum size of this ring buffer; * to be compatible with any source respecting maxBlockSize condition.; * @return : minimum ring buffer size,; * or 0 if there is an error (invalid maxBlockSize).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:269,resume,resumes,269,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['resume'],['resumes']
Usability,"/*! LZ4_decoderRingBufferSize() :; * when setting a ring buffer for streaming decompression (optional scenario),; * provides the minimum size of this ring buffer; * to be compatible with any source respecting maxBlockSize condition.; * Note : in a ring buffer scenario,; * blocks are presumed decompressed next to each other.; * When not enough space remains for next block (remainingSize < maxBlockSize),; * decoding resumes from beginning of ring buffer.; * @return : minimum ring buffer size,; * or 0 if there is an error (invalid maxBlockSize).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:418,resume,resumes,418,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['resume'],['resumes']
Usability,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:319,simpl,simply,319,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['simpl'],['simply']
Usability,/*! Methods for training the deep learning network */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h:34,learn,learning,34,tmva/tmva/inc/TMVA/MethodDL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h,1,['learn'],['learning']
Usability,"/*! Prediction for the given inputs, based on what network learned. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:59,learn,learned,59,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['learn'],['learned']
Usability,"/*! Updates the bias gradients, given some other weight gradients and learning rate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:70,learn,learning,70,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['learn'],['learning']
Usability,"/*! Updates the biases, given the gradients and the learning rate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:52,learn,learning,52,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['learn'],['learning']
Usability,"/*! Updates the weight gradients, given some other weight gradients and learning rate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:72,learn,learning,72,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['learn'],['learning']
Usability,"/*! Updates the weights and biases, given the learning rate */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:46,learn,learning,46,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['learn'],['learning']
Usability,"/*! Updates the weights, given the gradients and the learning rate, */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:53,learn,learning,53,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['learn'],['learning']
Usability,"/*! ZSTD_createDDict_byReference() :; * Create a digested dictionary, to start decompression without startup delay.; * Dictionary content is simply referenced, it will be accessed during decompression.; * Warning : dictBuffer must outlive DDict (DDict must be freed before dictBuffer) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c:141,simpl,simply,141,builtins/zstd/decompress/zstd_ddict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c,1,['simpl'],['simply']
Usability,"/*! ZSTD_reduceTable() :; * reduce table indexes by `reducerValue`, or squash to zero.; * PreserveMark preserves ""unsorted mark"" for btlazy2 strategy.; * It must be set to a clear 0/1 value, to remove branch during inlining.; * Presume table size is a multiple of ZSTD_ROWSIZE; * to help auto-vectorization */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:174,clear,clear,174,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['clear'],['clear']
Usability,"/*! \brief c'tor; *; * C'tor; *; * \param learningRate denotes the learning rate for the SGD algorithm; * \param momentum fraction of the velocity which is taken over from the last step; * \param repetitions re-compute the gradients each ""repetitions"" steps; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:42,learn,learningRate,42,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,2,['learn'],"['learning', 'learningRate']"
Usability,/*! \brief clear the drop-out-data for this layer; *; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:11,clear,clear,11,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['clear'],['clear']
Usability,/*! \brief clear the values and the deltas; *; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:11,clear,clear,11,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['clear'],['clear']
Usability,"/*! \class TMVA::ClassificationResult; * Class to save the results of the classifier.; * Every machine learning method booked have an object for the results; * in the classification process, in this class is stored the mvas,; * data loader name and ml method name and title.; * You can to display the results calling the method Show, get the ROC-integral with the; * method GetROCIntegral or get the TMVA::ROCCurve object calling GetROC.; \ingroup TMVA; */; /*! \class TMVA::Classification; * Class to perform two class classification.; * The first step before any analysis is to prepare the data,; * to do that you need to create an object of TMVA::DataLoader,; * in this object you need to configure the variables and the number of events; * to train/test.; * The class TMVA::Experimental::Classification needs a TMVA::DataLoader object,; * optional a TFile object to save the results and some extra options in a string; * like ""V:Color:Transformations=I;D;P;U;G:Silent:DrawProgressBar:ModelPersistence:Jobs=2"" where:; * V = verbose output; * Color = coloured screen output; * Silent = batch mode: boolean silent flag inhibiting any output from TMVA; * Transformations = list of transformations to test.; * DrawProgressBar = draw progress bar to display training and testing.; * ModelPersistence = to save the trained model in xml or serialized files.; * Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method.; * Basic example.; * \code; void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();. TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }. // Register the training and test trees. TTree *si",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h:103,learn,learning,103,tmva/tmva/inc/TMVA/Classification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h,1,['learn'],['learning']
Usability,"/*! \class TMVA::Envelope; * Abstract base class for all high level ml algorithms,; * you can book ml methods like BDT, MLP. SVM etc..; * and set a TMVA::DataLoader object to run your code; * in the overloaded method Evaluate.; \ingroup TMVA. Base class for all machine learning algorithms. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Envelope.h:270,learn,learning,270,tmva/tmva/inc/TMVA/Envelope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Envelope.h,1,['learn'],['learning']
Usability,"/*! \class TMVA::MethodHMatrix; \ingroup TMVA. H-Matrix method, which is implemented as a simple comparison of; chi-squared estimators for signal and background, taking into; account the linear correlations between the input variables. This MVA approach is used by the \f$D\emptyset \f$ collaboration (FNAL) for the; purpose of electron identification (see, eg.,; [hep-ex/9507007](http://arxiv.org/abs/hep-ex/9507007)).; As it is implemented in TMVA, it is usually equivalent or worse than; the Fisher-Mahalanobis discriminant, and it has only been added for; the purpose of completeness.; Two chi^2 estimators are computed for an event, each one; for signal and background, using the estimates for the means and; covariance matrices obtained from the training sample:<br>. \f[; \chi^2_\eta = (x_\eta(i) - \bar{x}_\eta)^T C_\eta^{-1} (x_\eta(i) - \bar{x}_\eta), \eta = S,B; \f]. TMVA then uses as normalised analyser for event \f$ (i) \f$ the ratio:; \f[; \frac{(chi_S(i)^2 - chi_B^2(i))}{(chi_S^2(i) + chi_B^2(i))}; \f]; */; ////////////////////////////////////////////////////////////////////////////////; /// standard constructor for the H-Matrix method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx:90,simpl,simple,90,tmva/tmva/src/MethodHMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx,1,['simpl'],['simple']
Usability,"/*! \namespace RooFit; The namespace RooFit contains mostly switches that change the behaviour of functions of PDFs; (or other types of arguments). These switches are documented with the relevant functions, e.g. RooAbsPdf::fitTo().; For an introduction to RooFit (not the namespace), check the [user's guides](https://root.cern/root-user-guides-and-manuals),; [courses](https://root.cern/learn/courses) or [the RooFit chapter of the Manual](https://root.cern/manual/roofit/).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooGlobalFunc.h:302,guid,guides,302,roofit/roofitcore/inc/RooGlobalFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooGlobalFunc.h,3,"['guid', 'learn']","['guides', 'guides-and-manuals', 'learn']"
Usability,/*!< Thread state (paused or normal) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/ittnotify_config.h:19,pause,paused,19,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/ittnotify_config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/ittnotify_config.h,1,['pause'],['paused']
Usability,"/*!< recommended size for output buffer. Guarantee to successfully flush at least one complete block in all circumstances. */; /**************************; * Simple dictionary API; ***************************/; /*! ZSTD_compress_usingDict() :; * Compression at an explicit compression level using a Dictionary.; * A dictionary can be any arbitrary data segment (also called a prefix),; * or a buffer with specified information (see dictBuilder/zdict.h).; * Note : This function loads the dictionary, resulting in significant startup delay.; * It's intended for a dictionary used only once.; * Note 2 : When `dict == NULL || dictSize < 8` no dictionary is used. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:158,Simpl,Simple,158,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['Simpl'],['Simple']
Usability,/** @summary Assign default layout and place where drawing will be performed; * @param {string} layout - layout like 'simple' or 'grid2x2'; * @param {string} frameid - DOM element id where object drawing will be performed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:118,simpl,simple,118,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,"/** @summary Build main GUI; * @desc Used in many HTML files to create JSROOT GUI elements; * @param {String} gui_element - id of the `<div>` element; * @param {String} gui_kind - either 'online', 'nobrowser', 'draw'; * @return {Promise} with {@link HierarchyPainter} instance; * @example; * import { buildGUI } from 'https://root.cern/js/latest/modules/gui.mjs';; * buildGUI('guiDiv'); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:377,guiD,guiDiv,377,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['guiD'],['guiDiv']
Usability,/** @summary Cleanup hierarchy painter; * @desc clear drawing and browser */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:48,clear,clear,48,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,/** @summary Clear 3d drawings - if any */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Clear,Clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Clear'],['Clear']
Usability,/** @summary Clear all 3D drawings; * @return can3d value - how webgl canvas was placed; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Clear,Clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clear']
Usability,/** @summary Clear frame interactive elements */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Clear,Clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clear']
Usability,/** @summary Clear full model */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:13,Clear,Clear,13,ui5/browser/model/BrowserModel.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js,1,['Clear'],['Clear']
Usability,/** @summary Clear objects map */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Clear,Clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clear']
Usability,/** @summary Clear reference on top painter; * @protected */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Clear,Clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clear']
Usability,/** @summary Clear text in the pave */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Clear,Clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clear']
Usability,/** @summary Clears all font-related attributes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Clear,Clears,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clears']
Usability,"/** @summary Create GridDisplay instance; * @param {string} frameid - where grid display is created; * @param {string} kind - kind of grid; * @desc following kinds are supported; * - vertical or horizontal - only first letter matters, defines basic orientation; * - 'x' in the name disable interactive separators; * - v4 or h4 - 4 equal elements in specified direction; * - v231 - created 3 vertical elements, first divided on 2, second on 3 and third on 1 part; * - v23_52 - create two vertical elements with 2 and 3 subitems, size ratio 5:2; * - gridNxM - normal grid layout without interactive separators; * - gridiNxM - grid layout with interactive separators; * - simple - no layout, full frame used for object drawings */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:669,simpl,simple,669,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,"/** @summary Creates fill attributes object.; * @desc Method dedicated to create fill attributes, bound to canvas SVG; * otherwise newly created patters will not be usable in the canvas; * See {@link TAttFillHandler} for more info.; * Instance assigned as this.fillatt data member, recognized by GED editors; * @param {object} [args] - for special cases one can specify TAttFill as args or number of parameters; * @param {boolean} [args.std = true] - this is standard fill attribute for object and should be used as this.fillatt; * @param {object} [args.attr = null] - object, derived from TAttFill; * @param {number} [args.pattern = undefined] - integer index of fill pattern; * @param {number} [args.color = undefined] - integer index of fill color; * @param {string} [args.color_as_svg = undefined] - color will be specified as SVG string, not as index from color palette; * @param {number} [args.kind = undefined] - some special kind which is handled differently from normal patterns; * @return created handle; * @protected */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:165,usab,usable,165,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['usab'],['usable']
Usability,/** @summary Invoke method for object via WebCanvas functionality; * @desc Requires that painter marked with object identifier (this.snapid) or identifier provided as second argument; * Canvas painter should exists and in non-readonly mode; * Execution string can look like 'Print()'.; * Many methods call can be chained with 'Print();;Update();;Clear()'; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:346,Clear,Clear,346,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clear']
Usability,/** @summary Method cleanup three.js object as much as possible.; * @desc Simplify JS engine to remove it from memory; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:74,Simpl,Simplify,74,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Simpl'],['Simplify']
Usability,"/** @summary Parse string value as array.; * @desc It could be just simple string: 'value' or; * array with or without string quotes: [element], ['elem1',elem2]; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:68,simpl,simple,68,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,/** @summary Process click on TASImage-defined buttons; * @desc may return promise or simply false */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:86,simpl,simply,86,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simply']
Usability,/** @summary Seed simple random generator */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,simpl,simple,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,/** @summary Simple replacement of latex letters; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Simpl,Simple,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Simpl'],['Simple']
Usability,"/** @summary Tries to close current browser tab; * @desc Many browsers do not allow simple window.close() call,; * therefore try several workarounds; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:84,simpl,simple,84,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,/** @summary clear entries from stat box */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,clear,clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,/** @summary clear extra drawn objects like tracks or hits */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,clear,clear,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,/** @summary decompress ROOT LZMA buffer; * @desc ROOT buffer has internal header of 29 bytes long which can be simply ignored */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/base/lzma.mjs:112,simpl,simply,112,js/modules/base/lzma.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/base/lzma.mjs,1,['simpl'],['simply']
Usability,"/** @summary implementation of TTree::Draw; * @param {object|string} args - different setting or simply draw expression; * @param {string} args.expr - draw expression; * @param {string} [args.cut=undefined] - cut expression (also can be part of 'expr' after '::'); * @param {string} [args.drawopt=undefined] - draw options for result histogram; * @param {number} [args.firstentry=0] - first entry to process; * @param {number} [args.numentries=undefined] - number of entries to process, all by default; * @param {object} [args.branch=undefined] - TBranch object from TTree itself for the direct drawing; * @param {function} [args.progress=undefined] - function called during histogram accumulation with obj argument; * @return {Promise} with produced object */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:97,simpl,simply,97,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simply']
Usability,/** @summary simple dump of the branch - no need to analyze something */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,simpl,simple,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,"/** @summary use MathJax for complex cases, otherwise simple SVG text */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:54,simpl,simple,54,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,/** Clear all pointers without performing cleanup */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RHolder.hxx:4,Clear,Clear,4,gui/browsable/inc/ROOT/Browsable/RHolder.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RHolder.hxx,1,['Clear'],['Clear']
Usability,/** Clear content of the matrix and initialize to zero elements; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:4,Clear,Clear,4,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h,1,['Clear'],['Clear']
Usability,/** Clear specified attribute */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMap.hxx:4,Clear,Clear,4,graf2d/gpadv7/inc/ROOT/RAttrMap.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMap.hxx,1,['Clear'],['Clear']
Usability,"/** Code executed during exit and sometime crashes.; * Disable it, while not clear if defaultProfile can be still used - seems to be not */; // if (fHandler); // QWebEngineProfile::defaultProfile()->removeUrlSchemeHandler(fHandler.get());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/qt6webdisplay/rootqt6.cpp:77,clear,clear,77,gui/qt6webdisplay/rootqt6.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/qt6webdisplay/rootqt6.cpp,1,['clear'],['clear']
Usability,"/** Code executed during exit and sometime crashes.; * Disable it, while not clear if defaultProfile can be still used - seems to be not */; // if (fHandler); // QWebEngineProfile::defaultProfile()->removeUrlSchemeHandler(fHandler.get());; // do not try to destroy objects during exit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/qt5webdisplay/rootqt5.cpp:77,clear,clear,77,gui/qt5webdisplay/rootqt5.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/qt5webdisplay/rootqt5.cpp,1,['clear'],['clear']
Usability,"/** Perform a single optimization step on a given batch. Propagates the input; matrix forward through the net, evaluates the loss and propagates the gradients; backward through the net. The computed gradients are scaled by the learning; rate \f$\alpha\f$ and subtracted from the weights and bias values of each; layer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:227,learn,learning,227,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,2,['learn'],['learning']
Usability,"/** Performs a minimization using the simplex method of Nelder and Mead; (ref. Comp. J. 7, 308 (1965)).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ScanBuilder.h:38,simpl,simplex,38,math/minuit2/inc/Minuit2/ScanBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ScanBuilder.h,2,['simpl'],['simplex']
Usability,/** Simple structure for ComboBox item */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:4,Simpl,Simple,4,tutorials/webgui/panel/webpanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx,1,['Simpl'],['Simple']
Usability,/** TBatchIterator; *; * Simple iterator class for the iterations over the training batches in; * a given data set represented by a TDataLoader object.; *; * \tparam AData The input data type.; * \tparam AArchitecture The underlying architecture type.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DataLoader.h:25,Simpl,Simple,25,tmva/tmva/inc/TMVA/DNN/DataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DataLoader.h,1,['Simpl'],['Simple']
Usability,"/** TCpuBuffer; *; * Since the memory on the CPU is homogeneous, only one buffer class is required.; * The host and device buffer classes are the same and copying between the host; * and device buffer is achieved by simply swapping the memory pointers.; *; * Memory is handled as a shared pointer to a pointer of type AFloat, which is; * the floating point type used for the implementation.; *; * Copying and assignment of TCpuBuffer objects performs only a shallow copy; * meaning the underlying data is shared between those objects.; *; * \tparam AFloat The floating point type used for the computations.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuBuffer.h:216,simpl,simply,216,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuBuffer.h,1,['simpl'],['simply']
Usability,/** TTensorBatchIterator; *; * Simple iterator class for the iterations over the training batches in; * a given data set represented by a TTensorDataLoader object.; *; * \tparam Data_t The input data type.; * \tparam Architecture_t The underlying architecture type.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h:31,Simpl,Simple,31,tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h,1,['Simpl'],['Simple']
Usability,"/** The TCpuMatrix class.; *; * Matrix class for multi-threaded CPU architectures. Uses the TCpuBuffer; * class to store the matrices in column-major format for compatibility with; * BLAS. Provides Map and MapFrom member functions to simplify the application of; * activation functions and derivatives to matrices.; *; * Copying and assignment of TCpuMatrix objects only performs shallow copies, i.e.; * copying is fast and the resulting objects share the element data.; *; * \tparam AFloat The floating point type used to represent the matrix elements.; */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h:234,simpl,simplify,234,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuMatrix.h,1,['simpl'],['simplify']
Usability,/** Train a linear neural network on data from two randomly generated linear mappings; * from a 8-dimensional input space to a 1-dimensional output space. Set weights; * corresponding to the second mapping to zero so that the neural network is forced to; * learn the first mapping.; * Returns the error of the response of the network to the input containing; * only ones to the 1x8 matrix used to generate the training data.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h:257,learn,learn,257,tmva/tmva/test/DNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h,1,['learn'],['learn']
Usability,"/** \class ConfInterval; \ingroup Roostats. ConfInterval is an interface class for a generic interval in the RooStats framework.; Any tool inheriting from IntervalCalculator can return a ConfInterval.; There are many types of intervals, they may be a simple range [a,b] in 1 dimension,; or they may be disconnected regions in multiple dimensions.; So the common interface is simply to ask the interval if a given point ""IsInInterval"".; The Interval also knows what confidence level it was constructed at and the space of; parameters for which it was constructed.; Note, one could use the same class for a Bayesian ""credible interval"". */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfInterval.h:251,simpl,simple,251,roofit/roostats/inc/RooStats/ConfInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfInterval.h,2,['simpl'],"['simple', 'simply']"
Usability,"/** \class DebuggingSampler; \ingroup Roostats. DebuggingSampler is a simple implementation of the DistributionCreator interface used for debugging.; The sampling distribution is uniformly random between [0,1] and is INDEPENDENT of the data. So it is not useful; for true statistical tests, but it is useful for debugging. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h:70,simpl,simple,70,roofit/roostats/inc/RooStats/DebuggingSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h,1,['simpl'],['simple']
Usability,"/** \class DebuggingTestStat; \ingroup Roostats. DebuggingTestStat is a simple implementation of the DistributionCreator interface used for debugging.; The sampling distribution is uniformly random between [0,1] and is INDEPENDENT of the data. So it is not useful; for true statistical tests, but it is useful for debugging. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingTestStat.h:72,simpl,simple,72,roofit/roostats/inc/RooStats/DebuggingTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingTestStat.h,1,['simpl'],['simple']
Usability,"/** \class FIFOQueue; * \brief A Queue with simple FIFO behavior; */; /// See Queue::pop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx:44,simpl,simple,44,roofit/multiprocess/src/FIFOQueue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/FIFOQueue.cxx,1,['simpl'],['simple']
Usability,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:805,simpl,simple,805,roofit/multiprocess/src/Queue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx,2,['simpl'],['simple']
Usability,"/** \class RAnyObjectHolder; \ingroup rbrowser; \brief Holder of any object instance. Normally used with TFile, where any object can be read. Normally RShread or RUnique should be used; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-19; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RAnyObjectHolder.hxx:351,Feedback,Feedback,351,gui/browsable/inc/ROOT/Browsable/RAnyObjectHolder.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RAnyObjectHolder.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RArgsMenuItem; \ingroup GpadROOT7; \brief Menu item which requires extra arguments for invoked class method; \author Sergey Linev; \date 2017-06-29; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx:268,Feedback,Feedback,268,graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrAggregation; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2021-06-18; \brief Base class for attributes aggregations like lines or fill attributes; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAggregation.hxx:291,Feedback,Feedback,291,graf2d/gpadv7/inc/ROOT/RAttrAggregation.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAggregation.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RAttrAxis; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2020-02-20; \brief All supported axes attributes for: line, ticks, labels, title, min/max, log, reverse, ...; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx:305,Feedback,Feedback,305,graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrAxisLabels; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2021-06-28; \brief Axis labels drawing attributes; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx:252,Feedback,Feedback,252,graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrAxisTicks; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2021-06-28; \brief Axis ticks attributes; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx:242,Feedback,Feedback,242,graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrAxisTitle; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2021-06-28; \brief Axis title and its drawing attributes; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx:258,Feedback,Feedback,258,graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrAxis.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RAttrBase; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2019-09-17; \brief Base class for all attributes, used with RDrawable; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrBase.hxx:266,Feedback,Feedback,266,graf2d/gpadv7/inc/ROOT/RAttrBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrBase.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrFill; \ingroup GpadROOT7; \author Sergey Linev; \date 2019-09-13; \brief Drawing fill attributes for different objects.; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrFill.hxx:245,Feedback,Feedback,245,graf2d/gpadv7/inc/ROOT/RAttrFill.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrFill.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RAttrFont; \ingroup GpadROOT7; \brief A font attributes, used together with text attributes; \author Sergey Linev <s.linev@gsi.de>; \date 2021-06-28; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrFont.hxx:269,Feedback,Feedback,269,graf2d/gpadv7/inc/ROOT/RAttrFont.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrFont.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrLine; \ingroup GpadROOT7; \authors Axel Naumann <axel@cern.ch> Sergey Linev <s.linev@gsi.de>; \date 2018-10-12; \brief Drawing line attributes for different objects.; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrLine.hxx:291,Feedback,Feedback,291,graf2d/gpadv7/inc/ROOT/RAttrLine.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrLine.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrLineEnding; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2021-06-28; \brief Attributes for line ending; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrLine.hxx:248,Feedback,Feedback,248,graf2d/gpadv7/inc/ROOT/RAttrLine.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrLine.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrMap; \ingroup GpadROOT7; \authors Axel Naumann <axel@cern.ch> Sergey Linev <s.linev@gsi.de>; \date 2017-09-26; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMap.hxx:235,Feedback,Feedback,235,graf2d/gpadv7/inc/ROOT/RAttrMap.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMap.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrMargins; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2020-02-20; \brief A margins attributes. Only relative and pixel coordinates are allowed; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMargins.hxx:288,Feedback,Feedback,288,graf2d/gpadv7/inc/ROOT/RAttrMargins.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMargins.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrMarker; \ingroup GpadROOT7; \authors Axel Naumann <axel@cern.ch> Sergey Linev <s.linev@gsi.de>; \date 2018-10-12; \brief A marker attributes.; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMarker.hxx:267,Feedback,Feedback,267,graf2d/gpadv7/inc/ROOT/RAttrMarker.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrMarker.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrText; \ingroup GpadROOT7; \brief A text attributes.; \authors Axel Naumann <axel@cern.ch> Sergey Linev <s.linev@gsi.de>; \date 2018-10-12; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrText.hxx:263,Feedback,Feedback,263,graf2d/gpadv7/inc/ROOT/RAttrText.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrText.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAttrValue; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2020-06-24; \brief Template class to access single value from drawable or other attributes; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx:288,Feedback,Feedback,288,graf2d/gpadv7/inc/ROOT/RAttrValue.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAttrValue.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RAxisDrawable; \ingroup GrafROOT7; \brief Axis drawing; \author Sergey Linev <S.Linev@gsi.de>; \date 2020-11-03; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAxisDrawable.hxx:232,Feedback,Feedback,232,graf2d/gpadv7/inc/ROOT/RAxisDrawable.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RAxisDrawable.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RBox; \ingroup GrafROOT7; \brief A simple box.; \author Olivier Couet <Olivier.Couet@cern.ch>; \date 2017-10-16; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RBox.hxx:46,simpl,simple,46,graf2d/primitivesv7/inc/ROOT/RBox.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RBox.hxx,2,"['Feedback', 'simpl']","['Feedback', 'simple']"
Usability,/** \class RCanvas; \ingroup GpadROOT7; \brief A window's topmost `RPad`.; \author Axel Naumann <axel@cern.ch>; \date 2015-07-08; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx:238,Feedback,Feedback,238,graf2d/gpadv7/inc/ROOT/RCanvas.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RCheckedMenuItem; \ingroup GpadROOT7; \brief Menu item with check box; \author Sergey Linev; \date 2017-06-29; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx:230,Feedback,Feedback,230,graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RCustomDrawable; \ingroup GrafROOT7; \brief Special drawable to let provide line, fill or marker attributes for legend; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-07-06; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx:296,Feedback,Feedback,296,graf2d/primitivesv7/inc/ROOT/RLegend.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RDisplayItem; \ingroup GpadROOT7; \brief Base class for painting data for JS.; \author Sergey Linev <s.linev@gsi.de>; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx:255,Feedback,Feedback,255,graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RDrawableDisplayItem; \ingroup GpadROOT7; \brief Generic display item for RDrawable, just reference drawable itself; \author Sergey Linev <s.linev@gsi.de>; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx:293,Feedback,Feedback,293,graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RDrawableExecRequest; \ingroup GpadROOT7; \brief Request execution of method of referenced drawable, no reply; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-14; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx:287,Feedback,Feedback,287,graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RDrawableMenuRequest; \ingroup GpadROOT7; \brief Request menu items for the drawable object; \author Sergey Linev; \date 2020-04-14; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx:252,Feedback,Feedback,252,graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RDrawableReply; \ingroup GpadROOT7; \brief Base class for replies on RDrawableRequest; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-14; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx:263,Feedback,Feedback,263,graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RDrawableRequest; \ingroup GpadROOT7; \brief Base class for requests which can be submitted from the clients; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-14; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx:286,Feedback,Feedback,286,graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawableRequest.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RElement; \ingroup rbrowser; \brief Basic element of browsable hierarchy. Provides access to data, creates iterator if any; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-14; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RElement.hxx:300,Feedback,Feedback,300,gui/browsable/inc/ROOT/Browsable/RElement.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RElement.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class REntry; \ingroup GrafROOT7; \brief An entry in RLegend, references RDrawable and its attributes; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-09; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx:273,Feedback,Feedback,273,graf2d/primitivesv7/inc/ROOT/RLegend.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class REveGeoShape; \ingroup REve; Wrapper for TGeoShape with absolute positioning and color; attributes allowing display of extracted TGeoShape's (without an; active TGeoManager) and simplified geometries (needed for non-linear; projections). TGeoCompositeShapes and TGeoAssemblies are supported. If fNSegments data-member is < 2 (0 by default), the default number of; segments is used for tesselation and special GL objects are; instantiated for selected shapes (spheres, tubes). If fNSegments is > 2,; it gets forwarded to geo-manager and this tesselation detail is; used when creating the buffer passed to GL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveGeoShape.cxx:189,simpl,simplified,189,graf3d/eve7/src/REveGeoShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveGeoShape.cxx,1,['simpl'],['simplified']
Usability,"/** \class REveMagField; \ingroup REve; Abstract base-class for interfacing to magnetic field needed by the; REveTrackPropagator. To implement your own version, redefine the following virtual functions:; virtual Double_t GetMaxFieldMag() const;; virtual TEveVectorD GetField(Double_t x, Double_t y, Double_t z) const;. See sub-classes REveMagFieldConst and REveMagFieldDuo for two simple implementations.; */; /** \class REveMagFieldConst; \ingroup REve; Implements constant magnetic field, given by a vector fB.; */; /** \class REveMagFieldDuo; \ingroup REve; Implements constant magnetic filed that switches on given axial radius fR2; from vector fBIn to fBOut.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackPropagator.cxx:381,simpl,simple,381,graf3d/eve7/src/REveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackPropagator.cxx,1,['simpl'],['simple']
Usability,"/** \class REveSecondarySelectable; \ingroup REve; Semi-abstract interface for classes supporting secondary-selection. Element class that inherits from this, should also implement the; following virtual methods from REveElement:; ~~~ {.cpp}; virtual void UnSelected();; virtual void UnHighlighted();; ~~~; and clear corresponding selection-set from there. To support tooltips for sub-elements, implement:; ~~~ {.cpp}; virtual std::string REveElement::GetHighlightTooltip() const;; ~~~; and return tooltip for the entry in the fHighlightedSet.; There should always be a single entry there.; See EveDigitSet for an example.; */; ////////////////////////////////////////////////////////////////////////////////; /// Process secondary GL selection and populate selected set accordingly.; /*. void REveSecondarySelectable::ProcessGLSelection(TGLSelectRecord& rec); {; if (rec.GetHighlight()); ProcessGLSelectionInternal(rec, fHighlightedSet);; else; ProcessGLSelectionInternal(rec, fSelectedSet);; }. ////////////////////////////////////////////////////////////////////////////////; /// Process secondary GL selection and populate given set accordingly. void REveSecondarySelectable::ProcessGLSelectionInternal(TGLSelectRecord& rec,; SelectionSet_t& sset); {; Int_t id = (rec.GetN() > 1) ? (Int_t) rec.GetItem(1) : -1;. if (sset.empty()); {; if (id >= 0); {; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kEnteringSelection);; }; }; else; {; if (id >= 0); {; if (rec.GetMultiple()); {; if (sset.find(id) == sset.end()); {; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; else; {; sset.erase(id);; if (sset.empty()); rec.SetSecSelResult(TGLSelectRecord::kLeavingSelection);; else; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; }; else; {; if (sset.size() != 1 || sset.find(id) == sset.end()); {; sset.clear();; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; }; }; else; {; if (!rec.GetMulti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveSecondarySelectable.cxx:310,clear,clear,310,graf3d/eve7/src/REveSecondarySelectable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveSecondarySelectable.cxx,1,['clear'],['clear']
Usability,/** \class RFont; \ingroup GpadROOT7; \brief Custom font configuration for the RCanvas; \author Sergey Linev <s.linev@gsi.de>; \date 2021-07-02; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFont.hxx:253,Feedback,Feedback,253,graf2d/primitivesv7/inc/ROOT/RFont.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFont.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RFrame; \ingroup GpadROOT7; \brief Holds an area where drawing on user coordinate-system can be performed.; \authors Axel Naumann <axel@cern.ch> Sergey Linev <s.linev@gsi.de>; \date 2017-09-26; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx:313,Feedback,Feedback,313,graf2d/gpadv7/inc/ROOT/RFrame.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RFrameTitle; \ingroup GrafROOT7; \brief A title for the RFrame.; \author Sergey Linev <s.linev@gsi.de>; \date 2020-02-26; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is; welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFrameTitle.hxx:241,Feedback,Feedback,241,graf2d/primitivesv7/inc/ROOT/RFrameTitle.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFrameTitle.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RGroup; \ingroup rbrowser; \brief Group of browsable elements - combines several different elements together.; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-11-22; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RGroup.hxx:287,Feedback,Feedback,287,gui/browsable/inc/ROOT/Browsable/RGroup.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RGroup.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RHolder; \ingroup rbrowser; \brief Basic class for object holder of any kind. Could be used to transfer shared_ptr or unique_ptr or plain pointer; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-19; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RHolder.hxx:323,Feedback,Feedback,323,gui/browsable/inc/ROOT/Browsable/RHolder.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RHolder.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RIOSharedBase; \ingroup GpadROOT7; \author Sergey Linev <s.linev@gsi.de>; \date 2019-09-24; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawable.hxx:211,Feedback,Feedback,211,graf2d/gpadv7/inc/ROOT/RDrawable.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDrawable.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RIndirectDisplayItem; \ingroup GpadROOT7; \brief Extract (reference) only basic attributes from drawable, but not drawable itself; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-02; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx:307,Feedback,Feedback,307,graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RDisplayItem.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RLegend; \ingroup GrafROOT7; \brief A legend for several drawables; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-09; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx:244,Feedback,Feedback,244,graf2d/primitivesv7/inc/ROOT/RLegend.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RLevelIter; \ingroup rbrowser; \brief Iterator over single level hierarchy like any array, keys list, ...; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-14; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RLevelIter.hxx:283,Feedback,Feedback,283,gui/browsable/inc/ROOT/Browsable/RLevelIter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RLevelIter.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RLine; \ingroup GrafROOT7; \brief A simple line.; \authors Olivier Couet <Olivier.Couet@cern.ch>, Sergey Linev <S.Linev@gsi.de>; \date 2017-10-16; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLine.hxx:47,simpl,simple,47,graf2d/primitivesv7/inc/ROOT/RLine.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLine.hxx,2,"['Feedback', 'simpl']","['Feedback', 'simple']"
Usability,/** \class RMarker; \ingroup GrafROOT7; \brief A simple marker.; \author Olivier Couet <Olivier.Couet@cern.ch>; \date 2017-10-16; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RMarker.hxx:49,simpl,simple,49,graf2d/primitivesv7/inc/ROOT/RMarker.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RMarker.hxx,2,"['Feedback', 'simpl']","['Feedback', 'simple']"
Usability,/** \class RMenuArgument; \ingroup GpadROOT7; \brief Argument description for menu item which should invoke class method; \author Sergey Linev; \date 2017-06-29; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx:270,Feedback,Feedback,270,graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RMenuItem; \ingroup GpadROOT7; \brief Base class for menu items, shown on JS side.; \author Sergey Linev; \date 2017-06-29; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx:243,Feedback,Feedback,243,graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RMenuItems.hxx,1,['Feedback'],['Feedback']
Usability,/** \class ROOT::Experimental::Internal::RVirtualCanvasPainter; \ingroup GpadROOT7; \brief Abstract interface for painting a canvas.; \author Axel Naumann <axel@cern.ch>; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RVirtualCanvasPainter.hxx:297,Feedback,Feedback,297,graf2d/gpadv7/inc/ROOT/RVirtualCanvasPainter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RVirtualCanvasPainter.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class ROOT::Experimental::RDisplayHistStat; \ingroup GrafROOT7; \brief Object send to client for display of RHistStat, required to avoid sending histogram to the client; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-17; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:340,Feedback,Feedback,340,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,1,['Feedback'],['Feedback']
Usability,/** \class ROOT::Experimental::RHistStatBox; \ingroup GrafROOT7; \brief Template class for statistic box for RHist class; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-01; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:287,Feedback,Feedback,287,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class ROOT::Experimental::RHistStatBoxBase; \ingroup GrafROOT7; \brief Base class for histogram statistic box, provides graphics attributes and virtual method for fill statistic; \author Sergey Linev <s.linev@gsi.de>; \date 2020-04-01; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:349,Feedback,Feedback,349,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,1,['Feedback'],['Feedback']
Usability,/** \class ROOT::Experimental::RPadBase; \ingroup GpadROOT7; \brief Base class for graphic containers for `RDrawable`-s.; \authors Axel Naumann <axel@cern.ch> Sergey Linev <s.linev@gsi.de>; \date 2019-10-02; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadBase.hxx:316,Feedback,Feedback,316,graf2d/gpadv7/inc/ROOT/RPadBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadBase.hxx,1,['Feedback'],['Feedback']
Usability,/** \class ROOT::Experimental::RPadPos; \ingroup GpadROOT7; \brief A position (horizontal and vertical) in a `RPad`.; \author Axel Naumann <axel@cern.ch>; \date 2017-07-07; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadPos.hxx:281,Feedback,Feedback,281,graf2d/gpadv7/inc/ROOT/RPadPos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadPos.hxx,1,['Feedback'],['Feedback']
Usability,/** \class ROOT::Experimental::RPaletteDrawable; \ingroup GrafROOT7; \brief A color palette draw near the frame.; \author Sergey Linev <s.linev@gsi.de>; \date 2020-03-05; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPaletteDrawable.hxx:279,Feedback,Feedback,279,graf2d/gpadv7/inc/ROOT/RPaletteDrawable.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPaletteDrawable.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class ROOT::Experimental::RPave; \ingroup GrafROOT7; \brief Base class for paves with text, statistic, legends, placed relative to RFrame position and adjustable height; \author Sergey Linev <s.linev@gsi.de>; \date 2020-06-18; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPave.hxx:340,Feedback,Feedback,340,graf2d/gpadv7/inc/ROOT/RPave.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPave.hxx,1,['Feedback'],['Feedback']
Usability,/** \class ROOT::Experimental::RText; \ingroup GrafROOT7; \brief A text.; \author Olivier Couet <Olivier.Couet@cern.ch>; \date 2017-10-16; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is; welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RText.hxx:247,Feedback,Feedback,247,graf2d/primitivesv7/inc/ROOT/RText.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RText.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class ROnFrameDrawable; \ingroup GpadROOT7; \brief Base class for drawable which can be drawn on frame or on pad. Introduces ""onFrame"" and ""clipping"" attributes. If onFrame = true, one can enable clipping of such drawables.; Dedicated for classes like RLine, RText, RBox and similar; \author Sergey Linev <s.linev@gsi.de>; \date 2021-06-29; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/ROnFrameDrawable.hxx:454,Feedback,Feedback,454,graf2d/gpadv7/inc/ROOT/ROnFrameDrawable.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/ROnFrameDrawable.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RPad; \ingroup GpadROOT7; \brief Graphic container for `RDrawable`-s.; \authors Axel Naumann <axel@cern.ch> Sergey Linev <s.linev@gsi.de>; \date 2017-07-06; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPad.hxx:276,Feedback,Feedback,276,graf2d/gpadv7/inc/ROOT/RPad.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPad.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RPadExtent; \ingroup GpadROOT7; \brief An extent / size (horizontal and vertical) in a `RPad`.; \author Axel Naumann <axel@cern.ch>; \date 2017-07-07; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadExtent.hxx:270,Feedback,Feedback,270,graf2d/gpadv7/inc/ROOT/RPadExtent.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadExtent.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RPalette; \ingroup GpadROOT7; \brief A set of colors. `RColor`s can be conveniently generated from this. A palette associates a color with an ordinal number: for a normalized palette,; this number ranges from 0..1. For user-valued palettes, the palette yields a color for; user-coordinates (for instance histogram content), in an arbitrary range. A palette can be a smooth gradients by interpolation of support points, or a set of; discrete colors. \author Axel Naumann <axel@cern.ch>; \date 2017-09-26; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPalette.hxx:623,Feedback,Feedback,623,graf2d/gpadv7/inc/ROOT/RPalette.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPalette.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RPaveText; \ingroup GrafROOT7; \brief A RPave with text content; \author Sergey Linev <S.Linev@gsi.de>; \date 2020-06-19; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is; welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RPaveText.hxx:241,Feedback,Feedback,241,graf2d/primitivesv7/inc/ROOT/RPaveText.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RPaveText.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RProvider; \ingroup rbrowser; \brief Provider of different browsing methods for supported classes; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-14; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RProvider.hxx:275,Feedback,Feedback,275,gui/browsable/inc/ROOT/Browsable/RProvider.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RProvider.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RShared<T>; \ingroup rbrowser; \brief Holder of with shared_ptr<T> instance. Should be used to transfer shared_ptr<T> in browsable methods; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-19; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RShared.hxx:316,Feedback,Feedback,316,gui/browsable/inc/ROOT/Browsable/RShared.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RShared.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RStyle; \ingroup GpadROOT7; \brief A set of defaults for graphics attributes, e.g. for histogram fill color, line width, frame offsets etc. Uses CSS syntax.; \author Axel Naumann <axel@cern.ch>; \author Sergey Linev <s.linev@gsi.de>; \date 2017-10-10; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RStyle.hxx:371,Feedback,Feedback,371,graf2d/gpadv7/inc/ROOT/RStyle.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RStyle.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RUnique<T>; \ingroup rbrowser; \brief Holder of with unique_ptr<T> instance. Should be used to transfer unique_ptr<T> in browsable methods; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-19; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RUnique.hxx:316,Feedback,Feedback,316,gui/browsable/inc/ROOT/Browsable/RUnique.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RUnique.hxx,1,['Feedback'],['Feedback']
Usability,/** \class RWrapper; \ingroup rbrowser; \brief Wrapper for other element - to provide different name; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-11-22; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RWrapper.hxx:267,Feedback,Feedback,267,gui/browsable/inc/ROOT/Browsable/RWrapper.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RWrapper.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:535,simpl,simple,535,roofit/roofit/src/RooJeffreysPrior.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx,1,['simpl'],['simple']
Usability,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:180,simpl,simple,180,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx,1,['simpl'],['simple']
Usability,"/** \class TASPngWriter; \ingroup asimage. C++ wrapper over simple writer of PNG files for standard GL memory formats:; LUMINANCE, LUMINANCE_ALPHA, RGB, and RGBA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPngWriter.cxx:60,simpl,simple,60,graf2d/asimage/src/TASPngWriter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPngWriter.cxx,1,['simpl'],['simple']
Usability,"/** \class TAttBBox2D; \ingroup Base; \ingroup GraphicsAtt. Abstract base class for elements drawn in the editor.; Classes inheriting from TAttBBox2D implementing the TAttBBox2D; virtual classes, and using TPad::ShowGuideLines in ExecuteEvent; will automatically get the guide lines drawn when moved in the pad.; All methods work with pixel coordinates.; */; ////////////////////////////////////////////////////////////////////////////////; // TAttBBox2D destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttBBox2D.cxx:271,guid,guide,271,core/base/src/TAttBBox2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttBBox2D.cxx,1,['guid'],['guide']
Usability,"/** \class TBuffer3D; \ingroup Base. Generic 3D primitive description class.; See TBuffer3DTypes for producer classes. ### Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in OpenGL); - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details). \image html base_tbuffer3d.png. The `SectionsValid() / SetSectionsValid / ClearSectionsValid()` methods of; TBuffer3D are used to test/set/clear these section valid flags. The sections found in TBuffer3D (`Core/BoundingBox/Raw Sizes/Raw`) are sufficient; to describe any tessellated shape in a generic fashion. An additional; `ShapeSpecific` section in derived shape specific classes allows a more abstract; shape description (""a sphere of inner radius x, outer radius y""). This; enables a viewer which knows how to draw (tessellate) the shape itself to do so,; which can bring considerable performance and quality benefits, while providing a; generic fallback suitable for all viewers. The rules for client negotiation with the viewer are:. - If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; - Complete the mandatory Core section.; - Complete the ShapeSpecific section if applicable.; - Complete the BoundingBox if you can.; - Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSizes) AddObject(); will return flags indicating which ones, otherwise it returns kNo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:887,Clear,ClearSectionsValid,887,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,2,"['Clear', 'clear']","['ClearSectionsValid', 'clear']"
Usability,"/** \class TCollectionProxyFactory TCollectionProxyFactory.h; TCollectionProxyFactory; Interface to collection proxy and streamer generator.; Proxy around an arbitrary container, which implements basic; functionality and iteration. The purpose of this implementation; is to shield any generated dictionary implementation from the; underlying streamer/proxy implementation and only expose; the creation functions. In particular this is used to implement splitting and abstract; element access of any container. Access to compiled code is necessary; to implement the abstract iteration sequence and functionality like; size(), clear(), resize(). resize() may be a void operation. \author M.Frank; \version 1.0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TCollectionProxyFactory.h:625,clear,clear,625,io/io/inc/TCollectionProxyFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TCollectionProxyFactory.h,1,['clear'],['clear']
Usability,"/** \class TColor; \ingroup Base; \ingroup GraphicsAtt. The color creation and management class. - [Introduction](\ref C00); - [Basic colors](\ref C01); - [The color wheel](\ref C02); - [Bright and dark colors](\ref C03); - [Accessible Color Schemes](\ref C031); - [Gray scale view of of canvas with colors](\ref C04); - [Color palettes](\ref C05); - [High quality predefined palettes](\ref C06); - [Colour Vision Deficiency (CVD) friendly palettes](\ref C06a); - [Non Colour Vision Deficiency (CVD) friendly palettes](\ref C06b); - [Palette inversion](\ref C061); - [Color transparency](\ref C07). \anchor C00; ## Introduction. Colors are defined by their red, green and blue components, simply called the; RGB components. The colors are also known by the hue, light and saturation; components also known as the HLS components. When a new color is created the; components of both color systems are computed. At initialization time, a table of colors is generated. An existing color can; be retrieved by its index:. ~~~ {.cpp}; TColor *color = gROOT->GetColor(10);; ~~~. Then it can be manipulated. For example its RGB components can be modified:. ~~~ {.cpp}; color->SetRGB(0.1, 0.2, 0.3);; ~~~. A new color can be created the following way:. ~~~ {.cpp}; Int_t ci = 1756; // color index; auto color = new TColor(ci, 0.1, 0.2, 0.3);; ~~~. \since **6.07/07:**; TColor::GetFreeColorIndex() allows to make sure the new color is created with an; unused color index:. ~~~ {.cpp}; Int_t ci = TColor::GetFreeColorIndex();; auto color = new TColor(ci, 0.1, 0.2, 0.3);; ~~~. Two sets of colors are initialized;. - The basic colors: colors with index from 0 to 50.; - The color wheel: colors with indices from 300 to 1000. \anchor C01; ## Basic colors; The following image displays the 50 basic colors. Begin_Macro(source); {; auto c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. \anchor C02; ## The color wheel; The wheel contains the recommended 216 colors ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:689,simpl,simply,689,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['simpl'],['simply']
Usability,"/** \class TContext; \ingroup Base. TDirectory::TContext keeps track and restore the current directory.; With this tool C++ exceptions will be guaranteed to properly restore the; current directory pointer. For example code like:. ~~~ {.cpp}; TDirectory *sav = gDirectory;; mydirectory->cd();; if (...) {; ....; sav->cd();; return;; } else if (...) {; ....; sav->cd();; return;; }; sav->cd;; return;; ~~~. can be replaced with the simpler and exception safe:. ~~~ {.cpp}; TDirectory::TContext context(gDirectory, mydirectory);; if (...) {; ....; return;; } else if (...) {; ....; return;; }; return;; ~~~. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TDirectory.h:430,simpl,simpler,430,core/base/inc/TDirectory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TDirectory.h,1,['simpl'],['simpler']
Usability,/** \class TEveGedNameFrame; \ingroup TEve; Specialization of TGedNameFrame used in EVE.; It provides the ability to undock given editor for easier use.; Support for that is also provided from the TEveManager.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGedEditor.cxx:117,undo,undock,117,graf3d/eve/src/TEveGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGedEditor.cxx,1,['undo'],['undock']
Usability,"/** \class TEveGeoShape; \ingroup TEve; Wrapper for TGeoShape with absolute positioning and color; attributes allowing display of extracted TGeoShape's (without an; active TGeoManager) and simplified geometries (needed for non-linear; projections). TGeoCompositeShapes and TGeoAssemblies are supported. If fNSegments data-member is < 2 (0 by default), the default number of; segments is used for tesselation and special GL objects are; instantiated for selected shapes (spheres, tubes). If fNSegments is > 2,; it gets forwarded to geo-manager and this tesselation detail is; used when creating the buffer passed to GL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoShape.cxx:189,simpl,simplified,189,graf3d/eve/src/TEveGeoShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoShape.cxx,1,['simpl'],['simplified']
Usability,"/** \class TEveMagField; \ingroup TEve; Abstract base-class for interfacing to magnetic field needed by the; TEveTrackPropagator. To implement your own version, redefine the following virtual functions:; virtual Double_t GetMaxFieldMagD() const;; virtual TEveVectorD GetFieldD(Double_t x, Double_t y, Double_t z) const;. See sub-classes TEveMagFieldConst and TEveMagFieldDuo for two simple implementations. NOTE: For backward compatibility float versions are the primary; sources of field information in this base-class. The float versions are; not used in TEve and can be ignored in sub-classes. NOTE: Magnetic field direction convention is inverted.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:383,simpl,simple,383,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,1,['simpl'],['simple']
Usability,"/** \class TEveSecondarySelectable; \ingroup TEve; Semi-abstract interface for classes supporting secondary-selection. Element class that inherits from this, should also implement the; following virtual methods from TEveElement:; ~~~ {.cpp}; virtual void UnSelected();; virtual void UnHighlighted();; ~~~; and clear corresponding selection-set from there. To support tooltips for sub-elements, implement:; ~~~ {.cpp}; virtual TString TEveElement::GetHighlightTooltip();; ~~~; and return tooltip for the entry in the fHighlightedSet.; There should always be a single entry there.; See TEveDigitSet for an example.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveSecondarySelectable.cxx:310,clear,clear,310,graf3d/eve/src/TEveSecondarySelectable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveSecondarySelectable.cxx,1,['clear'],['clear']
Usability,/** \class TGHtmlBrowser; \ingroup guihtml. A very simple HTML browser. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlBrowser.cxx:51,simpl,simple,51,gui/guihtml/src/TGHtmlBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlBrowser.cxx,1,['simpl'],['simple']
Usability,/** \class TGLLockable; \ingroup opengl; Simple locking interface used by viewer and scene.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx:41,Simpl,Simple,41,graf3d/gl/src/TGLLockable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx,1,['Simpl'],['Simple']
Usability,"/** \class TGLMatrix; \ingroup opengl; 16 component (4x4) transform matrix - column MAJOR as per GL.; Provides limited support for adjusting the translation, scale and; rotation components. This is part of collection of simple utility classes for GL only in; TGLUtil.h/cxx. These provide const and non-const accessors Arr() &; CArr() to a GL compatible internal field - so can be used directly; with OpenGL C API calls - which TVector3 etc cannot (easily).; They are not intended to be fully featured just provide minimum; required.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:220,simpl,simple,220,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['simpl'],['simple']
Usability,/** \class TGLPlane; \ingroup opengl; 3D plane class - of format Ax + By + Cz + D = 0. This is part of collection of simple utility classes for GL only in; TGLUtil.h/cxx. These provide const and non-const accessors Arr() &; CArr() to a GL compatible internal field - so can be used directly; with OpenGL C API calls - which TVector3 etc cannot (easily).; They are not intended to be fully featured just provide minimum; required.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:117,simpl,simple,117,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['simpl'],['simple']
Usability,"/** \class TGLSelectRecord; \ingroup opengl; Standard selection record including information about containing; scene and details ob out selected object (TGLPhysicalShape*,; TObject* or simply a void* for foreign scenes).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSelectRecord.cxx:185,simpl,simply,185,graf3d/gl/src/TGLSelectRecord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSelectRecord.cxx,1,['simpl'],['simply']
Usability,/** \class TGLVertex3; \ingroup opengl; 3 component (x/y/z) vertex class. This is part of collection of simple utility classes for GL only in; TGLUtil.h/cxx. These provide const and non-const accessors Arr() &; CArr() to a GL compatible internal field - so can be used directly; with OpenGL C API calls - which TVector3 etc cannot (easily).; They are not intended to be fully featured just provide minimum required.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:104,simpl,simple,104,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['simpl'],['simple']
Usability,"/** \class TGLWidget; \ingroup opengl; GL window with context. _Must_ _have_ a parent window; (the 'parent' parameter of ctors). The current version inherits; TGCanvas (I'm not sure about future versions), probably, in future; multiple inheritance will be added - the second; base class will be TGLPaintDevice or something like this. Usage:; - Simply create TGLWidget as an embedded widget, and; connect your slots to signals you need: HandleExpose, HandleConfigureNotify, etc.; In your slots you can use gl API directly - under Win32 TGLWidget switches; between threads internally (look TGLPShapeObjEditor for such usage).; - You can write your own class, derived from TGLWidget, with PaintGL and InitGL; overriden. Resources (and invariants):; - fContainer (TGLWidgetContainer) - controlled by std::auto_ptr; - fWindowIndex - controlled manually (see CreateWidget and dtor); - fGLContext - controlled manually (see CreateWidget and dtor); - visual info for X11 version, controlled manually (see CreateGLContainer and dtor). Exceptions:; - can be thrown only during construction.; - under win32 class does not throw itself (but some internal operations can throw); - under X11 can throw std::runtime_error (from CreateGLContext).; - In case of exceptions resources will be freed. TGLWidget object is immutable as far as it was created. Boolean parameter defines, if you want to grab user's input or not.; By default you want, but for example when not - see TGLPShapeObjEditor. Non-copyable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLWidget.cxx:344,Simpl,Simply,344,graf3d/gl/src/TGLWidget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLWidget.cxx,1,['Simpl'],['Simply']
Usability,"/** \class TGSimpleTable; \ingroup guiwidgets. To provide a simple class to visualize an array of doubles, the class; TGSimpleTable is provided. TGSimpleTable creates it's own; TGSimpleTableInterface. For more information, see the documentation of; TGTable. The interface is accesible through the GetInterface() method. */; ////////////////////////////////////////////////////////////////////////////////; /// TGSimpleTable constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTable.cxx:60,simpl,simple,60,gui/gui/src/TGSimpleTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTable.cxx,1,['simpl'],['simple']
Usability,"/** \class TGSimpleTableInterface; \ingroup guiwidgets. TGSimpleTableInterface is a very simple implementation of a; TVirtualTableInterface. This interface provides a TGTable with data; from a two dimensional array of doubles in memory. It is mostly; meant as an example implementation for a TVirtualTableInterface. */; ////////////////////////////////////////////////////////////////////////////////; /// TGSimpleTableInterface constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTableInterface.cxx:89,simpl,simple,89,gui/gui/src/TGSimpleTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTableInterface.cxx,1,['simpl'],['simple']
Usability,"/** \class TGraphAsymmErrors; \ingroup Graphs; TGraph with asymmetric error bars. The TGraphAsymmErrors painting is performed thanks to the TGraphPainter; class. All details about the various painting options are given in this class. The picture below gives an example:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""A Simple Graph with asymmetric error bars"",200,10,700,500);; c1->SetFillColor(42);; c1->SetGrid();; c1->GetFrame()->SetFillColor(21);; c1->GetFrame()->SetBorderSize(12);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; auto gr = new TGraphAsymmErrors(n,x,y,exl,exh,eyl,eyh);; gr->SetTitle(""TGraphAsymmErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// TGraphAsymmErrors default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:325,Simpl,Simple,325,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['Simpl'],['Simple']
Usability,"/** \class TGraphMultiErrors; \ingroup Graphs; TGraph with asymmetric error bars and multiple y error dimensions. The TGraphMultiErrors painting is performed thanks to the TGraphPainter; class. All details about the various painting options are given in this class. The picture below gives an example:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"", ""A Simple Graph with multiple y-errors"", 200, 10, 700, 500);; c1->SetGrid();; c1->GetFrame()->SetBorderSize(12);; const Int_t np = 5;; Double_t x[np] = {0, 1, 2, 3, 4};; Double_t y[np] = {0, 2, 4, 1, 3};; Double_t exl[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; Double_t exh[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; Double_t eylstat[np] = {1, 0.5, 1, 0.5, 1};; Double_t eyhstat[np] = {0.5, 1, 0.5, 1, 2};; Double_t eylsys[np] = {0.5, 0.4, 0.8, 0.3, 1.2};; Double_t eyhsys[np] = {0.6, 0.7, 0.6, 0.4, 0.8};; auto gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", np, x, y, exl, exh, eylstat, eyhstat);; gme->AddYError(np, eylsys, eyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme->GetAttFill(1)->SetFillStyle(0);; gme->Draw(""APS ; Z ; 5 s=0.5"");; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:358,Simpl,Simple,358,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['Simpl'],['Simple']
Usability,"/** \class TH2Poly; \ingroup Histograms; 2D Histogram with Polygonal Bins. ## Overview; `TH2Poly` is a 2D Histogram class (TH2) allowing to define polygonal; bins of arbitrary shape. Each bin in the `TH2Poly` histogram is a `TH2PolyBin` object.; `TH2PolyBin` is a very simple class containing the vertices (stored; as `TGraph`s or `TMultiGraph`s ) and contents of the polygonal; bin as well as several related functions. Essentially, a `TH2Poly` is a TList of `TH2PolyBin` objects; with methods to manipulate them. Bins are defined using one of the `AddBin()` methods. The bin definition; should be done before filling. The histogram can be filled with `Fill(Double_t x, Double_t y, Double_t w); `. `w` is the weight.; If no weight is specified, it is assumed to be 1. Not all histogram's area need to be binned. Filling an area without bins,; will falls into the overflows. Adding a bin is not retroactive; it doesn't; affect previous fillings. A `Fill()` call, that; was previously ignored due to the lack of a bin at the specified location, is; not reconsidered when that location is binned later. If there are two overlapping bins, the first one in the list will be incremented; by `Fill()`. The histogram may automatically extends its limits if a bin outside the; histogram limits is added. This is done when the default constructor (with no; arguments) is used. It generates a histogram with no limits along the X and Y; axis. Adding bins to it will extend it up to a proper size. `TH2Poly` implements a partitioning algorithm to speed up bins' filling; (see the ""Partitioning Algorithm"" section for details).; The partitioning algorithm divides the histogram into regions called cells.; The bins that each cell intersects are recorded in an array of `TList`s.; When a coordinate in the histogram is to be filled; the method (quickly) finds; which cell the coordinate belongs. It then only loops over the bins; intersecting that cell to find the bin the input coordinate corresponds to.; The par",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:269,simpl,simple,269,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,1,['simpl'],['simple']
Usability,"/** \class THtml; \brief Legacy ROOT documentation system. \deprecated; We keep THtml for those who still need it for legacy use cases.; ROOT has since several years moved to [doxygen](https://www.doxygen.nl) as documentation generator.; THtml is not developed nor supported anymore; please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member doc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:650,guid,guide,650,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['guid'],['guide']
Usability,"/** \class THttpServer; \ingroup http. Online http server for arbitrary ROOT application. Idea of THttpServer - provide remote http access to running; ROOT application and enable HTML/JavaScript user interface.; Any registered object can be requested and displayed in the browser.; There are many benefits of such approach:. 1. standard http interface to ROOT application; 2. no any temporary ROOT files when access data; 3. user interface running in all browsers. To start http server simply create instance; of the THttpServer class like:. serv = new THttpServer(""http:8080"");. This will starts civetweb-based http server with http port 8080.; Than one should be able to open address ""http://localhost:8080""; in any modern web browser (Firefox, Chrome, Opera, ...) and browse objects,; created in ROOT application. By default, server can access files,; canvases and histograms via `gROOT` pointer. All such objects; can be displayed with JSROOT graphics. At any time one could register other objects with the command:. TGraph* gr = new TGraph(10);; gr->SetName(""gr1"");; serv->Register(""graphs/subfolder"", gr);. If objects content is changing in the application, one could; enable monitoring flag in the browser - than objects view; will be regularly updated. More information: https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:486,simpl,simply,486,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,2,"['guid', 'simpl']","['guides', 'simply']"
Usability,"/** \class TLine; \ingroup BasicGraphics. Use the TLine constructor to create a simple line. ~~~ {.cpp}; TLine(Double_t x1,Double_t y1,Double_t x2,Double_t y2); ~~~. `x1`, `y1`, `x2`, `y2` are the coordinates of the first and the second point. _**Example**_:. ~~~ {.cpp}; root[] l = new TLine(0.2,0.2,0.8,0.3); root[] l->Draw(); ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Line normal constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx:80,simpl,simple,80,graf2d/graf/src/TLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx,1,['simpl'],['simple']
Usability,"/** \class TNet. Generic neural network class. This generic neural network class represents a concrete neural; network through a vector of layers and coordinates the forward; and backward propagation through the net. The net takes as input a batch from the training data given in; matrix form, with each row corresponding to a certain training; event. On construction, the neural network allocates all the memory; required for the training of the neural net and keeps it until; its destruction. The Architecture type argument simply holds the; architecture-specific data types, which are just the matrix type; Matrix_t and the used scalar type Scalar_t. \tparam Architecture The Architecture type that holds the; \tparam Layer_t The type used for the layers. Can be either; Layer<Architecture> or SharedWeightLayer<Architecture>.; datatypes for a given architecture.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h:526,simpl,simply,526,tmva/tmva/inc/TMVA/DNN/Net.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h,1,['simpl'],['simply']
Usability,"/** \class TNtuple; \ingroup tree. A simple TTree restricted to a list of float variables only. Each variable goes to a separate branch. A Ntuple is created via; ~~~ {.cpp}; TNtuple(name,title,varlist,bufsize); ~~~; It is filled via:; ~~~ {.cpp}; TNtuple::Fill(*x) or; TNtuple::Fill(v1,v2,v3.....); ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Ntuple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx:37,simpl,simple,37,tree/tree/src/TNtuple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx,1,['simpl'],['simple']
Usability,"/** \class TNtupleD; \ingroup tree. A simple TTree restricted to a list of double variables only. Each variable goes to a separate branch. A Ntuple is created via; ~~~ {.cpp}; TNtupleD(name,title,varlist,bufsize); ~~~; It is filled via:; ~~~ {.cpp}; TNtupleD::Fill(*x) or; TNtupleD::Fill(v1,v2,v3.....); ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Ntuple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtupleD.cxx:38,simpl,simple,38,tree/tree/src/TNtupleD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtupleD.cxx,1,['simpl'],['simple']
Usability,/** \class TObjectDisplayItem; \ingroup GpadROOT7; \brief Display item for TObject with drawing options; \author Sergey Linev <s.linev@gsi.de>; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/TObjectDisplayItem.hxx:270,Feedback,Feedback,270,graf2d/gpadv7/inc/ROOT/TObjectDisplayItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/TObjectDisplayItem.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class TObjectDrawable; \ingroup GpadROOT7; \brief Provides v7 drawing facilities for TObject types (TGraph, TH1, TH2, etc).; \author Sergey Linev; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/TObjectDrawable.hxx:278,Feedback,Feedback,278,graf2d/gpadv7/inc/ROOT/TObjectDrawable.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/TObjectDrawable.hxx,1,['Feedback'],['Feedback']
Usability,/** \class TObjectElement; \ingroup rbrowser; \brief Access to TObject basic properties for RBrowsable; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-01-11; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/TObjectElement.hxx:269,Feedback,Feedback,269,gui/browsable/inc/ROOT/Browsable/TObjectElement.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/TObjectElement.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class TObjectHolder; \ingroup rbrowser; \brief Holder of TObject instance. Should not be used very often, while ownership is undefined for it; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-19; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/TObjectHolder.hxx:313,Feedback,Feedback,313,gui/browsable/inc/ROOT/Browsable/TObjectHolder.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/TObjectHolder.hxx,1,['Feedback'],['Feedback']
Usability,/** \class TObjectItem; \ingroup rbrowser; \brief Representation of single item in the file browser for generic TObject object; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-10-19; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/TObjectItem.hxx:293,Feedback,Feedback,293,gui/browsable/inc/ROOT/Browsable/TObjectItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/TObjectItem.hxx,1,['Feedback'],['Feedback']
Usability,"/** \class TPMERegexp. Wrapper for PCRE library (Perl Compatible Regular Expressions).; Based on PME - PCRE Made Easy by Zachary Hansen. Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. See $ROOTSYS/tutorials/regexp_pme.C for examples.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:257,simpl,simply,257,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['simpl'],['simply']
Usability,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:277,simpl,simply,277,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,1,['simpl'],['simply']
Usability,"/** \class TPointSet3D; \ingroup g3d. TPolyMarker3D using TPointSet3DGL for direct OpenGL rendering.; Supports only elementary marker types:; - 4, 20, 24 : round points, size in pixels;; - 2, 3, 5 : crosses, size in scene units;; - 28 : as above, line width 2 pixels;; - all other : square points, size in pixels. Marker-size (from TAttMarker) is multiplied by 5!. An identification of type TObject* can be assigned to each point; via SetPointId() method. Set the fOwnIds flag if the ids are owned; by the point-set and should be deleted when pointset is cleared or; destructed. Copy-constructor and assignment operator COPIES the ids if the are; not owned and CLONES them if they are owned. The ids are not streamed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPointSet3D.cxx:555,clear,cleared,555,graf3d/g3d/src/TPointSet3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPointSet3D.cxx,1,['clear'],['cleared']
Usability,"/** \class TPolyLine3D; \ingroup g3d; A 3-dimensional polyline. It has 4 different constructors. First one, without any parameters TPolyLine3D(), we call 'default; constructor' and it's used in a case that just an initialisation is; needed (i.e. pointer declaration). Example:. ~~~ {.cpp}; TPolyLine3D *pl1 = new TPolyLine3D;; ~~~. Second one is 'normal constructor' with, usually, one parameter; n (number of points), and it just allocates a space for the points. Example:. ~~~ {.cpp}; TPolyLine3D pl1(150);; ~~~. Third one allocates a space for the points, and also makes; initialisation from the given array. Example:. ~~~ {.cpp}; TPolyLine3D pl1(150, pointerToAnArray);; ~~~. Fourth one is, almost, similar to the constructor above, except; initialisation is provided with three independent arrays (array of; x coordinates, y coordinates and z coordinates). Example:. ~~~ {.cpp}; TPolyLine3D pl1(150, xArray, yArray, zArray);; ~~~. Example:. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TView *view = TView::CreateView(1);; view->SetRange(0,0,0,2,2,2);; const Int_t n = 500;; auto r = new TRandom();; Double_t x, y, z;; TPolyLine3D *l = new TPolyLine3D(n);; for (Int_t i=0;i<n;i++) {; r->Sphere(x, y, z, 1);; l->SetPoint(i,x+1,y+1,z+1);; }; l->Draw();; }; End_Macro. TPolyLine3D is a basic graphics primitive which ignores the fact the current pad; has logarithmic scale(s). It simply draws the 3D line in the current user coordinates.; If logarithmic scale is set along one of the three axis, the logarithm of; vector coordinates along this axis should be use. Alternatively and higher level; class, knowing about logarithmic scales, might be used. For instance TGraph2D with; option `L`.; */; ////////////////////////////////////////////////////////////////////////////////; /// 3-D polyline default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPolyLine3D.cxx:1408,simpl,simply,1408,graf3d/g3d/src/TPolyLine3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPolyLine3D.cxx,1,['simpl'],['simply']
Usability,"/** \class TProfile3D; \ingroup Histograms; Profile3D histograms are used to display the mean; value of T and its RMS for each cell in X,Y,Z.; Profile3D histograms are in many cases an; The inter-relation of three measured quantities X, Y, Z and T can always; be visualized by a four-dimensional histogram or scatter-plot;; its representation on the line-printer is not particularly; satisfactory, except for sparse data. If T is an unknown (but single-valued); approximate function of X,Y,Z this function is displayed by a profile3D histogram with; much better precision than by a scatter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell I, J. 2; H(I,J,K) = sum T E(I,J,K) = sum T; l(I,J,K) = sum l L(I,J,K) = sum l; h(I,J,K) = H(I,J,K)/L(I,J,K) s(I,J,K) = sqrt(E(I,J,K)/L(I,J,K)- h(I,J,K)**2); e(I,J,K) = s(I,J,K)/sqrt(L(I,J,K)). In the special case where s(I,J,K) is zero (eg, case of 1 entry only in one cell); e(I,J,K) is computed from the average of the s(I,J,K) for all cells,; if the static function TProfile3D::Approximate has been called.; This simple/crude approximation was suggested in order to keep the cell; during a fit operation. But note that this approximation is not the default behaviour. Example of a profile3D histogram; ~~~~{.cpp}; {; auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);; Double_t px, py, pz, pt;; TRandom3 r(0);; for ( Int_t i=0; i<25000; i++) {; r.Rannor(px,py);; pz = px*px + py*py;; pt = r.Landau(0,1);; hprof3d->Fill(px,py,pz,pt,1);; }; hprof3d->Draw();; }; ~~~~; NOTE: A TProfile3D is drawn as it was a simple TH3; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Profile3D histograms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:1185,simpl,simple,1185,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,2,['simpl'],['simple']
Usability,"/** \class TQUndoManager; Recorder of operations for undo and redo; */; ////////////////////////////////////////////////////////////////////////////////; /// Constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx:53,undo,undo,53,core/base/src/TQCommand.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx,1,['undo'],['undo']
Usability,"/** \class TRatioPlot; \ingroup gpad; Class for displaying ratios, differences and fit residuals. TRatioPlot has two constructors, one which accepts two histograms, and is responsible; for setting up the calculation of ratios and differences. This calculation is in part; delegated to `TEfficiency`. A single option can be given as a parameter, that is; used to determine which procedure is chosen. The remaining option string is then; passed through to the calculation, if applicable. The other constructor uses a; fitted histogram to calculate the fit residual and plot it with the histogram; and the fit function. ## Ratios and differences; The simplest case is passing two histograms without specifying any options. This defaults to using; `TGraphAsymmErrors::Divide`. The `option` variable is passed through, as are the parameters; `c1` and `c2`, that you can set via `TRatioPlot::SetC1` and `TRatioPlot::SetC1`. If you set the; `option` to `divsym` the method `TH1::Divide` will be used instead, also receiving all the parameters. Using the `option` `diff` or `diffsig`, both histograms will be subtracted, and in the case of diffsig,; the difference will be divided by the uncertainty. `c1` and `c2` will only be used to; scale the histograms using `TH1::Scale` prior to subtraction. Available options are for `option`:; | Option | Description |; | ---------- | ------------------------------------------------------------ |; | divsym | uses the histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:648,simpl,simplest,648,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['simpl'],['simplest']
Usability,/** \class TRecorderPaused; \ingroup guirecorder. Represents state of TRecorder when replaying was paused; by a user.; The paused replaying is remembered and after Resume call can; be continued again. Not intended to be used by a user directly. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:99,pause,paused,99,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,3,"['Resume', 'pause']","['Resume', 'paused']"
Usability,"/** \class TSVG; \ingroup PS. \brief Interface to SVG. [SVG](http://www.w3.org/Graphics/SVG/Overview.htm8); (Scalable Vector Graphics) is a language for describing; two-dimensional graphics in XML. SVG allows high quality vector graphics in; HTML pages. To print a ROOT canvas ""c1"" into an SVG file simply do:; ~~~ {.cpp}; c1->Print(""c1.svg"");; ~~~; The result is the ASCII file `c1.svg`. It can be open directly using a web browser or included in a html document; the following way:; ~~~ {.cpp}; <embed width=""95%"" height=""500"" src=""c1.svg"">; ~~~; It is best viewed with Internet Explorer and you need the; [Adobe SVG Viewer](http://www.adobe.com/svg/viewer/install/main.html). To zoom using the Adobe SVG Viewer, position the mouse over; the area you want to zoom and click the right button. To define the zoom area,; use Control+drag to mark the boundaries of the zoom area. To pan, use Alt+drag.; By clicking with the right mouse button on the SVG graphics you will get; a pop-up menu giving other ways to interact with the image. SVG files can be used directly in compressed mode to minimize the time; transfer over the network. Compressed SVG files should be created using; `gzip` on a normal ASCII SVG file and should then be renamed; using the file extension `.svgz`.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default SVG constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:299,simpl,simply,299,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['simpl'],['simply']
Usability,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:245,simpl,simple,245,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['simpl'],['simple']
Usability,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:576,simpl,simply,576,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['simpl'],['simply']
Usability,"/** \class TStyle; \ingroup Base; \ingroup GraphicsAtt. TStyle objects may be created to define special styles.; By default ROOT creates a default style that can be accessed via; the gStyle pointer. This class includes functions to set some of the following object attributes.; - Canvas; - Pad; - Histogram axis; - Lines; - Fill areas; - Text; - Markers; - Functions; - Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes; like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their; default attributes are taken from the current style. The current style is an object; of the class[TStyle](https://root.cern/doc/master/classTStyle.html) and can be; referenced via the global variable `gStyle` (in TStyle.h). ROOT provides two styles called ""Default"" and ""Plain"". The ""Default""; style is created simply by:. ~~~ {.cpp}; auto default = new TStyle(""Default"",""Default Style"");; ~~~. The `Plain` style can be used if you are working on a monochrome display or; if you want to get a ""conventional"" Postscript output. These are the instructions; in the ROOT constructor to create the `Plain` style. ```; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");. plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; ```. You can set the current style with:. ```; gROOT->SetStyle(style_name);; ```. You can get a pointer to an existing style with:. ```; auto style = gROOT->GetStyle(style_name);; ```. You can create additional styles with:. ```; TStyle *st1 = new TStyle(""st1"",""my style"");; st1->Set....; st1->cd(); this becomes now the current style gStyle; ```. In your [rootlogon.C](https://root.cern/doc/master/classexamples/startsession.log.html); file, you can redefine the default parameters via statements like:. ```; gStyle->SetStatX(0.7);; gStyle->SetStatW(0.2);; gStyle->SetLabelOffset(1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:881,simpl,simply,881,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,1,['simpl'],['simply']
Usability,"/** \class TTeXDump; \ingroup PS. \brief Interface to TeX. This class allow to generate <b>PGF/TikZ</b> vector graphics output; which can be included in TeX and LaTeX documents. PGF is a TeX macro package for generating graphics. It is platform; and format-independent and works together with the most important TeX; backend drivers, including pdftex and dvips. It comes with a; user-friendly syntax layer called TikZ. To generate a such file it is enough to do:; ~~~ {.cpp}; gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");; ~~~. Then, the generated file (`hpx.tex`) can be included in a; LaTeX document (`simple.tex`) in the following way:; ~~~ {.cpp}; \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; ~~~. Note the three directives needed at the top of the LaTeX file:; ~~~ {.cpp}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; ~~~. Then including the picture in the document is done with the; `\input` directive. The command `pdflatex simple.tex` will generate the; corresponding pdf file `simple.pdf`.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default TeX constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx:379,user-friendly,user-friendly,379,graf2d/postscript/src/TTeXDump.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx,5,"['simpl', 'user-friendly']","['simple', 'user-friendly']"
Usability,"/** \class TView3D; \ingroup g3d; The 3D view class. This package was originally written by Evgueni Tcherniaev from IHEP/Protvino. The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and; Evgueni Tcherniaev. This View class is a subset of the original system. It has been converted to a; C++ class by Rene Brun. TView3D creates a 3-D view in the current pad. In this 3D view Lego and Surface; plots can be drawn and also 3D polyline and markers. Most of the time a TView3D; is created automatically when a 3D object needs to be painted in a pad (for; instance a Lego or a Surface plot). In some case a TView3D should be explicitly. For instance to paint a 3D simple; scene composed of simple objects like polylines and polymarkers.; The following macro gives an example:. Begin_Macro(source); {; auto cV3D = new TCanvas(""cV3D"",""PolyLine3D & PolyMarker3D Window"",200,10,500,500);. // Creating a view; TView3D *view = (TView3D*) TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);. // Create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(6);; pl3d1->SetPoint(0, 10, 20, 10);; pl3d1->SetPoint(1, 15, 15, 15);; pl3d1->SetPoint(2, 20, 20, 20);; pl3d1->SetPoint(3, 20, 10, 20);; pl3d1->SetPoint(4, 10, 10, 20);; pl3d1->SetPoint(5, 10, 10, 10);. // Create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(9);; pm3d1->SetPoint( 0, 10, 10, 10);; pm3d1->SetPoint( 1, 20, 20, 20);; pm3d1->SetPoint( 2, 10, 20, 20);; pm3d1->SetPoint( 3, 10, 10, 20);; pm3d1->SetPoint( 4, 20, 20, 10);; pm3d1->SetPoint( 5, 20, 10, 10);; pm3d1->SetPoint( 6, 20, 10, 20);; pm3d1->SetPoint( 7, 10, 20, 10);; pm3d1->SetPoint( 8, 15, 15, 15);; pm3d1->SetMarkerSize(2);; pm3d1->SetMarkerColor(4);; pm3d1->SetMarkerStyle(2);. // Draw; pl3d1->Draw();; pm3d1->Draw();; }; End_Macro. Several coordinate systems are available:. - Cartesian; - Polar; - Cylindrical; - Spherical; - PseudoRapidity/Phi; */; ////////////////////////////////////////////////////////////////////////////////; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:684,simpl,simple,684,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,2,['simpl'],['simple']
Usability,"/** \class TVirtualBranchBrowsable; \ingroup tree. TVirtualBranchBrowsable is a base class (not really abstract, but useless; by itself) for helper objects that extend TBranch's browsing support.; Each registered derived class's generator method is called, which fills; all created helper objects into a list which can then be browsed.; For details of what these browser helper objects can do, see e.g.; TMethodBrowsable, which allows methods to show up in the TBrowser. Only registered helper objects are created. By default, only; TMethodBrowsable, TNonSplitBrowsable, and TCollectionPropertyBrowsable; are registered (see RegisterDefaultGenerators). You can prevent any of; their objects to show up in the browser by unregistering the generator:; ~~~ {.cpp}; TMethodBrowsable::Unregister(); ~~~; will stop creating browsable method helper objects from that call on.; Note that these helper objects are cached (in TBranch::fBrowsables);; already created (and thus cached) browsables will still appear in the; browser even after unregistering the corresponding generator. You can implement your own browsable objects and their generator; see; e.g. the simple TCollectionPropertyBrowsable. Note that you will have; to register your generator just like any other, and that you should; implement the following methods for your own class, mainly for; consistency reasons:; ~~~ {.cpp}; static void Register() {; TVirtualBranchBrowsable::RegisterGenerator(GetBrowsables); }; static void Unregister() {; TVirtualBranchBrowsable::UnregisterGenerator(GetBrowsables); }; ~~~; where GetBrowsables is a static member function of your class, that; creates the browsable helper objects, and has the signature; ~~~ {.cpp}; static Int_t GetBrowsables(TList& list, const TBranch* branch,; const TVirtualBranchBrowsable* parent=0);; ~~~. It has to return the number of browsable helper objects for parent; (or, if NULL, for branch) which are added to the list.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx:1153,simpl,simple,1153,tree/tree/src/TBranchBrowsable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx,1,['simpl'],['simple']
Usability,"/** \class UrlRequestJobHolder; \ingroup qt5webdisplay. Class UrlRequestJobHolder; Required to monitor state of QWebEngineUrlRequestJob; Qt can delete object at any time, therefore one connects destroy signal; from the request to clear pointer. */; /////////////////////////////////////////////////////////////////; /// Constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/qt5webdisplay/rooturlschemehandler.cpp:230,clear,clear,230,gui/qt5webdisplay/rooturlschemehandler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/qt5webdisplay/rooturlschemehandler.cpp,1,['clear'],['clear']
Usability,/** \class VGeneralLayer; Generic General Layer class. This class represents the general class for all layers in the Deep Learning; Module.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:122,Learn,Learning,122,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['Learn'],['Learning']
Usability,/** \class VOptimizer; Generic Optimizer class. This class represents the general class for all optimizers in the Deep Learning; Module.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h:119,Learn,Learning,119,tmva/tmva/inc/TMVA/DNN/Optimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h,1,['Learn'],['Learning']
Usability,"/** \class ZeroMQPoller; * \brief Wrapper class for polling ZeroMQ sockets; *; * This class simplifies calls to poll or ppoll ZeroMQ sockets. It stores the; * list of sockets to be polled, which means they don't have to be separately; * carried around by the user. It also parses output and returns an easily; * digestible vector of events.; */; /**; * \brief Poll the sockets; *; * \param[in] timeo Timeout in milliseconds. 0 means return immediately. -1 means wait for an event indefinitely.; * \return A vector of pairs of index and flags; index is the index of the registered fd or socket and flags are 0 (no; * events), ZMQ_POLLIN or ZMQ_POLLOUT.; *; * \note This function can throw (from inside zmq::poll), so wrap in try-catch!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp:92,simpl,simplifies,92,roofit/roofitZMQ/src/ZeroMQPoller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp,1,['simpl'],['simplifies']
Usability,"/** class RCanvasDisplayItem; \ingroup GpadROOT7; \brief Display item for the RCanvas class, add canvas title and size; \author Sergey Linev; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx:268,Feedback,Feedback,268,graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx,1,['Feedback'],['Feedback']
Usability,"/** class RPadBaseDisplayItem; \ingroup GpadROOT7; \brief Display item for the RPadBase class, includes primitives, attributes and frame; \author Sergey Linev; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx:286,Feedback,Feedback,286,graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx,1,['Feedback'],['Feedback']
Usability,"/** class RPadDisplayItem; \ingroup GpadROOT7; \brief Display item for the RPad class, add pad position and size; \author Sergey Linev; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx:262,Feedback,Feedback,262,graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPadDisplayItem.hxx,1,['Feedback'],['Feedback']
Usability,"/*** \class TDLGradientDescent; *; * Generic implementation of gradient descent minimization for the; * deep learning neural nets.; *; * The TDLGradientDescent class implements an architecture, input data and; * deep learning neural network type independent implementation of the gradient; * descent minimization algorithm.; *; * This is provided by the Step(...), StepMomentum(...) and; * StepNesterov(...) functions that perform a single minimization step.; *; * The main training characteristics are defined by the provided learning rate,; * the test interval, and the convergence steps required for convergence. The; * test interval defines how often the error on the validation set is computed,; * and the values with which the step counter is increased each time the; * HasConverged() member function is called. A convergence step is defined as; * a step in which the test error is NOT less than 0.999 times the current; * minimal test error that has been reached. If between two subsequent calls; * to HasConverged(Double_t) the test error has not been sufficiently reduced; * it is assumed that a number of convergence steps equal to the test interval; * has been performed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:109,learn,learning,109,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,3,['learn'],['learning']
Usability,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; * This the simplest and fastest format for further post-processing.; *; * However, this leaves open the question of what is the order on the byte level,; * since little and big endian conventions will store the same number differently.; *; * The canonical representation settles this issue by mandating big-endian; * convention, the same convention as human-readable numbers (large digits first).; *; * When writing hash values to storage, sending them over a network, or printing; * them, it's highly recommended to use the canonical representation to ensure; * portability across a wider range of systems, present and future.; *; * The following functions allow transformation of hash values to and from; * canonical format.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:147,simpl,simplest,147,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['simpl'],['simplest']
Usability,/******************* Simple C -> C++ forwards *********************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:21,Simpl,Simple,21,core/textinput/src/Getline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx,1,['Simpl'],['Simple']
Usability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TrainingHistory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Author: *; * Joseph McKenna <Joseph.McKenna@cern.ch> - Aarhus, Denmark *; * *; * Copyright (c) 2019: *; * Aarhus, Denmark *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TrainingHistory; \ingroup TMVA. Tracking data from training. Eg, From deep learning record loss for each Epoch. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TrainingHistory.cxx:776,learn,learning,776,tmva/tmva/src/TrainingHistory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TrainingHistory.cxx,1,['learn'],['learning']
Usability,"/*******************************************************************************; Introduction. zstd, short for Zstandard, is a fast lossless compression algorithm, targeting; real-time compression scenarios at zlib-level and better compression ratios.; The zstd compression library provides in-memory compression and decompression; functions. The library supports regular compression levels from 1 up to ZSTD_maxCLevel(),; which is currently 22. Levels >= 20, labeled `--ultra`, should be used with; caution, as they require more memory. The library also offers negative; compression levels, which extend the range of speed vs. ratio preferences.; The lower the level, the faster the speed (at the cost of compression). Compression can be done in:; - a single step (described as Simple API); - a single step, reusing a context (described as Explicit context); - unbounded multiple steps (described as Streaming compression). The compression ratio achievable on small data can be highly improved using; a dictionary. Dictionary compression can be performed in:; - a single step (described as Simple dictionary API); - a single step, reusing a dictionary (described as Bulk-processing; dictionary API). Advanced experimental functions can be accessed using; `#define ZSTD_STATIC_LINKING_ONLY` before including zstd.h. Advanced experimental APIs should never be used with a dynamically-linked; library. They are not ""stable""; their definitions or signatures may change in; the future. Only static linking is allowed.; *******************************************************************************/; /*------ Version ------*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:780,Simpl,Simple,780,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['Simpl'],['Simple']
Usability,/******************************************************************************/; // VSD Structures; /******************************************************************************/; // Basic structures for Reve VSD concept. Design criteria:; //; // * provide basic cross-referencing functionality;; //; // * small memory/disk footprint (floats / count on compression in; // split mode);; //; // * simple usage from tree selections;; //; // * placement in TClonesArray (composites are TObject derived);; //; // * minimal member-naming (impossible to make everybody happy).; //; /******************************************************************************/; // TEveMCTrack; /******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVSDStructs.h:398,simpl,simple,398,graf3d/eve/inc/TEveVSDStructs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVSDStructs.h,1,['simpl'],['simple']
Usability,/******************************************************************************; * Initialize HashTable - allocate the memory needed and clear it.	 *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:137,clear,clear,137,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,1,['clear'],['clear']
Usability,/******************************************************************************; * Routine to clear the HashTable to an empty state.			 *; * This part is a little machine depended. Use the commented part otherwise. *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:94,clear,clear,94,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,1,['clear'],['clear']
Usability,"/******************************************************************************; * Update a new gif file, given its file handle, which must be opened for *; * write in binary mode.							 *; * Returns GifFileType pointer dynamically allocated which serves as the gif *; * info record. _GifError is cleared if successful.			 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:298,clear,cleared,298,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['clear'],['cleared']
Usability,"/*****************************************************************************; * ""Gif-Lib"" - Yet another gif library.				 *; *									 *; * Written by: Gershon Elber			IBM PC Ver 0.1,	Jun. 1989 *; ******************************************************************************; * Module to support the following operations:				 *; *									 *; * 1. InitHashTable - initialize hash table.				 *; * 2. ClearHashTable - clear the hash table to an empty state.		 *; * 2. InsertHashTable - insert one item into data structure.		 *; * 3. ExistsHashTable - test if item exists in data structure.		 *; *									 *; * This module is used to hash the GIF codes during encoding.		 *; ******************************************************************************; * History:								 *; * 14 Jun 89 - Version 1.0 by Gershon Elber.				 *; *****************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:402,Clear,ClearHashTable,402,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,2,"['Clear', 'clear']","['ClearHashTable', 'clear']"
Usability,"/*****************************************************************************; * Project: RooFit *; * *; * Simple Gamma distribution; * authors: Stefan A. Schmitz, Gregory Schott; * *; *****************************************************************************/; /** \class RooGamma; \ingroup Roofit. Implementation of the Gamma PDF for RooFit/RooStats.; \f[; f(x) = \frac{(x-\mu)^{\gamma-1} \cdot \exp^{(-(x-mu) / \beta}}{\Gamma(\gamma) \cdot \beta^{\gamma}}; \f]; defined for \f$ x \geq 0 \f$ if \f$ \mu = 0 \f$. Notes from Kyle Cranmer:. Wikipedia and several sources refer to the Gamma distribution as. \f[; G(\mu,\alpha,\beta) = \beta^\alpha \mu^{(\alpha-1)} \frac{e^{(-\beta \mu)}}{\Gamma(\alpha)}; \f]. Below is the correspondence:. | Wikipedia | This Implementation |; |-----------------|--------------------------|; | \f$ \alpha \f$ | \f$ \gamma \f$ |; | \f$ \beta \f$ | \f$ \frac{1}{\beta} \f$ |; | \f$ \mu \f$ | x |; | 0 | \f$ \mu \f$ |. Note, that for a model Pois(N|mu), a uniform prior on mu, and a measurement N; the posterior is in the Wikipedia parameterization Gamma(mu, alpha=N+1, beta=1); thus for this implementation it is:. `RooGamma(_x=mu,_gamma=N+1,_beta=1,_mu=0)`. Also note, that in this case it is equivalent to; RooPoison(N,mu) and treating the function as a PDF in mu.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:108,Simpl,Simple,108,roofit/roofit/src/RooGamma.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx,1,['Simpl'],['Simple']
Usability,/*****************************************************************************; * Project: RooFit *; * *; * Simple Poisson PDF; * author: Kyle Cranmer <cranmer@cern.ch>; * *; *****************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPoisson.h:108,Simpl,Simple,108,roofit/roofit/inc/RooPoisson.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPoisson.h,1,['Simpl'],['Simple']
Usability,/*****************************************************************************; * Project: RooFit *; * *; * Simple Poisson PDF; * author: Kyle Cranmer <cranmer@cern.ch>; * *; *****************************************************************************/; /** \class RooPoisson; \ingroup Roofit. Poisson pdf; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPoisson.cxx:108,Simpl,Simple,108,roofit/roofit/src/RooPoisson.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPoisson.cxx,1,['Simpl'],['Simple']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsFunc.cxx; \class RooAbsFunc; \ingroup Roofitcore. Abstract interface for evaluating a real-valued function of one real variable; and performing numerical algorithms on it. The purpose of this interface is; to decouple RooAbsArg-specific implementations from numerical algorithms that; only need a simple function evaluation interface. The domain of the function; is assumed to be an n-dimensional box with edge coordinates specified by the; the getMinLimit() and getMaxLimit() methods.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsFunc.cxx:1009,simpl,simple,1009,roofit/roofitcore/src/RooAbsFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsFunc.cxx,1,['simpl'],['simple']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMultiCategory.cxx; \class RooMultiCategory; \ingroup Roofitcore. Connects several RooAbsCategory objects into; a single category. The states of the multi-category consist of all the permutations; of the input categories.; RooMultiCategory states are automatically defined and updated whenever an input; category modifies its list of states. A RooMultiCategory is not an lvalue, *i.e.* one cannot set its states. Its state simply follows; as a computation from the states of the input categories. This is because the input categories; don't need to be lvalues, so their states cannot be set by the MultiCategory. If all input categories; are lvalues, the RooSuperCategory can be used. It works like RooMultiCategory, but allows for; setting the states.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx:1131,simpl,simply,1131,roofit/roofitcore/src/RooMultiCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx,1,['simpl'],['simply']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1525,usab,usable,1525,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['usab'],['usable']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:879,simpl,simple,879,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,1,['simpl'],['simple']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealConstant.cxx; \class RooRealConstant; \ingroup Roofitcore. Provides static functions to create and keep track; of RooRealVar constants. Instead of creating such constants by; hand (e.g. RooRealVar one(""one"",""one"",1)), simply use; ~~~{.cpp}; RooRealConstant::value(1.0); ~~~; whenever a reference to RooRealVar with constant value 1.0 is needed.; RooRealConstant keeps an internal database of previously created; RooRealVar objects and will recycle them as appropriate.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx:931,simpl,simply,931,roofit/roofitcore/src/RooRealConstant.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx,1,['simpl'],['simply']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealMPFE.cxx; \class RooRealMPFE; \ingroup Roofitcore. Multi-processor front-end for parallel calculation; of RooAbsReal objects. Each RooRealMPFE forks a process that calculates; the value of the proxies RooAbsReal object. The (re)calculation of; the proxied object is started asynchronously with the calculate() option.; A subsequent call to getVal() will return the calculated value when available; If the calculation is still in progress when getVal() is called it blocks; the calling process until the calculation is done. The forked calculation process; is terminated when the front-end object is deleted; Simple use demonstration. ~~~{.cpp}; RooAbsReal* slowFunc ;. double val = slowFunc->getVal() // Evaluate slowFunc in current process. RooRealMPFE mpfe(""mpfe"",""frontend to slowFunc"",*slowFunc) ;; mpfe.calculate() ; // Start calculation of slow-func in remote process; // .. do other stuff here ..; double val = mpfe.getVal() // Wait for remote calculation to finish and retrieve value; ~~~. For general multiprocessing in ROOT, please refer to the TProcessExecutor class. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:1321,Simpl,Simple,1321,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['Simpl'],['Simple']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooChi2Var; \ingroup Roofitcore; \brief Simple \f$ \chi^2 \f$ calculation from a binned dataset and a PDF.; *; * It calculates:; *; \f{align*}{; \chi^2 &= \sum_{\mathrm{bins}} \left( \frac{N_\mathrm{PDF,bin} - N_\mathrm{Data,bin}}{\Delta_\mathrm{bin}} \right)^2 \\; N_\mathrm{PDF,bin} &=; \begin{cases}; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,tot} &\text{normal PDF}\\; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,expected} &\text{extended PDF}; \end{cases} \\; \Delta_\mathrm{bin} &=; \begin{cases}; \sqrt{N_\mathrm{PDF,bin}} &\text{if } \mathtt{DataError == RooAbsData::Expected}\\; \mathtt{data{\rightarrow}weightError()} &\text{otherwise} \\; \end{cases}; \f}; * If the dataset doesn't have user-defined errors, errors are assumed to be \f$ \sqrt{N} \f$.; * In extended PDF mode, N_tot (total number of data events) is substituted with N_expected, the; * expected number of events that the PDF predicts.; *; * \note If the dataset has errors stored, empty bins will prevent the calculation of \f$ \chi^2 \f$, because those have; * zero error. This leads to messages like:; * ```; * [#0] ERROR:Eval -- RooChi2Var::RooChi2Var(chi2_GenPdf_data_hist)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx:826,Simpl,Simple,826,roofit/roofitcore/src/RooChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx,1,['Simpl'],['Simple']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooArgList; /// RooArgList is a container object that can hold multiple RooAbsArg objects.; /// The container has list semantics which means that:; ///; /// - Contained objects are ordered, The iterator; /// follows the object insertion order.; ///; /// - Objects can be retrieved by name and index; ///; /// - Multiple objects with the same name are allowed; ///; /// Ownership of contents.; ///; /// Unowned objects are inserted with the add() method. Owned objects; /// are added with addOwned() or addClone(). A RooArgSet either owns all; /// of it contents, or none, which is determined by the first `<add>`; /// call. Once an ownership status is selected, inappropriate `<add>` calls; /// will return error status. Clearing the list via removeAll() resets the; /// ownership status. Arguments supplied in the constructor are always added; /// as unowned elements.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgList.cxx:1507,Clear,Clearing,1507,roofit/roofitcore/src/RooArgList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgList.cxx,1,['Clear'],['Clearing']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooXYChi2Var; /// RooXYChi2Var implements a simple chi^2 calculation from an unbinned; /// dataset with values x,y with errors on y (and optionally on x) and a function.; /// The function can be either a RooAbsReal, or an extended RooAbsPdf where; /// the function value is calculated as the probability density times the; /// expected number of events.; /// The chi^2 is calculated as; /// ```; ///; /// / (Data[y]-) - func \+2; /// Sum[point] | ------------------ |; /// \ Data[ErrY] /; /// ```; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:830,simpl,simple,830,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['simpl'],['simple']
Usability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:522,usab,usable,522,roofit/roofit/src/RooFunctorBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx,2,['usab'],['usable']
Usability,"/**************************************************************************/; /* function : SimpleGlyph */; /* comment : Stores raw, xMin, yMin, xMax, and yMax values for this glyph.*/; /**************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:92,Simpl,SimpleGlyph,92,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Simpl'],['SimpleGlyph']
Usability,"/**************************************************************************/; // Guide methods; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Fetch the state of guides (axes & reference markers) into arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:81,Guid,Guide,81,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,2,"['Guid', 'guid']","['Guide', 'guides']"
Usability,"/*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /// \file; /// \ingroup rbrowser; /// \author Sergey Linev <S.Linev@gsi.de>; /// \date 2019-10-15; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RSysFile.cxx:569,Feedback,Feedback,569,gui/browsable/src/RSysFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RSysFile.cxx,1,['Feedback'],['Feedback']
Usability,"/********************************************************************; * Advanced streaming functions; * Warning : most of these functions are now redundant with the Advanced API.; * Once Advanced API reaches ""stable"" status,; * redundant functions will be deprecated, and then at some point removed.; ********************************************************************/; /*===== Advanced Streaming compression functions =====*/; /*! ZSTD_initCStream_srcSize() :; * This function is deprecated, and equivalent to:; * ZSTD_CCtx_reset(zcs, ZSTD_reset_session_only);; * ZSTD_CCtx_refCDict(zcs, NULL); // clear the dictionary (if any); * ZSTD_CCtx_setParameter(zcs, ZSTD_c_compressionLevel, compressionLevel);; * ZSTD_CCtx_setPledgedSrcSize(zcs, pledgedSrcSize);; *; * pledgedSrcSize must be correct. If it is not known at init time, use; * ZSTD_CONTENTSIZE_UNKNOWN. Note that, for compatibility with older programs,; * ""0"" also disables frame content size field. It may be enabled in the future.; * Note : this prototype will be marked as deprecated and generate compilation warnings on reaching v1.5.x; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:602,clear,clear,602,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['clear'],['clear']
Usability,"/**************************************************************; *	Curved Path - a curve path is simply a array of connected; * curves, but retains the api of a curve; **************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:97,simpl,simply,97,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simply']
Usability,"/***************************************; * Advanced compression API; ***************************************/; /* API design :; * Parameters are pushed one by one into an existing context,; * using ZSTD_CCtx_set*() functions.; * Pushed parameters are sticky : they are valid for next compressed frame, and any subsequent frame.; * ""sticky"" parameters are applicable to `ZSTD_compress2()` and `ZSTD_compressStream*()` !; * __They do not apply to ""simple"" one-shot variants such as ZSTD_compressCCtx()__ .; *; * It's possible to reset all parameters to ""default"" using ZSTD_CCtx_reset().; *; * This API supercedes all other ""advanced"" API entry points in the experimental section.; * In the future, we expect to remove from experimental API entry points which are redundant with this API.; */; /* Compression strategies, listed from fastest to strongest */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:447,simpl,simple,447,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['simpl'],['simple']
Usability,"/***************************************; * Simple API; ***************************************/; /*! ZSTD_compress() :; * Compresses `src` content as a single zstd compressed frame into already allocated `dst`.; * Hint : compression runs faster if `dstCapacity` >= `ZSTD_compressBound(srcSize)`.; * @return : compressed size written into `dst` (<= `dstCapacity),; * or an error code if it fails (which can be tested using ZSTD_isError()). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:44,Simpl,Simple,44,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['Simpl'],['Simple']
Usability,"/*********/; /****f* libAfterImage/asimage/asimage_print_line(); * NAME; * asimage_print_line(); * SYNOPSIS; * 	unsigned int asimage_print_line ( ASImage * im, ColorPart color,; *									 unsigned int y,; * 									 unsigned long verbosity);; * INPUTS; * im				- pointer to valid ASImage structure; * color			- color channel's number; * y 				- image row starting with 0; * verbosity		- verbosity level - any combination of flags is; * allowed; * RETURN VALUE; * amount of memory used by this particular channel of specified; * scanline.; * DESCRIPTION; * asimage_print_line() prints data stored in specified image scanline; * channel. That may include simple summary of how much memory is used,; * actual visible data, and/or RLE control codes. That helps to see; * how effectively data is encoded.; *; * Useful mostly for debugging purposes.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:655,simpl,simple,655,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['simpl'],['simple']
Usability,"/********/; /****d* libAfterImage/asimage/quality; * FUNCTION; * Defines level of output quality/speed ratio; * NAME; * ASIMAGE_QUALITY_POOR there will be no dithering and interpolation used ; * while transforming ; * NAME; * ASIMAGE_QUALITY_FAST there will be no dithering and used while ; * transforming but interpolation will be used.; * NAME; * ASIMAGE_QUALITY_GOOD simplified dithering is performed in addition to ; * interpolation.; * NAME; * ASIMAGE_QUALITY_TOP full dithering and interpolation.; * NAME; * ASIMAGE_QUALITY_DEFAULT requests current default setting - typically; * same as ASIMAGE_QUALITY_GOOD.; * NAME; * MAX_GRADIENT_DITHER_LINES defines number of lines to use for dithering,; * while rendering gradients, in order to create smooth effect. Higher ; * number will slow things down, but will create better gradients.; * SOURCE; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:370,simpl,simplified,370,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['simpl'],['simplified']
Usability,"/****f* libAfterImage/asimage/destroy_image_layers(); * NAME ; * destroy_image_layers() - destroy set of ASImageLayer structures.; * SYNOPSIS; * void destroy_image_layers(ASImageLayer *l,; * int count,; * Bool reusable );; * INPUTS; * l			- pointer to pointer to valid array of ASImageLayer; * structures.; * count - number of structures in array.; * reusable - if True - then array itself will not be deallocates -; * which is usable when it was allocated on stack.; * DESCRIPTION; * frees all the memory allocated for specified array of ASImageLayer s.; * If there was ASImage and/or ASImageBevel attached to it - it will be; * deallocated as well.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:428,usab,usable,428,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['usab'],['usable']
Usability,"/****f* libAfterImage/blend_scanlines_name2func(); * NAME; * blend_scanlines_name2func(); * NAME; * list_scanline_merging(); * SYNOPSIS; * merge_scanlines_func blend_scanlines_name2func( const char *name );; * void list_scanline_merging(FILE* stream, const char *format);; * INPUTS; * name - string, identifying scanline merging function.; * RETURN VALUE; * returns pointer to the scanline merging function on succes.; * NULL on failure.; * DESCRIPTION; * blend_scanlines_name2func() will strip leading whitespaces off of; * the supplied name, and then will attempt to match it against the list; * of names of merging functions. It will then return pointer to the; * function with matching name.; * list_scanline_merging() simply prints out description of implemented; * blending/merging methods onto the supplied stream, in supplied format.; * Format must include 2 string specs, like so : ""%s - %s"" where first; * one will be substituted to short method name, and second - description; ****************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/blender.h:723,simpl,simply,723,graf2d/asimage/src/libAfterImage/blender.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/blender.h,1,['simpl'],['simply']
Usability,"/****f* libAfterImage/prepare_scanline(); * NAME; * prepare_scanline(); * SYNOPSIS; * ASScanline *prepare_scanline ( unsigned int width,; * unsigned int shift,; * ASScanline *reusable_memory,; * Bool BGR_mode);; * INPUTS; * width - width of the scanline.; * shift - format of contained data. 0 means - 32bit unshifted; * 8 means - 24.8bit ( 8 bit left shifted ).; * reusable_memory - preallocated object.; * BGR_mode - if True will cause xc3 to point to Blue and xc1 to; * point to red.; * DESCRIPTION; * This function allocates memory ( if reusable_memory is NULL ) for; * the new ASScanline structure. Structures buffers gets allocated to; * hold scanline data of at least width pixel wide. Buffers are adjusted; * to start on 8 byte boundary.; *********/; /****f* libAfterImage/free_scanline(); * NAME; * free_scanline(); * SYNOPSIS; * void free_scanline ( ASScanline *sl, Bool reusable );; * INPUTS; * sl - pointer to previously allocated ASScanline structure to be; * deallocated.; * reusable - if true then ASScanline object itself will not be; * deallocated.; * DESCRIPTION; * free_scanline() frees all the buffer memory allocated for ASScanline.; * If reusable is false then object itself in not freed. That is usable; * for declaring ASScanline on stack.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/scanline.h:1219,usab,usable,1219,graf2d/asimage/src/libAfterImage/scanline.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/scanline.h,1,['usab'],['usable']
Usability,"/****f* libAfterImage/visual2visual_prop(); * NAME; * visual2visual_prop(); * SYNOPSIS; * Bool visual2visual_prop( ASVisual *asv, size_t *size,; * unsigned long *version, unsigned long **data );; * INPUTS; * asv 	- valid ASVisual structure.; * RETURN VALUE; * size - size of the encoded memory block.; * version - version of the encoding; * data - actual encoded memory block; * True on success, False on failure; * DESCRIPTION; * This function will encode ASVisual structure into memory block of; * 32 bit values, suitable for storing in X property.; *********/; /****f* libAfterImage/visual_prop2visual(); * NAME; * visual_prop2visual(); * SYNOPSIS; * Bool visual_prop2visual( ASVisual *asv, Display *dpy, int screen,; * size_t size,; * unsigned long version, unsigned long *data );; * INPUTS; * asv - valid ASVisual structure.; * dpy - valid pointer to open X display.; * screen - screen number.; * size - encoded memory block's size.; * version - version of encoding.; * data - actual encoded memory block.; * RETURN VALUE; * True on success, False on failure; * DESCRIPTION; * visual_prop2visual() will read ASVisual data from the memory block; * encoded by visual2visual_prop(). It could be used to read data from; * X property and convert it into usable information - such as colormap,; * visual info, etc.; * Note: setup_truecolor_visual() or setup_pseudo_visual() has to be; * invoked in order to complete ASVisual setup.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1254,usab,usable,1254,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['usab'],['usable']
Usability,"/****h* libAfterImage/ascmap.h; * NAME; * ascmap - Defines main structures and function for image quantization.; * DESCRIPTION; * Image quantization is needed primarily in order to be able to export; * images into file, with colormap format, such as GIF and XPM.; * libAfterImage attempts to allocate colorcells to the most used colors,; * and then approximate remaining colors with the closest colorcell.; *; * Since quality of quantization is in reverse proportion to the number; * of colors in original image, libAfterImage allows to set arbitrary; * level of downsampling of the color spectrum in the range of 8 bit per; * channel to 1 bit per channel. Downsampling is performed by simple; * dropping of less significant bits off of color values.; *; * In order to be able to determine closeness of colors, 3-channel RGB; * values are converted into flat 24bit (or less if downsampling is used); * index. That is done by intermixing bits from different channels, like; * so : R8G8B8R7G7B7...R1G1B1. That flat index is used to arrange colors; * in ascending order, and later on to be able to find closest mapped; * color. Simple hashing technique is used to speed up the; * sorting/searching, as it allows to limit linked lists traversals.; *; * SEE ALSO; * Structures :; * ASColormapEntry; * ASColormap; *; * Functions :; * colormap_asimage(), destroy_colormap(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *******/; /***********************************************************************************/; /* reduced colormap building code : */; /***********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ascmap.h:686,simpl,simple,686,graf2d/asimage/src/libAfterImage/ascmap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ascmap.h,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"/****h* libAfterImage/imencdec.h; * NAME; * imencdec defines main structures and function for image storing,; * extraction and conversion to/from usable formats.; * DESCRIPTION; * this header defines structures and functions to be used by outside ; * applications for reading and writing into ASImages. ASImage pixel ; * data maybe stored in sevral different formats, and should not be ; * accessed directly, but only through encoder/decoder facility.; *; * SEE ALSO; * Structures :; * ASImageBevel; * ASImageDecoder; * ASImageOutput; *; * Functions :; * Encoding :; * asimage_add_line(),	asimage_add_line_mono(),; * asimage_print_line(), get_asimage_chanmask(),; * move_asimage_channel(), copy_asimage_channel(),; * copy_asimage_lines(); *; * Decoding; * start_image_decoding(), stop_image_decoding(),; * asimage_decode_line (), set_decoder_shift(),; * set_decoder_back_color(); *; * Output :; * start_image_output(), set_image_output_back_color(),; * toggle_image_output_direction(), stop_image_output(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; ******/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:146,usab,usable,146,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['usab'],['usable']
Usability,"/**. A point of a parabola. <p>. ????!!!! in reality it is just a general point in two dimensional space,; there is nothing that would indicate, that it belongs to a parabola.; This class defines simply an (x,y) pair!!!!. @author Fred James and Matthias Winkler; comments added by Andras Zsenei; and Lorenzo Moneta. @ingroup Minuit. \todo Should it be called MnParabolaPoint or just Point?. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnParabolaPoint.h:196,simpl,simply,196,math/minuit2/inc/Minuit2/MnParabolaPoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnParabolaPoint.h,1,['simpl'],['simply']
Usability,/**. Complement of the distribution function of the Landau; distribution (upper tail). \f[ D(x) = \int_{x}^{+\infty} p(x) dx \f]. where p(x) is the Landau probability density function.; It is implemented simply as 1. - #landau_cdf. @param x The argument \f$x\f$; @param xi The width parameter \f$\xi\f$; @param x0 The location parameter \f$x_0\f$. @ingroup ProbFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ProbFuncMathCore.h:204,simpl,simply,204,math/mathcore/inc/Math/ProbFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ProbFuncMathCore.h,1,['simpl'],['simply']
Usability,/**. NumEventsTestStat is a simple implementation of the TestStatistic interface used for simple number counting.; It should probably support simple cuts as well. \ingroup Roostats; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NumEventsTestStat.h:28,simpl,simple,28,roofit/roostats/inc/RooStats/NumEventsTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NumEventsTestStat.h,3,['simpl'],['simple']
Usability,"/**. The vector containing the parameters of the function; It is mutable for ""historical reasons"" as in the hierarchy; methods and classes are const and all the implications of changing; them back to non-const are not clear. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ParametricFunction.h:218,clear,clear,218,math/minuit2/inc/Minuit2/ParametricFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ParametricFunction.h,1,['clear'],['clear']
Usability,"/**. This is a class to get ROOT's objects from R's objects; <center><h2>TRObject class</h2></center>. <p>; The TRObject class lets you obtain ROOT's objects from R's objects.<br>; It has some basic template operators to convert R's objects into ROOT's datatypes<br>; </p>; A simple example<br>; <p>. </p>. \code{.cpp}; #include<TRInterface.h>; void Proxy(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; ROOT::R::TRObject obj;; obj=r.Eval(""seq(1,10)"");; TVectorD v=obj;; v.Print();; }; \endcode; Output; \code. Vector (10) is as follows. | 1 |; ------------------; 0 |1; 1 |2; 2 |3; 3 |4; 4 |5; 5 |6; 6 |7; 7 |8; 8 |9; 9 |10. \endcode. <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:276,simpl,simple,276,bindings/r/inc/TRObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,"/**; 	 * Changes this controller into a dropdown of options.; 	 *; 	 * Calling this method on an option controller will simply update the options. However, if this; 	 * controller was not already an option controller, old references to this controller are; 	 * destroyed, and a new controller is added to the end of the GUI.; 	 * @example; 	 * // safe usage; 	 *; 	 * gui.add( obj, 'prop1' ).options( [ 'a', 'b', 'c' ] );; 	 * gui.add( obj, 'prop2' ).options( { Big: 10, Small: 1 } );; 	 * gui.add( obj, 'prop3' );; 	 *; 	 * // danger; 	 *; 	 * const ctrl1 = gui.add( obj, 'prop1' );; 	 * gui.add( obj, 'prop2' );; 	 *; 	 * // calling options out of order adds a new controller to the end...; 	 * const ctrl2 = ctrl1.options( [ 'a', 'b', 'c' ] );; 	 *; 	 * // ...and ctrl1 now references a controller that doesn't exist; 	 * assert( ctrl2 !== ctrl1 ); 	 * @param {object|Array} options; 	 * @returns {Controller}; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:120,simpl,simply,120,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simply']
Usability,"/**; * (PDF 1.2) If set, print the annotation when the page is printed. If clear, never print the annotation, regardless of wether is is displayed on the screen.; * NOTE 2 This can be useful for annotations representing interactive pushbuttons, which would serve no meaningful purpose on the printed page.; *; * @name AcroFormField#showWhenPrinted; * @default true; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:75,clear,clear,75,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * (PDF 1.4) If set, more than one of the field’s option items may be selected simultaneously; if clear, at most one item shall be selected; *; * @name AcroFormChoiceField#multiSelect; * @default false; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:102,clear,clear,102,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * (PDF 1.5) If set, a group of radio buttons within a radio button field that use the same value for the on state will turn on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).; *; * @name AcroFormButton#radioIsUnison; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:203,clear,clear,203,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * (PDF 1.5) If set, the new value shall be committed as soon as a selection is made (commonly with the pointing device). In this case, supplying a value for a field involves three actions: selecting the field for fill-in, selecting a choice for the fill-in value, and leaving that field, which finalizes or “commits” the data choice and triggers any actions associated with the entry or changing of this data. If this flag is on, then processing does not wait for leaving the field action to occur, but immediately proceeds to the third step.; * This option enables applications to perform an action once a selection is made, without requiring the user to exit the field. If clear, the new value is not committed until the user exits the field.; *; * @name AcroFormChoiceField#commitOnSelChange; * @default false; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:680,clear,clear,680,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * (PDF 1.5) May be set only if the MaxLen entry is present in the text field dictionary (see Table 229) and if the Multiline, Password, and FileSelect flags are clear. If set, the field shall be automatically divided into as many equally spaced positions, or combs, as the value of MaxLen, and the text is laid out into those combs.; *; * @name AcroFormTextField#comb; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:166,clear,clear,166,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * (Radio buttons only) If set, exactly one radio button shall be selected at all times; selecting the currently selected button has no effect. If clear, clicking the selected button deselects it, leaving no button selected.; *; * @name AcroFormButton#noToggleToOff; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:151,clear,clear,151,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:350,simpl,simply,350,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,2,['simpl'],['simply']
Usability,/**; * @brief Pointer to this Option's Descriptor.; *; * Remember that the first dummy descriptor (see @ref Descriptor::longopt) is used; * for unknown options.; *; * @attention; * @c desc==NULL signals that this Option is unused. This is the default state of; * elements in the result array. You don't need to test @c desc explicitly. You; * can simply write something like this:; * @code; * if (options[CREATE]); * {; * ...; * }; * @endcode; * This works because of <code> operator const Option*() </code>.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:347,simpl,simply,347,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['simpl'],['simply']
Usability,"/**; * @file DictSelectionReader.h; * @author Danilo Piparo; * @date January 2014; * @brief Select classes and assign properties using C++ syntax.; *; * @details When generating dictionary information for a class,; * one sometimes wants to specify additional information; * beyond the class definition itself, for example, to specify; * that certain members are to be treated as transient by the persistency; * system. This can be done by associating a dictionary selection class; * with the class for which dictionary information is being generated.; * The contents of this selection class encode the additional information.; * Below, we first discuss how to associate a selection class; * with your class; then we list the current Set of information; * which may appear inside the selection class.; *; * The simplest case is for the case of a non-template class @c C.; * By default, the Name of the selection class is then; * @c ROOT::Meta::Selection::C. If you have such a class, it will be found; * automatically. If @c C is in a namespace, @c NS::C, then; * the selection class should be in the same namespace:; * @c ROOT::Meta::Selection::NS::C.; *; * Examples:; *; * The DictSelectionReader is used to create selection rules starting from; * C++ the constructs of the @c ROOT::Meta::Selection namespace. All rules; * are matching by name.; * A brief description of the operations that lead to class selection:; * 1. If a class declaration is present in the selection namespace, a class; * with the same name is selected outside the selection namespace.; * 2. If a template class declaration and a template instantiation is present; * in the selection namespace, all the instances of the template are; * selected outside the namespace.; *; * For example:; * @code; * [...]; * class classVanilla{};; * template <class A> class classTemplateVanilla {};; * classTemplateVanilla<char> t0;; * namespace ROOT {; * namespace Meta {; * namespace Selection {; * class classVanilla {};; * template <typena",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h:810,simpl,simplest,810,core/dictgen/res/DictSelectionReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h,1,['simpl'],['simplest']
Usability,"/**; * @internal; * @brief Takes input and line wraps it, writing out one line at a time so that; * it can be interleaved with output from other columns.; *; * The LineWrapper is used to handle the last column of each table as well as interjections.; * The LineWrapper is called once for each line of output. If the data given to it fits; * into the designated width of the last column it is simply written out. If there; * is too much data, an appropriate split point is located and only the data up to this; * split point is written out. The rest of the data is queued for the next line.; * That way the last column can be line wrapped and interleaved with data from; * other columns. The following example makes this clearer:; * @code; * Column 1,1 Column 2,1 This is a long text; * Column 1,2 Column 2,2 that does not fit into; * a single line.; * @endcode; *; * The difficulty in producing this output is that the whole string; * ""This is a long text that does not fit into a single line"" is the; * 1st and only part of column 3. In order to produce the above; * output the string must be output piecemeal, interleaved with; * the data from the other columns.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:392,simpl,simply,392,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,2,"['clear', 'simpl']","['clearer', 'simply']"
Usability,/**; * @name getFileId; * @memberof jsPDF#; * @function; * @instance; *; * @returns {string} GUID.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:93,GUID,GUID,93,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['GUID'],['GUID']
Usability,/**; * @name setFileId; * @memberof jsPDF#; * @function; * @instance; * @param {string} value GUID.; * @returns {jsPDF}; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:94,GUID,GUID,94,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['GUID'],['GUID']
Usability,"/**; * @summary Painter of hierarchical structures; *; * @example; * import { HierarchyPainter } from 'https://root.cern/js/latest/modules/gui/HierarchyPainter.mjs';; * // create hierarchy painter in 'myTreeDiv'; * let h = new HierarchyPainter('example', 'myTreeDiv');; * // configure 'simple' layout in 'myMainDiv'; * // one also can specify 'grid2x2' or 'flex' or 'tabs'; * h.setDisplay('simple', 'myMainDiv');; * // open file and display element; * h.openRootFile('https://root.cern/js/files/hsimple.root').then(() => h.display('hpxpy;1','colz')); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:286,simpl,simple,286,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['simpl'],['simple']
Usability,"/**; * A code-completion string that describes ""optional"" text that; * could be a part of the template (but is not required).; *; * The Optional chunk is the only kind of chunk that has a code-completion; * string for its representation, which is accessible via; * \c clang_getCompletionChunkCompletionString(). The code-completion string; * describes an additional part of the template that is completely optional.; * For example, optional chunks can be used to describe the placeholders for; * arguments that match up with defaulted function parameters, e.g. given:; *; * \code; * void f(int x, float y = 3.14, double z = 2.71828);; * \endcode; *; * The code-completion string for this function would contain:; * - a TypedText chunk for ""f"".; * - a LeftParen chunk for ""("".; * - a Placeholder chunk for ""int x""; * - an Optional chunk containing the remaining defaulted arguments, e.g.,; * - a Comma chunk for "",""; * - a Placeholder chunk for ""float y""; * - an Optional chunk containing the last defaulted argument:; * - a Comma chunk for "",""; * - a Placeholder chunk for ""double z""; * - a RightParen chunk for "")""; *; * There are many ways to handle Optional chunks. Two simple approaches are:; * - Completely ignore optional chunks, in which case the template for the; * function ""f"" would only include the first parameter (""int x"").; * - Fully expand all optional chunks, in which case the template for the; * function ""f"" would have all of the parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:1173,simpl,simple,1173,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['simpl'],['simple']
Usability,"/**; * A function for applying transformations as part of an transform layer.; *; * Implementations of this type are responsible for managing the lifetime; * of the Module pointed to by ModInOut: If the LLVMModuleRef value is; * overwritten then the function is responsible for disposing of the incoming; * module. If the module is simply accessed/mutated in-place then ownership; * returns to the caller and the function does not need to do any lifetime; * management.; *; * Clients can call LLVMOrcLLJITGetIRTransformLayer to obtain the transform; * layer of a LLJIT instance, and use LLVMOrcIRTransformLayerSetTransform; * to set the function. This can be used to override the default transform; * layer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:332,simpl,simply,332,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['simpl'],['simply']
Usability,"/**; * A function for applying transformations to an object file buffer.; *; * Implementations of this type are responsible for managing the lifetime; * of the memory buffer pointed to by ObjInOut: If the LLVMMemoryBufferRef; * value is overwritten then the function is responsible for disposing of the; * incoming buffer. If the buffer is simply accessed/mutated in-place then; * ownership returns to the caller and the function does not need to do any; * lifetime management.; *; * The transform is allowed to return an error, in which case the ObjInOut; * buffer should be disposed of and set to null.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:340,simpl,simply,340,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['simpl'],['simply']
Usability,"/**; * Adds XMP formatted metadata to PDF; *; * @name addMetadata; * @function; * @param {String} metadata The actual metadata to be added. The metadata shall be stored as XMP simple value. Note that if the metadata string contains XML markup characters ""<"", "">"" or ""&"", those characters should be written using XML entities.; * @param {String} namespaceuri Sets the namespace URI for the metadata. Last character should be slash or hash.; * @returns {jsPDF} jsPDF-instance; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:176,simpl,simple,176,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,"/**; * Calls remove on all trackers associated with this JITDylib, see; * JITDylib::clear().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:84,clear,clear,84,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['clear'],['clear']
Usability,"/**; * Clear all unreferenced symbol string pool entries.; *; * This can be called at any time to release unused entries in the; * ExecutionSession's string pool. Since it locks the pool (preventing; * interning of any new strings) it is recommended that it only be called; * infrequently, ideally when the caller has reason to believe that some; * entries will have become unreferenced, e.g. after removing a module or; * closing a JITDylib.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:7,Clear,Clear,7,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['Clear'],['Clear']
Usability,/**; * Clear the map.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:7,Clear,Clear,7,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,1,['Clear'],['Clear']
Usability,/**; * Clears and frees all of the dictionaries in the CCtx.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:7,Clear,Clears,7,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['Clear'],['Clears']
Usability,"/**; * Clears the specified pixels within a given rectangle; *; * @name clearRect; * @function; * @param x {Number} The x-coordinate of the upper-left corner of the rectangle; * @param y {Number} The y-coordinate of the upper-left corner of the rectangle; * @param w {Number} The width of the rectangle to clear, in pixels; * @param h {Number} The height of the rectangle to clear, in pixels; * @description We cannot clear PDF commands that were already written to PDF, so we use white instead. <br />; * As a special case, read a special flag (ignoreClearRect) and do nothing if it is set.; * This results in all calls to clearRect() to do nothing, and keep the canvas transparent.; * This flag is stored in the save/restore context and is managed the same way as other drawing states.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:7,Clear,Clears,7,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,12,"['Clear', 'clear']","['Clears', 'clear', 'clearRect']"
Usability,"/**; * Controls, for this matchState reset, whether the tables need to be cleared /; * prepared for the coming compression (ZSTDcrp_makeClean), or whether the; * tables can be left unclean (ZSTDcrp_leaveDirty), because we know that a; * subsequent operation will overwrite the table space anyways (e.g., copying; * the matchState contents in from a CDict).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:74,clear,cleared,74,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['clear'],['cleared']
Usability,"/**; * Create a RTDyldObjectLinkingLayer instance using MCJIT-memory-manager-like; * callbacks.; *; * This is intended to simplify transitions for existing MCJIT clients. The; * callbacks used are similar (but not identical) to the callbacks for; * LLVMCreateSimpleMCJITMemoryManager: Unlike MCJIT, RTDyldObjectLinkingLayer; * will create a new memory manager for each object linked by calling the given; * CreateContext callback. This allows for code removal by destroying each; * allocator individually. Every allocator will be destroyed (if it has not been; * already) at RTDyldObjectLinkingLayer destruction time, and the; * NotifyTerminating callback will be called to indicate that no further; * allocation contexts will be created.; *; * To implement MCJIT-like behavior clients can implement CreateContext,; * NotifyTerminating, and Destroy as:; *; * void *CreateContext(void *CtxCtx) { return CtxCtx; }; * void NotifyTerminating(void *CtxCtx) { MyOriginalDestroy(CtxCtx); }; * void Destroy(void *Ctx) { }; *; * This scheme simply reuses the CreateContextCtx pointer as the one-and-only; * allocation context.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/OrcEE.h:122,simpl,simplify,122,interpreter/llvm-project/llvm/include/llvm-c/OrcEE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/OrcEE.h,2,['simpl'],"['simplify', 'simply']"
Usability,"/**; * Create a simple custom MCJIT memory manager. This memory manager can; * intercept allocations in a module-oblivious way. This will return NULL; * if any of the passed functions are NULL.; *; * @param Opaque An opaque client object to pass back to the callbacks.; * @param AllocateCodeSection Allocate a block of memory for executable code.; * @param AllocateDataSection Allocate a block of memory for data.; * @param FinalizeMemory Set page permissions and flush cache. Return 0 on; * success, 1 on error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h:16,simpl,simple,16,interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,1,['simpl'],['simple']
Usability,/**; * Determine whether the given cursor kind represents a simple; * reference.; *; * Note that other kinds of cursors (such as expressions) can also refer to; * other cursors. Use clang_getCursorReferenced() to determine whether a; * particular cursor refers to another entity.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:60,simpl,simple,60,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['simpl'],['simple']
Usability,"/**; * Dispose of the given error without handling it. This operation consumes the; * error, and the given LLVMErrorRef value is not usable once this call returns.; * Note: This method *only* needs to be called if the error is not being passed; * to some other consuming operation, e.g. LLVMGetErrorMessage.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:133,usab,usable,133,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['usab'],['usable']
Usability,/**; * Fast and simple cubic spline interpolant.; *; * It was derived from a Hermitian construction setting the first derivative; * at each sample position to the linear slope between neighboring positions; * over their parameter interval.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs:16,simpl,simple,16,js/modules/three.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs,1,['simpl'],['simple']
Usability,"/**; * Fix-its that *must* be applied before inserting the text for the; * corresponding completion.; *; * By default, clang_codeCompleteAt() only returns completions with empty; * fix-its. Extra completions with non-empty fix-its should be explicitly; * requested by setting CXCodeComplete_IncludeCompletionsWithFixIts.; *; * For the clients to be able to compute position of the cursor after applying; * fix-its, the following conditions are guaranteed to hold for; * replacement_range of the stored fix-its:; * - Ranges in the fix-its are guaranteed to never contain the completion; * point (or identifier under completion point, if any) inside them, except; * at the start or at the end of the range.; * - If a fix-it range starts or ends with completion point (or starts or; * ends after the identifier under completion point), it will contain at; * least one character. It allows to unambiguously recompute completion; * point after applying the fix-it.; *; * The intuition is that provided fix-its change code around the identifier we; * complete, but are not allowed to touch the identifier itself or the; * completion point. One example of completions with corrections are the ones; * replacing '.' with '->' and vice versa:; *; * std::unique_ptr<std::vector<int>> vec_ptr;; * In 'vec_ptr.^', one of the completions is 'push_back', it requires; * replacing '.' with '->'.; * In 'vec_ptr->^', one of the completions is 'release', it requires; * replacing '->' with '.'.; *; * \param results The structure keeping all completion results; *; * \param completion_index The index of the completion; *; * \param fixit_index The index of the fix-it for the completion at; * completion_index; *; * \param replacement_range The fix-it range that must be replaced before the; * completion at completion_index can be applied; *; * \returns The fix-it string that must replace the code at replacement_range; * before the completion at completion_index can be applied; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:970,intuit,intuition,970,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['intuit'],['intuition']
Usability,"/**; * If set, the combo box shall include an editable text box as well as a drop-down list; if clear, it shall include only a drop-down list. This flag shall be used only if the Combo flag is set.; *; * @name AcroFormChoiceField#edit; * @default false; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:96,clear,clear,96,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * If set, the field is a combo box; if clear, the field is a list box.; *; * @name AcroFormChoiceField#combo; * @default false; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:44,clear,clear,44,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,"/**; * If set, the field is a set of radio buttons; if clear, the field is a checkbox. This flag may be set only if the Pushbutton flag is clear.; *; * @name AcroFormButton#radio; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:55,clear,clear,55,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['clear'],['clear']
Usability,"/**; * If set, the field may contain multiple lines of text; if clear, the field’s text shall be restricted to a single line.; *; * @name AcroFormTextField#multiline; * @type {boolean}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:64,clear,clear,64,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['clear']
Usability,/**; * Less-simply templated function.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h:12,simpl,simply,12,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,1,['simpl'],['simply']
Usability,/**; * Removes all metadata attachments from this value.; *; * @see llvm::GlobalObject::clearMetadata(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:88,clear,clearMetadata,88,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['clear'],['clearMetadata']
Usability,"/**; * Replace '/', '(', and ')' with pdf-safe versions; *; * Doing to8bitStream does NOT make this PDF display unicode text. For that; * we also need to reference a unicode font and embed it - royal pain in the rear.; *; * There is still a benefit to to8bitStream - PDF simply cannot handle 16bit chars,; * which JavaScript Strings are happy to provide. So, while we still cannot display; * 2-byte characters property, at least CONDITIONALLY converting (entire string containing); * 16bit chars to (USC-2-BE) 2-bytes per char + BOM streams we ensure that entire PDF; * is still parseable.; * This will allow immediate support for unicode in document properties strings.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:271,simpl,simply,271,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simply']
Usability,"/**; * Returns the given string's error message. This operation consumes the error,; * and the given LLVMErrorRef value is not usable once this call returns.; * The caller is responsible for disposing of the string by calling; * LLVMDisposeErrorMessage.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:127,usab,usable,127,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['usab'],['usable']
Usability,"/**; * Set location information used by debugging information.; *; * To clear the location metadata of the given instruction, pass NULL to \p Loc.; *; * @see llvm::IRBuilder::SetCurrentDebugLocation(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:72,clear,clear,72,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['clear'],['clear']
Usability,"/**; * Set the debug location for the given instruction.; *; * To clear the location metadata of the given instruction, pass NULL to \p Loc.; *; * @see llvm::Instruction::setDebugLoc(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:66,clear,clear,66,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,1,['clear'],['clear']
Usability,"/**; * Set the default floating-point math metadata for the given builder.; *; * To clear the metadata, pass NULL to \p FPMathTag.; *; * @see llvm::IRBuilder::setDefaultFPMathTag(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:84,clear,clear,84,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['clear'],['clear']
Usability,"/**; * Sets the dash pattern for upcoming lines.; *; * To reset the settings simply call the method without any parameters.; * @param {Array<number>} dashArray An array containing 0-2 numbers. The first number sets the length of the; * dashes, the second number the length of the gaps. If the second number is missing, the gaps are considered; * to be as long as the dashes. An empty array means solid, unbroken lines.; * @param {number} dashPhase The phase lines start with.; * @function; * @instance; * @returns {jsPDF}; * @memberof jsPDF#; * @name setLineDashPattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:77,simpl,simply,77,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simply']
Usability,/**; * Simple specialisation.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h:7,Simpl,Simple,7,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,1,['Simpl'],['Simple']
Usability,/**; * Simply templated function.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h:7,Simpl,Simply,7,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,1,['Simpl'],['Simply']
Usability,/**; * Suspend a translation unit in order to free memory associated with it.; *; * A suspended translation unit uses significantly less memory but on the other; * side does not support any other calls than \c clang_reparseTranslationUnit; * to resume it or \c clang_disposeTranslationUnit to dispose it completely.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:245,resume,resume,245,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['resume'],['resume']
Usability,"/**; * This submodule is responsible for creating visualization for simple neural networks and deep neural networks.; * Simple neural networks are created with d3js, and HTML5 canvas element is used for visualization of deep neural networks.; * Interactions supported (non deep networks):; * - Mouseover (node, weight): focusing; * - Zooming and grab and move supported; * - Reset: double click; * Interactions supported (deep networks):; * - Zooming and grab and move supported; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 6/9/16; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js:68,simpl,simple,68,etc/notebook/JsMVA/js/NeuralNetwork.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NeuralNetwork.js,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"/**; * Zstd fits all its internal datastructures into a single continuous buffer,; * so that it only needs to perform a single OS allocation (or so that a buffer; * can be provided to it and it can perform no allocations at all). This buffer; * is called the workspace.; *; * Several optimizations complicate that process of allocating memory ranges; * from this workspace for each internal datastructure:; *; * - These different internal datastructures have different setup requirements:; *; * - The static objects need to be cleared once and can then be trivially; * reused for each compression.; *; * - Various buffers don't need to be initialized at all--they are always; * written into before they're read.; *; * - The matchstate tables have a unique requirement that they don't need; * their memory to be totally cleared, but they do need the memory to have; * some bound, i.e., a guarantee that all values in the memory they've been; * allocated is less than some maximum value (which is the starting value; * for the indices that they will then use for compression). When this; * guarantee is provided to them, they can use the memory without any setup; * work. When it can't, they have to clear the area.; *; * - These buffers also have different alignment requirements.; *; * - We would like to reuse the objects in the workspace for multiple; * compressions without having to perform any expensive reallocation or; * reinitialization work.; *; * - We would like to be able to efficiently reuse the workspace across; * multiple compressions **even when the compression parameters change** and; * we need to resize some of the objects (where possible).; *; * To attempt to manage this buffer, given these constraints, the ZSTD_cwksp; * abstraction was created. It works as follows:; *; * Workspace Layout:; *; * [ ... workspace ... ]; * [objects][tables ... ->] free space [<- ... aligned][<- ... buffers]; *; * The various objects that live in the workspace are divided into the; * following",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h:527,clear,cleared,527,builtins/zstd/compress/zstd_cwksp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h,2,['clear'],['cleared']
Usability,"/**; * \class ROOT::TIOFeatures; * \ingroup tree; *; * `TIOFeatures` provides the end-user with the ability to change the IO behavior; * of data written via a `TTree`. This class allows access to experimental and non-default; * features.; *; * When one of these features are activated, forward compatibility breaks may occur.; * That is, older versions of ROOT may not be able to read files written by this version; * of ROOT that have enabled these non-default features.; *; * To utilize `TIOFeatures`, create the object, set the desired feature flags, then attach; * it to a `TTree`. All subsequently created branches (and their baskets) will be serialized; * using those particular features.; *; * Example usage:; * ~~~{.cpp}; * ROOT::TIOFeatures features;; * features.Set(ROOT::Experimental::EIOFeatures::kGenerateOffsetMap);; * ttree_ref.SetIOFeatures(features);; * ~~~; *; * The method `TTree::SetIOFeatures` creates a copy of the feature set; subsequent changes; * to the `TIOFeatures` object do not propagate to the `TTree`.; */; ////////////////////////////////////////////////////////////////////////////; /// \brief Clear a specific IO feature from this set.; /// \param[in] input_bits The specific feature to disable.; ///; /// Removes a feature from the `TIOFeatures` object; emits an Error message if; /// the IO feature is not supported by this version of ROOT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:1127,Clear,Clear,1127,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,1,['Clear'],['Clear']
Usability,"/**; * \class RooSTLRefCountList; * The RooSTLRefCountList is a simple collection of **pointers** to the template objects with; * reference counters.; * The pointees are not owned, hence not deleted when removed from the collection.; * Objects can be searched for either by pointer or by name (confusion possible when; * objects with same name are present). This replicates the behaviour of the RooRefCountList.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSTLRefCountList.h:64,simpl,simple,64,roofit/roofitcore/inc/RooSTLRefCountList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSTLRefCountList.h,1,['simpl'],['simple']
Usability,"/**; * g_convert_with_fallback:; * @str: the string to convert; * @len: the length of the string; * @to_codeset: name of character set into which to convert @str; * @from_codeset: character set of @str.; * @fallback: UTF-8 string to use in place of character not; * present in the target encoding. (This must be; * in the target encoding), if %NULL, characters; * not in the target encoding will be represented; * as Unicode escapes \x{XXXX} or \x{XXXXXX}.; * @bytes_read: location to store the number of bytes in the; * input string that were successfully converted, or %NULL.; * Even if the conversion was succesful, this may be ; * less than len if there were partial characters; * at the end of the input.; * @bytes_written: the stored in the output buffer (not including the; * terminating nul.; * @error: location to store the error occuring, or %NULL to ignore; * errors. Any of the errors in #GConvertError may occur.; *; * Convert a string from one character set to another, possibly; * including fallback sequences for characters not representable; * in the output. Note that it is not guaranteed that the specification; * for the fallback sequences in @fallback will be honored. Some; * systems may do a approximate conversion from @from_codeset; * to @to_codeset in their iconv() functions, in which case GLib; * will simply return that approximate conversion.; *; * Return value: If the conversion was successful, a newly allocated; * NUL-terminated string, which must be freed with; * g_free. Otherwise %NULL and @error will be set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:1330,simpl,simply,1330,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,1,['simpl'],['simply']
Usability,"/**; * g_shell_unquote:; * @quoted_string: shell-quoted string; * @error: error return location or NULL; * ; * Unquotes a string as the shell (/bin/sh) would. Only handles; * quotes; if a string contains file globs, arithmetic operators,; * variables, backticks, redirections, or other special-to-the-shell; * features, the result will be different from the result a real shell; * would produce (the variables, backticks, etc. will be passed; * through literally instead of being expanded). This function is; * guaranteed to succeed if applied to the result of; * g_shell_quote(). If it fails, it returns NULL and sets the; * error. The @quoted_string need not actually contain quoted or; * escaped text; g_shell_unquote() simply goes through the string and; * unquotes/unescapes anything that the shell would. Both single and; * double quotes are handled, as are escapes including escaped; * newlines. The return value must be freed with g_free(). Possible; * errors are in the #G_SHELL_ERROR domain.; * ; * Shell quoting rules are a bit strange. Single quotes preserve the; * literal string exactly. escape sequences are not allowed; not even; * \' - if you want a ' in the quoted text, you have to do something; * like 'foo'\''bar'. Double quotes allow $, `, "", \, and newline to; * be escaped with backslash. Otherwise double quotes preserve things; * literally.; *; * Return value: an unquoted string; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c:723,simpl,simply,723,graf2d/win32gdk/gdk/src/glib/gshell.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c,1,['simpl'],['simply']
Usability,"/**; * g_spawn_async:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @child_pid: return location for child process ID, or NULL; * @error: return location for error; * ; * See g_spawn_async_with_pipes() for a full description; this function; * simply calls the g_spawn_async_with_pipes() without any pipes.; * ; * Return value: TRUE on success, FALSE if error is set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:520,simpl,simply,520,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['simpl'],['simply']
Usability,"/**; * g_spawn_command_line_async:; * @command_line: a command line; * @error: return location for errors; * ; * A simple version of g_spawn_async() that parses a command line with; * g_shell_parse_argv() and passes it to g_spawn_async(). Runs a; * command line in the background. Unlike g_spawn_async(), the; * %G_SPAWN_SEARCH_PATH flag is enabled, other flags are not. Note; * that %G_SPAWN_SEARCH_PATH can have security implications, so; * consider using g_spawn_async() directly if appropriate. Possible; * errors are those from g_shell_parse_argv() and g_spawn_async().; * ; * Return value: TRUE on success, FALSE if error is set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:115,simpl,simple,115,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['simpl'],['simple']
Usability,"/**; * g_spawn_command_line_sync:; * @command_line: a command line ; * @standard_output: return location for child output; * @standard_error: return location for child errors; * @exit_status: return location for child exit status; * @error: return location for errors; *; * A simple version of g_spawn_sync() with little-used parameters; * removed, taking a command line instead of an argument vector. See; * g_spawn_sync() for full details. @command_line will be parsed by; * g_shell_parse_argv(). Unlike g_spawn_sync(), the %G_SPAWN_SEARCH_PATH flag; * is enabled. Note that %G_SPAWN_SEARCH_PATH can have security; * implications, so consider using g_spawn_sync() directly if; * appropriate. Possible errors are those from g_spawn_sync() and those; * from g_shell_parse_argv().; * ; * Return value: TRUE on success, FALSE if an error was set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:276,simpl,simple,276,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['simpl'],['simple']
Usability,"/**; * g_strdupv:; * @str_array: %NULL-terminated array of strings; * ; * Copies %NULL-terminated array of strings. The copy is a deep copy;; * the new array should be freed by first freeing each string, then; * the array itself. g_strfreev() does this for you. If called; * on a %NULL value, g_strdupv() simply returns %NULL.; * ; * Return value: a new %NULL-terminated array of strings; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c:305,simpl,simply,305,graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,1,['simpl'],['simply']
Usability,"/**; * g_thread_pool_push:; * @pool: a #GThreadPool; * @data: a new task for @pool; * @error: return location for error; * ; * Inserts @data into the list of tasks to be executed by @pool. When; * the number of currently running threads is lower than the maximal; * allowed number of threads, a new thread is started (or reused) with; * the properties given to g_thread_pool_new (). Otherwise @data stays; * in the queue until a thread in this pool finishes its previous task; * and processes @data. ; *; * @error can be NULL to ignore errors, or non-NULL to report; * errors. An error can only occur, when a new thread couldn't be; * created. In that case @data is simply appended to the queue of work; * to do. ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c:666,simpl,simply,666,graf2d/win32gdk/gdk/src/glib/gthreadpool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c,1,['simpl'],['simply']
Usability,/**; Documentation for class Functor class.; It is used to wrap in a very simple and convenient way multi-dimensional function objects.; It can wrap all the following types:; <ul>; <li> any C++ callable object implementation double operator()( const double * ); <li> a free C function of type double ()(const double * ); <li> an std::function of type std::function<double (double const *)>; <li> a member function with the correct signature like Foo::Eval(const double * ).; In this case one pass the object pointer and a pointer to the member function (&Foo::Eval); </ul>; The function dimension is required when constructing the functor. @ingroup GenFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h:74,simpl,simple,74,math/mathcore/inc/Math/Functor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h,1,['simpl'],['simple']
Usability,"/**; Enumeration with One Dimensional Minimizer Algorithms.; The algorithms are implemented using GSL, see the; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_33.html#SEC447"">GSL manual</A>. The algorithms available are:; <ul>; <li><em>Golden Section Algorithm</em>, simplest method of bracketing the minimum of a function; <li><em>Brent Algorithm</em>, which combines a parabolic interpolation with the golden section algorithm; </ul>; @ingroup Min1D; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h:276,simpl,simplest,276,math/mathmore/inc/Math/GSLMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h,1,['simpl'],['simplest']
Usability,/**; Functor1D class for one-dimensional functions.; It is used to wrap in a very simple and convenient way:; <ul>; <li> any C++ callable object implementation double operator()( double ); <li> a free C function of type double ()(double ); <li> a member function with the correct signature like Foo::Eval(double ).; In this case one pass the object pointer and a pointer to the member function (&Foo::Eval); </ul>. @ingroup GenFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h:82,simpl,simple,82,math/mathcore/inc/Math/Functor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h,1,['simpl'],['simple']
Usability,"/**; Introduction. LZ4 is lossless compression algorithm, providing compression speed >500 MB/s per core,; scalable with multi-cores CPU. It features an extremely fast decoder, with speed in; multiple GB/s per core, typically reaching RAM speed limits on multi-core systems. The LZ4 compression library provides in-memory compression and decompression functions.; It gives full buffer control to user.; Compression can be done in:; - a single step (described as Simple Functions); - a single step, reusing a context (described in Advanced Functions); - unbounded multiple steps (described as Streaming compression). lz4.h generates and decodes LZ4-compressed blocks (doc/lz4_Block_format.md).; Decompressing such a compressed block requires additional metadata.; Exact metadata depends on exact decompression function.; For the typical case of LZ4_decompress_safe(),; metadata includes block's compressed size, and maximum bound of decompressed size.; Each application is free to encode and pass such metadata in whichever way it wants. lz4.h only handle blocks, it can not generate Frames. Blocks are different from Frames (doc/lz4_Frame_format.md).; Frames bundle both blocks and metadata in a specified manner.; Embedding metadata is required for compressed data to be self-contained and portable.; Frame format is delivered through a companion API, declared in lz4frame.h.; The `lz4` CLI can only manage frames.; */; /*^***************************************************************; * Export parameters; *****************************************************************/; /*; * LZ4_DLL_EXPORT :; * Enable exporting of functions when building a Windows DLL; * LZ4LIB_VISIBILITY :; * Control library symbols visibility.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:462,Simpl,Simple,462,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['Simpl'],['Simple']
Usability,/**; MultiDimParamFunctionAdapter class to wrap a one-dimensional parametric function in; a multi dimensional parametric function interface; This is used typically in fitting where internally the function is stored as multidimensional. To wrap a non-parametric one-dim function in a multi-dim interface one can use simply a; ROOT::Math::WrappedFunction<ROOT::Math::IGenFunction> or ROOT::Math::Functor; and ROOT::Math::GradFunctor for gradient functions. This class differs from WrappedParamFunction in the fact that the parameters are not stored in; the adapter class and optionally it keeps a cloned and managed copy of the adapter class. @ingroup ParamFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:315,simpl,simply,315,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,1,['simpl'],['simply']
Usability,/**; MultiDimParamGradFunctionAdapter class to wrap a one-dimensional parametric gradient function in; a multi dimensional parametric gradient function interface; This is used typically in fitting where internally the function is stored as multidimensional. To wrap a non-parametric one-dim gradient function in a multi-dim interface one can use simply a; a ROOT::Math::GradFunctor. The parameters are not stored in the adapter class and by default the pointer to the 1D function is owned.; This means that deleting the class deletes also the 1D function and copying the class copies also the; 1D function; This class differs from WrappedParamFunction in the fact that the parameters are not stored in; the adapter class and optionally it keeps a cloned and managed copy of the adapter class. @ingroup ParamFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:346,simpl,simply,346,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,1,['simpl'],['simply']
Usability,"/**; Param Functor class for Multidimensional functions.; It is used to wrap in a very simple and convenient way; any other C++ callable object (implementation double operator( const double *, const double * ) ); or a member function with the correct signature,; like Foo::EvalPar(const double *, const double *). @ingroup ParamFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h:87,simpl,simple,87,math/mathcore/inc/Math/ParamFunctor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h,1,['simpl'],['simple']
Usability,/**; Perform a simple FCN evaluation. FitResult will be modified and contain the value of the FCN; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:15,simpl,simple,15,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['simpl'],['simple']
Usability,/**; Pre-processor macro to report messages; which can be configured to use ROOT error or; simply an std::iostream in case of stan-alone builds; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h:91,simpl,simply,91,math/mathcore/inc/Math/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h,1,['simpl'],['simply']
Usability,/**; Test of ROOT finder for various function. case = 0 simple function (polynomial); case = 1 function which fails for a bug in BrentMethod::MinimBrent fixed with r = 32544 (5.27.01); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testRootFinder.cxx:56,simpl,simple,56,math/mathcore/test/testRootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testRootFinder.cxx,1,['simpl'],['simple']
Usability,"/**; \class TGenCollectionProxy TGenCollectionProxy.cxx; \ingroup IO. Proxy around an arbitrary container, which implements basic; functionality and iteration. The purpose of this implementation; is to shield any generated dictionary implementation from the; underlying streamer/proxy implementation and only expose; the creation functions. In particular this is used to implement splitting and abstract; element access of any container. Access to compiled code is necessary; to implement the abstract iteration sequence and functionality like; size(), clear(), resize(). resize() may be a void operation.; */; ////////////////////////////////////////////////////////////////////////////////; /// Build a proxy for an emulated container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:553,clear,clear,553,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['clear'],['clear']
Usability,"/**; \class TRInterface; ROOT R was implemented using the; <A HREF=""http://www.r-project.org/"">R Project</A> library and the modules; <A HREF=""http://cran.r-project.org/web/packages/Rcpp/index.html"">Rcpp</A> and; <A HREF=""http://cran.r-project.org/web/packages/RInside/index.html"">RInside</A>; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. \ingroup R; */; /**; <center><h2>TRInterface class</h2></center>. </p>; The TRInterface class lets you process R code from ROOT.<br>; You can call R libraries and their functions, plot results in R or ROOT,<br>; and use the power of ROOT and R at the same time.<br>; It also lets you pass scalars, vectors and matrices from ROOT to R<br>; and from R to ROOT using TRObject; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:304,Guid,Guide,304,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,2,['Guid'],['Guide']
Usability,"/**; class describing the simplex set of points (f(x), x ) which evolve during the minimization; iteration process.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/SimplexParameters.h:26,simpl,simplex,26,math/minuit2/inc/Minuit2/SimplexParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/SimplexParameters.h,1,['simpl'],['simplex']
Usability,"/**; clear all ranges in one coordinate (is now -inf, +inf); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataRange.h:5,clear,clear,5,math/mathcore/inc/Fit/DataRange.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataRange.h,1,['clear'],['clear']
Usability,/**; compute initial parameter for an exponential function given the fit data; Set the constant and slope assuming a simple exponential going through xmin and xmax; of the data set; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/HFitInterface.h:117,simpl,simple,117,hist/hist/inc/HFitInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/HFitInterface.h,1,['simpl'],['simple']
Usability,/**; generate Simplex starting point (state); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/SimplexSeedGenerator.h:14,Simpl,Simplex,14,math/minuit2/inc/Minuit2/SimplexSeedGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/SimplexSeedGenerator.h,1,['Simpl'],['Simplex']
Usability,"/**< library version number; to be used when checking dll version */; /*-****************************************; * FSE simple functions; ******************************************/; /*! FSE_compress() :; Compress content of buffer 'src', of size 'srcSize', into destination buffer 'dst'.; 'dst' buffer must be already allocated. Compression runs faster is dstCapacity >= FSE_compressBound(srcSize).; @return : size of compressed data (<= dstCapacity).; Special values : if return == 0, srcData is not compressible => Nothing is stored within dst !!!; if return == 1, srcData is a single byte symbol * srcSize times. Use RLE compression instead.; if FSE_isError(return), compression failed (more details using FSE_getErrorName()); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:121,simpl,simple,121,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['simpl'],['simple']
Usability,"/**< recommended size for output buffer. Guarantee to successfully flush at least one complete compressed block. */; /* *****************************************************************************; * This following is a legacy streaming API.; * It can be replaced by ZSTD_CCtx_reset() and ZSTD_compressStream2().; * It is redundant, but remains fully supported.; * Advanced parameters and dictionary compression can only be used through the; * new API.; ******************************************************************************/; /*!; * Equivalent to:; *; * ZSTD_CCtx_reset(zcs, ZSTD_reset_session_only);; * ZSTD_CCtx_refCDict(zcs, NULL); // clear the dictionary (if any); * ZSTD_CCtx_setParameter(zcs, ZSTD_c_compressionLevel, compressionLevel);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:648,clear,clear,648,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['clear'],['clear']
Usability,"/*-************************************; * Simple Functions; **************************************/; /*! LZ4_compress_default() :; * Compresses 'srcSize' bytes from buffer 'src'; * into already allocated 'dst' buffer of size 'dstCapacity'.; * Compression is guaranteed to succeed if 'dstCapacity' >= LZ4_compressBound(srcSize).; * It also runs faster, so it's a recommended setting.; * If the function cannot compress 'src' into a more limited 'dst' budget,; * compression stops *immediately*, and the function result is zero.; * In which case, 'dst' content is undefined (invalid).; * srcSize : max supported value is LZ4_MAX_INPUT_SIZE.; * dstCapacity : size of buffer 'dst' (which must be already allocated); * @return : the number of bytes written into buffer 'dst' (necessarily <= dstCapacity); * or 0 if compression fails; * Note : This function is protected against buffer overflow scenarios (never writes outside 'dst' buffer, nor read outside 'source' buffer).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:43,Simpl,Simple,43,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['Simpl'],['Simple']
Usability,/*-************************************; * Simple-pass compression functions; **************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:43,Simpl,Simple-pass,43,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['Simpl'],['Simple-pass']
Usability,/*---------------------------------------------------------------------------*/; /* Simple insertionsort for small size groups. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c:84,Simpl,Simple,84,builtins/zstd/dictBuilder/divsufsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c,1,['Simpl'],['Simple']
Usability,"/*; * (C) Copyright 2016-2018 Intel Corporation.; *; * Licensed under the Apache License, Version 2.0 (the ""License"");; * you may not use this file except in compliance with the License.; * You may obtain a copy of the License at; *; * http://www.apache.org/licenses/LICENSE-2.0; *; * Unless required by applicable law or agreed to in writing, software; * distributed under the License is distributed on an ""AS IS"" BASIS,; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.; * See the License for the specific language governing permissions and; * limitations under the License.; */; /**; * \file; *; * This file is a reduced version of `daos_xxx.h` headers that provides (simplified) declarations for use in; * libdaos_mock.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/libdaos_mock/daos.h:697,simpl,simplified,697,tree/ntuple/v7/inc/ROOT/libdaos_mock/daos.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/libdaos_mock/daos.h,1,['simpl'],['simplified']
Usability,"/*; * About virtual array management:; *; * The above ""normal"" array routines are only used to allocate strip buffers; * (as wide as the image, but just a few rows high). Full-image-sized buffers; * are handled as ""virtual"" arrays. The array is still accessed a strip at a; * time, but the memory manager must save the whole array for repeated; * accesses. The intended implementation is that there is a strip buffer in; * memory (as high as is possible given the desired memory limit), plus a; * backing file that holds the rest of the array.; *; * The request_virt_array routines are told the total size of the image and; * the maximum number of rows that will be accessed at once. The in-memory; * buffer must be at least as large as the maxaccess value.; *; * The request routines create control blocks but not the in-memory buffers.; * That is postponed until realize_virt_arrays is called. At that time the; * total amount of space needed is known (approximately, anyway), so free; * memory can be divided up fairly.; *; * The access_virt_array routines are responsible for making a specific strip; * area accessible (after reading or writing the backing file, if necessary).; * Note that the access routines are told whether the caller intends to modify; * the accessed strip; during a read-only pass this saves having to rewrite; * data to disk. The access routines are also responsible for pre-zeroing; * any newly accessed rows, if pre-zeroing was requested.; *; * In current usage, the access requests are usually for nonoverlapping; * strips; that is, successive access start_row numbers differ by exactly; * num_rows = maxaccess. This means we can get good performance with simple; * buffer dump/reload logic, by making the in-memory buffer be a multiple; * of the access height; then there will never be accesses across bufferload; * boundaries. The code will still work with overlapping access requests,; * but it doesn't handle bufferload overlaps very efficiently.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:1687,simpl,simple,1687,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['simpl'],['simple']
Usability,"/*; * Copyright (C) 1999-2002 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * C99; * This is ASCII with \uXXXX and \UXXXXXXXX escape sequences, denoting Unicode; * characters. See ISO/IEC 9899:1999, section 6.4.3.; * The treatment of control characters in the range U+0080..U+009F is not; * specified; we pass them through unmodified.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/c99.h:958,uX,uXXXX,958,graf2d/win32gdk/gdk/src/iconv/c99.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/c99.h,2,"['UX', 'uX']","['UXXXXXXXX', 'uXXXX']"
Usability,"/*; * Copyright (C) 1999-2002 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * JAVA; * This is ISO 8859-1 with \uXXXX escape sequences, denoting Unicode BMP; * characters. Consecutive pairs of \uXXXX escape sequences in the surrogate; * range, as in UTF-16, denote Unicode characters outside the BMP.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/java.h:964,uX,uXXXX,964,graf2d/win32gdk/gdk/src/iconv/java.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/java.h,2,['uX'],['uXXXX']
Usability,"/*; * Decompression startup: read start of JPEG datastream to see what's there.; * Need only initialize JPEG object and supply a data source before calling.; *; * This routine will read as far as the first SOS marker (ie, actual start of; * compressed data), and will save all tables and parameters in the JPEG; * object. It will also initialize the decompression parameters to default; * values, and finally return JPEG_HEADER_OK. On return, the application may; * adjust the decompression parameters and then call jpeg_start_decompress.; * (Or, if the application only wanted to determine the image parameters,; * the data need not be decompressed. In that case, call jpeg_abort or; * jpeg_destroy to release any temporary space.); * If an abbreviated (tables only) datastream is presented, the routine will; * return JPEG_HEADER_TABLES_ONLY upon reaching EOI. The application may then; * re-use the JPEG object to read the abbreviated image datastream(s).; * It is unnecessary (but OK) to call jpeg_abort in this case.; * The JPEG_SUSPENDED return code only occurs if the data source module; * requests suspension of the decompressor. In this case the application; * should load more source data and then re-call jpeg_read_header to resume; * processing.; * If a non-suspending data source is used and require_image is TRUE, then the; * return code need not be inspected since only JPEG_HEADER_OK is possible.; *; * This routine is now just a front end to jpeg_consume_input, with some; * extra error checking.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:1236,resume,resume,1236,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['resume'],['resume']
Usability,/*; * Do downsampling for a whole row group (all components).; *; * In this version we simply downsample each component independently.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:87,simpl,simply,87,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['simpl'],['simply']
Usability,"/*; * Downsample pixel values of a single component.; * This version handles the common case of 2:1 horizontal and 1:1 vertical,; * without smoothing.; *; * A note about the ""bias"" calculations: when rounding fractional values to; * integer, we do not want to always round 0.5 up to the next integer.; * If we did that, we'd introduce a noticeable bias towards larger values.; * Instead, this code is arranged so that 0.5 will be rounded up or down at; * alternate pixel locations (a simple ordered dither pattern).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:484,simpl,simple,484,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['simpl'],['simple']
Usability,"/*; * Empty the output buffer --- called whenever buffer fills up.; *; * In typical applications, this should write the entire output buffer; * (ignoring the current state of next_output_byte & free_in_buffer),; * reset the pointer & count to the start of the buffer, and return TRUE; * indicating that the buffer has been dumped.; *; * In applications that need to be able to suspend compression due to output; * overrun, a FALSE return indicates that the buffer cannot be emptied now.; * In this situation, the compressor will return to its caller (possibly with; * an indication that it has not accepted all the supplied scanlines). The; * application should resume compression after it has made more room in the; * output buffer. Note that there are substantial restrictions on the use of; * suspension --- see the documentation.; *; * When suspending, the compressor will back up to a convenient restart point; * (typically the start of the current MCU). next_output_byte & free_in_buffer; * indicate where the restart point will be if the current call returns FALSE.; * Data beyond this point will be regenerated after resumption, so do not; * write it out when emptying the buffer externally.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c:662,resume,resume,662,graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,1,['resume'],['resume']
Usability,"/*; * Fill the input buffer --- called whenever buffer is emptied.; *; * In typical applications, this should read fresh data into the buffer; * (ignoring the current state of next_input_byte & bytes_in_buffer),; * reset the pointer & count to the start of the buffer, and return TRUE; * indicating that the buffer has been reloaded. It is not necessary to; * fill the buffer entirely, only to obtain at least one more byte.; *; * There is no such thing as an EOF return. If the end of the file has been; * reached, the routine has a choice of ERREXIT() or inserting fake data into; * the buffer. In most cases, generating a warning message and inserting a; * fake EOI marker is the best course of action --- this will allow the; * decompressor to output however much of the image is there. However,; * the resulting error message is misleading if the real problem is an empty; * input file, so we handle that case specially.; *; * In applications that need to be able to suspend compression due to input; * not being available yet, a FALSE return indicates that no more data can be; * obtained right now, but more may be forthcoming later. In this situation,; * the decompressor will return to its caller (with an indication of the; * number of scanlines it has read, if any). The application should resume; * decompression after it has loaded more data into the input buffer. Note; * that there are substantial restrictions on the use of suspension --- see; * the documentation.; *; * When suspending, the decompressor will back up to a convenient restart point; * (typically the start of the current MCU). next_input_byte & bytes_in_buffer; * indicate where the restart point will be if the current call returns FALSE.; * Data beyond this point must be rescanned after resumption, so move it to; * the front of the buffer rather than discarding it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:1301,resume,resume,1301,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['resume'],['resume']
Usability,"/*; * For the simple (no-context-row) case, we just need to buffer one; * row group's worth of pixels for the downsampling step. At the bottom of; * the image, we pad to a full row group by replicating the last pixel row.; * The downsampler's last output row is then replicated if needed to pad; * out to a full iMCU row.; *; * When providing context rows, we must buffer three row groups' worth of; * pixels. Three row groups are physically allocated, but the row pointer; * arrays are made five row groups high, with the extra pointers above and; * below ""wrapping around"" to point to the last and first real row groups.; * This allows the downsampler to access the proper context rows.; * At the top and bottom of the image, we create dummy context rows by; * copying the first or last real pixel row. This copying could be avoided; * by pointer hacking as is done in jdmainct.c, but it doesn't seem worth the; * trouble on the compression side.; */; /* Private buffer controller object */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:14,simpl,simple,14,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['simpl'],['simple']
Usability,"/*; * Initialize the error-limiting transfer function (lookup table).; * The raw F-S error computation can potentially compute error values of up to; * +- MAXJSAMPLE. But we want the maximum correction applied to a pixel to be; * much less, otherwise obviously wrong pixels will be created. (Typical; * effects include weird fringes at color-area boundaries, isolated bright; * pixels in a dark area, etc.) The standard advice for avoiding this problem; * is to ensure that the ""corners"" of the color cube are allocated as output; * colors; then repeated errors in the same direction cannot cause cascading; * error buildup. However, that only prevents the error from getting; * completely out of hand; Aaron Giles reports that error limiting improves; * the results even with corner colors allocated.; * A simple clamping of the error values to about +- MAXJSAMPLE/8 works pretty; * well, but the smoother transfer function used below is even better. Thanks; * to Aaron Giles for this idea.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:807,simpl,simple,807,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['simpl'],['simple']
Usability,"/*; * Lossless image transformation routines. These routines work on DCT; * coefficient arrays and thus do not require any lossy decompression; * or recompression of the image.; * Thanks to Guido Vollbeding for the initial design and code of this feature,; * and to Ben Jackson for introducing the cropping feature.; *; * Horizontal flipping is done in-place, using a single top-to-bottom; * pass through the virtual source array. It will thus be much the; * fastest option for images larger than main memory.; *; * The other routines require a set of destination virtual arrays, so they; * need twice as much memory as jpegtran normally does. The destination; * arrays are always written in normal scan order (top to bottom) because; * the virtual array manager expects this. The source arrays will be scanned; * in the corresponding order, which means multiple passes through the source; * arrays for most of the transforms. That could result in much thrashing; * if the image is larger than main memory.; *; * If cropping or trimming is involved, the destination arrays may be smaller; * than the source arrays. Note it is not possible to do horizontal flip; * in-place when a nonzero Y crop offset is specified, since we'd have to move; * data from one block row to another but the virtual array manager doesn't; * guarantee we can touch more than one row at a time. So in that case,; * we have to use a separate destination array.; *; * Some notes about the operating environment of the individual transform; * routines:; * 1. Both the source and destination virtual arrays are allocated from the; * source JPEG object, and therefore should be manipulated by calling the; * source's memory manager.; * 2. The destination's component count should be used. It may be smaller; * than the source's when forcing to grayscale.; * 3. Likewise the destination's sampling factors should be used. When; * forcing to grayscale the destination's sampling factors will be all 1,; * and we may as well take tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:190,Guid,Guido,190,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['Guid'],['Guido']
Usability,"/*; * MCU decoding for DC successive approximation refinement scan.; * Note: we assume such scans can be multi-component, although the spec; * is not very clear on the point.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:155,clear,clear,155,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['clear'],['clear']
Usability,"/*; * MCU encoding for DC successive approximation refinement scan.; * Note: we assume such scans can be multi-component, although the spec; * is not very clear on the point.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:155,clear,clear,155,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,2,['clear'],['clear']
Usability,"/*; * Need RHist::iterator for full range, takes a predicate for ""in range?""; * Returns true for RHist; for RHistView, checks range, returns false if not in; * range. i+= 7 then does i++ seven times and checks at each step.; * iterator is simply an int with a predicate functor. end is end of the; * histogram - i.e. the number of bins (incl over / underflow).; *; * Add is then an operation (through a functor) on two bins.; *; * Drawing: need adaptor from RHist<n,p>::GetBinContent(...) to; * RHistPrecNormalizer<n>::Get(i) that casts the bin content to a double. That; * should be in internal but outside the drawing library (that needs to; * communicate through abstract interfaces and can thus not instantiate; * templates with user precision parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:239,simpl,simply,239,hist/histv7/inc/ROOT/RHistView.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx,1,['simpl'],['simply']
Usability,"/*; * One goal of XXH3 is to make it fast on both 32-bit and 64-bit, while; * remaining a true 64-bit/128-bit hash function.; *; * This is done by prioritizing a subset of 64-bit operations that can be; * emulated without too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:786,simpl,simply,786,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['simpl'],['simply']
Usability,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:93,simpl,simple,93,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['simpl'],['simple']
Usability,"/*; * Prescan some rows of pixels.; * In this module the prescan simply updates the histogram, which has been; * initialized to zeroes by start_pass.; * An output_buf parameter is required by the method signature, but no data; * is actually output (in fact the buffer controller is probably passing a; * NULL pointer).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:65,simpl,simply,65,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['simpl'],['simply']
Usability,"/*; * Process some data in the simple no-context case.; *; * Preprocessor output data is counted in ""row groups"". A row group; * is defined to be v_samp_factor sample rows of each component.; * Downsampling will produce this much data from each max_v_samp_factor; * input rows.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:31,simpl,simple,31,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['simpl'],['simple']
Usability,/*; * Process some data.; * This handles the simple case where no context is required.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:45,simpl,simple,45,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['simpl'],['simple']
Usability,"/*; * Process some data.; * This routine handles the simple pass-through mode,; * where we have only a strip buffer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c:53,simpl,simple,53,graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,1,['simpl'],['simple']
Usability,"/*; * Project: RooFit; * Authors:; * Kyle Cranmer,; * Lorenzo Moneta,; * Gregory Schott,; * Wouter Verkerke,; * Sven Kreiss; *; * Copyright (c) 2023, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::ModelConfig; \ingroup Roostats. ModelConfig is a simple class that holds configuration information specifying how a model; should be used in the context of various RooStats tools. A single model can be used; in different ways, and this class should carry all that is needed to specify how it should be used.; ModelConfig requires a workspace to be set. A ModelConfig holds sets of parameters of the likelihood function that have different interpretations:; - **Parameter of interest** Parameters that are measured (*i.e.* fitted).; - **Nuisance parameters** Parameters that are fitted, but their post-fit value is not interesting. Often,; they might be constrained because external knowledge about them exists, *e.g.* from external measurements.; - **Constraint parameters** No direct use in RooFit/RooStats. Can be used by the user for bookkeeping.; - **Observables** Parameters that have been measured externally, *i.e.* they exist in a dataset. These are not fitted,; but read during fitting from the entries of a dataset.; - **Conditional observables** Observables that are not integrated when the normalisation of the PDF is calculated.; See *e.g.* `rf306_condpereventerrors` in the RooFit tutorials.; - **Global observables** Observables that to the fit look like ""constant"" values, *i.e.* they are not being; fitted and they are not loaded from a dataset, but some knowledge exists that allows to set them to a; specific value. Examples:; -- A signal efficiency measured in a Monte Carlo study.; -- When constraining a parameter \f$ b \f$, the target value (\f$ b_0 \f$) that this parameter is constrained to:; \f[; \math",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx:422,simpl,simple,422,roofit/roofitcore/src/ModelConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx,1,['simpl'],['simple']
Usability,"/*; * Read the coefficient arrays from a JPEG file.; * jpeg_read_header must be completed before calling this.; *; * The entire image is read into a set of virtual coefficient-block arrays,; * one per component. The return value is a pointer to the array of; * virtual-array descriptors. These can be manipulated directly via the; * JPEG memory manager, or handed off to jpeg_write_coefficients().; * To release the memory occupied by the virtual arrays, call; * jpeg_finish_decompress() when done with the data.; *; * An alternative usage is to simply obtain access to the coefficient arrays; * during a buffered-image-mode decompression operation. This is allowed; * after any jpeg_finish_output() call. The arrays can be accessed until; * jpeg_finish_decompress() is called. (Note that any call to the library; * may reposition the arrays, so don't rely on access_virt_barray() results; * to stay valid across library calls.); *; * Returns NULL if suspended. This case need be checked only if; * a suspending data source is used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c:546,simpl,simply,546,graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,1,['simpl'],['simply']
Usability,"/*; * Routines to process JPEG markers.; *; * Entry condition: JPEG marker itself has been read and its code saved; * in cinfo->unread_marker; input restart point is just after the marker.; *; * Exit: if return TRUE, have read and processed any parameters, and have; * updated the restart point to point after the parameters.; * If return FALSE, was forced to suspend before reaching end of; * marker parameters; restart point has not been moved. Same routine; * will be called again after application supplies more input data.; *; * This approach to suspension assumes that all of a marker's parameters; * can fit into a single input bufferload. This should hold for ""normal""; * markers. Some COM/APPn markers might have large parameter segments; * that might not fit. If we are simply dropping such a marker, we use; * skip_input_data to get past it, and thereby put the problem on the; * source manager's shoulders. If we are saving the marker's contents; * into memory, we use a slightly different convention: when forced to; * suspend, the marker processor updates the restart point to the end of; * what it's consumed (ie, the end of the buffer) before returning FALSE.; * On resumption, cinfo->unread_marker still contains the marker code,; * but the data source will point to the next chunk of marker data.; * The marker processor must retain internal state to deal with this.; *; * Note that we don't bother to avoid duplicate trace messages if a; * suspension occurs within marker parameters. Other side effects; * require more care.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:780,simpl,simply,780,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['simpl'],['simply']
Usability,"/*; * Save away a copy of the Q-table referenced by each component present; * in the current scan, unless already saved during a prior scan.; *; * In a multiple-scan JPEG file, the encoder could assign different components; * the same Q-table slot number, but change table definitions between scans; * so that each component uses a different Q-table. (The IJG encoder is not; * currently capable of doing this, but other encoders might.) Since we want; * to be able to dequantize all the components at the end of the file, this; * means that we have to save away the table actually used for each component.; * We do this by copying the table at the start of the first scan containing; * the component.; * The JPEG spec prohibits the encoder from changing the contents of a Q-table; * slot between scans of a component using that slot. If the encoder does so; * anyway, this decoder will simply use the Q-table values that were current; * at the start of the first scan for the component.; *; * The decompressor output side looks only at the saved quant tables,; * not at the current Q-table slots.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c:887,simpl,simply,887,graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,1,['simpl'],['simply']
Usability,/*; * Simple error-printing.; *; * Note that gBitsVerbose defaults to 0 and is a compilation-time change one; * must do to get an error message back.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:6,Simpl,Simple,6,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,1,['Simpl'],['Simple']
Usability,"/*; * Structure for [] character-set representation. Character sets are; * done as bit vectors, grouped 8 to a byte vector for compactness.; * The individual set therefore has both a pointer to the byte vector; * and a mask to pick out the relevant bit of each byte. A hash code; * simplifies testing whether two sets could be identical.; *; * This will get trickier for multicharacter collating elements. As; * preliminary hooks for dealing with such things, we also carry along; * a string of multi-character elements, and decide the size of the; * vectors at run time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex2.h:282,simpl,simplifies,282,interpreter/llvm-project/llvm/lib/Support/regex2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex2.h,1,['simpl'],['simplifies']
Usability,"/*; * The poop on this scaling stuff is as follows:; *; * Each 1-D DCT step produces outputs which are a factor of sqrt(N); * larger than the true DCT outputs. The final outputs are therefore; * a factor of N larger than desired; since N=8 this can be cured by; * a simple right shift at the end of the algorithm. The advantage of; * this arrangement is that we save two multiplications per 1-D DCT,; * because the y0 and y4 outputs need not be divided by sqrt(N).; * In the IJG code, this factor of 8 is removed by the quantization step; * (in jcdctmgr.c), NOT in this module.; *; * We have to do addition and subtraction of the integer inputs, which; * is no problem, and multiplication by fractional constants, which is; * a problem to do in integer arithmetic. We multiply all the constants; * by CONST_SCALE and convert them to integer constants (thus retaining; * CONST_BITS bits of precision in the constants). After doing a; * multiplication we have to divide the product by CONST_SCALE, with proper; * rounding, to produce the correct output. This division can be done; * cheaply as a right shift of CONST_BITS bits. We postpone shifting; * as long as possible so that partial sums can be added together with; * full fractional precision.; *; * The outputs of the first pass are scaled up by PASS1_BITS bits so that; * they are represented to better-than-integral precision. These outputs; * require BITS_IN_JSAMPLE + PASS1_BITS + 3 bits; this fits in a 16-bit word; * with the recommended scaling. (For 12-bit sample data, the intermediate; * array is INT32 anyway.); *; * To avoid overflow of the 32-bit intermediate results in pass 2, we must; * have BITS_IN_JSAMPLE + CONST_BITS + PASS1_BITS <= 26. Error analysis; * shows that the values given below are the most effective.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:266,simpl,simple,266,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['simpl'],['simple']
Usability,"/*; * The poop on this scaling stuff is as follows:; *; * Each 1-D IDCT step produces outputs which are a factor of sqrt(N); * larger than the true IDCT outputs. The final outputs are therefore; * a factor of N larger than desired; since N=8 this can be cured by; * a simple right shift at the end of the algorithm. The advantage of; * this arrangement is that we save two multiplications per 1-D IDCT,; * because the y0 and y4 inputs need not be divided by sqrt(N).; *; * We have to do addition and subtraction of the integer inputs, which; * is no problem, and multiplication by fractional constants, which is; * a problem to do in integer arithmetic. We multiply all the constants; * by CONST_SCALE and convert them to integer constants (thus retaining; * CONST_BITS bits of precision in the constants). After doing a; * multiplication we have to divide the product by CONST_SCALE, with proper; * rounding, to produce the correct output. This division can be done; * cheaply as a right shift of CONST_BITS bits. We postpone shifting; * as long as possible so that partial sums can be added together with; * full fractional precision.; *; * The outputs of the first pass are scaled up by PASS1_BITS bits so that; * they are represented to better-than-integral precision. These outputs; * require BITS_IN_JSAMPLE + PASS1_BITS + 3 bits; this fits in a 16-bit word; * with the recommended scaling. (To scale up 12-bit sample data further, an; * intermediate INT32 array would be needed.); *; * To avoid overflow of the 32-bit intermediate results in pass 2, we must; * have BITS_IN_JSAMPLE + CONST_BITS + PASS1_BITS <= 26. Error analysis; * shows that the values given below are the most effective.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:268,simpl,simple,268,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['simpl'],['simple']
Usability,"/*; * These macros provide the in-line portion of bit fetching.; * Use CHECK_BIT_BUFFER to ensure there are N bits in get_buffer; * before using GET_BITS, PEEK_BITS, or DROP_BITS.; * The variables get_buffer and bits_left are assumed to be locals,; * but the state struct might not be (jpeg_huff_decode needs this).; *	CHECK_BIT_BUFFER(state,n,action);; *		Ensure there are N bits in get_buffer; if suspend, take action.; * val = GET_BITS(n);; *		Fetch next N bits.; * val = PEEK_BITS(n);; *		Fetch next N bits without removing them from the buffer.; *	DROP_BITS(n);; *		Discard next N bits.; * The value N should be a simple variable, not an expression, because it; * is evaluated multiple times.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:619,simpl,simple,619,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,2,['simpl'],['simple']
Usability,"/*; * These routines are concerned with the time-critical task of mapping input; * colors to the nearest color in the selected colormap.; *; * We re-use the histogram space as an ""inverse color map"", essentially a; * cache for the results of nearest-color searches. All colors within a; * histogram cell will be mapped to the same colormap entry, namely the one; * closest to the cell's center. This may not be quite the closest entry to; * the actual input color, but it's almost as good. A zero in the cache; * indicates we haven't found the nearest color for that cell yet; the array; * is cleared to zeroes before starting the mapping pass. When we find the; * nearest color for a cell, its colormap index plus one is recorded in the; * cache for future use. The pass2 scanning routines call fill_inverse_cmap; * when they need to use an unfilled entry in the cache.; *; * Our method of efficiently finding nearest colors is based on the ""locally; * sorted search"" idea described by Heckbert and on the incremental distance; * calculation described by Spencer W. Thomas in chapter III.1 of Graphics; * Gems II (James Arvo, ed. Academic Press, 1991). Thomas points out that; * the distances from a given colormap entry to each cell of the histogram can; * be computed quickly using an incremental method: the differences between; * distances to adjacent cells themselves differ by a constant. This allows a; * fairly fast implementation of the ""brute force"" approach of computing the; * distance from every colormap entry to every histogram cell. Unfortunately,; * it needs a work array to hold the best-distance-so-far for each histogram; * cell (because the inner loop has to be over cells, not colormap entries).; * The work array elements have to be INT32s, so the work array would need; * 256Kb at our recommended precision. This is not feasible in DOS machines.; *; * To get around these problems, we apply Thomas' method to compute the; * nearest colors for only the cells within a small sub",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:593,clear,cleared,593,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['clear'],['cleared']
Usability,"/*; * This file contains a few macros to help track; * the edge of a filled object. The object is assumed; * to be filled in scanline order, and thus the; * algorithm used is an extension of Bresenham's line; * drawing algorithm which assumes that y is always the; * major axis.; * Since these pieces of code are the same for any filled shape,; * it is more convenient to gather the library in one; * place, but since these pieces of code are also in; * the inner loops of output primitives, procedure call; * overhead is out of the question.; * See the author for a derivation if needed.; */; /*; * In scan converting polygons, we want to choose those pixels; * which are inside the polygon. Thus, we add .5 to the starting; * x coordinate for both left and right edges. Now we choose the; * first pixel which is inside the pgon for the left edge and the; * first pixel which is outside the pgon for the right edge.; * Draw the left pixel, but not the right.; *; * How to add .5 to the starting x coordinate:; * If the edge is moving to the right, then subtract dy from the; * error term from the general form of the algorithm.; * If the edge is moving to the left, then add dy to the error term.; *; * The reason for the difference between edges moving to the left; * and edges moving to the right is simple: If an edge is moving; * to the right, then we want the algorithm to flip immediately.; * If it is moving to the left, then we don't want it to flip until; * we traverse an entire pixel.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:1303,simpl,simple,1303,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['simpl'],['simple']
Usability,"/*; * This version handles any integral sampling ratios.; * This is not used for typical JPEG files, so it need not be fast.; * Nor, for that matter, is it particularly accurate: the algorithm is; * simple replication of the input pixel onto the corresponding output; * pixels. The hi-falutin sampling literature refers to this as a; * ""box filter"". A box filter tends to introduce visible artifacts,; * so if you are actually going to use 3:1 or 4:1 sampling ratios; * you would be well advised to improve this code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:199,simpl,simple,199,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['simpl'],['simple']
Usability,/*; * We use a two pass approach to keep memory management simple; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c:59,simpl,simple,59,graf2d/win32gdk/gdk/src/glib/guniprop.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c,2,['simpl'],['simple']
Usability,"/*; * deflate.c by Jean-loup Gailly.; *; * PURPOSE; *; * Identify new text as repetitions of old text within a fixed-; * length sliding window trailing behind the new text.; *; * DISCUSSION; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many info-zippers for bug reports and testing.; *; * REFERENCES; *; * APPNOTE.TXT documentation file in PKZIP 1.93a distribution.; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:641,simpl,simple,641,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['simpl'],['simple']
Usability,"/*; * jaricom.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains probability estimation tables for common use in; * arithmetic entropy encoding and decoding routines.; *; * This data represents Table D.2 in the JPEG spec (ISO/IEC IS 10918-1; * and CCITT Recommendation ITU-T T.81) and Table 24 in the JBIG spec; * (ISO/IEC IS 11544 and CCITT Recommendation ITU-T T.82).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jaricom.c:45,Guid,Guido,45,graf2d/asimage/src/libAfterImage/libjpeg/jaricom.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jaricom.c,1,['Guid'],['Guido']
Usability,"/*; * jcapimin.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * Modified 2003-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains application interface code for the compression half; * of the JPEG library. These are the ""minimum"" API routines that may be; * needed in either the normal full-compression case or the transcoding-only; * case.; *; * Most of the routines intended to be called directly by an application; * are in this file or in jcapistd.c. But also see jcparam.c for; * parameter-setup helper routines, jcomapi.c for routines shared by; * compression and decompression, and jctrans.c for the transcoding case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,1,['Guid'],['Guido']
Usability,"/*; * jcarith.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains portable arithmetic entropy encoding routines for JPEG; * (implementing the ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81).; *; * Both sequential and progressive modes are supported in this single module.; *; * Suspension is not currently supported in this module.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:45,Guid,Guido,45,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['Guid'],['Guido']
Usability,"/*; * jchuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy encoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting output suspension.; * If the data destination module demands suspension, we want to be able to; * back up to the start of the current MCU. To do this, we copy state; * variables into local working storage, and update them back to the; * permanent JPEG objects only upon successful completion of an MCU.; *; * We do not support output suspension for the progressive JPEG mode, since; * the library currently does not allow multiple-scan files to be written; * with output suspension.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:87,Guid,Guido,87,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['Guid'],['Guido']
Usability,"/*; * jcmarker.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains routines to write JPEG datastream markers.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,1,['Guid'],['Guido']
Usability,"/*; * jcmaster.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2003-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains master control logic for the JPEG compressor.; * These routines are concerned with parameter validation, initial setup,; * and inter-pass control (determining the number of passes and the work ; * to be done in each pass).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['Guid'],['Guido']
Usability,"/*; * jcparam.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2003-2008 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains optional default-setting code for the JPEG compressor.; * Applications do not have to use this file, but those that don't use it; * must know a lot more about the innards of the JPEG code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:88,Guid,Guido,88,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['Guid'],['Guido']
Usability,"/*; * jctrans.c; *; * Copyright (C) 1995-1998, Thomas G. Lane.; * Modified 2000-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains library routines for transcoding compression,; * that is, writing raw DCT coefficient arrays to an output JPEG file.; * The routines in jcapimin.c will also be needed by a transcoder.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c:88,Guid,Guido,88,graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,1,['Guid'],['Guido']
Usability,"/*; * jdapimin.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains application interface code for the decompression half; * of the JPEG library. These are the ""minimum"" API routines that may be; * needed in either the normal full-decompression case or the; * transcoding-only case.; *; * Most of the routines intended to be called directly by an application; * are in this file or in jdapistd.c. But also see jcomapi.c for routines; * shared by compression and decompression, and jdtrans.c for the transcoding; * case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:84,Guid,Guido,84,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['Guid'],['Guido']
Usability,"/*; * jdarith.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains portable arithmetic entropy decoding routines for JPEG; * (implementing the ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81).; *; * Both sequential and progressive modes are supported in this single module.; *; * Suspension is not currently supported in this module.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:45,Guid,Guido,45,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['Guid'],['Guido']
Usability,"/*; * jdatadst.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains compression data destination routines for the case of; * emitting JPEG data to memory or to a file (or any stdio stream).; * While these routines are sufficient for most applications,; * some will want to use a different destination manager.; * IMPORTANT: we assume that fwrite() will correctly transcribe an array of; * JOCTETs into 8-bit-wide elements on external storage. If char is wider; * than 8 bits on your machine, you may need to do some tweaking.; */; /* this is not a core library module, so it doesn't define JPEG_INTERNALS */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c:84,Guid,Guido,84,graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,1,['Guid'],['Guido']
Usability,"/*; * jdatasrc.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2009-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains decompression data source routines for the case of; * reading JPEG data from memory or from a file (or any stdio stream).; * While these routines are sufficient for most applications,; * some will want to use a different source manager.; * IMPORTANT: we assume that fread() will correctly transcribe an array of; * JOCTETs from 8-bit-wide elements on external storage. If char is wider; * than 8 bits on your machine, you may need to do some tweaking.; */; /* this is not a core library module, so it doesn't define JPEG_INTERNALS */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['Guid'],['Guido']
Usability,"/*; * jddctmgr.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2002-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the inverse-DCT management logic.; * This code selects a particular IDCT implementation to be used,; * and it performs related housekeeping chores. No code in this file; * is executed per IDCT step, only during output pass setup.; *; * Note that the IDCT routines are responsible for performing coefficient; * dequantization as well as the IDCT proper. This module sets up the; * dequantization multiplier table needed by the IDCT routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,1,['Guid'],['Guido']
Usability,"/*; * jdhuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy decoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting input suspension.; * If the data source module demands suspension, we want to be able to back; * up to the start of the current MCU. To do this, we copy state variables; * into local working storage, and update them back to the permanent; * storage only upon successful completion of an MCU.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:87,Guid,Guido,87,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['Guid'],['Guido']
Usability,"/*; * jdinput.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains input control logic for the JPEG decompressor.; * These routines are concerned with controlling the decompressor's input; * processing (marker reading and coefficient decoding). The actual input; * reading is done in jdmarker.c, jdhuff.c, and jdarith.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c:88,Guid,Guido,88,graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,1,['Guid'],['Guido']
Usability,"/*; * jdmarker.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains routines to decode JPEG datastream markers.; * Most of the complexity arises from our desire to support input; * suspension: if not all of the data for a marker is available,; * we must exit back to the application. On resumption, we reprocess; * the marker.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:84,Guid,Guido,84,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['Guid'],['Guido']
Usability,"/*; * jdmaster.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains master control logic for the JPEG decompressor.; * These routines are concerned with selecting the modules to be executed; * and with determining the number of passes and the work to be done in each; * pass.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['Guid'],['Guido']
Usability,"/*; * jdmerge.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains code for merged upsampling/color conversion.; *; * This file combines functions from jdsample.c and jdcolor.c;; * read those files first to understand what's going on.; *; * When the chroma components are to be upsampled by simple replication; * (ie, box filtering), we can save some work in color conversion by; * calculating all the output pixels corresponding to a pair of chroma; * samples at one time. In the conversion equations; *	R = Y + K1 * Cr; *	G = Y + K2 * Cb + K3 * Cr; *	B = Y + K4 * Cb; * only the Y term varies among the group of pixels corresponding to a pair; * of chroma samples, so the rest of the terms can be calculated just once.; * At typical sampling ratios, this eliminates half or three-quarters of the; * multiplications needed for color conversion.; *; * This file currently provides implementations for the following cases:; *	YCbCr => RGB color conversion only.; *	Sampling ratios of 2h1v or 2h2v.; *	No scaling needed at upsample time.; *	Corner-aligned (non-CCIR601) sampling alignment.; * Other special cases could be added, but in most applications these are; * the only common cases. (For uncommon cases we fall back on the more; * general code in jdsample.c and jdcolor.c.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c:452,simpl,simple,452,graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,1,['simpl'],['simple']
Usability,"/*; * jdsample.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * Modified 2002-2008 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains upsampling routines.; *; * Upsampling input data is counted in ""row groups"". A row group; * is defined to be (v_samp_factor * DCT_v_scaled_size / min_DCT_v_scaled_size); * sample rows of each component. Upsampling will normally produce; * max_v_samp_factor pixel rows from each row group (but this could vary; * if the upsampler is applying a scale factor of its own).; *; * An excellent reference for image resampling is; * Digital Image Warping, George Wolberg, 1990.; * Pub. by IEEE Computer Society Press, Los Alamitos, CA. ISBN 0-8186-8944-7.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['Guid'],['Guido']
Usability,"/*; * jdtrans.c; *; * Copyright (C) 1995-1997, Thomas G. Lane.; * Modified 2000-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains library routines for transcoding decompression,; * that is, reading raw DCT coefficient arrays from an input JPEG file.; * The routines in jdapimin.c will also be needed by a transcoder.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c:88,Guid,Guido,88,graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,1,['Guid'],['Guido']
Usability,"/*; * jerror.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains simple error-reporting and trace-message routines.; * These are suitable for Unix-like systems and others where writing to; * stderr is the right thing to do. Many applications will want to replace; * some or all of these routines.; *; * If you define USE_WINDOWS_MESSAGEBOX in jconfig.h or in the makefile,; * you get a Windows-specific hack to display error messages in a dialog box.; * It ain't much, but it beats dropping error messages into the bit bucket,; * which is what happens to output to stderr under most Windows C compilers.; *; * These routines are used by both the compression and decompression code.; */; /* this is not a core library module, so it doesn't define JPEG_INTERNALS */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:227,simpl,simple,227,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['simpl'],['simple']
Usability,"/*; * jerror.h; *; * Copyright (C) 1994-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file defines the error and message codes for the JPEG library.; * Edit this file to add new codes, or to translate the message strings to; * some other language.; * A set of error-reporting macros are defined too. Some applications using; * the JPEG library may wish to include this file to get the error codes; * and/or the macros.; */; /*; * To define the enum list of message codes, include this file without; * defining macro JMESSAGE. To create a message string table, include it; * again with a suitable JMESSAGE definition (see jerror.c for an example).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:87,Guid,Guido,87,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,1,['Guid'],['Guido']
Usability,"/*; * jfdctflt.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a floating-point implementation of the; * forward DCT (Discrete Cosine Transform).; *; * This implementation should be more accurate than either of the integer; * DCT implementations. However, it may not give the same results on all; * machines because of differences in roundoff behavior. Speed will depend; * on the hardware's floating point capacity.; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with a fixed-point; * implementation, accuracy is lost due to imprecise representation of the; * scaled quantization values. However, that problem does not arise if; * we use floating point arithmetic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c,2,"['Guid', 'simpl']","['Guido', 'simple']"
Usability,"/*; * jfdctfst.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a fast, not so accurate integer implementation of the; * forward DCT (Discrete Cosine Transform).; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with fixed-point math,; * accuracy is lost due to imprecise representation of the scaled; * quantization values. The smaller the quantization table entry, the less; * precise the scaled value, so this implementation does worse with high-; * quality-setting files than with low-quality ones.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c,2,"['Guid', 'simpl']","['Guido', 'simple']"
Usability,"/*; * jfdctint.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * Modification developed 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a slow-but-accurate integer implementation of the; * forward DCT (Discrete Cosine Transform).; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide FDCT routines with various input sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 output DCT block.; *; * For N<8 we fill the remaining block coefficients with zero.; * For N>8 we apply a partial N-point FDCT on the input samples, computing; * just the lower 8 frequency coefficients and discarding the rest.; *; * We must scale the output coefficients of the N-point FDCT appropriately; * to the standard 8-point FDCT level by 8/N per 1-D pass. This scaling; * is folded into the constant multipliers (pass 2) and/or final/initial; * shifting.; *; * CAUTION: We rely on t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:103,Guid,Guido,103,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['Guid'],['Guido']
Usability,"/*; * jidctflt.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * Modified 2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a floating-point implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * This implementation should be more accurate than either of the integer; * IDCT implementations. However, it may not give the same results on all; * machines because of differences in roundoff behavior. Speed will depend; * on the hardware's floating point capacity.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with a fixed-point; * implementation, accuracy is lost due to imprecise representation of the; * scaled quantization values. However, that problem does not arise if; * we use floating point arithmetic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c:84,Guid,Guido,84,graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,2,"['Guid', 'simpl']","['Guido', 'simple']"
Usability,"/*; * jidctfst.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a fast, not so accurate integer implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with fixed-point math,; * accuracy is lost due to imprecise representation of the scaled; * quantization values. The smaller the quantization table entry, the less; * precise the scaled value, so this implementation does worse with high-; * quality-setting files than with low-quality ones.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c:1199,simpl,simple,1199,graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,1,['simpl'],['simple']
Usability,"/*; * jidctint.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modification developed 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a slow-but-accurate integer implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide IDCT routines with various output sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 input DCT block.; *; * For N<8 we simply take the corresponding low-frequency coefficients of; * the 8x8 input DCT block and apply an NxN point IDCT on the sub-block; * to yield the downscaled outputs.; * This can be seen as direct low-pass downsampling from the DCT domain; * point of view rather than the usual spatial dom",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:103,Guid,Guido,103,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['Guid'],['Guido']
Usability,"/*; * jmemmgr.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the JPEG system-independent memory management; * routines. This code is usable across a wide variety of machines; most; * of the system dependencies have been isolated in a separate file.; * The major functions provided here are:; * * pool-based allocation and freeing of memory;; * * policy decisions about how to divide available memory among the; * virtual arrays;; * * control logic for swapping virtual arrays between main memory and; * backing storage.; * The separate system-dependent file provides the actual backing-storage; * access code, and it contains the policy decision about how much total; * main memory to use.; * This file is system-dependent in the sense that some of its functions; * are unnecessary in some systems. For example, if there is enough virtual; * memory so that backing storage will never be used, much of the virtual; * array control logic could be removed. (Of course, if you have that much; * memory then you shouldn't care about a little bit of unused code...); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:300,usab,usable,300,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['usab'],['usable']
Usability,"/*; * jmemnobs.c; *; * Copyright (C) 1992-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file provides a really simple implementation of the system-; * dependent portion of the JPEG memory manager. This implementation; * assumes that no backing-store files are needed: all required space; * can be obtained from malloc().; * This is very portable in the sense that it'll compile on almost anything,; * but you'd better have lots of main memory (or virtual memory) if you want; * to process big images.; * Note that the max_memory_to_use option is ignored by this implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:238,simpl,simple,238,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['simpl'],['simple']
Usability,"/*; * jmorecfg.h; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains additional configuration options that customize the; * JPEG software for special applications or support machine-dependent; * optimizations. Most users will not need to touch this file.; */; /*; * Define BITS_IN_JSAMPLE as either; * 8 for 8-bit sample values (the usual setting); * 12 for 12-bit sample values; * Only 8 and 12 are legal data precisions for lossy JPEG according to the; * JPEG standard, and the IJG code does not support anything else!; * We do not support run-time selection of data precision, sorry.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:89,Guid,Guido,89,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['Guid'],['Guido']
Usability,"/*; * jpegint.h; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file provides common declarations for the various JPEG modules.; * These declarations are considered internal to the JPEG library; most; * applications using the library shouldn't need to include this file.; */; /* Declarations for both compression & decompression */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:88,Guid,Guido,88,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['Guid'],['Guido']
Usability,"/*; * jpeglib.h; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file defines the application interface for the JPEG library.; * Most applications using the library need only include this file,; * and perhaps jerror.h if they want to know the exact error codes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:88,Guid,Guido,88,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['Guid'],['Guido']
Usability,"/*; * jutils.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains tables and miscellaneous utility routines needed; * for both compression and decompression.; * Note we prefix all global names with ""j"" to minimize conflicts with; * a surrounding application.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c:82,Guid,Guido,82,graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,1,['Guid'],['Guido']
Usability,"/*; * jversion.h; *; * Copyright (C) 1991-2010, Thomas G. Lane, Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains software version identification.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jversion.h:64,Guid,Guido,64,graf2d/asimage/src/libAfterImage/libjpeg/jversion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jversion.h,1,['Guid'],['Guido']
Usability,"/*; * mkstemp() implementation is from the GNU C library.; * Copyright (C) 1991,92,93,94,95,96,97,98,99 Free Software Foundation, Inc.; */; /**; * g_mkstemp:; * @tmpl: template filename; *; * Open a temporary file. See ""man mkstemp"" on most UNIX-like systems.; * This is a portability wrapper, which simply calls mkstemp() on systems; * that have it, and implements it in GLib otherwise.; *; * The parameter is a string that should match the rules for mktemp, i.e.; * end in ""XXXXXX"". The X string will be modified to form the name; * of a file that didn't exist.; *; * Return value: A file handle (as from open()) to the file; * opened for reading and writing. The file is opened in binary mode; * on platforms where there is a difference. The file handle should be; * closed with close(). In case of errors, -1 is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:300,simpl,simply,300,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,1,['simpl'],['simply']
Usability,"/*; * runtime test, presumed to simplify to a constant by compiler; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:32,simpl,simplify,32,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['simpl'],['simplify']
Usability,"/*; * transupp.c; *; * Copyright (C) 1997-2009, Thomas G. Lane, Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains image transformation routines and other utility code; * used by the jpegtran sample application. These are NOT part of the core; * JPEG library. But we keep these routines separate from jpegtran.c to; * ease the task of maintaining jpegtran-like programs that have other user; * interfaces.; */; /* Although this file really shouldn't have access to the library internals,; * it's helpful to let it call jround_up() and jcopy_block_row().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:64,Guid,Guido,64,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['Guid'],['Guido']
Usability,"/*; * transupp.h; *; * Copyright (C) 1997-2009, Thomas G. Lane, Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains declarations for image transformation routines and; * other utility code used by the jpegtran sample application. These are; * NOT part of the core JPEG library. But we keep these routines separate; * from jpegtran.c to ease the task of maintaining jpegtran-like programs; * that have other user interfaces.; *; * NOTE: all the routines declared here have very specific requirements; * about when they are to be executed during the reading and writing of the; * source and destination files. See the comments in transupp.c, or see; * jpegtran.c for an example of correct usage.; */; /* If you happen not to want the image transform support, disable it here */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h:64,Guid,Guido,64,graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,1,['Guid'],['Guido']
Usability,"/*; * trees.c by Jean-loup Gailly; *; * This is a new version of im_ctree.c originally written by Richard B. Wales; * for the defunct implosion method.; *; * PURPOSE; *; * Encode various sets of source values using variable-length; * binary code trees.; *; * DISCUSSION; *; * The PKZIP ""deflation"" process uses several Huffman trees. The more; * common source values are represented by shorter bit sequences.; *; * Each code tree is stored in the ZIP file in a compressed form; * which is itself a Huffman encoding of the lengths of; * all the code strings (in ascending order by source values).; * The actual code strings are reconstructed from the lengths in; * the UNZIP process, as described in the ""application note""; * (APPNOTE.TXT) distributed as part of PKWARE's PKZIP program.; *; * REFERENCES; *; * Lynch, Thomas J.; * Data Compression: Techniques and Applications, pp. 53-55.; * Lifetime Learning Publications, 1985. ISBN 0-534-03418-7.; *; * Storer, James A.; * Data Compression: Methods and Theory, pp. 49-50.; * Computer Science Press, 1988. ISBN 0-7167-8156-5.; *; * Sedgewick, R.; * Algorithms, p290.; * Addison-Wesley, 1983. ISBN 0-201-06672-6.; *; * INTERFACE; *; * void ct_init (ush *attr, int *method); * Allocate the match buffer, initialize the various tables and save; * the location of the internal file attribute (ascii/binary) and; * method (DEFLATE/STORE); *; * void ct_tally (int dist, int lc);; * Save the match info and tally the frequency counts.; *; * long flush_block (char *buf, ulg stored_len, int eof); * Determine the best encoding for the current block: dynamic trees,; * static trees or store, and output the encoded block to the zip; * file. Returns the total compressed length for the file so far.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:899,Learn,Learning,899,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,1,['Learn'],['Learning']
Usability,"/*; * xxHash - Fast Hash algorithm; * Copyright (C) 2012-2021, Yann Collet; *; * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php); *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions are; * met:; *; * * Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * * Redistributions in binary form must reproduce the above; * copyright notice, this list of conditions and the following disclaimer; * in the documentation and/or other materials provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at :; * - xxHash homepage: http://www.xxhash.com; * - xxHash source repository : https://github.com/Cyan4973/xxHash; */; // xxhash64 is based on commit d2df04efcbef7d7f6886d345861e5dfda4edacc1. Removed; // everything but a simple interface for computing xxh64.; // xxh3_64bits is based on commit d5891596637d21366b9b1dcf2c0007a3edb26a9e (July; // 2023).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/xxhash.cpp:1710,simpl,simple,1710,interpreter/llvm-project/llvm/lib/Support/xxhash.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/xxhash.cpp,1,['simpl'],['simple']
Usability,/*; - findmust - fill in must and mlen with longest mandatory literal string; *; * This algorithm could do fancy things like analyzing the operands of |; * for common subsequences. Someday. This code is simple and finds most; * of the interesting cases.; *; * Note that must and mlen got initialized during setup.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:203,simpl,simple,203,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['simpl'],['simple']
Usability,"/*; - p_simp_re - parse a simple RE, an atom possibly followed by a repetition; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:26,simpl,simple,26,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['simpl'],['simple']
Usability,"/*; // Clear buffer.; Float_t rgb[3] = {1.f, 1.f, 1.f};; if (const TColor *color = GetPadColor()); color->GetRGB(rgb[0], rgb[1], rgb[2]);; glClearColor(rgb[0], rgb[1], rgb[2], 1.);; glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx:7,Clear,Clear,7,graf3d/gl/src/TGLPlotPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx,1,['Clear'],['Clear']
Usability,"/*; ////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a PiecewiseInterpolation to more intuitively reflect the contents of the; /// product operator construction. void PiecewiseInterpolation::printMetaArgs(ostream& os) const; {; _lowIter->Reset() ;; if (_highIter) {; _highIter->Reset() ;; }. bool first(true) ;. RooAbsArg* arg1, *arg2 ;; if (_highSet.size()!=0) {. while((arg1=(RooAbsArg*)_lowIter->Next())) {; if (!first) {; os << "" + "" ;; } else {; first = false ;; }; arg2=(RooAbsArg*)_highIter->Next() ;; os << arg1->GetName() << "" * "" << arg2->GetName() ;; }. } else {. while((arg1=(RooAbsArg*)_lowIter->Next())) {; if (!first) {; os << "" + "" ;; } else {; first = false ;; }; os << arg1->GetName() ;; }. }. os << "" "" ;; }. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:159,intuit,intuitively,159,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['intuit'],['intuitively']
Usability,"/*; ////////////////////////////////////////////////////////////////////////////////; /// Virtual function called when both fSelected is false and; /// fImpliedSelected is 0. void REveDigitSet::UnSelected(); {; fSelectedSet.clear();; REveElement::UnSelected();; }. ////////////////////////////////////////////////////////////////////////////////; /// Virtual function called when both fHighlighted is false and; /// fImpliedHighlighted is 0. void REveDigitSet::UnHighlighted(); {; fHighlightedSet.clear();; REveElement::UnHighlighted();; }. */; ////////////////////////////////////////////////////////////////////////////////; /// Return tooltip for highlighted element if always-sec-select is set.; /// Otherwise return the tooltip for this element.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveDigitSet.cxx:224,clear,clear,224,graf3d/eve7/src/REveDigitSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveDigitSet.cxx,2,['clear'],['clear']
Usability,"/*; Auxiliary class to draw markers in a gl-pad.; */; ////////////////////////////////////////////////////////////////////////////////; /// Simple 1-pixel dots.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadUtils.cxx:140,Simpl,Simple,140,graf3d/gl/src/TGLPadUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadUtils.cxx,1,['Simpl'],['Simple']
Usability,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4,Clear,Clears,4,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['Clear', 'clear']","['Clears', 'clearerr']"
Usability,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */; /* checksum functions */; /*; These functions are not related to compression but are exported; anyway because they might be useful in applications using the; compression library.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:4,Clear,Clears,4,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,"['Clear', 'clear']","['Clears', 'clearerr']"
Usability,"/*; Huffman code decoding is performed using a multi-level table lookup.; The fastest way to decode is to simply build a lookup table whose; size is determined by the longest code. However, the time it takes; to build this table can also be a factor if the data being decoded; is not very long. The most common codes are necessarily the; shortest codes, so those codes dominate the decoding time, and hence; the speed. The idea is you can have a shorter table that decodes the; shorter, more probable codes, and then point to subsidiary tables for; the longer codes. The time it costs to decode the longer codes is; then traded against the time it takes to make longer tables. This results of this trade are in the variables lbits and dbits; below. lbits is the number of bits the first level table for literal/; length codes can decode in one step, and dbits is the same thing for; the distance codes. Subsequent tables are also less than or equal to; those sizes. These values may be adjusted either when all of the; codes are shorter than that, in which case the longest code length in; bits is used, or when the shortest code is *longer* than the requested; table size, in which case the length of the shortest code in bits is; used. There are two different values for the two tables, since they code a; different number of possibilities each. The literal/length table; codes 286 possible values, or in a flat code, a little over eight; bits. The distance table codes 30 possible values, or a little less; than five bits, flat. The optimum values for speed end up being; about one bit more than those, so lbits is 8+1 and dbits is 5+1.; The optimum values may differ though from machine to machine, and; possibly even between compilers. Your mileage may vary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:106,simpl,simply,106,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['simpl'],['simply']
Usability,"/*; Implementation of ""marching cubes"" algortihm for GL module. Used by; TF3GLPainter, TGLIsoPainter, TGL5DPainter.; Good and clear algorithm explanation can be found here:; http://local.wasp.uwa.edu.au/~pbourke/geometry/polygonise/; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLMarchingCubes.cxx:126,clear,clear,126,graf3d/gl/src/TGLMarchingCubes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLMarchingCubes.cxx,1,['clear'],['clear']
Usability,"/*; Implementation of ""marching cubes"" algortihm for GL module. Used by; TGLTF3Painter and TGLIsoPainter.; Good and clear algorithm explanation can be found here:; http://local.wasp.uwa.edu.au/~pbourke/geometry/polygonise/; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h:116,clear,clear,116,graf3d/gl/inc/TGLMarchingCubes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h,1,['clear'],['clear']
Usability,"/*; OWidgetMessage *wmsg = (OWidgetMessage *) msg;; TGHtmlInput *p;. switch (msg->fType) {; case MSG_BUTTON:; case MSG_RADIOBUTTON:; case MSG_CHECKBUTTON:; case MSG_LISTBOX:; case MSG_DDLISTBOX:; for (p = fFirstInput; p; p = p->fINext) {; if (p->fCnt == wmsg->id) {; switch (p->fItype) {; case INPUT_TYPE_Button:; case INPUT_TYPE_Submit:; if (p->fPForm) {; FormAction(p->fPForm, wmsg->id);; } else {; printf(""action, but no form!\n"");; }; break;. case INPUT_TYPE_Reset: {; //ClearForm(p->fPForm);; TGHtmlInput *pr;; for (pr = fFirstInput; pr; pr = pr->fINext) {; if (pr->fPForm == p->fPForm) {; switch (pr->fItype) {; case INPUT_TYPE_Radio: {; TGRadioButton *rb = (TGRadioButton *) pr->fFrame;; if (pr->MarkupArg(""checked"", 0)); rb->SetState(kButtonDown);; else; rb->SetState(kButtonUp);; break;; }. case INPUT_TYPE_Checkbox: {; TGCheckButton *cb = (TGCheckButton *) pr->fFrame;; if (pr->MarkupArg(""checked"", 0)); cb->SetState(kButtonDown);; else; cb->SetState(kButtonUp);; break;; }. case INPUT_TYPE_Text:; case INPUT_TYPE_Password: {; TGTextEntry *te = (TGTextEntry *) pr->fFrame;; te->Clear();; const char *z = pr->MarkupArg(""value"", 0);; if (z) te->AddText(0, z);; break;; }. case INPUT_TYPE_Select: {; break;; }. default:; break;; }; }; }; break;; }. case INPUT_TYPE_Radio: {; TGHtmlInput *pr;; for (pr = fFirstInput; pr; pr = pr->fINext) {; if ((pr->fPForm == p->fPForm) &&; (pr->fItype == INPUT_TYPE_Radio)) {; if (pr != p) {; if (strcmp(pr->MarkupArg(""name"", """"),; p->MarkupArg(""name"", """")) == 0); ((TGRadioButton *)pr->fFrame)->SetState(kButtonUp);; }; }; }; break;; }. case INPUT_TYPE_Select: {; break;; }. default:; break;; }; return kTRUE;; }; }; break;. default:; break;; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx:475,Clear,ClearForm,475,gui/guihtml/src/TGHtmlForm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx,2,['Clear'],"['Clear', 'ClearForm']"
Usability,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:823,clear,clear,823,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['clear'],['clear']
Usability,"/*; This function inserts bits in the inflate input stream. The intent is; that this function is used to start inflating at a bit position in the; middle of a byte. The provided bits will be used before any bytes are used; from next_in. This function should only be used with raw inflate, and; should be used before the first inflate() call after inflateInit2() or; inflateReset(). bits must be less than or equal to 16, and that many of the; least significant bits of value will be inserted in the input. If bits is negative, then the input stream bit buffer is emptied. Then; inflatePrime() can be called again to put bits in the buffer. This is used; to clear out bits leftover after feeding inflate a block description prior; to feeding inflate codes. inflatePrime returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:657,clear,clear,657,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['clear'],['clear']
Usability,"/*; This method performs Unroll and Jam. For a simple loop like:; for (i = ..); Fore(i); for (j = ..); SubLoop(i, j); Aft(i). Instead of doing normal inner or outer unrolling, we do:; for (i = .., i+=2); Fore(i); Fore(i+1); for (j = ..); SubLoop(i, j); SubLoop(i+1, j); Aft(i); Aft(i+1). So the outer loop is essetially unrolled and then the inner loops are fused; (""jammed"") together into a single loop. This can increase speed when there; are loads in SubLoop that are invariant to i, as they become shared between; the now jammed inner loops. We do this by spliting the blocks in the loop into Fore, Subloop and Aft.; Fore blocks are those before the inner loop, Aft are those after. Normal; Unroll code is used to copy each of these sets of blocks and the results are; combined together into the final form above. isSafeToUnrollAndJam should be used prior to calling this to make sure the; unrolling will be valid. Checking profitablility is also advisable. If EpilogueLoop is non-null, it receives the epilogue loop (if it was; necessary to create one and not fully unrolled).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp:47,simpl,simple,47,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,1,['simpl'],['simple']
Usability,/*; UInt_t nevents = fEventSample.size();. if (!fSubSample.empty()) fSubSample.clear();; TRandom3 *trandom = new TRandom3(fForest.size()+1);. for (UInt_t ievt=0; ievt<nevents; ievt++) { // recreate new random subsample; if(trandom->Rndm()<fBaggedSampleFraction); fSubSample.push_back(fEventSample[ievt]);; }; delete trandom;; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:79,clear,clear,79,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['clear'],['clear']
Usability,"/*; Write out the inffixed.h that is #include'd above. Defining MAKEFIXED also; defines BUILDFIXED, so the tables are built on the fly. makefixed() writes; those tables to stdout, which would be piped to inffixed.h. A small program; can simply call makefixed to do this:. void makefixed(void);. int main(void); {; makefixed();; return 0;; }. Then that can be linked with zlib built with MAKEFIXED defined and run:. a.out > inffixed.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:237,simpl,simply,237,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['simpl'],['simply']
Usability,"/*; add the list of functions f1(x1,..xn),...fn(x1,...xn). The list must contain pointers of; ROOT::Math::IMultiGenFunctions. The method requires the; the begin and end of the list iterator.; The list can be any stl container or a simple array of ROOT::Math::IMultiGenFunctions* or; whatever implementing an iterator.; If using a derivative type algorithm the function pointers must implement the; ROOT::Math::IMultiGradFunction interface; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:231,simpl,simple,231,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,1,['simpl'],['simple']
Usability,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce some; output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications).; Some output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming; more output, and updating avail_in or avail_out accordingly; avail_out; should never be zero before the call. The application can consume the; compressed output when it wants, for example when the output buffer is full; (avail_out == 0), or after each call of deflate(). If deflate returns Z_OK; and with zero avail_out, it must be called again after making room in the; output buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumualte before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In particular; avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:574,resume,resume,574,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['resume'],['resume']
Usability,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:574,resume,resume,574,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['resume'],['resume']
Usability,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:564,resume,resume,564,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['resume'],['resume']
Usability,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing; will resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there; is no more input data or no more space in the output buffer (see below; about the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming; more output, and updating the next_* and avail_* values accordingly.; The application can consume the uncompressed output when it wants, for; example when the output buffer is full (avail_out == 0), or after each; call of inflate(). If inflate returns Z_OK and with zero avail_out, it; must be called again after making room in the output buffer because there; might be more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH,; Z_FINISH, or Z_BLOCK. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate() stop; if and when it gets to the next deflate block boundary. When decoding the; zlib or gzip format, this will cause inflate() to return immediately after; the header and before the first block. When doing a raw inflate, inflate(); will go ahead and process the first block, and will return when it gets to; the end of that block, or when it runs out of data. The Z_BLOCK option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:564,resume,resume,564,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['resume'],['resume']
Usability,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is more efficient than inflate() for; file i/o applications in that it avoids copying between the output and the; sliding window by simply making the window itself the output buffer. This; function trusts the application to not change the output buffer passed by; the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free; the allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects; only the raw deflate stream to decompress. This is different from the; normal behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:244,simpl,simply,244,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['simpl'],['simply']
Usability,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:257,simpl,simply,257,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['simpl'],['simply']
Usability,"/*; void ClearDataSet() const;; Int_t FindVarIndex( const TString& ) const;; std::vector<TString> GetListOfVariables() const;; const TMatrixD* CorrelationMatrix ( const TString& className ) const;; void SetCorrelationMatrix ( const TString& className, TMatrixD* matrix );; TH2* CreateCorrelationMatrixHist( const TMatrixD* m, const TString& hName, const TString& hTitle ); const;; */; /*; unclear to me, what to test:; void SetRootDir(TDirectory* d) { fOwnRootDir = d; }; TDirectory* GetRootDir() const { return fOwnRootDir; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:9,Clear,ClearDataSet,9,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['Clear'],['ClearDataSet']
Usability,"/*; xxHash - Extremely Fast Hash algorithm; Header File; Copyright (C) 2012-2016, Yann Collet. BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php). Redistribution and use in source and binary forms, with or without; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright; notice, this list of conditions and the following disclaimer.; * Redistributions in binary form must reproduce the above; copyright notice, this list of conditions and the following disclaimer; in the documentation and/or other materials provided with the; distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You can contact the author at :; - xxHash source repository : https://github.com/Cyan4973/xxHash; */; /* based on revision d2df04efcbef7d7f6886d345861e5dfda4edacc1 Removed; * everything but a simple interface for computing XXh64. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/xxhash.h:1610,simpl,simple,1610,interpreter/llvm-project/llvm/include/llvm/Support/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/xxhash.h,1,['simpl'],['simple']
Usability,"/*===--- ConvertUTF.c - Universal Character Names conversions ---------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===------------------------------------------------------------------------=*/; /*; * Copyright © 1991-2015 Unicode, Inc. All rights reserved.; * Distributed under the Terms of Use in; * http://www.unicode.org/copyright.html.; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of the Unicode data files and any associated documentation; * (the ""Data Files"") or Unicode software and any associated documentation; * (the ""Software"") to deal in the Data Files or Software; * without restriction, including without limitation the rights to use,; * copy, modify, merge, publish, distribute, and/or sell copies of; * the Data Files or Software, and to permit persons to whom the Data Files; * or Software are furnished to do so, provided that; * (a) this copyright and permission notice appear with all copies; * of the Data Files or Software,; * (b) this copyright and permission notice appear in associated; * documentation, and; * (c) there is clear notice in each modified Data File or in the Software; * as well as in the documentation associated with the Data File(s) or; * Software that the data or software has been modified.; *; * THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; * ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT OF THIRD PARTY RIGHTS.; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; * NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:1266,clear,clear,1266,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['clear'],['clear']
Usability,"/*===--- ConvertUTF.h - Universal Character Names conversions ---------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *==------------------------------------------------------------------------==*/; /*; * Copyright © 1991-2015 Unicode, Inc. All rights reserved.; * Distributed under the Terms of Use in; * http://www.unicode.org/copyright.html.; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of the Unicode data files and any associated documentation; * (the ""Data Files"") or Unicode software and any associated documentation; * (the ""Software"") to deal in the Data Files or Software; * without restriction, including without limitation the rights to use,; * copy, modify, merge, publish, distribute, and/or sell copies of; * the Data Files or Software, and to permit persons to whom the Data Files; * or Software are furnished to do so, provided that; * (a) this copyright and permission notice appear with all copies; * of the Data Files or Software,; * (b) this copyright and permission notice appear in associated; * documentation, and; * (c) there is clear notice in each modified Data File or in the Software; * as well as in the documentation associated with the Data File(s) or; * Software that the data or software has been modified.; *; * THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; * ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT OF THIRD PARTY RIGHTS.; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; * NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:1266,clear,clear,1266,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['clear'],['clear']
Usability,"/*===---- pmmintrin.h - Implementation of SSE3 intrinsics on PowerPC -------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /* Implemented from the specification included in the Intel C++ Compiler; User Guide and Reference, version 9.0. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h:451,Guid,Guide,451,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h,1,['Guid'],['Guide']
Usability,"/*===---- smmintrin.h - Implementation of SSE4 intrinsics on PowerPC -------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /* Implemented from the specification included in the Intel C++ Compiler; User Guide and Reference, version 9.0. NOTE: This is NOT a complete implementation of the SSE4 intrinsics! */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h:451,Guid,Guide,451,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,1,['Guid'],['Guide']
Usability,"/*===---- stdarg.h - Variable argument handling ----------------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /*; * This header is designed to be included multiple times. If any of the __need_; * macros are defined, then only that subset of interfaces are provided. This; * can be useful for POSIX headers that need to not expose all of stdarg.h, but; * need to use some of its interfaces. Otherwise this header provides all of; * the expected interfaces.; *; * When clang modules are enabled, this header is a textual header. It ignores; * its header guard so that multiple submodules can export its interfaces.; * Take module SM with submodules A and B, whose headers both include stdarg.h; * When SM.A builds, __STDARG_H will be defined. When SM.B builds, the; * definition from SM.A will leak when building without local submodule; * visibility. stdarg.h wouldn't include any of its implementation headers, and; * SM.B wouldn't import any of the stdarg modules, and SM.B's `export *`; * wouldn't export any stdarg interfaces as expected. However, since stdarg.h; * ignores its header guard when building with modules, it all works as; * expected.; *; * When clang modules are not enabled, the header guards can function in the; * normal simple fashion.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdarg.h:1503,simpl,simple,1503,interpreter/llvm-project/clang/lib/Headers/stdarg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdarg.h,1,['simpl'],['simple']
Usability,"/*===---- stddef.h - Basic type definitions --------------------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /*; * This header is designed to be included multiple times. If any of the __need_; * macros are defined, then only that subset of interfaces are provided. This; * can be useful for POSIX headers that need to not expose all of stddef.h, but; * need to use some of its interfaces. Otherwise this header provides all of; * the expected interfaces.; *; * When clang modules are enabled, this header is a textual header. It ignores; * its header guard so that multiple submodules can export its interfaces.; * Take module SM with submodules A and B, whose headers both include stddef.h; * When SM.A builds, __STDDEF_H will be defined. When SM.B builds, the; * definition from SM.A will leak when building without local submodule; * visibility. stddef.h wouldn't include any of its implementation headers, and; * SM.B wouldn't import any of the stddef modules, and SM.B's `export *`; * wouldn't export any stddef interfaces as expected. However, since stddef.h; * ignores its header guard when building with modules, it all works as; * expected.; *; * When clang modules are not enabled, the header guards can function in the; * normal simple fashion.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stddef.h:1503,simpl,simple,1503,interpreter/llvm-project/clang/lib/Headers/stddef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stddef.h,1,['simpl'],['simple']
Usability,"/*===---- tmmintrin.h - Implementation of SSSE3 intrinsics on PowerPC ------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /* Implemented from the specification included in the Intel C++ Compiler; User Guide and Reference, version 9.0. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h:451,Guid,Guide,451,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h,1,['Guid'],['Guide']
Usability,"/*===---- xmmintrin.h - Implementation of SSE intrinsics on PowerPC --------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /* Implemented from the specification included in the Intel C++ Compiler; User Guide and Reference, version 9.0. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h:451,Guid,Guide,451,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,1,['Guid'],['Guide']
Usability,"/*===----------- llvm-c/LLJIT.h - OrcV2 LLJIT C bindings ----------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to the LLJIT class in *|; |* libLLVMOrcJIT.a, which provides a simple MCJIT-like ORC JIT. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; |* Note: This interface is experimental. It is *NOT* stable, and may be *|; |* changed without warning. Only C API usage documentation is *|; |* provided. See the C++ documentation for all higher level ORC API *|; |* details. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h:508,simpl,simple,508,interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,1,['simpl'],['simple']
Usability,/*ClearDSOLocalOnDeclarations=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:2,Clear,ClearDSOLocalOnDeclarations,2,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,7,['Clear'],['ClearDSOLocalOnDeclarations']
Usability,/*SimpleConstIncOnly=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:2,Simpl,SimpleConstIncOnly,2,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,2,['Simpl'],['SimpleConstIncOnly']
Usability,/*SimpleOnly*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:2,Simpl,SimpleOnly,2,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,7,['Simpl'],['SimpleOnly']
Usability,/*SimpleReduction=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:2,Simpl,SimpleReduction,2,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,2,['Simpl'],['SimpleReduction']
Usability,/*Simplify=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:2,Simpl,Simplify,2,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,1,['Simpl'],['Simplify']
Usability,"/*Subset.prototype.glyphIDs = function () {; var ret, roman, unicode, unicodeCmap, val, _ref;; unicodeCmap = this.font.cmap.tables[0].codeMap;; ret = [0];; _ref = this.subset;; for (roman in _ref) {; unicode = _ref[roman];; val = unicodeCmap[unicode];; if ((val != null) && __indexOf.call(ret, val) < 0) {; ret.push(val);; }; }; return ret.sort();; };*/; /******************************************************************/; /* function : glyphsFor */; /* comment : Returns simple glyph objects for the input character.*/; /******************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:474,simpl,simple,474,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['simpl'],['simple']
Usability,/*guid*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGrid.h:2,guid,guid,2,net/net/inc/TGrid.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGrid.h,1,['guid'],['guid']
Usability,/*in resume*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:5,resume,resume,5,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,2,['resume'],['resume']
Usability,"// !! changed from Dougs code. Now use the QualityIndex stored already; // in the nodes when no ""new"" QualityIndex calculator is given. Like this; // I can easily implement the Regression. For Regression, the pruning uses the; // same separation index as in the tree building, hence doesn't need to re-calculate; // (which would need more info than simply ""s"" and ""b"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx:349,simpl,simply,349,tmva/tmva/src/CostComplexityPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx,1,['simpl'],['simply']
Usability,"// !_WIN32; // Generic POSIX implementation.; //; // This implementation relies on synchronous signals being delivered to the; // current thread. We use a thread local object to keep track of the active; // crash recovery context, and install signal handlers to invoke HandleCrash on; // the active object.; //; // This implementation does not attempt to chain signal handlers in any; // reliable fashion -- if we get a signal outside of a crash recovery context we; // simply disable crash recovery and raise the signal again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp:470,simpl,simply,470,interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,1,['simpl'],['simply']
Usability,"// !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS); /// Fit a simple linear function, that starts in the negative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:72,simpl,simple,72,roofit/roofitcore/test/testNaNPacker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx,1,['simpl'],['simple']
Usability,"// ""Simple"" inline asms have no constraints or operands, just convert the asm; // string to escape $'s.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Stmt.cpp:4,Simpl,Simple,4,interpreter/llvm-project/clang/lib/AST/Stmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Stmt.cpp,1,['Simpl'],['Simple']
Usability,"// ""The /fp:fast option allows the compiler to reorder, combine, or simplify; // floating-point operations to optimize floating-point code for speed and; // space. The compiler may omit rounding at assignment statements,; // typecasts, or function calls. It may reorder operations or make algebraic; // transforms, for example, by use of associative and distributive laws. It; // may reorder code even if such transformations result in observably; // different rounding behavior.""; //; // ""Under /fp:precise and /fp:strict, the compiler doesn't do any mathematical; // transformation unless the transformation is guaranteed to produce a bitwise; // identical result.""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/OSTargets.cpp:68,simpl,simplify,68,interpreter/llvm-project/clang/lib/Basic/Targets/OSTargets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/OSTargets.cpp,1,['simpl'],['simplify']
Usability,"// #13: Simple 'event' generation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:8,Simpl,Simple,8,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Simpl'],['Simple']
Usability,"// #15: H1, Simple: async mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:12,Simpl,Simple,12,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Simpl'],['Simple']
Usability,"// #26: Simple generation: merge-via-file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:8,Simpl,Simple,8,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Simpl'],['Simple']
Usability,"// #27: Simple random number generation by TSelector object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:8,Simpl,Simple,8,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Simpl'],['Simple']
Usability,"// #3: Simple random number generation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:7,Simpl,Simple,7,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Simpl'],['Simple']
Usability,"// #include with a start of a block comment, but without the end.; // Need to keep all the lines until the end of the comment together.; // FIXME: This is somehow simplified check that probably does not work; // correctly if there are multiple comments on a line.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:163,simpl,simplified,163,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['simpl'],['simplified']
Usability,// $$jsroot_batch_conform$$; // specially mark script that it can be converted into the batch mode; // only for 'simple' scripts it is possible - without any extra include beside main jsroot module; // it is workaround until proper use of ES6 modules in headless browser will be possible,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.mjs:113,simpl,simple,113,tutorials/webcanv/triangle.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.mjs,1,['simpl'],['simple']
Usability,// %cmp simplified to the select condition (%cond).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:8,simpl,simplified,8,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplified']
Usability,"// 'friend'; /// 'typedef'; /// [C++11] 'constexpr'; /// [C++20] 'consteval'; /// [GNU] attributes declaration-specifiers[opt]; ///; /// storage-class-specifier:; /// 'register'; /// 'static'; /// 'extern'; /// 'mutable'; /// 'auto'; /// [GNU] '__thread'; /// [C++11] 'thread_local'; /// [C11] '_Thread_local'; ///; /// function-specifier:; /// 'inline'; /// 'virtual'; /// 'explicit'; ///; /// typedef-name:; /// identifier; ///; /// type-specifier:; /// simple-type-specifier; /// class-specifier; /// enum-specifier; /// elaborated-type-specifier; /// typename-specifier; /// cv-qualifier; ///; /// simple-type-specifier:; /// '::'[opt] nested-name-specifier[opt] type-name; /// '::'[opt] nested-name-specifier 'template'; /// simple-template-id [TODO]; /// 'char'; /// 'wchar_t'; /// 'bool'; /// 'short'; /// 'int'; /// 'long'; /// 'signed'; /// 'unsigned'; /// 'float'; /// 'double'; /// 'void'; /// [GNU] typeof-specifier; /// [GNU] '_Complex'; /// [C++11] 'auto'; /// [GNU] '__auto_type'; /// [C++11] 'decltype' ( expression ); /// [C++1y] 'decltype' ( 'auto' ); ///; /// type-name:; /// class-name; /// enum-name; /// typedef-name; ///; /// elaborated-type-specifier:; /// class-key '::'[opt] nested-name-specifier[opt] identifier; /// class-key '::'[opt] nested-name-specifier[opt] 'template'[opt]; /// simple-template-id; /// 'enum' '::'[opt] nested-name-specifier[opt] identifier; ///; /// enum-name:; /// identifier; ///; /// enum-specifier:; /// 'enum' identifier[opt] '{' enumerator-list[opt] '}'; /// 'enum' identifier[opt] '{' enumerator-list ',' '}'; ///; /// class-specifier:; /// class-head '{' member-specification[opt] '}'; ///; /// class-head:; /// class-key identifier[opt] base-clause[opt]; /// class-key nested-name-specifier identifier base-clause[opt]; /// class-key nested-name-specifier[opt] simple-template-id; /// base-clause[opt]; ///; /// class-key:; /// 'class'; /// 'struct'; /// 'union'; ///; /// cv-qualifier:; /// 'const'; /// 'volatile'; /// [GNU] restrict; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:2391,simpl,simple-template-id,2391,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,2,['simpl'],['simple-template-id']
Usability,"// 'goto recurse' is used when handling a simple ""unwrapping"" node which; // produces no output, where ImplicitlyConvertedToType and AsTemplateArg need; // to be preserved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:42,simpl,simple,42,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['simpl'],['simple']
Usability,"// 'len' does not go past the end of the current block,; // so let's make a simple copy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx:76,simpl,simple,76,io/io/src/TMemFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx,2,['simpl'],['simple']
Usability,"// 'move %FramePtr, SP' will not be recognized as an epilogue sequence.; // However, we may use this sequence if we have a frame pointer because the; // effects of the prologue can safely be undone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp:191,undo,undone,191,interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp,1,['undo'],['undone']
Usability,"// 'wb/uwb' literals are a C23 feature. We support _BitInt as a type in C++,; // but we do not currently support the suffix in C++ mode because it's not; // entirely clear whether WG21 will prefer this suffix to return a library; // type such as std::bit_int instead of returning a _BitInt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:166,clear,clear,166,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['clear'],['clear']
Usability,// 'x' is simply rewritten with some 'expr'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:10,simpl,simply,10,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['simpl'],['simply']
Usability,// ((X << A) | Y) >> A -> X if effective width of Y is not larger than A.; // We can return X as we do in the above case since OR alters no bits in X.; // SimplifyDemandedBits in InstCombine can do more general optimization for; // bit manipulation. This pattern aims to provide opportunities for other; // optimizers by supporting a simple but common case in InstSimplify.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:155,Simpl,SimplifyDemandedBits,155,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,2,"['Simpl', 'simpl']","['SimplifyDemandedBits', 'simple']"
Usability,"// (1). no terminator, simple follow through.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp:23,simpl,simple,23,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,1,['simpl'],['simple']
Usability,"// (3) Add the 'foo' module with no explicit resource tracker. The resources; // for 'foo' will be tracked by the default tracker for JD. We will not be; // able to free it separately, but its resources will still be freed when we; // clear or remove JD.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITRemovableCode/LLJITRemovableCode.cpp:235,clear,clear,235,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITRemovableCode/LLJITRemovableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITRemovableCode/LLJITRemovableCode.cpp,1,['clear'],['clear']
Usability,// (9) Clear JD. This should remove all symbols currently in the JITDylib.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITRemovableCode/LLJITRemovableCode.cpp:7,Clear,Clear,7,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITRemovableCode/LLJITRemovableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITRemovableCode/LLJITRemovableCode.cpp,1,['Clear'],['Clear']
Usability,"// (Binop (zext C), (select C, T, F)); // -> (select C, (binop 1, T), (binop 0, F)); //; // (Binop (sext C), (select C, T, F)); // -> (select C, (binop -1, T), (binop 0, F)); //; // Attempt to simplify binary operations into a select with folded args, when; // one operand of the binop is a select instruction and the other operand is a; // zext/sext extension, whose value is the select condition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:193,simpl,simplify,193,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simplify']
Usability,"// (X & Y) != 0 --> (X & Y) == Y iff Y is power-of-2.; // Revert part of the simplifySetCCWithAnd combine, to avoid an invert.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:77,simpl,simplifySetCCWithAnd,77,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplifySetCCWithAnd']
Usability,"// (X + Y) - Z -> X + (Y - Z) or Y + (X - Z) if everything simplifies.; // For example, (X + Y) - Y -> X; (Y + X) - Y -> X",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:59,simpl,simplifies,59,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplifies']
Usability,"// (X + Y) - Z; // See if ""V === Y - Z"" simplifies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:40,simpl,simplifies,40,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplifies']
Usability,"// (X | C1) & C2 --> (X & C2^(C1&C2)) | (C1&C2); // NOTE: This reduces the number of bits set in the & mask, which; // can expose opportunities for store narrowing for scalars.; // NOTE: SimplifyDemandedBits should have already removed bits from C1; // that aren't set in C2. Meaning we can replace (C1&C2) with C1 in; // above, but this feels safer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:187,Simpl,SimplifyDemandedBits,187,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['Simpl'],['SimplifyDemandedBits']
Usability,"// (bfi A, (and B, Mask1), Mask2) -> (bfi A, B, Mask2) iff; // the bits being cleared by the AND are not demanded by the BFI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:78,clear,cleared,78,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['clear'],['cleared']
Usability,"// (not clear why this does not work); // need to make in this case a likelihood from the nll and make the product with the prior",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:8,clear,clear,8,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['clear'],['clear']
Usability,"// (or (and X, C1), (and (or X, Y), C2)) -> (or (and X, C1|C2), (and Y, C2)); // TODO: Use SimplifyMultipleUseDemandedBits to peek through masks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:91,Simpl,SimplifyMultipleUseDemandedBits,91,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['Simpl'],['SimplifyMultipleUseDemandedBits']
Usability,"// (shl (add x, c1), c2) -> add (shl x, c2), (shl c1, c2); // (shl (or x, c1), c2) -> add (shl x, c2), (shl c1, c2) iff x and c1 share no; // bits; // This is a variant of; // (mul (add x, c1), c2) -> add (mul x, c2), (mul c1, c2),; //; // The normal DAG combiner will do this, but only if the add has one use since; // that would increase the number of instructions.; //; // This prevents us from seeing a constant offset that can be folded into a; // memory instruction's addressing mode. If we know the resulting add offset of; // a pointer can be folded into an addressing offset, we can replace the pointer; // operand with the add of new constant offset. This eliminates one of the uses,; // and may allow the remaining use to also be simplified.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:741,simpl,simplified,741,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['simpl'],['simplified']
Usability,// (signmask) >>l X is clearly a power of two if the one is not shifted off; // the bottom. If it is shifted off the bottom then the result is undefined.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:23,clear,clearly,23,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['clear'],['clearly']
Usability,"// * Insert all the code needed to materialize the constants; // at the proper place. E.g., Entry block or dominator block; // of each constant depending on how fancy we want to be.; // * Clear the different maps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h:188,Clear,Clear,188,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,1,['Clear'],['Clear']
Usability,"// *MENU*; // Pauses replaying",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:14,Pause,Pauses,14,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,1,['Pause'],['Pauses']
Usability,"// ,; // Ignore ""long"" and ""short"".; // They are undocumented, but widely used, section attributes which appear; // to do nothing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParsePragma.cpp:49,undo,undocumented,49,interpreter/llvm-project/clang/lib/Parse/ParsePragma.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParsePragma.cpp,1,['undo'],['undocumented']
Usability,"// - If P is a class and P has the form simple-template-id, then the; // transformed A can be a derived class of the deduced A. Likewise,; // if P is a pointer to a class of the form simple-template-id, the; // transformed A can be a pointer to a derived class pointed to by; // the deduced A.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:40,simpl,simple-template-id,40,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,2,['simpl'],['simple-template-id']
Usability,"// - If P is a class and P has the form simple-template-id, then the; // transformed A can be a derived class of the deduced A. [...]; // [...] Likewise, if P is a pointer to a class of the form; // simple-template-id, the transformed A can be a pointer to a; // derived class pointed to by the deduced A.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:40,simpl,simple-template-id,40,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,2,['simpl'],['simple-template-id']
Usability,"// -- Branch has daughters.; // One must always read the branch counter.; // In the case when one reads consecutively twice the same entry,; // the user may have cleared the TClonesArray between the GetEntry calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:162,clear,cleared,162,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['clear'],['cleared']
Usability,// -- F1 is generated from a deduction-guide and F2 is not,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:39,guid,guide,39,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['guid'],['guide']
Usability,"// -- Not found, a simple name, all done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,simpl,simple,19,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['simpl'],['simple']
Usability,"// -- The return type is the class template specialization designated by; // the template-name and template arguments corresponding to the; // template parameters obtained from the class template.; //; // We use the injected-class-name type of the primary template instead.; // This has the convenient property that it is different from any type that; // the user can write in a deduction-guide (because they cannot enter the; // context of the template), so implicit deduction guides can never collide; // with explicit ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:389,guid,guide,389,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['guid'],"['guide', 'guides']"
Usability,"// ---- first validation: simple(st) possible chi2 test; // count number of empty bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx:26,simpl,simple,26,tmva/tmva/src/PDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx,1,['simpl'],['simple']
Usability,"// ----------------------------------------------------------------------------; //; // public member functions; //; ////////////////////////////////////////////////////////////////////////////////; /// Clear classes and namespace collections.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:203,Clear,Clear,203,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['Clear'],['Clear']
Usability,"// -1 undoing on, 1 redoing on, 0 nothing in progress",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TQCommand.h:6,undo,undoing,6,core/base/inc/TQCommand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TQCommand.h,1,['undo'],['undoing']
Usability,// -5 is also simple to understand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:14,simpl,simple,14,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['simpl'],['simple']
Usability,"// -fdelayed-template-parsing is default when targeting MSVC.; // Many old Windows SDK versions require this to parse.; //; // According to; // https://learn.microsoft.com/en-us/cpp/build/reference/permissive-standards-conformance?view=msvc-170,; // MSVC actually defaults to -fno-delayed-template-parsing (/Zc:twoPhase-; // with MSVC CLI) if using C++20. So we match the behavior with MSVC here to; // not enable -fdelayed-template-parsing by default after C++20.; //; // FIXME: Given -fdelayed-template-parsing is a source of bugs, we should be; // able to disable this by default at some point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:152,learn,learn,152,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['learn'],['learn']
Usability,"// -fno-fast-math should undo -ffast-math so I return FPContract to the; // default. It is important to check it is ""fast"" (the default) so that; // --ffp-contract=off -fno-fast-math --> -ffp-contract=off",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Flang.cpp:25,undo,undo,25,interpreter/llvm-project/clang/lib/Driver/ToolChains/Flang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Flang.cpp,1,['undo'],['undo']
Usability,"// ... the address of a function,; // ... the address of a GUID [MS extension],; // ... the address of an unnamed global constant",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:59,GUID,GUID,59,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['GUID'],['GUID']
Usability,"// .... same with a simpler, slower algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:20,simpl,simpler,20,geom/geom/inc/TGeoParallelWorld.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h,1,['simpl'],['simpler']
Usability,"// ...so we need to retrieve and bring back the regular bin count, and this; // is where the fun begins.; //; // The main difficulty is that the number of regular bins is not fixed as; // one slides along a histogram axis. Using a 2D binning case as a simple; // motivating example...; //; // -1 -2 -3 -4 <- No regular bins on the underflow line of axis 1; // -5 1 2 -6 <- Some of them on middle lines of axis 1; // -7 3 4 -8; // -9 -10 -11 -12 <- No regular bins on the overflow line of axis 1; //; // As we go to higher dimensions, the geometry becomes more complex, but; // if we replace ""line"" with ""plane"", we get a similar picture in 3D when we; // slide along axis 2:; //; // No regular bins on the Some of them on the No regular bins again; // UF plane of axis 2 regular planes of ax.2 on the OF plane of ax.2; //; // -1 -2 -3 -4 -17 -18 -19 -20 -29 -30 -31 -32; // -5 -6 -7 -8 -21 1 2 -22 -33 -34 -35 -36; // -9 -10 -11 -12 -23 3 4 -24 -37 -37 -39 -40; // -13 -14 -15 -16 -25 -26 -27 -28 -41 -42 -43 -44; //; // We can generalize this to N dimensions by saying that as we slide along; // the last axis of an N-d histogram, we see an hyperplane full of overflow; // bins, then some hyperplanes with regular bins in the ""middle"" surrounded; // by overflow bins, then a last hyperplane full of overflow bins.; //; // From this, we can devise a recursive algorithm to recover the number of; // regular bins before the overflow bin we're currently looking at:; //; // - Start by processing the last histogram axis.; // - Ignore the first and last hyperplane on this axis, which only contain; // underflow and overflow bins respectively.; // - Count how many complete hyperplanes of regular bins lie before us on; // this axis, which we can do indirectly in our overflow bin based; // reasoning by computing the perimeter of the regular region and dividing; // our ""regular"" overflow bin count by that amount.; // - Now we counted previous hyperplanes on this last histogram axis, but; // we need t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:252,simpl,simple,252,hist/histv7/inc/ROOT/RHistImpl.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx,1,['simpl'],['simple']
Usability,"// .comm Foo, 0 is undefined, avoid it.; // Use .lcomm only if it supports user-specified alignment.; // Otherwise, while it would still be correct to use .lcomm in some; // cases (e.g. when Align == 1), the external assembler might enfore; // some -unknown- default alignment behavior, which could cause; // spurious differences between external and integrated assembler.; // Prefer to simply fall back to .local / .comm in this case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:387,simpl,simply,387,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['simpl'],['simply']
Usability,"// .section name [, ""flags""] [, identifier [ identifier ], identifier]; // .pushsection <same as above>; //; // Supported flags:; // a: Ignored.; // b: BSS section (uninitialized data); // d: data section (initialized data); // n: ""noload"" section (removed by linker); // D: Discardable section; // r: Readable section; // s: Shared section; // w: Writable section; // x: Executable section; // y: Not-readable section (clears 'r'); //; // Subsections are not supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/COFFAsmParser.cpp:420,clear,clears,420,interpreter/llvm-project/llvm/lib/MC/MCParser/COFFAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/COFFAsmParser.cpp,1,['clear'],['clears']
Usability,"// // DEBUG std::cout<<""Is child: "";; // if (inClass){; // if (((tagKind == kClass)) || tagKind == kEndClass) // if this is the same tag as the parent; // // or it is a closing tag, the tag is not a child; // ;// DEBUG std::cout<<""No""<<std::endl;; // // else if tagKind is one of the following, it means that we have a missing </class> tag; // // because these tag kinds cannot be children for a parent <class> tag; // else if (tagKind == kClass || tagKind == kEnum || tagKind == kVariable || tagKind == kFunction ||; // tagKind == kEndSelection || tagKind == kExclusion || tagKind == kEndExclusion){; // ROOT::TMetaUtils::Error(0,""XML at line %s. Missing </class> tag\n"",lineNumCharp);; // out.ClearSelectionRules();; // return false;; // }; // // DEBUG else std::cout<<""Yes""<<std::endl;; // }; // // DEBUG else std::cout<<""No""<<std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:695,Clear,ClearSelectionRules,695,core/dictgen/src/XMLReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx,1,['Clear'],['ClearSelectionRules']
Usability,"// // compute the error ( to be improved ) this is just a simple truncation error; // fLastError = kC1*h2*0.5*(f1+f2); //compute the error; // compute the error ( from GSL deriv implementation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RichardsonDerivator.cxx:58,simpl,simple,58,math/mathcore/src/RichardsonDerivator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RichardsonDerivator.cxx,1,['simpl'],['simple']
Usability,// /dev/null doesn't support seek/tell and can report offset of 0.; // Simply skip this patching in that case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp:71,Simpl,Simply,71,interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp,1,['Simpl'],['Simply']
Usability,"// 0 - X (doesn't simplify, but it is safe)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h:18,simpl,simplify,18,interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,1,['simpl'],['simplify']
Usability,"// 0.0 - X (doesn't simplify, but it is safe)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h:20,simpl,simplify,20,interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,1,['simpl'],['simplify']
Usability,"// 0.0 / X (doesn't simplify, but it is safe)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h:20,simpl,simplify,20,interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,1,['simpl'],['simplify']
Usability,// 1 << X is clearly a power of two if the one is not shifted off the end. If; // it is shifted off the end then the result is undefined.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:13,clear,clearly,13,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['clear'],['clearly']
Usability,"// 1-5 TEST PLC CONFINT SIMPLE GAUSSIAN : Confidence Level range is (0,1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx:24,SIMPL,SIMPLE,24,roofit/roostats/test/stressRooStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx,1,['SIMPL'],['SIMPLE']
Usability,// 1. Mask includes the LSB -> Simply shift the top N bits off,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:31,Simpl,Simply,31,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,1,['Simpl'],['Simply']
Usability,"// 15-18 TEST BC CONFINT CENTRAL SIMPLE POISSON : Observed value range is [0,100]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx:33,SIMPL,SIMPLE,33,roofit/roostats/test/stressRooStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx,1,['SIMPL'],['SIMPLE']
Usability,"// 19 TEST BC CONFINT SHORTEST SIMPLE POISSON",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx:31,SIMPL,SIMPLE,31,roofit/roostats/test/stressRooStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats.cxx,1,['SIMPL'],['SIMPLE']
Usability,"// 2-3) Pattern : {zeros}{15-bit value}{ones}; // Shift right the Imm by (48 - LZ) bits to construct a negtive 16 bits value,; // therefore we can take advantage of LI's sign-extension semantics, and then; // mask them off after rotation.; //; // +--LZ--||-15-bit-||--TO--+ +-------------|--16-bit--+; // |00000001bbbbbbbbb1111111| -> |00000000000001bbbbbbbbb1|; // +------------------------+ +------------------------+; // 63 0 63 0; // Imm (Imm >> (48 - LZ) & 0xffff); // +----sext-----|--16-bit--+ +clear-|-----------------+; // |11111111111111bbbbbbbbb1| -> |00000001bbbbbbbbb1111111|; // +------------------------+ +------------------------+; // 63 0 63 0; // LI8: sext many leading zeros RLDICL: rotate left (48 - LZ), clear left LZ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:502,clear,clear,502,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,4,['clear'],['clear']
Usability,"// 2-4) Patterns : {zeros}{ones}{15-bit value}{ones}; // {ones}{15-bit value}{ones}; // We can take advantage of LI's sign-extension semantics to generate leading; // ones, and then use RLDICL to mask off the ones in left sides (if required); // after rotation.; //; // +-LZ-FO||-15-bit-||--TO--+ +-------------|--16-bit--+; // |00011110bbbbbbbbb1111111| -> |000000000011110bbbbbbbbb|; // +------------------------+ +------------------------+; // 63 0 63 0; // Imm (Imm >> TO) & 0xffff; // +----sext-----|--16-bit--+ +LZ|---------------------+; // |111111111111110bbbbbbbbb| -> |00011110bbbbbbbbb1111111|; // +------------------------+ +------------------------+; // 63 0 63 0; // LI8: sext many leading zeros RLDICL: rotate left TO, clear left LZ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:734,clear,clear,734,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['clear'],['clear']
Usability,"// 2. Downsample to ""downSampleRatio"" res; // clear stuff",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:46,clear,clear,46,ui5/eve7/lib/OutlinePassEve.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js,1,['clear'],['clear']
Usability,// 2. Mask includes the MSB -> Simply shift the bottom N bits off,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:31,Simpl,Simply,31,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,1,['Simpl'],['Simply']
Usability,"// 2. Sort annotations in the temporal order FileCheck produced; // their associated diagnostics.; //; // This sort offers several benefits:; //; // A. On a single input line, the order of annotations reflects; // the FileCheck logic for processing directives/patterns.; // This can be helpful in understanding cases in which the; // order of the associated directives/patterns in the check; // file or on the command line either (i) does not match the; // temporal order in which FileCheck looks for matches for the; // directives/patterns (due to, for example, CHECK-LABEL,; // CHECK-NOT, or `--implicit-check-not`) or (ii) does match; // that order but does not match the order of those; // diagnostics along an input line (due to, for example,; // CHECK-DAG).; //; // On the other hand, because our presentation format presents; // input lines in order, there's no clear way to offer the; // same benefit across input lines. For consistency, it might; // then seem worthwhile to have annotations on a single line; // also sorted in input order (that is, by input column).; // However, in practice, this appears to be more confusing; // than helpful. Perhaps it's intuitive to expect annotations; // to be listed in the temporal order in which they were; // produced except in cases the presentation format obviously; // and inherently cannot support it (that is, across input; // lines).; //; // B. When diagnostics' annotations are split among multiple; // input lines, the user must track them from one input line; // to the next. One property of the sort chosen here is that; // it facilitates the user in this regard by ensuring the; // following: when comparing any two input lines, a; // diagnostic's annotations are sorted in the same position; // relative to all other diagnostics' annotations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/FileCheck/FileCheck.cpp:869,clear,clear,869,interpreter/llvm-project/llvm/utils/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/FileCheck/FileCheck.cpp,2,"['clear', 'intuit']","['clear', 'intuitive']"
Usability,// 2.5 Collect reduction resume values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:25,resume,resume,25,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['resume'],['resume']
Usability,// 32-bit constant with the low 12 bits clear,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/Sparc.h:40,clear,clear,40,interpreter/llvm-project/clang/lib/Basic/Targets/Sparc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/Sparc.h,1,['clear'],['clear']
Usability,"// 32-bit extract of a 64-bit value is just access of a subregister, so free.; // TODO: Cost of 0 hits assert, though it's not clear it's what we really; // want.; // TODO: 32-bit insert to a 64-bit SGPR may incur a non-free copy due to SGPR; // alignment restrictions, but this probably isn't important.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:127,clear,clear,127,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['clear'],['clear']
Usability,// 32-bit operations from RV64M that can't be simply matched with a pattern; // at instruction selection time. These have undefined behavior for division; // by 0 or overflow (divw) like their target independent counterparts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.h:46,simpl,simply,46,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.h,1,['simpl'],['simply']
Usability,// 3D simplex noise,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs:6,simpl,simplex,6,js/modules/three_addons.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs,1,['simpl'],['simplex']
Usability,"// 4. Compute the minimum unsigned root of the equation:; // I * (B / D) mod (N / D); // To simplify the computation, we factor out the divide by D:; // (I * B mod N) / D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:92,simpl,simplify,92,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simplify']
Usability,"// 4. Do a double shift to clear bottom and top bits, but only in; // thumb-1 mode as in thumb-2 we can use UBFX.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:27,clear,clear,27,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,1,['clear'],['clear']
Usability,"// 4. Finish the call.; // If the call doesn't return, finish the basic block and clear the; // insertion point; this allows the rest of IRGen to discard; // unreachable code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:82,clear,clear,82,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['clear'],['clear']
Usability,// 4D simplex noise,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs:6,simpl,simplex,6,js/modules/three_addons.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs,1,['simpl'],['simplex']
Usability,// ::= <expr-primary> # simple expressions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:24,simpl,simple,24,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['simpl'],['simple']
Usability,// <base-unresolved-name> ::= <simple-id>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:31,simpl,simple-id,31,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['simpl'],['simple-id']
Usability,// <base-unresolved-name> ::= <simple-id> # unresolved name; // extension ::= <operator-name> # unresolved operator-function-id; // extension ::= <operator-name> <template-args> # unresolved operator template-id; // ::= on <operator-name> # unresolved operator-function-id; // ::= on <operator-name> <template-args> # unresolved operator template-id; // ::= dn <destructor-name> # destructor or pseudo-destructor;; // # e.g. ~X or ~X<N-1>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:31,simpl,simple-id,31,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['simpl'],['simple-id']
Usability,"// <char-type> ::= 0 # char, char16_t, char32_t; // # (little endian char data in mangling); // ::= 1 # wchar_t (big endian char data in mangling); //; // <literal-length> ::= <non-negative integer> # the length of the literal; //; // <encoded-crc> ::= <hex digit>+ @ # crc of the literal including; // # trailing null bytes; //; // <encoded-string> ::= <simple character> # uninteresting character; // ::= '?$' <hex digit> <hex digit> # these two nibbles; // # encode the byte for the; // # character; // ::= '?' [a-z] # \xe1 - \xfa; // ::= '?' [A-Z] # \xc1 - \xda; // ::= '?' [0-9] # [,/\:. \n\t'-]; //; // <literal> ::= '??_C@_' <char-type> <literal-length> <encoded-crc>; // <encoded-string> '@'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp:355,simpl,simple,355,interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp,1,['simpl'],['simple']
Usability,"// <destructor-name> ::= <unresolved-type> # e.g., ~T or ~decltype(f()); // ::= <simple-id> # e.g., ~A<2*N>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:81,simpl,simple-id,81,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['simpl'],['simple-id']
Usability,"// <expression> ::= cp <simple-id> <expression>* E; // We use this mangling only when the call would use ADL except; // for being parenthesized. Per discussion with David; // Vandervoorde, 2011.04.25.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:24,simpl,simple-id,24,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['simpl'],['simple-id']
Usability,// <simple-id> ::= <source-name> [ <template-args> ],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:4,simpl,simple-id,4,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['simpl'],['simple-id']
Usability,// <template-arg> ::= <type> # type or template; // ::= X <expression> E # expression; // ::= <expr-primary> # simple expressions; // ::= J <template-arg>* E # argument pack,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:111,simpl,simple,111,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['simpl'],['simple']
Usability,// <template-arg> ::= <type> # type or template; // ::= X <expression> E # expression; // ::= <expr-primary> # simple expressions; // ::= J <template-arg>* E # argument pack; // ::= LZ <encoding> E # extension; // ::= <template-param-decl> <template-arg>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:111,simpl,simple,111,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['simpl'],['simple']
Usability,// <template-params> refer to the innermost <template-args>. Clear out any; // outer args that we may have inserted into TemplateParams.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:61,Clear,Clear,61,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,2,['Clear'],['Clear']
Usability,"// <unresolved-name>; // extension ::= srN <unresolved-type> [<template-args>] <unresolved-qualifier-level>* E <base-unresolved-name>; // ::= [gs] <base-unresolved-name> # x or (with ""gs"") ::x; // ::= [gs] sr <unresolved-qualifier-level>+ E <base-unresolved-name>; // # A::x, N::y, A<T>::z; ""gs"" means leading ""::""; // [gs] has been parsed by caller.; // ::= sr <unresolved-type> <base-unresolved-name> # T::x / decltype(p)::x; // extension ::= sr <unresolved-type> <template-args> <base-unresolved-name>; // # T::N::x /decltype(p)::N::x; // (ignored) ::= srN <unresolved-type> <unresolved-qualifier-level>+ E <base-unresolved-name>; //; // <unresolved-qualifier-level> ::= <simple-id>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:675,simpl,simple-id,675,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['simpl'],['simple-id']
Usability,"// === String encodings ===; //; // JSON strings are character sequences (not byte sequences like std::string).; // We need to know the encoding, and for simplicity only support UTF-8.; //; // - When parsing, invalid UTF-8 is a syntax error like any other; //; // - When creating Values from strings, callers must ensure they are UTF-8.; // with asserts on, invalid UTF-8 will crash the program; // with asserts off, we'll substitute the replacement character (U+FFFD); // Callers can use json::isUTF8() and json::fixUTF8() for validation.; //; // - When retrieving strings from Values (e.g. asString()), the result will; // always be valid UTF-8.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:154,simpl,simplicity,154,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['simpl'],['simplicity']
Usability,"// ==========================================================================================; // REveGeoShape; // Wrapper for TGeoShape with absolute positioning and color attributes allowing display of extracted; // TGeoShape's (without an active TGeoManager) and simplified geometries (needed for NLT projections).; // ==========================================================================================",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveGeoShape.hxx:266,simpl,simplified,266,graf3d/eve7/inc/ROOT/REveGeoShape.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveGeoShape.hxx,1,['simpl'],['simplified']
Usability,// ==============================================================================================; /** \class RFieldElement; \ingroup rbrowser; \brief Browsing element representing of RField; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-03-08; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx:357,Feedback,Feedback,357,gui/browsable/src/RNTupleBrowseProvider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx,1,['Feedback'],['Feedback']
Usability,// ==============================================================================================; /** \class RFieldProvider; \ingroup rbrowser; \brief Base class for provider of RNTuple drawing; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-03-09; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RFieldProvider.hxx:361,Feedback,Feedback,361,gui/browsable/src/RFieldProvider.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RFieldProvider.hxx,1,['Feedback'],['Feedback']
Usability,// ==============================================================================================; /** \class RFieldsIterator; \ingroup rbrowser; \brief Iterator over RNTuple fields; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-03-08; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx:348,Feedback,Feedback,348,gui/browsable/src/RNTupleBrowseProvider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx,1,['Feedback'],['Feedback']
Usability,// ==============================================================================================; /** \class RNTupleBrowseProvider; \ingroup rbrowser; \brief Provider for browsing RNTuple classes; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-03-08; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx:363,Feedback,Feedback,363,gui/browsable/src/RNTupleBrowseProvider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx,1,['Feedback'],['Feedback']
Usability,// ==============================================================================================; /** \class RNTupleDraw6Provider; \ingroup rbrowser; \brief Provider for RNTuple drawing on TCanvas; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-03-09; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleDraw6Provider.cxx:364,Feedback,Feedback,364,gui/browsable/src/RNTupleDraw6Provider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleDraw6Provider.cxx,1,['Feedback'],['Feedback']
Usability,// ==============================================================================================; /** \class RNTupleDraw7Provider; \ingroup rbrowser; \brief Provider for RNTuple drawing on RCanvas; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-03-09; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleDraw7Provider.cxx:364,Feedback,Feedback,364,gui/browsable/src/RNTupleDraw7Provider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleDraw7Provider.cxx,1,['Feedback'],['Feedback']
Usability,// ==============================================================================================; /** \class RNTupleElement; \ingroup rbrowser; \brief Browsing element representing of RNTuple; \author Sergey Linev <S.Linev@gsi.de>; \date 2021-03-08; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx:359,Feedback,Feedback,359,gui/browsable/src/RNTupleBrowseProvider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RNTupleBrowseProvider.cxx,1,['Feedback'],['Feedback']
Usability,"// >i noticed that .include doesn't list the standard directories like; // >/usr/include or /usr/include/CC.; // >; // >how can i get a list of all the directories the interpreter will; // >search through when the user does a #include<...> ?; //; // Right now, there is no easy command to tell you about it. Instead, I can; // describe it here.; //; // 1) CINT first searches current working directory for #include ""xxx""; // (#include <xxx> does not); //; // 2) CINT searches include path directories given by -I option; //; // 3) CINT searches following standard include directories.; // $CINTSYSDIR/include; // $CINTSYSDIR/stl; // $CINTSYSDIR/msdev/include if VC++4.0; // $CINTSYSDIR/sc/include if Symantec C++; // /usr/include; // /usr/include/g++ if gcc,g++; // /usr/include/CC if HP-UX; // /usr/include/codelibs if HP-UX; //; // .include command only displays 2).; //; // Thank you; // Masaharu Goto; // 1) current dir; // ----------------------------------------------; // N/A; // 2) -I option (and #pragma includepath); // ----------------------------------------------; // get this part of the include path from the interpreter; // and stick it in a tmp file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:788,UX,UX,788,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,2,['UX'],['UX']
Usability,"// @(#)Root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; // Updated by: Omar Zapata, Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors : *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Factory; \ingroup TMVA. This is the main MVA steering class.; It creates all MVA methods, and guides them through the training, testing and; evaluation phases.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:1733,guid,guides,1733,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,1,['guid'],['guides']
Usability,"// @(#)root/:$Id: 5400e36954e1dc109fcfc306242c30234beb7312 $; // Author: Sergey Linev, Rene Brun 10.05.2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TBufferXML; \ingroup IO. Class for serializing/deserializing object to/from xml. The simple way to create XML representation is:; ~~~{.cpp}; TNamed *obj = new TNamed(""name"", ""title"");; TString xml = TBufferXML::ToXML(obj);; ~~~; Produced xml can be decoded into new object:; ~~~{.cpp}; TNamed *obj2 = nullptr;; TBufferXML::FromXML(obj2, xml);; ~~~. TBufferXML class uses streaming mechanism, provided by ROOT system,; therefore most of ROOT and user classes can be stored to xml.; There are limitations for complex objects like TTree, which can not be converted to xml.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx:564,simpl,simple,564,io/xml/src/TBufferXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TUUID; \ingroup Base. This class defines a UUID (Universally Unique IDentifier), also; known as GUIDs (Globally Unique IDentifier). A UUID is 128 bits; long, and if generated according to this algorithm, is either; guaranteed to be different from all other UUIDs/GUIDs generated; until 3400 A.D. or extremely likely to be different. UUIDs were; originally used in the Network Computing System (NCS) and; later in the Open Software Foundation's (OSF) Distributed Computing; Environment (DCE). \note In the way this UUID is constructed, when used outside of; their original concept (NCS), they are actually not Globally unique; and indeed multiple distinct concurrent processes are actually likely; to generate the same UUID. Technically this is because the UUID is; constructed only from the node information and time information.; To make a globally unique number, this needs to be combined with; TProcessUUID. Structure of universal unique IDs (UUIDs). Depending on the network data representation, the multi-; octet unsigned integer fields are subject to byte swapping; when communicated between dissimilar endian machines.; ~~~ {.cpp}; +-----------------------------------+; | low 32 bits of time | 0-3 .fTimeLow; +-------------------------------+----; | mid 16 bits of time | 4-5 .fTimeMid; +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:526,GUID,GUIDs,526,core/base/src/TUUID.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx,2,['GUID'],['GUIDs']
Usability,"// @(#)root/base:$Id$; // Author: R. Hatcher 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimeStamp; \ingroup Base. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; ~~~ {.cpp}; struct timespec; {; time_t tv_sec; // seconds; long tv_nsec; // nanoseconds; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC; ~~~; No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; `Jan 18, 19:14:07, 2038`.; If this experiment is still going when it becomes significant; someone will have to deal with it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:918,simpl,simply,918,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,1,['simpl'],['simply']
Usability,"// @(#)root/base:$Id$; // Author: Timur Pocheptsov 20/3/2012; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TColorGradient; \ingroup Base; \ingroup GraphicsAtt. TColorGradient extends basic TColor.; Actually, this is not a simple color, but linear gradient + shadow; for filled area. By inheriting from TColor, gradients can be placed; inside gROOT's list of colors and use it in all TAttXXX descendants; without modifying any existing code. Shadow, of course, is not a property of any color, and gradient is; not, but this is the best way to add new attributes to filled area; without re-writing all the graphics code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColorGradient.cxx:546,simpl,simple,546,core/base/src/TColorGradient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColorGradient.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/base:$Id$; // Author: Valeriy Onuchin 04/27/2004; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TQCommand; \ingroup Base. The Command design pattern is based on the idea, that all editing; in an application is done by creating instances of command objects.; Command objects apply changes to the edited object and then are; stored on a command stack. Furthermore, each command knows how to; undo its changes to bring the edited object back to its previous; state. As long as the application only uses command objects to; change the state of the edited object, it is possible to undo; a sequence of commands by traversing the command stack downwards and; calling the ""undo"" method of each command in turn. It is also; possible to redo a sequence of commands by traversing the command; stack upwards and calling the ""redo"" method of each command. Examples:. 1. Create a new command; ~~~ {.cpp}; TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");; ~~~; - 1st parameter - the name of class; - 2nd parameter - object; - 3rd parameter - the name of do/redo method; - 4th parameter - the name of undo method; Since redo,undo methods are the same, undo name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");; ~~~; For objects derived from TObject class name can be omitted, e.g.; ~~~ {.cpp}; TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");; ~~~. 2. Setting undo, redo parameters.; ~~~ {.cpp}; Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color. com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);; ~~~; 1st argument - the nu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx:725,undo,undo,725,core/base/src/TQCommand.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx,3,['undo'],['undo']
Usability,"// @(#)root/base:$Id: 8944840ba34631ec28efc779647618db43c0eee5 $; // Author: Fons Rademakers 15/09/95; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSystem; \ingroup Base. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:849,simpl,simple,849,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObjArray; \ingroup Containers; An array of TObjects. The array expands automatically when; objects are added (shrinking can be done by hand using Expand(),; how nice to have meaningful names -:)).; Use operator[] to have ""real"" array behaviour. Note on ownership and copy:; By default the TObjArray does not own the objects it points to and; will not delete them unless explicitly asked (via a call to the; Delete member function). To assign ownership of the content to; the array, call:; ~~~ {.cpp}; myarr->SetOwner(kTRUE);; ~~~; When the array owns its content a call to Clear or the deletion of; the array itself will lead to the deletion of its contents. You can either make a shallow copy of the array:; ~~~ {.cpp}; otherarr = new TObjArray(*myarr);; *otherarr = *myarr;; ~~~; in which case ownership (if any) is not transfered but the other; array points to the same object as the original array. Note that; if the content of either array is deleted the other array is not; notified in any way (i.e. still points to the now deleted objects). You can also make a deep copy of the array:; ~~~ {.cpp}; otherarr = (TObjArray*)myarr->Clone();; ~~~; in which case the array and the content are both duplicated (i.e.; otherarr and myarr do not point to the same objects). If myarr; is set to the be the owner of its content, otherarr will also be; set to the owner of its own content.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:1003,Clear,Clear,1003,core/cont/src/TObjArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx,1,['Clear'],['Clear']
Usability,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:215,simpl,simple,215,core/cont/src/TBits.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/foam:$Id$; // Author: S. Jadach <mailto:Stanislaw.jadach@ifj.edu.pl>, P.Sawicki <mailto:Pawel.Sawicki@ifj.edu.pl>; /** \class TFoam. TFoam is the main class of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM. ### FOAM Version 1.02M. \authors; S. Jadach and P.Sawicki; Institute of Nuclear Physics, Cracow, Poland; Stanislaw. Jadach@ifj.edu.pl, Pawel.Sawicki@ifj.edu.pl. ### What is FOAM for?. - Suppose you want to generate randomly points (vectors) according to; an arbitrary probability distribution in n dimensions,; for which you supply your own method. FOAM can do it for you!; Even if your distributions has quite strong peaks and is discontinuous!; - FOAM generates random points with weight one or with variable weight.; - FOAM is capable to integrate using efficient ""adaptive"" MC method.; (The distribution does not need to be normalized to one.). ### How does it work?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:942,simpl,simplified,942,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['simpl'],['simplified']
Usability,"// @(#)root/ged:$Id$; // Author: Carsten Hof 16/08/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGraphEditor; \ingroup ged. Implements GUI for graph attributes. Title': set the title of the graph; Change the Shape of the graph:; 'No Line' = "" "": just draw unconnected points; 'Simple Line' = ""L"":simple poly line between every point is drawn; 'Smooth Line' = ""C"":smooth curve is drawn; 'Bar Chart' = ""B"": A bar chart is drawn at each point; 'Fill Area' = ""F"": A fill area is drawn; Check box: 'Marker On/Off' Set Marker visible/invisible. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGraphEditor.cxx:605,Simpl,Simple,605,gui/ged/src/TGraphEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGraphEditor.cxx,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"// @(#)root/ged:$Id$; // Author: Carsten Hof 16/08/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TH1Editor; \ingroup ged. Editor for changing TH1 histogram attributes, rebinning & fitting.; For all possible draw options (there are a few which are not implementable; in graphical user interface) see THistPainter::Paint. These changes can be made via the TH1Editor:; Style Tab:; 'Line' : change Line attributes (color, thickness); see TAttLineEditor; 'Fill' : change Fill attributes (color, pattern); see TAttFillEditor; 'Title' : TextEntry: set the title of the histogram; 'Histogram': change the draw options of the histogram; 'Plot' : Radiobutton: draw a 2D or 3D plot of the histogram; according to the Plot dimension there will be; different drawing possibilities (ComboBoxes/; CheckBoxes); 2d Plot:; 'Error' : ComboBox: add different error bars to the histogram; (no errors, simple, ..., see THistPainter::Paint; 'Add' : ComboBox: further things which can be added to the; histogram (None, simple/smooth line, fill area; 'Simple Drawing': CheckBox: draw a simple histogram without; errors (= ""HIST"" drawoption). In combination with; some other draw options an outer line is drawn on; top of the histogram; 'Show markers': CheckBox: draw a marker on to of each bin (=""P""; drawoption); 'Draw bar chart': CheckBox: draw a bar chart (=""B"" drawoption); change the Fill Color with Fill in the Style Tab; => will show Bar menue in the Style Tab; 'Bar option': CheckBox: draw a bar chart (=""BAR"" drawoption); => will show Bar menue in the Style Tab; 3d Plot:; 'Type' : ComboBox: set histogram type Lego-Plot or Surface; draw(Lego, Lego1.2, Surf, Surf1..5); see THistPainter::Pa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:1207,simpl,simple,1207,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/ged:$Id$; // Author: Guido Volpi 04/10/2007; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPieEditor.h:33,Guid,Guido,33,gui/ged/inc/TPieEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPieEditor.h,1,['Guid'],['Guido']
Usability,"// @(#)root/ged:$Id$; // Author: Guido Volpi 12/10/2007; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPieEditor; \ingroup ged. Implements GUI for pie-chart attributes. 'Title': set the title of the graph. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TPieEditor.cxx:33,Guid,Guido,33,gui/ged/src/TPieEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TPieEditor.cxx,1,['Guid'],['Guido']
Usability,"// @(#)root/ged:$Id$; // Author: Marek Biskup, Ilka Antcheva 02/08/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /* \class TGedEditor; \ingroup ged. The main class of ROOT graphics editor. It manages the appearance; of objects editors according to the selected object in the canvas; (an object became selected after the user click on it using the; left-mouse button). Every object editor provides an object specific GUI and follows a; simple naming convention: it has as a name the object class name; concatenated with 'Editor' (e.g. for TGraph objects the object; editor is TGraphEditor). The ROOT graphics editor can be activated by selecting 'Editor'; from the View canvas menu, or SetLine/Fill/Text/MarkerAttributes; from the context menu. The algorithm in use is simple: according to; the selected object <obj> in the canvas it looks for a class name; <obj>Editor. If a class with this name exists, the editor verifies; that this class derives from the base editor class TGedFrame.; It makes an instance of the object editor, scans all object base; classes searching the corresponding object editors and makes an; instance of the base class editor too. Once the object editor is in; place, it sets the user interface elements according to the object; state and is ready for interactions. When a new object of a; different class is selected, a new object editor is loaded in the; editor frame. The old one is cached in memory for potential reuse. Any created canvas will be shown with the editor if you have a; .rootrc file in your working directory containing the line:; Canvas.ShowEditor: true. An created object can be set as selected in a macro by:; canvas->Selected(parent_p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx:753,simpl,simple,753,gui/ged/src/TGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 15/01/2020; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoVector3; \ingroup Geometry_classes; Simple 3-vector representation; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVector3.cxx:469,Simpl,Simple,469,geom/geom/src/TGeoVector3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVector3.cxx,1,['Simpl'],['Simple']
Usability,"// @(#)root/graf:$Id$; // Author: Guido Volpi, Olivier Couet 03/11/2006; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TPie.h:34,Guid,Guido,34,graf2d/graf/inc/TPie.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TPie.h,2,['Guid'],['Guido']
Usability,"// @(#)root/gui:$Id$; // Author: Abdelhalim Ssadik 07/07/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGDockableFrame; \ingroup guiwidgets. A frame with handles that allow it to be; undocked (i.e. put in a transient frame of its own) and to be docked; again or hidden and shown again. It uses the TGDockButton, which is; a button with two vertical bars (||) and TGDockHideButton, which is; a button with a small triangle. The TGUndockedFrame is a transient; frame that on closure will put the frame back in the dock. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDockableFrame.cxx:1043,undo,undocked,1043,gui/gui/src/TGDockableFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDockableFrame.cxx,1,['undo'],['undocked']
Usability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 10/10/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGProgressBar; \ingroup guiwidgets. The classes in this file implement progress bars. Progress bars can; be used to show progress of tasks taking more then a few seconds.; TGProgressBar is an abstract base class, use either TGHProgressBar; or TGVProgressBar. TGHProgressBar can in addition show the position; as text in the bar. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGProgressBar.cxx:501,progress bar,progress bars,501,gui/gui/src/TGProgressBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGProgressBar.cxx,2,"['Progress bar', 'progress bar']","['Progress bars', 'progress bars']"
Usability,"// @(#)root/io:$Id$; // Author: Markus Frank 28/10/04; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; \class TGenCollectionStreamer; \ingroup IO. Streamer around an arbitrary container, which implements basic; functionality and iteration. In particular this is used to implement splitting and abstract; element access of any container. Access to compiled code is necessary; to implement the abstract iteration sequence and functionality like; size(), clear(), resize(). resize() may be a void operation.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionStreamer.cxx:766,clear,clear,766,io/io/src/TGenCollectionStreamer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionStreamer.cxx,1,['clear'],['clear']
Usability,"// @(#)root/io:$Id$; // Author: Markus Frank 28/10/04; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TEmulatedMapProxy; //; // Streamer around an arbitrary container, which implements basic; // functionality and iteration.; //; // In particular this is used to implement splitting and abstract; // element access of any container. Access to compiled code is necessary; // to implement the abstract iteration sequence and functionality like; // size(), clear(), resize(). resize() may be a void operation.; //; //////////////////////////////////////////////////////////////////////////; /**; \class TEmulatedMapProxy; \ingroup IO. Streamer around a map container. For optimization reasons this functionality; is separated from the TEmulatedProxy.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TEmulatedMapProxy.cxx:850,clear,clear,850,io/io/src/TEmulatedMapProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TEmulatedMapProxy.cxx,1,['clear'],['clear']
Usability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 08/2007; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h:1173,usab,usable,1173,math/mathmore/src/GSLMonteFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h,1,['usab'],['usable']
Usability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 12/2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h:1173,usab,usable,1173,math/mathmore/src/GSLMultiMinFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h,1,['usab'],['usable']
Usability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLFunctionAdapter; //; // Generic adapter for gsl_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h:1166,usab,usable,1166,math/mathmore/inc/Math/GSLFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h,1,['usab'],['usable']
Usability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, Dec 2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h:1174,usab,usable,1174,math/mathmore/src/GSLMultiFitFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h,1,['usab'],['usable']
Usability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, Mar 2011; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multiroot_function signature type; // usable for any array of function pointers; // implementing operator()(const double *x) and (if needed); // Gradient(const double *x, double * g); //; // The class is very similar to GSLMultiFitFunctionAdapter,; // but in that case the array is for function references (or value); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h:1180,usab,usable,1180,math/mathmore/src/GSLMultiRootFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h,1,['usab'],['usable']
Usability,"// @(#)root/matrix:$Id$; // Authors: Fons Rademakers, Eddy Offermann Mar 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpProbDens.cxx:864,clear,clearly,864,math/quadp/src/TQpProbDens.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpProbDens.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/minuit:$Id$; // Author: Rene Brun, Frederick James 12/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*! \class TMinuit; \see Minuit2 for a newer version of this package; \ingroup MinuitOld. Implementation in C++ of the Minuit package written by Fred James.; This is a straightforward conversion of the original Fortran version. The main changes are:. - The variables in the various Minuit labelled common blocks; have been changed to the TMinuit class data members. - The internal arrays with a maximum dimension depending on the; maximum number of parameters are now data members arrays with; a dynamic dimension such that one can fit very large problems; by simply initialising the TMinuit constructor with the maximum; number of parameters. - The include file Minuit.h has been commented as much as possible; using existing comments in the code or the printed documentation. - The original Minuit subroutines are now member functions. - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multipara",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:991,simpl,simply,991,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['simpl'],['simply']
Usability,"// @(#)root/mlp:$Id$; // Author: Christophe.Delaere@cern.ch 21/08/2002; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSynapse. This is a simple weighted bidirectional connection between; two neurons.; A network is built connecting two neurons by a synapse.; In addition to the value, the synapse can return the DeDw. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TSynapse.cxx:461,simpl,simple,461,math/mlp/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TSynapse.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/physics:$Id$; // Author: Adrian Bevan 2001; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * Copyright (C) 2001, Liverpool University. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFeldmanCousins; \legacy{TFeldmanCousins, Consider switching to RooStats for non-trivial cases.}; \ingroup Physics. Class to calculate the CL upper limit using; the Feldman-Cousins method as described in PRD V57 #7, p3873-3889. The default confidence interval calculated using this method is 90%; This is set either by having a default the constructor, or using the; appropriate fraction when instantiating an object of this class (e.g. 0.9). The simple extension to a gaussian resolution function bounded at zero; has not been addressed as yet -> `time is of the essence' as they write; on the wall of the maze in that classic game ... #### VARIABLES THAT CAN BE ALTERED; => depending on your desired precision: The initial values of fMuMin,; fMuMax, fMuStep and fNMax are those used in the PRD:; ~~~ {.cpp}; fMuMin = 0.0; fMuMax = 50.0; fMuStep= 0.005; ~~~; but there is total flexibility in changing this should you desire. see example of use in $ROOTSYS/tutorials/math/FeldmanCousins.C. see note about: ""Should I use TRolke, TFeldmanCousins, TLimit?""; in the TRolke class description. \author: Adrian Bevan, Liverpool University. Copyright Liverpool University 2001 bevan@slac.stanford.edu; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TFeldmanCousins.cxx:919,simpl,simple,919,math/physics/src/TFeldmanCousins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TFeldmanCousins.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/proofplayer:$Id$; // Author: G. Ganis May 2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatsFeedback; \ingroup proofkernel. Utility class to display PROOF stats feedback histos during queries. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx:504,feedback,feedback,504,proof/proofplayer/src/TStatsFeedback.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatsFeedback.cxx,1,['feedback'],['feedback']
Usability,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 28/10/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDrawFeedback; \ingroup proofkernel. Utility class to draw objects in the feedback list during queries.; Draws histograms in separated canvases and user-defined objects via; Draw(). Users requiring advanced treatment should implement their; own version following this example. See also TStatsFeedback. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx:515,feedback,feedback,515,proof/proofplayer/src/TDrawFeedback.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TDrawFeedback.cxx,1,['feedback'],['feedback']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TGondzioSolver.h:845,clear,clearly,845,math/quadp/inc/TGondzioSolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TGondzioSolver.h,19,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; /** \class TQpVar. Class containing the variables for the general QP formulation. In terms of in our abstract problem formulation, these variables are; the vectors x, y, z and s.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx:845,clear,clearly,845,math/quadp/src/TQpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TGondzioSolver; ///; /// Derived class of TQpSolverBase implementing Gondzio-correction; /// version of Mehrotra's original predictor-corrector algorithm.; ///; /////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx:845,clear,clearly,845,math/quadp/src/TGondzioSolver.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TMehrotraSolver; ///; /// Derived class of TQpSolverBase implementing the original Mehrotra; /// predictor-corrector algorithm; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TMehrotraSolver.cxx:845,clear,clearly,845,math/quadp/src/TMehrotraSolver.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TMehrotraSolver.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpLinSolverBase; ///; /// Implementation of main solver for linear systems; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx:845,clear,clearly,845,math/quadp/src/TQpLinSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpLinSolverDens; ///; /// Implements the aspects of the solvers for dense general QP; /// formulation that are specific to the dense case.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverDens.cxx:845,clear,clearly,845,math/quadp/src/TQpLinSolverDens.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverDens.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpLinSolverSparse; ///; /// Implements the aspects of the solvers for dense general QP; /// formulation that are specific to the dense case.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverSparse.cxx:845,clear,clearly,845,math/quadp/src/TQpLinSolverSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverSparse.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpResidual; ///; /// The Residuals class calculates and stores the quantities that appear; /// on the right-hand side of the linear systems that arise at each; /// interior-point iteration. These residuals can be partitioned into",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx:845,clear,clearly,845,math/quadp/src/TQpResidual.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpSolverBase; ///; /// The Solver class contains methods for monitoring and checking the; /// convergence status of the algorithm, methods to determine the step; /// length along a given direction, methods to define the starting ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:845,clear,clearly,845,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,1,['clear'],['clearly']
Usability,"// @(#)root/roostats:$Id$; /*************************************************************************; * Project: RooStats *; * Package: RooFit/RooStats *; * Authors: *; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke *; *************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::LikelihoodIntervalPlot; \ingroup Roostats. This class provides simple and straightforward utilities to plot a LikelihoodInterval; object. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodIntervalPlot.cxx:678,simpl,simple,678,roofit/roostats/src/LikelihoodIntervalPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodIntervalPlot.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/roostats:$Id$; /*************************************************************************; * Project: RooStats *; * Package: RooFit/RooStats *; * Authors: *; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke *; *************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::SamplingDistribution; \ingroup Roostats. This class simply holds a sampling distribution of some test statistic.; The distribution can either be an empirical distribution (eg. the samples themselves) or; a weighted set of points (eg. for the FFT method).; The class supports merging.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx:667,simpl,simply,667,roofit/roostats/src/SamplingDistribution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx,1,['simpl'],['simply']
Usability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::BayesianCalculator; \ingroup Roostats. BayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation; of a credible interval using a Bayesian method.; The class works only for one single parameter of interest and it integrates the likelihood function with the given prior; probability density function to compute the posterior probability. The result of the class is a one dimensional interval; (class SimpleInterval ), which is obtained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval objec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:917,Simpl,SimpleInterval,917,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['Simpl'],['SimpleInterval']
Usability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::SimpleLikelihoodRatioTestStat; \ingroup Roostats. TestStatistic class that returns -log(L[null] / L[alt]) where; L is the likelihood.; It is often called as the LEP Test statistic. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SimpleLikelihoodRatioTestStat.cxx:480,Simpl,SimpleLikelihoodRatioTestStat,480,roofit/roostats/src/SimpleLikelihoodRatioTestStat.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SimpleLikelihoodRatioTestStat.cxx,1,['Simpl'],['SimpleLikelihoodRatioTestStat']
Usability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Authors:; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::SimpleInterval; \ingroup Roostats. SimpleInterval is a concrete implementation of the ConfInterval interface.; It implements simple 1-dimensional intervals in a range [a,b].; In addition, you can ask it for the upper- or lower-bound.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SimpleInterval.cxx:802,Simpl,SimpleInterval,802,roofit/roostats/src/SimpleInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SimpleInterval.cxx,3,"['Simpl', 'simpl']","['SimpleInterval', 'simple']"
Usability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Original Author: Kyle Cranmer; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::ConfidenceBelt; \ingroup Roostats. ConfidenceBelt is a concrete implementation of the ConfInterval interface.; It implements simple general purpose interval of arbitrary dimensions and shape.; It does not assume the interval is connected.; It uses either a RooDataSet (eg. a list of parameter points in the interval) or; a RooDataHist (eg. a Histogram-like object for small regions of the parameter space) to; store the interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ConfidenceBelt.cxx:948,simpl,simple,948,roofit/roostats/src/ConfidenceBelt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ConfidenceBelt.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Original Author: Kyle Cranmer; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::PointSetInterval; \ingroup Roostats. PointSetInterval is a concrete implementation of the ConfInterval interface.; It implements simple general purpose interval of arbitrary dimensions and shape.; It does not assume the interval is connected.; It uses either a RooDataSet (eg. a list of parameter points in the interval) or; a RooDataHist (eg. a Histogram-like object for small regions of the parameter space) to; store the interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PointSetInterval.cxx:952,simpl,simple,952,roofit/roostats/src/PointSetInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PointSetInterval.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; // Contributions: Giovanni Petrucciani and Annapaola Decosa; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HypoTestInverter; \ingroup Roostats. A class for performing a hypothesis test inversion by scanning; the hypothesis test results of a HypoTestCalculator for various values of the; parameter of interest. By looking at the confidence level curve of the result, an; upper limit can be derived by computing the intersection of the confidence level curve with the desired confidence level.; The class implements the RooStats::IntervalCalculator interface, and returns a; RooStats::HypoTestInverterResult. The result is a SimpleInterval, which; via the method UpperLimit() returns to the user the upper limit value. ## Scanning options; The HypoTestInverter implements various options for performing the scan.; - HypoTestInverter::RunFixedScan will scan the parameter of interest using a fixed grid.; - HypoTestInverter::SetAutoScan will perform an automatic scan to find; optimally the curve. It will stop when the desired precision is obtained.; - HypoTestInverter::RunOnePoint computes the confidence level at a given point. ### CLs presciption; The class can scan the CLs+b values or alternatively CLs. For the latter,; call HypoTestInverter::UseCLs().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:1057,Simpl,SimpleInterval,1057,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['Simpl'],['SimpleInterval']
Usability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Project: RooStats *; * Package: RooFit/RooStats *; *************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MCMCIntervalPlot; \ingroup Roostats. This class provides simple and straightforward utilities to plot a MCMCInterval; object. Basic use only requires a few lines once you have an MCMCInterval*:. ~~~ {.cpp}; MCMCIntervalPlot plot(*interval);; plot.Draw();; ~~~. The standard Draw() function will currently draw the confidence interval; range with bars if 1-D and a contour if 2-D. The MCMC posterior will also be; plotted for the 1-D case. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCIntervalPlot.cxx:666,simpl,simple,666,roofit/roostats/src/MCMCIntervalPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCIntervalPlot.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/roostats:$Id$; // Authors: Sven Kreiss June 2010; // Authors: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::SamplingDistPlot; \ingroup Roostats. This class provides simple and straightforward utilities to plot SamplingDistribution; objects.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistPlot.cxx:573,simpl,simple,573,roofit/roostats/src/SamplingDistPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistPlot.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/sessionviewer:$Id$; // Author: Fons Rademakers 21/03/03; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofProgressDialog; \ingroup sessionviewer. This class provides a query progress bar. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:512,progress bar,progress bar,512,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,1,['progress bar'],['progress bar']
Usability,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/2006; /** \class TSpectrum3; \ingroup Spectrum; \brief Advanced 3-dimensional spectra processing functions; \author Miroslav Morhac. \legacy{TSpectrum3, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - Three-dimensional background estimation functions; - Three-dimensional smoothing functions; - Three-dimensional deconvolution functions; - Three-dimensional peak search functions. The algorithms in this class have been published in the following; references:. [1] M.Morhac et al.: Background elimination methods for; multidimensional coincidence gamma-ray spectra. Nuclear; Instruments and Methods in Physics Research A 401 (1997) 113-132. [2] M.Morhac et al.: Efficient one- and two-dimensional Gold; deconvolution and its application to gamma-ray spectra; decomposition. Nuclear Instruments and Methods in Physics; Research A 401 (1997) 385-408. [3] M. Morhac et al.: Efficient algorithm of multidimensional; deconvolution and its application to nuclear data processing. Digital; Signal Processing, Vol. 13, No. 1, (2003), 144-171. [4] M.Morhac et al.: Identification of peaks in multidimensional; coincidence gamma-ray spectra. Nuclear Instruments and Methods in; Research Physics A 443(2000), 108-125. These NIM papers are also available as Postscript files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1729,guid,guides,1729,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['guid'],['guides']
Usability,"// @(#)root/sql:$Id$; // Author: Sergey Linev 20/11/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TBufferSQL2; \ingroup IO. Converts data to SQL statements or read data from SQL tables. Class for serializing/deserializing object to/from SQL data base.; It redefines most of TBuffer class function to convert simple types,; array of simple types and objects to/from TSQLStructure objects.; TBufferSQL2 class uses streaming mechanism, provided by ROOT system,; therefore most of ROOT and user classes can be stored. There are; limitations for complex objects like TTree, TClonesArray, TDirectory and; few other, which can not be converted to SQL (yet).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TBufferSQL2.cxx:638,simpl,simple,638,io/sql/src/TBufferSQL2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TBufferSQL2.cxx,2,['simpl'],['simple']
Usability,"// @(#)root/test/RootIDE/:$Id$; // Author: Bertrand Bellenot 20/04/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TGRootIDE //; // //; // A simple IDE editor that uses the TGTextEdit widget. //; // It provides all functionalities of TGTextEdit as copy, paste, cut, //; // search, go to a given line number. In addition, it provides the //; // possibilities for compiling, executing or interrupting a running //; // macro. //; // //; // This class can be used in following ways: //; // - with file name as argument: //; // new TGRootIDE(""hsimple.C""); //; // - with a TMacro* as argument: //; // TMacro *macro = new TMacro(""hsimple.C""); //; // new TGRootIDE(macro); //; // //; // Basic Features: //; // //; // New Document //; // //; // To create a new blank document, select File menu / New, or click //; // the New toolbar button. It will create a new instance of //; // TGRootIDE. //; // //; // Open/Save File //; // //; // To open a file, select File menu / Open or click on the Open //; // toolbar button. This will bring up the standard File Dialog for //; // opening files. //; // If the current document has not been saved yet, you will be asked //; // either to save or abandon the changes. //; // To save the file using the same name, select File menu / Save or //; // the toolbar Save button. To change the file name use File menu / //; // Save As... or corresponding SaveAs button on the toolbar. //; // //; // Text Selection //; // //; // You can move the cursor by simply clicking on the desired location //; // with the left mouse button. To highlight some text, press the mouse //; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:543,simpl,simple,543,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/test:$Id$; // Author: Fons Rademakers 14/11/97; //; // Sample code showing off a few advanced features; // and comparing them (time-wise) with traditional ones.; //; // Simple example: downsampling a matrix, that is, creating a matrix; // that is 4 times (twice in each dimension) smaller than the original; // matrix, by picking every other sample of the latter.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/vlazy.cxx:181,Simpl,Simple,181,test/vlazy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/vlazy.cxx,1,['Simpl'],['Simple']
Usability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; ///////////////////////////////////////////////////////////////////////////////////; //; // MathCore Benchmark test suite; // ==============================; //; // This program performs tests of ROOT::Math 4D LorentzVectors comparing with TLorentzVector; // The time performing various vector operations on a collection of vectors is measured.; // The benchmarked operations are:; // - vector construction from 4 values; // - construction using a setter method; // - simple addition of all the vector pairs in the collection; // - calculation of deltaR = phi**2 + eta**2 of all vector pairs in the collection; // - two simple analysis:; // - the first requires some cut (on pt and eta) and on the invariant mass; // of the selected pairs; // - the second requires just some cut in pt, eta and delta R on all the; // vector pair; // - conversion between XYZTVectors to PtRhoEtaPhi based vectors; //; // The two analysis demonstrates, especially in the second case, the advantage of using; // vector based on cylindrical coordinate, given the fact that the time spent in the conversion is; // much less than the time spent in the analysis routine.; //; // To run the program do:; // stressVector : run standard test with collection of 1000 vectors; // stressVector 10000 : run with a collection of 10000 vectors; //; ///////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress2D.cxx:526,simpl,simple,526,math/genvector/test/stress2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress2D.cxx,2,['simpl'],['simple']
Usability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; ///////////////////////////////////////////////////////////////////////////////////; //; // MathCore Benchmark test suite; // ==============================; //; // This program performs tests of ROOT::Math 4D LorentzVectors comparing with TLorentzVector; // The time performing various vector operations on a collection of vectors is measured.; // The benchmarked operations are:; // - vector construction from 4 values; // - construction using a setter method; // - simple addition of all the vector pairs in the collection; // - calculation of deltaR = phi**2 + eta**2 of all vector pairs in the collection; // - two simple analysis:; // - the first requires some cut (on pt and eta) and on the invariant mass; // of the selected pairs; // - the second requires just some cut in pt, eta and delta R on all the; // vector pair; // - conversion between XYZTVectors to PtRhoEtaPhi based vectors; //; // The two analysis demostrates, especially in the second case, the advantage of using; // vector based on cylindrical coordinate, given the fact that the time spent in the conversion is; // much less than the time spent in the analysis routine.; //; // To run the program do:; // stressVector : run standard test with collection of 1000 vectors; // stressVector 10000 : run with a collection of 10000 vectors; //; ///////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressVector.cxx:526,simpl,simple,526,test/stressVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressVector.cxx,2,['simpl'],['simple']
Usability,"// @(#)root/test:$Id$; // Author: Rene Brun 19/01/97; ////////////////////////////////////////////////////////////////////////; //; // A simple example with a ROOT tree; // =================================; //; // This program creates :; // - a ROOT file; // - a tree; // Additional arguments can be passed to the program to control the flow; // of execution. (see comments describing the arguments in the code).; // Event nevent comp split fill tracks IMT compression; // All arguments are optional. Default is:; // Event 400 1 1 1 400 0 1; //; // In this example, the tree consists of one single ""super branch""; // The statement ***tree->Branch(""event"", &event, 64000,split);*** below; // will parse the structure described in Event.h and will make; // a new branch for each data member of the class if split is set to 1.; // - 9 branches corresponding to the basic types fType, fNtrack,fNseg,; // fNvertex,fFlag,fTemperature,fMeasures,fMatrix,fClosesDistance.; // - 3 branches corresponding to the members of the subobject EventHeader.; // - one branch for each data member of the class Track of TClonesArray.; // - one branch for the TRefArray of high Pt tracks; // - one branch for the TRefArray of muon tracks; // - one branch for the reference pointer to the last track; // - one branch for the object fH (histogram of class TH1F).; //; // if split = 0 only one single branch is created and the complete event; // is serialized in one single buffer.; // if split = -2 the event is split using the old TBranchObject mechanism; // if split = -1 the event is streamed using the old TBranchObject mechanism; // if split > 0 the event is split using the new TBranchElement mechanism.; //; // if comp = 0 no compression at all.; // if comp = 1 event is compressed.; // if comp = 2 same as 1. In addition branches with floats in the TClonesArray; // are also compressed.; // The 4th argument fill can be set to 0 if one wants to time; // the percentage of time spent in creating the event structure a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/MainEvent.cxx:137,simpl,simple,137,test/MainEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/MainEvent.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/test:$Id$; // Author: Rene Brun 19/08/96; //*-*-*-*-*-*-*Simple examples with histograms created/filled and saved*-*-*-*; //*-* ========================================================; //*-*; //*-* This program creates :; //*-* - a one dimensional histogram; //*-* - a two dimensional histogram; //*-* - a profile histogram; //*-* - an ntuple; //*-*; //*-* These objects are filled with some random numbers and saved on a file.; //*-*; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/hsimple.cxx:69,Simpl,Simple,69,test/hsimple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/hsimple.cxx,1,['Simpl'],['Simple']
Usability,// @(#)root/test:$Id$; // Author: Rene Brun 19/08/96; ////////////////////////////////////////////////////////////////////////; //; // Event and Track classes; // =======================; //; // The Event class is a naive/simple example of an event structure.; // public:; // char fType[20];; // char *fEventName; //run+event number in character format; // Int_t fNtrack;; // Int_t fNseg;; // Int_t fNvertex;; // UInt_t fFlag;; // Double32_t fTemperature;; // Int_t fMeasures[10];; // Double32_t fMatrix[4][4];; // Double32_t *fClosestDistance; //[fNvertex] indexed array!; // EventHeader fEvtHdr;; // TClonesArray *fTracks;; // TRefArray *fHighPt; //array of High Pt tracks only; // TRefArray *fMuons; //array of Muon tracks only; // TRef fLastTrack; //pointer to last track; // TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; // TH1F *fH;; // TBits fTriggerBits; //Bits triggered by this event.; //; // The EventHeader class has 3 data members (integers):; // public:; // Int_t fEvtNum;; // Int_t fRun;; // Int_t fDate;; //; //; // The Event data member fTracks is a pointer to a TClonesArray.; // It is an array of a variable number of tracks per event.; // Each element of the array is an object of class Track with the members:; // private:; // Float_t fPx; //X component of the momentum; // Float_t fPy; //Y component of the momentum; // Float_t fPz; //Z component of the momentum; // Float_t fRandom; //A random track quantity; // Float_t fMass2; //The mass square of this particle; // Float_t fBx; //X intercept at the vertex; // Float_t fBy; //Y intercept at the vertex; // Float_t fMeanCharge; //Mean charge deposition of all hits of this track; // Float_t fXfirst; //X coordinate of the first point; // Float_t fXlast; //X coordinate of the last point; // Float_t fYfirst; //Y coordinate of the first point; // Float_t fYlast; //Y coordinate of the last point; // Float_t fZfirst; //Z coordinate of the first point; // Float_t fZlast; //Z coordinate of the last ,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx:222,simpl,simple,222,test/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx,2,['simpl'],['simple']
Usability,"// @(#)root/test:$Id$; // Author: Valeriy Onuchin & Fons Rademakers 04/10/98; ///////////////////////////////////////////////////////////////////; // ROOT implementation of the simple Tetris game; // Layout and some hints were taken from Qt /examples/tetris; //; // To run this game do the following:; // $ root; // root [0] gSystem.Load(""libGpad""); // root [1] gSystem.Load(""Tetris""); // root [2] Tetris t; // <play game>; // root [2] .q; //; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx:177,simpl,simple,177,test/Tetris.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/test:$name: $:$id: filter.cxx,v 1.0 exp $; // Author: O.Couet; /// The ROOT doxygen filter implements ROOT's specific directives used to generate; /// the ROOT reference guide.; ///; /// ## In the ROOT classes; ///; /// ### `Begin_Macro` and `End_Macro`; /// The two tags where used the THtml version to generate images from ROOT code.; /// The generated picture is inlined exactly at the place where the macro is; /// defined. The Macro can be defined in two way:; /// - by direct in-lining of the C++ code; /// - by a reference to a C++ file; /// The tag `Begin_Macro` can have the parameter `(source)`. The directive becomes:; /// `Begin_Macro(source)`. This parameter allows to show the macro's code in addition.; /// `Begin_Macro` also accept the image file type as option. ""png"" or ""svg"".; /// ""png"" is the default value. For example: `Begin_Macro(source, svg)` will show; /// the code of the macro and the image will be is svg format. The ""width"" keyword; /// can be added to define the width of the picture in pixel: ""width=400"" will; /// scale a picture to 400 pixel width. This allow to define large pictures which; /// can then be scaled down to have a better definition.; ///; /// ## In the ROOT tutorials; ///; /// ROOT tutorials are also included in the ROOT documentation. The tutorials'; /// macros headers should look like:; ///; /// ~~~ {.cpp}; /// \file; /// \ingroup tutorial_hist; /// \notebook; /// Getting Contours From TH2D.; ///; /// #### Image produced by `.x ContourList.C`; /// The contours values are drawn next to each contour.; /// \macro_image; ///; /// #### Output produced by `.x ContourList.C`; /// It shows that 6 contours and 12 graphs were found.; /// \macro_output; ///; /// #### `ContourList.C`; /// \macro_code; ///; /// \authors Josh de Bever, Olivier Couet; /// ~~~; ///; /// This example shows that four new directives have been implemented:; ///; /// 1. `\macro_image`; /// The images produced by this macro are shown. A caption can be added to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:182,guid,guide,182,documentation/doxygen/filter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx,1,['guid'],['guide']
Usability,"// @(#)root/test:$name: $:$id: stressHistogram.cxx,v 1.15 2002/10/25 10:47:51 rdm exp $; // Authors: David Gonzalez Maline November 2008; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//; // //; // //; // Here there is a set of tests for the histogram classes (including //; // histograms and profiles). The methods tested work on: //; // //; // 1. Projection testing (with and without weights) //; // 2. Rebinning //; // 3. Addition, multiplication an division operations. //; // 4. Building and copying instances. //; // 5. I/O functionality (including reference with older versions). //; // 6. Labeling. //; // 7. Interpolation //; // //; // To see the tests individually, at the bottom of the file the tests //; // are exectued using the structure TTestSuite, that defines the //; // subset, the number of routines to be tested as well as the pointes //; // for these. Every tests is mean to be simple enough to be understood //; // without much comments. //; // //; // Finally, for debugging reasons, the struct compareOptions can be //; // used to define the level of output of the tests, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:934,simpl,simple,934,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:1553,simpl,simple,1553,core/foundation/inc/ThreadLocalStorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h,2,['simpl'],['simple']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * *; * Description: *; * A class describing a 'rule' *; * Each internal node of a tree defines a rule from all the parental nodes. *; * A rule consists of at least 2 nodes. *; * Input: a decision tree (in the constructor) *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Rule; \ingroup TMVA. Implementation of a rule. A rule is simply a branch or a part of a branch in a tree.; It fulfills the following:. - First node is the root node of the originating tree; - Consists of a minimum of 2 nodes; - A rule returns for a given event:; - 0 : if the event fails at any node; - 1 : otherwise; - If the rule contains <2 nodes, it returns 0 SHOULD NOT HAPPEN!. The coefficient is found by either brute force or some sort of; intelligent fitting. See the RuleEnsemble class for more info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx:1140,simpl,simply,1140,tmva/tmva/src/Rule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx,1,['simpl'],['simply']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitParams *; * *; * *; * Description: *; * A class doing the actual fitting of a linear model using rules as *; * base functions. *; * Reference paper: 1.Gradient Directed Regularization *; * Friedman, Popescu, 2004 *; * 2.Predictive Learning with Rule Ensembles *; * Friedman, Popescu, 2005 *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:528,Learn,Learning,528,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['Learn'],['Learning']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodTMlpANN *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodTMlpANN; \ingroup TMVA. This is the TMVA TMultiLayerPerceptron interface class. It provides the; training and testing the ROOT internal MLP class in the TMVA framework. Available learning methods:<br>. - Stochastic; - Batch; - SteepestDescent; - RibierePolak; - FletcherReeves; - BFGS. See the TMultiLayerPerceptron class description; for details on this ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx:1195,learn,learning,1195,tmva/tmva/src/MethodTMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx,1,['learn'],['learning']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BinarySearchTree *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::BinarySearchTree; \ingroup TMVA. A simple Binary search tree including a volume search method. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx:1117,simpl,simple,1117,tmva/tmva/src/BinarySearchTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodHMatrix *; * *; * *; * Description: *; * H-Matrix method, which is implemented as a simple comparison of *; * chi-squared estimators for signal and background, taking into account *; * the linear correlations between the input variables. *; * Method is (also) used by D0 Collaboration (FNAL) for electron *; * identification; for more information, see, eg, *; * http://www-d0.fnal.gov/d0dist/dist/packages/tau_hmchisq/devel/doc/ *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h:370,simpl,simple,370,tmva/tmva/inc/TMVA/MethodHMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h,1,['simpl'],['simple']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::MethodCFMlpANN_utils *; * *; * *; * Reference for the original FORTRAN version ""mlpl3.F"": *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand *; * Team members *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * *; * Modifications by present authors: *; * use dynamical data tables (not for all of them, but for the big ones) *; * *; * Description: *; * Utility routine translated from original mlpl3.F FORTRAN routine *; * *; * MultiLayerPerceptron : Training code *; * *; * NTRAIN: Nb of events used during the learning *; * NTEST: Nb of events used for the test *; * TIN: Input variables *; * TOUT: type of the event *; * *; * ---------------------------------------------------------------------------- *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN_Utils; \ingroup TMVA. Implementation of Clermond-Ferrand artificial neural network. Reference for the original FORTRAN version ""mlpl3.F"":; - Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand; Team m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:868,learn,learning,868,tmva/tmva/src/MethodCFMlpANN_Utils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx,1,['learn'],['learning']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Timer *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Timer; \ingroup TMVA; Timing information for training and evaluation of MVA methods. Usage:. ~~~ {.cpp}; TMVA::gConfig().SetDrawProgressBar(true);. TMVA::Timer timer( Nloops, ""MyClassName"" );; for (Int_t i=0; i<Nloops; i++) {; ... // some code. // now, print progress bar:; timer.DrawProgressBar( i );. // **OR** text output of left time (never both !); fLogger << "" time left: "" << timer.GetLeftTime( i ) << Endl;. }; fLogger << ""MyClassName"" << "": elapsed time: "" << timer.GetElapsedTime(); << Endl;; ~~~. Remark: in batch mode, the progress bar is quite ugly; you may; want to use the text output then. Note that by default in TMVA::Config the drawing of the; progress bar is switched off. To have the progress bar visible you need ; to enable it by calling TMVA::gConfig().SetDrawProgressBar(true). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx:1271,progress bar,progress bar,1271,tmva/tmva/src/Timer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx,4,['progress bar'],['progress bar']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; // Updated by: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * This is the main MVA steering class: it creates (books) all MVA methods, *; * and guides them through the training, testing and evaluation phases. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h:515,guid,guides,515,tmva/tmva/inc/TMVA/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h,1,['guid'],['guides']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * *; * Copyright (c) 2005-2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFDA; \ingroup TMVA. Function discriminant analysis (FDA). This simple classifier; fits any user-defined TFormula (via option configuration string) to; the training data by requiring a formula response of 1 (0) to signal; (background) events. The parameter fitting is done via the abstract; class FitterBase, featuring Monte Carlo sampling, Genetic; Algorithm, Simulated Annealing, MINUIT and combinations of these. Can compute regression value for one dimensional output; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx:1052,simpl,simple,1052,tmva/tmva/src/MethodFDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Function discriminant analysis (FDA). This simple classifier *; * fits any user-defined TFormula (via option configuration string) to *; * the training data by requiring a formula response of 1 (0) to signal *; * (background) events. The parameter fitting is done via the abstract *; * class FitterBase, featuring Monte Carlo sampling, Genetic *; * Algorithm, Simulated Annealing, MINUIT and combinations of these. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h:347,simpl,simple,347,tmva/tmva/inc/TMVA/MethodFDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h,1,['simpl'],['simple']
Usability,"// @(#)root/tmva $Id$; // Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLD *; * *; * *; * Description: *; * Linear Discriminant - Simple Linear Regression and Classification *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - Uni Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * PAN, Poland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodLD; \ingroup TMVA; Linear Discriminant. Can compute multidimensional output for regression; (although it computes every dimension separately); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx:358,Simpl,Simple,358,tmva/tmva/src/MethodLD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx,1,['Simpl'],['Simple']
Usability,"// @(#)root/tmva $Id$; // Author: Simon Pfreundschuh; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /////////////////////////////////////////////////////////////////////; // Test Standard Minimizer //; // //; // This test trains a linear neural network on a linear function //; // F(x) = W * x and computes the relative error between the matrix //; // W' representing the linear function learned by the net to the //; // orignal matrix W. //; /////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h:681,learn,learned,681,tmva/tmva/test/DNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMinimization.h,1,['learn'],['learned']
Usability,"// @(#)root/tmva/pymva $Id$; // Author: Anirudh Dagar, 2020; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyTorch *; * *; * *; * Description: *; * Interface for PyTorch python based scientific package supporting *; * automatic differentiation for machine learning. *; * *; * Authors (alphabetical): *; * Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee *; * *; * Copyright (c) 2020: *; * CERN, Switzerland *; * IIT, Roorkee *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyTorch.h:408,learn,learning,408,tmva/pymva/inc/TMVA/MethodPyTorch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyTorch.h,1,['learn'],['learning']
Usability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyAdaBoost *; * Web : http://oproject.org *; * *; * Description: *; * AdaBoost Classifier from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyAdaBoost.cxx:391,learn,learn,391,tmva/pymva/src/MethodPyAdaBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyAdaBoost.cxx,1,['learn'],['learn']
Usability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyAdaBoost *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn package AdaBoostClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h:366,learn,learn,366,tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,1,['learn'],['learn']
Usability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyGTB *; * Web : http://oproject.org *; * *; * Description: *; * GradientBoostingClassifier Classifiear from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyGTB.cxx:405,learn,learn,405,tmva/pymva/src/MethodPyGTB.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyGTB.cxx,1,['learn'],['learn']
Usability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyGTB *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn Package GradientBoostingClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h:361,learn,learn,361,tmva/pymva/inc/TMVA/MethodPyGTB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h,1,['learn'],['learn']
Usability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyRandomForest *; * Web : http://oproject.org *; * *; * Description: *; * Random Forest Classifiear from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyRandomForest.cxx:401,learn,learn,401,tmva/pymva/src/MethodPyRandomForest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyRandomForest.cxx,1,['learn'],['learn']
Usability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyRandomForest *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn Package RandomForestClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h:370,learn,learn,370,tmva/pymva/inc/TMVA/MethodPyRandomForest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h,1,['learn'],['learn']
Usability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.h:300,Learn,Learning,300,tmva/tmva/test/DNN/CNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.h,1,['Learn'],['Learning']
Usability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer for the CPU backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx:300,Learn,Learning,300,tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx,1,['Learn'],['Learning']
Usability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer for the Reference backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.cxx:300,Learn,Learning,300,tmva/tmva/test/DNN/CNN/TestMinimization.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.cxx,1,['Learn'],['Learning']
Usability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TDLGradientDescent *; * *; * *; * Description: *; * Deel Learning Minimizers *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:311,Learn,Learning,311,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,1,['Learn'],['Learning']
Usability,"// @(#)root/tmva/tmva/dnn/gru:$Id$; // Author: Surya S Dwivedi 03/07/19; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicGRULayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Surya S Dwivedi <surya2191997@gmail.com> - IIT Kharagpur, India *; * *; * Copyright (c) 2005-2019: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // This class implements the GRU layer. GRU is a variant of vanilla; // RNN which is capable of learning long range dependencies.; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:899,learn,learning,899,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['learn'],['learning']
Usability,"// @(#)root/tmva/tmva/dnn/lstm:$Id$; // Author: Surya S Dwivedi 27/05/19; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicLSTMLayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Surya S Dwivedi <surya2191997@gmail.com> - IIT Kharagpur, India *; * *; * Copyright (c) 2005-2019: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // This class implements the LSTM layer. LSTM is a variant of vanilla; // RNN which is capable of learning long range dependencies.; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h:903,learn,learning,903,tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,1,['learn'],['learning']
Usability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Simon Pfreundschuh 06/06/17; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /////////////////////////////////////////////////////////////////////; // Partial specialization of the TDataLoader class to adapt it to //; // the TMatrix class. Also the data transfer is kept simple, since //; // this implementation (being intended as reference and fallback //; // is not optimized for performance. //; /////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/DataLoader.h:607,simpl,simple,607,tmva/tmva/inc/TMVA/DNN/Architectures/Reference/DataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/DataLoader.h,1,['simpl'],['simple']
Usability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Specialization of the Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; //////////////////////////////////////////////////////////////////////////; // Partial specialization of the TTensorDataLoader class to adapt //; // it to the TMatrix class. Also the data transfer is kept simple, //; // since this implementation (being intended as reference and fallback) //; // is not optimized for performance. //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h:1072,simpl,simple,1072,tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,1,['simpl'],['simple']
Usability,"// @(#)root/tree:$Id$; // Author: Anna Kreshuk 27/10/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TEntryListBlock; \ingroup tree. Used by TEntryList to store the entry numbers. There are 2 ways to represent entry numbers in a TEntryListBlock:. 1. as bits, where passing entry numbers are assigned 1, not passing - 0; 2. as a simple array of entry numbers; - storing the numbers of entries that pass; - storing the numbers of entries that don't pass. In both cases, a UShort_t* is used. The second option is better in case; less than 1/16 or more than 15/16 of entries pass the selection, and the representation can be; changed by calling OptimizeStorage() function.; When the block is being filled, it's always stored as bits, and the OptimizeStorage(); function is called by TEntryList when it starts filling the next block. If; Enter() or Remove() is called after OptimizeStorage(), representation is; again changed to 1). Begin_Macro; entrylistblock_figure1.C; End_Macro. ## Operations on blocks (see also function comments). - __Merge__() - adds all entries from one block to the other. If the first block; uses array representation, it's changed to bits representation only; if the total number of passing entries is still less than kBlockSize; - __GetEntry(n)__ - returns n-th non-zero entry.; - __Next__() - return next non-zero entry. In case of representation 1), Next(); is faster than GetEntry(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryListBlock.cxx:655,simpl,simple,655,tree/tree/src/TEntryListBlock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryListBlock.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/tree:$Id$; // Author: Anna Kreshuk 27/10/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // TEntryListBlock; //; // Used internally in TEntryList to store the entry numbers.; //; // There are 2 ways to represent entry numbers in a TEntryListBlock:; // 1) as bits, where passing entry numbers are assigned 1, not passing - 0; // 2) as a simple array of entry numbers; // In both cases, a UShort_t* is used. The second option is better in case; // less than 1/16 of entries passes the selection, and the representation can be; // changed by calling OptimizeStorage() function.; // When the block is being filled, it's always stored as bits, and the OptimizeStorage(); // function is called by TEntryList when it starts filling the next block. If; // Enter() or Remove() is called after OptimizeStorage(), representation is; // again changed to 1).; //; // Operations on blocks (see also function comments):; // - Merge() - adds all entries from one block to the other. If the first block; // uses array representation, it's changed to bits representation only; // if the total number of passing entries is still less than kBlockSize; // - GetEntry(n) - returns n-th non-zero entry.; // - Next() - return next non-zero entry. In case of representation 1), Next(); // is faster than GetEntry(); //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TEntryListBlock.h:740,simpl,simple,740,tree/tree/inc/TEntryListBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TEntryListBlock.h,1,['simpl'],['simple']
Usability,"// @(#)root/treeplayer:$Id$; // Author: Rene Brun 12/01/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; * \defgroup treeplayer TreePlayer Library; * \brief It contains utilities to plot data stored in a TTree.; * \sa Tree package documentation; * \sa Chapter about Trees and Selectors in the Users Guide; * \sa ROOT examples in tutorials and test directories: Event application, benchmarks; */; /** \class TTreePlayer. Implement some of the functionality of the class TTree requiring access to; extra libraries (Histogram, display, etc).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:617,Guid,Guide,617,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['Guid'],['Guide']
Usability,"// @(#)root/win32gdk:$Id$; // Author: Valeriy Onuchin 08/08/2003; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGWin32ProxyBase; \ingroup win32. Proxy classes provide thread-safe interface to global objects. For example: TGWin32VirtualXProxy (to gVirtualX). Proxy object creates callback object and posts a windows message to; ""processing thread"". When windows message is received callback; (""real method"") is executed. For example:; gVirtualX->ClearWindow(). - callback object created containing pointer to function; corresponding TGWin32::ClearWindow() method; - message to ""processing thread"" (main thread) is posted; - TGWin32::ClearWindow() method is executed inside main thread; - thread containing gVirtualX proxy object waits for reply; from main thread that TGWin32::ClearWindow() is completed. Howto create proxy class:. 1. Naming.; name of proxy = TGWin32 + the name of ""virtual base class"" + Proxy. e.g. TGWin32VirtualXProxy = TGWin32 + VirtualX + Proxy. 2. Definition of global object; As example check definition and implementation of; gVirtualX global object. 3. Class definition.; proxy class must be inherited from ""virtual base class"" and; TGWin32ProxyBase class. For example:. class TGWin32VirtualX : public TVirtualX , public TGWin32ProxyBase. 4. Constructors, destructor, extra methods.; - constructors and destructor of proxy class do nothing; - proxy class must contain two extra static methods; RealObject(), ProxyObject(). Each of them return pointer to object; of virtual base class. For example:; static TVirtualX *RealObject();; static TVirtualX *ProxyObject();. 5. Implementation; TGWin32ProxyDefs.h file contains a set of macros which very; simpli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx:769,Clear,ClearWindow,769,graf2d/win32gdk/src/TGWin32ProxyBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx,4,['Clear'],['ClearWindow']
Usability,"// @(#)root/xml:$Id: c6d85738bc844c3af55b6d85902df8fc3a014be2 $; // Author: Sergey Linev, Rene Brun 10.05.2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //________________________________________________________________________; //; // The main motivation for the XML format is to facilitate the; // communication with other non ROOT applications. Currently; // writing and reading XML files is limited to ROOT applications.; // It is our intention to develop a simple reader independent; // of the ROOT libraries that could be used as an example for; // real applications. One of possible approach with code generation; // is implemented in TXMLPlayer class.; //; // The XML format should be used only for small data volumes,; // typically histogram files, pictures, geometries, calibrations.; // The XML file is built in memory before being dumped to disk.; //; // Like for normal ROOT files, XML files use the same I/O mechanism; // exploiting the ROOT/CINT dictionary. Any class having a dictionary; // can be saved in XML format.; //; // This first implementation does not support subdirectories; // or Trees.; //; // The shared library libRXML.so may be loaded dynamically; // via gSystem->Load(""libRXML""). This library is automatically; // loaded by the plugin manager as soon as a XML file is created; // via, eg; // TFile::Open(""file.xml"",""recreate"");; // TFile::Open returns a TXMLFile object. When a XML file is open in write mode,; // one can use the normal TObject::Write to write an object in the file.; // Alternatively one can use the new functions TDirectoryFile::WriteObject and; // TDirectoryFile::WriteObjectAny to write a TObject* or any class not deriving; // fr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:779,simpl,simple,779,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['simpl'],['simple']
Usability,"// @(#)root/xmlparser:$Id$; // Author: Jose Lo 12/1/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TSAXParser; \ingroup IO. TSAXParser is a subclass of TXMLParser, it is a wraper class to; libxml library.; SAX (Simple API for XML) is an event based interface, which doesn't; maintain the DOM tree in memory, in other words, it's much more; efficient for large document.; TSAXParserCallback contains a number of callback routines to the; parser in a xmlSAXHandler structure. The parser will then parse the; document and call the appropriate callback when certain conditions; occur.; */; /*************************************************************************; This source is based on libxml++, a C++ wrapper for the libxml XML; parser library.Copyright (C) 2000 by Ari Johnson. libxml++ are copyright (C) 2000 by Ari Johnson, and are covered by the; GNU Lesser General Public License, which should be included with; libxml++ as the file COPYING.; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:540,Simpl,Simple,540,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,1,['Simpl'],['Simple']
Usability,// A CONCAT_VECTOR with all UNDEF/BUILD_VECTOR operands can be; // simplified to one big BUILD_VECTOR.; // FIXME: Add support for SCALAR_TO_VECTOR as well.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:67,simpl,simplified,67,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['simpl'],['simplified']
Usability,// A GUID behaves like an inline variable with external linkage. Fall; // through.; // Everything not covered here has no linkage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:5,GUID,GUID,5,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['GUID'],['GUID']
Usability,"// A SchedWrite may specify a number of cycles in which a resource group; // is reserved. For example (on target x86; cpu Haswell):; //; // SchedWriteRes<[HWPort0, HWPort1, HWPort01]> {; // let ReleaseAtCycles = [2, 2, 3];; // }; //; // This means:; // Resource units HWPort0 and HWPort1 are both used for 2cy.; // Resource group HWPort01 is the union of HWPort0 and HWPort1.; // Since this write touches both HWPort0 and HWPort1 for 2cy, HWPort01; // will not be usable for 2 entire cycles from instruction issue.; //; // On top of those 2cy, SchedWriteRes explicitly specifies an extra latency; // of 3 cycles for HWPort01. This tool assumes that the 3cy latency is an; // extra delay on top of the 2 cycles latency.; // During those extra cycles, HWPort01 is not usable by other instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:464,usab,usable,464,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,2,['usab'],['usable']
Usability,// A boolean compared to true/false can be simplified to Op0/true/false in; // 14 out of the 20 (10 predicates * 2 constants) possible combinations.; // Cases not handled by InstSimplify are always 'not' of Op0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:43,simpl,simplified,43,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['simpl'],['simplified']
Usability,"// A call can get simplified, but it may not be trivially dead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp:18,simpl,simplified,18,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp,1,['simpl'],['simplified']
Usability,"// A call site could become less desirable for inlining because of the size; // growth from prior inlining into the callee. This method is used to lazily; // update the desirability of a call site if it's decreasing. It is only; // called on pop(), not every time the desirability changes. When the; // desirability of the front call site decreases, an updated one would be; // pushed right back into the heap. For simplicity, those cases where the; // desirability of a call site increases are ignored here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineOrder.cpp:415,simpl,simplicity,415,interpreter/llvm-project/llvm/lib/Analysis/InlineOrder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineOrder.cpp,1,['simpl'],['simplicity']
Usability,// A class-scope deduction guide in a dependent context has a dependent name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclarationName.cpp:27,guid,guide,27,interpreter/llvm-project/clang/lib/AST/DeclarationName.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclarationName.cpp,1,['guid'],['guide']
Usability,// A collection of MCPseudoProbe for each function. The MCPseudoProbes are; // grouped by GUIDs due to inlining that can bring probes from different; // functions into one function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h:90,GUID,GUIDs,90,interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,1,['GUID'],['GUIDs']
Usability,"// A critical sequence is computed as the longest path from a node of the; // RootSet to a leaf node (i.e. a node with no successors). The RootSet is; // composed of nodes with at least one successor, and no predecessors.; //; // Each node of the graph starts with an initial default cost of zero. The; // cost of a node is a measure of criticality: the higher the cost, the bigger; // is the performance impact.; // For register and memory dependencies, the cost is a function of the write; // latency as well as the actual delay (in cycles) caused to users.; // For processor resource dependencies, the cost is a function of the resource; // pressure. Resource interferences with low frequency values are ignored.; //; // This algorithm is very similar to a (reverse) Dijkstra. Every iteration of; // the inner loop selects (i.e. visits) a node N from a set of `unvisited; // nodes`, and then propagates the cost of N to all its neighbors.; //; // The `unvisited nodes` set initially contains all the nodes from the; // RootSet. A node N is added to the `unvisited nodes` if all its; // predecessors have been visited already.; //; // For simplicity, every node tracks the number of unvisited incoming edges in; // field `NumVisitedPredecessors`. When the value of that field drops to; // zero, then the corresponding node is added to a `ToVisit` set.; //; // At the end of every iteration of the outer loop, set `ToVisit` becomes our; // new `unvisited nodes` set.; //; // The algorithm terminates when the set of unvisited nodes (i.e. our RootSet); // is empty. This algorithm works under the assumption that the graph is; // acyclic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp:1141,simpl,simplicity,1141,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,1,['simpl'],['simplicity']
Usability,// A deduction guide is not on the list of entities that can be explicitly; // instantiated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:15,guid,guide,15,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['guid'],['guide']
Usability,// A deduction guide is not on the list of entities that can be; // explicitly specialized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:15,guid,guide,15,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['guid'],['guide']
Usability,"// A dependency graph used by the bottleneck analysis to describe data; // dependencies and processor resource interferences between instructions.; //; // There is a node (an instance of struct DGNode) for every instruction in the; // input assembly sequence. Edges of the graph represent dependencies between; // instructions.; //; // Each edge of the graph is associated with a cost value which is used; // internally to rank dependency based on their impact on the runtime; // performance (see field DependencyEdge::Dependency::Cost). In general, the; // higher the cost of an edge, the higher the impact on performance.; //; // The cost of a dependency is a function of both the latency and the number of; // cycles where the dependency has been seen as critical (i.e. contributing to; // back-pressure increases).; //; // Loop carried dependencies are carefully expanded by the bottleneck analysis; // to guarantee that the graph stays acyclic. To this end, extra nodes are; // pre-allocated at construction time to describe instructions from ""past and; // future"" iterations. The graph is kept acyclic mainly because it simplifies; // the complexity of the algorithm that computes the critical sequence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:1126,simpl,simplifies,1126,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['simpl'],['simplifies']
Usability,// A fairly simplistic guess as to whether a potential load/store to a; // stack location could require an extra register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:12,simpl,simplistic,12,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['simpl'],['simplistic']
Usability,"// A fallthrough result means that the statement was simple and just; // included in ResultStmt, keep adding them afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:53,simpl,simple,53,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['simpl'],['simple']
Usability,// A function object that creates a simple pass pipeline to apply to each; // module as it passes through the IRTransformLayer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp:36,simpl,simple,36,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp,1,['simpl'],['simple']
Usability,"// A funnel shift (rotate) can be decomposed into simpler shifts. See if we; // are mixing in another shift that is redundant with the funnel shift.; // (fshl X, ?, Y) | (shl X, Y) --> fshl X, ?, Y; // (shl X, Y) | (fshl X, ?, Y) --> fshl X, ?, Y",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:50,simpl,simpler,50,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simpler']
Usability,"// A hint to put a space between the '>>'s. In order to make the hint as; // clear as possible, we include the characters either side of the space in; // the replacement, rather than just inserting a space at SecondCharLoc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTemplate.cpp:77,clear,clear,77,interpreter/llvm-project/clang/lib/Parse/ParseTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTemplate.cpp,1,['clear'],['clear']
Usability,"// A load from a fixed stack slot can be rematerialized. This may be; // redundant with subsequent checks, but it's target-independent,; // simple, and a common case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:140,simpl,simple,140,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['simpl'],['simple']
Usability,"// A lookup table to traverse the simplex around a given point in 4D.; // Details can be found where this table is used, in the 4D noise method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs:34,simpl,simplex,34,js/modules/three_addons.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs,1,['simpl'],['simplex']
Usability,"// A mapping from function GUID, hash of the canonical function symbol to the; // memprof profile data for that function, i.e allocation and callsite info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/RawMemProfReader.h:27,GUID,GUID,27,interpreter/llvm-project/llvm/include/llvm/ProfileData/RawMemProfReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/RawMemProfReader.h,1,['GUID'],['GUID']
Usability,"// A mask of busy resource units. It defaults to the empty set (i.e. a zero; // mask), and it is cleared at the beginning of every cycle.; // It is updated every time the scheduler fails to issue an instruction from; // the ready set due to unavailable pipeline resources.; // Each bit of the mask represents an unavailable resource.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:97,clear,cleared,97,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['clear'],['cleared']
Usability,// A mask that only clears known zeros of a shifted value is a no-op.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:20,clear,clears,20,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['clear'],['clears']
Usability,"// A masked load can not be unfolded to a full load, otherwise it would access; // unexpected memory. A simple store can not be unfolded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86FoldTablesEmitter.cpp:104,simpl,simple,104,interpreter/llvm-project/llvm/utils/TableGen/X86FoldTablesEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86FoldTablesEmitter.cpp,1,['simpl'],['simple']
Usability,"// A move mask is splitted into two parts:; // bits 0 ~ 7 correspond to D0 ~ D7 regs; // bits 8 ~ 15 correspond to A0 ~ A7 regs; //; // In the assembly syntax, we want to use a dash to replace; // a continuous range of registers. For example, if the bit; // mask is 0b101110, we want to print ""D1-D3,D5"" instead of; // ""D1,D2,D3,D4,D5"".; //; // However, we don't want a dash to cross between data registers; // and address registers (i.e. there shouldn't be a dash crossing; // bit 7 and 8) since that is not really intuitive. So we simply; // print the data register part (bit 0~7) and address register part; // separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp:516,intuit,intuitive,516,interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,2,"['intuit', 'simpl']","['intuitive', 'simply']"
Usability,// A multi use 'all demanded elts' simplify failed to find any knownbits.; // Try again just for the original demanded elts.; // Ensure we do this AFTER constant folding above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:35,simpl,simplify,35,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['simpl'],['simplify']
Usability,"// A new-type-id is a simplified type-id, where essentially the; // direct-declarator is replaced by a direct-new-declarator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:22,simpl,simplified,22,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,1,['simpl'],['simplified']
Usability,"// A non-export depends on us. Skip export grouping.; // Note that this is a bit pessimistic: We could still group all other; // exports that are not depended on by non-exports, directly or; // indirectly. Simply skipping this particular export but grouping all; // others would not account for indirect dependencies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:206,Simpl,Simply,206,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['Simpl'],['Simply']
Usability,// A normal br.cond simply has the condition code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp:20,simpl,simply,20,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,2,['simpl'],['simply']
Usability,"// A number of transformations will eliminate the definition of a register; // as all of its uses will be removed. However, this leaves a register; // without a definition for LiveVariables. Such transformations should; // use this function to provide a dummy definition of the register that; // will simply be removed by DCE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:301,simpl,simply,301,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,1,['simpl'],['simply']
Usability,// A parenthesized initializer could be part of an expression or a; // simple-declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:71,simpl,simple-declaration,71,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['simpl'],['simple-declaration']
Usability,"// A pattern may end up with an ""impossible"" type, i.e. a situation; // where all types have been eliminated for some node in this pattern.; // This could occur for intrinsics that only make sense for a specific; // value type, and use a specific register class. If, for some mode,; // that register class does not accept that type, the type inference; // will lead to a contradiction, which is not an error however, but; // a sign that this pattern will simply never match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:455,simpl,simply,455,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['simpl'],['simply']
Usability,// A position whose simplified value does not have any value is; // considered to be dead. We don't manifest noundef in such positions for; // the same reason above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:20,simpl,simplified,20,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['simpl'],['simplified']
Usability,"// A priority queue for BVHPrioElement with an additional clear method; // for quick reset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx:58,clear,clear,58,geom/geom/src/TGeoParallelWorld.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx,1,['clear'],['clear']
Usability,// A save to TPIDR2 should be followed by clearing TPIDR2_EL0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/SMEABIPass.cpp:42,clear,clearing,42,interpreter/llvm-project/llvm/lib/Target/AArch64/SMEABIPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/SMEABIPass.cpp,1,['clear'],['clearing']
Usability,"// A signaling NaN is quieted on conversion, so we need to recreate the; // expected value after convert (quiet bit of the payload is clear).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp:134,clear,clear,134,interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,1,['clear'],['clear']
Usability,// A signed comparison of sign extended values simplifies into a; // signed comparison.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:47,simpl,simplifies,47,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,2,['simpl'],['simplifies']
Usability,// A simple 32-bit constant.; // The in-memory type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:5,simpl,simple,5,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['simpl'],['simple']
Usability,// A simple CL parser for '*-remarks-hotness-threshold=',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/HotnessThresholdParser.h:5,simpl,simple,5,interpreter/llvm-project/llvm/include/llvm/Remarks/HotnessThresholdParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/HotnessThresholdParser.h,1,['simpl'],['simple']
Usability,// A simple add.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:5,simpl,simple,5,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['simpl'],['simple']
Usability,"// A simple analysis class for MLP",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/inc/TMLPAnalyzer.h:5,simpl,simple,5,math/mlp/inc/TMLPAnalyzer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/inc/TMLPAnalyzer.h,1,['simpl'],['simple']
Usability,// A simple binary addition of the shifted ints yields the final result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp:5,simpl,simple,5,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp,1,['simpl'],['simple']
Usability,// A simple case - expr type is the type being constrained and the concept; // was not provided arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp:5,simpl,simple,5,interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,1,['simpl'],['simple']
Usability,// A simple case when N/1. The quotient is N.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionDivision.cpp:5,simpl,simple,5,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionDivision.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionDivision.cpp,1,['simpl'],['simple']
Usability,"// A simple class for acceptance regions used for ConfidenceBelt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfidenceBelt.h:5,simpl,simple,5,roofit/roostats/inc/RooStats/ConfidenceBelt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfidenceBelt.h,1,['simpl'],['simple']
Usability,"// A simple class to store the; // necessary objects for a; // single gamma in a single channel",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h:5,simpl,simple,5,roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/RooBarlowBeestonLL.h,1,['simpl'],['simple']
Usability,"// A simple class used by ConfidenceBelt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfidenceBelt.h:5,simpl,simple,5,roofit/roostats/inc/RooStats/ConfidenceBelt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfidenceBelt.h,1,['simpl'],['simple']
Usability,"// A simple fixed size array class that does not manage its own memory,; // suitable for use with bump pointer allocation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h:5,simpl,simple,5,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,1,['simpl'],['simple']
Usability,"// A simple hashing function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:5,simpl,simple,5,core/metacling/src/TCling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h,1,['simpl'],['simple']
Usability,"// A simple helper function for determining all supported features.; // Crude, but works without making tests a 'friend' class of ROOT::TIOFeatures.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:5,simpl,simple,5,tree/tree/test/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx,1,['simpl'],['simple']
Usability,"// A simple implementation of the DistributionCreator interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h:5,simpl,simple,5,roofit/roostats/inc/RooStats/DebuggingSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h,1,['simpl'],['simple']
Usability,"// A simple implementation of the TestStatSampler interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h:5,simpl,simple,5,roofit/roostats/inc/RooStats/ToyMCSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h,1,['simpl'],['simple']
Usability,// A simple instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:5,simpl,simple,5,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['simpl'],['simple']
Usability,"// A simple interface to read trees",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:5,simpl,simple,5,tree/treeplayer/inc/TTreeReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h,1,['simpl'],['simple']
Usability,"// A simple interface to read trees via bulk I/O",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:5,simpl,simple,5,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,1,['simpl'],['simple']
Usability,// A simple interval overlap detection algorithm. Sorts all ranges by their; // begin location then finds the first overlap in one pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:5,simpl,simple,5,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,1,['simpl'],['simple']
Usability,"// A simple iterator based on TTreeReader::Iterator_t; allows use of the; // TTreeReaderFast.; //; // NOTE that an increment may invalidate previous copies of the iterator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:5,simpl,simple,5,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,1,['simpl'],['simple']
Usability,// A simple mul.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:5,simpl,simple,5,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['simpl'],['simple']
Usability,// A simple object storing the value for a particular register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/RegisterValue.h:5,simpl,simple,5,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/RegisterValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/RegisterValue.h,1,['simpl'],['simple']
Usability,// A simple offsetted value that is accessed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:5,simpl,simple,5,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['simpl'],['simple']
Usability,"// A simple round-robin cache: what enters first, leaves first.; // MRU cache wasn't worth the extra CPU cycles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp:5,simpl,simple,5,interpreter/cling/lib/Utils/PlatformPosix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformPosix.cpp,1,['simpl'],['simple']
Usability,"// A simple table that owns it's interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGSimpleTable.h:5,simpl,simple,5,gui/gui/inc/TGSimpleTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGSimpleTable.h,1,['simpl'],['simple']
Usability,// A simple tag type so the call-as type to be passed to the constructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h:5,simpl,simple,5,interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h,1,['simpl'],['simple']
Usability,"// A simple type, or an array of a simple type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:5,simpl,simple,5,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,2,['simpl'],['simple']
Usability,"// A simple user iterator plugin that changes volume color",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx:5,simpl,simple,5,tutorials/geom/iterplugin.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx,1,['simpl'],['simple']
Usability,// A simple vtordisp thunk will suffice if the final overrider is defined; // in either the most derived class or its non-virtual base.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp:5,simpl,simple,5,interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,1,['simpl'],['simple']
Usability,"// A simple wrapper to use a ModelConfig",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:5,simpl,simple,5,roofit/histfactory/src/HistFactoryNavigation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx,1,['simpl'],['simple']
Usability,"// A simplistic analysis: assume the source register (the one being split); // is fully unknown, and that all its bits are self-references.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:5,simpl,simplistic,5,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['simpl'],['simplistic']
Usability,// A simply binary operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:5,simpl,simply,5,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['simpl'],['simply']
Usability,"// A statement can end with only `;` (simple statement), a block; // closing brace (compound statement), or `:` (label statement).; // If PrevTok is a block opening brace, Tok ends an empty block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:38,simpl,simple,38,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['simpl'],['simple']
Usability,"// A string has been found with all arguments covered, so clear out; // the diagnostics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:58,clear,clear,58,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['clear'],['clear']
Usability,"// A subexpression in which the extender is used. In general, this; // represents an expression where adding D to the extender will be; // equivalent to adding D to the expression as a whole. In other; // words, expr(add(##V,D) = add(expr(##V),D).; // The original motivation for this are the io/ur addressing modes,; // where the offset is extended. Consider the io example:; // In memw(Rs+##V), the ##V could be replaced by a register Rt to; // form the rr mode: memw(Rt+Rs<<0). In such case, however, the; // register Rt must have exactly the value of ##V. If there was; // another instruction memw(Rs+##V+4), it would need a different Rt.; // Now, if Rt was initialized as ""##V+Rs<<0"", both of these; // instructions could use the same Rt, just with different offsets.; // Here it's clear that ""initializer+4"" should be the same as if; // the offset 4 was added to the ##V in the initializer.; // The only kinds of expressions that support the requirement of; // commuting with addition are addition and subtraction from ##V.; // Include shifting the Rs to account for the ur addressing mode:; // ##Val + Rs << S; // ##Val - Rs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:787,clear,clear,787,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['clear'],['clear']
Usability,"// A traversal scope limits the parts of the AST visible to certain analyses.; // RecursiveASTVisitor only visits specified children of TranslationUnitDecl.; // getParents() will only observe reachable parent edges.; //; // The scope is defined by a set of ""top-level"" declarations which will be; // visible under the TranslationUnitDecl.; // Initially, it is the entire TU, represented by {getTranslationUnitDecl()}.; //; // After setTraversalScope({foo, bar}), the exposed AST looks like:; // TranslationUnitDecl; // - foo; // - ...; // - bar; // - ...; // All other siblings of foo and bar are pruned from the tree.; // (However they are still accessible via TranslationUnitDecl->decls()); //; // Changing the scope clears the parent cache, which is expensive to rebuild.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:719,clear,clears,719,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,1,['clear'],['clears']
Usability,"// A two-CLC sequence is a clear win over a loop, not least because; // it needs only one branch. A three-CLC sequence needs the same; // number of branches as a loop (i.e. 2), but is shorter. That; // brings us to lengths greater than 768 bytes. It seems relatively; // likely that a difference will be found within the first 768 bytes,; // so we just optimize for the smallest number of branch; // instructions, in order to avoid polluting the prediction buffer; // too much.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:27,clear,clear,27,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['clear'],['clear']
Usability,"// A wrapper around SCEV::isKnownPredicate.; // Looks for cases where we're interested in comparing for equality.; // If both X and Y have been identically sign or zero extended,; // it strips off the (confusing) extensions before invoking; // SCEV::isKnownPredicate. Perhaps, someday, the ScalarEvolution package; // will be similarly updated.; //; // If SCEV::isKnownPredicate can't prove the predicate,; // we try simple subtraction, which seems to help in some cases; // involving symbolics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:417,simpl,simple,417,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['simpl'],['simple']
Usability,"// A2_tfrsi is a special case: it's replaced with A2_addi, which introduces; // another range. One range is the one that's common to all tfrsi's uses,; // this one is the range of immediates in A2_addi. When calculating ranges,; // the addi's 16-bit argument was included, so now we need to make it such; // that the produced value is in the range for the uses alone.; // Most of the time, simply adding Diff will make the addi produce exact; // result, but if Diff is outside of the 16-bit range, some adjustment; // will be needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:390,simpl,simply,390,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['simpl'],['simply']
Usability,"// AArch64 FP-to-int conversions saturate to the destination element size, so; // we can lower common saturating conversions to simple instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:128,simpl,simple,128,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simple']
Usability,"// AArch64 FP-to-int conversions saturate to the destination register size, so; // we can lower common saturating conversions to simple instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:129,simpl,simple,129,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simple']
Usability,"// ABI says: ""One of the simple integer types no more than 64 bits wide.; // ... If such an argument is shorter than 64 bits, replace it by a full; // 64-bit integer representing the same number, using sign or zero; // extension"". Shadow for an integer argument has the same type as the; // argument itself, so it can be sign or zero extended as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:25,simpl,simple,25,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['simpl'],['simple']
Usability,// ADRP fixups use relocations for the whole symbol value and only; // put the addend in the instruction itself. Clear out any value the; // generic code figured out from the sybmol definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp:113,Clear,Clear,113,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp,1,['Clear'],['Clear']
Usability,"// AIX's assembly directive `.set` is not usable for aliasing purpose,; // so AIX has to use the extra-label-at-definition strategy. At this; // point, all the extra label is emitted, we just have to emit linkage for; // those labels.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:42,usab,usable,42,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['usab'],['usable']
Usability,// AMD64-ABI 3.5.7p5: Step 4. Fetch type from l->reg_save_area with; // an offset of l->gp_offset and/or l->fp_offset. This may require; // copying to a temporary location in case the parameter is passed; // in different register classes or requires an alignment greater; // than 8 for general purpose registers and 16 for XMM registers.; //; // FIXME: This really results in shameful code when we end up needing to; // collect arguments from different places; often what should result in a; // simple assembling of a structure from scattered addresses has many more; // loads than necessary. Can we clean this up?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:495,simpl,simple,495,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['simpl'],['simple']
Usability,"// AND instruction will essentially update SF and clear OF, so; // NoSignFlag should be false in the sense that SF is modified by `AND`.; //; // However, the implementation artifically sets `NoSignFlag` to true; // to poison the SF bit; that is to say, if SF is looked at later, the; // optimization (to erase TEST64rr) will be disabled.; //; // The reason to poison SF bit is that SF bit value could be different; // in the `AND` and `TEST` operation; signed bit is not known for `AND`,; // and is known to be 0 as a result of `TEST64rr`.; //; // FIXME: As opposed to poisoning the SF bit directly, consider peeking into; // the AND instruction and using the static information to guide peephole; // optimization if possible. For example, it's possible to fold a; // conditional move into a copy if the relevant EFLAG bits could be deduced; // from an immediate operand of and operation.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:50,clear,clear,50,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,2,"['clear', 'guid']","['clear', 'guide']"
Usability,"// ANDI Rd, 0x00 clears all input bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp:17,clear,clears,17,interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,1,['clear'],['clears']
Usability,"// APCS, C Language Calling Conventions, Non-Simple Return Values: A structure; // is called integer-like if its size is less than or equal to one word, and; // the offset of each of its addressable sub-fields is zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/ARM.cpp:45,Simpl,Simple,45,interpreter/llvm-project/clang/lib/CodeGen/Targets/ARM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/ARM.cpp,1,['Simpl'],['Simple']
Usability,"// ARM has 8-byte atomic accesses, but it's not clear whether we; // want to rely on them here.; // In the default case, just assume that any size up to a pointer is; // fine given adequate alignment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:48,clear,clear,48,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['clear'],['clear']
Usability,"// ARM mode is a bit simpler than Thumb: we can handle large power; // of 2 immediates with 1 mov instruction; no further checks required,; // just return the sdiv node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:21,simpl,simpler,21,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['simpl'],['simpler']
Usability,"// ARM uses the least significant bit of the function pointer to select; // between ARM and Thumb modes for the callee. Instructions are always; // at least 16-bit aligned, so clear the LSB before we compute the hash; // location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/KCFI.cpp:176,clear,clear,176,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/KCFI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/KCFI.cpp,1,['clear'],['clear']
Usability,"// ARM64EmitUnwindInfo above clears the info struct, so we can't check; // empty here. But if a Symbol is set, we should create the corresponding; // pdata entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp:29,clear,clears,29,interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,1,['clear'],['clears']
Usability,"// ARMEmitUnwindInfo above clears the info struct, so we can't check; // empty here. But if a Symbol is set, we should create the corresponding; // pdata entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp:27,clear,clears,27,interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,1,['clear'],['clears']
Usability,"// About to add uses of DstReg, clear DstReg's kill flags.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:32,clear,clear,32,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['clear'],['clear']
Usability,"// About to replace MI.getOperand(1), clear its kill flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:38,clear,clear,38,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,2,['clear'],['clear']
Usability,"// Absent any ad hoc aliasing, we create one register unit per leaf register.; // These units correspond to the maximal cliques in the register overlap; // graph which is optimal.; //; // When there is ad hoc aliasing, we simply create one unit per edge in the; // undirected ad hoc aliasing graph. Technically, we could do better by; // identifying maximal cliques in the ad hoc graph, but cliques larger than 2; // are extremely rare anyway (I've never seen one), so we don't bother with; // the added complexity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:222,simpl,simply,222,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,1,['simpl'],['simply']
Usability,// Access specifiers are only meaningful if both the template and the; // deduction guide are from the same scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:84,guid,guide,84,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['guid'],['guide']
Usability,"// According to CC430 Family User's Guide, Section 4.5.1.3, branch; // instructions have the signed 10-bit word offset field, so first we need to; // convert the distance from bytes to words, then check if it fits in 10-bit; // signed integer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430BranchSelector.cpp:36,Guid,Guide,36,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430BranchSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430BranchSelector.cpp,1,['Guid'],['Guide']
Usability,"// According to E.2.3.1 in CUDA-7.5 Programming guide: __device__,; // __constant__ and __shared__ variables defined in namespace scope,; // that are of class type, cannot have a non-empty constructor. All; // the checks have been done in Sema by now. Whatever initializers; // are allowed are empty and we just need to ignore them here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:48,guid,guide,48,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['guid'],['guide']
Usability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be able to; // correctly interpret address space of the variable address.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:74,guid,guide-to-interoperability,74,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['guid'],['guide-to-interoperability']
Usability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be able to; // correctly interpret address space of the variable address.; // Decode DW_OP_constu <DWARF Address Space> DW_OP_swap DW_OP_xderef; // sequence for the NVPTX + gdb target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:74,guid,guide-to-interoperability,74,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['guid'],['guide-to-interoperability']
Usability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be; // able to correctly interpret address space of the variable; // address.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:74,guid,guide-to-interoperability,74,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['guid'],['guide-to-interoperability']
Usability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be; // able to correctly interpret address space of the variable; // address. Decode DW_OP_constu <DWARF Address Space> DW_OP_swap; // DW_OP_xderef sequence for the NVPTX + gdb target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:74,guid,guide-to-interoperability,74,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['guid'],['guide-to-interoperability']
Usability,"// Actual usage of etaMax() simply returns the number 22756, which is; // the answer this would supply, rounded to a higher integer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/etaMax.h:28,simpl,simply,28,math/genvector/inc/Math/GenVector/etaMax.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/etaMax.h,1,['simpl'],['simply']
Usability,"// Add ScatterVectorize nodes to the list of operands, where just; // reordering of the scalars is required. Similar to the gathers, so; // simply add to the list of gathered ops.; // If there are reused scalars, process this node as a regular vectorize; // node, just reorder reuses mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:140,simpl,simply,140,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['simpl'],['simply']
Usability,"// Add a fixup for the TLS register, which simply provides a relocation; // hint to the linker that this statement is part of a relocation sequence.; // Return the thread-pointer register's encoding. Add a one byte displacement; // if using PC relative memops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp:43,simpl,simply,43,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCCodeEmitter.cpp,1,['simpl'],['simply']
Usability,"// Add a new usage with usage kind UK_ModAsValue, and then restore; // the previous usage with UK_ModAsSideEffect (thus clearing it if; // the previous one was empty).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:120,clear,clearing,120,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['clear'],['clearing']
Usability,// Add a nullptr Expr to simplify the codegen in emitDependData.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:25,simpl,simplify,25,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['simpl'],['simplify']
Usability,"// Add all branches to be cached. This also sets fIsManual, stops learning,; // and makes fEntryNext = -1 (which forces a cache fill, which is good)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:66,learn,learning,66,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['learn'],['learning']
Usability,"// Add an entry count to the function using the samples gathered at the; // function entry.; // Sets the GUIDs that are inlined in the profiled binary. This is used; // for ThinLink to make correct liveness analysis, and also make the IR; // match the profiled binary before annotation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h:105,GUID,GUIDs,105,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,1,['GUID'],['GUIDs']
Usability,// Add an extra level of indirection for streaming mode changes by; // using a pseudo copy node that cannot be rematerialised between a; // smstart/smstop and the call by the simple register coalescer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:175,simpl,simple,175,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simple']
Usability,"// Add callsite metadata for the instruction's location list so that; // it simpler later on to identify which part of the MIB contexts; // are from this particular instruction (including during inlining,; // when the callsite metdata will be updated appropriately).; // FIXME: can this be changed to strip out the matching stack; // context ids from the MIB contexts and not add any callsite; // metadata here to save space?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp:76,simpl,simpler,76,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,1,['simpl'],['simpler']
Usability,// Add dependencies against everything below it and clear maps.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:52,clear,clear,52,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['clear'],['clear']
Usability,// Add header fields for the resume and destroy functions.; // We can rely on these being perfectly packed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:29,resume,resume,29,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,1,['resume'],['resume']
Usability,// Add in the live successors by first checking whether we have terminator; // that may be simplified based on the values simplified by this call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:91,simpl,simplified,91,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,4,['simpl'],['simplified']
Usability,// Add memory dependencies (Note: isStoreToStackSlot and; // isLoadFromStackSLot are not usable after stack slots are lowered to; // actual addresses).; // This is a barrier event that acts as a pivotal node in the DAG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:89,usab,usable,89,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['usab'],['usable']
Usability,// Add musttail to any resume instructions that is immediately followed by a; // suspend (i.e. ret). We do this even in -O0 to support guaranteed tail call; // for symmetrical coroutine control transfer (C++ Coroutines TS extension).; // This transformation is done only in the resume part of the coroutine that has; // identical signature and calling convention as the coro.resume call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:23,resume,resume,23,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,3,['resume'],['resume']
Usability,// Add or Sub Instructions with a constant operand can potentially be; // simplified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:74,simpl,simplified,74,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['simpl'],['simplified']
Usability,// Add or remove the seen architectures in order of appearance. If an; // invalid architecture is given we simply exit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:107,simpl,simply,107,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['simpl'],['simply']
Usability,"// Add profile likelihood calculation of significance. Redo each; // fit while keeping parameter nsig fixed to zero. For each toy,; // the difference in -log(L) of both fits is stored, as well; // a simple significance interpretation of the delta(-logL); // using Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:199,simpl,simple,199,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['simpl'],['simple']
Usability,// Add the core function simplification pipeline nested inside the; // CGSCC walk.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:25,simpl,simplification,25,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['simpl'],['simplification']
Usability,// Add the core simplification pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:16,simpl,simplification,16,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['simpl'],['simplification']
Usability,"// Add the primary loop simplification pipeline.; // FIXME: Currently this is split into two loop pass pipelines because we run; // some function passes in between them. These can and should be removed; // and/or replaced by scheduling the loop pass equivalents in the correct; // positions. But those equivalent passes aren't powerful enough yet.; // Specifically, `SimplifyCFGPass` and `InstCombinePass` are currently still; // used. We have `LoopSimplifyCFGPass` which isn't yet powerful enough yet to; // fully replace `SimplifyCFGPass`, and the closest to the other we have is; // `LoopInstSimplify`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:24,simpl,simplification,24,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,6,"['Simpl', 'simpl']","['SimplifyCFGPass', 'simplification']"
Usability,"// Add the random tag received from the server; // (if any); makes packets non re-usable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:82,usab,usable,82,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['usab'],['usable']
Usability,"// Add this GUID to the AST context's lookup structure, and merge if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:12,GUID,GUID,12,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['GUID'],['GUID']
Usability,"// Add this to work with arbitrary vectors:; // dot /= Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);; // rounding errors, e.g. -1.0000000000000002 can screw up this",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:65,ux,ux,65,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['ux'],['ux']
Usability,"// Add to offset, if gradient is large enough:; // Loop over the gradient vector and move to next set of coefficients; // size of GradVec (and GradVecLin) should be 0 if learner is disabled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:170,learn,learner,170,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['learn'],['learner']
Usability,"// Add to offset, if gradient is large enough:; // Loop over the gradient vector and move to next set of coefficients; // size of GradVec (and GradVecLin) should be 0 if learner is disabled; //; // Step-size is divided by 10 when looking for the best path.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:170,learn,learner,170,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['learn'],['learner']
Usability,"// Add transform passes.; // Do simple ""peephole"" optimizations and bit-twiddling optzns.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/Chapter4/toy.cpp:32,simpl,simple,32,interpreter/llvm-project/llvm/examples/Kaleidoscope/Chapter4/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/Chapter4/toy.cpp,4,['simpl'],['simple']
Usability,"// AddBranch sets fIsManual, so we reset it; // Now, fill the buffer with the learning phase entry range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:78,learn,learning,78,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['learn'],['learning']
Usability,// Adjust SP by Amount bytes where bytes can be up to 32bit number.; // This can only be called at times that we know that there is at least one free; // register.; // This is clearly safe at prologue and epilogue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16InstrInfo.cpp:176,clear,clearly,176,interpreter/llvm-project/llvm/lib/Target/Mips/Mips16InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16InstrInfo.cpp,1,['clear'],['clearly']
Usability,"// Adjust number of parallel live ranges.; // Heuristic is simple - node with no data successors reduces; // number of live ranges. All others, increase it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:59,simpl,simple,59,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,1,['simpl'],['simple']
Usability,"// Advance to next usable decl, or return if there is no next usable decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:19,usab,usable,19,core/metacling/src/TClingClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx,2,['usab'],['usable']
Usability,"// Advance to next usable decl, or return if; // there is no next usable decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:19,usab,usable,19,core/metacling/src/TClingTypedefInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx,2,['usab'],['usable']
Usability,"// After scheduling the definition of a VRegCycle, clear the isVRegCycle flag of; // CopyFromReg operands. We should no longer penalize other uses of this VReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:51,clear,clear,51,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['clear'],['clear']
Usability,"// After the assert above we can be sure that both operands are of the same; // valid type and use the same symbol/index/address, thus displacement shift; // calculation is rather simple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp:180,simpl,simple,180,interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,1,['simpl'],['simple']
Usability,"// After this the meta-data is also cleared.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:36,clear,cleared,36,core/newdelete/src/NewDelete.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx,1,['clear'],['cleared']
Usability,"// After visiting all the edges, there are three cases that we; // can handle immediately:; //; // - All the edge weights are known (i.e., NumUnknownEdges == 0).; // In this case, we simply check that the sum of all the edges; // is the same as BB's weight. If not, we change BB's weight; // to match. Additionally, if BB had not been visited before,; // we mark it visited.; //; // - Only one edge is unknown and BB has already been visited.; // In this case, we can compute the weight of the edge by; // subtracting the total block weight from all the known; // edge weights. If the edges weight more than BB, then the; // edge of the last remaining edge is set to zero.; //; // - There exists a self-referential edge and the weight of BB is; // known. In this case, this edge can be based on BB's weight.; // We add up all the other known edges and set the weight on; // the self-referential edge as we did in the previous case.; //; // In any other case, we must continue iterating. Eventually,; // all edges will get a weight, or iteration will stop when; // it reaches SampleProfileMaxPropagateIterations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h:183,simpl,simply,183,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,1,['simpl'],['simply']
Usability,"// Again, clearing bits beyond IterCount.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp:10,clear,clearing,10,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,1,['clear'],['clearing']
Usability,// Aggressively clean up dead instructions that simplifyLoopIVs already; // identified. Any remaining should be cleaned up below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp:48,simpl,simplifyLoopIVs,48,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,1,['simpl'],['simplifyLoopIVs']
Usability,// Aggressively clear all kill flags.; // They are reinserted by VirtRegRewriter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:16,clear,clear,16,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['clear'],['clear']
Usability,// Alias and anchors can be simple keys.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp:28,simpl,simple,28,interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,1,['simpl'],['simple']
Usability,// All bits clear?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:12,clear,clear,12,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['clear'],['clear']
Usability,// All bits that are zeroed by (VSHL (VLSHR Val X) X) are not; // used - simplify to just Val.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:73,simpl,simplify,73,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simplify']
Usability,"// All clear, tell the register allocator to prefer this register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp:7,clear,clear,7,interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp,1,['clear'],['clear']
Usability,"// All clear, the live ranges can be merged.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:7,clear,clear,7,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['clear'],['clear']
Usability,"// All clear, widen the COPY.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:7,clear,clear,7,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['clear'],['clear']
Usability,"// All defs/phis from outside BB that are used in BB, are valid uses in P1.; // Since those defs/phis must have dominated BB, and also dominate P1.; // Defs from BB being used in BB will be replaced with the cloned defs from; // VM. The uses of BB's Phi (if it exists) in BB will be replaced by the; // incoming def into the Phi from P1.; // Instructions cloned into the predecessor are in practice sometimes; // simplified, so disable the use of the template, and create an access from; // scratch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:413,simpl,simplified,413,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['simpl'],['simplified']
Usability,"// All exiting blocks we have gathered dominate loop's latch, so exact trip; // count is simply a minimum out of all these calculated exit counts.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:89,simpl,simply,89,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simply']
Usability,// All loops in Root need to be in simplify and rotated form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp:35,simpl,simplify,35,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,1,['simpl'],['simplify']
Usability,"// All of the below API is for querying properties of the ""outer type"", i.e.; // the type that contains the indexed type. Most of the time this is just; // the type that was visited immediately prior to the indexed type, but for; // the first element this is an unbounded array of the GEP's source element; // type, for which there is no clearly corresponding IR type (we've; // historically used a pointer type as the outer type in this case, but; // pointers will soon lose their element type).; //; // FIXME: Most current users of this class are just interested in byte; // offsets (a few need to know whether the outer type is a struct because; // they are trying to replace a constant with a variable, which is only; // legal for arrays, e.g. canReplaceOperandWithVariable in SimplifyCFG.cpp);; // we should provide a more minimal API here that exposes not much more than; // that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h:338,clear,clearly,338,interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h,2,"['Simpl', 'clear']","['SimplifyCFG', 'clearly']"
Usability,// All sign bits clear?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:17,clear,clear,17,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['clear'],['clear']
Usability,// All the other cases basically behave like simple offsetting.; // Handle the extvector case we ignored above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:45,simpl,simple,45,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['simpl'],['simple']
Usability,// All valid 64-bit to 32-bit casts work by chopping off the high; // bits. Any masking only clearing the low bits will also apply in the new; // address space.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp:93,clear,clearing,93,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,1,['clear'],['clearing']
Usability,// All we care about is that nothing from Start to ClobberAt clobbers Start.; // We learn nothing from revisiting nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:84,learn,learn,84,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,1,['learn'],['learn']
Usability,"// Allocate extra memory for the string and copy it.; // FIXME: This is incorrect, Operands are owned by unique_ptr with a default; // deleter which will destroy them by simply using ""delete"", not correctly; // calling operator delete on this extra memory after calling the dtor; // explicitly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/AsmParser/PPCAsmParser.cpp:170,simpl,simply,170,interpreter/llvm-project/llvm/lib/Target/PowerPC/AsmParser/PPCAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/AsmParser/PPCAsmParser.cpp,1,['simpl'],['simply']
Usability,"// Allow atomicrmw only if 'x' and 'update' are integer values, lvalue for 'x'; // expression is simple and atomic is allowed for the given type for the; // target platform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:97,simpl,simple,97,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['simpl'],['simple']
Usability,// Allow exactly one instruction to be speculated regardless of its cost; // (as long as it is safe to do so).; // This is intended to flatten the CFG even if the instruction is a division; // or other expensive operation. The speculation of an expensive instruction; // is expected to be undone in CodeGenPrepare if the speculation has not; // enabled further IR optimizations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:289,undo,undone,289,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['undo'],['undone']
Usability,// Allow reading from a GUID declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:24,GUID,GUID,24,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['GUID'],['GUID']
Usability,// Allow use in constant bitcasts and simply look through them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:38,simpl,simply,38,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['simpl'],['simply']
Usability,// Allow wider loads if they are sufficiently aligned to avoid memory faults; // and if the original load is simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:109,simpl,simple,109,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['simpl'],['simple']
Usability,// Already simplified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:11,simpl,simplified,11,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,1,['simpl'],['simplified']
Usability,"// Also check if our value operand is defined by a load of the same memory; // location, and the memory state is the same as it was then (otherwise, it; // could have been overwritten later. See test32 in; // transforms/DeadStoreElimination/simple.ll).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:241,simpl,simple,241,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['simpl'],['simple']
Usability,"// Also check the simpler case, where we can directly reuse the scalar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:18,simpl,simpler,18,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simpler']
Usability,// Also try to simplify calls to fortified library functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp:15,simpl,simplify,15,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,1,['simpl'],['simplify']
Usability,"// Although icmp ult %x, 0 is an unusual thing to try and should generally; // have been simplified, it does not verify with undef inputs so ensure we; // are not in a strange state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:89,simpl,simplified,89,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['simpl'],['simplified']
Usability,"// Although there are 32 vector registers, v0 is special in that it is the; // only register that can be used to hold a mask.; // FIXME: Should we conservatively return 31 as the number of usable; // vector registers?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.h:189,usab,usable,189,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.h,1,['usab'],['usable']
Usability,"// Always convert switches to br_tables unless there is only one case, which; // is equivalent to a simple branch. This reduces code size for wasm, and we; // defer possible jump table optimizations to the VM.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:100,simpl,simple,100,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['simpl'],['simple']
Usability,// Always emit simple barriers!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:15,simpl,simple,15,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,2,['simpl'],['simple']
Usability,"// Always join simple intervals that are defined by a single copy from a; // reserved register. This doesn't increase register pressure, so it is; // always beneficial.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:15,simpl,simple,15,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['simpl'],['simple']
Usability,"// Always simplify call frame pseudo instructions, even when; // hasReservedCallFrame is false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRFrameLowering.cpp:10,simpl,simplify,10,interpreter/llvm-project/llvm/lib/Target/AVR/AVRFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRFrameLowering.cpp,1,['simpl'],['simplify']
Usability,"// An address usable by ll, and sc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/Mips.h:14,usab,usable,14,interpreter/llvm-project/clang/lib/Basic/Targets/Mips.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/Mips.h,1,['usab'],['usable']
Usability,"// An empty filter catches everything, so there is no point in keeping any; // following clauses or marking the landingpad as having a cleanup. By; // dealing with this case here the following code is made a bit simpler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:212,simpl,simpler,212,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simpler']
Usability,"// An entry value operator must appear at the beginning or immediately; // following `DW_OP_LLVM_arg 0`, and the number of operations it cover can; // currently only be 1, because we support only entry values of a simple; // register location. One reason for this is that we currently can't; // calculate the size of the resulting DWARF block for other expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp:214,simpl,simple,214,interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp,1,['simpl'],['simple']
Usability,"// An enum that contains the extended 'partial' parsed variants. This type; // should never escape the initial parse functionality, but is useful for; // simplifying the implementation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp:154,simpl,simplifying,154,interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,1,['simpl'],['simplifying']
Usability,// An expression E is a core constant expression unless the evaluation of E; // would evaluate one of the following: [C++23] - a control flow that passes; // through a declaration of a variable with static or thread storage duration; // unless that variable is usable in constant expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:261,usab,usable,261,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['usab'],['usable']
Usability,"// An external user of the penultimate value need to see EndValue - Step.; // The simplest way to get this is to recompute it from the constituent SCEVs,; // that is Start + (Step * (CRD - 1)).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:82,simpl,simplest,82,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['simpl'],['simplest']
Usability,// An implicit deduction guide acts as if it's within the class template; // specialization described by its name and first N template params.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:25,guid,guide,25,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['guid'],['guide']
Usability,"// An implicit deduction guide is semantically in the context enclosing the; // class template, but for access purposes behaves like the constructor; // from which it was produced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp:25,guid,guide,25,interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,1,['guid'],['guide']
Usability,// An insertelement to the same constant index as our extract will simplify; // to the scalar inserted element. An insertelement to a different constant; // index is irrelevant to our extract.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:67,simpl,simplify,67,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['simpl'],['simplify']
Usability,"// An instruction can correspond to multiple candidates. Therefore, instead of; // simply deleting an instruction when we rewrite it, we mark its parent as; // nullptr (i.e. unlink it) so that we can skip the candidates whose; // instruction is already rewritten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp:83,simpl,simply,83,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,1,['simpl'],['simply']
Usability,// An optimized implementation for this simple case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:40,simpl,simple,40,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,6,['simpl'],['simple']
Usability,// An over-accepting simplification of the HTTP RFC 7230 spec.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp:21,simpl,simplification,21,interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp,1,['simpl'],['simplification']
Usability,"// An unsigned shift of the full lane size always generates zero, so we can; // simply emit a zero vector. A signed shift of the full lane size does the; // same thing as shifting by one bit fewer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:80,simpl,simply,80,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['simpl'],['simply']
Usability,// Analogous to lshr (simply not yet canonicalized),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:22,simpl,simply,22,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simply']
Usability,"// Analytically convolved p.d.f.s; // Build a simple decay PDF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:46,simpl,simple,46,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['simpl'],['simple']
Usability,"// Analyze interleaved accesses and collect them into interleaved load and; // store groups.; //; // When generating code for an interleaved load group, we effectively hoist all; // loads in the group to the location of the first load in program order. When; // generating code for an interleaved store group, we sink all stores to the; // location of the last store. This code motion can change the order of load; // and store instructions and may break dependences.; //; // The code generation strategy mentioned above ensures that we won't violate; // any write-after-read (WAR) dependences.; //; // E.g., for the WAR dependence: a = A[i]; // (1); // A[i] = b; // (2); //; // The store group of (2) is always inserted at or below (2), and the load; // group of (1) is always inserted at or above (1). Thus, the instructions will; // never be reordered. All other dependences are checked to ensure the; // correctness of the instruction reordering.; //; // The algorithm visits all memory accesses in the loop in bottom-up program; // order. Program order is established by traversing the blocks in the loop in; // reverse postorder when collecting the accesses.; //; // We visit the memory accesses in bottom-up order because it can simplify the; // construction of store groups in the presence of write-after-write (WAW); // dependences.; //; // E.g., for the WAW dependence: A[i] = a; // (1); // A[i] = b; // (2); // A[i + 1] = c; // (3); //; // We will first create a store group with (3) and (2). (1) can't be added to; // this group because it and (2) are dependent. However, (1) can be grouped; // with other accesses that may precede it in program order. Note that a; // bottom-up order does not imply that WAW dependences should not be checked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:1236,simpl,simplify,1236,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['simpl'],['simplify']
Usability,// And clear out the handle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/GlobalsModRef.cpp:7,clear,clear,7,interpreter/llvm-project/llvm/lib/Analysis/GlobalsModRef.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/GlobalsModRef.cpp,1,['clear'],['clear']
Usability,"// And clear the output list, as we start merging a new set of results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:7,clear,clear,7,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['clear'],['clear']
Usability,// And distributes over Or. Try some generic simplifications based on this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:45,simpl,simplifications,45,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplifications']
Usability,// And distributes over Xor. Try some generic simplifications based on this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:46,simpl,simplifications,46,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplifications']
Usability,"// And make sure that the negative value of increment can be added to all; // other offsets after the BaseAccess. We rely on either; // dominates(BaseAccess, OtherAccess) or dominates(OtherAccess, BaseAccess); // to keep things simple.; // This also adds a simple codesize metric, to detect if an instruction (like; // t2LDRBi12) which can often be shrunk to a thumb1 instruction (tLDRBi); // cannot because it is converted to something else (t2LDRBi8). We start this; // at -1 for the gain from removing the increment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:228,simpl,simple,228,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,2,['simpl'],['simple']
Usability,// And may also be followed by a simple key.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp:33,simpl,simple,33,interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,1,['simpl'],['simple']
Usability,// And resume where we left off.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:7,resume,resume,7,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['resume'],['resume']
Usability,"// And simply save this node into our map",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:7,simpl,simply,7,roofit/histfactory/src/HistFactoryNavigation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx,1,['simpl'],['simply']
Usability,// And with simple assignments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:12,simpl,simple,12,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['simpl'],['simple']
Usability,"// Another helper class to be used in std::for_each to simplify; // the code later. It implements the operator() to know if a; // specified Box is big enough to contain any 'space' inside.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SparseData.cxx:55,simpl,simplify,55,math/mathcore/src/SparseData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SparseData.cxx,1,['simpl'],['simplify']
Usability,"// Any SCCs reduced are now already in the list of child loops, so simply; // add them all to the worklist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FixIrreducible.cpp:67,simpl,simply,67,interpreter/llvm-project/llvm/lib/Transforms/Utils/FixIrreducible.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FixIrreducible.cpp,1,['simpl'],['simply']
Usability,"// Any SCCs reduced are now already in the list of top-level loops, so simply; // add them all to the worklist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FixIrreducible.cpp:71,simpl,simply,71,interpreter/llvm-project/llvm/lib/Transforms/Utils/FixIrreducible.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FixIrreducible.cpp,1,['simpl'],['simply']
Usability,// Any bits clear?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:12,clear,clear,12,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['clear'],['clear']
Usability,"// Any bits known to already be 0 need not be cleared again, which can help; // reduce the size of the immediate to one supported by the instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:46,clear,cleared,46,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['clear'],['cleared']
Usability,// Any calls from begging of the block up to ResumeOrDestroy?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:45,Resume,ResumeOrDestroy,45,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['Resume'],['ResumeOrDestroy']
Usability,// Any calls in all of the blocks between SaveBB and ResumeOrDestroyBB?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:53,Resume,ResumeOrDestroyBB,53,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['Resume'],['ResumeOrDestroyBB']
Usability,// Any sign bits clear?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:17,clear,clear,17,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['clear'],['clear']
Usability,"// Applies only for rainbowed display modes; // (rgb smooth algorithm, rgb modulo color; // component, cmy smooth algorithm, cmy; // modulo color component, cie smooth; // algorithm, cie modulo color component,; // yiq smooth algorithm, yiq modulo color; // component, hsv smooth algorithm, hsv; // modulo color component, it does not; // apply for simple display modes; // algorithm group.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:349,simpl,simple,349,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['simpl'],['simple']
Usability,// Apply DeMorgan's Law for 'nand' / 'nor' logic with an inverted operand.; // We must eliminate the and/or (one-use) for these transforms to not increase; // the instruction count.; //; // ~(~X & Y) --> (X | ~Y); // ~(Y & ~X) --> (X | ~Y); //; // Note: The logical matches do not check for the commuted patterns because; // those are handled via SimplifySelectsFeedingBinaryOp().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:347,Simpl,SimplifySelectsFeedingBinaryOp,347,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['Simpl'],['SimplifySelectsFeedingBinaryOp']
Usability,// Apply later when we have a usable value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:30,usab,usable,30,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['usab'],['usable']
Usability,"// As a heuristic, treat globals as configuration values. Note; // that we only will get here if Sema evaluated this; // condition to a constant expression, which means the global; // had to be declared in a way to be a truly constant value.; // We could generalize this to local variables, but it isn't; // clear if those truly represent configuration values that; // gate unreachable code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:308,clear,clear,308,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['clear'],['clear']
Usability,"// As a last resort, try SimplifyInstruction or constant folding.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp:25,Simpl,SimplifyInstruction,25,interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,1,['Simpl'],['SimplifyInstruction']
Usability,"// As a very special optimization, in ARC++, if the l-value is the; // result of a non-volatile assignment, do a simple retain of the; // result of the call to objc_storeWeak instead of reloading.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:113,simpl,simple,113,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['simpl'],['simple']
Usability,"// As an extension, attempt to ""fix"" an ambiguity by erasing all non-type; // results, and all non-matching results if we have a search type. It's not; // clear what the right behavior is if destructor lookup hits an ambiguity,; // but other compilers do generally accept at least some kinds of; // ambiguity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:155,clear,clear,155,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['clear'],['clear']
Usability,"// As an optimization, we can clear the SignExtended flag because; // sext(zext(a)) = zext(a). Verified in @sext_zext in split-gep.ll.; //; // Clear the NonNegative flag, because zext(a) >= 0 does not imply a >= 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:30,clear,clear,30,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"// As of implementation time, simply calling `addRange(Value)` would also go; // through `update`. But that would rely on the implementation of; // `StringRef::begin()` and `StringRef::end()`. Explicitly call `update` to; // guarantee the fast path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:30,simpl,simply,30,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,1,['simpl'],['simply']
Usability,"// As of implementation time, simply calling `addRange(Value)` would also go; // through the `update` fast path. But that would rely on the implementation; // details of `ArrayRef::begin()` and `ArrayRef::end()`. Explicitly call; // `update` to guarantee the fast path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:30,simpl,simply,30,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,1,['simpl'],['simply']
Usability,"// As of py3.11, there is no longer a lookup function pointer in the dict object; // to replace. Since this feature is not widely advertised, it's simply dropped",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:147,simpl,simply,147,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,1,['simpl'],['simply']
Usability,"// As we only have two colors, we can track the global (BB-level) balance of; // odds versus evens. We aim to keep this near zero to keep both execution; // units fed.; // Positive means we're even-heavy, negative we're odd-heavy.; //; // FIXME: If chains have interdependencies, for example:; // mul r0, r1, r2; // mul r3, r0, r1; // We do not model this and may color each one differently, assuming we'll; // get ILP when we obviously can't. This hasn't been seen to be a problem; // in practice so far, so we simplify the algorithm by ignoring it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp:512,simpl,simplify,512,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp,1,['simpl'],['simplify']
Usability,// Ask the SSA construction algorithm where we should put PHIs. Clear; // anything that might have been hanging around from earlier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:64,Clear,Clear,64,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['Clear'],['Clear']
Usability,// Assemble at least kMinInstructionsForSnippet instructions by repeating; // the snippet for debug/analysis. This is so that the user clearly; // understands that the inside instructions are repeated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.cpp:135,clear,clearly,135,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.cpp,1,['clear'],['clearly']
Usability,"// Assign ValueIds to any callee values in the index that came from; // indirect call profiles and were recorded as a GUID not a Value*; // (which would have been assigned an ID by the ValueEnumerator).; // The starting ValueId is just after the number of values in the; // ValueEnumerator, so that they can be emitted in the VST.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:118,GUID,GUID,118,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['GUID'],['GUID']
Usability,"// Assign unique value ids to all summaries to be written, for use; // in writing out the call graph edges. Save the mapping from GUID; // to the new global value id to use when writing those edges, which; // are currently saved in the index in terms of GUID.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:130,GUID,GUID,130,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,2,['GUID'],['GUID']
Usability,"// Assignment is deleted because it is not clear how it should behave.; // Should default assignment be used? But then, it will use the assignment; // operators of the RooFit collections, which actually don't do assignment,; // but value synchronization! Should it be re-implemented to be actual; // assignment? That would be inconsistent with the base class! So it's; // better to not support it at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCollectionProxy.h:43,clear,clear,43,roofit/roofitcore/inc/RooCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCollectionProxy.h,1,['clear'],['clear']
Usability,"// Assigns a GUID to a value ID. This normally appears only in combined; // summaries, but it can also appear in per-module summaries for PGO data.; // [valueid, guid]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h:13,GUID,GUID,13,interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,2,"['GUID', 'guid']","['GUID', 'guid']"
Usability,// Assume parameters of a potential constant expression are usable in; // constant expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:60,usab,usable,60,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['usab'],['usable']
Usability,// Assume that no intrinsic can resume the coroutine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:32,resume,resume,32,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['resume'],['resume']
Usability,"// Assume the most general case where the switch is lowered into; // either a jump table, bit test, or a balanced binary tree consisting of; // case clusters without merging adjacent clusters with the same; // destination. We do not consider the switches that are lowered with a mix; // of jump table/bit test/binary search tree. The cost of the switch is; // proportional to the size of the tree or the size of jump table range.; //; // NB: We convert large switches which are just used to initialize large phi; // nodes to lookup tables instead in simplifycfg, so this shouldn't prevent; // inlining those. It will prevent inlining in cases where the optimization; // does not (yet) fire.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:550,simpl,simplifycfg,550,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simplifycfg']
Usability,// Assuming that constant compared with zero is not undef (but it may be; // a vector with some undef elements). Otherwise (when a constant is undef); // the select expression should be already simplified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:194,simpl,simplified,194,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['simpl'],['simplified']
Usability,"// Assuming that trivialTailPHIs() is true, update the Tail PHIs by simply; // removing the CmpBB operands. The Head operands will be identical.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp:68,simpl,simply,68,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,1,['simpl'],['simply']
Usability,"// Assuming the effective width of Y is not larger than A, i.e. all bits; // from X and Y are disjoint in (X << A) | Y,; // if the mask of this AND op covers all bits of X or Y, while it covers; // no bits from the other, we can bypass this AND op. E.g.,; // ((X << A) | Y) & Mask -> Y,; // if Mask = ((1 << effective_width_of(Y)) - 1); // ((X << A) | Y) & Mask -> X << A,; // if Mask = ((1 << effective_width_of(X)) - 1) << A; // SimplifyDemandedBits in InstCombine can optimize the general case.; // This pattern aims to help other passes for a common case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:431,Simpl,SimplifyDemandedBits,431,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['Simpl'],['SimplifyDemandedBits']
Usability,"// At -O0, fast-regalloc cannot cope with the live vregs necessary to; // implement atomicrmw without spilling. If the target address is also on the; // stack and close enough to the spill slot, this can lead to a situation; // where the monitor always gets cleared and the atomic operation can never; // succeed. So at -O0 lower this operation to a CAS loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:258,clear,cleared,258,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['clear'],['cleared']
Usability,"// At -O0, fast-regalloc cannot cope with the live vregs necessary to; // implement atomicrmw without spilling. If the target address is also on the; // stack and close enough to the spill slot, this can lead to a situation; // where the monitor always gets cleared and the atomic operation can never; // succeed. So at -O0 lower this operation to a CAS loop. Also worthwhile if; // we have a single CAS instruction that can replace the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:258,clear,cleared,258,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['clear'],['cleared']
Usability,"// At -O0, fast-regalloc cannot cope with the live vregs necessary to; // implement atomicrmw without spilling. If the target address is also on; // the stack and close enough to the spill slot, this can lead to a; // situation where the monitor always gets cleared and the atomic operation; // can never succeed. So at -O0 lower this operation to a CAS loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:258,clear,cleared,258,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['clear'],['cleared']
Usability,"// At -O0, fast-regalloc cannot cope with the live vregs necessary to; // implement cmpxchg without spilling. If the address being exchanged is also; // on the stack and close enough to the spill slot, this can lead to a; // situation where the monitor always gets cleared and the atomic operation; // can never succeed. So at -O0 we need a late-expanded pseudo-inst instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:265,clear,cleared,265,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['clear'],['cleared']
Usability,"// At creation of the template the template parameters are ""adopted""; // (DeclContext is changed). After this possible change the lookup table; // must be updated.; // At deduction guides the DeclContext of the template parameters may be; // different from what we would expect, it may be the class template, or a; // probably different CXXDeductionGuideDecl. This may come from the fact that; // the template parameter objects may be shared between deduction guides or; // the class template, and at creation of multiple FunctionTemplateDecl; // objects (for deduction guides) the same parameters are re-used. The; // ""adoption"" happens multiple times with different parent, even recursively; // for TemplateTemplateParmDecl. The same happens at import when the; // FunctionTemplateDecl objects are created, but in different order.; // In this way the DeclContext of these template parameters is not necessarily; // the same as in the ""from"" context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:181,guid,guides,181,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,3,['guid'],['guides']
Usability,"// At first, MENUEX_TEMPLATE_HEADER structure.; // Ref:; // https://learn.microsoft.com/en-us/windows/win32/menurc/menuex-template-header",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceFileWriter.cpp:68,learn,learn,68,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceFileWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceFileWriter.cpp,1,['learn'],['learn']
Usability,"// At the moment we do not parse this info (and it is simply copied over),; // but the proper support will be added later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/MachO/MachOObject.h:54,simpl,simply,54,interpreter/llvm-project/llvm/lib/ObjCopy/MachO/MachOObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/MachO/MachOObject.h,3,['simpl'],['simply']
Usability,"// At the new basic blocks we need to have live-in the registers, used; // for the return value as well as LR, used to clear registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:119,clear,clear,119,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['clear'],['clear']
Usability,"// At this point the lookup is in either the NotInGenerator state, or in; // the ResumedForGenerator state.; // If this lookup is in the NotInGenerator state then check whether the; // generator is in use. If the generator is not in use then move the; // lookup to the InGenerator state and continue. If the generator is; // already in use then just add this lookup to the pending lookups list; // and bail out.; // If this lookup is in the ResumedForGenerator state then just move it; // to InGenerator and continue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp:81,Resume,ResumedForGenerator,81,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,2,['Resume'],['ResumedForGenerator']
Usability,"// At this point, 'Matches' contains a list of seemingly valid bases, however; // in the event that we have more than 1 match, it is possible that the base; // of one of the matches might be disqualified for being a base of another; // valid match. We can count on cyclical instantiations being invalid to; // simplify the disqualifications. That is, if A & B are both matches, and B; // inherits from A (disqualifying A), we know that A cannot inherit from B.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:310,simpl,simplify,310,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['simpl'],['simplify']
Usability,"// At this point, all IfBlocks are empty, so our if statement; // has been flattened. Change DomBlock to jump directly to our new block to; // avoid other simplifycfg's kicking in on the diamond.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:155,simpl,simplifycfg,155,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['simpl'],['simplifycfg']
Usability,"// At this point, all variable type sets should be simple, i.e. only; // have a default mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:51,simpl,simple,51,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['simpl'],['simple']
Usability,"// At this point, since we have made changes we have at least removed; // a call instruction. However, in the process we do some incremental; // simplification of the surrounding code. This simplification can; // essentially do all of the same things as a function pass and we can; // re-use the exact same logic for updating the call graph to reflect the; // change.; // Inside the update, we also update the FunctionAnalysisManager in the; // proxy for this particular SCC. We do this as the SCC may have changed and; // as we're going to mutate this particular function we want to make sure; // the proxy is in place to forward any invalidation events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:145,simpl,simplification,145,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,2,['simpl'],['simplification']
Usability,"// At this point, the code is well formed. We now simplify the unrolled loop,; // doing constant propagation and dead code elimination as we go.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp:50,simpl,simplify,50,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,1,['simpl'],['simplify']
Usability,"// At this point, we've finished our major CFG changes. As part of cloning; // the loop into the preheader we've simplified instructions and the; // duplicated conditional branch may now be branching on a constant. If it is; // branching on a constant and if that constant means that we enter the loop,; // then we fold away the cond branch to an uncond branch. This simplifies the; // loop in cases important for nested loops, and it also means we don't have; // to split as many edges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp:113,simpl,simplified,113,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp,2,['simpl'],"['simplified', 'simplifies']"
Usability,"// At this stage, nodes of the graph have been already visited, and costs have; // been propagated through the edges (see method `propagateThroughEdges()`).; // Identify the node N with the highest cost in the graph. By construction,; // that node is the last instruction of our critical sequence.; // Field N.Depth would tell us the total length of the sequence.; //; // To obtain the sequence of critical edges, we simply follow the chain of; // critical predecessors starting from node N (field; // DGNode::CriticalPredecessor).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp:417,simpl,simply,417,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,1,['simpl'],['simply']
Usability,// Atom Silvermont codes from the Intel software optimization guide.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:62,guid,guide,62,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['guid'],['guide']
Usability,"// Attempt to avoid passing indirect results using byval when possible. This; // is important for good codegen.; //; // We do this by coercing the value into a scalar type which the backend can; // handle naturally (i.e., without using byval).; //; // For simplicity, we currently only do this when we have exhausted all of the; // free integer registers. Doing this when there are free integer registers; // would require more care, as we would have to ensure that the coerced value; // did not claim the unused register. That would require either reording the; // arguments to the function (so that any subsequent inreg values came first),; // or only doing this optimization when there were no following arguments that; // might be inreg.; //; // We currently expect it to be rare (particularly in well written code) for; // arguments to be passed on the stack when there are still free integer; // registers available (this would typically imply large structs being passed; // by value), so this seems like a fair tradeoff for now.; //; // We can revisit this if the backend grows support for 'onstack' parameter; // attributes. See PR12193.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:256,simpl,simplicity,256,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['simpl'],['simplicity']
Usability,// Attempt to clear as double,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:14,clear,clear,14,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['clear'],['clear']
Usability,"// Attempt to combine a shuffle of 2 inputs of 'scalar sources' -; // BUILD_VECTOR or SCALAR_TO_VECTOR into a single BUILD_VECTOR.; //; // SHUFFLE(BUILD_VECTOR(), BUILD_VECTOR()) -> BUILD_VECTOR() is always; // a simplification in some sense, but it isn't appropriate in general: some; // BUILD_VECTORs are substantially cheaper than others. The general case; // of a BUILD_VECTOR requires inserting each element individually (or; // performing the equivalent in a temporary stack variable). A BUILD_VECTOR of; // all constants is a single constant pool load. A BUILD_VECTOR where each; // element is identical is a splat. A BUILD_VECTOR where most of the operands; // are undef lowers to a small number of element insertions.; //; // To deal with this, we currently use a bunch of mostly arbitrary heuristics.; // We don't fold shuffles where one side is a non-zero constant, and we don't; // fold shuffles if the resulting (non-splat) BUILD_VECTOR would have duplicate; // non-constant operands. This seems to work out reasonably well in practice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:213,simpl,simplification,213,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplification']
Usability,"// Attempt to create a valid clear mask, splitting the mask into; // sub elements and checking to see if each is; // all zeros or all ones - suitable for shuffle masking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:29,clear,clear,29,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['clear'],['clear']
Usability,"// Attempt to delete entire basic blocks at a time to speed up; // convergence... this actually works by setting the terminator of the blocks; // to a return instruction then running simplifycfg, which can potentially; // shrinks the code dramatically quickly; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp:183,simpl,simplifycfg,183,interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp,1,['simpl'],['simplifycfg']
Usability,// Attempt to extract+simplify a (constant pool load) shuffle mask.; // TODO: Support other types from getTargetShuffleMaskIndices?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:22,simpl,simplify,22,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplify']
Usability,"// Attempt to fold BITOP(SHIFT(X,Z),SHIFT(Y,Z)) -> SHIFT(BITOP(X,Y),Z).; // NOTE: This is a very limited case of what SimplifyUsingDistributiveLaws; // handles in InstCombine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:118,Simpl,SimplifyUsingDistributiveLaws,118,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Simpl'],['SimplifyUsingDistributiveLaws']
Usability,// Attempt to generically simplify the variable shuffle mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:26,simpl,simplify,26,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplify']
Usability,"// Attempt to lookup the copy constructor. Various pieces of machinery; // will spring into action, like template instantiation, which means this; // cannot be a simple walk of the class's decls. Instead, we must perform; // lookup and overload resolution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:162,simpl,simple,162,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['simpl'],['simple']
Usability,// Attempt to map directly to (simple) MVT types to let us match custom entries.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:31,simpl,simple,31,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,1,['simpl'],['simple']
Usability,"// Attempt to propagate a distance; // constraint into a subscript pair (Src and Dst).; // Return true if some simplification occurs.; // If the simplification isn't exact (that is, if it is conservative; // in terms of dependence), set consistent to false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:111,simpl,simplification,111,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,['simpl'],['simplification']
Usability,"// Attempt to propagate a line; // constraint into a subscript pair (Src and Dst).; // Return true if some simplification occurs.; // If the simplification isn't exact (that is, if it is conservative; // in terms of dependence), set consistent to false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:107,simpl,simplification,107,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,['simpl'],['simplification']
Usability,// Attempt to propagate a point; // constraint into a subscript pair (Src and Dst).; // Return true if some simplification occurs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:108,simpl,simplification,108,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['simpl'],['simplification']
Usability,"// Attempt to simplify AVX2 per-element shift intrinsics to a generic IR shift.; // Unlike the generic IR shifts, the intrinsics have defined behaviour for out; // of range shift amounts (logical - set to zero, arithmetic - splat sign bit).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,1,['simpl'],['simplify']
Usability,// Attempt to simplify BUILD_VECTOR.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,4,['simpl'],['simplify']
Usability,// Attempt to simplify inputs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplify']
Usability,// Attempt to simplify the MOVMSK input based on the comparison type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplify']
Usability,// Attempt to simplify to a constant or shuffle vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,2,['simpl'],['simplify']
Usability,"// Attempt to simplify to a constant, shuffle vector or EXTRQI call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,1,['simpl'],['simplify']
Usability,"// Attempt to simplify to a constant, shuffle vector or INSERTQI call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,1,['simpl'],['simplify']
Usability,"// Attempt to sort the inputs my ascending mask values to make simpler input; // shuffles and push complex shuffles down to the uses. We sort on the first; // of the two input shuffle orders, to try and get at least one input into a; // nice order.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:63,simpl,simpler,63,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['simpl'],['simpler']
Usability,"// Attempt to truncate the entire input expression tree to the destination; // type. Only do this if the dest type is a simple type, don't convert the; // expression tree to something weird like i93 unless the source is also; // strange.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp:120,simpl,simple,120,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,1,['simpl'],['simple']
Usability,"// Attribute AT_OpenCLKernel affects the calling convention for SPIR; // and AMDGPU targets, hence it cannot be treated as a calling; // convention attribute. This is the simplest place to infer; // calling convention for OpenCL kernels.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:171,simpl,simplest,171,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['simpl'],['simplest']
Usability,"// Attributes of an instruction that must be known before the opcode can be; // processed correctly. Most of these indicate the presence of particular; // prefixes, but ATTR_64BIT is simply an attribute of the decoding context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/X86DisassemblerDecoderCommon.h:183,simpl,simply,183,interpreter/llvm-project/llvm/include/llvm/Support/X86DisassemblerDecoderCommon.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/X86DisassemblerDecoderCommon.h,1,['simpl'],['simply']
Usability,"// Author: Axel Naumann <axel@cern.ch>; // Date: 2017-05-31; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:172,Feedback,Feedback,172,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['Feedback'],['Feedback']
Usability,"// Author: Bertrand Bellenot 22/08/02; /*************************************************************************; * Copyright (C) 1995-2002, Bertrand Bellenot. *; * All rights reserved. *; * *; * For the licensing terms see the LICENSE file. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Definition of a simple message box for the RootShower application //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSMsgBox.h:424,simpl,simple,424,test/RootShower/RSMsgBox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSMsgBox.h,1,['simpl'],['simple']
Usability,"// Author: Bertrand Bellenot 22/08/02; /*************************************************************************; * Copyright (C) 1995-2002, Bertrand Bellenot. *; * All rights reserved. *; * *; * For the licensing terms see the LICENSE file. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // MyDetector //; // defines a simple detector class with one geometry, one material //; // and the physical properties of the detector's material //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyDetector.h:436,simpl,simple,436,test/RootShower/MyDetector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyDetector.h,1,['simpl'],['simple']
Usability,"// Author: Guido Volpi 05/18/2008; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPieSliceEditor.h:11,Guid,Guido,11,gui/ged/inc/TPieSliceEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPieSliceEditor.h,1,['Guid'],['Guido']
Usability,"// Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLD *; * *; * *; * Description: *; * Linear Discriminant (Simple Linear Regression) *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - Uni Bonn, Germany *; * *; * Copyright (c) 2008-2011: *; * CERN, Switzerland *; * PAN, Poland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLD.h:334,Simpl,Simple,334,tmva/tmva/inc/TMVA/MethodLD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLD.h,1,['Simpl'],['Simple']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2017-06-29; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/inc/gui_handler.h:174,Feedback,Feedback,174,gui/cefdisplay/inc/gui_handler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/inc/gui_handler.h,10,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2017-06-29; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; // Copyright (c) 2013 The Chromium Embedded Framework Authors. All rights; // reserved. Use of this source code is governed by a BSD-style license that; // can be found in the LICENSE file.; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/inc/simple_app.h:174,Feedback,Feedback,174,gui/cefdisplay/inc/simple_app.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/inc/simple_app.h,4,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2019-10-14; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowserData.hxx:174,Feedback,Feedback,174,gui/browserv7/inc/ROOT/RBrowserData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowserData.hxx,1,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2019-10-14; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserData.cxx:174,Feedback,Feedback,174,gui/browserv7/src/RBrowserData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserData.cxx,1,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2019-10-31; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx:174,Feedback,Feedback,174,gui/browserv7/inc/ROOT/RFileDialog.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx,2,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2020-08-21; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/inc/RCefWebDisplayHandle.hxx:174,Feedback,Feedback,174,gui/cefdisplay/inc/RCefWebDisplayHandle.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/inc/RCefWebDisplayHandle.hxx,2,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2021-01-22; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserGeomWidget.cxx:174,Feedback,Feedback,174,gui/browserv7/src/RBrowserGeomWidget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserGeomWidget.cxx,3,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2021-01-25; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserRCanvasWidget.cxx:174,Feedback,Feedback,174,gui/browserv7/src/RBrowserRCanvasWidget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserRCanvasWidget.cxx,2,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2021-02-11; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RWebBrowserImp.hxx:174,Feedback,Feedback,174,gui/browserv7/inc/ROOT/RWebBrowserImp.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RWebBrowserImp.hxx,2,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <S.Linev@gsi.de>; // Date: 2022-10-07; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserTreeWidget.cxx:174,Feedback,Feedback,174,gui/browserv7/src/RBrowserTreeWidget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserTreeWidget.cxx,1,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <s.linev@gsi.de>; // Date: 2017-10-16; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebWindow.hxx:174,Feedback,Feedback,174,gui/webdisplay/inc/ROOT/RWebWindow.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebWindow.hxx,4,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <s.linev@gsi.de>; // Date: 2018-08-20; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowWSHandler.hxx:174,Feedback,Feedback,174,gui/webdisplay/src/RWebWindowWSHandler.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowWSHandler.hxx,1,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <s.linev@gsi.de>; // Date: 2018-10-17; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:174,Feedback,Feedback,174,gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx,2,['Feedback'],['Feedback']
Usability,"// Author: Sergey Linev <s.linev@gsi.de>; // Date: 2018-10-24; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebDisplayArgs.hxx:174,Feedback,Feedback,174,gui/webdisplay/inc/ROOT/RWebDisplayArgs.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebDisplayArgs.hxx,2,['Feedback'],['Feedback']
Usability,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:897,simpl,simplified,897,hist/unfold/inc/TUnfold.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h,1,['simpl'],['simplified']
Usability,"// Author: Stephan Hageboeck, CERN 12 Sep 2019; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooWrapperPdf; * The RooWrapperPdf is a class that can be used to convert a function into a PDF.; *; * During construction, a RooAbsReal has to be passed. When this function is evaluated, the wrapper pdf will; * in addition evaluate its integral, and normalise the returned value. It will further ensure that negative; * return values are clipped at zero.; *; * Functions calls such as analytical integral requests or plot sampling hints are simply forwarded to the RooAbsReal; * that was passed in the constructor.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx:1135,simpl,simply,1135,roofit/roofitcore/src/RooWrapperPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx,1,['simpl'],['simply']
Usability,"// Authors: Bertrand Bellenot <bertrand.bellenot@cern.ch> Sergey Linev <S.Linev@gsi.de>; // Date: 2019-02-28; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowserReply.hxx:221,Feedback,Feedback,221,gui/browserv7/inc/ROOT/RBrowserReply.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowserReply.hxx,2,['Feedback'],['Feedback']
Usability,"// Authors: Bertrand Bellenot <bertrand.bellenot@cern.ch> Sergey Linev <S.Linev@gsi.de>; // Date: 2019-02-28; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowser.hxx:221,Feedback,Feedback,221,gui/browserv7/inc/ROOT/RBrowser.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowser.hxx,2,['Feedback'],['Feedback']
Usability,"// Authors: Sergey Linev <S.Linev@gsi.de> Iliana Betsou <Iliana.Betsou@cern.ch>; // Date: 2019-04-11; // Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanel.hxx:213,Feedback,Feedback,213,gui/fitpanelv7/inc/ROOT/RFitPanel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanel.hxx,4,['Feedback'],['Feedback']
Usability,// Avoid clearing state if we're using the same subtarget again.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MIRParser.cpp:9,clear,clearing,9,interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MIRParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MIRParser.cpp,1,['clear'],['clearing']
Usability,"// Avoid duplicate implicit defs. This will not detect cases of implicit; // defs that define registers that overlap, but it is not clear how to; // interpret that in the absence of explicit defs. Overlapping explicit; // defs are likely illegal already.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp:132,clear,clear,132,interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,1,['clear'],['clear']
Usability,// Avoid extraction of simple literals and references.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp:23,simpl,simple,23,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp,1,['simpl'],['simple']
Usability,"// Avoid infinite or exponential worklist processing.; // Also ensure unique worklist users.; // If Def is a LoopPhi, it may not be in the Simplified set, so check for; // self edges first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:139,Simpl,Simplified,139,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['Simpl'],['Simplified']
Usability,"// Avoid merging nontemporal stores since the resulting; // memcpy/memset would not be able to preserve the nontemporal hint.; // In theory we could teach how to propagate the !nontemporal metadata to; // memset calls. However, that change would force the backend to; // conservatively expand !nontemporal memset calls back to sequences of; // store instructions (effectively undoing the merging).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp:376,undo,undoing,376,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,1,['undo'],['undoing']
Usability,// Avoid potential infinite loops by checking for non-constant condition.; // TODO: Can we assert instead by improving canonicalizeSelectToShuffle()?; // Scalar select must have simplified?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:178,simpl,simplified,178,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['simpl'],['simplified']
Usability,"// B is empty and since S is a specific VT, it will never be empty. Don't; // report this as a change, just clear S and continue. This prevents an; // infinite loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:108,clear,clear,108,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['clear'],['clear']
Usability,"// BB is now empty, so it is likely to simplify away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:39,simpl,simplify,39,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,2,['simpl'],['simplify']
Usability,// BB must be empty to be a candidate for simplification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:42,simpl,simplification,42,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['simpl'],['simplification']
Usability,"// BEXTR doesn't update the sign flag so we can't use it. It does clear; // the overflow flag, but that's not useful without the sign flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:66,clear,clear,66,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['clear'],['clear']
Usability,"// BFS vs DFS really doesn't make a difference here, so just do a DFS with; // PausedSearches as our stack.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:79,Pause,PausedSearches,79,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,1,['Pause'],['PausedSearches']
Usability,// BO being non-negative does not shed light on whether its operands are; // non-negative. Clear the NonNegative flag here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:91,Clear,Clear,91,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['Clear'],['Clear']
Usability,// Back to non-vector simplifications.; // TODO: Can we do these for vector splats?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:22,simpl,simplifications,22,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['simpl'],['simplifications']
Usability,// Bail if we hit a non-simple non-vector.; // FIXME: Just bail on f16 for now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:24,simpl,simple,24,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simple']
Usability,// Bail on stack adjustment needed on return for simplicity.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:49,simpl,simplicity,49,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['simpl'],['simplicity']
Usability,// Bail out for a clearly invalid value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:18,clear,clearly,18,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,2,['clear'],['clearly']
Usability,// Bail out if BFM simplifies away one node in BFM Dst.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:19,simpl,simplifies,19,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['simpl'],['simplifies']
Usability,// Bail out if any mask value is undefined. That kind of shuffle may be; // simplified further based on demanded bits or other folds.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:76,simpl,simplified,76,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplified']
Usability,"// Bail out if the parent has more than one use. In that case, we'd be; // replacing the insertelt with a shuffle, and that's not a clear win.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:132,clear,clear,132,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['clear'],['clear']
Usability,// Bail out when the SRL has more than one use. This is done for historical; // (undocumented) reasons. Maybe intent was to guard the AND-masking below; // check below? And maybe it could be non-profitable to do the transform in; // case the SRL has multiple uses and we get here with Opc!=ISD::SRL?; // FIXME: Can't we just skip this check for the Opc==ISD::SRL case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:81,undo,undocumented,81,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['undo'],['undocumented']
Usability,// Base class for simple reducers that don't much care about the context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:18,simpl,simple,18,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,1,['simpl'],['simple']
Usability,"// Based on the range information we know about the LHS, see if we can; // simplify this comparison. For example, (x&4) < 8 is always true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:75,simpl,simplify,75,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['simpl'],['simplify']
Usability,"// Be aware that `SimplifiedMemberSym` might refer to an already dead; // symbol. In that case, the eqclass of that might not be the same as the; // eqclass of `MemberSym`. This is because the dead symbols are not; // preserved in the `ClassMap`, hence; // `find(State, SimplifiedMemberSym)` will result in a trivial eqclass; // compared to the eqclass of `MemberSym`.; // These eqclasses should be the same if `SimplifiedMemberSym` is alive.; // --> assert(find(State, MemberSym) == find(State, SimplifiedMemberSym)); //; // Note that `MemberSym` must be alive here since that is from the; // `ClassMembers` where all the symbols are alive.; // Remove the old and more complex symbol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:18,Simpl,SimplifiedMemberSym,18,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,4,['Simpl'],['SimplifiedMemberSym']
Usability,// Be conservative if a non-function has the same GUID (which is rare).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:50,GUID,GUID,50,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['GUID'],['GUID']
Usability,"// Because of simplify-demanded-bits in DAGCombine, involved masks may not; // have the expected shape. Try to undo that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:14,simpl,simplify-demanded-bits,14,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,2,"['simpl', 'undo']","['simplify-demanded-bits', 'undo']"
Usability,"// Because of simplify-demanded-bits in DAGCombine, the mask may have been; // simplified. Try to undo that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:14,simpl,simplify-demanded-bits,14,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,3,"['simpl', 'undo']","['simplified', 'simplify-demanded-bits', 'undo']"
Usability,"// Because the loop was in simplified form, the only non-loop predecessor; // is the preheader.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:27,simpl,simplified,27,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplified']
Usability,"// Because the loop was in simplified form, the only non-loop predecessor; // should be the preheader.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:27,simpl,simplified,27,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplified']
Usability,"// Because we assume that the DeclSpec has not yet been initialised, we simply; // overwrite the source range and attribute the provided leading declspec; // attributes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:72,simpl,simply,72,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['simpl'],['simply']
Usability,// Because we don't try to provide any exception safety guarantees we can; // implement move assignment very simply by first destroying the current; // object and then move-constructing over top of it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h:109,simpl,simply,109,interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h,1,['simpl'],['simply']
Usability,"// Because we know the inner loop structure remains valid we can use the; // loop structure to jump immediately across the entire nested loop.; // Further, because it is in loop simplified form, we can directly jump; // to its preheader afterward.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:178,simpl,simplified,178,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplified']
Usability,"// Because we may call this on a speculatively constructed; // SimplifiedSetCC Node, we need to simplify this node first.; // Ideally this should be folded into SimplifySetCC and not; // here. For now, grab a handle to N so we don't lose it from; // replacements interal to the visit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:63,Simpl,SimplifiedSetCC,63,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,3,"['Simpl', 'simpl']","['SimplifiedSetCC', 'SimplifySetCC', 'simplify']"
Usability,"// Before kernel 4.17, Linux did not support MAP_FIXED_NOREPLACE, so if it is; // not available, simplfy define it as MAP_FIXED which performs the same; // function but does not guarantee existing mappings won't get clobbered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MmapUtils.h:97,simpl,simplfy,97,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MmapUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MmapUtils.h,1,['simpl'],['simplfy']
Usability,"// Before resorting to actually inserting the truncate, use the same; // reasoning as from SimplifyIndvar::eliminateTrunc to see if we can extend; // the other side of the comparison instead. We still evaluate the limit; // in the narrower bitwidth, we just prefer a zext/sext outside the loop to; // a truncate within in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:91,Simpl,SimplifyIndvar,91,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['Simpl'],['SimplifyIndvar']
Usability,"// Before the load we need a fence. Here is an example lifted from; // http://www.hpl.hp.com/techreports/2012/HPL-2012-68.pdf showing why a fence; // is required:; // Thread 0:; // x.store(1, relaxed);; // r1 = y.fetch_add(0, release);; // Thread 1:; // y.fetch_add(42, acquire);; // r2 = x.load(relaxed);; // r1 = r2 = 0 is impossible, but becomes possible if the idempotent rmw is; // lowered to just a load without a fence. A mfence flushes the store buffer,; // making the optimization clearly correct.; // FIXME: it is required if isReleaseOrStronger(Order) but it is not clear; // otherwise, we might be able to be more aggressive on relaxed idempotent; // rmw. In practice, they do not look useful, so we don't try to be; // especially clever.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:490,clear,clearly,490,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['clear'],"['clear', 'clearly']"
Usability,"// Before version 3.8, the code is one simple line",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:39,simpl,simple,39,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,1,['simpl'],['simple']
Usability,"// Before weak cmpxchgs existed, the instruction simply returned the; // value loaded from memory, so bitcode files from that era will be; // expecting the first component of a modern cmpxchg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:49,simpl,simply,49,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['simpl'],['simply']
Usability,// Bindings are not usable if we can't make sense of the initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:20,usab,usable,20,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['usab'],['usable']
Usability,"// Bit extracting and clearing instructions should execute in constant time,; // and set flags.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:22,clear,clearing,22,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,2,['clear'],['clearing']
Usability,// Bit simplification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonTargetMachine.cpp:7,simpl,simplification,7,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonTargetMachine.cpp,1,['simpl'],['simplification']
Usability,"// Bit value same as the one described in RefI.; // Conceptually, there is no explicit ""bottom"" value: the lattice's; // bottom will be expressed as a ""ref to itself"", which, in the context; // of registers, could be read as ""this value of this bit is defined by; // this bit"".; // The ordering is:; // x <= Top,; // Self <= x, where ""Self"" is ""ref to itself"".; // This makes the value lattice different for each virtual register; // (even for each bit in the same virtual register), since the ""bottom""; // for one register will be a simple ""ref"" for another register.; // Since we do not store the ""Self"" bit and register number, the meet; // operation will need to take it as a parameter.; //; // In practice there is a special case for values that are not associa-; // ted with any specific virtual register. An example would be a value; // corresponding to a bit of a physical register, or an intermediate; // value obtained in some computation (such as instruction evaluation).; // Such cases are identical to the usual Ref type, but the register; // number is 0. In such case the Pos field of the reference is ignored.; //; // What is worthy of notice is that in value V (that is a ""ref""), as long; // as the RefI.Reg is not 0, it may actually be the same register as the; // one in which V will be contained. If the RefI.Pos refers to the posi-; // tion of V, then V is assumed to be ""bottom"" (as a ""ref to itself""),; // otherwise V is taken to be identical to the referenced bit of the; // same register.; // If RefI.Reg is 0, however, such a reference to the same register is; // not possible. Any value V that is a ""ref"", and whose RefI.Reg is 0; // is treated as ""bottom"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h:534,simpl,simple,534,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,1,['simpl'],['simple']
Usability,// Bitcast from a vector using SimplifyDemanded Bits/VectorElts.; // Demand the elt/bit if any of the original elts/bits are demanded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:31,Simpl,SimplifyDemanded,31,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['Simpl'],['SimplifyDemanded']
Usability,"// Bitfield extract is computed as (Src >> Offset) & Mask, where Mask is; // created using Width. Use this function when the inputs are KnownBits; // objects. TODO: Move this KnownBits.h if this is usable in more cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp:198,usab,usable,198,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp,1,['usab'],['usable']
Usability,// Bitmap bytes are merged by simply ORing them together.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp:30,simpl,simply,30,interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,1,['simpl'],['simply']
Usability,"// Bitwise-not (xor X, -1) is a special case: we don't usually shrink its; // constant, but if this 'and' is only clearing bits that were just set by; // the xor, then this 'and' can be eliminated by shrinking the mask of; // the xor. For example, for a 32-bit X:; // and (xor (srl X, 31), -1), 1 --> xor (srl X, 31), 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:114,clear,clearing,114,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['clear'],['clearing']
Usability,"// Blocks in Verilog can have `begin` and `end` instead of braces. For; // keywords like `begin`, we can't treat them the same as left braces; // because some contexts require one of them. For example structs use; // braces and if blocks use keywords, and a left brace can occur in an if; // statement, but it is not a block. For keywords like `end`, we simply; // treat them the same as right braces.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:354,simpl,simply,354,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['simpl'],['simply']
Usability,"// Blocks that will be simplified should be removed from the phi node.; // Note there could be multiple edges to the resume block, and we need; // to remove them all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:23,simpl,simplified,23,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,2,"['resume', 'simpl']","['resume', 'simplified']"
Usability,"// Both BTE and MTE can be null here, all combinations possible.; // Even though for now at least one should be non-null, we simply haven't; // implemented the other case yet (this would be a temporary in the middle; // of nowhere that doesn't have a non-trivial destructor).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:125,simpl,simply,125,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,1,['simpl'],['simply']
Usability,"// Both Intel and AMD are guiding that they will change the semantics of; // LFENCE to be a speculation barrier, so if we see an LFENCE, there is; // no more need to guard things in this block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:26,guid,guiding,26,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['guid'],['guiding']
Usability,"// Box; // TODO: Drawing box should be simpler - maybe make; // a static helper which BB + others use.; // Single face tesselation - ugly lighting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:39,simpl,simpler,39,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['simpl'],['simpler']
Usability,"// Branches and invokes do not escape, only unwind, resume, and return; // do.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/EscapeEnumerator.cpp:52,resume,resume,52,interpreter/llvm-project/llvm/lib/Transforms/Utils/EscapeEnumerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/EscapeEnumerator.cpp,1,['resume'],['resume']
Usability,// Break down insert_subvector into simpler parts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:36,simpl,simpler,36,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simpler']
Usability,"// Bucket queue of tree nodes ordered by descending level. For simplicity,; // we use a priority_queue here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:63,simpl,simplicity,63,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['simpl'],['simplicity']
Usability,// Build a map of module to the GUIDs and summary objects that should; // be written to its index.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp:32,GUID,GUIDs,32,interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp,1,['GUID'],['GUIDs']
Usability,// Build a simple layout based on the regular layout of jump tables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp:11,simpl,simple,11,interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,1,['simpl'],['simple']
Usability,// Build a struct that will keep state for an active coroutine.; // struct f.frame {; // ResumeFnTy ResumeFnAddr;; // ResumeFnTy DestroyFnAddr;; // ... promise (if present) ...; // int ResumeIndex;; // ... spills ...; // };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:89,Resume,ResumeFnTy,89,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,4,['Resume'],"['ResumeFnAddr', 'ResumeFnTy', 'ResumeIndex']"
Usability,"// Build a wrapper function for F. The wrapper simply calls F, and is; // added to FnsToInstrument so that any instrumentation according to its; // WrapperKind is done in the second pass below.; // If the function being wrapped has local linkage, then preserve the; // function's linkage in the wrapper function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:47,simpl,simply,47,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['simpl'],['simply']
Usability,"// Build simple single-entry datasets so that it's easy to know the; // reference result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:9,simpl,simple,9,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['simpl'],['simple']
Usability,// Build the cloned loop structure itself. This may be substantially; // different from the original structure due to the simplified CFG. This also; // handles inserting all the cloned blocks into the correct loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:122,simpl,simplified,122,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplified']
Usability,// Build the implicit deduction guide template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:32,guid,guide,32,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['guid'],['guide']
Usability,// Build up a worklist of inner-loops to transform to avoid iterator; // invalidation.; // FIXME: This logic comes from other passes that actually change the loop; // nest structure. It isn't clear this is necessary (or useful) for a pass; // which merely optimizes the use of loads in a loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp:192,clear,clear,192,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp,1,['clear'],['clear']
Usability,// But add invalid MCOperand to simplify logic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/Target.cpp:32,simpl,simplify,32,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/Target.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/Target.cpp,1,['simpl'],['simplify']
Usability,// But treat member function pointers as simple zero integers because; // it's easier than having a special case in LLVM's CodeGen. If LLVM; // CodeGen grows handling for values of non-null member function; // pointers then perhaps we could remove this special case and rely on; // EmitNullMemberPointer for member function pointers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:41,simpl,simple,41,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['simpl'],['simple']
Usability,"// But, that also updated the use in the freeze we just created, thus; // creating a cycle in a DAG. Let's undo that by mutating the freeze.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:107,undo,undo,107,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['undo'],['undo']
Usability,// C clear,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:5,clear,clear,5,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['clear'],['clear']
Usability,"// C permits ""extern void v"", and if you cast the address to a valid type,; // you can even do things with it. We simply pretend",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:114,simpl,simply,114,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,1,['simpl'],['simply']
Usability,// C(X) -> ... is a deduction guide.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:30,guid,guide,30,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['guid'],['guide']
Usability,"// C++ 5.2.10p2 has a note that mentions that, subject to all other; // restrictions, a cast to the same type is allowed so long as it does not; // cast away constness. In C++98, the intent was not entirely clear here,; // since all other paragraphs explicitly forbid casts to the same type.; // C++11 clarifies this case with p2.; //; // The only allowed types are: integral, enumeration, pointer, or; // pointer-to-member types. We also won't restrict Obj-C pointers either.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp:207,clear,clear,207,interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,1,['clear'],['clear']
Usability,"// C++ 5.2.9p5: An lvalue of type ""cv1 B"", where B is a class type, can be; // cast to type ""reference to cv2 D"", where D is a class derived from B,; // if a valid standard conversion from ""pointer to D"" to ""pointer to B""; // exists, cv2 >= cv1, and B is not a virtual base class of D.; // In addition, DR54 clarifies that the base must be accessible in the; // current context. Although the wording of DR54 only applies to the pointer; // variant of this rule, the intent is clearly for it to apply to the this; // conversion as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp:476,clear,clearly,476,interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,1,['clear'],['clearly']
Usability,"// C++ 6.8p1:; // There is an ambiguity in the grammar involving expression-statements and; // declarations: An expression-statement with a function-style explicit type; // conversion (5.2.3) as its leftmost subexpression can be indistinguishable; // from a declaration where the first declarator starts with a '('. In those; // cases the statement is a declaration. [Note: To disambiguate, the whole; // statement might have to be examined to determine if it is an; // expression-statement or a declaration].; // C++ 6.8p3:; // The disambiguation is purely syntactic; that is, the meaning of the names; // occurring in such a statement, beyond whether they are type-names or not,; // is not generally used in or changed by the disambiguation. Class; // templates are instantiated as necessary to determine if a qualified name; // is a type-name. Disambiguation precedes parsing, and a statement; // disambiguated as a declaration may be an ill-formed declaration.; // We don't have to parse all of the decl-specifier-seq part. There's only; // an ambiguity if the first decl-specifier is; // simple-type-specifier/typename-specifier followed by a '(', which may; // indicate a function-style cast expression.; // isCXXDeclarationSpecifier will return TPResult::Ambiguous only in such; // a case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:1093,simpl,simple-type-specifier,1093,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['simpl'],['simple-type-specifier']
Usability,"// C++ <=14 [basic.stc.dynamic.deallocation]p2:; // [...] If class T does not declare such an operator delete but does; // declare a member deallocation function named operator delete with; // exactly two parameters, the second of which has type std::size_t (18.1),; // then this function is a usual deallocation function.; //; // C++17 says a usual deallocation function is one with the signature; // (void* [, size_t] [, std::align_val_t] [, ...]); // and all such functions are usual deallocation functions. It's not clear; // that allowing varargs functions was intentional.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:520,clear,clear,520,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['clear'],['clear']
Usability,"// C++ [basic.lookup.classref]p5:; // If the qualified-id has the form; //; // ::class-name-or-namespace-name::...; //; // the class-name-or-namespace-name is looked up in global scope as a; // class-name or namespace-name.; //; // To implement this, we clear out the object type as soon as we've; // seen a leading '::' or part of a nested-name-specifier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:254,clear,clear,254,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,1,['clear'],['clear']
Usability,"// C++ [class.friend]p3:; // A friend declaration that does not declare a function shall have one of; // the following forms:; // friend elaborated-type-specifier ;; // friend simple-type-specifier ;; // friend typename-specifier ;; //; // Any declaration with a type qualifier does not have that form. (It's; // legal to specify a qualified type as a friend, you just can't write the; // keywords.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:176,simpl,simple-type-specifier,176,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['simpl'],['simple-type-specifier']
Usability,"// C++ [class]p4:; // A POD-struct is an aggregate class [...]; // Since the POD bit is meant to be C++03 POD-ness, clear it even if; // the type is technically an aggregate in C++0x since it wouldn't be; // in 03.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:116,clear,clear,116,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['clear'],['clear']
Usability,// C++ [dcl.type.simple]p2:; // A type-specifier of the form; // typename[opt] nested-name-specifier[opt] template-name; // is a placeholder for a deduced class type [...].,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:17,simpl,simple,17,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['simpl'],['simple']
Usability,"// C++ [expr.typeid]p2:; // If the glvalue expression is obtained by applying the unary * operator to; // a pointer and the pointer is a null pointer value, the typeid expression; // throws the std::bad_typeid exception.; //; // However, this paragraph's intent is not clear. We choose a very generous; // interpretation which implores us to consider comma operators, conditional; // operators, parentheses and other such constructs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp:269,clear,clear,269,interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,1,['clear'],['clear']
Usability,"// C++ [namespace.memdef]p3; // - If a friend declaration in a non-local class first declares a; // class or function, the friend class or function is a member; // of the innermost enclosing namespace.; // - The name of the friend is not found by simple name lookup; // until a matching declaration is provided in that namespace; // scope (either before or after the class declaration granting; // friendship).; // - If a friend function is called, its name may be found by the; // name lookup that considers functions from namespaces and; // classes associated with the types of the function arguments.; // - When looking for a prior declaration of a class or a function; // declared as a friend, scopes outside the innermost enclosing; // namespace scope are not considered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:247,simpl,simple,247,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['simpl'],['simple']
Usability,"// C++ [over.match.class.deduct]p1.4:; // if C is defined and its definition satisfies the conditions for an; // aggregate class ([dcl.init.aggr]) with the assumption that any; // dependent base class has no virtual functions and no virtual base; // classes, and the initializer is a non-empty braced-init-list or; // parenthesized expression-list, and there are no deduction-guides for; // C, the set contains an additional function template, called the; // aggregate deduction candidate, defined as follows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:376,guid,guides,376,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['guid'],['guides']
Usability,"// C++ [over.match.list]p1.2: (second phase list initialization); // the candidate functions are all the constructors of the class T; // C++ [over.match.ctor]p1: (all other cases); // the candidate functions are all the constructors of the class of; // the object being initialized; // C++ [over.best.ics]p4:; // When [...] the constructor [...] is a candidate by; // - [over.match.copy] (in all cases); // FIXME: The ""second phase of [over.match.list] case can also; // theoretically happen here, but it's not clear whether we can; // ever have a parameter of the right type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:511,clear,clear,511,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['clear'],['clear']
Usability,"// C++ [temp.class.order]p1:; // For two class template partial specializations, the first is at least as; // specialized as the second if, given the following rewrite to two; // function templates, the first function template is at least as; // specialized as the second according to the ordering rules for function; // templates (14.6.6.2):; // - the first function template has the same template parameters as the; // first partial specialization and has a single function parameter; // whose type is a class template specialization with the template; // arguments of the first partial specialization, and; // - the second function template has the same template parameters as the; // second partial specialization and has a single function parameter; // whose type is a class template specialization with the template; // arguments of the second partial specialization.; //; // Rather than synthesize function templates, we merely perform the; // equivalent partial ordering by performing deduction directly on; // the template arguments of the class template partial; // specializations. This computation is slightly simpler than the; // general problem of function template partial ordering, because; // class template partial specializations are more constrained. We; // know that every template parameter is deducible from the class; // template partial specialization's template arguments, for; // example.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:1122,simpl,simpler,1122,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['simpl'],['simpler']
Usability,"// C++ [temp.class.spec]p9:; // Within the argument list of a class template partial; // specialization, the following restrictions apply:; // -- A partially specialized non-type argument expression; // shall not involve a template parameter of the partial; // specialization except when the argument expression is a; // simple identifier.; // -- The type of a template parameter corresponding to a; // specialized non-type argument shall not be dependent on a; // parameter of the specialization.; // DR1315 removes the first bullet, leaving an incoherent set of rules.; // We implement a compromise between the original rules and DR1315:; // -- A specialized non-type template argument shall not be; // type-dependent and the corresponding template parameter; // shall have a non-dependent type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:321,simpl,simple,321,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['simpl'],['simple']
Usability,// C++ [temp.deduct.guide]p3:; // A deduction guide [...] for a member class template [shall be; // declared] with the same access [as the template].,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:20,guid,guide,20,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['guid'],['guide']
Usability,// C++ [temp.deduct.guide]p3:; // A deduction-gide shall be declared in the same scope as the; // corresponding class template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:20,guid,guide,20,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['guid'],['guide']
Usability,// C++ [temp.deduct.guide]p3:; // The simple-template-id shall name a class template specialization.; // The template-name shall be the same identifier as the template-name; // of the simple-template-id.; // These together intend to imply that the template-name shall name a; // class template.; // FIXME: template<typename T> struct X {};; // template<typename T> using Y = X<T>;; // Y(int) -> Y<int>;; // satisfies these rules but does not name a class template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:20,guid,guide,20,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,3,"['guid', 'simpl']","['guide', 'simple-template-id']"
Usability,// C++ functions and those whose names are not a simple identifier need; // mangling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:49,simpl,simple,49,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,2,['simpl'],['simple']
Usability,"// C++03 [class]p4:; // A POD-struct is an aggregate class that has [...] no user-defined; // copy assignment operator and no user-defined destructor.; //; // Since the POD bit is meant to be C++03 POD-ness, and in C++03,; // aggregates could not have any constructors, clear it even for an; // explicitly defaulted or deleted constructor.; // type is technically an aggregate in C++0x since it wouldn't be in; // 03.; //; // Also, a user-declared move assignment operator makes a class; // non-POD. This is an extension in C++03.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:270,clear,clear,270,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['clear'],['clear']
Usability,"// C++0x [dcl.type.elab]p2:; // If the identifier resolves to a typedef-name or the simple-template-id; // resolves to an alias template specialization, the; // elaborated-type-specifier is ill-formed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:84,simpl,simple-template-id,84,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['simpl'],['simple-template-id']
Usability,"// C++0x [over.match.funcs]p4:; // For non-static member functions, the type of the implicit object; // parameter is; //; // - ""lvalue reference to cv X"" for functions declared without a; // ref-qualifier or with the & ref-qualifier; // - ""rvalue reference to cv X"" for functions declared with the &&; // ref-qualifier; //; // where X is the class of which the function is a member and cv is the; // cv-qualification on the member function declaration.; //; // However, when finding an implicit conversion sequence for the argument, we; // are not allowed to perform user-defined conversions; // (C++ [over.match.funcs]p5). We perform a simplified version of; // reference binding here, that allows class rvalues to bind to; // non-constant references.; // First check the qualifiers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:637,simpl,simplified,637,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['simpl'],['simplified']
Usability,"// C++0x [temp.deduct.type]p10:; // If P and A are function types that originated from deduction when; // taking the address of a function template (14.8.2.2) or when deducing; // template arguments from a function declaration (14.8.2.6) and Pi and; // Ai are parameters of the top-level parameter-type-list of P and A,; // respectively, Pi is adjusted if it is a forwarding reference and Ai; // is an lvalue reference, in; // which case the type of Pi is changed to be the template parameter; // type (i.e., T&& is changed to simply T). [ Note: As a result, when; // Pi is T&& and Ai is X&, the adjusted Pi will be T, causing T to be; // deduced as X&. - end note ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:527,simpl,simply,527,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['simpl'],['simply']
Usability,"// C++0x [temp.explicit]p2:; // If the explicit instantiation is for a class or member class, the; // elaborated-type-specifier in the declaration shall include a; // simple-template-id.; //; // C++98 has the same restriction, just worded differently.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:167,simpl,simple-template-id,167,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['simpl'],['simple-template-id']
Usability,"// C++0x [temp.explicit]p2:; // If the explicit instantiation is for a member function, a member class; // or a static data member of a class template specialization, the name of; // the class template specialization in the qualified-id for the member; // name shall be a simple-template-id.; //; // C++98 has the same restriction, just worded differently.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:272,simpl,simple-template-id,272,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['simpl'],['simple-template-id']
Usability,"// C++0x [temp.explicit]p2:; // If the explicit instantiation is for a member function, a member class; // or a static data member of a class template specialization, the name of; // the class template specialization in the qualified-id for the member; // name shall be a simple-template-id.; //; // C++98 has the same restriction, just worded differently.; //; // This does not apply to variable template specializations, where the; // template-id is in the unqualified-id instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:272,simpl,simple-template-id,272,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['simpl'],['simple-template-id']
Usability,// C++11 [class.friend]p3:; // A friend declaration that does not declare a function shall have one; // of the following forms:; // friend elaborated-type-specifier ;; // friend simple-type-specifier ;; // friend typename-specifier ;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:178,simpl,simple-type-specifier,178,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['simpl'],['simple-type-specifier']
Usability,"// C++11 [dcl.type.simple]p4:; // The type denoted by decltype(e) is defined as follows:; // C++20:; // - if E is an unparenthesized id-expression naming a non-type; // template-parameter (13.2), decltype(E) is the type of the; // template-parameter after performing any necessary type deduction; // Note that this does not pick up the implicit 'const' for a template; // parameter object. This rule makes no difference before C++20 so we apply; // it unconditionally.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:19,simpl,simple,19,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['simpl'],['simple']
Usability,// C++11 [dcl.type.simple]p4:; // [...],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:19,simpl,simple,19,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['simpl'],['simple']
Usability,"// C++11 [expr.prim.lambda]p15:; // An entity is captured by reference if it is implicitly or; // explicitly captured but not captured by copy. It is; // unspecified whether additional unnamed non-static data; // members are declared in the closure type for entities; // captured by reference.; //; // FIXME: It is not clear whether we want to build an lvalue reference; // to the DeclRefType or to CaptureType.getNonReferenceType(). GCC appears; // to do the former, while EDG does the latter. Core issue 1249 will; // clarify, but for now we follow GCC because it's a more permissive and; // easily defensible position.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:319,clear,clear,319,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['clear'],['clear']
Usability,"// C++11 [expr.prim.lambda]p9:; // A lambda-expression whose smallest enclosing scope is a block scope is a; // local lambda expression; any other lambda expression shall not have a; // capture-default or simple-capture in its lambda-introducer.; //; // For simple-captures, this is covered by the check below that any named; // entity is a variable that can be captured.; //; // For DR1632, we also allow a capture-default in any context where we can; // odr-use 'this' (in particular, in a default initializer for a non-static; // data member).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:205,simpl,simple-capture,205,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,2,['simpl'],"['simple-capture', 'simple-captures']"
Usability,"// C++11 [temp.explicit]p10:; // Except for inline functions, const variables of literal types, variables; // of reference types, [...] explicit instantiation declarations; // have the effect of suppressing the implicit instantiation of the entity; // to which they refer.; //; // FIXME: That's not exactly the same as ""might be usable in constant; // expressions"", which only allows constexpr variables and const integral; // types, not arbitrary const literal types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:329,usab,usable,329,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['usab'],['usable']
Usability,"// C++11 [temp.explicit]p3:; // If the explicit instantiation is for a member function, a member class; // or a static data member of a class template specialization, the name of; // the class template specialization in the qualified-id for the member; // name shall be a simple-template-id.; //; // C++98 has the same restriction, just worded differently.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:272,simpl,simple-template-id,272,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['simpl'],['simple-template-id']
Usability,"// C++14 [temp.deduct.call] p4b3:; // If P is a class and P has the form simple-template-id, then the; // transformed A can be a derived class of the deduced A. Likewise if; // P is a pointer to a class of the form simple-template-id, the; // transformed A can be a pointer to a derived class pointed to by the; // deduced A. However, if there is a class C that is a (direct or; // indirect) base class of D and derived (directly or indirectly) from a; // class B and that would be a valid deduced A, the deduced A cannot be; // B or pointer to B, respectively.; //; // These alternatives are considered only if type deduction would; // otherwise fail. If they yield more than one possible deduced A, the; // type deduction fails.; // Use a breadth-first search through the bases to collect the set of; // successful matches. Visited contains the set of nodes we have already; // visited, while ToVisit is our stack of records that we still need to; // visit. Matches contains a list of matches that have yet to be; // disqualified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:73,simpl,simple-template-id,73,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,2,['simpl'],['simple-template-id']
Usability,"// C++14 and before:; // - if the function is a constructor, the call initializes a temporary; // of the cv-unqualified version of the destination type. The [...]; // temporary [...] is then used to direct-initialize, according to the; // rules above, the object that is the destination of the; // copy-initialization.; // Note that this just performs a simple object copy from the temporary.; //; // C++17:; // - if the function is a constructor, the call is a prvalue of the; // cv-unqualified version of the destination type whose return object; // is initialized by the constructor. The call is used to; // direct-initialize, according to the rules above, the object that; // is the destination of the copy-initialization.; // Therefore we need to do nothing further.; //; // FIXME: Mark this copy as extraneous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:354,simpl,simple,354,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['simpl'],['simple']
Usability,// C++17 [temp.deduct.guide]p3:; // Two deduction guide declarations in the same translation unit; // for the same class template shall not have equivalent; // parameter-declaration-clauses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:22,guid,guide,22,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['guid'],['guide']
Usability,"// C++17 [temp.local]p2:; // the injected-class-name [...] is equivalent to the template-name followed; // by the template-arguments of the class template specialization or partial; // specialization enclosed in <>; // ... which means it's equivalent to a simple-template-id.; //; // This only arises during class template argument deduction for a copy; // deduction candidate, where it permits slicing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:256,simpl,simple-template-id,256,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['simpl'],['simple-template-id']
Usability,"// C++17 onwards: exception specification is part of the type, as a simple; // boolean ""can this function type throw"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:68,simpl,simple,68,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['simpl'],['simple']
Usability,// C++1z [temp.param]p11:; // A template parameter of a deduction guide template that does not have a; // default-argument shall be deducible from the parameter-type-list of the; // deduction guide template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:66,guid,guide,66,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['guid'],['guide']
Usability,"// C++20 [expr.const]p4: [DR2126]; // An object or reference is usable in constant expressions if it is; // - a temporary object of non-volatile const-qualified literal type; // whose lifetime is extended to that of a variable that is usable; // in constant expressions; //; // C++20 [expr.const]p5:; // an lvalue-to-rvalue conversion [is not allowed unless it applies to]; // - a non-volatile glvalue that refers to an object that is usable; // in constant expressions, or; // - a non-volatile glvalue of literal type that refers to a; // non-volatile object whose lifetime began within the evaluation; // of E;; //; // C++11 misses the 'began within the evaluation of e' check and; // instead allows all temporaries, including things like:; // int &&r = 1;; // int x = ++r;; // constexpr int k = r;; // Therefore we use the C++14-onwards rules in C++11 too.; //; // Note that temporaries whose lifetimes began while evaluating a; // variable's constructor are not usable while evaluating the; // corresponding destructor, not even if they're of const-qualified; // types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:64,usab,usable,64,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,4,['usab'],['usable']
Usability,// C++20 [expr.const]p4:; // An object or reference is usable in constant expressions if it is [...]; // a temporary object of non-volatile const-qualified literal type; // whose lifetime is extended to that of a variable that is usable; // in constant expressions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp:55,usab,usable,55,interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,2,['usab'],['usable']
Usability,"// C++20 [expr.prim.lambda]p8:; // If a lambda-capture includes a capture-default that is =,; // each simple-capture of that lambda-capture shall be of the form; // ""&identifier"", ""this"", or ""* this"". [ Note: The form [&,this] is; // redundant but accepted for compatibility with ISO C++14. --end note ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:102,simpl,simple-capture,102,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['simpl'],['simple-capture']
Usability,// C++20 [temp.class.spec] 13.7.5/10; // The usual access checking rules do not apply to non-dependent names; // used to specify template arguments of the simple-template-id of the; // partial specialization.; // C++20 [temp.spec] 13.9/6:; // The usual access checking rules do not apply to names in a declaration; // of an explicit instantiation or explicit specialization...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:155,simpl,simple-template-id,155,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,1,['simpl'],['simple-template-id']
Usability,"// C++2a [basic.def.odr]p4:; // A variable x whose name appears as a potentially-evalauted expression; // e is odr-used by e unless; // -- x is a reference that is usable in constant expressions, or; // -- x is a variable of non-reference type that is usable in constant; // expressions and has no mutable subobjects, and e is an element of; // the set of potential results of an expression of; // non-volatile-qualified non-class type to which the lvalue-to-rvalue; // conversion is applied, or; // -- x is a variable of non-reference type, and e is an element of the; // set of potential results of a discarded-value expression to which; // the lvalue-to-rvalue conversion is not applied; //; // We check the first bullet and the ""potentially-evaluated"" condition in; // BuildDeclRefExpr. We check the type requirements in the second bullet; // in CheckLValueToRValueConversionOperand below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:164,usab,usable,164,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['usab'],['usable']
Usability,"// C++2a [basic.def.odr]p4:; // A variable x whose name appears as a potentially-evaluated expression e; // is odr-used by e unless [...] x is a reference that is usable in; // constant expressions.; // CUDA/HIP:; // If a reference variable referencing a host variable is captured in a; // device or host device lambda, the value of the referee must be copied; // to the capture and the reference variable must be treated as odr-use; // since the value of the referee is not known at compile time and must; // be loaded from the captured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:163,usab,usable,163,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['usab'],['usable']
Usability,"// C++2a [basic.def.odr]p4:; // A variable x whose name appears as a potentially-evaluated expression e; // is odr-used by e unless; // -- x is a reference that is usable in constant expressions; // -- x is a variable of non-reference type that is usable in constant; // expressions and has no mutable subobjects [FIXME], and e is an; // element of the set of potential results of an expression of; // non-volatile-qualified non-class type to which the lvalue-to-rvalue; // conversion is applied; // -- x is a variable of non-reference type, and e is an element of the set; // of potential results of a discarded-value expression to which the; // lvalue-to-rvalue conversion is not applied [FIXME]; //; // We check the first part of the second bullet here, and; // Sema::CheckLValueToRValueConversionOperand deals with the second part.; // FIXME: To get the third bullet right, we need to delay this even for; // variables that are not usable in constant expressions.; // If we already know this isn't an odr-use, there's nothing more to do.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:164,usab,usable,164,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,3,['usab'],['usable']
Usability,"// C++2a [dcl.fct.def.default]p3 [P2002R0]:; // If a constexpr-compatible function is explicitly defaulted on its first; // declaration, it is implicitly considered to be constexpr.; // FIXME: Only applying this to the first declaration seems problematic, as; // simple reorderings can affect the meaning of the program.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:263,simpl,simple,263,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['simpl'],['simple']
Usability,// C++2a [expr.ass]p5:; // A simple-assignment whose left operand is of a volatile-qualified; // type is deprecated unless the assignment is either a discarded-value; // expression or an unevaluated operand,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:29,simpl,simple-assignment,29,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['simpl'],['simple-assignment']
Usability,// C++2a [expr.const]p3:; // A variable is usable in constant expressions after its initializing; // declaration is encountered...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:43,usab,usable,43,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['usab'],['usable']
Usability,// C++2a [expr.prim.req.compound]p1 Example:; // [...] The compound-requirement in C1 requires that x++ is a valid; // expression. It is equivalent to the simple-requirement x++; [...]; // We therefore do not profile isSimple() here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/StmtProfile.cpp:155,simpl,simple-requirement,155,interpreter/llvm-project/clang/lib/AST/StmtProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/StmtProfile.cpp,1,['simpl'],['simple-requirement']
Usability,// C1*MulC simplifies to a tidier constant.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp:11,simpl,simplifies,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,1,['simpl'],['simplifies']
Usability,"// C17 6.7.1p6 footnote 124: The implementation can treat any register; // declaration simply as an auto declaration. However, whether or not; // addressable storage is actually used, the address of any part of an; // object declared with storage-class specifier register cannot be; // computed, either explicitly(by use of the unary & operator as discussed; // in 6.5.3.2) or implicitly(by converting an array name to a pointer as; // discussed in 6.3.2.1).Thus, the only operator that can be applied to an; // array declared with storage-class specifier register is sizeof.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:87,simpl,simply,87,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,1,['simpl'],['simply']
Usability,// C2 << X can equal zero in some circumstances.; // This simplification might be unsafe if C is zero.; //; // We know it is safe if:; // - The shift is nsw. We can't shift out the one bit.; // - The shift is nuw. We can't shift out the one bit.; // - C2 is one.; // - C isn't zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:58,simpl,simplification,58,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplification']
Usability,"// C23 6.7.10p4: An entity of variable length array type shall not be; // initialized except by an empty initializer.; //; // The C extension warnings are issued from ParseBraceInitializer() and; // do not need to be issued here. However, we continue to issue an error; // in the case there are initializers or we are compiling C++. We allow; // use of VLAs in C++, but it's not clear we want to allow {} to zero; // init a VLA in C++ in all cases (such as with non-trivial constructors).; // FIXME: should we allow this construct in C++ when it makes sense to do; // so?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:379,clear,clear,379,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['clear'],['clear']
Usability,"// C99 6.8.4p3 - In C99, the body of the if statement is a scope, even if; // there is no compound stmt. C90 does not have this clause. We only do this; // if the body isn't a compound statement to avoid push/pop in common cases.; //; // C++ 6.4p1:; // The substatement in a selection-statement (each substatement, in the else; // form of the if statement) implicitly defines a local scope.; //; // For C++ we create a scope for the condition and a new scope for; // substatements because:; // -When the 'then' scope exits, we want the condition declaration to still be; // active for the 'else' scope too.; // -Sema will detect name clashes by considering declarations of a; // 'ControlScope' as part of its direct subscope.; // -If we wanted the condition and substatement to be in the same scope, we; // would have to notify ParseStatement not to create a new scope. It's; // simpler to let it create a new scope.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp:879,simpl,simpler,879,interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,1,['simpl'],['simpler']
Usability,"// C99 6.9.1p6: 'each declaration in the declaration list shall have at; // least one declarator'.; // NOTE: GCC just makes this an ext-warn. It's not clear what it does with; // the declarations though. It's trivial to ignore them, really hard to do; // anything else with them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:151,clear,clear,151,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['clear'],['clear']
Usability,"// CAUTION! This state is only valid for the last click event.; // If the next itemPress is triggered by a keyboard or touch event, it will still; // read this outdated ctrlKeyPressed information!!; // So ALL events causing itemPress must clear/set ctrlKeyPressed; // or ctrlKeyPressed must be reset to false after a short timeout.; //; // Also, it is not tested whether for all types of events, the direct browser; // event is coming BEFORE the itemPress event handler invocation!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:239,clear,clear,239,ui5/eve7/controller/Ged.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js,1,['clear'],['clear']
Usability,"// CC is a comparison that will be implemented using an integer or; // floating-point comparison. Return the condition code mask for; // a branch on true. In the integer case, CCMASK_CMP_UO is set for; // unsigned comparisons and clear for signed ones. In the floating-point; // case, CCMASK_CMP_UO has its normal mask meaning (unordered).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:230,clear,clear,230,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['clear'],['clear']
Usability,"// CGRecordLowering::setBitFieldInfo() pre-adjusts the bit-field offsets; // for big-endian targets, but it assumes a container of width; // Info.StorageSize. Since AAPCS uses a different container size (width; // of the type), we first undo that calculation here and redo it once; // the bit-field offset within the new container is calculated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:237,undo,undo,237,interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,1,['undo'],['undo']
Usability,"// CIEs (and FDEs) are simply container classes, so the only sensible way to; // create them is by providing the full parsed contents in the constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h:23,simpl,simply,23,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,1,['simpl'],['simply']
Usability,"// CPU Tensor Class; // It is a simple wrapper for TMVA RTensor based on; // memory owned by CPU Buffer; // We need to keep a pointer for CPUBuffer for fast conversion; // without copying to TCpuMatrix; // also provides compatibility with old interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuTensor.h:32,simpl,simple,32,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuTensor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuTensor.h,1,['simpl'],['simple']
Usability,"// CR=2 is yet undocumented, see; // https://github.com/MicrosoftDocs/cpp-docs/pull/4202 for upstream; // progress on getting it documented.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp:15,undo,undocumented,15,interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp,1,['undo'],['undocumented']
Usability,"// CUDA runtime uses this undocumented function to access kernel launch; // configuration. The declaration is in crt/device_functions.h but that file; // includes a lot of other stuff we don't want. Instead, we'll provide our own; // declaration for it here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:26,undo,undocumented,26,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['undo'],['undocumented']
Usability,// CUDA-9 omits device-side definitions of some math functions if it sees; // include guard from math.h wrapper from libstdc++. We have to undo the header; // guard temporarily to get the definitions we need.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:139,undo,undo,139,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['undo'],['undo']
Usability,// CXXDerivedObjectRegion represents a derived-class object that surrounds; // a C++ object. It is identified by the derived class declaration and the; // region of its parent object. It is a bit counter-intuitive (but not otherwise; // unseen) that this region represents a larger segment of memory that its; // super-region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:204,intuit,intuitive,204,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,1,['intuit'],['intuitive']
Usability,"// Cache needs to be able to clear _norm pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h:29,clear,clear,29,roofit/roofit/inc/RooMomentMorph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooMomentMorph.h,2,['clear'],['clear']
Usability,"// Cache results for the lifetime of the Simplifier. Results change every; // time new constraints are added to the program state, which is the whole; // point of simplifying, and for that very reason it's pointless to maintain; // the same cache for the duration of the whole analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp:41,Simpl,Simplifier,41,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,2,"['Simpl', 'simpl']","['Simplifier', 'simplifying']"
Usability,"// Calculate product of kernels by looping over list of kernels; // and evaluating the value for each, setting kernel back to; // kProd before returning so it can be used again. Described in ""An Introduction to // Support Vector Machines and Other Kernel-based Learning; // Methods"" by Cristianini and Shawe-Taylor, Section 3.3.2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx:261,Learn,Learning,261,tmva/tmva/src/SVKernelFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx,1,['Learn'],['Learning']
Usability,"// Calculate sum of kernels by looping over list of kernels; // and evaluating the value for each, setting kernel back to; // kSum before returning so it can be used again. Described in ""An Introduction to // Support Vector Machines and Other Kernel-based Learning; // Methods"" by Cristianini and Shawe-Taylor, Section 3.3.2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx:256,Learn,Learning,256,tmva/tmva/src/SVKernelFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx,1,['Learn'],['Learning']
Usability,// Calculate the coverage depending on the kind of location. We have; // the simple and composed locations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp:77,simpl,simple,77,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp,1,['simpl'],['simple']
Usability,"// Calculate the expected task execution order for a priority queue; //; // We would expect the first executed task to be the one with the highest; // priority, but it is sometimes (even often) rather one of the first; // submitted tasks instead. This is because the worker will immediately steal; // a task once one is on the queue. Often, the worker's first request comes; // before the highest priority one was added. So when comparing to the; // suggested order, we have to move this first executed task to the front.; //; // Things can go even worse in slow systems; there may be several tasks that; // get executed before the queue managed to receive all tasks. We loop; // through all of these, until we hit the last submitted task. From that point; // on, we demand adherence to the expected order.; //; // In the worst case, this could mean that the tasks are received as 0, 1,; // 2, 3, 4, 5, 6, 7, 8, 9. This is still expected behavior, given the; // asynchronous nature of the system, although, of course, quite; // undesirable and would indicate a clear need to improve performance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx:1061,clear,clear,1061,roofit/multiprocess/test/test_Queue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Queue.cxx,1,['clear'],['clear']
Usability,// Calculate total Nops we need to insert. If there are none to insert; // then simply return.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/MCTargetDesc/LoongArchAsmBackend.cpp:80,simpl,simply,80,interpreter/llvm-project/llvm/lib/Target/LoongArch/MCTargetDesc/LoongArchAsmBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/MCTargetDesc/LoongArchAsmBackend.cpp,2,['simpl'],['simply']
Usability,"// Call get Workers; // if we are not idle the scheduler will just enqueue the query and; // send a resume message later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:100,resume,resume,100,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['resume'],['resume']
Usability,// Call site argument might be simplified. We have to go through the; // Attributor interface though as outside AAs can register custom; // simplification callbacks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:31,simpl,simplified,31,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,2,['simpl'],"['simplification', 'simplified']"
Usability,// Call site info is used for function's parameter entry value; // tracking. For now we track only simple cases when parameter; // is transferred through whole register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:99,simpl,simple,99,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simple']
Usability,// CallBrInst simplification,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:14,simpl,simplification,14,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['simpl'],['simplification']
Usability,"// Callback: Learning rate scheduler",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyKeras.cxx:13,Learn,Learning,13,tmva/pymva/src/MethodPyKeras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyKeras.cxx,1,['Learn'],['Learning']
Usability,"// Called when window is closed via the window manager.; // Interrupt Progress bars increment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/guitest.cxx:70,Progress bar,Progress bars,70,test/guitest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/guitest.cxx,1,['Progress bar'],['Progress bars']
Usability,"// Calling Convention Implementation.; // The expectations for frontend ABI lowering vary from target to target.; // Ideally, an LLVM frontend would be able to avoid worrying about many ABI; // details, but this is a longer term goal. For now, we simply try to keep the; // role of the frontend as simple and well-defined as possible. The rules can; // be summarised as:; // * Never split up large scalar arguments. We handle them here.; // * If a hardfloat calling convention is being used, and the struct may be; // passed in a pair of registers (fp+fp, int+fp), and both registers are; // available, then pass as two separate arguments. If either the GPRs or FPRs; // are exhausted, then pass according to the rule below.; // * If a struct could never be passed in registers or directly in a stack; // slot (as it is larger than 2*XLEN and the floating point rules don't; // apply), then pass it using a pointer with the byval attribute.; // * If a struct is less than 2*XLEN, then coerce to either a two-element; // word-sized array or a 2*XLEN scalar (depending on alignment).; // * The frontend can determine whether a struct is returned by reference or; // not based on its size and fields. If it will be returned by reference, the; // frontend must modify the prototype so a pointer with the sret annotation is; // passed as the first argument. This is not necessary for large scalar; // returns.; // * Struct return values and varargs should be coerced to structs containing; // register-size fields in the same situations they would be for fixed; // arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:247,simpl,simply,247,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,2,['simpl'],"['simple', 'simply']"
Usability,// Calling clear deallocates memory and switches to rootLeaf.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:11,clear,clear,11,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['clear'],['clear']
Usability,"// Calls are scheduled with their preceding instructions. For bottom-up; // scheduling, clear the pipeline state before emitting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:88,clear,clear,88,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,3,['clear'],['clear']
Usability,"// Can not read TFile.h here and avoid going through the interpreter by; // simply hard-coding this value.; // This **must** be equal to TFile::k630forwardCompatibility",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:76,simpl,simply,76,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['simpl'],['simply']
Usability,// Can only clear bit 4. Bit 3 must be cleared later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:12,clear,clear,12,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,2,['clear'],"['clear', 'cleared']"
Usability,// Can only simplify direct branches.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:12,simpl,simplify,12,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['simpl'],['simplify']
Usability,// Can only simplify empty blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:12,simpl,simplify,12,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['simpl'],['simplify']
Usability,"// Can this operand be simplified any further, given it's demanded elements?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:23,simpl,simplified,23,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplified']
Usability,// Can we simplify (MaskShAmt+ShiftShAmt) ?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:10,simpl,simplify,10,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['simpl'],['simplify']
Usability,// Can we simplify (ShiftShAmt-MaskShAmt) ?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:10,simpl,simplify,10,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['simpl'],['simplify']
Usability,// Can't create GUID/ValueInfo until we have the linkage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:16,GUID,GUID,16,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['GUID'],['GUID']
Usability,"// Can't replace negative values with an LI as that will sign-extend; // and not clear the left bits. If we're setting the CR bit, we will use; // ANDI_rec which won't sign extend, so that's safe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:81,clear,clear,81,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,2,['clear'],['clear']
Usability,"// Can't simplify to something that comes later in the iteration.; // Otherwise, when and if it changes congruence class, we will never catch; // up. We will always be a class behind it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:9,simpl,simplify,9,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['simpl'],['simplify']
Usability,"// CanPrefixQualifiers - We prefer to print type qualifiers before the type,; // so that we get ""const int"" instead of ""int const"", but we can't do this if; // the type is complex. For example if the type is ""int*"", we *must* print; // ""int * const"", printing ""const int *"" is different. Only do this when the; // type expands to a simple string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp:332,simpl,simple,332,interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,1,['simpl'],['simple']
Usability,"// Cannot cast to non-pointer, non-reference type. Note that, if DestType; // was a reference type, we converted it to a pointer above.; // The status of rvalue references isn't entirely clear, but it looks like; // conversion to them is simply invalid.; // C++ 5.2.11p3: For two pointer types [...]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp:187,clear,clear,187,interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"// Cannot clear ignore list, only append.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/SanitizerArgs.cpp:10,clear,clear,10,interpreter/llvm-project/clang/lib/Driver/SanitizerArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/SanitizerArgs.cpp,1,['clear'],['clear']
Usability,"// Cannot const_cast non-lvalue to lvalue reference type. But if this; // is C-style, static_cast might find a way, so we simply suggest a; // message and tell the parent to keep searching.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp:122,simpl,simply,122,interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,1,['simpl'],['simply']
Usability,// Cannot make a deduction guide when unparsed arguments are present.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:27,guid,guide,27,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['guid'],['guide']
Usability,// Cannot simplify if address spaces are different!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:10,simpl,simplify,10,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['simpl'],['simplify']
Usability,// Cannot simplify select with vector condition,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:10,simpl,simplify,10,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplify']
Usability,"// Cannot use std::make_shared because the constructor of RNTupleFillContext is private. Also it would mean that the; // (direct) memory of all contexts stays around until the vector of weak_ptr's is cleared.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleParallelWriter.cxx:200,clear,cleared,200,tree/ntuple/v7/src/RNTupleParallelWriter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleParallelWriter.cxx,1,['clear'],['cleared']
Usability,"// Canonicalize ((A & -A) - 1) --> ((A - 1) & ~A); // Forms all commutable operations, and simplifies ctpop -> cttz folds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp:91,simpl,simplifies,91,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp,1,['simpl'],['simplifies']
Usability,// Canonicalize scalar-to-vector bitcasts into vector-to-vector bitcasts; // This allows for other simplifications (although some of them; // can only be handled by Analysis/ConstantFolding.cpp).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp:99,simpl,simplifications,99,interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,1,['simpl'],['simplifications']
Usability,// Canonicalize the location order to simplify the following alias check.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAliasAnalysis.cpp:38,simpl,simplify,38,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAliasAnalysis.cpp,1,['simpl'],['simplify']
Usability,// Canonicalize the vector type to make instruction selection; // simpler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:66,simpl,simpler,66,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['simpl'],['simpler']
Usability,// Canonicalize type of constant indices to i64 to simplify CSE,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:51,simpl,simplify,51,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,2,['simpl'],['simplify']
Usability,"// Cap the size growth from profile guided inlining. This is needed even; // though cost of each inline candidate already accounts for callee size,; // because with top-down inlining, we can grow inliner size significantly; // with large number of smaller inlinees each pass the cost check.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:36,guid,guided,36,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,1,['guid'],['guided']
Usability,"// Capability expressions are simple expressions involving the boolean logic; // operators &&, || or !, a simple DeclRefExpr, CastExpr or a ParenExpr. Once; // a DeclRefExpr is found, its type should be checked to determine whether it; // is a capability or not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:30,simpl,simple,30,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,2,['simpl'],['simple']
Usability,"// Capture the deduced template arguments for each parameter pack expanded; // by this pack expansion, add them to the list of arguments we've deduced; // for that pack, then clear out the deduced argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:175,clear,clear,175,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['clear'],['clear']
Usability,// Carry Clear,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kInstrInfo.h:9,Clear,Clear,9,interpreter/llvm-project/llvm/lib/Target/M68k/M68kInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kInstrInfo.h,1,['Clear'],['Clear']
Usability,// Carry Clear/Great or Equal Unsigned,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/Sparc.h:9,Clear,Clear,9,interpreter/llvm-project/llvm/lib/Target/Sparc/Sparc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/Sparc.h,1,['Clear'],['Clear']
Usability,// Carry clear Less than,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Utils/ARMBaseInfo.h:9,clear,clear,9,interpreter/llvm-project/llvm/lib/Target/ARM/Utils/ARMBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Utils/ARMBaseInfo.h,1,['clear'],['clear']
Usability,"// Case 1/2: method simply did not exist before",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:20,simpl,simply,20,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,1,['simpl'],['simply']
Usability,"// Cases #1 (return statements) and #3.; //; // It is hard to detect that something is an assertion or came; // from assertion. Here we use a simple heuristic:; //; // - If it came from a macro, it can be an assertion.; //; // Additionally, we can't assume a number of basic blocks or the CFG's; // structure because assertions might include loops and conditions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp:142,simpl,simple,142,interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,1,['simpl'],['simple']
Usability,"// Cases that can simply never be deallocated; // *) Constants aren't allocated per se, thus not deallocated either.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp:18,simpl,simply,18,interpreter/llvm-project/llvm/lib/IR/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp,1,['simpl'],['simply']
Usability,// Cases that should never be evaluated simply because they shouldn't; // appear in the CFG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:40,simpl,simply,40,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,1,['simpl'],['simply']
Usability,// Cast the pointer to a simplified version of the class structure,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:25,simpl,simplified,25,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['simpl'],['simplified']
Usability,"// Catchswitch doesn't have a 'nounwind' variant, and one might be; // annotated as ""unwinds to caller"" when really it's nounwind (see; // e.g. SimplifyCFGOpt::SimplifyUnreachable), so we can't infer the; // parent's unwind dest from this. We can check its catchpads'; // descendants, since they might include a cleanuppad with an; // ""unwinds to caller"" cleanupret, which can be trusted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:144,Simpl,SimplifyCFGOpt,144,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,2,['Simpl'],"['SimplifyCFGOpt', 'SimplifyUnreachable']"
Usability,"// Chain up all pending constrained intrinsics together with all; // pending loads, by simply appending them to PendingLoads and; // then calling getMemoryRoot().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:87,simpl,simply,87,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['simpl'],['simply']
Usability,"// Change a chain of {load; op; store} of the same value into a simple op; // through memory of that value, if the uses of the modified value and its; // address are suitable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp:64,simpl,simple,64,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,1,['simpl'],['simple']
Usability,"// Change a chain of {load; op; store} of the same value into a simple op; // through memory of that value, if the uses of the modified value and its; // address are suitable.; //; // The tablegen pattern memory operand pattern is currently not able to match; // the case where the CC on the original operation are used.; //; // See the equivalent routine in X86ISelDAGToDAG for further comments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp:64,simpl,simple,64,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,1,['simpl'],['simple']
Usability,"// Change a chain of {load; op; store} of the same value into a simple op; // through memory of that value, if the uses of the modified value and its; // address are suitable.; //; // The tablegen pattern memory operand pattern is currently not able to match; // the case where the EFLAGS on the original operation are used.; //; // To move this to tablegen, we'll need to improve tablegen to allow flags to; // be transferred from a node in the pattern to the result node, probably with; // a new keyword. For example, we have this; // def DEC64m : RI<0xFF, MRM1m, (outs), (ins i64mem:$dst), ""dec{q}\t$dst"",; // [(store (add (loadi64 addr:$dst), -1), addr:$dst),; // (implicit EFLAGS)]>;; // but maybe need something like this; // def DEC64m : RI<0xFF, MRM1m, (outs), (ins i64mem:$dst), ""dec{q}\t$dst"",; // [(store (add (loadi64 addr:$dst), -1), addr:$dst),; // (transferrable EFLAGS)]>;; //; // Until then, we manually fold these and instruction select the operation; // here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:64,simpl,simple,64,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['simpl'],['simple']
Usability,"// Change select and PHI nodes to select values instead of addresses: this; // helps alias analysis out a lot, allows many others simplifications, and; // exposes redundancy in the code.; //; // Note that we cannot do the transformation unless we know that the; // introduced loads cannot trap! Something like this is valid as long as; // the condition is always false: load (select bool %C, int* null, int* %G),; // but it would not be valid if we transformed it to load from null; // unconditionally.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:130,simpl,simplifications,130,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,1,['simpl'],['simplifications']
Usability,// Change the shift amount and clear the appropriate IR flags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:31,clear,clear,31,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['clear'],['clear']
Usability,"// Changing exit conditions for blocks may affect exit counts of this loop and; // any of its parents, so we must invalidate the entire subtree if we've made; // any changes. Do this here rather than in simplifyOneLoop() as the top-most; // loop is going to be the same for all child loops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp:203,simpl,simplifyOneLoop,203,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,1,['simpl'],['simplifyOneLoop']
Usability,// Check C++17 tie-breakers for deduction guides.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:42,guid,guides,42,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['guid'],['guides']
Usability,"// Check COPY instructions that copy formal parameters into virtual; // registers. Such parameters can be sign- or zero-extended at the; // call site, and we should take advantage of this knowledge. The MRI; // keeps a list of pairs of live-in physical and virtual registers,; // which provides information about which virtual registers will hold; // the argument values. The function will still contain instructions; // defining those virtual registers, and in practice those are COPY; // instructions from a physical to a virtual register. In such cases,; // applying the argument extension to the virtual register can be seen; // as simply mirroring the extension that had already been applied to; // the physical register at the call site. If the defining instruction; // was not a COPY, it would not be clear how to mirror that extension; // on the callee's side. For that reason, only check COPY instructions; // for potential extensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp:636,simpl,simply,636,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,// Check all elements and simplify any unused elements with UNDEF.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:26,simpl,simplify,26,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['simpl'],['simplify']
Usability,// Check clearance before partial register updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp:9,clear,clearance,9,interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,1,['clear'],['clearance']
Usability,"// Check feasiblity of LoopVersioningLICM.; // If versioning found to be feasible and beneficial then proceed; // else simply return, by cleaning up memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp:119,simpl,simply,119,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp,1,['simpl'],['simply']
Usability,// Check for SI_KILL_*_TERMINATOR on path from if to endif.; // if there is any such terminator simplifications are not safe.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp:96,simpl,simplifications,96,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,1,['simpl'],['simplifications']
Usability,"// Check for a constant condition. These are normally stripped out by; // SimplifyCFG, but ScalarEvolution may be used by a pass which wishes to; // preserve the CFG and is temporarily leaving constant conditions; // in place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:74,Simpl,SimplifyCFG,74,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Simpl'],['SimplifyCFG']
Usability,"// Check for a non-prevailing def that has interposable linkage; // (e.g. non-odr weak or linkonce). In that case we can't simply; // convert to available_externally, since it would lose the; // interposable property and possibly get inlined. Simply drop; // the definition in that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:123,simpl,simply,123,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,2,"['Simpl', 'simpl']","['Simply', 'simply']"
Usability,"// Check for a signed 16-bit value. We special case SRA because it makes it; // more simple when also looking for SRAs that aren't sign extending a; // smaller value. Without the check, we'd need to take extra care with; // checking order for some operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:85,simpl,simple,85,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['simpl'],['simple']
Usability,// Check for a simple Add/Sub or GEP of a loop invariant step.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:15,simpl,simple,15,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['simpl'],['simple']
Usability,// Check for a simple looking step prior to loop entry.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:15,simpl,simple,15,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simple']
Usability,// Check for a simply defined value that can be blitted directly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp:15,simpl,simply,15,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,1,['simpl'],['simply']
Usability,"// Check for a type which we know has a simple scalar argument-passing; // convention without any padding. (We're specifically looking for 32; // and 64-bit integer and integer-equivalents, float, and double.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:40,simpl,simple,40,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['simpl'],['simple']
Usability,// Check for buffer overflows and misalignment.; // Only handles memory references that read/write something simple like an; // alloca instruction or a global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp:109,simpl,simple,109,interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,1,['simpl'],['simple']
Usability,// Check for constant LHS & RHS - in this case we just simplify.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:55,simpl,simplify,55,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['simpl'],['simplify']
Usability,"// Check for kills that appear after the terminator instruction, that; // would not be detected by clearKillFlags, since they will cause the; // register to be dead at a later place, causing the verifier to fail.; // We use the candidates to clear the kill flags later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMasking.cpp:99,clear,clearKillFlags,99,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMasking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMasking.cpp,2,['clear'],"['clear', 'clearKillFlags']"
Usability,// Check for pointer simplifications.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:21,simpl,simplifications,21,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['simpl'],['simplifications']
Usability,// Check for repeated operand logic simplifications.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:36,simpl,simplifications,36,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplifications']
Usability,// Check for simple case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:13,simpl,simple,13,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['simpl'],['simple']
Usability,// Check for simple erasable conflicts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:13,simpl,simple,13,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['simpl'],['simple']
Usability,// Check for simple tokens.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:13,simpl,simple,13,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['simpl'],['simple']
Usability,"// Check for some cases that are worth simplifying. Right now we want to look; // for loads that are used by a switch or by the condition for the branch. If; // we see one, check to see if it's partially redundant. If so, insert a PHI; // which can then be used to thread the values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:39,simpl,simplifying,39,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['simpl'],['simplifying']
Usability,// Check for trivial simplification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:21,simpl,simplification,21,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['simpl'],['simplification']
Usability,"// Check for truncates. If all the operands are truncated from the same; // type, see if factoring out the truncate would permit the result to be; // folded. eg., n*trunc(x) + m*trunc(y) --> trunc(trunc(m)*x + trunc(n)*y); // if the contents of the resulting outer trunc fold to something simple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:289,simpl,simple,289,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simple']
Usability,"// Check for tstbit simplification opportunity, where the bit being checked; // can be tracked back to another register. For example:; // %2 = S2_lsr_i_r %1, 5; // %3 = S2_tstbit_i %2, 0; // =>; // %3 = S2_tstbit_i %1, 5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:20,simpl,simplification,20,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['simpl'],['simplification']
Usability,// Check if Ty is a usable substitute for the coercion type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/Sparc.cpp:20,usab,usable,20,interpreter/llvm-project/clang/lib/CodeGen/Targets/Sparc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/Sparc.cpp,1,['usab'],['usable']
Usability,// Check if U is a select that can be simplified to a SCEVUnknown.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:38,simpl,simplified,38,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simplified']
Usability,"// Check if UGEPI is a simple gep with a single constant index and GEPIOp is; // the pointer operand to it. If so, record it in the vector. If not, give; // up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:23,simpl,simple,23,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['simpl'],['simple']
Usability,// Check if Usr can be simplified to a constant.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:23,simpl,simplified,23,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['simpl'],['simplified']
Usability,"// Check if Usr can be simplified to an integer constant when the value of one; // of its operands Op is an integer constant OpConstVal. If so, return it as an; // lattice value range with a single element or otherwise return an overdefined; // lattice value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:23,simpl,simplified,23,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['simpl'],['simplified']
Usability,"// Check if a return instruction always cause UB or not; // Note: It is guaranteed that the returned position of the anchor; // scope has noundef attribute when this is called.; // We also ensure the return position is not ""assumed dead""; // because the returned value was then potentially simplified to; // `undef` in AAReturnedValues without removing the `noundef`; // attribute yet.; // When the returned position has noundef attriubte, UB occurs in the; // following cases.; // (1) Returned value is known to be undef.; // (2) The value is known to be a null pointer and the returned; // position has nonnull attribute (because the returned value is; // poison).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:290,simpl,simplified,290,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['simpl'],['simplified']
Usability,// Check if all arguments have the same type - it's simple case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVRegularizer.cpp:52,simpl,simple,52,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVRegularizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVRegularizer.cpp,1,['simpl'],['simple']
Usability,// Check if all other vregs have a usable allocation in the case of vector; // to FP conversion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp:35,usab,usable,35,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,1,['usab'],['usable']
Usability,// Check if all terminators do not implicitly use LR. Then we can 'restore' LR; // into PC so it is not live out of the return block: Clear the Restored bit; // in that case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:134,Clear,Clear,134,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['Clear'],['Clear']
Usability,// Check if any concat_vectors can be simplified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:38,simpl,simplified,38,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['simpl'],['simplified']
Usability,"// Check if every element of this shuffle can be mapped back to the; // corresponding element of a single root vector. If so, we don't need this; // shuffle. This handles simple identity shuffles as well as chains of; // shuffles that may widen/narrow and/or move elements across lanes and back.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:171,simpl,simple,171,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simple']
Usability,"// Check if extra modifications will be required to preserve loop-simplify; // form after splitting. If it would require splitting blocks with IndirectBr; // terminators, bail out if preserving loop-simplify form is requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:66,simpl,simplify,66,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,4,['simpl'],['simplify']
Usability,// Check if its clearly not the best.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPContext.cpp:16,clear,clearly,16,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPContext.cpp,1,['clear'],['clearly']
Usability,// Check if one of the arms of the VSELECT is a zero vector. If it's on; // the left side invert the predicate to simplify logic below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:114,simpl,simplify,114,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplify']
Usability,// Check if one of the arms of the VSELECT is vector with all bits set.; // If it's on the left side invert the predicate to simplify logic below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:125,simpl,simplify,125,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplify']
Usability,// Check if shuffle mask can be simplified to undef/zero/identity.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:32,simpl,simplified,32,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplified']
Usability,"// Check if the EFLAGS register is marked as live-out. This shouldn't happen,; // because the calling convention defines the EFLAGS register as NOT; // preserved.; //; // Unfortunatelly the EFLAGS show up as live-out after branch folding. Adding; // an assert to track this and clear the register afterwards to avoid; // unnecessary crashes during release builds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp:278,clear,clear,278,interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp,1,['clear'],['clear']
Usability,"// Check if the autoreleasepool scope is followed by a simple return; // statement, in which case we will include the return in the scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp:55,simpl,simple,55,interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,1,['simpl'],['simple']
Usability,"// Check if the branch instruction dominates the phi node. It's a simple; // dominance check, but sufficient for our needs.; // Although this check is invariant in the calling loops, it's better to do it; // at this late stage. Practically we do it at most once for a switch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:66,simpl,simple,66,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['simpl'],['simple']
Usability,"// Check if the current token is an SP3 'neg' modifier.; // Currently this modifier is allowed in the following context:; //; // 1. Before a register, e.g. ""-v0"", ""-v[...]"" or ""-[v0,v1]"".; // 2. Before an 'abs' modifier: -abs(...); // 3. Before an SP3 'abs' modifier: -|...|; //; // In all other cases ""-"" is handled as a part; // of an expression that follows the sign.; //; // Note: When ""-"" is followed by an integer literal,; // this is interpreted as integer negation rather; // than a floating-point NEG modifier applied to N.; // Beside being contr-intuitive, such use of floating-point; // NEG modifier would have resulted in different meaning; // of integer literals used with VOP1/2/C and VOP3,; // for example:; // v_exp_f32_e32 v5, -1 // VOP1: src0 = 0xFFFFFFFF; // v_exp_f32_e64 v5, -1 // VOP3: src0 = 0x80000001; // Negative fp literals with preceding ""-"" are; // handled likewise for uniformity; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp:556,intuit,intuitive,556,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,1,['intuit'],['intuitive']
Usability,// Check if the defining load is simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:33,simpl,simple,33,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['simpl'],['simple']
Usability,"// Check if the extracted bits are contained within the mask that it is; // and-ed with. The extract operation will copy these bits, and so the; // mask cannot any holes in it that would clear any of the bits of the; // extracted field.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenExtract.cpp:187,clear,clear,187,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenExtract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenExtract.cpp,1,['clear'],['clear']
Usability,"// Check if the fit range is usable as plot range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:29,usab,usable,29,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,1,['usab'],['usable']
Usability,// Check if the node-set contains only a simple add recurrence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:41,simpl,simple,41,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['simpl'],['simple']
Usability,// Check if the second condition can be simplified now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:40,simpl,simplified,40,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['simpl'],['simplified']
Usability,"// Check if this ID was forward referenced, and if so, update the; // corresponding GUIDs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:84,GUID,GUIDs,84,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,2,['GUID'],['GUIDs']
Usability,// Check if this is a call to the implicitarg_ptr builtin and it; // is used to retrieve the hostcall pointer. The implicit arg for; // hostcall is not used only if every use of the implicitarg_ptr; // is a load that clearly does not retrieve any byte of the; // hostcall pointer. We check this by tracing all the uses of the; // initial call to the implicitarg_ptr intrinsic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAttributor.cpp:217,clear,clearly,217,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAttributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAttributor.cpp,1,['clear'],['clearly']
Usability,"// Check if this is identity. If so, return 0 since we are not simplifying; // anything.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp:63,simpl,simplifying,63,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,1,['simpl'],['simplifying']
Usability,// Check if we can do the following simplification.; // ext(trunc(opnd)) --> ext(opnd),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:36,simpl,simplification,36,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['simpl'],['simplification']
Usability,// Check if we can use the condition value to increment/decrement a single; // constant value. This simplifies a select to an add and removes a constant; // load/materialization from the general case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:100,simpl,simplifies,100,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplifies']
Usability,// Check if we found any stack accesses in the predecessors. We are not; // doing a full dataflow analysis here to keep things simple but just; // rely on a reverse portorder traversal (RPOT) to guarantee predecessors; // are already processed except for loops (and accept the conservative; // result for loops).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp:127,simpl,simple,127,interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,1,['simpl'],['simple']
Usability,"// Check if we have an access for this instruction, if not, simply add it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:60,simpl,simply,60,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['simpl'],['simply']
Usability,"// Check if we're replacing an IMPLICIT_DEF value. The IMPLICIT_DEF; // instructions are only inserted to provide a live-out value for PHI; // predecessors, so the instruction should simply go away once its value; // has been replaced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:183,simpl,simply,183,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['simpl'],['simply']
Usability,"// Check it's really safe to treat that pair of `ptrtoint`/`inttoptr` as a; // no-op cast. Besides checking both of them are no-op casts, as the; // reinterpreted pointer may be used in other pointer arithmetic, we also; // need to double-check that through the target-specific hook. That ensures; // the underlying target also agrees that's a no-op address space cast and; // pointer bits are preserved.; // The current IR spec doesn't have clear rules on address space casts,; // especially a clear definition for pointer bits in non-default address; // spaces. It would be undefined if that pointer is dereferenced after an; // invalid reinterpret cast. Also, due to the unclearness for the meaning of; // bits in non-default address spaces in the current spec, the pointer; // arithmetic may also be undefined after invalid pointer reinterpret cast.; // However, as we confirm through the target hooks that it's a no-op; // addrspacecast, it doesn't matter since the bits should be the same.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:442,clear,clear,442,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,2,['clear'],['clear']
Usability,// Check loop is in simplified form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp:20,simpl,simplified,20,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,1,['simpl'],['simplified']
Usability,"// Check simplification result, prune known UB callees, also restrict it to; // the !callees set, if present.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:9,simpl,simplification,9,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['simpl'],['simplification']
Usability,// Check that GEPI is a simple gep with a single constant index.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:24,simpl,simple,24,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['simpl'],['simple']
Usability,"// Check that the cloned RetVal exists and is a call, otherwise we cannot; // add the attributes on the cloned RetVal. Simplification during inlining; // could have transformed the cloned instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:119,Simpl,Simplification,119,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['Simpl'],['Simplification']
Usability,// Check that the result type of the suspend matches the resume types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/Coroutines.cpp:57,resume,resume,57,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/Coroutines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/Coroutines.cpp,1,['resume'],['resume']
Usability,// Check that the return type is written as a specialization of; // the template specified as the deduction-guide's name.; // The template name may not be qualified. [temp.deduct.guide],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:108,guid,guide,108,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['guid'],['guide']
Usability,"// Check that the shift amount is in range. If not, don't perform undefined; // shifts. When the shift is visited it will be simplified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:125,simpl,simplified,125,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['simpl'],['simplified']
Usability,"// Check that the shift amount is in range. If not, don't perform undefined; // shifts. When the shift is visited, it will be simplified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:126,simpl,simplified,126,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['simpl'],['simplified']
Usability,"// Check that the simplified value has the form ""X op Y"" where ""op"" is the; // same as the original operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:18,simpl,simplified,18,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplified']
Usability,"// Check that the two size arrays are non-empty and equal in length and; // value.; // TODO: it would be better to let the caller to clear Subscripts, similar; // to how we handle Sizes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp:133,clear,clear,133,interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,1,['clear'],['clear']
Usability,"// Check that the variable is actually usable in constant expressions. For a; // const integral variable or a reference, we might have a non-constant; // initializer that we can nonetheless evaluate the initializer for. Such; // variables are not usable in constant expressions. In C++98, the; // initializer also syntactically needs to be an ICE.; //; // FIXME: We don't diagnose cases that aren't potentially usable in constant; // expressions here; doing so would regress diagnostics for things like; // reading from a volatile constexpr variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:39,usab,usable,39,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,3,['usab'],['usable']
Usability,// Check that there are no other instructions except for debug and lifetime; // intrinsics between the phi's and resume instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:113,resume,resume,113,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['resume'],['resume']
Usability,// Check that this is a simple access of a vector element.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp:24,simpl,simple,24,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,1,['simpl'],['simple']
Usability,"// Check that we can compute the value of AddRec on the exiting iteration; // without soundness problems. evaluateAtIteration internally needs; // to multiply the stride of the iteration number - which may wrap around.; // The issue here is subtle because computing the result accounting for; // wrap is insufficient. In order to use the result in an exit test, we; // must also know that AddRec doesn't take the same value on any previous; // iteration. The simplest case to consider is a candidate IV which is; // narrower than the trip count (and thus original IV), but this can; // also happen due to non-unit strides on the candidate IVs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:459,simpl,simplest,459,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['simpl'],['simplest']
Usability,"// Check the Snapshot clone is usable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_cloning.cxx:31,usab,usable,31,tree/dataframe/test/dataframe_cloning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_cloning.cxx,1,['usab'],['usable']
Usability,// Check the declarator is simple enough.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:27,simpl,simple,27,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['simpl'],['simple']
Usability,"// Check the model, avoid simplifying AST to save time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h:26,simpl,simplifying,26,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h,1,['simpl'],['simplifying']
Usability,// Check the simple case where the array dimensions are fixed size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp:13,simpl,simple,13,interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,1,['simpl'],['simple']
Usability,// Check the simple memory generation tracking first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:13,simpl,simple,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['simpl'],['simple']
Usability,// Check the zero extend is extending to 32-bit or more. The code generated by; // srl(ctlz) for 16-bit or less variants of the pattern would require extra; // instructions to clear the upper bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:176,clear,clear,176,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['clear'],['clear']
Usability,"// Check to see if one of the operands is of the same kind. If so, expand its; // operands onto our operand list, and recurse to simplify.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:129,simpl,simplify,129,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['simpl'],['simplify']
Usability,"// Check to see if the position of the element in the vector corresponds; // with the byte we are trying to provide for. In the case of a vector of; // i8, this simply means the VectorIndex == StartingIndex. For non i8 cases,; // the element will provide a range of bytes. For example, if we have a; // vector of i16s, each element provides two bytes (V[1] provides byte 2 and; // 3).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:161,simpl,simply,161,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simply']
Usability,// Check to see if we can simplify the terminator of the block before this; // one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp:26,simpl,simplify,26,interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,1,['simpl'],['simplify']
Usability,"// Check whether a boolean test is testing a boolean value generated by; // X86ISD::SETCC. If so, return the operand of that SETCC and proper condition; // code.; //; // Simplify the following patterns:; // (Op (CMP (SETCC Cond EFLAGS) 1) EQ) or; // (Op (CMP (SETCC Cond EFLAGS) 0) NEQ); // to (Op EFLAGS Cond); //; // (Op (CMP (SETCC Cond EFLAGS) 0) EQ) or; // (Op (CMP (SETCC Cond EFLAGS) 1) NEQ); // to (Op EFLAGS !Cond); //; // where Op could be BRCOND or CMOV.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:170,Simpl,Simplify,170,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Simpl'],['Simplify']
Usability,// Check whether all usages of this instruction are as offsets of; // gathers/scatters or simple arithmetics only used by gathers/scatters,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp:90,simpl,simple,90,interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,1,['simpl'],['simple']
Usability,// Check whether comparison of FalseValues can be simplified,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:50,simpl,simplified,50,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['simpl'],['simplified']
Usability,// Check whether comparison of TrueValues can be simplified,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:49,simpl,simplified,49,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['simpl'],['simplified']
Usability,"// Check whether inner loops are uniform. At this point, we only support; // simple outer loops scenarios with uniform nested loops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp:77,simpl,simple,77,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp,1,['simpl'],['simple']
Usability,"// Check whether the backedge-taken count is SCEVCouldNotCompute.; // Note that this serves two purposes: It filters out loops that are; // simply not analyzable, and it covers the case where this code is; // being called from within backedge-taken count analysis, such that; // attempting to ask for the backedge-taken count would likely result; // in infinite recursion. In the later case, the analysis code will; // cope with a conservative value, and it will take care to purge; // that value once it has finished.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:140,simpl,simply,140,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,4,['simpl'],['simply']
Usability,// Check whether the function only has simple terminator:; // br/brcond/unreachable/ret,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:39,simpl,simple,39,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['simpl'],['simple']
Usability,// Check whether the profiled binary was built with position independent code; // (PIC). Perform sanity checks for assumptions we rely on to simplify; // symbolization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/RawMemProfReader.cpp:141,simpl,simplify,141,interpreter/llvm-project/llvm/lib/ProfileData/RawMemProfReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/RawMemProfReader.cpp,1,['simpl'],['simplify']
Usability,"// Check whether there is some 3D view class for this TPad; // TPadView3D *view3D = (TPadView3D*)gPad->GetView3D();; // if (view3D) view3D->PaintGeoTrack(this,option); // to be implemented; // Check if option is 'x3d'. NOTE: This is a simple checking; // but since there is no other; // options yet, this works fine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoTrack.cxx:235,simpl,simple,235,geom/geompainter/src/TGeoTrack.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoTrack.cxx,1,['simpl'],['simple']
Usability,"// Check whether we can widen this to an i16 shuffle by duplicating bytes.; // Notably, this handles splat and partial-splat shuffles more efficiently.; // However, it only makes sense if the pre-duplication shuffle simplifies; // things significantly. Currently, this means we need to be able to; // express the pre-duplication shuffle as an i16 shuffle.; //; // FIXME: We should check for other patterns which can be widened into an; // i16 shuffle as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:216,simpl,simplifies,216,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplifies']
Usability,// Check whether we've already declared deduction guides for this template.; // FIXME: Consider storing a flag on the template to indicate this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:50,guid,guides,50,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['guid'],['guides']
Usability,"// CheckAssignmentOperands is used for both simple and compound assignment.; // For simple assignment, pass both expressions and a null converted type.; // For compound assignment, pass both expressions and the converted type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:44,simpl,simple,44,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,2,['simpl'],['simple']
Usability,"// Checking if the number of clear bits is odd (parity)? If the type has; // an even number of bits, that's the same as checking if the number of; // set bits is odd, so we can eliminate the 'not' op.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp:29,clear,clear,29,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,1,['clear'],['clear']
Usability,"// Checks that all GUIDs of read/writeonly vars we see in export lists; // are also in the import lists. Otherwise we my face linker undefs,; // because readonly and writeonly vars are internalized in their; // source modules. The exception would be if it has a linkage type indicating; // that there may have been a copy existing in the importing module (e.g.; // linkonce_odr). In that case we cannot accurately do this checking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:19,GUID,GUIDs,19,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,1,['GUID'],['GUIDs']
Usability,"// Choose the closest LEA instruction from the list, prior to MI if; // possible. Note that we took into account resulting address displacement; // as well. Also note that the list is sorted by the order in which the LEAs; // occur, so the break condition is pretty simple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp:266,simpl,simple,266,interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,1,['simpl'],['simple']
Usability,// Choose the type of comparison. Equality and inequality tests can; // use either signed or unsigned comparisons. The choice also doesn't; // matter if both sign bits are known to be clear. In those cases we; // want to give the main isel code the freedom to choose whichever; // form fits best.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:184,clear,clear,184,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['clear'],['clear']
Usability,// Class-scope explicit specializations (MS extension) do not result in; // deduction guides.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:86,guid,guides,86,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['guid'],['guides']
Usability,"// Classes of NVVM intrinsics that can't be replaced one-to-one with a; // target-generic intrinsic, cast op, or binary op but that we can nonetheless; // simplify.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp:155,simpl,simplify,155,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp,1,['simpl'],['simplify']
Usability,// Classifies the object and dumps a user-friendly description string to; // the stream.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MoveChecker.cpp:37,user-friendly,user-friendly,37,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MoveChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MoveChecker.cpp,1,['user-friendly'],['user-friendly']
Usability,"// Clean and load new batches, one batch for one slave net; //batches.clear();; //batches.reserve(nThreads);; //for (size_t j = 0; j < nThreads; j++) {; // batches.push_back(trainingData.GetTensorBatch());; //}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx:70,clear,clear,70,tmva/tmva/src/MethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx,1,['clear'],['clear']
Usability,// Clean up any obviously simplifiable users now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:26,simpl,simplifiable,26,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,2,['simpl'],['simplifiable']
Usability,"// Clean up temporary objects so that they don't live across suspension points; // unnecessarily. We choose to clean up before the call to; // __builtin_coro_resume so that the cleanup code are not inserted in-between; // the resume call and return instruction, which would interfere with the; // musttail call contract.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp:226,resume,resume,226,interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,1,['resume'],['resume']
Usability,// Cleanup after unsuccessful AddGlue. Use the standard method of morphing the; // node even though simply shrinking the value list is sufficient.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:100,simpl,simply,100,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,1,['simpl'],['simply']
Usability,"// Clear ""do not change"" set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['Clear'],['Clear']
Usability,"// Clear ""not strings"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['Clear'],['Clear']
Usability,"// Clear Cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3,Clear,Clear,3,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Clear'],['Clear']
Usability,// Clear CriticalResourceIdx if it is now below the threshold.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp,1,['Clear'],['Clear']
Usability,// Clear Divisor's kill flag.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,2,['Clear'],['Clear']
Usability,"// Clear Dup dead flag if any, we reuse it for Reg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['Clear'],['Clear']
Usability,// Clear FP registers with a VSCCLRM.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,"// Clear FPSCR bits 0-4, 7, 28-31; // The other bits are program global according to the AAPCS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,// Clear IgnoreDepMIs when Packet starts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,1,['Clear'],['Clear']
Usability,// Clear JITDylibs and notify the platform.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,1,['Clear'],['Clear']
Usability,// Clear L2's leader flag:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/EquivalenceClasses.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ADT/EquivalenceClasses.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/EquivalenceClasses.h,1,['Clear'],['Clear']
Usability,// Clear LSB of JumpReg,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,"// Clear Live bit, as we will recalculate afterwards",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp,1,['Clear'],['Clear']
Usability,// Clear MSB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,2,['Clear'],['Clear']
Usability,// Clear Mangled if trying to extract something that isn't a digit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp,1,['Clear'],['Clear']
Usability,"// Clear NewWaterList now. If we split a block for branches, it should; // appear as ""new water"" for the next iteration of constant pool placement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,3,['Clear'],['Clear']
Usability,// Clear SymbolicOp.Value from above and also all other fields.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/MCExternalSymbolizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/MCDisassembler/MCExternalSymbolizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/MCExternalSymbolizer.cpp,1,['Clear'],['Clear']
Usability,// Clear T in all remaining words matching P.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,1,['Clear'],['Clear']
Usability,// Clear TRAP_STS.MEM_VIOL,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['Clear'],['Clear']
Usability,// Clear TiedOperands here instead of at the top of the loop; // since most instructions do not have tied operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['Clear'],['Clear']
Usability,// Clear V's name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/IR/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp,1,['Clear'],['Clear']
Usability,"// Clear `Kills`, as we have a new def available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,2,['Clear'],['Clear']
Usability,// Clear all GPR that are not a use of the return instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,// Clear all handler blocks.; // FIXME: it's better to always call clearHandlerBlocks in DTOR and have a; // 'takeHandler' or some such function which removes ownership from the; // EHCatchScope object if the handlers should live longer than EHCatchScope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.h:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.h,2,"['Clear', 'clear']","['Clear', 'clearHandlerBlocks']"
Usability,// Clear all information in the graph.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,1,['Clear'],['Clear']
Usability,// Clear all kill flags. They will be reinserted after register allocation; // by LiveIntervals::addKillFlags().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervalCalc.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervalCalc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervalCalc.cpp,1,['Clear'],['Clear']
Usability,// Clear all non-demanded bits initially.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,2,['Clear'],['Clear']
Usability,"// Clear all packages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:3,Clear,Clear,3,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['Clear'],['Clear']
Usability,"// Clear all predecessors of the new entry block. There should be; // exactly one predecessor, which we created when splitting out; // AllocaSpillBlock to begin with.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['Clear'],['Clear']
Usability,// Clear all updates now. Facilitates deletes that follow.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,1,['Clear'],['Clear']
Usability,"// Clear an X11 window",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:3,Clear,Clear,3,core/winnt/inc/Win32Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h,1,['Clear'],['Clear']
Usability,"// Clear and Set Pad range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:3,Clear,Clear,3,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Clear'],['Clear']
Usability,"// Clear and delete the graph if not exists",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:3,Clear,Clear,3,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['Clear'],['Clear']
Usability,"// Clear and then resize, to make sure existing data gets destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/LazyRandomTypeCollection.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/LazyRandomTypeCollection.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/LazyRandomTypeCollection.cpp,1,['Clear'],['Clear']
Usability,"// Clear any PHIs that we visited, to make sure we examine all uses of; // any subsequent allocas that we look at.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,1,['Clear'],['Clear']
Usability,// Clear any cached analysis results for L if we removed it completely.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp,1,['Clear'],['Clear']
Usability,"// Clear any cached transaction states.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:3,Clear,Clear,3,interpreter/cling/lib/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp,1,['Clear'],['Clear']
Usability,// Clear any csects we have stored.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/XCOFFObjectWriter.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/XCOFFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/XCOFFObjectWriter.cpp,1,['Clear'],['Clear']
Usability,// Clear any entries in map that MI clobbers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp,1,['Clear'],['Clear']
Usability,// Clear any existing patterns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h,1,['Clear'],['Clear']
Usability,// Clear any forced encodings from the previous instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,1,['Clear'],['Clear']
Usability,"// Clear any inherited file mode creation mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/daemon.cxx:3,Clear,Clear,3,net/rpdutils/src/daemon.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/daemon.cxx,1,['Clear'],['Clear']
Usability,// Clear any intervening kills of CC.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,1,['Clear'],['Clear']
Usability,// Clear any intervening kills of SrcReg and SrcReg2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,1,['Clear'],['Clear']
Usability,"// Clear any kill flags from this operand. The new register could; // have uses after this one, so kills are not valid here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,1,['Clear'],['Clear']
Usability,// Clear any kills of TargetReg between CondBr and the last removed COPY.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRedundantCopyElimination.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRedundantCopyElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRedundantCopyElimination.cpp,1,['Clear'],['Clear']
Usability,// Clear any metadata.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['Clear'],['Clear']
Usability,"// Clear any per-instruction data. We only have to do this for BadMBB itself; // because the instructions in that block may change. Other blocks may be; // invalidated, but their instructions will stay the same, so there is no; // need to erase the Cycle entries. They will be overwritten when we; // recompute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['Clear'],['Clear']
Usability,// Clear any previous ObjectName.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,2,['Clear'],['Clear']
Usability,"// Clear any previous data in memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,4,['Clear'],['Clear']
Usability,// Clear any previous kill flag on Reg found before I in MBB. Walk backwards; // in MBB and if needed continue in predecessors until a use/def of Reg is; // encountered. This seems to be faster in practice than tracking kill flags; // in a map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp,1,['Clear'],['Clear']
Usability,"// Clear any stored states that reference the llvm::Module.; // Do it first in case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:3,Clear,Clear,3,interpreter/cling/lib/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp,1,['Clear'],['Clear']
Usability,"// Clear associated memory cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3,Clear,Clear,3,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,10,['Clear'],['Clear']
Usability,"// Clear authentication",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:3,Clear,Clear,3,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['Clear'],['Clear']
Usability,// Clear bits 27-24,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp,2,['Clear'],['Clear']
Usability,// Clear bits 27-26,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp,1,['Clear'],['Clear']
Usability,// Clear bits that are not demanded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['Clear'],['Clear']
Usability,"// Clear button",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/inc/TSessionDialogs.h:3,Clear,Clear,3,gui/sessionviewer/inc/TSessionDialogs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/inc/TSessionDialogs.h,2,['Clear'],['Clear']
Usability,// Clear byval registers tracking info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,1,['Clear'],['Clear']
Usability,"// Clear cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3,Clear,Clear,3,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Clear'],['Clear']
Usability,"// Clear cache content",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Clear,Clear,3,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['Clear'],['Clear']
Usability,"// Clear cached linkage for function template decls, too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:3,Clear,Clear,3,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp,1,['Clear'],['Clear']
Usability,"// Clear caches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['Clear'],['Clear']
Usability,// Clear chunk in the immediate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandImm.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandImm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandImm.cpp,1,['Clear'],['Clear']
Usability,// Clear conflicting writable attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,3,['Clear'],['Clear']
Usability,"// Clear dangling pointers. We added all MemoryPhi users, but not all; // of them are removed by fixupDefs().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['Clear'],['Clear']
Usability,"// Clear dataSet and add contents of uniqueFileList needed otherwise; // THashList deletes the objects even when nodelete is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Clear,Clear,3,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['Clear'],['Clear']
Usability,"// Clear dataset at beginning of run",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,1,['Clear'],['Clear']
Usability,// Clear debug info; // Ownership of DbgVariables is a bit subtle - ScopeVariables owns all the; // DbgVariables except those that are also in AbstractVariables (since they; // can be used cross-function),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['Clear'],['Clear']
Usability,// Clear demanded bits and update the offset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,1,['Clear'],['Clear']
Usability,"// Clear dirty flag by calling getVal(); //cout << ""RooChangeTracker("" << GetName() << "") clearing isValueDirty"" << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChangeTracker.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooChangeTracker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChangeTracker.cxx,2,"['Clear', 'clear']","['Clear', 'clearing']"
Usability,"// Clear dirty state and mark that calculation request was dispatched",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['Clear'],['Clear']
Usability,"// Clear dsname",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3,Clear,Clear,3,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Clear'],['Clear']
Usability,// Clear each element of the LLVM array.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['Clear'],['Clear']
Usability,"// Clear error count and start a transaction in the workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['Clear'],['Clear']
Usability,"// Clear error list on local side",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,2,['Clear'],['Clear']
Usability,// Clear error states for all streams.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,1,['Clear'],['Clear']
Usability,"// Clear error states if `fflush` returns 0, but retain their EOF flags.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,1,['Clear'],['Clear']
Usability,"// Clear eval error log prior to forking; // to avoid confusions...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['Clear'],['Clear']
Usability,// Clear existing attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['Clear'],['Clear']
Usability,// Clear first part as single,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,// Clear function attribute cold.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,1,['Clear'],['Clear']
Usability,"// Clear gradient vectors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:3,Clear,Clear,3,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,2,['Clear'],['Clear']
Usability,// Clear high parts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['Clear'],['Clear']
Usability,// Clear instruction cache before code will be executed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/tools/lli/lli.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp,1,['Clear'],['Clear']
Usability,// Clear instructions not recorded in `ErasedInstrs` but erased.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['Clear'],['Clear']
Usability,"// Clear internal meta information which is going to be rebuilt in this; // function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx:3,Clear,Clear,3,core/base/src/TFileCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx,1,['Clear'],['Clear']
Usability,"// Clear interpreter environment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:3,Clear,Clear,3,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,2,['Clear'],['Clear']
Usability,// Clear irrelevant bits in the mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,2,['Clear'],['Clear']
Usability,// Clear kill and dead markers. LV will recompute them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['Clear'],['Clear']
Usability,// Clear kill flags between store and load.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['Clear'],['Clear']
Usability,"// Clear kill flags of the first stores register. Example:; // STRWui %w1, ...; // USE kill %w1 ; need to clear kill flag when moving STRWui downwards; // STRW %w0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"// Clear kill flags on store if moving upwards. Example:; // STRWui kill %w0, ...; // USE %w1; // STRWui kill %w1 ; need to clear kill flag when moving STRWui upwards; // We are about to move the store of w1, so its kill flag may become; // invalid; not the case for w0.; // Since w1 is used between the stores, the kill flag on w1 is cleared; // after merging.; // STPWi kill %w0, %w1, ...; // USE %w1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,3,"['Clear', 'clear']","['Clear', 'clear', 'cleared']"
Usability,// Clear kill flags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFoldOperands.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFoldOperands.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFoldOperands.cpp,1,['Clear'],['Clear']
Usability,// Clear kill markers that may have been invalidated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,1,['Clear'],['Clear']
Usability,"// Clear kills in the range where changes were made. This is conservative,; // but should be okay since kill markers are being phased out.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,1,['Clear'],['Clear']
Usability,// Clear known poison elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Clear'],['Clear']
Usability,"// Clear linkage for the template pattern.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp:3,Clear,Clear,3,interpreter/cling/lib/Interpreter/DeclExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.cpp,1,['Clear'],['Clear']
Usability,"// Clear logical's DLs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:3,Clear,Clear,3,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['Clear'],['Clear']
Usability,// Clear lowest set bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMatInt.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMatInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMatInt.cpp,2,['Clear'],['Clear']
Usability,// Clear lowest set bit;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstCombineIntrinsic.cpp,1,['Clear'],['Clear']
Usability,// Clear mask to all zeros and insert the shifted byte indices.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Clear'],['Clear']
Usability,"// Clear match to reduce lScope (kSTDBOTH -> kSTDOUT or kSTDERR)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:3,Clear,Clear,3,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,1,['Clear'],['Clear']
Usability,// Clear nested inlinees' samples for the flattened copy. These inlinees; // will have their own top-level entries after flattening.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h,1,['Clear'],['Clear']
Usability,// Clear non-distinct debug info that was possibly attached to the function; // due to an earlier declaration without the nodebug attribute,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,1,['Clear'],['Clear']
Usability,"// Clear offset if feature is disabled to that it is recalculated next time it is enabled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooAbsTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx,1,['Clear'],['Clear']
Usability,"// Clear offsets if feature is disabled so that it is recalculated next time it is enabled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx:3,Clear,Clear,3,roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,1,['Clear'],['Clear']
Usability,// Clear old contents if we went through relaxation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCCodeView.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/MCCodeView.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCCodeView.cpp,1,['Clear'],['Clear']
Usability,// Clear old instructions info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,1,['Clear'],['Clear']
Usability,// Clear out UsingBlocks. We will reconstruct it here if needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['Clear'],['Clear']
Usability,// Clear out all current operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZElimCompare.cpp,1,['Clear'],['Clear']
Usability,// Clear out all state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Float2Int.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Float2Int.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Float2Int.cpp,1,['Clear'],['Clear']
Usability,// Clear out all the SCC's node's low-link fields now that we're done; // using them as side-storage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['Clear'],['Clear']
Usability,// Clear out any cached analyses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ModuleInliner.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/ModuleInliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ModuleInliner.cpp,1,['Clear'],['Clear']
Usability,// Clear out any potential leftover.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['Clear'],['Clear']
Usability,// Clear out any split uses which have ended.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['Clear'],['Clear']
Usability,// Clear out any symbol information that was derived from the exports; // section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/WasmObjectFile.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Object/WasmObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/WasmObjectFile.cpp,1,['Clear'],['Clear']
Usability,// Clear out bindings that may overlap with this binding.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,1,['Clear'],['Clear']
Usability,// Clear out data that will be replaced by what is in the module file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['Clear'],['Clear']
Usability,// Clear out memory attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['Clear'],['Clear']
Usability,// Clear out new buckets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp,1,['Clear'],['Clear']
Usability,// Clear out old caches and data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp,1,['Clear'],['Clear']
Usability,"// Clear out the ""FirstInDeclGroup"" part in a declaration cursor, since we; // can't set consistently. For example, when visiting a DeclStmt we will set; // it but we don't set it on the result of clang_getCursorDefinition for; // a reference of the same declaration.; // FIXME: Setting ""FirstInDeclGroup"" in CXCursors is a hack that only works; // when visiting a DeclStmt currently, the AST should be enhanced to be able; // to provide that kind of info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['Clear'],['Clear']
Usability,// Clear out the FoldingSet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp,1,['Clear'],['Clear']
Usability,// Clear out the analysis manager if we're being destroyed -- it means we; // didn't even see an invalidate call when we got invalidated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,2,['Clear'],['Clear']
Usability,// Clear out the angle locations; they're used by the caller to indicate; // whether there are any protocol references.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['Clear'],['Clear']
Usability,// Clear out the availability.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['Clear'],['Clear']
Usability,// Clear out the bits in the wide element,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['Clear'],['Clear']
Usability,// Clear out the bits we are swapping.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['Clear'],['Clear']
Usability,// Clear out the current diagnostic object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,1,['Clear'],['Clear']
Usability,// Clear out the debug logging macro.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,1,['Clear'],['Clear']
Usability,// Clear out the default destination temporarily to allow accurate; // predecessor lists to be examined below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['Clear'],['Clear']
Usability,// Clear out the diagnostics state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,1,['Clear'],['Clear']
Usability,"// Clear out the list of suppressed diagnostics, so that we don't emit; // them again for this specialization. However, we don't obsolete this; // entry from the table, because we want to avoid ever emitting these; // diagnostics again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['Clear'],['Clear']
Usability,// Clear out the low link field as we won't need it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['Clear'],['Clear']
Usability,// Clear out the previous results.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,1,['Clear'],['Clear']
Usability,// Clear out the prior group's memory operand CC.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,1,['Clear'],['Clear']
Usability,"// Clear out the proxies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:3,Clear,Clear,3,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['Clear'],['Clear']
Usability,// Clear out the register class data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['Clear'],['Clear']
Usability,// Clear out the source line cache if it's already been computed.; // FIXME: Allow this to be incrementally extended.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp,1,['Clear'],['Clear']
Usability,"// Clear out the vector, but don't free the memory contents. This; // reduces malloc() traffic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/tools/libclang/CXCursor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.cpp,1,['Clear'],['Clear']
Usability,"// Clear pad if option ""same"" not given",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx:3,Clear,Clear,3,geom/geompainter/src/TGeoPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx,5,['Clear'],['Clear']
Usability,// Clear per function information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['Clear'],['Clear']
Usability,// Clear physical registers Def map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,1,['Clear'],['Clear']
Usability,"// Clear possible range attributes from previous fits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:3,Clear,Clear,3,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,2,['Clear'],['Clear']
Usability,// Clear previous results.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['Clear'],['Clear']
Usability,// Clear previous uses and defs of this register and its subregisters.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['Clear'],['Clear']
Usability,// Clear previously rendered template contents.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.js:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.js,1,['Clear'],['Clear']
Usability,// Clear prolog instructions after unwind info is emitted for all segments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,1,['Clear'],['Clear']
Usability,// Clear references from inactive renderItems in the list,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,Clear,Clear,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clear']
Usability,// Clear reloc bits,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp,1,['Clear'],['Clear']
Usability,// Clear reorder since it is going to be applied to the new mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Clear'],['Clear']
Usability,// Clear resources associated with a previous run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Sarif.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Basic/Sarif.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Sarif.cpp,1,['Clear'],['Clear']
Usability,// Clear result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Path.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/Path.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Path.cpp,1,['Clear'],['Clear']
Usability,// Clear second part as single,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,// Clear sign bit.; // TODO: Should this used S_BITSET0_*?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,1,['Clear'],['Clear']
Usability,// Clear sign bits based on the input sign mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h,1,['Clear'],['Clear']
Usability,// Clear state,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,1,['Clear'],['Clear']
Usability,// Clear state related to #pragma diagnostic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,1,['Clear'],['Clear']
Usability,// Clear temporary/results file lists.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Compilation.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Driver/Compilation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Compilation.cpp,1,['Clear'],['Clear']
Usability,"// Clear test bits we know must be false from the source value.; // fp_class (nnan x), qnan|snan|other -> fp_class (nnan x), other; // fp_class (ninf x), ninf|pinf|other -> fp_class (ninf x), other",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['Clear'],['Clear']
Usability,// Clear the ARM/Thumb or microMIPS indicator flag.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFObjectFile.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/Object/ELFObjectFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFObjectFile.h,1,['Clear'],['Clear']
Usability,"// Clear the ASTConsumer if it hasn't been already, in case it owns streams; // that must be closed before clearing output files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,2,"['Clear', 'clear']","['Clear', 'clearing']"
Usability,// Clear the AnalysisManager of old AnalysisDeclContexts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalysisConsumer.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalysisConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalysisConsumer.cpp,1,['Clear'],['Clear']
Usability,"// Clear the FP registers for v8.0-M, by copying over the content; // of LR. Uses R12 as a scratch register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,// Clear the INLCUDE variable for the external preprocessor,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/llvm-rc.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/tools/llvm-rc/llvm-rc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/llvm-rc.cpp,1,['Clear'],['Clear']
Usability,// Clear the IT state,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['Clear'],['Clear']
Usability,"// Clear the IndexedMemProfRecord which results in clearing/freeing its; // vectors of allocs and callsites. This is owned by the associated on-disk; // hash table, but unused after this point. See also the comment added to; // the client which constructs the on-disk hash table for this trait.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/MemProf.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ProfileData/MemProf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/MemProf.h,2,"['Clear', 'clear']","['Clear', 'clearing']"
Usability,// Clear the MSB so that UpperDiv wraps around.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,1,['Clear'],['Clear']
Usability,// Clear the NO_EXC bit and check remaining bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['Clear'],['Clear']
Usability,// Clear the Per-BB State.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,3,['Clear'],['Clear']
Usability,// Clear the RHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,1,['Clear'],['Clear']
Usability,"// Clear the RHS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:3,Clear,Clear,3,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['Clear'],['Clear']
Usability,"// Clear the StoreInstrCache, since we may invalidate it by erasing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['Clear'],['Clear']
Usability,// Clear the U bit if the N bit is set.; // Canonicalize illegal integer setcc's.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['Clear'],['Clear']
Usability,"// Clear the artificial NullStmt-s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp:3,Clear,Clear,3,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.cpp,1,['Clear'],['Clear']
Usability,"// Clear the assigned values and stack memory. We leave the registers marked; // as allocated so that future queries don't return the same registers, i.e.; // when i64 and f64 are both passed in GPRs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CallingConvLower.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/CallingConvLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CallingConvLower.cpp,1,['Clear'],['Clear']
Usability,"// Clear the asymmetric error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.cxx:3,Clear,Clear,3,roofit/roofitcore/src/RooAbsMinimizerFcn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.cxx,1,['Clear'],['Clear']
Usability,// Clear the attributes so nested loops do not inherit them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.cpp,1,['Clear'],['Clear']
Usability,"// Clear the bit kAutoDelete to specify that when reading; // the object should not be deleted before calling Streamer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:3,Clear,Clear,3,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['Clear'],['Clear']
Usability,// Clear the bits so we don't print any aliased names later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FloatingPointMode.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/FloatingPointMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FloatingPointMode.cpp,1,['Clear'],['Clear']
Usability,"// Clear the bits we'll be replacing, then OR with the smaller; // store, shifted appropriately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,1,['Clear'],['Clear']
Usability,// Clear the bits which were serialized from the flag's bitmask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOperand.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineOperand.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOperand.cpp,1,['Clear'],['Clear']
Usability,// Clear the block so we know it's been processed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,1,['Clear'],['Clear']
Usability,"// Clear the body and queue the function itself for deletion when we; // finish inlining and call graph updates.; // Note that after this point, it is an error to do anything other; // than use the callee's address or delete it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,1,['Clear'],['Clear']
Usability,"// Clear the body and queue the function itself for deletion when we; // finish inlining.; // Note that after this point, it is an error to do anything other; // than use the callee's address or delete it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ModuleInliner.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/ModuleInliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ModuleInliner.cpp,1,['Clear'],['Clear']
Usability,"// Clear the cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:3,Clear,Clear,3,proof/proofbench/src/TProofBenchDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx,1,['Clear'],['Clear']
Usability,// Clear the callback.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['Clear'],['Clear']
Usability,// Clear the checked bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,1,['Clear'],['Clear']
Usability,"// Clear the container",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TEmulatedCollectionProxy.h:3,Clear,Clear,3,io/io/inc/TEmulatedCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TEmulatedCollectionProxy.h,1,['Clear'],['Clear']
Usability,"// Clear the container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TGenCollectionProxy.h:3,Clear,Clear,3,io/io/inc/TGenCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TGenCollectionProxy.h,1,['Clear'],['Clear']
Usability,// Clear the corresponding mask elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Clear'],['Clear']
Usability,"// Clear the current active list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:3,Clear,Clear,3,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['Clear'],['Clear']
Usability,// Clear the current context for an unknown probe.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,1,['Clear'],['Clear']
Usability,"// Clear the current state. If we're at the end of the range, then this; // is the state we want to be in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SuffixTree.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/SuffixTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SuffixTree.cpp,1,['Clear'],['Clear']
Usability,// Clear the current token and advance to the first token in LineToks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmtAsm.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Parse/ParseStmtAsm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmtAsm.cpp,1,['Clear'],['Clear']
Usability,// Clear the debug location as it would just be confusing after hoisting.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,1,['Clear'],['Clear']
Usability,// Clear the dependency checks. We assume they are not needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['Clear'],['Clear']
Usability,// Clear the diagnostic and any notes following it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ARCMT.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/ARCMigrate/ARCMT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ARCMT.cpp,1,['Clear'],['Clear']
Usability,// Clear the dirty state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveInterval.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveInterval.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveInterval.cpp,1,['Clear'],['Clear']
Usability,"// Clear the emulated collection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TEmulatedCollectionProxy.cxx:3,Clear,Clear,3,io/io/src/TEmulatedCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TEmulatedCollectionProxy.cxx,1,['Clear'],['Clear']
Usability,// Clear the existing allocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocPBQP.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocPBQP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocPBQP.cpp,1,['Clear'],['Clear']
Usability,"// Clear the existing predicate when we're not in VPT Active state,; // otherwise we add to it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['Clear'],['Clear']
Usability,"// Clear the fat binary, it is already a dependence to an host; // action.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,2,['Clear'],['Clear']
Usability,// Clear the filename to make it clear we didn't read anything.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/gcov.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/tools/llvm-cov/gcov.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/gcov.cpp,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,"// Clear the files created by this run",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3,Clear,Clear,3,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,2,['Clear'],['Clear']
Usability,"// Clear the flag so restore below will ignore R for scope",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:3,Clear,Clear,3,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,1,['Clear'],['Clear']
Usability,// Clear the high bits of the compare operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['Clear'],['Clear']
Usability,"// Clear the inbounds attribute because the new index may be off-bound.; // e.g.,; //; // b = add i64 a, 5; // addr = gep inbounds float, float* p, i64 b; //; // is transformed to:; //; // addr2 = gep float, float* p, i64 a ; inbounds removed; // addr = gep inbounds float, float* addr2, i64 5; //; // If a is -4, although the old index b is in bounds, the new index a is; // off-bound. http://llvm.org/docs/LangRef.html#id181 says ""if the; // inbounds keyword is not present, the offsets are added to the base; // address with silently-wrapping two's complement arithmetic"".; // Therefore, the final code will be a semantically equivalent.; //; // TODO(jingyue): do some range analysis to keep as many inbounds as; // possible. GEPs with inbounds are more friendly to alias analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['Clear'],['Clear']
Usability,"// Clear the include so no one else uses it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Clear,Clear,3,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['Clear'],['Clear']
Usability,// Clear the insertion point to indicate we are in unreachable code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,2,['Clear'],['Clear']
Usability,// Clear the integer bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['Clear'],['Clear']
Usability,// Clear the internal vectors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReachingDefAnalysis.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/ReachingDefAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReachingDefAnalysis.cpp,1,['Clear'],['Clear']
Usability,// Clear the kill flag if SrcReg is killed between MI and the end of the; // block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['Clear'],['Clear']
Usability,"// Clear the kill flags of any register this instruction defines,; // since they may need to be live throughout the entire loop; // rather than just live for part of it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['Clear'],['Clear']
Usability,// Clear the kill flags on the address registers in the first instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,1,['Clear'],['Clear']
Usability,"// Clear the kill flags, as the cmp/bcc will no longer kill any operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBlockPlacement.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBlockPlacement.cpp,1,['Clear'],['Clear']
Usability,// Clear the lazy arguments bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Function.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/IR/Function.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Function.cpp,1,['Clear'],['Clear']
Usability,"// Clear the line table object corresponding to a compile unit for memory; // management purpose. When it's referred to again, it'll be re-populated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFContext.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFContext.h,1,['Clear'],['Clear']
Usability,"// Clear the list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Clear,Clear,3,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['Clear'],['Clear']
Usability,"// Clear the list of performances points",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:3,Clear,Clear,3,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,1,['Clear'],['Clear']
Usability,"// Clear the list of query results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:3,Clear,Clear,3,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,19,['Clear'],['Clear']
Usability,"// Clear the lists",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:3,Clear,Clear,3,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['Clear'],['Clear']
Usability,// Clear the lock file so that future invocations can make progress.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['Clear'],['Clear']
Usability,// Clear the mappings we created.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/XCOFFObjectWriter.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/XCOFFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/XCOFFObjectWriter.cpp,1,['Clear'],['Clear']
Usability,// Clear the old DomainValue so we won't try to swizzle instructions twice.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ExecutionDomainFix.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/ExecutionDomainFix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ExecutionDomainFix.cpp,1,['Clear'],['Clear']
Usability,// Clear the old Kill flags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,1,['Clear'],['Clear']
Usability,// Clear the old callback and inline flag to get back to as-if-null.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FunctionExtras.h,1,['Clear'],['Clear']
Usability,"// Clear the operands list, updating used nodes to remove this from their; // use list. Keep track of any operands that become dead as a result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['Clear'],['Clear']
Usability,// Clear the original call's CFI type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/KCFI.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/KCFI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/KCFI.cpp,1,['Clear'],['Clear']
Usability,// Clear the pair data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['Clear'],['Clear']
Usability,// Clear the pending elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,1,['Clear'],['Clear']
Usability,"// Clear the pixmap",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:3,Clear,Clear,3,core/winnt/inc/Win32Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h,1,['Clear'],['Clear']
Usability,// Clear the registers and flags by copying ClobberReg into them.; // (Baseline can't do a high register clear in one instruction).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,// Clear the registers using the CLRM instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['Clear'],['Clear']
Usability,// Clear the registration list and release the lock once we're done. Any; // pending updates from other threads will safely take effect after we return.; // That might not be what the user wants if they're measuring a compilation; // but it's their responsibility to prevent concurrent compilations to make; // a single compilation measurable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Statistic.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/Statistic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Statistic.cpp,1,['Clear'],['Clear']
Usability,// Clear the rest of the Quotient and Remainder.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['Clear'],['Clear']
Usability,// Clear the rest of the Quotient.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['Clear'],['Clear']
Usability,"// Clear the rest of the baskets. While it would be ideal to reuse these baskets; // for other baskets in the new cluster. It would require the function to go; // beyond its current scope. In the ideal case when each cluster only has 1 basket; // this will perform well",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:3,Clear,Clear,3,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['Clear'],['Clear']
Usability,"// Clear the rewriter cache, because values that are in the rewriter's cache; // can be deleted below, causing the AssertingVH in the cache to trigger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,2,['Clear'],['Clear']
Usability,"// Clear the rewriter cache, because values that are in the rewriter's cache; // can be deleted in the loop below, causing the AssertingVH in the cache to; // trigger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['Clear'],['Clear']
Usability,// Clear the scheduler's SUnit DAG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,1,['Clear'],['Clear']
Usability,// Clear the scope and variable information from the map which will not be; // valid after we have finished processing this routine. This also prepares; // the map for the subsequent routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['Clear'],['Clear']
Usability,// Clear the set of symbols that needs to be updated so the streamer can; // be reused without issues.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,1,['Clear'],['Clear']
Usability,// Clear the sign bit of the first operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,2,['Clear'],['Clear']
Usability,// Clear the stack slot for spill base pointer register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['Clear'],['Clear']
Usability,// Clear the state of all defined registers for instructions that we don't; // explicitly support.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMCTargetDesc.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMCTargetDesc.cpp,1,['Clear'],['Clear']
Usability,// Clear the statically implied flags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Clear'],['Clear']
Usability,// Clear the subloop exits to prevent quadratic memory usage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp,1,['Clear'],['Clear']
Usability,// Clear the successor list of BB to match updates applying to DTU later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['Clear'],['Clear']
Usability,// Clear the swifterror flag.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,1,['Clear'],['Clear']
Usability,// Clear the symbol expr pointers to indicate we have folded these; // operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp,1,['Clear'],['Clear']
Usability,// Clear the tune CPU.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['Clear'],['Clear']
Usability,// Clear the unused bits in the high words.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,1,['Clear'],['Clear']
Usability,// Clear the unused ones,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,1,['Clear'],['Clear']
Usability,"// Clear the unwind codes in the EpilogMap, so that they don't get output; // in ARM64EmitUnwindInfoForSegment().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,2,['Clear'],['Clear']
Usability,"// Clear the unwind codes in the EpilogMap, so that they don't get output; // in the logic below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,2,['Clear'],['Clear']
Usability,// Clear the upper bits of the rounding immediate so that the legacy; // intrinsic can't trigger the scaling behavior of VRNDSCALE.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['Clear'],['Clear']
Usability,// Clear the upper bits of the subvector and move it to its insert position.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Clear'],['Clear']
Usability,// Clear the upper bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,2,['Clear'],['Clear']
Usability,// Clear the value profile data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp,1,['Clear'],['Clear']
Usability,// Clear the vector again for the next iteration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp,1,['Clear'],['Clear']
Usability,// Clear these to restore the invariants expected by; // StartFunction/FinishFunction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,1,['Clear'],['Clear']
Usability,// Clear this ID from the explicit not-preserved set if present.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,1,['Clear'],['Clear']
Usability,// Clear this SCEVUnknown from various maps.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['Clear'],['Clear']
Usability,// Clear this here so we don't try to untrack in the destructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp,1,['Clear'],['Clear']
Usability,// Clear undef flag from remaining copy if needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,1,['Clear'],['Clear']
Usability,"// Clear undef flag, we'll re-add it later once we know which subregister; // Def is first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['Clear'],['Clear']
Usability,// Clear undef scalars.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['Clear'],['Clear']
Usability,// Clear unused bits of vcc,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,1,['Clear'],['Clear']
Usability,// Clear up the taint info from the state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['Clear'],['Clear']
Usability,// Clear upper byte.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,2,['Clear'],['Clear']
Usability,"// Clear upper part of LO, lower HI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,1,['Clear'],['Clear']
Usability,// Clear use list from the old vaddr holding a zero register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:3,Clear,Clear,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,1,['Clear'],['Clear']
Usability,"// Clear used space",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:3,Clear,Clear,3,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['Clear'],['Clear']
Usability,"// Clear used space entries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:3,Clear,Clear,3,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['Clear'],['Clear']
Usability,// Clear vector. The vector must be writable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h:3,Clear,Clear,3,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyUtil.h,1,['Clear'],['Clear']
Usability,"// Clear vectors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx:3,Clear,Clear,3,tmva/tmva/src/RuleCut.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx,2,['Clear'],['Clear']
Usability,"// Clear window",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:3,Clear,Clear,3,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,6,['Clear'],['Clear']
Usability,"// Clear, reset temporaries before next run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Sarif.cpp:3,Clear,Clear,3,interpreter/llvm-project/clang/lib/Basic/Sarif.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Sarif.cpp,1,['Clear'],['Clear']
Usability,// Clear.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h:3,Clear,Clear,3,interpreter/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h,1,['Clear'],['Clear']
Usability,"// ClearSysIncFiles(); <-- this one stays cached; // ClearUsers(); <-- this one stays cached",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3,Clear,ClearSysIncFiles,3,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,2,['Clear'],"['ClearSysIncFiles', 'ClearUsers']"
Usability,"// Cleared the DFS early, start another round.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:3,Clear,Cleared,3,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['Clear'],['Cleared']
Usability,// Clearing,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,Clear,Clearing,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Clear'],['Clearing']
Usability,// Clearing map before every BB because it can be used only for single BB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:3,Clear,Clearing,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['Clear'],['Clearing']
Usability,// Clears \ref SimilarityCandidates if it is already filled by a previous run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h:3,Clear,Clears,3,interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,1,['Clear'],['Clears']
Usability,"// Clears bin contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:3,Clear,Clears,3,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['Clear'],['Clears']
Usability,"// Clears the bin contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:3,Clear,Clears,3,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,2,['Clear'],['Clears']
Usability,"// Clears the content of all bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH2Poly.h:3,Clear,Clears,3,hist/hist/inc/TH2Poly.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH2Poly.h,1,['Clear'],['Clears']
Usability,"// Clears the statistics",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:3,Clear,Clears,3,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,1,['Clear'],['Clears']
Usability,// Clears this FormatStyleSet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:3,Clear,Clears,3,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['Clear'],['Clears']
Usability,// ClearsOverflowFlag is true for AND operation (no surprise).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:3,Clear,ClearsOverflowFlag,3,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['Clear'],['ClearsOverflowFlag']
Usability,// Clearwaterforest microarchitecture based processors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp:3,Clear,Clearwaterforest,3,interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp,1,['Clear'],['Clearwaterforest']
Usability,// Clearwaterforest:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:3,Clear,Clearwaterforest,3,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['Clear'],['Clearwaterforest']
Usability,"// Clone all uses and defs from BB to NewBB given a 1:1 map of all; // instructions and blocks cloned, and a map of MemoryPhi : Definition; // (MemoryAccess Phi or Def). VMap maps old instructions to cloned; // instructions and old blocks to cloned blocks. MPhiMap, is created in the; // caller of this private method, and maps existing MemoryPhis to new; // definitions that new MemoryAccesses must point to. These definitions may; // not necessarily be MemoryPhis themselves, they may be MemoryDefs. As such,; // the map is between MemoryPhis and MemoryAccesses, where the MemoryAccesses; // may be MemoryPhis or MemoryDefs and not MemoryUses.; // If CloneWasSimplified = true, the clone was exact. Otherwise, assume that; // the clone involved simplifications that may have: (1) turned a MemoryUse; // into an instruction that MemorySSA has no representation for, or (2) turned; // a MemoryDef into a MemoryUse or an instruction that MemorySSA has no; // representation for. No other cases are supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:747,simpl,simplifications,747,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['simpl'],['simplifications']
Usability,// Clone the loop including the preheader.; //; // FIXME: This does not currently preserve SimplifyLoop because the exit; // block is a join between the two loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopVersioning.cpp:91,Simpl,SimplifyLoop,91,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopVersioning.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopVersioning.cpp,1,['Simpl'],['SimplifyLoop']
Usability,"// Close the 3D scene if we opened it. This must be done after modified; // flag is cleared, as some viewers will invoke another paint by marking pad modified again",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:84,clear,cleared,84,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['clear'],['cleared']
Usability,"// CmpInstr is either 'ADDS %vreg, 0' or 'SUBS %vreg, 0', and MI is either; // '%vreg = add ...' or '%vreg = sub ...'.; // Condition flag V is used to indicate signed overflow.; // 1) MI and CmpInstr set N and V to the same value.; // 2) If MI is add/sub with no-signed-wrap, it produces a poison value when; // signed overflow occurs, so CmpInstr could still be simplified away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:363,simpl,simplified,363,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['simpl'],['simplified']
Usability,"// Cmpxchg instructions are often used with a subsequent comparison to; // determine whether it succeeded. We can exploit existing control-flow in; // ldrex/strex loops to simplify this, but it needs tidying up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp:172,simpl,simplify,172,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,2,['simpl'],['simplify']
Usability,// Code autogenerated by Tablegen will handle all the simple builtins.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:54,simpl,simple,54,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['simpl'],['simple']
Usability,"// Collect cast instructions and the minimum width used by the recurrence.; // If the starting value is not the same as the phi node and the computed; // recurrence type is equal to the recurrence type, the recurrence expression; // will be represented in a narrower or wider type. If there are any cast; // instructions that will be unnecessary, collect them in CastsFromRecurTy.; // Note that the 'and' instruction was already included in this list.; //; // TODO: A better way to represent this may be to tag in some way all the; // instructions that are a part of the reduction. The vectorizer cost; // model could then apply the recurrence type to these instructions,; // without needing a white list of instructions to ignore.; // This may also be useful for the inloop reductions, if it can be; // kept simple enough.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:809,simpl,simple,809,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,1,['simpl'],['simple']
Usability,// Collect for each module the list of function it defines (GUID -> Summary).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:60,GUID,GUID,60,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,6,['GUID'],['GUID']
Usability,// Collect for each module the list of function it defines (GUID ->; // Summary).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:60,GUID,GUID,60,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,1,['GUID'],['GUID']
Usability,// Collect for the given module the list of function it defines; // (GUID -> Summary).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp:69,GUID,GUID,69,interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,1,['GUID'],['GUID']
Usability,"// Collect loads and instruction that may write to memory. For now we only; // record loads which are simple, sign-extended and have a single user.; // TODO: Allow zero-extended loads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp:102,simpl,simple,102,interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp,1,['simpl'],['simple']
Usability,// Collect operands that need to be cleaned up because the registers no longer; // exist (in COPYs and debug instructions). We cannot delete instructions or; // clear operands while traversing register uses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:161,clear,clear,161,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['clear'],['clear']
Usability,// Collect potential resume instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:21,resume,resume,21,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['resume'],['resume']
Usability,"// Collect the code between loop headers. These may contain SSA definitions; // that are used in the loop nest body. To be usable with in the innermost; // body, these BasicBlocks will be sunk into the loop nest body. That is,; // these instructions may be executed more often than before the tiling.; // TODO: It would be sufficient to only sink them into body of the; // corresponding tile loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:123,usab,usable,123,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['usab'],['usable']
Usability,// Collect the known bits that are shared by every demanded element.; // TODO: Call SimplifyDemandedBits for non-constant demanded elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:84,Simpl,SimplifyDemandedBits,84,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['Simpl'],['SimplifyDemandedBits']
Usability,// Collect the list of functions this module defines.; // GUID -> Summary,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:58,GUID,GUID,58,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,1,['GUID'],['GUID']
Usability,"// Collects completion-relevant information about a concept-constrainted type T.; // In particular, examines the constraint expressions to find members of T.; //; // The design is very simple: we walk down each constraint looking for; // expressions of the form T.foo().; // If we're extra lucky, the return type is specified.; // We don't do any clever handling of && or || in constraint expressions, we; // take members from both branches.; //; // For example, given:; // template <class T> concept X = requires (T t, string& s) { t.print(s); };; // template <X U> void foo(U u) { u.^ }; // We want to suggest the inferred member function 'print(string)'.; // We see that u has type U, so X<U> holds.; // X<U> requires t.print(s) to be valid, where t has type U (substituted for T).; // By looking at the CallExpr we find the signature of print().; //; // While we tend to know in advance which kind of members (access via . -> ::); // we want, it's simpler just to gather them all and post-filter.; //; // FIXME: some of this machinery could be used for non-concept type-parms too,; // enabling completion for type parameters based on other uses of that param.; //; // FIXME: there are other cases where a type can be constrained by a concept,; // e.g. inside `if constexpr(ConceptSpecializationExpr) { ... }`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:185,simpl,simple,185,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,2,['simpl'],"['simple', 'simpler']"
Usability,"// Combine load followed by zero- or sign-extend.; // ldrb r1, [r0] ldrb r1, [r0]; // uxtb r2, r1 =>; // mov r3, r2 mov r3, r1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:86,ux,uxtb,86,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,1,['ux'],['uxtb']
Usability,"// Combine the access kind, which results in a bitwise union.; // If there is more than one range, then this must be a MAY.; // If we combine a may and a must access we clear the must bit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:169,clear,clear,169,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['clear'],['clear']
Usability,"// Commute binary operators, to canonicalize the order of their operands.; // This can potentially expose more CSE opportunities, and makes writing other; // transformations simpler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:174,simpl,simpler,174,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,1,['simpl'],['simpler']
Usability,"// Comparisons are canonicalized so that the RHS operand is simpler than the; // LHS one, the extreme case being when RHS is an immediate. However, AArch64; // can fold some shift+extend operations on the RHS operand, so swap the; // operands if that can be done.; //; // For example:; // lsl w13, w11, #1; // cmp w13, w12; // can be turned into:; // cmp w12, w11, lsl #1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:60,simpl,simpler,60,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simpler']
Usability,"// Compute and save the bit offset to the current position, which will be; // patched when we emit the index later. We can simply subtract the 64-bit; // fixed size from the current bit number to get the location to backpatch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:123,simpl,simply,123,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['simpl'],['simply']
Usability,"// Compute and save the bit offset to the placeholder, which will be; // patched when the real VST is written. We can simply subtract the 32-bit; // fixed size from the current bit number to get the location to backpatch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:118,simpl,simply,118,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['simpl'],['simply']
Usability,"// Compute numbering as follows:; // Grab an iterator to the start of the index list.; // Iterate over all MBBs, and within each MBB all MIs, keeping the MI; // iterator in lock-step (though skipping it over indexes which have; // null pointers in the instruction field).; // At each iteration assert that the instruction pointed to in the index; // is the same one pointed to by the MI iterator. This; // FIXME: This can be simplified. The mi2iMap_, Idx2MBBMap, etc. should; // only need to be set up once after the first numbering is computed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SlotIndexes.cpp:425,simpl,simplified,425,interpreter/llvm-project/llvm/lib/CodeGen/SlotIndexes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SlotIndexes.cpp,1,['simpl'],['simplified']
Usability,// Compute resources from trace above. The top block is simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:56,simpl,simple,56,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['simpl'],['simple']
Usability,"// Compute the 'InlineCost' of block BB. InlineCost is a proxy used to; // approximate both the size and runtime cost (Note that in the current; // inline cost analysis, there is no clear distinction there either).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:182,clear,clear,182,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,1,['clear'],['clear']
Usability,"// Compute the Known Zero for the candidate of the first operand.; // This allows to catch more general case than just looking for; // AND with imm. Indeed, simplify-demanded-bits may have removed; // the AND instruction because it proves it was useless.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:157,simpl,simplify-demanded-bits,157,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['simpl'],['simplify-demanded-bits']
Usability,// Compute the Known bits to simplify things downstream.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp:29,simpl,simplify,29,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,2,['simpl'],['simplify']
Usability,"// Compute the PhysRegs used by the given pattern, and check that; // the mapping from the src to dst patterns is simple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/FastISelEmitter.cpp:114,simpl,simple,114,interpreter/llvm-project/llvm/utils/TableGen/FastISelEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/FastISelEmitter.cpp,1,['simpl'],['simple']
Usability,// Compute the bit cleared value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:19,clear,cleared,19,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['clear'],['cleared']
Usability,"// Compute the other pointer, folding as much as possible to produce; // a single, simple GEP in most cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:83,simpl,simple,83,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['simpl'],['simple']
Usability,"// Computes the upper and lower bounds for level K; // using the * direction. Records them in Bound.; // Wolfe gives the equations; //; // LB^*_k = (A^-_k - B^+_k)(U_k - L_k) + (A_k - B_k)L_k; // UB^*_k = (A^+_k - B^-_k)(U_k - L_k) + (A_k - B_k)L_k; //; // Since we normalize loops, we can simplify these equations to; //; // LB^*_k = (A^-_k - B^+_k)U_k; // UB^*_k = (A^+_k - B^-_k)U_k; //; // We must be careful to handle the case where the upper bound is unknown.; // Note that the lower bound is always <= 0; // and the upper bound is always >= 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:290,simpl,simplify,290,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['simpl'],['simplify']
Usability,"// Computes the upper and lower bounds for level K; // using the < direction. Records them in Bound.; // Wolfe gives the equations; //; // LB^<_k = (A^-_k - B_k)^- (U_k - L_k - N_k) + (A_k - B_k)L_k - B_k N_k; // UB^<_k = (A^+_k - B_k)^+ (U_k - L_k - N_k) + (A_k - B_k)L_k - B_k N_k; //; // Since we normalize loops, we can simplify these equations to; //; // LB^<_k = (A^-_k - B_k)^- (U_k - 1) - B_k; // UB^<_k = (A^+_k - B_k)^+ (U_k - 1) - B_k; //; // We must be careful to handle the case where the upper bound is unknown.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:324,simpl,simplify,324,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['simpl'],['simplify']
Usability,"// Computes the upper and lower bounds for level K; // using the = direction. Records them in Bound.; // Wolfe gives the equations; //; // LB^=_k = (A_k - B_k)^- (U_k - L_k) + (A_k - B_k)L_k; // UB^=_k = (A_k - B_k)^+ (U_k - L_k) + (A_k - B_k)L_k; //; // Since we normalize loops, we can simplify these equations to; //; // LB^=_k = (A_k - B_k)^- U_k; // UB^=_k = (A_k - B_k)^+ U_k; //; // We must be careful to handle the case where the upper bound is unknown.; // Note that the lower bound is always <= 0; // and the upper bound is always >= 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:288,simpl,simplify,288,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['simpl'],['simplify']
Usability,"// Computes the upper and lower bounds for level K; // using the > direction. Records them in Bound.; // Wolfe gives the equations; //; // LB^>_k = (A_k - B^+_k)^- (U_k - L_k - N_k) + (A_k - B_k)L_k + A_k N_k; // UB^>_k = (A_k - B^-_k)^+ (U_k - L_k - N_k) + (A_k - B_k)L_k + A_k N_k; //; // Since we normalize loops, we can simplify these equations to; //; // LB^>_k = (A_k - B^+_k)^- (U_k - 1) + A_k; // UB^>_k = (A_k - B^-_k)^+ (U_k - 1) + A_k; //; // We must be careful to handle the case where the upper bound is unknown.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:324,simpl,simplify,324,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['simpl'],['simplify']
Usability,"// Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PointSetInterval.h:47,simpl,simple,47,roofit/roostats/inc/RooStats/PointSetInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PointSetInterval.h,2,['simpl'],['simple']
Usability,// Condition is either all 1s or all 0s. SI can be simplified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:51,simpl,simplified,51,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simplified']
Usability,// Conditions in an assume trivially simplify to true. Skip uses; // in assume calls to not destroy the available information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:37,simpl,simplify,37,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['simpl'],['simplify']
Usability,"// Congruence classes represent the set of expressions/instructions; // that are all the same *during some scope in the function*.; // That is, because of the way we perform equality propagation, and; // because of memory value numbering, it is not correct to assume; // you can willy-nilly replace any member with any other at any; // point in the function.; //; // For any Value in the Member set, it is valid to replace any dominated member; // with that Value.; //; // Every congruence class has a leader, and the leader is used to symbolize; // instructions in a canonical way (IE every operand of an instruction that is a; // member of the same congruence class will always be replaced with leader; // during symbolization). To simplify symbolization, we keep the leader as a; // constant if class can be proved to be a constant value. Otherwise, the; // leader is the member of the value set with the smallest DFS number. Each; // congruence class also has a defining expression, though the expression may be; // null. If it exists, it can be used for forward propagation and reassociation; // of values.; // For memory, we also track a representative MemoryAccess, and a set of memory; // members for MemoryPhis (which have no real instructions). Note that for; // memory, it seems tempting to try to split the memory members into a; // MemoryCongruenceClass or something. Unfortunately, this does not work; // easily. The value numbering of a given memory expression depends on the; // leader of the memory congruence class, and the leader of memory congruence; // class depends on the value numbering of a given memory expression. This; // leads to wasted propagation, and in some cases, missed optimization. For; // example: If we had value numbered two stores together before, but now do not,; // we move them to a new value congruence class. This in turn will move at one; // of the memorydefs to a new memory congruence class. Which in turn, affects; // the value numbering of the stores",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:734,simpl,simplify,734,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['simpl'],['simplify']
Usability,// Consecutive loads can contain UNDEFS but not ZERO elements.; // Consecutive loads with UNDEFs and ZEROs elements require a; // an additional shuffle stage to clear the ZERO elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:161,clear,clear,161,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['clear'],['clear']
Usability,// Conservatively clear all optional flags since they may not be; // preserved by the reassociation. Reset nsw/nuw based on the above; // analysis.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:18,clear,clear,18,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['clear'],['clear']
Usability,// Conservatively clear any kill flags on uses of sunk instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:18,clear,clear,18,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['clear'],['clear']
Usability,"// Conservatively clear the optional flags, since they may not be; // preserved by the reassociation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:18,clear,clear,18,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,4,['clear'],['clear']
Usability,"// Conservatively, clear MyStates for all known pointers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,2,['clear'],['clear']
Usability,"// Conservatively, clear any kill flags, since it's possible that they are no; // longer correct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['clear'],['clear']
Usability,"// Conservatively, clear any kill flags, since it's possible that they are no; // longer correct.; // Note that we have to clear the kill flags for any register this instruction; // uses as we may sink over another instruction which currently kills the; // used registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,2,['clear'],['clear']
Usability,"// Consider case like:; // %0 = call i8 @llvm.coro.suspend(...); // switch i8 %0, label %suspend [i8 0, label %resume; // i8 1, label %cleanup]; // and collect the SwitchInsts which are used by escape analysis later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp:111,resume,resume,111,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp,1,['resume'],['resume']
Usability,"// Consider forming ""(A op C) op' B"".; // If ""A op C"" simplifies then it can be formed with no cost.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:54,simpl,simplifies,54,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simplifies']
Usability,"// Consider forming ""A op' (B op D)"".; // If ""B op D"" simplifies then it can be formed with no cost.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:54,simpl,simplifies,54,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simplifies']
Usability,"// Consider only the fields in declaration order, searched depth-first. We; // don't care about the active member of the union, as all we are doing is; // looking for a valid name. We also don't check bases, due to guidance from; // the Itanium ABI folks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:215,guid,guidance,215,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['guid'],['guidance']
Usability,"// Consider:; //; // PredBB:; // %var = phi i32* [ null, %bb1 ], [ @a, %bb2 ]; // %tobool = icmp eq i32 %cond, 0; // br i1 %tobool, label %BB, label ...; //; // BB:; // %cmp = icmp eq i32* %var, null; // br i1 %cmp, label ..., label ...; //; // We don't know the value of %var at BB even if we know which incoming edge; // we take to BB. However, once we duplicate PredBB for each of its incoming; // edges (say, PredBB1 and PredBB2), we know the value of %var in each copy of; // PredBB. Then we can thread edges PredBB1->BB and PredBB2->BB through BB.; // Require that BB end with a Branch for simplicity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:596,simpl,simplicity,596,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['simpl'],['simplicity']
Usability,"// Considering forming a binary search, we should find the number of nodes; // which is same as the number of comparisons when lowered. For a given; // number of clusters, n, we can define a recursive function, f(n), to find; // the number of nodes in the tree. The recursion is :; // f(n) = 1 + f(n/2) + f (n - n/2), when n > 3,; // and f(n) = n, when n <= 3.; // This will lead a binary tree where the leaf should be either f(2) or f(3); // when n > 3. So, the number of comparisons from leaves should be n, while; // the number of non-leaf should be :; // 2^(log2(n) - 1) - 1; // = 2^log2(n) * 2^-1 - 1; // = n / 2 - 1.; // Considering comparisons from leaf and non-leaf nodes, we can estimate the; // number of comparisons in a simple closed form :; // n + n / 2 - 1 = n * 3 / 2 - 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:732,simpl,simple,732,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simple']
Usability,// Constant Integers are simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp:25,simpl,simple,25,interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,1,['simpl'],['simple']
Usability,"// Constants to clear the upper part of the word.; // Notice that we can also use SHL+SHR, but using a constant is slightly; // faster on x86.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp:16,clear,clear,16,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,1,['clear'],['clear']
Usability,// Constraints may have changed since the creation of a bound SVal. Check if; // the values can be simplified based on those new constraints.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp:99,simpl,simplified,99,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,1,['simpl'],['simplified']
Usability,// Construct one TokenInfo per character in a flat array.; // This is inefficient (chars in a token all have the same info) but simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.cpp:128,simpl,simple,128,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.cpp,1,['simpl'],['simple']
Usability,// ConstructionContextItem should be simple enough so that it was easy to; // re-construct it from the AST node it captures. For that reason we provide; // simple implicit conversions from all sorts of supported AST nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:37,simpl,simple,37,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,2,['simpl'],['simple']
Usability,"// Constructor for TMinuitMinimier class via an enumeration specifying the minimization; // algorithm type. Supported types are : kMigrad, kSimplex, kCombined (a combined; // Migrad + Simplex minimization) and kMigradImproved (a Migrad mininimization folloed by an; // improved search for global minima). The default type is Migrad (kMigrad).; // initialize if npar is given",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuitMinimizer.cxx:184,Simpl,Simplex,184,math/minuit/src/TMinuitMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuitMinimizer.cxx,1,['Simpl'],['Simplex']
Usability,"// Consume a sequence of spelled tokens that didn't expand to anything.; // In the simplest case, skips spelled tokens until finding one that produced; // the NextExpanded token, and creates an empty mapping for them.; // If Drain is provided, skips remaining tokens from that file instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp:83,simpl,simplest,83,interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp,1,['simpl'],['simplest']
Usability,// Consume nested loop. Clear the entire remaining loop stack because a; // fully unrolled loop is non-transformable. For partial unrolling the; // generated outer loop is pushed back to the stack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:24,Clear,Clear,24,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['Clear'],['Clear']
Usability,// Consume tokens until we find a '>'.; // FIXME: A header-name could be formed starting or ending with an; // alternative token. It's not clear whether that's ill-formed in all; // cases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp:139,clear,clear,139,interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,1,['clear'],['clear']
Usability,// Contains literals of the simplified clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:28,simpl,simplified,28,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,1,['simpl'],['simplified']
Usability,"// Convenience function we can use to check if a value is present. Because of; // simplify_type, we have to call it on the simplified type for now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:123,simpl,simplified,123,interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,1,['simpl'],['simplified']
Usability,// Convert (A u> B) to (A u< B) to simplify pattern matching.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:35,simpl,simplify,35,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['simpl'],['simplify']
Usability,"// Convert BUILD_VECTOR where all elements but the lowest are undef into; // SCALAR_TO_VECTOR, except for when we have a single-element constant vector; // as SimplifyDemandedBits will just turn that back into BUILD_VECTOR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:159,Simpl,SimplifyDemandedBits,159,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['Simpl'],['SimplifyDemandedBits']
Usability,// Convert SRSHL into the simpler LSL intrinsic when fed by an ABS intrinsic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:26,simpl,simpler,26,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['simpl'],['simpler']
Usability,// Convert a sign-bit test of an FP value into a cast and integer compare.; // TODO: Simplify if the copysign constant is 0.0 or NaN.; // TODO: Handle non-zero compare constants.; // TODO: Handle other predicates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:85,Simpl,Simplify,85,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['Simpl'],['Simplify']
Usability,// Convert array arguments to pointer to simplify type lookup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:41,simpl,simplify,41,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['simpl'],['simplify']
Usability,// Convert declared constructors into deduction guide templates.; // FIXME: Skip constructors for which deduction must necessarily fail (those; // for which some class template parameter without a default argument never; // appears in a deduced context).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:48,guid,guide,48,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['guid'],['guide']
Usability,// Convert register to the 32-bit version. Both 'movl' and 'xorl' clear the; // upper bits of a 64-bit register automagically.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:66,clear,clear,66,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['clear'],['clear']
Usability,"// Convert t2DoLoopStart to t2DoLoopStartTP if the loop contains VCTP; // instructions. This keeps the VCTP count reg operand on the t2DoLoopStartTP; // instruction, making the backend ARMLowOverheadLoops passes job of finding the; // VCTP operand much simpler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVETPAndVPTOptimisationsPass.cpp:253,simpl,simpler,253,interpreter/llvm-project/llvm/lib/Target/ARM/MVETPAndVPTOptimisationsPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVETPAndVPTOptimisationsPass.cpp,1,['simpl'],['simpler']
Usability,"// Convert the PreservedSymbols map from ""Name"" based to ""GUID"" based.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:58,GUID,GUID,58,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,1,['GUID'],['GUID']
Usability,"// Convert the current CC value into an integer that is 0 if CC == 0,; // greater than zero if CC == 1 and less than zero if CC >= 2.; // The sequence starts with IPM, which puts CC into bits 29 and 28; // of an integer and clears bits 30 and 31.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZSelectionDAGInfo.cpp:224,clear,clears,224,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZSelectionDAGInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZSelectionDAGInfo.cpp,1,['clear'],['clears']
Usability,// Convert the preserved symbols set from string to GUID,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:52,GUID,GUID,52,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,5,['GUID'],['GUID']
Usability,"// Convert the preserved symbols set from string to GUID, this is needed for; // computing the caching hash and the internalization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:52,GUID,GUID,52,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,1,['GUID'],['GUID']
Usability,"// Convert to non-adjacent form (NAF) signed-digit representation.; // NAF is a signed-digit form where no adjacent digits are non-zero. It is the; // minimal Hamming weight representation of a number (on average 1/3 of the; // digits will be non-zero vs 1/2 for regular binary representation). And as; // the non-zero digits will be the only digits contributing to the instruction; // count, this is desirable. The next loop converts it to NAF (following the; // approach in 'Guide to Elliptic Curve Cryptography' [ISBN: 038795273X]) by; // choosing the non-zero coefficients such that the resulting quotient is; // divisible by 2 which will cause the next coefficient to be zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.cpp:477,Guid,Guide,477,interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.cpp,1,['Guid'],['Guide']
Usability,"// Copied from NewGVN.cpp; // This function provides global ranking of operations so that we can place; // them in a canonical order. Note that rank alone is not necessarily enough; // for a complete ordering, as constants all have the same rank. However,; // generally, we will simplify an operation with all constants so that it; // doesn't matter what order they appear in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:279,simpl,simplify,279,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,1,['simpl'],['simplify']
Usability,// Copy and clear the list of instructions we need to explore from. It is; // refilled with instructions the next update has to look at.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:12,clear,clear,12,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['clear'],['clear']
Usability,// Copy elision failed. Revert the changes and proceed as if we have; // a simple temporary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp:75,simpl,simple,75,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineCXX.cpp,1,['simpl'],['simple']
Usability,// Copy the bits of the significand. We need to clear out the exponent and; // sign bit in the last word.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:48,clear,clear,48,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['clear'],['clear']
Usability,"// CopyToReg nodes don't support FrameIndex operands. Other targets select; // the FI to some LEA-like instruction, but since we don't have that, we; // need to insert some kind of instruction that can take an FI operand and; // produces a value usable by CopyToReg (i.e. in a vreg). So insert a dummy; // local.copy between Op and its FI operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:246,usab,usable,246,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['usab'],['usable']
Usability,// Core algorithm state:; // BlockState - Each block is either:; // - PASS_THROUGH: There are neither YMM/ZMM dirtying instructions nor; // vzeroupper instructions in this block.; // - EXITS_CLEAN: There is (or will be) a vzeroupper instruction in this; // block that will ensure that YMM/ZMM is clean on exit.; // - EXITS_DIRTY: An instruction in the block dirties YMM/ZMM and no; // subsequent vzeroupper in the block clears it.; //; // AddedToDirtySuccessors - This flag is raised when a block is added to the; // DirtySuccessors list to ensure that it's not; // added multiple times.; //; // FirstUnguardedCall - Records the location of the first unguarded call in; // each basic block that may need to be guarded by a; // vzeroupper. We won't know whether it actually needs; // to be guarded until we discover a predecessor that; // is DIRTY_OUT.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86VZeroUpper.cpp:420,clear,clears,420,interpreter/llvm-project/llvm/lib/Target/X86/X86VZeroUpper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86VZeroUpper.cpp,1,['clear'],['clears']
Usability,// Couldn't simplify - canonicalize constant to the RHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:12,simpl,simplify,12,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['simpl'],['simplify']
Usability,// Create a bit mask to clear the high bits beyond IterCount.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp:24,clear,clear,24,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,1,['clear'],['clear']
Usability,"// Create a constant array referring to resume/destroy/clone functions pointed; // by the last argument of @llvm.coro.info, so that CoroElide pass can; // determined correct function to call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:40,resume,resume,40,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['resume'],['resume']
Usability,"// Create a global constant array containing pointers to functions provided and; // set Info parameter of CoroBegin to point at this constant. Example:; //; // @f.resumers = internal constant [2 x void(%f.frame*)*]; // [void(%f.frame*)* @f.resume, void(%f.frame*)* @f.destroy]; // define void @f() {; // ...; // call i8* @llvm.coro.begin(i8* null, i32 0, i8* null,; // i8* bitcast([2 x void(%f.frame*)*] * @f.resumers to i8*)); //; // Assumes that all the functions have the same signature.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:163,resume,resumers,163,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,3,['resume'],"['resume', 'resumers']"
Usability,// Create a mapping from virtual address to symbol GUID and the other way; // around.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.cpp:51,GUID,GUID,51,interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.cpp,1,['GUID'],['GUID']
Usability,// Create a new simpler BUILD_VECTOR sequence which other optimizations can; // turn into a single shuffle instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:16,simpl,simpler,16,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simpler']
Usability,// Create a new wrapper that simply contains `unreachable`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp:29,simpl,simply,29,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,1,['simpl'],['simply']
Usability,// Create a pointer record for a non-simple type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeTypePointer.h:37,simpl,simple,37,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeTypePointer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeTypePointer.h,4,['simpl'],['simple']
Usability,// Create a pointer record for a simple type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeTypePointer.h:33,simpl,simple,33,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeTypePointer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeTypePointer.h,1,['simpl'],['simple']
Usability,"// Create a resume clone by cloning the body of the original function, setting; // new entry block and replacing coro.suspend an appropriate value to force; // resume or cleanup pass for every suspend point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:12,resume,resume,12,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,2,['resume'],['resume']
Usability,"// Create a simple payload",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:12,simpl,simple,12,roofit/roofitcore/test/testNaNPacker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx,3,['simpl'],['simple']
Usability,"// Create a template instantiation record to track the ""instantiation"" of; // constructors into deduction guides.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:106,guid,guides,106,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['guid'],['guides']
Usability,// Create all simple and struct types exposed by the runtime and remember; // the llvm::PointerTypes of them for easy access later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:14,simpl,simple,14,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['simpl'],['simple']
Usability,"// Create an array of all MFI objects. We won't need all of these; // objects, but we're going to create a full array of them to make; // it easier to index into when we're counting ""uses"" down below.; // We want to be able to easily/cheaply access an object by simply; // indexing into it, instead of having to search for it every time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:262,simpl,simply,262,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['simpl'],['simply']
Usability,// Create an entry block for a resume function with a switch that will jump to; // suspend points.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:31,resume,resume,31,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['resume'],['resume']
Usability,// Create an invalid ObjCCategoryDecl to serve as context for; // the enclosing method declarations. We mark the decl invalid; // to make it clear that this isn't a valid AST.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:141,clear,clear,141,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['clear'],['clear']
Usability,"// Create dummy fragments to eliminate any empty sections, this simplifies; // layout.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCAssembler.cpp:64,simpl,simplifies,64,interpreter/llvm-project/llvm/lib/MC/MCAssembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCAssembler.cpp,1,['simpl'],['simplifies']
Usability,// Create expression will take care of simplifyCmpInst,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:39,simpl,simplifyCmpInst,39,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['simpl'],['simplifyCmpInst']
Usability,"// Create feedback lists, if required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:10,feedback,feedback,10,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['feedback'],['feedback']
Usability,// Create induction resume values for both widened pointer and; // integer/fp inductions and update the start value of the induction; // recipes to use the resume value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:20,resume,resume,20,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,2,['resume'],['resume']
Usability,"// Creates a call to llvm.coro.subfn.addr to obtain a resume function address.; // It generates the following:; //; // call ptr @llvm.coro.subfn.addr(ptr %Arg, i8 %index)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/Coroutines.cpp:54,resume,resume,54,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/Coroutines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/Coroutines.cpp,1,['resume'],['resume']
Usability,"// Current rematerialization algorithm is very simple: we rematerialize; // immediately before EVERY use, even if there are several uses in same; // block or if use is local to Cand Def. The reason is that this allows; // us to avoid recomputing liveness without complicated analysis:; // - If we did not eliminate all uses of original Candidate, we do not; // know exaclty in what BBs it is still live.; // - If we rematerialize once per BB, we need to find proper insertion; // place (first use in block, but after Def) and analyze if there is; // statepoint between uses in the block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:47,simpl,simple,47,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,1,['simpl'],['simple']
Usability,"// Currently this only tries to ensure we don't undo the GEP splits done by; // CodeGenPrepare when shouldConsiderGEPOffsetSplit is true. To ensure this,; // we check if the following transformation would be problematic:; // (load/store (add, (add, x, offset1), offset2)) ->; // (load/store (add, x, offset1+offset2)).; // (load/store (add, (add, x, y), offset2)) ->; // (load/store (add, (add, x, offset2), y)).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:48,undo,undo,48,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['undo'],['undo']
Usability,"// Currently we only recognize the simple pattern:; //; // test %reg, %reg; // je %label; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:35,simpl,simple,35,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['simpl'],['simple']
Usability,"// Currently, the only simplification we do is switch-lowering-specific.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:23,simpl,simplification,23,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['simpl'],['simplification']
Usability,"// Currently, these represent both throughput and codesize costs; // for the respective intrinsics. The costs in this table are simply; // instruction counts with the following adjustments made:; // * One vsetvli is considered free.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp:128,simpl,simply,128,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,1,['simpl'],['simply']
Usability,"// Currently, to simplify the implementation, the Loop induction variable must; // start at zero and increment with a step size of one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,1,['simpl'],['simplify']
Usability,"// Currently, we may need to produce one shuffle per input, and blend results.; // It is possible that the shuffle for one of the inputs is already a no-op.; // See if we can simplify non-no-op shuffles into broadcasts,; // which we consider to be strictly better than an arbitrary shuffle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:175,simpl,simplify,175,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplify']
Usability,"// Custom lower unaligned loads.; // Also, for both loads and stores, verify the alignment of the address; // in case it is a compile-time constant. This is a usability feature to; // provide a meaningful error message to users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:159,usab,usability,159,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,1,['usab'],['usability']
Usability,// Custom simplification helper routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:10,simpl,simplification,10,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simplification']
Usability,// Custom-lower insert/extract operations to simplify patterns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:45,simpl,simplify,45,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,2,['simpl'],['simplify']
Usability,"// D4. [Multiply and subtract.] Replace (u[j+n]u[j+n-1]...u[j]) with; // (u[j+n]u[j+n-1]..u[j]) - qp * (v[n-1]...v[1]v[0]). This computation; // consists of a simple multiplication by a one-place number, combined with; // a subtraction.; // The digits (u[j+n]...u[j]) should be kept positive; if the result of; // this step is actually negative, (u[j+n]...u[j]) should be left as the; // true value plus b**(n+1), namely as the b's complement of; // the true value, and a ""borrow"" to the left should be remembered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:159,simpl,simple,159,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['simpl'],['simple']
Usability,"// DEFLATE is a complex format; to read this code, you should probably check the RFC first:; // https://tools.ietf.org/html/rfc1951; // You may also wish to take a look at the guide I made about this program:; // https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad; // Much of the following code is similar to that of UZIP.js:; // https://github.com/photopea/UZIP.js; // Many optimizations have been made, so the bundle size is ultimately smaller but performance is similar.; // Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint; // is better for memory in most engines (I *think*).; // Mediocre shim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:176,guid,guide,176,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['guid'],['guide']
Usability,"// Darwin passes an undocumented fourth argument of type char**. If; // other platforms start sprouting these, the logic below will start; // getting shifty.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:20,undo,undocumented,20,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['undo'],['undocumented']
Usability,"// Data is out of date, so clear it. It'll be re-computed later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:27,clear,clear,27,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['clear'],['clear']
Usability,"// Data members modified:; // fY, fVyy, , fBiasScale; // Data members cleared; // fVyyInv, fNdf; // + see ClearResults",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:70,clear,cleared,70,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,2,"['Clear', 'clear']","['ClearResults', 'cleared']"
Usability,// Deal with undef uses immediately - simply rewrite the src operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:38,simpl,simply,38,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['simpl'],['simply']
Usability,// Decide which area this value should be read from.; // TODO: Implement the AMD64 ABI in its entirety. This simple; // selection mechanism works only for the basic types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:109,simpl,simple,109,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simple']
Usability,"// Decide which strategy to take. Prefer to move a single-use value; // over cloning it, and prefer cloning over introducing a tee.; // For moving, we require the def to be in the same block as the use;; // this makes things simpler (LiveIntervals' handleMove function only; // supports intra-block moves) and it's MachineSink's job to catch all; // the sinking opportunities anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp:225,simpl,simpler,225,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp,1,['simpl'],['simpler']
Usability,"// Decl node names don't end in Decl for historical reasons, and it would; // be somewhat annoying to fix now. Conveniently, this means the ID matches; // is exactly the node name, and the class name is simply that plus Decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ASTTableGen.cpp:203,simpl,simply,203,interpreter/llvm-project/clang/utils/TableGen/ASTTableGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ASTTableGen.cpp,1,['simpl'],['simply']
Usability,// Declaration of object (type); // Storage classes - Obsolete/Undocumented.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:63,Undo,Undocumented,63,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['Undo'],['Undocumented']
Usability,"// Decode a packed BCD value.; // Maximum value of int64_t is 9,223,372,036,854,775,807. These are 18 usable; // decimal digits. Thus BCD numbers of up to 9 bytes can be converted.; // Please note that s390 supports BCD numbers up to a length of 16 bytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BCD.h:102,usab,usable,102,interpreter/llvm-project/llvm/include/llvm/Support/BCD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BCD.h,1,['usab'],['usable']
Usability,// Decode pseudo_probe_desc section to build GUID to PseudoProbeFuncDesc map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h:45,GUID,GUID,45,interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,1,['GUID'],['GUID']
Usability,// Decompose simple cases into standard shifts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp:13,simpl,simple,13,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,1,['simpl'],['simple']
Usability,"// Deduce function attributes. We do another run of this after the function; // simplification pipeline, so this only needs to run when it could affect the; // function simplification pipeline, which is only the case with recursive; // functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:80,simpl,simplification,80,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['simpl'],['simplification']
Usability,"// Deduction guide lives in namespace scope generally, but it is just a; // hint to the compilers. What we actually lookup for is the generated member; // of the corresponding template. So it is sufficient to check the; // reachability of the template decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:13,guid,guide,13,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['guid'],['guide']
Usability,// Deduction guides have a trailing return type and no type in their; // decl-specifier sequence. Use a placeholder return type for now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:13,guid,guides,13,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['guid'],['guides']
Usability,"// Deduction guides trailing arrow "" A(...) -> A<T>;"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:13,guid,guides,13,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['guid'],['guides']
Usability,"// Def and Insert are in different BBs; // If Def and Insert are in different BBs, we only handle a simple case in; // which Insert's BB is a successor of Def's BB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugValueManager.cpp:100,simpl,simple,100,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugValueManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugValueManager.cpp,1,['simpl'],['simple']
Usability,"// Default parser implementation - This implementation depends on having a; // mapping of recognized options to values of some sort. In addition to this,; // each entry in the mapping also tracks a help message that is printed with the; // command line option for -help. Because this is a simple mapping parser, the; // data type can be any unsupported type.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:289,simpl,simple,289,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['simpl'],['simple']
Usability,"// Defend against the user having an old version of the API by ensuring that; // any fields they didn't see are cleared. We must defend against fields being; // set to the bitwise equivalent of zero, and assume that this means ""do the; // default"" as if that option hadn't been available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngineBindings.cpp:112,clear,cleared,112,interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngineBindings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngineBindings.cpp,1,['clear'],['cleared']
Usability,// Define simple diagnostic options (with no accessors).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticOptions.h:10,simpl,simple,10,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticOptions.h,1,['simpl'],['simple']
Usability,// Define simple language options (with no accessors).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h:10,simpl,simple,10,interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,1,['simpl'],['simple']
Usability,// Define symbol as simple external function,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/COFFMasmParser.cpp:20,simpl,simple,20,interpreter/llvm-project/llvm/lib/MC/MCParser/COFFMasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/COFFMasmParser.cpp,1,['simpl'],['simple']
Usability,"// Delete all the elements in the map, but don't reset the elements; // to default values. This is a copy of clear(), but avoids unnecessary; // work not required in the destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h:109,clear,clear,109,interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h,1,['clear'],['clear']
Usability,"// Delete heap objects and clear list. Attention: do this only when you; // own all objects stored in the collection. When you stored aliases to; // the actual objects (i.e. you did not create the objects) use Clear(); // instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/tcollex.cxx:27,clear,clear,27,test/tcollex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/tcollex.cxx,2,"['Clear', 'clear']","['Clear', 'clear']"
Usability,// Delete the dead COPYs and clear operands in debug instructions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:29,clear,clear,29,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['clear'],['clear']
Usability,// Delete the resume block if all its predecessors have been removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:14,resume,resume,14,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['resume'],['resume']
Usability,"// Delete this part, simply a comment",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:21,simpl,simply,21,roofit/histfactory/src/RooBarlowBeestonLL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx,1,['simpl'],['simply']
Usability,"// Delete/clear all objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx:10,clear,clear,10,test/Tetris.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx,1,['clear'],['clear']
Usability,"// Denormalization / ""partial increment"" is essentially the same as \c; // SCEVAddRecExpr::getPostIncExpr. Here we use an explicit loop to make the; // symmetry with Normalization clear.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionNormalization.cpp:180,clear,clear,180,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionNormalization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionNormalization.cpp,1,['clear'],['clear']
Usability,// Describe a fail state that is caused by the given ModuleSummaryIndex; // providing multiple definitions of the given global value name. It will dump; // name and GUID for the global value and list the paths of the modules covered; // by the index.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithThinLTOSummaries/LLJITWithThinLTOSummaries.cpp:165,GUID,GUID,165,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithThinLTOSummaries/LLJITWithThinLTOSummaries.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithThinLTOSummaries/LLJITWithThinLTOSummaries.cpp,1,['GUID'],['GUID']
Usability,// Describe a fail state where the given global value name was not found in the; // given ModuleSummaryIndex. It will dump name and GUID for the global value and; // list the paths of the modules covered by the index.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithThinLTOSummaries/LLJITWithThinLTOSummaries.cpp:132,GUID,GUID,132,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithThinLTOSummaries/LLJITWithThinLTOSummaries.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithThinLTOSummaries/LLJITWithThinLTOSummaries.cpp,1,['GUID'],['GUID']
Usability,"// Description of a source-code edit, expressed in terms of an AST node.; // Includes: an ID for the (bound) node, a selector for source related to the; // node, a replacement and, optionally, an explanation for the edit.; //; // * Target: the source code impacted by the rule. This identifies an AST node,; // or part thereof (\c Part), whose source range indicates the extent of the; // replacement applied by the replacement term. By default, the extent is the; // node matched by the pattern term (\c NodePart::Node). Target's are typed; // (\c Kind), which guides the determination of the node extent.; //; // * Replacement: a function that produces a replacement string for the target,; // based on the match result.; //; // * Note: (optional) a note specifically for this edit, potentially referencing; // elements of the match. This will be displayed to the user, where possible;; // for example, in clang-tidy diagnostics. Use of notes should be rare --; // explanations of the entire rewrite should be set in the rule; // (`RewriteRule::Explanation`) instead. Notes serve the rare cases wherein; // edit-specific diagnostics are required.; //; // `ASTEdit` should be built using the `change` convenience functions. For; // example,; // \code; // changeTo(name(fun), cat(""Frodo"")); // \endcode; // Or, if we use Stencil for the TextGenerator:; // \code; // using stencil::cat;; // changeTo(statement(thenNode), cat(""{"", thenNode, ""}"")); // changeTo(callArgs(call), cat(x, "","", y)); // \endcode; // Or, if you are changing the node corresponding to the rule's matcher, you can; // use the single-argument override of \c change:; // \code; // changeTo(cat(""different_expr"")); // \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h:562,guid,guides,562,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,1,['guid'],['guides']
Usability,"// Despite the fact that we can't simplify this instruction in all User's; // context, we can at least compute the known bits, and we can; // do simplifications that apply to *just* the one user if we know that; // this instruction has a simpler value in that context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp:34,simpl,simplify,34,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,3,['simpl'],"['simpler', 'simplifications', 'simplify']"
Usability,// Detect common single-character typos and resume.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:44,resume,resume,44,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['resume'],['resume']
Usability,"// Determine if it's worth trying to allocate this reg, given the; // CostPerUseLimit; // TODO: this is a heuristic component we could consider learning, too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.h:144,learn,learning,144,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.h,1,['learn'],['learning']
Usability,// Determine if this shuffle can be implemented with a KSHIFT instruction.; // Returns the shift amount if possible or -1 if not. This is a simplified; // version of matchShuffleAsShift.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:140,simpl,simplified,140,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplified']
Usability,"// Determine whether the enum is simple, i.e. does not have a semicolon or; // constants with class bodies. Simple enums can be formatted like braced; // lists, contracted to a single line, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:33,simpl,simple,33,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"// Determine whether the type Ty is simple enough to be handled by; // fast-isel as a load target, and return its equivalent machine type in VT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:36,simpl,simple,36,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['simpl'],['simple']
Usability,"// Determine whether the type Ty is simple enough to be handled by; // fast-isel, and return its equivalent machine type in VT.; // FIXME: Copied directly from ARM -- factor into base class?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:36,simpl,simple,36,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['simpl'],['simple']
Usability,"// Determine whether to split a scope depending on the sets of the branch; // condition values of the previous region and the current region. We split; // (return true) it if 1) the condition values of the inner/lower scope can't be; // hoisted up to the outer/upper scope, or 2) the two sets of the condition; // values have an empty intersection (because the combined branch conditions; // won't probably lead to a simpler combined condition).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:417,simpl,simpler,417,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['simpl'],['simpler']
Usability,"// Determines Bezier interpolation (applies; // only for simple display modes group for; // grid, x_lines, y_lines display modes).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:57,simpl,simple,57,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['simpl'],['simple']
Usability,"// Determines if the debug info for this tag declaration needs a type; // identifier. The purpose of the unique identifier is to deduplicate type; // information for identical types across TUs. Because of the C++ one definition; // rule (ODR), it is valid to assume that the type is defined the same way in; // every TU and its debug info is equivalent.; //; // C does not have the ODR, and it is common for codebases to contain multiple; // different definitions of a struct with the same name in different TUs.; // Therefore, if the type doesn't have a C++ mangling, don't give it an; // identifer. Type information in C is smaller and simpler than C++ type; // information, so the increase in debug info size is negligible.; //; // If the type is not externally visible, it should be unique to the current TU,; // and should not need an identifier to participate in type deduplication.; // However, when emitting CodeView, the format internally uses these; // unique type name identifers for references between debug info. For example,; // the method of a class in an anonymous namespace uses the identifer to refer; // to its parent class. The Microsoft C++ ABI attempts to provide unique names; // for such types, so when emitting CodeView, always use identifiers for C++; // types. This may create problems when attempting to emit CodeView when the MS; // C++ ABI is not in use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:638,simpl,simpler,638,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['simpl'],['simpler']
Usability,"// Determines the first component step for; // neighbouring color levels, applies only for; // rainbowed display modes, it does not apply for; // simple display modes algorithm group.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:146,simpl,simple,146,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['simpl'],['simple']
Usability,"// Determines the second component step for; // neighbouring color levels, applies only for; // rainbowed display modes, it does not apply for; // simple display modes algorithm group.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:147,simpl,simple,147,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['simpl'],['simple']
Usability,"// Determines the third component step for; // neighbouring color levels, applies only for; // rainbowed display modes, it does not apply for; // simple display modes algorithm group.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:146,simpl,simple,146,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['simpl'],['simple']
Usability,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:868,clear,clearer,868,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx,4,"['Clear', 'clear']","['Clear', 'clearer']"
Usability,// Device-side CUDA system calls.; // http://docs.nvidia.com/cuda/ptx-writers-guide-to-interoperability/index.html#system-calls; // We need these declarations and wrappers for device-side; // malloc/free/printf calls to work without relying on; // -fcuda-disable-target-call-checks option.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:78,guid,guide-to-interoperability,78,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['guid'],['guide-to-interoperability']
Usability,"// Diags.Reset(/*soft=*/true);; // Diags.getClient()->clear();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:54,clear,clear,54,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp,1,['clear'],['clear']
Usability,"// Dialog used to test the different supported progress bars.; // use hierarchical cleani",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/guitest.cxx:47,progress bar,progress bars,47,test/guitest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/guitest.cxx,1,['progress bar'],['progress bars']
Usability,// Did not simplify.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:11,simpl,simplify,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['simpl'],['simplify']
Usability,// Did not simplify.; // In this pattern ShAmtsDiff correlates with the number of high bits that; // shall be unset in the root value (OuterShift).; // An extend of an undef value becomes zero because the high bits are never; // completely unknown. Replace the `undef` shift amounts with negated; // bitwidth of innermost shift to ensure that the value remains undef when; // creating the subsequent shift op.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:11,simpl,simplify,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['simpl'],['simplify']
Usability,// Did not simplify.; // In this pattern SumOfShAmts correlates with the number of low bits; // that shall remain in the root value (OuterShift).; // An extend of an undef value becomes zero because the high bits are never; // completely unknown. Replace the `undef` shift amounts with final; // shift bitwidth to ensure that the value remains undef when creating the; // subsequent shift op.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:11,simpl,simplify,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['simpl'],['simplify']
Usability,"// Did not use simplification result, no need to add the extra; // dependency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:15,simpl,simplification,15,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['simpl'],['simplification']
Usability,"// Disable feedback, if required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,feedback,feedback,11,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['feedback'],['feedback']
Usability,// Disable the nsw and nuw flags here: We can no longer guarantee that; // we won't wrap after simplification. Removing the nsw/nuw flags is; // legal here because the top bit is not demanded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp:95,simpl,simplification,95,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,1,['simpl'],['simplification']
Usability,// Disable the nsw and nuw flags. We can no longer guarantee that we; // won't wrap after simplification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:90,simpl,simplification,90,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,4,['simpl'],['simplification']
Usability,// Disallow assigning a _Complex to a real type in C++ mode since it simply; // discards the imaginary part.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:69,simpl,simply,69,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['simpl'],['simply']
Usability,// Disallow this for simplicitly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:21,simpl,simplicitly,21,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['simpl'],['simplicitly']
Usability,"// Distinguish ELF data from code symbols, which will be used later on to; // decide whether to 'disassemble' this chunk as a data declaration via; // dumpELFData(), or whether to treat it as code.; //; // If data _and_ code symbols are defined at the same address, the code; // takes priority, on the grounds that disassembling code is our main; // purpose here, and it would be a worse failure to _not_ interpret; // something that _was_ meaningful as code than vice versa.; //; // Any ELF symbol type that is not clearly data will be regarded as code.; // In particular, one of the uses of STT_NOTYPE is for branch targets; // inside functions, for which STT_FUNC would be inaccurate.; //; // So here, we spot whether there's any non-data symbol present at all,; // and only set the DisassembleAsELFData flag if there isn't. Also, we use; // this distinction to inform the decision of which symbol to print at; // the head of the section, so that if we're printing code, we print a; // code-related symbol name to go with it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp:516,clear,clearly,516,interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp,1,['clear'],['clearly']
Usability,"// Divide the string up into simple strings and measure each string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:29,simpl,simple,29,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['simpl'],['simple']
Usability,"// Do ""A op B"" and ""A op C"" both simplify?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:33,simpl,simplify,33,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simplify']
Usability,"// Do ""A op C"" and ""B op C"" both simplify?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:33,simpl,simplify,33,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simplify']
Usability,// Do LFTR if the exit condition's IV is *not* a simple counter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:49,simpl,simple,49,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['simpl'],['simple']
Usability,// Do LFTR to simplify the exit ICMP to EQ/NE,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['simpl'],['simplify']
Usability,// Do LFTR to simplify the exit condition to an ICMP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:14,simpl,simplify,14,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['simpl'],['simplify']
Usability,"// Do a simple check for overlap: if the two arguments are from the same; // buffer, see if the end of the first is greater than the start of the second; // or vice versa.; // If a previous check has failed, propagate the failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp:8,simpl,simple,8,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,1,['simpl'],['simple']
Usability,"// Do a simple match. Note that omatch() fails if there's still; // something in pat but we're at end of string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/Match.cxx:8,simpl,simple,8,core/base/src/Match.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/Match.cxx,1,['simpl'],['simple']
Usability,"// Do an explicit clear, this shrinks the map if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/InstructionWorklist.h:18,clear,clear,18,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/InstructionWorklist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/InstructionWorklist.h,1,['clear'],['clear']
Usability,"// Do form the 'bit extract' pattern.; // If 'X' is a constant, and we transform, then we will immediately; // try to undo the fold, thus causing endless combine loop.; // So only do the transform if X is not a constant. This matches the default; // implementation of this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:118,undo,undo,118,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['undo'],['undo']
Usability,"// Do not attempt to close stdout or stderr. We used to try to maintain the; // property that tools that support writing file to stdout should not also; // write informational output to stdout, but in practice we were never able to; // maintain this invariant. Many features have been added to LLVM and clang; // (-fdump-record-layouts, optimization remarks, etc) that print to stdout, so; // users must simply be aware that mixed output and remarks is a possibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/raw_ostream.cpp:404,simpl,simply,404,interpreter/llvm-project/llvm/lib/Support/raw_ostream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/raw_ostream.cpp,1,['simpl'],['simply']
Usability,// Do not clear the first region as it's the one before the first; // CHECK-LABEL and it would clear variables defined on the command-line; // before they get used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:10,clear,clear,10,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,2,['clear'],['clear']
Usability,// Do not create shuffle if the mask is a simple identity; // non-resizing mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:42,simpl,simple,42,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['simpl'],['simple']
Usability,"// Do not load non-FS profiles. A line or probe can get a zero-valued; // discriminator at certain pass which could result in accidentally loading; // the corresponding base counter in the non-FS profile, while a non-zero; // discriminator would end up getting zero samples. This could in turn undo; // the sample distribution effort done by previous BFI maintenance and the; // probe distribution factor work for pseudo probes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRSampleProfile.cpp:294,undo,undo,294,interpreter/llvm-project/llvm/lib/CodeGen/MIRSampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRSampleProfile.cpp,1,['undo'],['undo']
Usability,// Do not mangle template deduction guides.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/JSONNodeDumper.cpp:36,guid,guides,36,interpreter/llvm-project/clang/lib/AST/JSONNodeDumper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/JSONNodeDumper.cpp,1,['guid'],['guides']
Usability,"// Do not promote if the operand has been added by codegenprepare.; // Otherwise, it means we are undoing an optimization that is likely to be; // redone, thus causing potential infinite loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:98,undo,undoing,98,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['undo'],['undoing']
Usability,"// Do not reassociate boolean (i1) expressions. We want to preserve the; // original order of evaluation for short-circuited comparisons that; // SimplifyCFG has folded to AND/OR expressions. If the expression; // is not further optimized, it is likely to be transformed back to a; // short-circuited form for code gen, and the source order may have been; // optimized for the most likely conditions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:146,Simpl,SimplifyCFG,146,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,1,['Simpl'],['SimplifyCFG']
Usability,// Do not simplify loads that are only used in llvm.assume if we cannot also; // remove all stores that may feed into the load. The reason is that the; // assume is probably worth something as long as the stores are around.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:10,simpl,simplify,10,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['simpl'],['simplify']
Usability,"// Do not update 'MaxStack' for primitive and built-in functions; // (encoded with names either starting with ""erlang.""/""bif_"" or not; // having a ""."", such as a simple <Module>.<Function>.<Arity>, or an; // ""_"", such as the BIF ""suspend_0"") as they are executed on another; // stack.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:162,simpl,simple,162,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['simpl'],['simple']
Usability,"// Do not use GUIDs, since they depend on the source path. Moving the; // source file to a different directory could cause different GUID; // values for a pair of given symbols. These symbols could then compare; // ""less"" in one directory, but ""greater"" in another.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:14,GUID,GUIDs,14,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,2,['GUID'],"['GUID', 'GUIDs']"
Usability,// Do not use builder here: CreateICmp may simplify this into a constant and; // unswitching will break. Better optimize it away later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:43,simpl,simplify,43,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplify']
Usability,// Do nothing for (preserve.static.offset (load/store ..)) or for; // GEPs with zero indices. Such constructs lead to zero offset and; // are simplified by other passes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp:142,simpl,simplified,142,interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,1,['simpl'],['simplified']
Usability,// Do nothing if we're clearing the partition and it is already empty.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Globals.cpp:23,clear,clearing,23,interpreter/llvm-project/llvm/lib/IR/Globals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Globals.cpp,1,['clear'],['clearing']
Usability,// Do nothing if we're clearing the section and it is already empty.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Globals.cpp:23,clear,clearing,23,interpreter/llvm-project/llvm/lib/IR/Globals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Globals.cpp,1,['clear'],['clearing']
Usability,"// Do nothing, these should simply be ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:28,simpl,simply,28,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['simpl'],['simply']
Usability,"// Do really simple DSE, to catch cases where there are several consecutive; // stores to the same location, separated by a few arithmetic operations. This; // situation often occurs with bitfield accesses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:13,simpl,simple,13,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,1,['simpl'],['simple']
Usability,"// Do really simple store-to-load forwarding and load CSE, to catch cases; // where there are several consecutive memory accesses to the same location,; // separated by a few arithmetic operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:13,simpl,simple,13,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,1,['simpl'],['simple']
Usability,"// Do simple ""peephole"" optimizations and bit-twiddling optzns.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp:6,simpl,simple,6,interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,7,['simpl'],['simple']
Usability,// Do some simple precondition checks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:11,simpl,simple,11,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,1,['simpl'],['simple']
Usability,"// Do the access attribute and DSOLocal propagation in combined index.; // The goal of attribute propagation is internalization of readonly (RO); // or writeonly (WO) variables. To determine which variables are RO or WO; // and which are not we take following steps:; // - During analysis we speculatively assign readonly and writeonly; // attribute to all variables which can be internalized. When computing; // function summary we also assign readonly or writeonly attribute to a; // reference if function doesn't modify referenced variable (readonly); // or doesn't read it (writeonly).; //; // - After computing dead symbols in combined index we do the attribute; // and DSOLocal propagation. During this step we:; // a. clear RO and WO attributes from variables which are preserved or; // can't be imported; // b. clear RO and WO attributes from variables referenced by any global; // variable initializer; // c. clear RO attribute from variable referenced by a function when; // reference is not readonly; // d. clear WO attribute from variable referenced by a function when; // reference is not writeonly; // e. clear IsDSOLocal flag in every summary if any of them is false.; //; // Because of (c, d) we don't internalize variables read by function A; // and modified by function B.; //; // Internalization itself happens in the backend after import is finished; // See internalizeGVsAfterImport.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp:725,clear,clear,725,interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,5,['clear'],['clear']
Usability,// Do this before using distributive laws to catch simple and/or/not patterns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:51,simpl,simple,51,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,2,['simpl'],['simple']
Usability,"// Do we need to perform FI resolution for this function. Normally, this is; // required only when the function has any stack objects. However, FI; // resolution actually has another job, not apparent from the title - it; // resolves callframe setup/destroy that were not simplified earlier.; //; // So, this is required for M68k functions that have push sequences even; // when there are no stack objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.h:272,simpl,simplified,272,interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.h,1,['simpl'],['simplified']
Usability,"// Does ""A op B"" simplify to the identity value for the inner opcode?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simplify']
Usability,"// Does ""A op B"" simplify?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,2,['simpl'],['simplify']
Usability,"// Does ""A op C"" simplify to the identity value for the inner opcode?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,2,['simpl'],['simplify']
Usability,"// Does ""B op C"" simplify to the identity value for the inner opcode?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['simpl'],['simplify']
Usability,"// Does ""B op C"" simplify?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,2,['simpl'],['simplify']
Usability,"// Does ""C op A"" simplify?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,4,['simpl'],['simplify']
Usability,"// Does ""cmp FV, RHS"" simplify?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:22,simpl,simplify,22,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplify']
Usability,"// Does the *call site* have the NonNull attribute set on an argument? We; // use the attribute on the call site to memoize any analysis done in the; // caller. This will also trip if the callee function has a non-null; // parameter attribute, but that's a less interesting case because hopefully; // the callee would already have been simplified based on that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:336,simpl,simplified,336,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simplified']
Usability,// Does the expanded pair of binops simplify to the existing binop?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:36,simpl,simplify,36,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplify']
Usability,// Does the user look like it could be part of a root set?; // All its users must be simple arithmetic ops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:85,simpl,simple,85,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,1,['simpl'],['simple']
Usability,// DomNode - Dominator tree node for the block.; // Cleared when the final value has been determined and LI has been updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:52,Clear,Cleared,52,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['Clear'],['Cleared']
Usability,"// Don't add a zero-latency instruction to the Ready queue.; // A zero-latency instruction doesn't consume any scheduler resources. That is; // because it doesn't need to be executed, and it is often removed at register; // renaming stage. For example, register-register moves are often optimized at; // register renaming stage by simply updating register aliases. On some; // targets, zero-idiom instructions (for example: a xor that clears the value; // of a register) are treated specially, and are often eliminated at register; // renaming stage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp:331,simpl,simply,331,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,2,"['clear', 'simpl']","['clears', 'simply']"
Usability,"// Don't allow mutating opcodes for GISel combiners. We want a more precise; // handling of MIFlags so we require them to be explicitly preserved.; //; // TODO: We don't mutate very often, if at all in combiners, but it'd be nice; // to re-enable this. We'd then need to always clear MIFlags when mutating; // opcodes, and never mutate an inst that we copy flags from.; // DstMI.chooseInsnToMutate(M);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:278,clear,clear,278,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,1,['clear'],['clear']
Usability,// Don't bother creating the full statement if we don't have any usable; // handlers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp:65,usab,usable,65,interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,1,['usab'],['usable']
Usability,// Don't bother trying to unswitch past a switch with a constant; // condition. This should be removed prior to running this pass by; // simplifycfg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:137,simpl,simplifycfg,137,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplifycfg']
Usability,// Don't bother trying to unswitch past an unconditional branch or a branch; // with a constant value. These should be removed by simplifycfg prior to; // running this pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:130,simpl,simplifycfg,130,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplifycfg']
Usability,"// Don't break PHIs that have no interesting incoming values. That is, where; // there is no clear opportunity to fold the ""extractelement"" instructions; // we would add.; //; // Note: IC does not run after this pass, so we're only interested in the; // foldings that the DAG combiner can do.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp:93,clear,clear,93,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,1,['clear'],['clear']
Usability,"// Don't clear PreExpArgTokens, just clear the entries. Clearing the entries; // would deallocate the element vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp:9,clear,clear,9,interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp,3,"['Clear', 'clear']","['Clearing', 'clear']"
Usability,// Don't clear registers that are live when leaving the function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:9,clear,clear,9,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,1,['clear'],['clear']
Usability,// Don't clear registers that must be preserved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:9,clear,clear,9,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,1,['clear'],['clear']
Usability,"// Don't clear the AST before backend codegen since we do codegen multiple; // times, reusing the same AST.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/Interpreter.cpp:9,clear,clear,9,interpreter/llvm-project/clang/lib/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/Interpreter.cpp,1,['clear'],['clear']
Usability,// Don't clone if doing so will not disambiguate any alloc types amongst; // caller edges (including the callee edges that would be cloned).; // Otherwise we will simply move all edges to the clone.; //; // First check if by cloning we will disambiguate the caller allocation; // type from node's allocation type. Query allocTypeToUse so that we don't; // bother cloning to distinguish NotCold+Cold from NotCold. Note that; // neither of these should be None type.; //; // Then check if by cloning node at least one of the callee edges will be; // disambiguated by splitting out different context ids.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:163,simpl,simply,163,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['simpl'],['simply']
Usability,// Don't consider the simplification successful if we get back a constant; // expression. That's just an instruction in hiding.; // Also reject the case where we simplify back to the phi node. We wouldn't; // be able to remove it in that case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:22,simpl,simplification,22,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,2,['simpl'],"['simplification', 'simplify']"
Usability,// Don't crash on an oversized shift. We can not guarantee that a; // bogus shift has been simplified to undef.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:91,simpl,simplified,91,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['simpl'],['simplified']
Usability,"// Don't do this for simple (no expressions) one-argument function calls; // as that feels like needlessly wasting whitespace, e.g.:; //; // caaaaaaaaaaaall(; // caaaaaaaaaaaall(; // caaaaaaaaaaaall(; // caaaaaaaaaaaaaaaaaaaaaaall(aaaaaaaaaaaaaa, aaaaaaaaa))));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:21,simpl,simple,21,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,1,['simpl'],['simple']
Usability,"// Don't form VALU clauses. It's not clear what benefit they give, if any.; // In practice s_nop is the only internal instruction we're likely to see.; // It's safe to treat the rest as illegal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp:37,clear,clear,37,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp,1,['clear'],['clear']
Usability,// Don't generate INS if constant OR operand doesn't fit into bits; // cleared by constant AND operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:71,clear,cleared,71,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,1,['clear'],['cleared']
Usability,// Don't handle non-simple values in FastISel.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:20,simpl,simple,20,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['simpl'],['simple']
Usability,"// Don't make the 'add' bigger if there's no hope of combining it with some; // other 'add' or 'shl' instruction.; // TODO: It may be profitable to generate simpler LEA instructions in place; // of single 'add' instructions, but the cost model for selecting an LEA; // currently has a high threshold.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:157,simpl,simpler,157,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simpler']
Usability,// Don't make these simplifications in 64-bit mode; other assemblers don't; // perform them because they make the code larger.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86EncodingOptimization.cpp:20,simpl,simplifications,20,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86EncodingOptimization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86EncodingOptimization.cpp,1,['simpl'],['simplifications']
Usability,"// Don't match just leal(,%reg,2). It's cheaper to do addl %reg, %reg, or with; // a simple shift.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:85,simpl,simple,85,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['simpl'],['simple']
Usability,// Don't need to clear registers that are used/clobbered by terminating; // instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:17,clear,clear,17,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,1,['clear'],['clear']
Usability,// Don't need to update Edge's context ids since we are simply reconnecting; // it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:56,simpl,simply,56,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['simpl'],['simply']
Usability,// Don't print the requires clause to keep the output simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:54,simpl,simple,54,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['simpl'],['simple']
Usability,"// Don't process functions that have loops, at least for now. Placement; // of prolog and epilog must take loop structure into account. For simpli-; // city don't do it right now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:140,simpl,simpli,140,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['simpl'],['simpli']
Usability,// Don't provide even a dummy value if the eod or eof marker is; // reached. Simply provide a diagnostic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp:77,Simpl,Simply,77,interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,1,['Simpl'],['Simply']
Usability,// Don't simplify BROADCASTS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:9,simpl,simplify,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['simpl'],['simplify']
Usability,// Don't simplify freeze.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:9,simpl,simplify,9,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplify']
Usability,// Don't simplify instructions outside the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:9,simpl,simplify,9,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['simpl'],['simplify']
Usability,// Don't simplify the token factor if the node itself has too many operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:9,simpl,simplify,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplify']
Usability,// Don't simplify token factors if optnone.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:9,simpl,simplify,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplify']
Usability,// Don't sink defs/uses of hard registers or if the instruction defines more; // than one register.; // Don't sink more than two register uses - it'll cover most of the cases and; // greatly simplifies the register pressure checks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:191,simpl,simplifies,191,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['simpl'],['simplifies']
Usability,"// Don't sink non-simple (atomic, volatile) stores.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergedLoadStoreMotion.cpp:18,simpl,simple,18,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergedLoadStoreMotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergedLoadStoreMotion.cpp,1,['simpl'],['simple']
Usability,// Don't transform uxtb/uxth.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:19,ux,uxtb,19,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,4,['ux'],"['uxtb', 'uxth']"
Usability,// Don't try to expand this build_vector into a pair of horizontal add/sub; // if we can simply emit a pair of scalar add/sub.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:89,simpl,simply,89,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simply']
Usability,"// Don't try to fold splats; they're likely to simplify somehow, or they; // might be free.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:47,simpl,simplify,47,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplify']
Usability,"// Don't try to simplify calls without uses. It will not do anything useful,; // but will result in the following folds being skipped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:16,simpl,simplify,16,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['simpl'],['simplify']
Usability,"// Don't try to simplify the first condition of a select by the second, as; // this may make the select more poisonous than the original one.; // TODO: check if the first operand may be poison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:16,simpl,simplify,16,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['simpl'],['simplify']
Usability,// Don't unfold simple loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:16,simpl,simple,16,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['simpl'],['simple']
Usability,// Don't use PACKSS for vXi64 -> vXi32 truncations unless we're dealing with; // a sign splat (or AVX512 VPSRAQ support). ComputeNumSignBits struggles to; // see through BITCASTs later on and combines/simplifications can't then use; // it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:201,simpl,simplifications,201,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplifications']
Usability,// Don't use dominating conditions when folding icmp using known bits. This; // may convert signed into unsigned predicates in ways that other passes; // (especially IndVarSimplify) may not be able to reliably undo.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:210,undo,undo,210,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['undo'],['undo']
Usability,// Don't waste time simplifying dead/unused instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp:20,simpl,simplifying,20,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp,1,['simpl'],['simplifying']
Usability,"// Don't worry if the offset ends up in a VGPR. Only one lane will have; // effect, so SIFixSGPRCopies will validly insert readfirstlane.; // The resource id offset is computed as (<isa opaque base> + M0[21:16] +; // offset field) % 64. Some versions of the programming guide omit the m0; // part, or claim it's from offset 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp:270,guid,guide,270,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,1,['guid'],['guide']
Usability,"// Done, simple octal number like 01234; // If we have some other non-octal digit that *is* a decimal digit, see if; // this is part of a floating point number like 094.123 or 09e1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp:9,simpl,simple,9,interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp,1,['simpl'],['simple']
Usability,// Double check that the attribute is just something; // fairly simple.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:64,simpl,simple,64,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['simpl'],['simple']
Usability,"// Downgrade from ExtWarn to Extension if; // (1) the supposedly external inline function is in the main file,; // and probably won't be included anywhere else.; // (2) the thing we're referencing is a pure function.; // (3) the thing we're referencing is another inline function.; // This last can give us false negatives, but it's better than warning on; // wrappers for simple C library functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:373,simpl,simple,373,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['simpl'],['simple']
Usability,"// Draw a simple box",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCandle.cxx:10,simpl,simple,10,graf2d/graf/src/TCandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCandle.cxx,1,['simpl'],['simple']
Usability,"// Draw the histogram with a simple line",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:29,simpl,simple,29,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['simpl'],['simple']
Usability,"// Draw the histogram with a simple marker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:29,simpl,simple,29,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['simpl'],['simple']
Usability,"// Drawing the progress bar every event was causing a huge slowdown in the evaluation time; // So we set some parameters to draw the progress bar a total of totalProgressDraws, i.e. only draw every 1 in 100",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:15,progress bar,progress bar,15,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,2,['progress bar'],['progress bar']
Usability,// Drop FVal since we can get its value by simply inverting/negating; // TVal.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:43,simpl,simply,43,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simply']
Usability,// Drop debug location as per debug info update guide.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:48,guid,guide,48,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,1,['guid'],['guide']
Usability,"// Dynamic scheduling of the outer loop (dynamic, guided, auto, runtime).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:50,guid,guided,50,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['guid'],['guided']
Usability,"// EH pads are unsafe to outline because doing so breaks EH type tables. It; // follows that invoke instructions cannot be extracted, because CodeExtractor; // requires unwind destinations to be within the extraction region.; //; // Resumes that are not reachable from a cleanup landing pad are considered to; // be unreachable. It’s not safe to split them out either.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/HotColdSplitting.cpp:233,Resume,Resumes,233,interpreter/llvm-project/llvm/lib/Transforms/IPO/HotColdSplitting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/HotColdSplitting.cpp,1,['Resume'],['Resumes']
Usability,// EXTRACT_SUBVECTOR of CONCAT_VECTOR can be simplified if the pieces of; // the concat have the same type as the extract.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:45,simpl,simplified,45,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['simpl'],['simplified']
Usability,"// Each NVVM intrinsic we can simplify can be replaced with one of:; //; // * an LLVM intrinsic,; // * an LLVM cast operation,; // * an LLVM binary operation, or; // * ad-hoc LLVM IR for the particular operation.; // Some transformations are only valid when the module's; // flush-denormals-to-zero (ftz) setting is true/false, whereas other; // transformations are valid regardless of the module's ftz setting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp:30,simpl,simplify,30,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp,1,['simpl'],['simplify']
Usability,"// Each lambda init-capture forms its own full expression, which clears; // Actions.MaybeODRUseExprs. So create an expression evaluation context; // to save the necessary state, and restore it later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:65,clear,clears,65,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,1,['clear'],['clears']
Usability,"// Each round of simplification iterates through the SimplifyIVUsers worklist; // for all current phis, then determines whether any IVs can be; // widened. Widening adds new phis to LoopPhis, inducing another round of; // simplification on the wide IVs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:17,simpl,simplification,17,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,3,"['Simpl', 'simpl']","['SimplifyIVUsers', 'simplification']"
Usability,"// Each weighted sum is going to be less than the total frequency of the; // bundle. Ideally, we should simply set Value = sign(SumP - SumN), but we; // will add a dead zone around 0 for two reasons:; //; // 1. It avoids arbitrary bias when all links are 0 as is possible during; // initial iterations.; // 2. It helps tame rounding errors when the links nominally sum to 0.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp:104,simpl,simply,104,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,1,['simpl'],['simply']
Usability,"// Echo request: an object has been sent along. If the object is a; // string, it is simply echoed back to the client from the master; // and each worker. Elsewhere, the output of TObject::Print() is; // sent. Received object is disposed after usage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:85,simpl,simply,85,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['simpl'],['simply']
Usability,// Either not inserting from the low element of the input or the input; // element size is too small to use VZEXT_MOVL to clear the high bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:122,clear,clear,122,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['clear'],['clear']
Usability,"// Either we stopped and the appropriate action was taken,; // or we got back a simplified return value to continue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:80,simpl,simplified,80,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['simpl'],['simplified']
Usability,"// Either we stopped and the appropriate action was taken,; // or we got back a simplified value to continue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:80,simpl,simplified,80,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['simpl'],['simplified']
Usability,"// Elide the base class name when creating the sub-branches.; // Note: The branch names for sub-branches of a base class branch; // do not represent the full class hierarchy because we do; // this, however it does keep the branch names for the; // inherited data members simple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:271,simpl,simple,271,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['simpl'],['simple']
Usability,// Eliminate redundant IV users.; //; // Simplification works best when run before other consumers of SCEV. We; // attempt to avoid evaluating SCEVs for sign/zero extend operations until; // other expressions involving loop IVs have been evaluated. This helps SCEV; // set no-wrap flags before normalizing sign/zero extension.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:41,Simpl,Simplification,41,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['Simpl'],['Simplification']
Usability,// Else handle the simple argument case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp:19,simpl,simple,19,interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,1,['simpl'],['simple']
Usability,// Else we can simply add this satisfaction to the list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp:15,simpl,simply,15,interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,1,['simpl'],['simply']
Usability,"// Else, this is simply a non-redecl case. Checking the 'value' is only; // necessary in the Target case, since The CPUSpecific/Dispatch cases are; // handled in the attribute adding step.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:17,simpl,simply,17,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['simpl'],['simply']
Usability,"// Embedded targets are simple at the moment, not supporting sanitizers and; // with different libraries for each member of the product { static, PIC } x; // { hard-float, soft-float }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:24,simpl,simple,24,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['simpl'],['simple']
Usability,"// Emit ""B #20"" instruction, which jumps over the next 24 bytes (because; // register pc is 8 bytes ahead of the jump instruction by the moment CPU; // is executing it).; // By analogy to ARMAsmPrinter::emitPseudoExpansionLowering() |case ARM::B|.; // It is not clear why |addReg(0)| is needed (the last operand).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMCInstLower.cpp:262,clear,clear,262,interpreter/llvm-project/llvm/lib/Target/ARM/ARMMCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMCInstLower.cpp,1,['clear'],['clear']
Usability,// Emit CUDA/HIP static device variables referenced by host code only.; // Note we should not clear CUDADeviceVarODRUsedByHost since it is still; // needed for further handling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:94,clear,clear,94,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['clear'],['clear']
Usability,// Emit Guid,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp:8,Guid,Guid,8,interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,1,['Guid'],['Guid']
Usability,// Emit OpFunctionEnd at the end of MF and clear BBNumToRegMap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp:43,clear,clear,43,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,1,['clear'],['clear']
Usability,// Emit a simple mangled intrinsic that has 1 argument and a return type; // matching the argument type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:10,simpl,simple,10,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['simpl'],['simple']
Usability,"// Emit a simple mangled intrinsic that has 1 argument and a return type; // matching the argument type. Depending on mode, this may be a constrained; // floating-point intrinsic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:10,simpl,simple,10,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['simpl'],['simple']
Usability,// Emit a simplified prolog. We only need to emit the implicit params.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp:10,simpl,simplified,10,interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp,1,['simpl'],['simplified']
Usability,"// Emit an extension from a GR64 to a GR128. ClearEven is true; // if the high register of the GR128 value must be cleared or false if; // it's ""don't care"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:45,Clear,ClearEven,45,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,2,"['Clear', 'clear']","['ClearEven', 'cleared']"
Usability,"// Emit code to clear the bits in a record, which aren't a part of any user; // declared member, when the record is a function argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:16,clear,clear,16,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['clear'],['clear']
Usability,"// Emit code to clear the bits in a record, which aren't a part of any user; // declared member, when the record is a function return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:16,clear,clear,16,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['clear'],['clear']
Usability,"// Emit coro.end before getReturnStmt (and parameter destructors), since; // resume and destroy parts of the coroutine should not include them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp:77,resume,resume,77,interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,1,['resume'],['resume']
Usability,"// Emit following codes. It is not possible to insert multiple; // BasicBlocks in PEI pass, so we emit two pseudo instructions here.; //; // EXTEND_STACK // pseudo instrcution; // EXTEND_STACK_GUARD // pseudo instrcution; //; // EXTEND_STACK pseudo will be converted by ExpandPostRA pass into; // following instructions with multiple basic blocks later.; //; // thisBB:; // brge.l.t %sp, %sl, sinkBB; // syscallBB:; // ld %s61, 0x18(, %tp) // load param area; // or %s62, 0, %s0 // spill the value of %s0; // lea %s63, 0x13b // syscall # of grow; // shm.l %s63, 0x0(%s61) // store syscall # at addr:0; // shm.l %sl, 0x8(%s61) // store old limit at addr:8; // shm.l %sp, 0x10(%s61) // store new limit at addr:16; // monc // call monitor; // or %s0, 0, %s62 // restore the value of %s0; // sinkBB:; //; // EXTEND_STACK_GUARD pseudo will be simply eliminated by ExpandPostRA; // pass. This pseudo is required to be at the next of EXTEND_STACK; // pseudo in order to protect iteration loop in ExpandPostRA.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:838,simpl,simply,838,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['simpl'],['simply']
Usability,// Emit inline stack like; // @ GUIDmain:3 @ GUIDCaller:1 @ GUIDDirectCaller:11,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp:32,GUID,GUIDmain,32,interpreter/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp,3,['GUID'],"['GUIDCaller', 'GUIDDirectCaller', 'GUIDmain']"
Usability,"// Emit outer loop.; //; // OpenMP [2.7.1, Loop Construct, Description, table 2-1]; // When schedule(dynamic,chunk_size) is specified, the iterations are; // distributed to threads in the team in chunks as the threads request them.; // Each thread executes a chunk of iterations, then requests another chunk,; // until no chunks remain to be distributed. Each chunk contains chunk_size; // iterations, except for the last chunk to be distributed, which may have; // fewer iterations. When no chunk_size is specified, it defaults to 1.; //; // When schedule(guided,chunk_size) is specified, the iterations are assigned; // to threads in the team in chunks as the executing threads request them.; // Each thread executes a chunk of iterations, then requests another chunk,; // until no chunks remain to be assigned. For a chunk_size of 1, the size of; // each chunk is proportional to the number of unassigned iterations divided; // by the number of threads in the team, decreasing to 1. For a chunk_size; // with value k (greater than 1), the size of each chunk is determined in the; // same way, with the restriction that the chunks do not contain fewer than k; // iterations (except for the last chunk to be assigned, which may have fewer; // than k iterations).; //; // When schedule(auto) is specified, the decision regarding scheduling is; // delegated to the compiler and/or runtime system. The programmer gives the; // implementation the freedom to choose any possible mapping of iterations to; // threads in the team.; //; // When schedule(runtime) is specified, the decision regarding scheduling is; // deferred until run time, and the schedule and chunk size are taken from the; // run-sched-var ICV. If the ICV is set to auto, the schedule is; // implementation defined; //; // while(__kmpc_dispatch_next(&LB, &UB)) {; // idx = LB;; // while (idx <= UB) { BODY; ++idx;; // __kmpc_dispatch_fini_(4|8)[u](); // For ordered loops only.; // } // inner loop; // }; //; // OpenMP [2.7.1, Loop Cons",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:557,guid,guided,557,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['guid'],['guided']
Usability,// Emit probes grouped by GUID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp:26,GUID,GUID,26,interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,1,['GUID'],['GUID']
Usability,"// Emit probes grouped by GUID.; // Emit sorted descendant. InlineSite is unique for each pair, so there; // will be no ordering of Inlinee based on MCPseudoProbeInlineTree*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp:26,GUID,GUID,26,interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,1,['GUID'],['GUID']
Usability,// Emit simple atomic update operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:8,simpl,simple,8,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,1,['simpl'],['simple']
Usability,"// Emit suspend expression which roughly looks like:; //; // auto && x = CommonExpr();; // if (!x.await_ready()) {; // llvm_coro_save();; // x.await_suspend(...); (*); // llvm_coro_suspend(); (**); // }; // x.await_resume();; //; // where the result of the entire expression is the result of x.await_resume(); //; // (*) If x.await_suspend return type is bool, it allows to veto a suspend:; // if (x.await_suspend(...)); // llvm_coro_suspend();; //; // (**) llvm_coro_suspend() encodes three possible continuations as; // a switch instruction:; //; // %where-to = call i8 @llvm.coro.suspend(...); // switch i8 %where-to, label %coro.ret [ ; jump to epilogue to suspend; // i8 0, label %yield.ready ; go here when resumed; // i8 1, label %yield.cleanup ; go here when destroyed; // ]; //; // See llvm's docs/Coroutines.rst for more details.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp:713,resume,resumed,713,interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,1,['resume'],['resumed']
Usability,// Emit the GUID of the split function that the sentinel probe represents.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp:12,GUID,GUID,12,interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,1,['GUID'],['GUID']
Usability,// Emit the clearing sequence,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:12,clear,clearing,12,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['clear'],['clearing']
Usability,"// Enable feedback, if required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:10,feedback,feedback,10,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['feedback'],['feedback']
Usability,// Enable lib calls simplifications,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp:20,simpl,simplifications,20,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp,1,['simpl'],['simplifications']
Usability,// Enable vectorization per default according to the optimization level; // selected. For optimization levels that want vectorization we use the alias; // option to simplify the hasFlag logic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:165,simpl,simplify,165,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['simpl'],['simplify']
Usability,"// Encoding may be unsuccessful because of overflow. We determine success by; // checking equivalence of components before & after encoding. Alternatively,; // we could determine Success during encoding, but the current alternative is; // simpler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp:239,simpl,simpler,239,interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfoMetadata.cpp,1,['simpl'],['simpler']
Usability,// End sequence means that the next line entry could have a lower address; // that the previous entries. So we clear the previous row so we don't; // trigger the line table error about address that do not monotonically; // increase.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp:111,clear,clear,111,interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp,1,['clear'],['clear']
Usability,// EndLoc is filled with the location of the last token of the simple-asm.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:63,simpl,simple-asm,63,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,1,['simpl'],['simple-asm']
Usability,"// Ends the traversal, as we have reached a simple type (int, char, etc).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:44,simpl,simple,44,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,1,['simpl'],['simple']
Usability,// Enqueue ssub_with_overflow for simplification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:34,simpl,simplification,34,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['simpl'],['simplification']
Usability,"// Ensure `NS` is unloaded from the AST on transaction rollback, e.g. '.undo X'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:72,undo,undo,72,interpreter/cling/lib/Interpreter/Transaction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp,1,['undo'],['undo']
Usability,// Ensure depth buffer writing is enabled so it can be cleared on next render,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:55,clear,cleared,55,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['clear'],['cleared']
Usability,// Ensure loops are in simplifed form which is a pre-requisite for loop fusion; // pass. Added only for new PM since the legacy PM has already added; // LoopSimplify pass as a dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:23,simpl,simplifed,23,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['simpl'],['simplifed']
Usability,"// Ensure that any instruction in scope that gets the ""A < B"" value number; // is replaced with false.; // The leader table only tracks basic blocks, not edges. Only add to if we; // have the simple case where the edge dominates the end.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:192,simpl,simple,192,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['simpl'],['simple']
Usability,// Ensure that every BB in the function has an associated chain to simplify; // the assumptions of the remaining algorithm.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:67,simpl,simplify,67,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['simpl'],['simplify']
Usability,// Ensure that the bit width of the constants are the same and that; // the splat arguments are logical inverses as per the pattern we; // are trying to simplify.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:153,simpl,simplify,153,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['simpl'],['simplify']
Usability,// Ensure the high bits are clear to insert the offset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:28,clear,clear,28,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['clear'],['clear']
Usability,// Ensure there is a blank line after the prologue to clearly delineate it; // from later dumps.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp:54,clear,clearly,54,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,1,['clear'],['clearly']
Usability,"// Ensure this is a simple (non-atomic, non-voltile), temporal read memop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:20,simpl,simple,20,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simple']
Usability,"// Ensure we always have a single empty entry, it simplifies the emission; // logic so it doesn't need to handle the case where there are no perms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:50,simpl,simplifies,50,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,1,['simpl'],['simplifies']
Usability,// Ensure we create the AAKernelInfo AAs first and without triggering an; // update. This will make sure we register all value simplification; // callbacks before any other AA has the chance to create an AAValueSimplify; // or similar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:127,simpl,simplification,127,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['simpl'],['simplification']
Usability,"// Ensure we return a sensible simple VT here, since many callers of; // this function require it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h:31,simpl,simple,31,interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,1,['simpl'],['simple']
Usability,"// Entry does not exist if the clone of the block did not clone all; // instructions. This occurs in LoopRotate when cloning instructions; // from the old header to the old preheader. The cloned instruction may; // also be a simplified Value, not an Instruction (see LoopRotate).; // Also in LoopRotate, even when it's an instruction, due to it being; // simplified, it may be a Use rather than a Def, so we cannot use MUD as; // template. Calls coming from updateForClonedBlockIntoPred, ensure this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:225,simpl,simplified,225,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,2,['simpl'],['simplified']
Usability,// EntryBB; // |; // V; // PRegionEntryBB <- Privatization allocas are placed here.; // |; // V; // PRegionBodyBB <- BodeGen is invoked here.; // |; // V; // PRegPreFiniBB <- The block we will start finalization from.; // |; // V; // PRegionExitBB <- A common exit to simplify block collection.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:268,simpl,simplify,268,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['simpl'],['simplify']
Usability,// Error encountered for the first time.; // After takeError the error is not usable any more in ToDOrErr.; // Get a copy of the error object (any more simple solution for this?).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:78,usab,usable,78,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,2,"['simpl', 'usab']","['simple', 'usable']"
Usability,"// Evaluate a ""simple"" expression. This is any expression that _isn't_ an; // un-parenthesized binary expression.; //; // ""Simple"" expressions can be optionally bit-sliced. See evalSlicedExpr.; //; // Returns a pair containing the result of the evaluation, plus the; // expression remaining to be parsed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldChecker.cpp:15,simpl,simple,15,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldChecker.cpp,2,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"// Evaluate as many IV expressions as possible before widening any IVs. This; // forces SCEV to set no-wrap flags before evaluating sign/zero; // extension. The first time SCEV attempts to normalize sign/zero extension,; // the result becomes final. So for the most predictable results, we delay; // evaluation of sign/zero extend evaluation until needed, and avoid running; // other SCEV based analysis prior to simplifyAndExtend.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:413,simpl,simplifyAndExtend,413,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['simpl'],['simplifyAndExtend']
Usability,"// Evaluate the comparison Value < Threshold with the help of the custom; // simplification algorithm defined for this checker. Return a pair of states,; // where the first one corresponds to ""value below threshold"" and the second; // corresponds to ""value at or above threshold"". Returns {nullptr, nullptr} in; // the case when the evaluation fails.; // If the optional argument CheckEquality is true, then use BO_EQ instead of; // the default BO_LT after consistently applying the same simplification steps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ArrayBoundCheckerV2.cpp:77,simpl,simplification,77,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ArrayBoundCheckerV2.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ArrayBoundCheckerV2.cpp,2,['simpl'],['simplification']
Usability,"// Evaluation of WideAddRec ensured that the narrow expression could be; // extended outside the loop without overflow. This suggests that the wide use; // evaluates to the same expression as the extended narrow use, but doesn't; // absolutely guarantee it. Hence the following failsafe check. In rare cases; // where it fails, we simply throw away the newly created wide use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:331,simpl,simply,331,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['simpl'],['simply']
Usability,"// Even if TrueVal does not simplify, we can directly replace a use of; // CmpLHS with CmpRHS, as long as the instruction is not used anywhere; // else and is safe to speculatively execute (we may end up executing it; // with different operands, which should not cause side-effects or trigger; // undefined behavior). Only do this if CmpRHS is a constant, as; // profitability is not clear for other cases.; // FIXME: Support vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:28,simpl,simplify,28,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,2,"['clear', 'simpl']","['clear', 'simplify']"
Usability,"// Even if none of the clauses changed, we may nonetheless have understood; // that the cleanup flag is pointless. Clear it if so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:115,Clear,Clear,115,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['Clear'],['Clear']
Usability,"// Even though we accept this undocumented extension for compatibility; // reasons, the additional integer argument does not actually change; // the behaviour of the '.ent' directive, so we would like to discourage; // its use. We do this by not referring to the extended version in; // error messages which are not directly related to its use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:30,undo,undocumented,30,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['undo'],['undocumented']
Usability,"// Even though, for simplicity, parentheses and unary logical-NOT operators; // are considered part of their underlying condition for both MC/DC and; // branch coverage, the condition IDs themselves are assigned and tracked; // using the underlying condition itself. This is done solely for; // consistency since parentheses and logical-NOTs are ignored when checking; // whether the condition is actually an instrumentable condition. This can; // also make debugging a bit easier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp:20,simpl,simplicity,20,interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,1,['simpl'],['simplicity']
Usability,"// Every active variable mapping for NewLoc will be cleared, no; // need to track individual variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:52,clear,cleared,52,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['clear'],['cleared']
Usability,// Every argument might be simplified. We have to go through the; // Attributor interface though as outside AAs can register custom; // simplification callbacks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:27,simpl,simplified,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,2,['simpl'],"['simplification', 'simplified']"
Usability,// Every function might be simplified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:27,simpl,simplified,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['simpl'],['simplified']
Usability,// Examine all summaries for this GUID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:34,GUID,GUID,34,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['GUID'],['GUID']
Usability,"// Exception flags (we don't do resume)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:32,resume,resume,32,interpreter/cling/lib/Utils/PlatformWin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp,1,['resume'],['resume']
Usability,// Exception has to be cleared with eret.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.cpp:23,clear,cleared,23,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.cpp,1,['clear'],['cleared']
Usability,"// Exception rule for `g`, we don't have clear version scheme for that on; // ISA spec.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/RISCVISAInfo.cpp:41,clear,clear,41,interpreter/llvm-project/llvm/lib/Support/RISCVISAInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/RISCVISAInfo.cpp,1,['clear'],['clear']
Usability,// Exclusion of non-overlapping ranges makes some checks simpler; // later in this function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBlockRanges.cpp:57,simpl,simpler,57,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBlockRanges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBlockRanges.cpp,1,['simpl'],['simpler']
Usability,// Expand PseudoAddTPRel to a simple ADD with the correct relocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMCCodeEmitter.cpp:30,simpl,simple,30,interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMCCodeEmitter.cpp,1,['simpl'],['simple']
Usability,// Expand the result by simply replacing it with the equivalent; // non-overflow-checking operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:24,simpl,simply,24,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,2,['simpl'],['simply']
Usability,"// Expand to ""a < b ? a : b"" etc. Prefer ge/le if that simplifies; // the compare.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:55,simpl,simplifies,55,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['simpl'],['simplifies']
Usability,// Expanding to the strong ATOMIC_CMP_SWAP node means we can determine; // success simply by comparing the loaded value against the ingoing; // comparison.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:83,simpl,simply,83,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['simpl'],['simply']
Usability,// Expect that any GUID value had a value Id assigned by an; // earlier call to assignValueId.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:19,GUID,GUID,19,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,2,['GUID'],['GUID']
Usability,"// Expect the first operand to be a section name. After that, a tuple of; // constants may appear, which will simply be emitted into the current; // section (the user of MD_pcsections decides the format of encoded data).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:110,simpl,simply,110,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['simpl'],['simply']
Usability,"// Explicit add hot edges to enforce importing for designated GUIDs for; // sample PGO, to enable the same inlines as the profiled optimized binary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp:62,GUID,GUIDs,62,interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp,1,['GUID'],['GUIDs']
Usability,// Explicit move operations to ensure the container is cleared post-move; // otherwise it could lead to a double-delete in the case of moving of an; // InputArgList which deletes the contents of the container. If we could fix; // up the ownership here (delegate storage/ownership to the derived class so; // it can be a container of unique_ptr) this would be simpler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Option/ArgList.h:55,clear,cleared,55,interpreter/llvm-project/llvm/include/llvm/Option/ArgList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Option/ArgList.h,2,"['clear', 'simpl']","['cleared', 'simpler']"
Usability,// Explicitly clear VisitOrder since we might not notice it is stale.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ModuleManager.cpp:14,clear,clear,14,interpreter/llvm-project/clang/lib/Serialization/ModuleManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ModuleManager.cpp,1,['clear'],['clear']
Usability,"// Explicitly clear the 'is_zero_poison' flag. It's always valid to go from; // true to false on this flag, so we can replace it for all users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:14,clear,clear,14,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['clear'],['clear']
Usability,// Explicitly clear the high order bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:14,clear,clear,14,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['clear'],['clear']
Usability,// Explicitly remove DIAssignID metadata to clear up ID -> Instruction(s); // mapping in LLVMContext.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instruction.cpp:44,clear,clear,44,interpreter/llvm-project/llvm/lib/IR/Instruction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instruction.cpp,1,['clear'],['clear']
Usability,"// Explicitly replace the inttoptr (rather than inserting a ptrtoint) here,; // to make sure another transform can't undo it in the meantime.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp:117,undo,undo,117,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,2,['undo'],['undo']
Usability,// Exported default constructors either have a simple call-site where they use; // the typical calling convention and have a single 'this' pointer for an; // argument -or- they get a wrapper function which appropriately thunks to the; // real default constructor. This thunk is the default constructor closure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:47,simpl,simple,47,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,1,['simpl'],['simple']
Usability,// Exposed for resource monitoring & error feedback via renderer.info:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:43,feedback,feedback,43,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['feedback'],['feedback']
Usability,"// ExpressionChangedStart - Non-null if the rewritten expression differs from; // the original in some non-trivial way, requiring the clearing of optional; // flags. Flags are cleared from the operator in ExpressionChangedStart up to; // ExpressionChangedEnd inclusive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:134,clear,clearing,134,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,2,['clear'],"['cleared', 'clearing']"
Usability,"// Extend the source operand to 32 bits and prepare it for the inner loop.; // ATOMIC_SWAPW uses RISBG to rotate the field left, but all other; // operations require the source to be shifted in advance. (This shift; // can be folded if the source is constant.) For AND and NAND, the lower; // bits must be set, while for other opcodes they should be left clear.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:355,clear,clear,355,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['clear'],['clear']
Usability,// Extend: Clearly extending first and adding later is different; // to adding first and extending later in all extended bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:11,Clear,Clearly,11,interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,1,['Clear'],['Clearly']
Usability,// Extended source must be a simple vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:29,simpl,simple,29,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['simpl'],['simple']
Usability,"// Extended the source vector to the same length and then shuffle it; // into the destination.; // FIXME: since we're shuffling with undef, can we just use the indices; // into that? This could be simpler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:197,simpl,simpler,197,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['simpl'],['simpler']
Usability,"// Extends on PySequence_Check() to determine whether an object can be iterated; // over (technically, all objects can b/c of C++ pointer arithmetic, hence this; // check isn't 100% accurate, but neither is PySequence_Check()).; // Note: simply having the iterator protocol does not constitute a sequence, bc; // PySequence_GetItem() would fail.; // default to PySequence_Check() if called with a non-C++ object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:238,simpl,simply,238,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,1,['simpl'],['simply']
Usability,"// Extern weak functions can sometimes be null at execution time.; // Code will sometimes check if an extern weak function is null.; // This could look something like:; // declare extern_weak i8 @my_func(i8); // br i1 icmp ne (i8 (i8)* @my_func, i8 (i8)* null), label %use_my_func,; // label %avoid_my_func; // The @""dfsw$my_func"" wrapper is never null, so if we replace this use; // in the comparison, the icmp will simplify to false and we have; // accidentally optimized away a null check that is necessary.; // This can lead to a crash when the null extern_weak my_func is called.; //; // To prevent (the most common pattern of) this problem,; // do not replace uses in comparisons with the wrapper.; // We definitely want to replace uses in call instructions.; // Other uses (e.g. store the function address somewhere) might be; // called or compared or both - this case may not be handled correctly.; // We will default to replacing with wrapper in cases we are unsure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:417,simpl,simplify,417,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['simpl'],['simplify']
Usability,"// Extract generic types and non-generic types separately, to keep; // gentypes at the end of the enum which simplifies the special handling; // for gentypes in SemaLookup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp:109,simpl,simplifies,109,interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp,1,['simpl'],['simplifies']
Usability,// Extract the exception object from the ResumeInst and add it to the PHI node; // that feeds the _Unwind_Resume call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp:41,Resume,ResumeInst,41,interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp,1,['Resume'],['ResumeInst']
Usability,// Extract the mantissa by clearing the top 12 bits (sign + exponent).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:27,clear,clearing,27,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['clear'],['clearing']
Usability,// Extracts from pointers can be handled only if they are really just; // simple integers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:74,simpl,simple,74,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['simpl'],['simple']
Usability,// FIXME (Alex L): Get a more user-friendly type if needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp:30,user-friendly,user-friendly,30,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp,1,['user-friendly'],['user-friendly']
Usability,"// FIXME : Should not reduce the fine granulated debug options to a simple.; // -g",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp:68,simpl,simple,68,interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalCUDADeviceCompiler.cpp,1,['simpl'],['simple']
Usability,// FIXME Set ClearDSOLocalOnDeclarations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:13,Clear,ClearDSOLocalOnDeclarations,13,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,3,['Clear'],['ClearDSOLocalOnDeclarations']
Usability,// FIXME These don't have an instruction index. Not clear we have enough; // info to decide whether to do this replacement or not. For now do it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:52,clear,clear,52,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['clear'],['clear']
Usability,// FIXME support simplification from non-integers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SValBuilder.cpp:17,simpl,simplification,17,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SValBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SValBuilder.cpp,1,['simpl'],['simplification']
Usability,"// FIXME: Add statistics about the number of ambiguous statements encountered; // and how they were resolved (number of declarations+number of expressions).; // Ok, we have a simple-type-specifier/typename-specifier followed by a '(',; // or an identifier which doesn't resolve as anything. We need tentative; // parsing...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:175,simpl,simple-type-specifier,175,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['simpl'],['simple-type-specifier']
Usability,"// FIXME: After switching to the new passmanager, simplify the logic below; // by checking only the callsite hotness/coldness as we will reliably; // have local profile information.; //; // Callsite hotness and coldness can be determined if sample profile is; // used (which adds hotness metadata to calls) or if caller's; // BlockFrequencyInfo is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:50,simpl,simplify,50,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simplify']
Usability,"// FIXME: All of this stuff should be part of the target interface; // somehow. It is currently here because it is not clear how to factor; // the targets to support this, since the Targets currently live in a; // layer below types n'stuff.; /// ABIInfo - Target specific hooks for defining how a type should be; /// passed or returned from functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfo.h:119,clear,clear,119,interpreter/llvm-project/clang/lib/CodeGen/ABIInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfo.h,1,['clear'],['clear']
Usability,// FIXME: Change the GVSummaryMapTy to hold ValueInfo instead of GUID; // so this map look up (and possibly others) can be avoided.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:65,GUID,GUID,65,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,1,['GUID'],['GUID']
Usability,"// FIXME: Consider assigning over existing elements, rather than clearing &; // re-initializing them - for all assign(...) variants.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:65,clear,clearing,65,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,1,['clear'],['clearing']
Usability,"// FIXME: Consider the time-space tradeoff of just storing the unit pointer; // in the ConcreteEntities list, rather than looking it up again here.; // DIE::getUnit isn't simple - it walks parent pointers, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:171,simpl,simple,171,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['simpl'],['simple']
Usability,"// FIXME: Currently the calls which may access the thread id may; // be considered as not accessing the memory. But this is; // problematic for coroutines, since coroutines may resume in a; // different thread. So we disable the optimization here for the; // correctness. However, it may block many other correct; // optimizations. Revert this one when we detect the memory; // accessing kind more precisely.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:177,resume,resume,177,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,4,['resume'],['resume']
Usability,// FIXME: Currently we allocate EC each time because we don't have; // access to the set representation on which to call clear(). Should; // consider adding a clear() method to the EquivalenceClasses class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp:121,clear,clear,121,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp,2,['clear'],['clear']
Usability,"// FIXME: Currently we simply check if std::sort is used with pointer-like; // elements. This approach can have a big false positive rate. Using std::sort,; // std::unique and then erase is common technique for deduplicating a container; // (which in some cases might even be quicker than using, let's say std::set).; // In case a container contains arbitrary memory addresses (e.g. multiple; // things give different stuff but might give the same thing multiple times); // which we don't want to do things with more than once, we might use; // sort-unique-erase and the sort call will emit a report.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/PointerSortingChecker.cpp:23,simpl,simply,23,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/PointerSortingChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/PointerSortingChecker.cpp,1,['simpl'],['simply']
Usability,"// FIXME: Currently, the number of instructions in a function regardless of; // our ability to simplify them during inline to constants or dead code,; // are actually used by the vector bonus heuristic. As long as that's true,; // we have to special case debug intrinsics here to prevent differences in; // inlining due to debug symbols. Eventually, the number of unsimplified; // instructions shouldn't factor into the cost computation, but until then,; // hack around it here.; // Similarly, skip pseudo-probes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:95,simpl,simplify,95,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simplify']
Usability,"// FIXME: Do not diagnose inaccessible deduction guides. The standard isn't; // clear on this, but they're not found by name so access does not apply.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:49,guid,guides,49,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,"['clear', 'guid']","['clear', 'guides']"
Usability,"// FIXME: Dropping the reference type on the type into makes it; // impossible to correctly implement catch-by-reference; // semantics for pointers. Unfortunately, this is what all; // existing compilers do, and it's not clear that the standard; // personality routine is capable of doing this right. See C++ DR 388:; // http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#388",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:221,clear,clear,221,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,1,['clear'],['clear']
Usability,"// FIXME: FastISel cannot handle non-simple types yet, including 128-bit FP; // types, which is passed through vector register. Skip these types and; // fallback to default SelectionDAG based selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:37,simpl,simple,37,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['simpl'],['simple']
Usability,"// FIXME: Handle sub-registers in addDefsFromCopies. The problem is that; // if the original location for example is %vreg0:sub_hi, and we find a; // full register copy in addDefsFromCopies (at the moment it only; // handles full register copies), then we must add the sub1 sub-register; // index to the new location. However, that is only possible if the new; // virtual register is of the same regclass (or if there is an; // equivalent sub-register in that regclass). For now, simply skip; // handling copies if a sub-register is involved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:480,simpl,simply,480,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['simpl'],['simply']
Usability,"// FIXME: Have Ops be (ValueEntry, Multiplicity) pairs, simplifying this.; // Compute the sum of powers of simplifiable factors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:56,simpl,simplifying,56,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,2,['simpl'],"['simplifiable', 'simplifying']"
Usability,// FIXME: Horrible hack for sxtw and uxtw with Wn src and Xd dst operands.; // InstAlias can't quite handle this since the reg classes aren't; // subclasses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:37,ux,uxtw,37,interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,1,['ux'],['uxtw']
Usability,"// FIXME: I would like to be convinced that this code is worth being as; // complicated as it is, binary search isn't that slow.; //; // If it is worth being optimized, then in my opinion it could be more; // performant, simpler, and more obviously correct by just ""galloping"" outward; // from the queried file position. In fact, this could be incorporated into a; // generic algorithm such as lower_bound_with_hint.; //; // If someone gives me a test case where this matters, and I will do it! - DWD; // If the previous query was to the same file, we know both the file pos from; // that query and the line number returned. This allows us to narrow the; // search space from the entire file to something near the match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:221,simpl,simpler,221,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,1,['simpl'],['simpler']
Usability,"// FIXME: Ideally we would retain the original GUID in some fashion on the; // function (e.g. as metadata), but for now do our best to locate the; // summary without that information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:47,GUID,GUID,47,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['GUID'],['GUID']
Usability,"// FIXME: If either type is dependent, we skip the check. This isn't; // correct, since during deduction we're supposed to have replaced each; // template parameter with some unique (non-dependent) placeholder.; // FIXME: If the argument type contains 'auto', we carry on and fail the; // type check in order to force specific types to be more specialized than; // 'auto'. It's not clear how partial ordering with 'auto' is supposed to; // work. Similarly for CTAD, when comparing 'A<x>' against 'A'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:382,clear,clear,382,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['clear'],['clear']
Usability,// FIXME: If the operand types don't match the type of the divide; // then don't attempt this transform. The code below doesn't have the; // logic to deal with a signed divide and an unsigned compare (and; // vice versa). This is because (x /s C2) <s C produces different; // results than (x /s C2) <u C or (x /u C2) <s C or even; // (x /u C2) <u C. Simply casting the operands and result won't; // work. :( The if statement below tests that condition and bails; // if it finds it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:350,Simpl,Simply,350,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['Simpl'],['Simply']
Usability,"// FIXME: If there's no umbrella header, we could probably scan the; // framework to load *everything*. But, it's not clear that this is a good; // idea.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ModuleMap.cpp:118,clear,clear,118,interpreter/llvm-project/clang/lib/Lex/ModuleMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ModuleMap.cpp,1,['clear'],['clear']
Usability,"// FIXME: If we wanted to be really friendly we would show why the match; // failed, as it can be hard to spot simple one character differences.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:111,simpl,simple,111,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['simpl'],['simple']
Usability,// FIXME: Incrementally update loop-simplify,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:36,simpl,simplify,36,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['simpl'],['simplify']
Usability,// FIXME: Injecting into the DAGISel pipeline seems to cause issues with; // analyses needing to be re-run. This can result in being unable to; // schedule passes (particularly with 'Function Alias Analysis; // Results'). It's not entirely clear why but AFAICT this seems to be; // due to one FunctionPassManager not being able to use analyses from a; // previous one. As we're injecting a ModulePass we break the usual; // pass manager into two. GlobalISel with the fallback path disabled; // and -run-pass seem to be unaffected. The majority of GlobalISel; // testing uses -run-pass so this probably isn't too bad.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:240,clear,clear,240,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['clear'],['clear']
Usability,"// FIXME: Instead of these case distinctions, we would ideally want to be able; // to simply use `Environment::createObject()` here, the same way that we do; // this in `TransferVisitor::VisitInitListExpr()`. However, this would require; // us to be able to build a list of fields that we then use to initialize an; // `RecordStorageLocation` -- and the problem is that, when we get here,; // the `RecordStorageLocation` already exists. We should explore if there's; // anything that we can do to change this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/TypeErasedDataflowAnalysis.cpp:86,simpl,simply,86,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/TypeErasedDataflowAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/TypeErasedDataflowAnalysis.cpp,1,['simpl'],['simply']
Usability,// FIXME: Is it possible to create an ExprWithCleanups that produces a; // bitfield lvalue or some other non-simple lvalue?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:109,simpl,simple,109,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['simpl'],['simple']
Usability,"// FIXME: Is this actually dangerous as WritingAnLLVMPass.html claims? Seems; // that, short of multithreaded LLVM, it should be safe; all that is; // necessary is that a simple Module::iterator loop not be invalidated.; // Appending to the GlobalVariable list is safe in that sense.; //; // All of the output passes emit globals last. The ExecutionEngine; // explicitly supports adding globals to the module after; // initialization.; //; // Still, if it isn't deemed acceptable, then this transformation needs; // to be a ModulePass (which means it cannot be in the 'llc' pipeline; // (which uses a FunctionPassManager (which segfaults (not asserts) if; // provided a ModulePass))).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShadowStackGCLowering.cpp:171,simpl,simple,171,interpreter/llvm-project/llvm/lib/CodeGen/ShadowStackGCLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShadowStackGCLowering.cpp,1,['simpl'],['simple']
Usability,// FIXME: It is not clear whether values in the range should be; // compared as signed or unsigned values. The partially; // implemented changes that used this format in the past used; // unsigned comparisons.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:20,clear,clear,20,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['clear'],['clear']
Usability,"// FIXME: It isn't clear if the spec saying 'condition' means the same as; // it does in an if/while/etc (See ParseCXXCondition), however as it was; // written with Fortran/C in mind, we're going to assume it just means an; // 'expression evaluating to boolean'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp:19,clear,clear,19,interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,1,['clear'],['clear']
Usability,"// FIXME: It isn't entirely clear whether incomplete atomic types; // are allowed or not; for simplicity, ban them for the moment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:28,clear,clear,28,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,2,"['clear', 'simpl']","['clear', 'simplicity']"
Usability,"// FIXME: It would be good to handle other obvious no-alias cases here, but; // it isn't clear how to do so reasonably without building a small version; // of BasicAA into this code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/GlobalsModRef.cpp:89,clear,clear,89,interpreter/llvm-project/llvm/lib/Analysis/GlobalsModRef.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/GlobalsModRef.cpp,1,['clear'],['clear']
Usability,"// FIXME: It would be nice to eventually make this diagnostic more clear,; // e.g., by referencing the original declaration or by saying *why* this; // reference is outside the range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp:67,clear,clear,67,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,1,['clear'],['clear']
Usability,"// FIXME: It would be nice to eventually make this diagnostic more clear,; // e.g., by referencing the original declaration or by saying *why* this; // reference is outside the range.; // Generate a report for this bug.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ArrayBoundChecker.cpp:67,clear,clear,67,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ArrayBoundChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ArrayBoundChecker.cpp,1,['clear'],['clear']
Usability,"// FIXME: It's not clear how deduction of a parameter of reference; // type from an argument (of non-reference type) should be performed.; // For now, we just remove reference types from both sides and let; // the final check for matching types sort out the mess.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:19,clear,clear,19,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['clear'],['clear']
Usability,// FIXME: It's not clear that a single instruction is an accurate model for; // the inline cost of a catchret instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['clear'],['clear']
Usability,// FIXME: It's not clear that a single instruction is an accurate model for; // the inline cost of a cleanupret instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['clear'],['clear']
Usability,// FIXME: It's not clear that a single instruction is an accurate model for; // the inline cost of a resume instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,2,"['clear', 'resume']","['clear', 'resume']"
Usability,"// FIXME: It's not clear that the proposal meant to allow file-scope; // structured bindings, but it does.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h:19,clear,clear,19,interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h,1,['clear'],['clear']
Usability,"// FIXME: It's not clear what, if any, default this should have - perhaps a; // null return could mean 'no location' & we should just do that here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp,1,['clear'],['clear']
Usability,"// FIXME: Iterating over the instruction stream is unnecessary. We can simply; // iterate over the vreg use list, which at this point only contains machine; // operands for which eliminateFrameIndex need a new scratch reg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterScavenging.cpp:71,simpl,simply,71,interpreter/llvm-project/llvm/lib/CodeGen/RegisterScavenging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterScavenging.cpp,1,['simpl'],['simply']
Usability,// FIXME: Just look up as a function for now. Overly simple of course.; // Work in progress.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h:53,simpl,simple,53,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,2,['simpl'],['simple']
Usability,// FIXME: Likewise for uxt[bh] with a Xd dst operand,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:23,ux,uxt,23,interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,1,['ux'],['uxt']
Usability,// FIXME: Look for a way to use RecordDecl for simple structs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:47,simpl,simple,47,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['simpl'],['simple']
Usability,// FIXME: ObjCImageInfos and HeaderAddrs need to be cleared when; // JITDylibs are removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h:52,clear,cleared,52,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h,1,['clear'],['cleared']
Usability,"// FIXME: On most platforms, `Target`'s component symbols are labels from; // having been simplified during evaluation, but on Mach-O they can be; // variables due to PR19203. This, and the line below for `B` can be; // restored to call `getLabelOffset` when PR19203 is fixed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCFragment.cpp:90,simpl,simplified,90,interpreter/llvm-project/llvm/lib/MC/MCFragment.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCFragment.cpp,1,['simpl'],['simplified']
Usability,"// FIXME: Once MSVC implements c++17 order of evaluation rules for calls; // this can be simplified to; // S->linkPhase2(std::move(S), std::move(AR));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkGeneric.cpp:89,simpl,simplified,89,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkGeneric.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkGeneric.cpp,2,['simpl'],['simplified']
Usability,// FIXME: Once MSVC implements c++17 order of evaluation rules for calls; // this can be simplified. See below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkGeneric.cpp:89,simpl,simplified,89,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkGeneric.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkGeneric.cpp,1,['simpl'],['simplified']
Usability,"// FIXME: Once targets reserve registers instead of removing them from the; // allocation order, we can simply use begin/end here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterClassInfo.cpp:104,simpl,simply,104,interpreter/llvm-project/llvm/lib/CodeGen/RegisterClassInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterClassInfo.cpp,1,['simpl'],['simply']
Usability,// FIXME: Only handle *simple* calls for now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:23,simpl,simple,23,interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,1,['simpl'],['simple']
Usability,"// FIXME: P0091R3 (erroneously) does not permit class template argument; // deduction in conditions, for-init-statements, and other declarations; // that are not simple-declarations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:162,simpl,simple-declarations,162,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['simpl'],['simple-declarations']
Usability,"// FIXME: Perform ""exact type"" matching first, per CWG discussion?; // Or implement this via an implied 'T(T) -> T' deduction guide?; // FIXME: Do we need/want a std::initializer_list<T> special case?; // Look up deduction guides, including those synthesized from constructors.; //; // C++1z [over.match.class.deduct]p1:; // A set of functions and function templates is formed comprising:; // - For each constructor of the class template designated by the; // template-name, a function template [...]; // - For each deduction-guide, a function or function template [...]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:126,guid,guide,126,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,3,['guid'],"['guide', 'guides']"
Usability,"// FIXME: Remove this, it's not clear what it means. (Which template; // specialization kind?)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:32,clear,clear,32,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['clear'],['clear']
Usability,"// FIXME: Share logic with ExtVectorElementExpr::containsDuplicateElements,; // see FIXME there.; //; // FIXME: This logic can be greatly simplified by splitting it along; // halving/not halving and reworking the component checking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp:138,simpl,simplified,138,interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,1,['simpl'],['simplified']
Usability,"// FIXME: Should extension allow i-c-e extension expressions in its scope?; // If so, we could clear the diagnostic ID.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:95,clear,clear,95,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['clear'],['clear']
Usability,// FIXME: Should this get moved into SimplifyDemandedBits by saying we don't; // demand the sign bit (and many others) here??,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:37,Simpl,SimplifyDemandedBits,37,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['Simpl'],['SimplifyDemandedBits']
Usability,// FIXME: Simplify,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp:10,Simpl,Simplify,10,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp,1,['Simpl'],['Simplify']
Usability,// FIXME: Simplify printing and remove copying here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/StackSafetyAnalysis.cpp:10,Simpl,Simplify,10,interpreter/llvm-project/llvm/lib/Analysis/StackSafetyAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/StackSafetyAnalysis.cpp,1,['Simpl'],['Simplify']
Usability,// FIXME: Simplify the complex 'AST dump' command line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:10,Simpl,Simplify,10,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Simpl'],['Simplify']
Usability,"// FIXME: Simplify these by combining InlineSrcMgr & SrcMgr.; // For MC-only execution, only SrcMgr is used;; // For non MC-only execution, InlineSrcMgr is only ctor'd if there is; // inline asm in the IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCContext.cpp:10,Simpl,Simplify,10,interpreter/llvm-project/llvm/lib/MC/MCContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCContext.cpp,1,['Simpl'],['Simplify']
Usability,"// FIXME: The C++ standard does not clearly specify what happens in the; // case where the object type is dependent, and implementations vary. In; // Clang, we treat a name after a . or -> as a template-name if lookup; // finds a non-dependent member or member of the current instantiation that; // is a type template, or finds no such members and lookup in the context; // of the postfix-expression finds a type template. In the latter case, the; // name is nonetheless dependent, and we may resolve it to a member of an; // unknown specialization when we come to instantiate the template.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:36,clear,clearly,36,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['clear'],['clearly']
Usability,"// FIXME: The C++0x standard does not clearly say this is ill-formed,; // but we can't reasonably accept it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:38,clear,clearly,38,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['clear'],['clearly']
Usability,"// FIXME: The C++11 standard doesn't actually say that this is a; // discarded-value expression, but it clearly should be.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp:104,clear,clearly,104,interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,1,['clear'],['clearly']
Usability,"// FIXME: The ScheduleDAG currently loses information about which of a; // node's values is consumed by each dependence. Consequently, if the node; // defines multiple register classes, we don't know which to pressurize; // here. Instead the following loop consumes the register defs in an; // arbitrary order. At least it handles the common case of clustered loads; // to the same class. For precise liveness, each SDep needs to indicate the; // result number. But that tightly couples the ScheduleDAG with the; // SelectionDAG making updates tricky. A simpler hack would be to attach a; // value type or register class to SDep.; //; // The most important aspect of register tracking is balancing the increase; // here with the reduction further below. Note that this SU may use multiple; // defs in PredSU. The can't be determined here, but we've already; // compensated by reducing NumRegDefsLeft in PredSU during; // ScheduleDAGSDNodes::AddSchedEdges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:554,simpl,simpler,554,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['simpl'],['simpler']
Usability,// FIXME: The cases in which we allow explicit conversions for constructor; // arguments never consider calling a constructor template. It's not clear; // that is correct.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:145,clear,clear,145,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['clear'],['clear']
Usability,"// FIXME: The expression inside a CXXDefaultArgExpr is owned by the; // called function's declaration, not by the caller. If we simply add; // this expression to the CFG, we could end up with the same Expr; // appearing multiple times (PR13385).; //; // It's likewise possible for multiple CXXDefaultInitExprs for the same; // expression to be used in the same function (through aggregate; // initialization).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:128,simpl,simply,128,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['simpl'],['simply']
Usability,// FIXME: The following are being used in 'SimpleSValBuilder' and in; // 'ArrayBoundChecker::checkLocation' because there is no symbol to; // represent the regions more appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:43,Simpl,SimpleSValBuilder,43,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp,1,['Simpl'],['SimpleSValBuilder']
Usability,"// FIXME: The hack below doesn't work for bitfields. For now, we simply; // place all bitfields at offset 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:65,simpl,simply,65,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,1,['simpl'],['simply']
Usability,"// FIXME: There's no rule against this, but there are also no rules that; // would actually make it usable, so we reject it for now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:100,usab,usable,100,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['usab'],['usable']
Usability,"// FIXME: This code can be simplified by introducing a simple value class for; // Class pairs with appropriate constructor methods for the various; // situations.; // FIXME: Some of the split computations are wrong; unaligned vectors; // shouldn't be passed in registers for example, so there is no chance they; // can straddle an eightbyte. Verify & simplify.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:27,simpl,simplified,27,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,3,['simpl'],"['simple', 'simplified', 'simplify']"
Usability,// FIXME: This code is overly simple and should be merged with other global; // handling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:30,simpl,simple,30,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['simpl'],['simple']
Usability,"// FIXME: This doesn't have to have any specific name, just any randomly; // named and numbered local label started with 'l' would work. Simplify; // GetJTISymbol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:137,Simpl,Simplify,137,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['Simpl'],['Simplify']
Usability,"// FIXME: This implementation limits OverflowOffset to kParamTLSSize, so we; // don't know real overflow size and can't clear shadow beyond kParamTLSSize.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:120,clear,clear,120,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['clear'],['clear']
Usability,// FIXME: This is a bit conservative/simple - it emits negative values always; // sign extended to 64 bits rather than minimizing the number of bytes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp:37,simpl,simple,37,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,1,['simpl'],['simple']
Usability,"// FIXME: This is a simplified version of what's in CFRefCount.cpp -- it makes; // some assumptions about the value that CFRefCount can't. Even so, it should; // probably be refactored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp:20,simpl,simplified,20,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,1,['simpl'],['simplified']
Usability,// FIXME: This is a ugly hack. Undo command checks its availability by looking; // at the size of the PTU list. However we have parsed something in the; // beginning of the REPL so we have to mark them as 'Irrevocable'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/Interpreter.cpp:31,Undo,Undo,31,interpreter/llvm-project/clang/lib/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/Interpreter.cpp,1,['Undo'],['Undo']
Usability,"// FIXME: This is broken. CXXRecordDecl::getMostRecentDecl() returns a; // different ""most recent"" declaration from this function for the same; // declaration, because we don't override getMostRecentDeclImpl(). But; // it's not clear that we should override that, because the most recent; // declaration as a CXXRecordDecl sometimes is the injected-class-name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h:228,clear,clear,228,interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,1,['clear'],['clear']
Usability,"// FIXME: This is extremely conservative. This really needs to use an; // explicit list with a clear explanation for why each realocation needs to; // point to the symbol, not to the section.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp:95,clear,clear,95,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMELFObjectWriter.cpp,1,['clear'],['clear']
Usability,"// FIXME: This is overly conservative. Dynamic allocas are inefficient for; // a variety of reasons, and so we would like to not inline them into; // functions which don't currently have a dynamic alloca. This simply; // disables inlining altogether in the presence of a dynamic alloca.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:210,simpl,simply,210,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simply']
Usability,"// FIXME: This is poor design, the OCD should have a pointer to the category; // decl. Additionally, note that Category can be null for the @implementation; // w/o an @interface case. Sema should just create one for us as it does for; // @implementation so everyone else can live life under a clear blue sky.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:293,clear,clear,293,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['clear'],['clear']
Usability,// FIXME: This is very simple and misses some cases which should be handled when; // motivating examples are found.; //; // The copy rewriting logic should look at uses as well as defs and be able to; // eliminate copies across blocks.; //; // Later copies that are subregister extracts will also not be eliminated since; // only the first copy is considered.; //; // e.g.; // %1 = COPY %0; // %2 = COPY %0:sub1; //; // Should replace %2 uses with %1:sub1,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:23,simpl,simple,23,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['simpl'],['simple']
Usability,"// FIXME: This logic is meant to generate exactly the same output as; // Darwin's classic dsymutil. There is a nicer way to implement this; // by simply putting all the relocated line info in NewRows and simply; // sorting NewRows before passing it to emitLineTableForUnit. This; // should be correct as sequences for a function should stay; // together in the sorted output. There are a few corner cases that; // look suspicious though, and that required to implement the logic; // this way. Revisit that once initial validation is finished.; // Iterate over the object file line info and extract the sequences; // that correspond to linked functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:146,simpl,simply,146,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,4,['simpl'],['simply']
Usability,// FIXME: This needs to be implemented to correctly handle highly aligned; // stack objects. For now we simply return the incoming FP. Refer D53541; // for more details.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:104,simpl,simply,104,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simply']
Usability,"// FIXME: This only handles the simplest case, where the source object; // is passed directly as the first argument to the constructor.; // This should also handle stepping though implicit casts and; // and conversion sequences which involve two steps, with a; // conversion operator followed by a converting constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:32,simpl,simplest,32,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['simpl'],['simplest']
Usability,"// FIXME: This only handles the simplest case, where the source object; // is passed directly as the first argument to the constructor.; // This should also handle stepping though implicit casts and; // conversion sequences which involve two steps, with a; // conversion operator followed by a converting constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp:32,simpl,simplest,32,interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,1,['simpl'],['simplest']
Usability,"// FIXME: This upgrade is done during linking to support the C API. Once the; // old form is deprecated, we should move this upgrade to; // llvm::UpgradeGlobalVariable() and simplify the logic here and in; // Mapper::mapAppendingVariable() in ValueMapper.cpp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:174,simpl,simplify,174,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,1,['simpl'],['simplify']
Usability,"// FIXME: This will also mark enums with braces in the arguments to enum; // constants as ""not simple"". This is probably fine in practice, though.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:95,simpl,simple,95,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['simpl'],['simple']
Usability,// FIXME: Unify the parsing codepaths for condition variables and; // simple-declarations so that we don't need to eagerly figure out which; // kind we have here. (Just parse init-declarators until we reach a; // semicolon or right paren.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:70,simpl,simple-declarations,70,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['simpl'],['simple-declarations']
Usability,// FIXME: Use constant-folding in CFG construction to simplify this; // case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CoreEngine.cpp:54,simpl,simplify,54,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CoreEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CoreEngine.cpp,1,['simpl'],['simplify']
Usability,"// FIXME: Using the instsimplify logic directly for this is inefficient; // because we have to continually rebuild the argument list even when no; // simplifications can be performed. Until that is fixed with remapping; // inside of instsimplify, directly constant fold calls here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:150,simpl,simplifications,150,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['simpl'],['simplifications']
Usability,"// FIXME: We also need to handle big values here, but it's; // not clear how we can excercise this code path yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/CodeViewRecordIO.cpp:67,clear,clear,67,interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/CodeViewRecordIO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/CodeViewRecordIO.cpp,1,['clear'],['clear']
Usability,// FIXME: We could probably with some care handle both volatile and atomic; // stores here but it isn't clear that this is important.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:104,clear,clear,104,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,2,['clear'],['clear']
Usability,// FIXME: We could probably with some care handle both volatile and ordered; // atomic loads here but it isn't clear that this is important.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:111,clear,clear,111,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,1,['clear'],['clear']
Usability,// FIXME: We could probably with some care handle both volatile and ordered; // atomic stores here but it isn't clear that this is important.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:112,clear,clear,112,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,1,['clear'],['clear']
Usability,"// FIXME: We currently cannot assert that temporaries are clear, because; // lifetime extended temporaries are not always modelled correctly. In some; // cases when we materialize the temporary, we do; // createTemporaryRegionIfNeeded(), and the region changes, and also the; // respective destructor becomes automatic from temporary. So for now clean up; // the state manually before asserting. Ideally, this braced block of code; // should go away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:58,clear,clear,58,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,1,['clear'],['clear']
Usability,// FIXME: We currently don't use control-dependence but simply include all; // blocks (possibly empty at the end) and let simplifycfg mostly clean this; // up.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp:56,simpl,simply,56,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,2,['simpl'],"['simplifycfg', 'simply']"
Usability,"// FIXME: We don't have a location to use here. Using the class's; // location maintains the fiction that we declare all special members; // with the class, but (1) it's not clear that lying about that helps our; // users understand what's going on, and (2) there may be outer contexts; // on the stack (some of which are relevant) and printing them exposes; // our lies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:174,clear,clear,174,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['clear'],['clear']
Usability,"// FIXME: We must leave subregisters of live super registers as live, so that; // we don't clear out the register tracking information for subregisters of; // super registers we're still tracking (and with which we're unioning; // subregister definitions).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:91,clear,clear,91,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,1,['clear'],['clear']
Usability,// FIXME: We need some sort of API in RBI/TRI to allow generic code to; // constrain operands of simple instructions given a TargetRegisterClass; // and LLT,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:97,simpl,simple,97,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,2,['simpl'],['simple']
Usability,"// FIXME: We need to run some loop optimizations to re-rotate loops after; // simplifycfg and others undo their rotation.; // Optimize the loop execution. These passes operate on entire loop nests; // rather than on each loop in an inside-out manner, and so they are actually; // function passes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:78,simpl,simplifycfg,78,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,"['simpl', 'undo']","['simplifycfg', 'undo']"
Usability,// FIXME: We no longer need the types from CallArgs; lift up and simplify.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:65,simpl,simplify,65,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['simpl'],['simplify']
Usability,// FIXME: We no longer need the types from FunctionArgList; lift up and; // simplify.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:76,simpl,simplify,76,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['simpl'],['simplify']
Usability,"// FIXME: We only need to check this once, not once each time we compute a; // GUID APValue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:79,GUID,GUID,79,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['GUID'],['GUID']
Usability,// FIXME: We should be able to truncate a full search of; // predecessors by doing a BFS and keeping tabs the originating; // stores from which worklist nodes come from in a similar way to; // TokenFactor simplfication.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:205,simpl,simplfication,205,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplfication']
Usability,"// FIXME: We should really do a 'clear' here to forcibly release; // memory, but we don't have a good way of doing that and; // preserving the function analyses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:33,clear,clear,33,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['clear'],['clear']
Usability,"// FIXME: When Sema learns to form this AttributedType, avoid printing the; // attribute again in printFunctionProtoAfter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp:20,learn,learns,20,interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,1,['learn'],['learns']
Usability,"// FIXME: When addrmode2 goes away, this will simplify (like the; // T2 version), as the LDR.i12 versions don't need the encoding; // tricks for the offset value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:46,simpl,simplify,46,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['simpl'],['simplify']
Usability,"// FIXME: When the semantics of the interaction between select and undef; // are clearly defined, it may turn out to be unnecessary to break here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:81,clear,clearly,81,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['clear'],['clearly']
Usability,"// FIXME: When we've addressed sample profiling, restore the assertion; //; // We cannot calculate branch probability if either of these invariants aren't; // met. However, MisExpect diagnostics should not prevent code from compiling,; // so we simply forgo emitting diagnostics here, and return early.; // assert((TotalBranchWeight >= LikelyBranchWeight) && (TotalBranchWeight > 0); // && ""TotalBranchWeight is less than the Likely branch weight"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp:245,simpl,simply,245,interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp,1,['simpl'],['simply']
Usability,"// FIXME: `noderef` currently doesn't work correctly in [[]] syntax.; // See https://github.com/llvm/llvm-project/issues/55790 for details.; // For the time being, we simply emit a warning that the attribute is; // ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:167,simpl,simply,167,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['simpl'],['simply']
Usability,// FIXME: add PDT here once simplifycfg is ready.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUUnifyDivergentExitNodes.cpp:28,simpl,simplifycfg,28,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUUnifyDivergentExitNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUUnifyDivergentExitNodes.cpp,1,['simpl'],['simplifycfg']
Usability,"// FIXME: also track:; // - kind of entity (function/variable/type), to expose structured results; // - template args kinds/types, as a proxy for template params; // For now we simply return these results as ""pattern"" strings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:177,simpl,simply,177,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['simpl'],['simply']
Usability,"// FIXME: better error handling here. For now, simply return an empty; // Replacements to indicate failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.cpp:47,simpl,simply,47,interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.cpp,1,['simpl'],['simply']
Usability,// FIXME: handle mismatched sizes?; // TODO: investigate if `ISD::OR` handling in; // `TargetLowering::SimplifyDemandedVectorElts` can be improved instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:103,Simpl,SimplifyDemandedVectorElts,103,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Simpl'],['SimplifyDemandedVectorElts']
Usability,"// FIXME: instead of isUse(), readsReg() would be a better fix here,; // For example, we can ignore modifications in reg with undef. However,; // it's not perfectly clear if skipping the internal read is safe in all; // other targets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:165,clear,clear,165,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['clear'],['clear']
Usability,// FIXME: it's not clear how to correctly handle scattered; // relocations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp,1,['clear'],['clear']
Usability,"// FIXME: let user specify whether to treat this case as an error or ignore; // it as is currently done. This behavior is problematic in that it hides; // failures from bad ranges. Also, the behavior here differs from; // `flatten`. Here, we abort (without error), whereas flatten, if it hits an; // empty list, does not abort. As a result, `editList({A,B})` is not; // equivalent to `flatten(edit(A), edit(B))`. The former will abort if `A`; // produces a bad range, whereas the latter will simply ignore A.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Transformer/RewriteRule.cpp:492,simpl,simply,492,interpreter/llvm-project/clang/lib/Tooling/Transformer/RewriteRule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Transformer/RewriteRule.cpp,1,['simpl'],['simply']
Usability,// FIXME: not clear how to mangle this!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:14,clear,clear,14,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['clear'],['clear']
Usability,// FIXME: not clear how to mangle this!; // template <class T...> class A {; // template <class U...> void foo(T(*)(U) x...);; // };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:14,clear,clear,14,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['clear'],['clear']
Usability,// FIXME: not clear how to mangle this!; // template <class T...> class A {; // template <class U...> void foo(decltype(T::foo(U())) x...);; // };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:14,clear,clear,14,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['clear'],['clear']
Usability,// FIXME: not clear how to mangle this!; // template <template <class U> class T...> class A {; // template <class U...> void foo(decltype(T<U>::foo) x...);; // };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:14,clear,clear,14,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['clear'],['clear']
Usability,"// FIXME: not clear how to mangle this!; // template <template <class> class T...> class A {; // template <template <class> class U...> void foo(B<T,U> x...);; // };",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:14,clear,clear,14,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['clear'],['clear']
Usability,// FIXME: not clear how to mangle this!; // template <unsigned N...> class A {; // template <class U...> void foo(U (&x)[N]...);; // };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:14,clear,clear,14,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['clear'],['clear']
Usability,"// FIXME: remove relative cap. There isn't really any good setting for; // `MaxAverageVisitsPerBlock`, so it has no clear value over using; // `MaxBlockVisits` directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/TypeErasedDataflowAnalysis.cpp:116,clear,clear,116,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/TypeErasedDataflowAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/TypeErasedDataflowAnalysis.cpp,1,['clear'],['clear']
Usability,// FIXME: should we clear the other bits in ListWithSameDeclaration?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:20,clear,clear,20,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['clear'],['clear']
Usability,"// FIXME: simplify-demanded-bits in DAGCombine will probably have; // changed the AND node to a 32-bit mask operation. We'll have to; // undo that as part of the transform here if we want to catch all; // the opportunities.; // Currently the NumberOfIgnoredLowBits argument helps to recover; // from these situations when matching bigger pattern (bitfield insert).; // For unsigned extracts, check for a shift right and mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:10,simpl,simplify-demanded-bits,10,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,2,"['simpl', 'undo']","['simplify-demanded-bits', 'undo']"
Usability,"// FIXME: the motivation for capturing post-merge bitcode and command line; // is replicating the compilation environment from bitcode, without needing; // to understand the dependencies (the functions to be imported). This; // assumes a clang - based invocation, case in which we have the command; // line.; // It's not very clear how the above motivation would map in the; // linker-based case, so we currently don't plumb the command line args in; // that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp:326,clear,clear,326,interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp,1,['clear'],['clear']
Usability,// FIXME: there are *some* simplifications that we can do here.; // Keep only the first instance of an operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:27,simpl,simplifications,27,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simplifications']
Usability,// FIXME: this should be much simpler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:30,simpl,simpler,30,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['simpl'],['simpler']
Usability,"// FIXME: this works around module+PCH performance issue.; // Rather than erase the result from the map, which is O(n), just clear; // the vector of NamedDecls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:125,clear,clear,125,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['clear'],['clear']
Usability,// FIXME: update join to detect backedges and simplify the flow condition; // accordingly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp:46,simpl,simplify,46,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,1,['simpl'],['simplify']
Usability,"// FIXME:; // If the extract-element and insert-element instructions could be; // simplified away (e.g., could be combined into users by looking at use-def; // context), they have no cost. This is not done in the first place for; // compile-time considerations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:82,simpl,simplified,82,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['simpl'],['simplified']
Usability,// F[MIN|MAX][NUM|NAN] and simple strict operations are available for all FP; // NEON types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:27,simpl,simple,27,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simple']
Usability,"// Fabs is lowered to a bit operation, but it's an and which will clear the; // high bits anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp:66,clear,clear,66,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,1,['clear'],['clear']
Usability,"// Factories for boolean formulas.; // Formulas are interned: passing the same arguments return the same result.; // For commutative operations like And/Or, interning ignores order.; // Simplifications are applied: makeOr(X, X) => X, etc.; /// Returns a formula for the conjunction of `LHS` and `RHS`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h:186,Simpl,Simplifications,186,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Arena.h,1,['Simpl'],['Simplifications']
Usability,// Failed to simplify.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDeletion.cpp:13,simpl,simplify,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDeletion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDeletion.cpp,1,['simpl'],['simplify']
Usability,// Fallback to using the absolute path.; // Simplifying /../ is semantically valid on Windows even in the; // presence of symbolic links.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp:44,Simpl,Simplifying,44,interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,1,['Simpl'],['Simplifying']
Usability,// Fallthough to simply remove the PTEST.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:17,simpl,simply,17,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,2,['simpl'],['simply']
Usability,// Fast case - sign splat can be simply split across the small elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:33,simpl,simply,33,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['simpl'],['simply']
Usability,"// Fast enable/disable feedback from Process",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:23,feedback,feedback,23,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['feedback'],['feedback']
Usability,"// Fast path: Compute a conservative bound on the maximum number of; // bits per digit in this radix. If we can't possibly overflow a; // uint64 based on that bound then do the simple conversion to; // integer. This avoids the expensive overflow checking below, and; // handles the common cases that matter (small decimal integers and; // hex/octal values which don't overflow).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp:177,simpl,simple,177,interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp,1,['simpl'],['simple']
Usability,// Fence instruction simplification,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:21,simpl,simplification,21,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['simpl'],['simplification']
Usability,"// FileID redundant, but clearer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:25,clear,clearer,25,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,1,['clear'],['clearer']
Usability,// FilePositionIndeterminate is not cleared.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:36,clear,cleared,36,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,1,['clear'],['cleared']
Usability,"// Fill up the buffer. We don't clear it, which re-mixes the last round; // when only a partial 64-byte chunk is left.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h:32,clear,clear,32,interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,1,['clear'],['clear']
Usability,"// Filtering is not implemented a very efficient way to keep it simple, but the; // implementation ensures that the performance drop is opt-in. Only when filters are; // used there is a performance loss.; // The intended use case of filtering is for debugging, when highest performance; // does not matter. Filtering is only every attempted if the message passes the; // threshold level.; // Filtering is very fast when the filter is empty.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnPrint.cxx:64,simpl,simple,64,math/minuit2/src/MnPrint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnPrint.cxx,1,['simpl'],['simple']
Usability,// Filters the output of the filename associated with the element being; // printed in order to see clearly which logical elements belongs to; // a particular filename. It is value is reset after the element; // that represents the Compile Unit is printed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h:100,clear,clearly,100,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h,1,['clear'],['clearly']
Usability,"// Final bailout: if the mask is simple, we are better off using an extract; // and a simple narrow shuffle. Prefer extract+unpack(h/l)ps to vpermps; // because that avoids a constant load from memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:33,simpl,simple,33,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['simpl'],['simple']
Usability,"// Final fallback: anything that gets past here is simply given a; // kind field of 'complex', and the only other field is the standard; // 'printable' representation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/JSONBackend.cpp:51,simpl,simply,51,interpreter/llvm-project/llvm/lib/TableGen/JSONBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/JSONBackend.cpp,1,['simpl'],['simply']
Usability,"// Finally clear out all the data structures from the node down through the; // components. postorder_ref_scc_iterator will skip empty RefSCCs, so no need; // to adjust LazyCallGraph data structures.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:11,clear,clear,11,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['clear'],['clear']
Usability,"// Finally, deduce any function attributes based on the fully simplified; // function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:62,simpl,simplified,62,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['simpl'],['simplified']
Usability,"// Finally, do an expensive DCE pass to catch all the dead code exposed by; // the simplifications and basic cleanup after all the simplifications.; // TODO: Investigate if this is too expensive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:83,simpl,simplifications,83,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,4,['simpl'],['simplifications']
Usability,"// Finally, do the actual predication for all predicatable blocks. A couple; // of notes here:; // 1) We don't bother to constant fold dominated exits with identical exit; // counts; that's simply a form of CSE/equality propagation and we leave; // it for dedicated passes.; // 2) We insert the comparison at the branch. Hoisting introduces additional; // legality constraints and we leave that to dedicated logic. We want to; // predicate even if we can't insert a loop invariant expression as; // peeling or unrolling will likely reduce the cost of the otherwise loop; // varying check.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:190,simpl,simply,190,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['simpl'],['simply']
Usability,"// Finally, if the false value simplified to true and the true value to; // false, then the result of the compare is equal to ""!Cond"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:31,simpl,simplified,31,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplified']
Usability,"// Finally, if the node is now dead, remove it from the graph. The node; // may not be dead if the replacement process recursively simplified to; // something else needing this node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:131,simpl,simplified,131,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplified']
Usability,"// Finally, if the node is now dead, remove it from the graph. The node; // may not be dead if the replacement process recursively simplified to; // something else needing this node. This will also take care of adding any; // operands which have lost a user to the worklist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:131,simpl,simplified,131,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplified']
Usability,"// Finally, infer the maximal set of attributes from the ones we've inferred; // above. This is handling the cases where one attribute on a signature; // implies another, but for implementation reasons the inference rule for; // the later is missing (or simply less sophisticated).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp:254,simpl,simply,254,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,1,['simpl'],['simply']
Usability,"// Finally, remove unecessary zexts and truncs, delete old instructions and; // clear the data structures.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TypePromotion.cpp:80,clear,clear,80,interpreter/llvm-project/llvm/lib/CodeGen/TypePromotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TypePromotion.cpp,1,['clear'],['clear']
Usability,"// Find MSSA insertion point. Normally P will always have a corresponding; // memory access before which we can insert. However, with non-standard AA; // pipelines, there may be a mismatch between AA and MSSA, in which case we; // will scan for a memory access before P. In either case, we know for sure; // that at least the load will have a memory access.; // TODO: Simplify this once P will be determined by MSSA, in which case the; // discrepancy can no longer occur.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp:368,Simpl,Simplify,368,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,1,['Simpl'],['Simplify']
Usability,"// Find a predecessor that we can thread. For simplicity, we only consider a; // successor edge out of BB to which we thread exactly one incoming edge into; // PredBB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:46,simpl,simplicity,46,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['simpl'],['simplicity']
Usability,"// Find a representative copy of the vtable initializer.; // We can have multiple available_externally, linkonce_odr and weak_odr; // vtable initializers. We can also have multiple external vtable; // initializers in the case of comdats, which we cannot check here.; // The linker should give an error in this case.; //; // Also, handle the case of same-named local Vtables with the same path; // and therefore the same GUID. This can happen if there isn't enough; // distinguishing path when compiling the source file. In that case we; // conservatively return false early.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:420,GUID,GUID,420,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['GUID'],['GUID']
Usability,"// Find all 'return', 'resume', and 'unwind' instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/EscapeEnumerator.cpp:23,resume,resume,23,interpreter/llvm-project/llvm/lib/Transforms/Utils/EscapeEnumerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/EscapeEnumerator.cpp,1,['resume'],['resume']
Usability,"// Find all uses of GV. We expect them all to be in F, and if we can't; // identify any of the uses we bail out.; //; // On each of these uses, identify if the memory that GV points to is; // used/required/live at the start of the function. If it is not, for example; // if the first thing the function does is store to the GV, the GV can; // possibly be demoted.; //; // We don't do an exhaustive search for memory operations - simply look; // through bitcasts as they're quite common and benign.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:429,simpl,simply,429,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['simpl'],['simply']
Usability,// Find an available version of this cast.; // Try to simplify cast first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/PHITransAddr.cpp:54,simpl,simplify,54,interpreter/llvm-project/llvm/lib/Analysis/PHITransAddr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/PHITransAddr.cpp,1,['simpl'],['simplify']
Usability,"// Find any cast instructions that participate in the def-use chain of; // PhiScev in the loop.; // FORNOW/TODO: We currently expect the def-use chain to include only; // two-operand instructions, where one of the operands is an invariant.; // createAddRecFromPHIWithCasts() currently does not support anything more; // involved than that, so we keep the search simple. This can be; // extended/generalized as needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:362,simpl,simple,362,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,1,['simpl'],['simple']
Usability,"// Find local variables defined by debugify. No attempt is made to match up; // MIR-level regs to the 'correct' IR-level variables: there isn't a simple; // way to do that, and it isn't necessary to find interesting CodeGen bugs.; // Instead, simply keep track of one variable per line. Later, we can insert; // DBG_VALUE insts that point to these local variables. Emitting DBG_VALUEs; // which cover a wide range of lines can help stress the debug info passes:; // if we can't do that, fall back to using the local variable which precedes; // all the others.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineDebugify.cpp:146,simpl,simple,146,interpreter/llvm-project/llvm/lib/CodeGen/MachineDebugify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineDebugify.cpp,2,['simpl'],"['simple', 'simply']"
Usability,// Find or create a TopoSig for the given TopoSigId.; // This function is only for use by CodeGenRegister::computeSuperRegs().; // Others should simply use Reg->getTopoSig().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.h:145,simpl,simply,145,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.h,1,['simpl'],['simply']
Usability,// Find the GUID in the map,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp:12,GUID,GUID,12,interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,1,['GUID'],['GUID']
Usability,"// Find the end of the function prolog. First known non-DBG_VALUE and; // non-frame setup location marks the beginning of the function body.; // FIXME: is there a simpler a way to do this? Can we just search; // for the first instruction of the function, not the last of the prolog?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:163,simpl,simpler,163,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['simpl'],['simpler']
Usability,"// Find which FP registers need to be cleared. The parameter `ClearRegs` is; // initialised with all elements set to true, and this function resets all the; // bits, which correspond to register uses. Returns true if any floating point; // register is defined, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:38,clear,cleared,38,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,2,"['Clear', 'clear']","['ClearRegs', 'cleared']"
Usability,"// Finding the minimal(chain_number + reusable_offset_number) is a complicated; // algorithmic problem.; // For now, the algorithm used here is simply adjusted to handle the case for; // manually unrolling cases.; // FIXME: use a more powerful algorithm to find minimal sum of chain_number and; // reusable_offset_number for one base with multiple offsets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:144,simpl,simply,144,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['simpl'],['simply']
Usability,"// Finds the induction variable, increment and trip count for a simple loop that; // we can flatten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:64,simpl,simple,64,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,1,['simpl'],['simple']
Usability,// Finished analyzing candidates at this level.; // Descend to the next level and clear all of the candidates currently; // collected. Note that it will not be possible to fuse any of the; // existing candidates with new candidates because the new candidates will; // be at a different nest level and thus not be control flow equivalent; // with all of the candidates collected so far.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:82,clear,clear,82,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['clear'],['clear']
Usability,"// First check all callbacks provided by outside AAs. If any of them returns; // a non-null value that is different from the associated value, or; // std::nullopt, we assume it's simplified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:179,simpl,simplified,179,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,3,['simpl'],['simplified']
Usability,// First compute NewVNInfo and the simple value mappings.; // Detect impossible conflicts early.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:35,simpl,simple,35,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['simpl'],['simple']
Usability,"// First convert this to a non-variadic expression if possible, to simplify; // the output.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:67,simpl,simplify,67,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['simpl'],['simplify']
Usability,// First create the ValueInfo utilizing the Name or GUID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:52,GUID,GUID,52,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['GUID'],['GUID']
Usability,"// First emit non-scalable frame offsets, or a simple 'mov'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:47,simpl,simple,47,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['simpl'],['simple']
Usability,// First handle the special case of no parent loop to simplify the algorithm.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp:54,simpl,simplify,54,interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp,1,['simpl'],['simplify']
Usability,"// First packet for this worker in this query; // Twice the learning phase",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:60,learn,learning,60,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,1,['learn'],['learning']
Usability,"// First pass: Do a simple check to see if any functions can have their ""...""; // removed. We can do this if they never call va_start. This loop cannot be; // fused with the next loop, because deleting a function invalidates; // information computed while surveying other functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp:20,simpl,simple,20,interpreter/llvm-project/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp,1,['simpl'],['simple']
Usability,"// First register range is a single register, simplify to just Reg; // so that it matches more operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/AsmParser/M68kAsmParser.cpp:46,simpl,simplify,46,interpreter/llvm-project/llvm/lib/Target/M68k/AsmParser/M68kAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/AsmParser/M68kAsmParser.cpp,1,['simpl'],['simplify']
Usability,// First try to handle simplified comparisons.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:23,simpl,simplified,23,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,2,['simpl'],['simplified']
Usability,"// First try to peephole Inst. If there is nothing further we can do in; // terms of undoing objc-arc-expand, process the next inst.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:85,undo,undoing,85,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,1,['undo'],['undoing']
Usability,"// First try to simplify using SimplifyMultipleUseDemandedBits which allows; // the operands to have other uses, but will only perform simplifications that; // involve bypassing some nodes for this user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:16,simpl,simplify,16,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,3,"['Simpl', 'simpl']","['SimplifyMultipleUseDemandedBits', 'simplifications', 'simplify']"
Usability,"// First undo, the external call to SetEntries; // We could improve the interface to optional tell the TTreeCloner that the; // SetEntries was not done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:9,undo,undo,9,tree/tree/src/TTreeCloner.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx,1,['undo'],['undo']
Usability,"// First we need to insert an explicit load on the false path for any memory; // operand. We also need to potentially do register rewriting here, but it is; // simpler as the memory operands are always on the false path so we can; // simply take that input, whatever it is.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:160,simpl,simpler,160,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,2,['simpl'],"['simpler', 'simply']"
Usability,// First we want to create an RPO traversal of the loop body. By processing in; // RPO we can ensure that definitions are processed prior to uses (for non PHI; // uses) in all cases. This ensures we maximize the simplifications in each; // iteration over the loop and minimizes the possible causes for continuing to; // iterate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInstSimplify.cpp:212,simpl,simplifications,212,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInstSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInstSimplify.cpp,1,['simpl'],['simplifications']
Usability,"// First, before trying TableGen patterns, check if both sources are; // constants. In those cases, we can trivially compute the final constant; // and emit a simple move.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp:159,simpl,simple,159,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,1,['simpl'],['simple']
Usability,"// First, check for the ""frontier"" instructions (those that will clear the; // higher-order 32 bits.; // For RLWINM and RLWNM, we need to make sure that the mask does not wrap; // around. If it does not, then these instructions will clear the; // higher-order bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:65,clear,clear,65,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,['clear'],['clear']
Usability,"// First, clear all bits but the sign bit from the second operand (sign).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:10,clear,clear,10,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['clear'],['clear']
Usability,"// First, compute the minimum iteration count required so that the vector; // loop outperforms the scalar loop.; // The total cost of the scalar loop is; // ScalarC * TC; // where; // * TC is the actual trip count of the loop.; // * ScalarC is the cost of a single scalar iteration.; //; // The total cost of the vector loop is; // RtC + VecC * (TC / VF) + EpiC; // where; // * RtC is the cost of the generated runtime checks; // * VecC is the cost of a single vector iteration.; // * TC is the actual trip count of the loop; // * VF is the vectorization factor; // * EpiCost is the cost of the generated epilogue, including the cost; // of the remaining scalar operations.; //; // Vectorization is profitable once the total vector cost is less than the; // total scalar cost:; // RtC + VecC * (TC / VF) + EpiC < ScalarC * TC; //; // Now we can compute the minimum required trip count TC as; // (RtC + EpiC) / (ScalarC - (VecC / VF)) < TC; //; // For now we assume the epilogue cost EpiC = 0 for simplicity. Note that; // the computations are performed on doubles, not integers and the result; // is rounded up, hence we get an upper estimate of the TC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:996,simpl,simplicity,996,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['simpl'],['simplicity']
Usability,"// First, expose any CSR SGPR spills. This is mostly the same as what PEI; // does, but somewhat simpler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerSGPRSpills.cpp:97,simpl,simpler,97,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerSGPRSpills.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerSGPRSpills.cpp,1,['simpl'],['simpler']
Usability,"// First, learn unreachability by analyzing function IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:10,learn,learn,10,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['learn'],['learn']
Usability,"// First, make LF_BUILDINFO. It's a sequence of strings with various bits of; // build info. The known prefix is:; // - Absolute path of current directory; // - Compiler path; // - Main source file path, relative to CWD or absolute; // - Type server PDB file; // - Canonical compiler command line; // If frontend and backend compilation are separated (think llc or LTO), it's; // not clear if the compiler path should refer to the executable for the; // frontend or the backend. Leave it blank for now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:384,clear,clear,384,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['clear'],['clear']
Usability,"// First, simply split all muxes into a pair of conditional transfers; // and update the live intervals to reflect the new arrangement. The; // goal is to update the kill flags, since predication will rely on; // them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:10,simpl,simply,10,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,1,['simpl'],['simply']
Usability,"// First, try to simplify the subtraction directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorCombine.cpp:17,simpl,simplify,17,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorCombine.cpp,1,['simpl'],['simplify']
Usability,"// First: Do a simple & cheap sphere approximation containment test.; // In many uses b will be completely contained by a and very much smaller; // these cases short circuited here; // We need the inner sphere for the container (box a) - radius = shortest box half length",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoundingBox.cxx:15,simpl,simple,15,graf3d/gl/src/TGLBoundingBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoundingBox.cxx,1,['simpl'],['simple']
Usability,"// Fixed point integral and fractional bit sizes; // Saturated types share the same integral/fractional bits as their; // corresponding unsaturated types.; // For simplicity, the fractional bits in a _Fract type will be one less the; // width of that _Fract type. This leaves all signed _Fract types having no; // padding and unsigned _Fract types will only have 1 bit of padding after the; // sign if PaddingOnUnsignedFixedPoint is set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:163,simpl,simplicity,163,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['simpl'],['simplicity']
Usability,// Flat -> private/local is a simple truncate.; // Flat -> global is no-op,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:30,simpl,simple,30,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['simpl'],['simple']
Usability,// Flow-based profile inference is only usable with BasicBlock instantiation; // of SampleProfileLoaderBaseImpl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h:40,usab,usable,40,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,1,['usab'],['usable']
Usability,"// Fold ((add X, C1), C2) to (add X, C1+C2). This is very common in; // unrolled loops, and handling this early allows following code to; // identify the IV as a ""simple recurrence"" without first folding away; // a long chain of adds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp:163,simpl,simple,163,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,1,['simpl'],['simple']
Usability,"// Fold ((mul x, 0/undef) -> 0,; // (mul x, 1) -> x) -> x); // -> and(x, mask); // We can replace vectors with '0' and '1' factors with a clearing mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:138,clear,clearing,138,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['clear'],['clearing']
Usability,"// Fold (X & M) ^ (Y & ~M) -> (X & M) | (Y & ~M); // This it a special case in haveNoCommonBitsSet, but the computeKnownBits; // calls in there are unnecessary as SimplifyDemandedInstructionBits should; // have already taken care of those cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:163,Simpl,SimplifyDemandedInstructionBits,163,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['Simpl'],['SimplifyDemandedInstructionBits']
Usability,"// Fold - If possible, fold this to a simpler init. Return this if not; // possible to fold.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h:38,simpl,simpler,38,interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,6,['simpl'],['simpler']
Usability,// Fold to a simpler select_cc,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:13,simpl,simpler,13,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simpler']
Usability,// Folding failed again - undo the commute before returning.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:26,undo,undo,26,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['undo'],['undo']
Usability,"// Follow gcc behavior and treat as linker input for invalid -x; // options. Its not clear why we shouldn't just revert to unknown; but; // this isn't very important, we might as well be bug compatible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:85,clear,clear,85,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['clear'],['clear']
Usability,"// For ""BFM Rd, Rn, #immr, #imms"", it's known that BFM simplifies away fewer; // nodes from Rn (or inserts additional shift node) if BiggerPattern is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:55,simpl,simplifies,55,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['simpl'],['simplifies']
Usability,// For 'is positive?' check that the sign-bit is clear and at least 1 masked; // bit is set. Example:; // (i8 X % 32) s> 0 --> (X & 159) s> 0,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:49,clear,clear,49,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['clear'],['clear']
Usability,"// For 32-bit targets we need to emit a collection of thunks for various; // possible scratch registers as well as a fallback that uses EDI, which is; // normally callee saved.; // __llvm_retpoline_eax:; // calll .Leax_call_target; // .Leax_capture_spec:; // pause; // jmp .Leax_capture_spec; // .align 16; // .Leax_call_target:; // movl %eax, (%esp) # Clobber return addr; // retl; //; // __llvm_retpoline_ecx:; // ... # Same setup; // movl %ecx, (%esp); // retl; //; // __llvm_retpoline_edx:; // ... # Same setup; // movl %edx, (%esp); // retl; //; // __llvm_retpoline_edi:; // ... # Same setup; // movl %edi, (%esp); // retl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp:259,pause,pause,259,interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp,1,['pause'],['pause']
Usability,"// For AND, SimplifyDemandedBits may have turned one of the (xor X, 1) into; // (xor X, -1) based on the upper bits of the other operand being 0. If the; // operation is And, allow one of the Xors to use -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:12,Simpl,SimplifyDemandedBits,12,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['Simpl'],['SimplifyDemandedBits']
Usability,"// For AVX1 only, if we are extracting from a 256-bit and+not (which will; // eventually get combined/lowered into ANDNP) with a concatenated operand,; // split the 'and' into 128-bit ops to avoid the concatenate and extract.; // We let generic combining take over from there to simplify the; // insert/extract and 'not'.; // This pattern emerges during AVX1 legalization. We handle it before lowering; // to avoid complications like splitting constant vector loads.; // Capture the original wide type in the likely case that we need to bitcast; // back to this type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:279,simpl,simplify,279,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplify']
Usability,"// For GPRs, we only care to clear out the 32-bit register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:29,clear,clear,29,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['clear'],['clear']
Usability,"// For GPRs, we only care to clear out the 64-bit register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:29,clear,clear,29,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['clear'],['clear']
Usability,"// For Hexagon, we do not need to instantiate tools for PreProcess, PreCompile; // and Compile.; // We simply use ""clang -cc1"" for those actions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Hexagon.h:103,simpl,simply,103,interpreter/llvm-project/clang/lib/Driver/ToolChains/Hexagon.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Hexagon.h,1,['simpl'],['simply']
Usability,"// For LCSSA phis, sink the truncate outside the loop.; // After SimplifyCFG most loop exit targets have a single predecessor.; // Otherwise fall back to a truncate within the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:65,Simpl,SimplifyCFG,65,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['Simpl'],['SimplifyCFG']
Usability,"// For PTEST(PG, PG), PTEST is redundant when PG is the result of an; // instruction that sets the flags as PTEST would. This is only valid when; // the condition is any.; // Fallthough to simply remove the PTEST.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:189,simpl,simply,189,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['simpl'],['simply']
Usability,"// For SamplePGO, the indirect call targets for local functions will; // have its original name annotated in profile. We try to find the; // corresponding PGOFuncName as the GUID, and fix up the edges; // accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:174,GUID,GUID,174,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,1,['GUID'],['GUID']
Usability,"// For XCore, we do not need to instantiate tools for PreProcess, PreCompile and; // Compile.; // We simply use ""clang -cc1"" for those actions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/XCore.h:101,simpl,simply,101,interpreter/llvm-project/clang/lib/Driver/ToolChains/XCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/XCore.h,1,['simpl'],['simply']
Usability,"// For `MemberExpr` with implicit `this->` we generate a simple; // `id-expression` syntax node, beacuse an implicit `member-expression` is; // syntactically undistinguishable from an `id-expression`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp:57,simpl,simple,57,interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,1,['simpl'],['simple']
Usability,"// For a GEP, we cannot simply use getInstructionCost because currently; // it optimistically assumes that a GEP will fold into addressing mode; // regardless of its users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp:24,simpl,simply,24,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,1,['simpl'],['simply']
Usability,"// For a NumberCounting measurement only; // Set the value of data in a particular channel; //; // Internally, this simply creates a 1-bin TH1F for you",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx:116,simpl,simply,116,roofit/histfactory/src/Channel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx,1,['simpl'],['simply']
Usability,"// For a divergent call target, we need to do a waterfall loop over the; // possible callees which precludes us from using a simple jump.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:125,simpl,simple,125,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['simpl'],['simple']
Usability,"// For a function, this will validate a compound Swift name, e.g.; // <code>init(foo:bar:baz:)</code> or <code>controllerForName(_:)</code>, and; // the function will output the number of parameter names, and whether this is a; // single-arg initializer.; //; // For a type, enum constant, property, or variable declaration, this will; // validate either a simple identifier, or a qualified; // <code>context.identifier</code> name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:357,simpl,simple,357,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['simpl'],['simple']
Usability,"// For a macro function, 0 spaces are required between the; // identifier and the lparen that opens the parameter list.; // For a simple macro, 1 space is required between the; // identifier and the first token of the defined value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp:130,simpl,simple,130,interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,1,['simpl'],['simple']
Usability,"// For a nested statement, write out the substatements in reverse order (so; // that a simple stack machine can be used when loading), and don't emit a; // STMT_STOP after each one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterStmt.cpp:87,simpl,simple,87,interpreter/llvm-project/clang/lib/Serialization/ASTWriterStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterStmt.cpp,1,['simpl'],['simple']
Usability,"// For a purely complex argument z, the faddeeva function equals to; // exp(z*z) * erfc(z). Together with coefficient exp(-u*u), this means the; // function can be simplified to:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h:164,simpl,simplified,164,roofit/batchcompute/res/RooHeterogeneousMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooHeterogeneousMath.h,1,['simpl'],['simplified']
Usability,"// For a variably modified type we can't just use the expression within; // the array bounds, since we don't want that to be re-evaluated here.; // Rather, we need to determine what it was when the array was first; // created - so we resort to using sizeof(vla)/sizeof(element).; // For e.g.; // void f(int b) {; // int vla[b];; // b = -1; <-- This should not affect the num of iterations below; // for (int &c : vla) { .. }; // }; // FIXME: This results in codegen generating IR that recalculates the; // run-time number of elements (as opposed to just using the IR Value; // that corresponds to the run-time value of each bound that was; // generated when the array was created.) If this proves too embarrassing; // even for unoptimized IR, consider passing a magic-value/cookie to; // codegen that then knows to simply use that initial llvm::Value (that; // corresponds to the bound at time of array creation) within; // getelementptr. But be prepared to pay the price of increasing a; // customized form of coupling between the two components - which could; // be hard to maintain as the codebase evolves.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:815,simpl,simply,815,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['simpl'],['simply']
Usability,"// For all/any comparisons, replace or(x,shl(y,bw/2)) with and/or(x,y).; // For example, when high 32-bits of i64 X are known clear:; // all bits clear: (X | (Y<<32)) == 0 --> (X | Y) == 0; // all bits set: (X | (Y<<32)) == -1 --> (X & Y) == -1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:126,clear,clear,126,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,2,['clear'],['clear']
Usability,"// For an argument attribute to transfer from a callsite to the parent, the; // call must be guaranteed to execute every time the parent is called.; // Conservatively, just check for calls in the entry block that are guaranteed; // to execute.; // TODO: This could be enhanced by testing if the callsite post-dominates the; // entry block or by doing simple forward walks or backward walks to the; // callsite.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp:351,simpl,simple,351,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,1,['simpl'],['simple']
Usability,"// For an expression like (x * 8) & 8, simplify the multiply.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:39,simpl,simplify,39,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['simpl'],['simplify']
Usability,"// For an operand generating multiple values, one of the values may; // become dead allowing further simplification (e.g. split index; // arithmetic from an indexed load).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:101,simpl,simplification,101,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplification']
Usability,"// For an unsplit empty dataset, simply assign empty dataset to each component",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx:33,simpl,simply,33,roofit/roofitcore/src/RooAbsTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx,1,['simpl'],['simply']
Usability,"// For any kind of comparison category return type, we need a usable; // '==' and a usable '<'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:62,usab,usable,62,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['usab'],['usable']
Usability,"// For certain parameter types, clear padding bits, as they may reveal; // sensitive information.; // Small struct/union types are passed as integer arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:32,clear,clear,32,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['clear'],['clear']
Usability,"// For certain return types, clear padding bits, as they may reveal; // sensitive information.; // Small struct/union types are passed as integers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:29,clear,clear,29,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['clear'],['clear']
Usability,"// For cleanliness, we try to avoid emitting the return block for; // simple cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp:70,simpl,simple,70,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,1,['simpl'],['simple']
Usability,"// For conditional branches, we can perform simple conditional propagation on; // the condition value itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/SafepointIRVerifier.cpp:44,simpl,simple,44,interpreter/llvm-project/llvm/lib/IR/SafepointIRVerifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/SafepointIRVerifier.cpp,2,['simpl'],['simple']
Usability,"// For each call in the function summary, see if the call; // is to a GUID (which means it is for an indirect call,; // otherwise we would have a Value for it). If so, synthesize; // a value id.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:70,GUID,GUID,70,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['GUID'],['GUID']
Usability,"// For each feature that implies this, clear it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCSubtargetInfo.cpp:39,clear,clear,39,interpreter/llvm-project/llvm/lib/MC/MCSubtargetInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCSubtargetInfo.cpp,2,['clear'],['clear']
Usability,"// For each function in current module, load all context profiles for; // the function as well as their callee contexts which can help profile; // guided importing for ThinLTO. This can be achieved by walking; // through an ordered context container, where contexts are laid out; // as if they were walked in preorder of a context trie. While; // traversing the trie, a link to the highest common ancestor node is; // kept so that all of its decendants will be loaded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp:147,guid,guided,147,interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp,1,['guid'],['guided']
Usability,"// For each of these simplifications, we need the two source; // regs to match. Unfortunately, MachineCSE ignores COPY and; // SUBREG_TO_REG, so for example we can see; // XXPERMDI t, SUBREG_TO_REG(s), SUBREG_TO_REG(s), immed.; // We have to look through chains of COPY and SUBREG_TO_REG; // to find the real source values for comparison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:21,simpl,simplifications,21,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,1,['simpl'],['simplifications']
Usability,"// For ehpad, we layout the least probable first as to avoid jumping back; // from least probable landingpads to more probable ones.; //; // FIXME: Using probability is probably (!) not the best way to achieve; // this. We should probably have a more principled approach to layout; // cleanup code.; //; // The goal is to get:; //; // +--------------------------+; // | V; // InnerLp -> InnerCleanup OuterLp -> OuterCleanup -> Resume; //; // Rather than:; //; // +-------------------------------------+; // V |; // OuterLp -> OuterCleanup -> Resume InnerLp -> InnerCleanup",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:427,Resume,Resume,427,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,2,['Resume'],['Resume']
Usability,"// For embedded gl clear color must be pad's background color.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:19,clear,clear,19,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,1,['clear'],['clear']
Usability,"// For entry functions we have to set up the stack pointer if we use it,; // whereas non-entry functions get this ""for free"". This means there is no; // intrinsic advantage to using S32 over S34 in cases where we do not have; // calls but do need a frame pointer (i.e. if we are requested to have one; // because frame pointer elimination is disabled). To keep things simple we; // only ever use S32 as the call ABI stack pointer, and so using it does not; // imply we need a separate frame pointer.; //; // Try to use s32 as the SP, but move it if it would interfere with input; // arguments. This won't work with calls though.; //; // FIXME: Move SP to avoid any possible inputs, or find a way to spill input; // registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:368,simpl,simple,368,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['simpl'],['simple']
Usability,"// For every incoming edge we will create a block holding all; // incoming values in a single PHI nodes.; //; // loop:; // %n.val = phi i32[%n, %entry], [%inc, %loop]; //; // It will create:; //; // loop.from.entry:; // %n.loop.pre = phi i32 [%n, %entry]; // br %label loop; // loop.from.loop:; // %inc.loop.pre = phi i32 [%inc, %loop]; // br %label loop; //; // After this rewrite, further analysis will ignore any phi nodes with more; // than one incoming edge.; // TODO: Simplify PHINodes in the basic block to remove duplicate; // predecessors.; // Special case for CleanupPad: all EH blocks must have the same unwind edge; // so we need to create an additional ""dispatcher"" block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:474,Simpl,Simplify,474,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,1,['Simpl'],['Simplify']
Usability,"// For everything else, we can just do a simple increment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:41,simpl,simple,41,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['simpl'],['simple']
Usability,"// For generic targets, we default to bottom-up, because it's simpler and more; // compile-time optimizations have been implemented in that direction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:62,simpl,simpler,62,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['simpl'],['simpler']
Usability,// For i32: x <u 2147483648 -> x >s -1 -> true if sign bit clear,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:59,clear,clear,59,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['clear'],['clear']
Usability,"// For iOS 6, undo the translation to add -static for -mkernel/-fapple-kext.; // FIXME: It would be far better to avoid inserting those -static arguments,; // but we can't check the deployment target in the translation code until; // it is set here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:14,undo,undo,14,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['undo'],['undo']
Usability,"// For inline asm, clear the pipeline state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:19,clear,clear,19,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['clear'],['clear']
Usability,// For intrinsics:; // * user-friendly name; // * size,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MemoryOpRemark.cpp:25,user-friendly,user-friendly,25,interpreter/llvm-project/llvm/lib/Transforms/Utils/MemoryOpRemark.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MemoryOpRemark.cpp,1,['user-friendly'],['user-friendly']
Usability,// For little endian we need to clear uninterested bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp:32,clear,clear,32,interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp,1,['clear'],['clear']
Usability,"// For mapped registers that do not have sub-registers, simply; // restrict their class to match the original one.; // We don't want debug instructions affecting the resulting code so; // if we're cloning a debug instruction then just use MappedRC; // rather than constraining the register class further.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:56,simpl,simply,56,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,1,['simpl'],['simply']
Usability,"// For more than one call-site ranges, LPStart must be explicitly; // specified.; // For non-PIC we can simply use the absolute value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/EHStreamer.cpp:104,simpl,simply,104,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/EHStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/EHStreamer.cpp,1,['simpl'],['simply']
Usability,"// For most address spaces, an allocation can't be placed at null, but null; // itself is treated as a 0 size allocation in the in bounds rules. Thus,; // the only valid inbounds address derived from null, is null itself.; // Thus, we have four cases to consider:; // 1) Base == nullptr, Offset == 0 -> inbounds, null; // 2) Base == nullptr, Offset != 0 -> poison as the result is out of bounds; // 3) Base != nullptr, Offset == (-base) -> poison (crossing allocations); // 4) Base != nullptr, Offset != (-base) -> nonnull (and possibly poison); //; // (Note if we're indexing a type of size 0, that simply collapses into one; // of the buckets above.); //; // In general, we're allowed to make values less poison (i.e. remove; // sources of full UB), so in this case, we just select between the two; // non-poison cases (1 and 4 above).; //; // For vectors, we apply the same reasoning on a per-lane basis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:600,simpl,simply,600,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['simpl'],['simply']
Usability,// For non-simple lvalues perform compare-and-swap procedure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:11,simpl,simple,11,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,2,['simpl'],['simple']
Usability,"// For non-trivial unswitching, because it often creates new loops, we rely on; // the pass manager to iterate on the loops rather than trying to immediately; // reach a fixed point. There is no substantial advantage to iterating; // internally, and if any of the new loops are simplified enough to contain; // trivial unswitching we want to prefer those.; // Try to unswitch the best invariant condition. We prefer this full unswitch to; // a partial unswitch when possible below the threshold.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:278,simpl,simplified,278,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['simpl'],['simplified']
Usability,// For now don't try to simplify mixed Loc/NonLoc expressions; // because they often appear from LocAsInteger operations; // and we don't know how to combine a LocAsInteger; // with a concrete value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp:24,simpl,simplify,24,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,1,['simpl'],['simplify']
Usability,"// For now, all non-ASCII strings are represented as UTF-16. As such, the; // number of bytes is simply double the number of UTF-16 codepoints. In; // ASCII strings, the number of bytes is equal to the number of non-ASCII; // codepoints.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:97,simpl,simply,97,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['simpl'],['simply']
Usability,"// For now, all of the new instructions have the same simple three-register; // form, so no need to special case based on what instruction we're; // building.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AdvSIMDScalarPass.cpp:54,simpl,simple,54,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AdvSIMDScalarPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AdvSIMDScalarPass.cpp,1,['simpl'],['simple']
Usability,"// For now, follow the MSVC naming convention for GUID objects on all; // targets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Mangle.cpp:50,GUID,GUID,50,interpreter/llvm-project/clang/lib/AST/Mangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Mangle.cpp,1,['GUID'],['GUID']
Usability,"// For now, just try the simplest case where it's fed by a compare.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:25,simpl,simplest,25,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['simpl'],['simplest']
Usability,"// For now, let's keep things really simple and only support a single; // block for tail predication.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:37,simpl,simple,37,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['simpl'],['simple']
Usability,"// For now, only allow simple 2-operand concatenations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:23,simpl,simple,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simple']
Usability,"// For now, only performCSELCombine and performBRCONDCombine call this; // function. And both of them pass 2 for CCIndex, 3 for CmpIndex with 4; // operands. So just init the ops direct to simplify the code. If we have some; // other case with different CCIndex, CmpIndex, we need to use for loop to; // rewrite the code here.; // TODO: Do we need to assert number of operand is 4 here?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:189,simpl,simplify,189,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['simpl'],['simplify']
Usability,"// For now, only provide the AccessType in the simple case where the GEP; // only has one user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfoImpl.h:47,simpl,simple,47,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfoImpl.h,1,['simpl'],['simple']
Usability,"// For now, simply use DForm with load/store addr as base and 0 as imm.; // FIXME: optimize load/store with some specific address patterns.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp:12,simpl,simply,12,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp,1,['simpl'],['simply']
Usability,"// For now, this function tries to constant-fold symbols inside a; // nonloc::SymbolVal, and does nothing else. More simplifications should; // be possible, such as constant-folding an index in an ElementRegion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp:117,simpl,simplifications,117,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleSValBuilder.cpp,1,['simpl'],['simplifications']
Usability,// For physical registers simply mark the defining instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp:26,simpl,simply,26,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,1,['simpl'],['simply']
Usability,// For power-of-two multiplications we can use a simpler shift expansion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:49,simpl,simpler,49,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['simpl'],['simpler']
Usability,"// For read-only properties, clear the copy and retain flags",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:29,clear,clear,29,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['clear'],['clear']
Usability,"// For reductions, we know that the lane ordering out doesn't alter the; // result. In-order can help simplify the shuffle away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:102,simpl,simplify,102,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['simpl'],['simplify']
Usability,"// For regular archives this function simply calls llvm::writeArchive,; // For thin archives it writes the archive file itself as well as its members.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/Archive.cpp:38,simpl,simply,38,interpreter/llvm-project/llvm/lib/ObjCopy/Archive.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/Archive.cpp,1,['simpl'],['simply']
Usability,"// For reserved resources, record the highest cycle using the resource.; // For top-down scheduling, this is the cycle in which we schedule this; // instruction plus the number of cycles the operations reserves the; // resource. For bottom-up is it simply the instruction's cycle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:249,simpl,simply,249,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['simpl'],['simply']
Usability,"// For scalars, it's common to be able to use a simple extension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp:48,simpl,simple,48,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp,1,['simpl'],['simple']
Usability,"// For sentinel probe, the addr field actually stores the GUID of the; // split function. Convert it to the real address.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp:58,GUID,GUID,58,interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCPseudoProbe.cpp,1,['GUID'],['GUID']
Usability,"// For shift amounts of at least one register, simply rename the registers and; // zero the bottom registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp:47,simpl,simply,47,interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp,1,['simpl'],['simply']
Usability,"// For simple multidimensional array indexing, set the 'accessed' flag for; // better bounds-checking of the base expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:7,simpl,simple,7,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,2,['simpl'],['simple']
Usability,"// For simple scalar/complex initialization, store the value directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:7,simpl,simple,7,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['simpl'],['simple']
Usability,"// For simple type, let compare the data type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx:7,simpl,simple,7,io/io/src/TStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx,1,['simpl'],['simple']
Usability,// For simplicitly make the SetID the same as EnumValue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:7,simpl,simplicitly,7,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,1,['simpl'],['simplicitly']
Usability,"// For simplicity and speed, data dependency check can be; // avoided if read from memory doesn't exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp:7,simpl,simplicity,7,interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp,1,['simpl'],['simplicity']
Usability,// For simplicity assume Ptr to stay in vectorized code if it's not a; // GEP instruction. We don't care since it's cost considered free.; // TODO: We should check for any uses outside of vectorizable tree; // rather than just single use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:7,simpl,simplicity,7,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['simpl'],['simplicity']
Usability,// For simplicity we handle a Pred has 2 successors only.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:7,simpl,simplicity,7,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['simpl'],['simplicity']
Usability,// For simplicity we only chain together sequences of MULs/MLAs where the; // accumulator register is killed on each instruction. This means we don't; // need to track other uses of the registers we want to rewrite.; //; // FIXME: We could extend to handle the non-kill cases for more coverage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp:7,simpl,simplicity,7,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp,1,['simpl'],['simplicity']
Usability,"// For simplicity, although fIMTFlush is always disabled in non-IMT builds, we don't #ifdef it out.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h:7,simpl,simplicity,7,tree/tree/inc/TTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h,1,['simpl'],['simplicity']
Usability,"// For simplicity, avoid cases containing PHI nodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp:7,simpl,simplicity,7,interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp,1,['simpl'],['simplicity']
Usability,"// For simplicity, just give all GlobalValues ExternalLinkage. A trickier; // implementation could figure out which GlobalValues are actually; // referenced by the Named set, and which GlobalValues in the rest of; // the module are referenced by the NamedSet, and get away with leaving; // more internal and private things internal and private. But for now,; // be conservative and simple.; // Visit the GlobalVariables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ExtractGV.cpp:7,simpl,simplicity,7,interpreter/llvm-project/llvm/lib/Transforms/IPO/ExtractGV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ExtractGV.cpp,2,['simpl'],"['simple', 'simplicity']"
Usability,"// For simplicity, we created a separate basic block for the edge. Merge; // it back into the predecessor if possible. This not only avoids; // unnecessary SimplifyCFG iterations, but also makes sure that we don't; // bypass the check for trivial cycles above.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:7,simpl,simplicity,7,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,2,"['Simpl', 'simpl']","['SimplifyCFG', 'simplicity']"
Usability,"// For simplicity, we only allow -fsanitize=address",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/HIPAMD.cpp:7,simpl,simplicity,7,interpreter/llvm-project/clang/lib/Driver/ToolChains/HIPAMD.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/HIPAMD.cpp,1,['simpl'],['simplicity']
Usability,"// For simplicity, we put the data on both host and device for; // now. This could be optimized by inspecting the clients of the; // variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:7,simpl,simplicity,7,roofit/roofitcore/src/RooFit/Evaluator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx,1,['simpl'],['simplicity']
Usability,"// For small code model, generate a simple TOC load.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:36,simpl,simple,36,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['simpl'],['simple']
Usability,"// For smaller scalar integers, we can simply any-extend it to the vector; // element size (we don't care about the upper bits) and broadcast it to all; // elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:39,simpl,simply,39,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simply']
Usability,"// For some probably good reason, DirName on Windows returns the 'name' of; // the directory, omitting the drive letter (even if there was one). In; // consequence the result is not usable as a 'root directory', we need to; // add the drive letter if there was one..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:182,usab,usable,182,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['usab'],['usable']
Usability,"// For splats, unless we *only* demand the 0'th element,; // stop attempts at simplification here, we aren't going to improve things,; // this is better than any potential shuffle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:78,simpl,simplification,78,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simplification']
Usability,// For tables where there is a linear relationship between table index; // and values. We calculate the result with a simple multiplication; // and addition instead of a table lookup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:118,simpl,simple,118,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['simpl'],['simple']
Usability,"// For the 2D case, the simplex shape is an equilateral triangle.; // Determine which simplex we are in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs:24,simpl,simplex,24,js/modules/three_addons.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs,2,['simpl'],['simplex']
Usability,"// For the 3D case, the simplex shape is a slightly irregular tetrahedron.; // Determine which simplex we are in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs:24,simpl,simplex,24,js/modules/three_addons.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs,2,['simpl'],['simplex']
Usability,"// For the 4D case, the simplex is a 4D shape I won't even try to describe.; // To find out which of the 24 possible simplices we're in, we need to; // determine the magnitude ordering of x0, y0, z0 and w0.; // The method below is a good way of finding the ordering of x,y,z,w and; // then find the correct traversal order for the simplex we’re in.; // First, six pair-wise comparisons are performed between each possible pair; // of the four coordinates, and the results are used to add up binary bits; // for an integer index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs:24,simpl,simplex,24,js/modules/three_addons.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three_addons.mjs,3,['simpl'],"['simplex', 'simplices']"
Usability,"// For the binary VP intrinsics supported here, the result on disabled lanes; // is a poison value. For now, only do this simplification if all lanes; // are active.; // TODO: Relax the condition that all lanes are active by using insertelement; // on inactive lanes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:122,simpl,simplification,122,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['simpl'],['simplification']
Usability,"// For the following code,; // Block0:; // ...; // if (...) goto Block1 else ...; // Block1:; // %6 = load llvm.sk_buff:0:50$0:0:0:2:0; // %7 = bitcast %struct.sk_buff* %2 to i8*; // %8 = getelementptr i8, i8* %7, %6; // ...; // goto CommonExit; // Block2:; // ...; // if (...) goto Block3 else ...; // Block3:; // %6 = load llvm.bpf_map:0:40$0:0:0:2:0; // %7 = bitcast %struct.sk_buff* %2 to i8*; // %8 = getelementptr i8, i8* %7, %6; // ...; // goto CommonExit; // CommonExit; // SimplifyCFG may generate:; // Block0:; // ...; // if (...) goto Block_Common else ...; // Block2:; // ...; // if (...) goto Block_Common else ...; // Block_Common:; // PHI = [llvm.sk_buff:0:50$0:0:0:2:0, llvm.bpf_map:0:40$0:0:0:2:0]; // %6 = load PHI; // %7 = bitcast %struct.sk_buff* %2 to i8*; // %8 = getelementptr i8, i8* %7, %6; // ...; // goto CommonExit; // For the above code, we cannot perform proper relocation since; // ""load PHI"" has two possible relocations.; //; // To prevent above tail merging, we use __builtin_bpf_passthrough(); // where one of its parameters is a seq_num. Since two; // __builtin_bpf_passthrough() funcs will always have different seq_num,; // tail merging cannot happen. The __builtin_bpf_passthrough() will be; // removed in the beginning of Target IR passes.; //; // This approach is also used in other places when global var; // representing a relocation is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp:482,Simpl,SimplifyCFG,482,interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,1,['Simpl'],['SimplifyCFG']
Usability,"// For the inner loops we actually process, form LCSSA to simplify the; // transform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:58,simpl,simplify,58,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['simpl'],['simplify']
Usability,"// For the sake of simplicity, drop the whole scope list if any scope is; // iteration-local.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:19,simpl,simplicity,19,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['simpl'],['simplicity']
Usability,"// For the size() == 1 case, we simply return that one matcher.; // No need to wrap it in a variadic operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:32,simpl,simply,32,interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h,1,['simpl'],['simply']
Usability,"// For undef values, try to replace them with the simple broadcast.; // We can do it if the broadcasted value is guaranteed to be; // non-poisonous, or by freezing the incoming scalar value first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:50,simpl,simple,50,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['simpl'],['simple']
Usability,"// For unsigned ranges, or signed ranges with known sign bit, create a simple; // range between the smallest and largest possible value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp:71,simpl,simple,71,interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,1,['simpl'],['simple']
Usability,"// For unsplit intrinsics, we simply modify the source and destination; // pointers in place. This isn't just an optimization, it is a matter of; // correctness. With unsplit intrinsics we may be dealing with transfers; // within a single alloca before SROA ran, or with transfers that have; // a variable length. We may also be dealing with memmove instead of; // memcpy, and so simply updating the pointers is the necessary for us to; // update both source and dest of a single call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:30,simpl,simply,30,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,2,['simpl'],['simply']
Usability,"// For v8.0-M.Main we need to authenticate LR before clearing FPRs, which; // uses R12 as a scratch register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:53,clear,clearing,53,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['clear'],['clearing']
Usability,"// For vector types, the simplification must hold per-lane, so forbid; // potentially cross-lane operations like shufflevector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:25,simpl,simplification,25,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['simpl'],['simplification']
Usability,"// For vectors, if we have rotate instruction support, then its definetly; // best. Otherwise its not clear what the best so just don't make changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:102,clear,clear,102,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['clear'],['clear']
Usability,"// Force copying aggregate type in kernel arguments by value when; // compiling CUDA targeting SPIR-V. This is required for the object; // copied to be valid on the device.; // This behavior follows the CUDA spec; // https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#global-function-argument-processing,; // and matches the NVPTX implementation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/SPIR.cpp:265,guid,guide,265,interpreter/llvm-project/clang/lib/CodeGen/Targets/SPIR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/SPIR.cpp,1,['guid'],['guide']
Usability,"// Force only the learn entries to be cached by temporarily setting min/max; // to the learning phase entry range; // But save all the old values, so we can restore everything to how it was",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:18,learn,learn,18,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,2,['learn'],"['learn', 'learning']"
Usability,// Force the entry block to be instrumented by clearing the blocks it can; // infer coverage from.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BlockCoverageInference.cpp:47,clear,clearing,47,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BlockCoverageInference.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BlockCoverageInference.cpp,1,['clear'],['clearing']
Usability,// Form a new SCC out of these nodes and then clear them off our pending; // stack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:46,clear,clear,46,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,2,['clear'],['clear']
Usability,// Form a simple per-variable cache of these values in case we find we; // want to reuse them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:10,simpl,simple,10,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['simpl'],['simple']
Usability,"// Form canonically associated expression trees, and simplify the trees using; // basic mathematical properties. For example, this will form (nearly); // minimal multiplication trees.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:53,simpl,simplify,53,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['simpl'],['simplify']
Usability,// Form declaration specifiers. They simply refer to the type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:37,simpl,simply,37,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['simpl'],['simply']
Usability,// Forward any resumes that are remaining here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:15,resume,resumes,15,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['resume'],['resumes']
Usability,"// Forward declarations of arrays without a size and VLAs use a count of -1.; // Emit a count of zero in these cases to match what MSVC does for arrays; // without a size. MSVC doesn't support VLAs, so it's not clear what we; // should do for them even if we could distinguish them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:211,clear,clear,211,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['clear'],['clear']
Usability,// Forward to CVTypeDumper for simplicity.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/COFFDumper.cpp:31,simpl,simplicity,31,interpreter/llvm-project/llvm/tools/llvm-readobj/COFFDumper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/COFFDumper.cpp,1,['simpl'],['simplicity']
Usability,"// Found the previous store to same location and type. Make sure it is; // simple, to avoid introducing a spurious non-atomic write after an; // atomic write.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:75,simpl,simple,75,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['simpl'],['simple']
Usability,// Fow now only support `ret`/`resume` function terminators.; // FIXME: lift this restriction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimplifyCFGPass.cpp:31,resume,resume,31,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimplifyCFGPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimplifyCFGPass.cpp,1,['resume'],['resume']
Usability,"// Frame containing Apply/Undo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/inc/TGeoConeEditor.h:26,Undo,Undo,26,geom/geombuilder/inc/TGeoConeEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/inc/TGeoConeEditor.h,2,['Undo'],['Undo']
Usability,// Frame indices in debug values are encoded in a target independent; // way with simply the frame index and offset rather than any; // target-specific addressing mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:82,simpl,simply,82,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,2,['simpl'],['simply']
Usability,// Frames of 32KB & larger require special handling because they cannot be; // indexed into with a simple LD/LWZ immediate offset operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:99,simpl,simple,99,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['simpl'],['simple']
Usability,// Frames of 32KB & larger require special handling because they cannot be; // indexed into with a simple STDU/STWU/STD/STW immediate offset operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:99,simpl,simple,99,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['simpl'],['simple']
Usability,"// From here, the implementation of the different tests. The names; // of the test should be enough to know what they are testing, as; // these tests are mean to be as simple as possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/test/UnitTesting.cxx:168,simpl,simple,168,gui/fitpanel/test/UnitTesting.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/test/UnitTesting.cxx,1,['simpl'],['simple']
Usability,"// From https://docs.microsoft.com/en-us/windows/win32/msi/guid documentation:; // The GUID data type is a text string representing a Class identifier (ID).; // All GUIDs must be authored in uppercase.; // The valid format for a GUID is {XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX} where; // X is a hex digit (0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F).; //; // The individual string components must be padded to comply with the specific; // lengths of {8-4-4-4-12} characters.; // The llvm-yaml2obj tool checks that a GUID follow that format:; // - the total length to be 38 (including the curly braces.; // - there is a dash at the positions: 8, 13, 18 and 23.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/Formatters.cpp:59,guid,guid,59,interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/Formatters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/Formatters.cpp,5,"['GUID', 'guid']","['GUID', 'GUIDs', 'guid']"
Usability,// Function parameters are never usable in constant expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:33,usab,usable,33,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['usab'],['usable']
Usability,"// Function to calculate whether the Min/Max pair of SDNodes (potentially; // swapped around) make a signed saturate pattern, clamping to between a signed; // saturate of -2^(BW-1) and 2^(BW-1)-1, or an unsigned saturate of 0 and 2^BW.; // Returns the node being clamped and the bitwidth of the clamp in BW. Should; // work with both SMIN/SMAX nodes and setcc/select combo. The operands are the; // same as SimplifySelectCC. N0<N1 ? N2 : N3.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:407,Simpl,SimplifySelectCC,407,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['Simpl'],['SimplifySelectCC']
Usability,"// FunctionProtoType::ExtProtoInfo's ExceptionSpecDecl can point to the; // FunctionDecl that we are importing the FunctionProtoType for.; // To avoid an infinite recursion when importing, create the FunctionDecl; // with a simplified function type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:224,simpl,simplified,224,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['simpl'],['simplified']
Usability,"// Functions with auto return type may define a struct inside their body; // and the return type could refer to that struct.; // E.g.: auto foo() { struct X{}; return X(); }; // To avoid an infinite recursion when importing, create the FunctionDecl; // with a simplified return type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:260,simpl,simplified,260,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['simpl'],['simplified']
Usability,"// Further draw options: Smooth/Simple Line, Fill Area for 2D plot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:32,Simpl,Simple,32,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['Simpl'],['Simple']
Usability,// Further simplifications for the extra-special cases where the constants are; // all 0 or all -1 should be implemented as folds of these patterns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:11,simpl,simplifications,11,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['simpl'],['simplifications']
Usability,// GCC doesn't tail recursion eliminate this.; // FIXME: It isn't clear we can't rely on LLVM to TRE this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp:66,clear,clear,66,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,1,['clear'],['clear']
Usability,"// GCC emits the # directive for this directive on the line AFTER the; // directive and emits a bunch of spaces that aren't needed. This is because; // otherwise we will emit a line marker for THIS line, which requires an; // extra blank line after the directive to avoid making all following lines; // off by one. We can do better by simply incrementing NewLine here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp:335,simpl,simply,335,interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,1,['simpl'],['simply']
Usability,"// GCC's logic around choosing a default `-mabi=` is complex. If GCC is not; // configured using `--with-abi=`, then the logic for the default choice is; // defined in config.gcc. This function is based on the logic in GCC 9.2.0.; //; // The logic used in GCC 9.2.0 is the following, in order:; // 1. Explicit choices using `--with-abi=`; // 2. A default based on `--with-arch=`, if provided; // 3. A default based on the target triple's arch; //; // The logic in config.gcc is a little circular but it is not inconsistent.; //; // Clang does not have `--with-arch=` or `--with-abi=`, so we use `-march=`; // and `-mabi=` respectively instead.; //; // In order to make chosing logic more clear, Clang uses the following logic,; // in order:; // 1. Explicit choices using `-mabi=`; // 2. A default based on the architecture as determined by getRISCVArch; // 3. Choose a default based on the triple; // 1. If `-mabi=` is specified, use it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/RISCV.cpp:688,clear,clear,688,interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/RISCV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/RISCV.cpp,1,['clear'],['clear']
Usability,// GEP is fine if it is simple + constant offset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Evaluator.cpp:24,simpl,simple,24,interpreter/llvm-project/llvm/lib/Transforms/Utils/Evaluator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Evaluator.cpp,1,['simpl'],['simple']
Usability,"// GNU extensions, simply look through them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp:19,simpl,simply,19,interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,1,['simpl'],['simply']
Usability,"// GUID format is ""XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"" or; // ""{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}"", normalize to the former.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:3,GUID,GUID,3,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['GUID'],['GUID']
Usability,// GUID to Elf symbol start address map,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h:3,GUID,GUID,3,interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,1,['GUID'],['GUID']
Usability,// GUID to PseudoProbeFuncDesc map,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h:3,GUID,GUID,3,interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,1,['GUID'],['GUID']
Usability,// GUID to PseudoProbeFuncDesc map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h:3,GUID,GUID,3,interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,1,['GUID'],['GUID']
Usability,"// GUIDToFuncNameMap saves the mapping from GUID to the symbol name, for; // all the function symbols defined or declared in current module.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:3,GUID,GUIDToFuncNameMap,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,2,['GUID'],"['GUID', 'GUIDToFuncNameMap']"
Usability,"// GVN does not require loop-simplify, do not try to preserve it if it is not; // possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:29,simpl,simplify,29,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['simpl'],['simplify']
Usability,"// G_ZEXT on vector applies to each lane, so it will; // affect all destinations. Therefore we won't be able; // to simplify the unmerge to just the first definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:116,simpl,simplify,116,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['simpl'],['simplify']
Usability,"// Garbage collector clear of held python member objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPExcInstance.cxx:21,clear,clear,21,bindings/pyroot/cppyy/CPyCppyy/src/CPPExcInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPExcInstance.cxx,3,['clear'],['clear']
Usability,"// Garbage collector clear of held python member objects; this is a good time; // to safely remove this object from the memory regulator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:21,clear,clear,21,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['clear'],['clear']
Usability,"// Gather all the inlined-at nodes.; // When it's done ReversedInlineStack looks like ([66, B], [88, A]); // which means, Function A inlines function B at calliste with a probe id 88,; // and B inlines C at probe 66 where C is represented by Guid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/PseudoProbePrinter.cpp:242,Guid,Guid,242,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/PseudoProbePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/PseudoProbePrinter.cpp,1,['Guid'],['Guid']
Usability,"// General case - set/clear individual bits in dst based on src.; // TODO - there is scope for optimization here, but at the moment this code; // path is barely used so prefer readability over performance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:22,clear,clear,22,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['clear'],['clear']
Usability,"// Generally we try to report as many issues as possible at once, but in; // this case it's not clear what should we be comparing the size of the; // scalar with: the size of the whole vector or its lane. Instead of; // making an arbitrary choice and emitting not so helpful message, let's; // avoid the extra noise and stop here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp:96,clear,clear,96,interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineVerifier.cpp,1,['clear'],['clear']
Usability,"// Generally we won't end up failing due to this reason, as we expect; // to find at least one summary for the GUID that is global or a local; // in the referenced module for direct calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h:111,GUID,GUID,111,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h,1,['GUID'],['GUID']
Usability,// Generate !llvm.loop.parallel metadata for loads and stores for loops; // with dynamic/guided scheduling and without ordered clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:89,guid,guided,89,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['guid'],['guided']
Usability,// Generate a resume induction for the vector epilogue and put it in the; // vector epilogue preheader,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:14,resume,resume,14,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['resume'],['resume']
Usability,"// Generate a simple absolute symbol reference. This intrinsic is only; // supported on 32-bit Windows, which isn't PIC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:14,simpl,simple,14,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['simpl'],['simple']
Usability,// Generate a simple enum set with the give clauses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DirectiveEmitter.cpp:14,simpl,simple,14,interpreter/llvm-project/llvm/utils/TableGen/DirectiveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DirectiveEmitter.cpp,1,['simpl'],['simple']
Usability,"// Generate induction resume values. These variables save the new starting; // indexes for the scalar loop. They are used to test if there are any tail; // iterations left once the vector loop has completed.; // Note that when the vectorized epilogue is skipped due to iteration count; // check, then the resume value for the induction variable comes from; // the trip count of the main vector loop, hence passing the AdditionalBypass; // argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:22,resume,resume,22,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,2,['resume'],['resume']
Usability,"// Generate simple block address code for no-PIC model.; // sll %Tmp1, %IReg, 3; // lds %TReg, 0(%Tmp1, %BReg); // bcfla %TReg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp:12,simpl,simple,12,interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,1,['simpl'],['simple']
Usability,// Generating a simple flag covers most frontend actions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:16,simpl,simple,16,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['simpl'],['simple']
Usability,// Get RValue from temp memory as atomic for non-simple lvalues,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:49,simpl,simple,49,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,1,['simpl'],['simple']
Usability,"// Get a separate function - otherwise, we'd have to rework the CFG of the; // current one. Then simply replace the intrinsic uses with a call to the new; // function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp:97,simpl,simply,97,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp,1,['simpl'],['simply']
Usability,"// Get a separate function - otherwise, we'd have to rework the CFG of the; // current one. Then simply replace the intrinsic uses with a call to the new; // function.; // Generate LLVM IR for i* @spirv.llvm_fsh?_i* (i* %a, i* %b, i* %c)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp:97,simpl,simply,97,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVPrepareFunctions.cpp,1,['simpl'],['simply']
Usability,"// Get memory, cleared to 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:15,clear,cleared,15,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['clear'],['cleared']
Usability,"// Get node identifier in form MXXX_<GUID>. The MXXX prefix is required,; // because we may have multiple linkonce functions summaries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp:37,GUID,GUID,37,interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,1,['GUID'],['GUID']
Usability,"// Get terminal size for progress bar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFHelpers.cxx:25,progress bar,progress bar,25,tree/dataframe/src/RDFHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFHelpers.cxx,1,['progress bar'],['progress bar']
Usability,"// Get the bits. Bits with undefined values (when the corresponding element; // of the vector is an ISD::UNDEF value) are set in SplatUndef and cleared; // in SplatValue. If any of the values are not constant, give up and return; // false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:144,clear,cleared,144,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['clear'],['cleared']
Usability,"// Get the constant out of the ICmp, if there is one.; // Only try this when exactly 1 operand is a constant (if both operands; // are constant, the icmp should eventually simplify). Otherwise, we may; // invert the transform that reduces set bits and infinite-loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp:172,simpl,simplify,172,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,1,['simpl'],['simplify']
Usability,// Get the first cleared register as a scratch (to use later with tBIC).; // We need to use the first so we can ensure it is a low register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:17,clear,cleared,17,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['clear'],['cleared']
Usability,"// Get the histogram addon (smooth line, simple line, ..)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TH1Editor.h:41,simpl,simple,41,gui/ged/inc/TH1Editor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TH1Editor.h,1,['simpl'],['simple']
Usability,"// Get the list of functions; // These apply to all measurements, so we; // first create the list of preprocess functions; // (before we create the list of measurements); // and then we add them to all measurements; // For now, we create this list twice; // simply for compatibility; // std::vector< std::string > preprocessFunctions;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:258,simpl,simply,258,roofit/histfactory/src/ConfigParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx,1,['simpl'],['simply']
Usability,"// Get the minimum element, remember it and clear the list. If the; // element found is adequate, we will put it back on the list, other-; // wise the list will remain empty, and the entry for this register; // will be removed (i.e. this register will not be replaced by insert).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp:44,clear,clear,44,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp,1,['clear'],['clear']
Usability,"// Get the necessary information out of the call graph and nuke the; // function there. Also, clear out any cached analyses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:94,clear,clear,94,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,1,['clear'],['clear']
Usability,"// Get the total execution count of loops among blocks on the same line.; // Assuming a reducible flow graph, the count is the sum of back edge counts.; // Identifying loops is complex, so we simply find cycles and perform cycle; // cancelling iteratively.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/GCOV.cpp:192,simpl,simply,192,interpreter/llvm-project/llvm/lib/ProfileData/GCOV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/GCOV.cpp,1,['simpl'],['simply']
Usability,"// Get the upper limit of elements in the given Order we need to analize.; // TODO: is this heuristic, we could consider learning it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.h:121,learn,learning,121,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.h,1,['learn'],['learning']
Usability,"// Give a more specific diagnostic when the user has explicitly typed in; // a shift-amount that does not match what is expected, but for which; // there is also an unscaled addressing mode (e.g. sxtw/uxtw).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:201,ux,uxtw,201,interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,1,['ux'],['uxtw']
Usability,"// Given a resume function @f.resume(%f.frame* %frame), returns the size; // and expected alignment of %f.frame type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp:11,resume,resume,11,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp,2,['resume'],['resume']
Usability,"// Given the simplification above, we must already have a two-operand case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZPostRewrite.cpp:13,simpl,simplification,13,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZPostRewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZPostRewrite.cpp,1,['simpl'],['simplification']
Usability,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:282,simpl,simple,282,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['simpl'],['simple']
Usability,"// Go back to the normal schedule since we need a valid point; // of instantiation:; // Assertion failed: (Loc.isValid() &&; // ""point of instantiation must be valid!""),; // function setPointOfInstantiation, file DeclTemplate.h,; // line 1520.; // Which can happen here because the simple name maybe a; // typedef to a template (for example std::string).; // break;; // the next code executed must be the TransactionRAII below",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:282,simpl,simple,282,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['simpl'],['simple']
Usability,// Go over all registers in the register class and find the register with; // max clearance or clearance higher than Pref.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp:82,clear,clearance,82,interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,2,['clear'],['clearance']
Usability,"// Go through implicit defs of CSMI and MI, and clear the kill flags on; // their uses in all the instructions between CSMI and MI.; // We might have made some of the kill flags redundant, consider:; // subs ... implicit-def %nzcv <- CSMI; // csinc ... implicit killed %nzcv <- this kill flag isn't valid anymore; // subs ... implicit-def %nzcv <- MI, to be eliminated; // csinc ... implicit killed %nzcv; // Since we eliminated MI, and reused a register imp-def'd by CSMI; // (here %nzcv), that register, if it was killed before MI, should have; // that kill flag removed, because it's lifetime was extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp:48,clear,clear,48,interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp,1,['clear'],['clear']
Usability,"// Guard value for voids, simplifies code a bit, but NameOff is not; // actually valid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/BTF/BTFParser.cpp:26,simpl,simplifies,26,interpreter/llvm-project/llvm/lib/DebugInfo/BTF/BTFParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/BTF/BTFParser.cpp,1,['simpl'],['simplifies']
Usability,"// Guards on true are operationally no-ops. In the future we can; // consider more sophisticated tradeoffs for guards considering potential; // for check widening, but for now we keep things simple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:191,simpl,simple,191,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['simpl'],['simple']
Usability,"// H-Matrix method, a simple comparison of chi-squared estimators for signal and background",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h:22,simpl,simple,22,tmva/tmva/inc/TMVA/MethodHMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h,1,['simpl'],['simple']
Usability,"// HACK: MSVC doesn't consider _Atomic to be a keyword and its STL; // implementation for VS2013 uses _Atomic as an identifier for one of the; // classes in <atomic>. When we are parsing 'struct _Atomic', don't consider; // '_Atomic' to be a keyword. We are careful to undo this so that clang can; // use '_Atomic' in its own header files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:269,undo,undo,269,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,1,['undo'],['undo']
Usability,"// HACK: We suppress simpler implicit move here in msvc compatibility mode; // just as a temporary work around, as the MSVC STL has issues with; // this change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:21,simpl,simpler,21,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['simpl'],['simpler']
Usability,// HAVE_LIBEDIT; // Simple fgets-based implementation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LineEditor/LineEditor.cpp:20,Simpl,Simple,20,interpreter/llvm-project/llvm/lib/LineEditor/LineEditor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LineEditor/LineEditor.cpp,1,['Simpl'],['Simple']
Usability,// HP-UX operating system,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:6,UX,UX,6,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['UX'],['UX']
Usability,"// Half length extents; // Following tests are greatly simplified; // if we convert into our local frame; // Find translation in parent frame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoundingBox.cxx:55,simpl,simplified,55,graf3d/gl/src/TGLBoundingBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoundingBox.cxx,1,['simpl'],['simplified']
Usability,"// Half-precision return values can be returned like this:; //; // t11 f16 = fadd ...; // t12: i16 = bitcast t11; // t13: i32 = zero_extend t12; // t14: f32 = bitcast t13 <~~~~~~~ Arg; //; // to avoid code generation for bitcasts, we simply set Arg to the node; // that produces the f16 value, t11 in this case.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:234,simpl,simply,234,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['simpl'],['simply']
Usability,"// Handle ""X | C"" as ""X + C"" iff X is known to have C bits clear.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelDAGToDAG.cpp:59,clear,clear,59,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelDAGToDAG.cpp,1,['clear'],['clear']
Usability,// Handle *simple* calls for now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:11,simpl,simple,11,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,2,['simpl'],['simple']
Usability,"// Handle a mouse event on a region containing selectable items.; // This might end up changing the hover state or the selection state.; //; // targetSelector describes what target HTML element is selectable.; // targetToID specifies how to determine the selection from it:; // hover: a function from target to the class name to highlight; // bb: a function from target to the basic-block name to select (BB4); // elt: a function from target to the CFG element name to select (BB4.5); // iter: a function from target to the BB iteration to select (BB4:2); // If an entry is missing, the selection is unmodified.; // If an entry is null, the selection is always cleared.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.js:661,clear,cleared,661,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/HTMLLogger.js,1,['clear'],['cleared']
Usability,// Handle casts to pointers by changing them into casts to the appropriate; // integer type. This promotes constant folding and simplifies this code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:128,simpl,simplifies,128,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,2,['simpl'],['simplifies']
Usability,// Handle extractvalue of insertvalue to allow further simplification; // based on replaced with.overflow intrinsics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:55,simpl,simplification,55,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['simpl'],['simplification']
Usability,// Handle field access to simple records.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp:26,simpl,simple,26,interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,1,['simpl'],['simple']
Usability,// Handle friend type expressions by simply substituting template; // parameters into the pattern type and checking the result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:37,simpl,simply,37,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['simpl'],['simply']
Usability,"// Handle i128 argument types. These need to be passed by implicit; // reference. This could be as simple as the following .td line:; // CCIfType<[i128], CCPassIndirect<i64>>,; // except that i128 is not a legal type, and therefore gets split by; // common code into a pair of i64 arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZCallingConv.h:99,simpl,simple,99,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZCallingConv.h,1,['simpl'],['simple']
