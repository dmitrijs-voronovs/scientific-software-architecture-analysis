quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"uto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t _cacheAllNDim;  ! Cache all integrals with given numeric dimension ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions; void addNumIntDep (RooAbsArg const &arg);  Sort numeric integration variables in summation and integration lists. ;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:61106,variab,variables,61106,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['variab'],['variables']
Modifiability,"utoff. ; Definition at line 499 of file Reader.cxx. ◆ EvaluateMVA() [2/4]. Double_t TMVA::Reader::EvaluateMVA ; (; const std::vector< Float_t > & ; inputVec, . const TString & ; methodTag, . Double_t ; aux = 0 . ). Evaluate a std::vector<float> of input data for a given method The parameter aux is obligatory for the cuts method where it represents the efficiency cutoff. ; Definition at line 468 of file Reader.cxx. ◆ EvaluateMVA() [3/4]. Double_t TMVA::Reader::EvaluateMVA ; (; const TString & ; methodTag, . Double_t ; aux = 0 . ). evaluates MVA for given set of input variables ; Definition at line 514 of file Reader.cxx. ◆ EvaluateMVA() [4/4]. Double_t TMVA::Reader::EvaluateMVA ; (; MethodBase * ; method, . Double_t ; aux = 0 . ). evaluates the MVA ; Definition at line 548 of file Reader.cxx. ◆ EvaluateRegression() [1/3]. const std::vector< Float_t > & TMVA::Reader::EvaluateRegression ; (; const TString & ; methodTag, . Double_t ; aux = 0 . ). evaluates MVA for given set of input variables ; Definition at line 565 of file Reader.cxx. ◆ EvaluateRegression() [2/3]. const std::vector< Float_t > & TMVA::Reader::EvaluateRegression ; (; MethodBase * ; method, . Double_t ; aux = 0 . ). evaluates the regression MVA check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence it is not again checked in each of these subsequent calls. ; Definition at line 599 of file Reader.cxx. ◆ EvaluateRegression() [3/3]. Float_t TMVA::Reader::EvaluateRegression ; (; UInt_t ; tgtNumber, . const TString & ; methodTag, . Double_t ; aux = 0 . ). evaluates the regression MVA ; Definition at line 614 of file Reader.cxx. ◆ FindMVA(). TMVA::IMethod * TMVA::Reader::FindMVA ; (; const TString & ; methodTag). return pointer to method with tag ""methodTag"" ; Definition at line 695 of file Reader.cxx. ◆ GetMethodTypeFromFile(). TString TMVA::Reader::GetMethodTypeFromFile ; (; const TString & ; filename). private . read the method type from the fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:27021,variab,variables,27021,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['variab'],['variables']
Modifiability,"utomatically deduced. . Parameters. [in]aggregatorA callable with signature U(U,T) or void(U&,T), where T is the type of the column, U is the type of the aggregator variable ; [in]mergerA callable with signature U(U,U) or void(std::vector<U>&) used to merge the results of the accumulations of each thread ; [in]columnNameThe column to be aggregated. If omitted, the first default column is used instead. ; [in]aggIdentityThe aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted) . Returnsthe result of the aggregation wrapped in a RResultPtr.; An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is initialized to aggIdentity or default-constructed if aggIdentity is omitted. This action calls the aggregator callable for each processed entry, passing in the aggregator variable and the value of the column columnName. If the signature is U(U,T) the aggregator variable is then copy-assigned the result of the execution of the callable. Otherwise the signature of aggregator must be void(U&,T).; The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions. If its signature is U(U,U) the aggregator variables of each thread are merged two by two. If its signature is void(std::vector<U>& a) it is assumed that it merges all aggregators in a[0].; This action is lazy: upon invocation of this method the calculation is booked but not executed. Also see RResultPtr.; Example usage: auto aggregator = [](double acc, double x) { return acc * x; };; ROOT::EnableImplicitMT();; // If multithread is enabled, the aggregator function will be called by more threads; // and will produce a vector of partial accumulators.; // The merger function performs the final aggregation of these partial results.; auto merger = [](std::vector<double> &accumulators) {; for (auto i : ROOT::TSeqU(1u, accumulators.size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:32505,variab,variable,32505,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['variab'],['variable']
Modifiability,"utomatically via the root utility toroot from an interactive version of GEANT (see ROOT class TGeometry header for an example of use) This shows an example of the old geometry package (now obsolete) ;  ; file  na49geomfile.C;  Before executing this macro, the file makegeometry.C must have been executed. ;  ; file  na49view.C;  This macro generates with 2 views of the NA49 detector using the old obsolete geometry package. ;  ; file  parallel_world.C;  Misaligning geometry generate in many cases overlaps, due to the idealization of the design and the fact that in real life movements of the geometry volumes have constraints and are correlated. ;  ; file  RadioNuclides.C;  Macro that demonstrates usage of radioactive elements/materials/mixtures with TGeo package. ;  ; file  robot.C;  Drawing a famous Korean robot, TaekwonV, using ROOT geometry class. ;  ; file  rootgeom.C;  Definition of a simple geometry (the 4 ROOT characters) ;  ; file  runplugin.C;  Creates and runs a simple iterator plugin connected to TGeoPainter iterator. ;  ; file  shapes.C;  The old geometry shapes (see script geodemo.C) ;  ; file  shapesAnim.C;  Macro illustrating how to animate a geometry picture using a Timer. ;  ; file  south_gate.C;  Drawing a famous Korean gate, the South gate, called Namdeamoon in Korean, using ROOT geometry class. ;  ; file  station1.C;  Drawing a space station, using ROOT geometry class. ;  ; file  station2.C;  Drawing a space station (version 2), using ROOT geometry class. ;  ; file  tank.C;  Drawing a fine tank, using ROOT geometry class. ;  ; file  tessellatedNav.C;  Macro allowing to vizualize tessellations from Wavefront's .obj format. ;  ; file  testoptical.C;  Tests importing/exporting optical surfaces from GDML. ;  ; file  visualizeWavefrontObj.C;  Macro allowing to vizualize tessellations from Wavefront's .obj format. ;  ; file  xtruDraw.C;  Draw a ""representative"" TXTRU shape. ;  ; file  xtruSamples.C;  Draw a sample of TXTRU shapes some convex, concave (and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__geom.html:2248,plugin,plugin,2248,doc/master/group__tutorial__geom.html,https://root.cern,https://root.cern/doc/master/group__tutorial__geom.html,1,['plugin'],['plugin']
Modifiability,"utorials » RooFit Tutorials. Detailed Description; Morphing effective field theory distributions with RooLagrangianMorphFunc A morphing function as a function of one coefficient is setup and can be used to obtain the distribution for any value of the coefficient. . ; #include <RooAbsCollection.h>; #include <RooDataHist.h>; #include <RooDataSet.h>; #include <RooLagrangianMorphFunc.h>; #include <RooPlot.h>; #include <RooRealVar.h>; ; #include <TCanvas.h>; #include <TColor.h>; #include <TFile.h>; #include <TFolder.h>; #include <TH1.h>; #include <TLegend.h>; #include <TStyle.h>; ; using namespace RooFit;; ; void rf711_lagrangianmorph(); {; // C r e a t e v a r i a b l e s f o r; // m o r p h i n g f u n c t i o n; // ---------------------------------------------; ; std::string observablename = ""pTV"";; ; // Setup observable that is morphed; RooRealVar obsvar(observablename.c_str(), ""p_{T}^{V}"", 10, 600);; ; // Setup two couplings that enters the morphing function; // kSM -> SM coupling set to constant (1); // cHq3 -> EFT parameter with NewPhysics attribute set to true; RooRealVar kSM(""kSM"", ""sm modifier"", 1.0);; RooRealVar cHq3(""cHq3"", ""EFT modifier"", 0.0, 1.0);; cHq3.setAttribute(""NewPhysics"", true);; ; // I n p u t s n e e d e d f o r c o n f i g; // ---------------------------------------------; std::string infilename = std::string(gROOT->GetTutorialDir()) + ""/roofit/input_histos_rf_lagrangianmorph.root"";; std::vector<std::string> samplelist = {""SM_NPsq0"", ""cHq3_NPsq1"", ""cHq3_NPsq2""};; ; // S e t u p C o n f i g; // ---------------------------------------------; RooLagrangianMorphFunc::Config config;; config.fileName = infilename;; config.observableName = observablename;; config.folderNames = samplelist;; config.couplings.add(cHq3);; config.couplings.add(kSM);; ; // C r e a t e m o r p h i n g f u n c t i o n; // ---------------------------------------------; RooLagrangianMorphFunc morphfunc(""morphfunc"", ""morphed dist. of pTV"", config);; ; // G e t m o r p h e d d i s ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html:1114,coupling,couplings,1114,doc/master/rf711__lagrangianmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html,2,['coupling'],"['coupling', 'couplings']"
Modifiability,"utput : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; : Will now use the CPU architecture with BLAS and IMT support !; Factory : Booking method: ␛[1mSVM␛[0m; : ; SVM : [dataset] : Create Transformation ""Norm"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : Booking method: ␛[1mBDT␛[0m; : ; Factory : Booking method: ␛[1mRuleFit␛[0m; : ; Factory : ␛[1mTrain all methods␛[0m; Factory : [dataset] : Create Transformation ""I"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""D"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""P"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""G"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:9355,variab,variable,9355,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,8,['variab'],['variable']
Modifiability,"utput = ( 1 , 100 , 10 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 10 , Width = 4 ) Output = ( 1 , 100 , 4 ) Activation Function = Identity; : Using 3200 events for training and 800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.691476; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.605916 0.542204 0.0761789 0.00657979 45977.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.477495 0.458718 0.0776312 0.00665553 45085.9 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.438338 0.418147 0.0780597 0.00669006 44837 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.333122 0.322325 0.0804981 0.00689735 43477.8 0; : 13 Minimum Test error ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:15173,config,configuration,15173,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['config'],['configuration']
Modifiability,"utput stream out. ;  ; virtual void SavePrimitiveSubframes (std::ostream &out, Option_t *option="""");  Auxiliary protected method used to save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; virtual void SetLayoutManager (TGLayoutManager *l);  Set the layout manager for the composite frame. ;  ; void SetMapSubwindows (Bool_t on) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPack.html:6455,inherit,inherited,6455,doc/master/classTGPack.html,https://root.cern,https://root.cern/doc/master/classTGPack.html,1,['inherit'],['inherited']
Modifiability,"utput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddMulticlassOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void NoErrorCalc(Double_t*const err, Double_t*const errUpper). Double_t GetMvaValue(const TMVA::Event*const ev, Double_t* err = 0, Double_t* errUpper = 0). Bool_t IsSignalLike(); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event would be selected as signal or background. Bool_t IsSignalLike(Double_t mvaVal); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event with this mva output value would tbe selected as signal or background. void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample. bias = average deviation; dev = average absolute deviation; rms = rms of deviation. void TestMulticlass(); test multiclass classification. void TestClassification(); initialization. void WriteStateToStream(ostream& tf) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void AddInfoItem(void* gi, const TString& name, const TString& value) const; xml writing. void AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType). void WriteStateToXML(void* parent) const; general method used in writing the header of the weight files where",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:25243,variab,variable,25243,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,2,['variab'],['variable']
Modifiability,"utput::ETraversekBoth; static TDocOutput::EGraphvizToolTDocOutput::kCirco; static TDocOutput::EGraphvizToolTDocOutput::kDot; static TClassDocOutput::ETraversekDown; static TDocOutput::EGraphvizToolTDocOutput::kFdp; static TDocOutput::EGraphvizToolTDocOutput::kNeato; static TClassDocOutput::ETraversekUp. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TClassDocOutput(THtml& html, TClass* cl, TList* typedefs); Create an object given the invoking THtml object, and the TClass; object that we will generate output for. ~TClassDocOutput(); Destructor, deletes fParser. void Class2Html(Bool_t force = kFALSE); Create HTML files for a single class. void ListFunctions(ostream& classFile); Write the list of functions. void ListDataMembers(ostream& classFile); Write the list of data members and enums. Bool_t ClassDotCharts(ostream& out); This function builds the class charts for one class in GraphViz/Dot format,; i.e. the inheritance diagram, the include dependencies, and the library; dependency. Input: out - output file stream. void ClassHtmlTree(ostream& out, TClass* classPtr, TClassDocOutput::ETraverse dir = kBoth, int depth = 1); This function builds the class tree for one class in HTML; (inherited and succeeding classes, called recursively). Input: out - output file stream; classPtr - pointer to the class; dir - direction to traverse tree: up, down or both. void ClassTree(TVirtualPad* canvas, Bool_t force = kFALSE); It makes a graphical class tree. Input: psCanvas - pointer to the current canvas; classPtr - pointer to the class. Bool_t CreateDotClassChartInh(const char* filename); Build the class tree for one class in GraphViz/Dot format. Input: filename - output dot file incl. path. Bool_t CreateDotClassChartInhMem(const char* filename); Build the class tree of inherited members for one class in GraphViz/Dot format. Input: filename - output dot file incl. path. Bool_t CreateDotClassChartIncl(const char* filename); Build the include",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassDocOutput.html:11974,inherit,inheritance,11974,root/html602/TClassDocOutput.html,https://root.cern,https://root.cern/root/html602/TClassDocOutput.html,2,['inherit'],['inheritance']
Modifiability,"utputFilePrefix ();  retrieve prefix for output files ;  ; std::map< std::string, double > & GetParamValues ();  get map: parameter name <--> parameter value ;  ; std::string GetPOI (unsigned int i=0);  get name of PoI at given index ;  ; std::vector< std::string > & GetPOIList ();  get vector of PoI names ;  ; std::vector< std::string > GetPreprocessFunctions () const;  Returns a list of defined preprocess function expressions. ;  ; void SetBinHigh (int BinHigh);  ; void SetBinLow (int BinLow);  ; void SetExportOnly (bool ExportOnly) R__DEPRECATED(6;  Do not produce any plots or tables, just save the model. ;  ; void SetFunctionObjects (std::vector< RooStats::HistFactory::PreprocessFunction > objects);  ; void SetLumi (double Lumi);  set integrated luminosity used to normalise histograms (if NormalizeByTheory is true for this sample) ;  ; void SetLumiRelErr (double RelErr);  set relative uncertainty on luminosity ;  ; void SetOutputFilePrefix (const std::string &prefix);  set output prefix ;  ; void SetParamValue (const std::string &param, double value);  Set a parameter to a specific value (And optionally fix it) ;  ; void SetPOI (const std::string &POI);  insert PoI at beginning of vector of PoIs ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1Measurement.html:3526,inherit,inherited,3526,doc/master/classRooStats_1_1HistFactory_1_1Measurement.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1Measurement.html,1,['inherit'],['inherited']
Modifiability,"utton belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButton.html:26545,inherit,inherited,26545,doc/master/classTGButton.html,https://root.cern,https://root.cern/doc/master/classTGButton.html,12,['inherit'],['inherited']
Modifiability,"utton to popdown the dialog. ; Definition at line 22 of file TRootHelpDialog.h. Public Member Functions;  TRootHelpDialog (const TGWindow *main=nullptr, const char *title=""ROOT Help Dialog"", UInt_t w=1, UInt_t h=1);  Create a help text dialog. ;  ;  ~TRootHelpDialog () override;  Delete help text dialog. ;  ; void AddText (const char *helpText);  Add help text from helpText buffer to already existing text in TGTextView. ;  ; void CloseWindow () override;  Called when closed via window manager action. ;  ; TClass * IsA () const override;  ; void Popup ();  Show help dialog. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process OK button. ;  ; void SetText (const char *helpText);  Set help text from helpText buffer in TGTextView. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootHelpDialog.html:1391,inherit,inherited,1391,doc/master/classTRootHelpDialog.html,https://root.cern,https://root.cern/doc/master/classTRootHelpDialog.html,1,['inherit'],['inherited']
Modifiability,"ux ); Evaluate a std::vector<double> of input data for a given method; The parameter aux is obligatory for the cuts method where it represents the efficiency cutoff. Double_t EvaluateMVA(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. Double_t EvaluateMVA(TMVA::MethodBase* method, Double_t aux = 0); evaluates the MVA. const std::vector< Float_t >& EvaluateRegression(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateRegression(TMVA::MethodBase* method, Double_t aux = 0); evaluates the regression MVA; check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; it is not again checked in each of these subsequet calls.. Float_t EvaluateRegression(UInt_t tgtNumber, const TString& methodTag, Double_t aux = 0); evaluates the regression MVA. const std::vector< Float_t >& EvaluateMulticlass(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateMulticlass(TMVA::MethodBase* method, Double_t aux = 0); evaluates the multiclass MVA; check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; it is not again checked in each of these subsequet calls.. Float_t EvaluateMulticlass(UInt_t clsNumber, const TString& methodTag, Double_t aux = 0); evaluates the multiclass MVA. TMVA::IMethod* FindMVA(const TString& methodTag); return pointer to method with tag ""methodTag"". TMVA::MethodCuts* FindCutsMVA(const TString& methodTag); special function for Cuts to avoid dynamic_casts in ROOT macros,; which are not properly handled by CINT. Double_t GetProba(const TString& methodTag, Double_t ap_sig = 0.5, Double_t mvaVal = -9999999); evaluates probability of MVA for given set of input variables. Double_t GetRarity(const TString& methodTag, Double_t mvaVal = -9999999); evaluates th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Reader.html:13867,variab,variables,13867,root/html534/TMVA__Reader.html,https://root.cern,https://root.cern/root/html534/TMVA__Reader.html,3,['variab'],['variables']
Modifiability,"v () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsOnBoundary (const Double_t *) const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; virtual TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE)=0;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index of next division. ;  ; void SetRange (Double_t start, Double_t step, Int_t ndivisions);  Set division range. Use this method only when dividing an assembly. ;  ; void SetSpacedOut (Bool_t flag);  ; void SetVolume (TGeoVolume *vol);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UpdateMatrix (Int_t, TGeoHMatrix &) const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternFinder.html:3254,inherit,inherited,3254,doc/master/classTGeoPatternFinder.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html,1,['inherit'],['inherited']
Modifiability,"v - cell value, see definition of ECellValue. Bool_t CellValueIsUndefined(TMVA::PDEFoamCell* ); Returns true, if the value of the given cell is undefined. std::vector<Float_t> GetCellTargets(vector<Float_t>& tvals, TMVA::ETargetSelection ts); This function is used when the MultiTargetRegression==True; option is set. It calculates the mean target or most probable; target values if 'tvals' variables are given ('tvals' does not; contain targets). Parameters:; - tvals - transformed event variables (element of [0,1]) (no targets!); - ts - method of target selection (kMean, kMpv). Result:; vetor of mean targets or most probable targets over all cells; which first coordinates enclose 'tvals'. std::vector<Float_t> GetProjectedRegValue(vector<Float_t>& vals, TMVA::EKernel kernel = kNone, TMVA::ETargetSelection ts = kMean); This function is used when the MultiTargetRegression==True option is set.; Returns regression value i, given the event variables 'vals'.; Note: number of foam dimensions = number of variables + number of targets. Parameters:; - vals - event variables (no targets); - kernel - used kernel (None or Gaus); - ts - method of target selection (Mean or Mpv). Double_t GetCellDensity(vector<Float_t>& xvec, TMVA::EKernel kernel = kNone); Returns density (=number of entries / volume) of cell that; encloses the untransformed event vector 'xvec'. This function; is called by GetMvaValue() in case of two separated foams; (signal and background). 'kernel' can be either kNone or kGaus. Double_t GetCellValue( PDEFoamCell* cell, ECellValue cv ); This function returns a value, which was saved in the foam cell,; depending on the foam type. The value to return is specified; with the 'cv' parameter. Double_t GetCellValue(vector<Float_t>& , TMVA::ECellValue ); This function finds the cell, which corresponds to the given; untransformed event vector 'xvec' and return its value, which is; given by the parameter 'cv'. Double_t GetBuildUpCellEvents(TMVA::PDEFoamCell* cell); Returns the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__PDEFoam.html:20390,variab,variables,20390,root/html528/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html528/TMVA__PDEFoam.html,1,['variab'],['variables']
Modifiability,"v, RooExponential, RooGamma, RooGaussian, RooLandau, RooPolynomial, RooUniform, RooEfficiency, and RooPolyVar.; Definition at line 4425 of file RooAbsReal.cxx. ◆ chi2FitTo() [1/4]. RooFit::OwningPtr< RooFitResult > RooAbsReal::chi2FitTo ; (; RooDataHist & ; data, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). virtual . Perform a \( \chi^2 \) fit to given histogram. ; By default the fit is executed through the MINUIT commands MIGRAD, HESSE in succession; The following named arguments are supported. Options to control construction of chi2 . Extended(bool flag) Only applicable when fitting a RooAbsPdf. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight. This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events (in RooFit jargon, ""if the pdf can be extended"").; Passing Extended(true) when the the pdf makes no prediction on the expected number of events will result in error messages, and the chi2 will fall back to the total data weight to scale the normalized pdf.; There are cases where the fit must be done in extended mode. This happens for example when you have a RooAddPdf where the coefficients represent component yields. If the fit is not extended, these coefficients will not be well-defined, as the RooAddPdf always normalizes itself. If you pass Extended(false) in such a case, an error will be printed and you'll most likely get garbage results. . Range(const char* name) Fit only data inside range with given name . Range(double lo, double hi) Fit only data inside given range. A range named ""fit"" is created on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:68398,extend,extended,68398,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['extend'],['extended']
Modifiability,"v, RooExponential, RooGamma, RooGaussian, RooLandau, RooPolynomial, RooUniform, RooEfficiency, and RooPolyVar.; Definition at line 4501 of file RooAbsReal.cxx. ◆ chi2FitTo() [1/4]. RooFit::OwningPtr< RooFitResult > RooAbsReal::chi2FitTo ; (; RooDataHist & ; data, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). virtual . Perform a \( \chi^2 \) fit to given histogram. ; By default the fit is executed through the MINUIT commands MIGRAD, HESSE in succession; The following named arguments are supported. Options to control construction of chi2 . Extended(bool flag) Only applicable when fitting a RooAbsPdf. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight. This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events (in RooFit jargon, ""if the pdf can be extended"").; Passing Extended(true) when the the pdf makes no prediction on the expected number of events will result in error messages, and the chi2 will fall back to the total data weight to scale the normalized pdf.; There are cases where the fit must be done in extended mode. This happens for example when you have a RooAddPdf where the coefficients represent component yields. If the fit is not extended, these coefficients will not be well-defined, as the RooAddPdf always normalizes itself. If you pass Extended(false) in such a case, an error will be printed and you'll most likely get garbage results. . Range(const char* name) Fit only data inside range with given name . Range(double lo, double hi) Fit only data inside given range. A range named ""fit"" is created on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:69666,extend,extended,69666,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['extend'],['extended']
Modifiability,"vPdf.cxx. ◆ compileForNormSet(). std::unique_ptr< RooAbsArg > RooAbsAnaConvPdf::compileForNormSet ; (; RooArgSet const & ; normSet, . RooFit::Detail::CompileContext & ; ctx . ); const. overridevirtual . Reimplemented from RooAbsArg.; Definition at line 669 of file RooAbsAnaConvPdf.cxx. ◆ convVar() [1/2]. RooAbsRealLValue * RooAbsAnaConvPdf::convVar ; (; ). Retrieve the convolution variable. ; Return a pointer to the convolution variable instance used in the resolution model. ; Definition at line 314 of file RooAbsAnaConvPdf.cxx. ◆ convVar() [2/2]. const RooAbsRealLValue * RooAbsAnaConvPdf::convVar ; (; ); const. inline . Retrieve the convolution variable. ; Definition at line 79 of file RooAbsAnaConvPdf.h. ◆ declareBasis(). Int_t RooAbsAnaConvPdf::declareBasis ; (; const char * ; expression, . const RooArgList & ; params . ). Declare a basis function for use in this physics model. ; The string expression must be a valid RooFormulVar expression representing the basis function, referring to the convolution variable as '@0', and any additional parameters (supplied in 'params' as '@1','@2' etc.; The return value is a unique identifier code, that will be passed to coefficient() to identify the basis function for which the coefficient is requested. If the resolution model used does not support the declared basis function, code -1 is returned. ; Definition at line 159 of file RooAbsAnaConvPdf.cxx. ◆ DeclFileName(). static const char * RooAbsAnaConvPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 120 of file RooAbsAnaConvPdf.h. ◆ evaluate(). double RooAbsAnaConvPdf::evaluate ; (; ); const. overrideprotectedvirtual . Calculate the current unnormalized value of the PDF. ; PDF = sum_k coef_k * [ basis_k (x) ResModel ] ; Implements RooAbsReal.; Definition at line 329 of file RooAbsAnaConvPdf.cxx. ◆ forceAnalyticalInt(). bool RooAbsAnaConvPdf::forceAnalyticalInt ; (; const RooAbsArg & ; dep); const. overridevi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsAnaConvPdf.html:83839,variab,variable,83839,doc/master/classRooAbsAnaConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsAnaConvPdf.html,1,['variab'],['variable']
Modifiability,"v[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 670 of file TMinuitMinimizer.cxx. ◆ GetHessianMatrix(). bool TMinuitMinimizer::GetHessianMatrix ; (; double * ; h); const. overridevirtual . Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ; The array will be filled as h[i *ndim + j] ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 682 of file TMinuitMinimizer.cxx. ◆ GetMinosError(). bool TMinuitMinimizer::GetMinosError ; (; unsigned int ; i, . double & ; errLow, . double & ; errUp, . int ; = 0 . ). overridevirtual . minos error for variable i, return false if Minos failed ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 746 of file TMinuitMinimizer.cxx. ◆ GetVariableSettings(). bool TMinuitMinimizer::GetVariableSettings ; (; unsigned int ; ivar, . ROOT::Fit::ParameterSettings & ; var . ); const. overridevirtual . get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 411 of file TMinuitMinimizer.cxx. ◆ GlobalCC(). double TMinuitMinimizer::GlobalCC ; (; unsigned int ; i); const. overridevirtual . global correlation coefficient for variable i ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 734 of file TMinuitMinimizer.cxx. ◆ Hesse(). bool TMinuitMinimizer::Hesse ; (; ). overridevirtual . perform a full calculation of the Hessian matrix for error calculation ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1004 of file TMinuitMinimizer.cxx. ◆ InitTMinuit(). void TMinuitMinimizer::InitTMinuit ; (; int ; ndim). protected .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:17504,variab,variable,17504,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,"va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; SeparationBase * fSepType;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::PDEFoamDiscriminant; UInt_t fClass;  ;  Protected Attributes inherited from TMVA::PDEFoam; Double_t * fAlpha;  [fDim] Internal parameters of the hyperrectangle ;  ; PDEFoamCell ** fCells;  [fNCells] Array of ALL cells ;  ; Int_t fDim;  Dimension of the integration/simulation space. ;  ; PDEFoamDensityBase * fDistr;  ! distribution of training events ;  ; EDTSeparation fDTSeparation;  BACKWARDS COMPATIBILITY: split cells according to decision tree logic. ;  ; Int_t fEvPerBin;  Maximum number of effective (wt=1) events per bin. ;  ; Bool_t fFillFoamWithOrigWeights;  BACKWARDS COMPATIBILITY: fill the foam with boost or orig. weights. ;  ; EFoamType fFoamType;  BACKWARDS COMPATIBILITY: type of foam. ;  ; TObjArray * fHistEdg;  Histograms of wt, one for each cell edge. ;  ; Int_t * fInhiDiv;  ! [fDim] Flags for inhibiting cell division ;  ; Int_t fLastCe;  Index of the last cell. ;  ; MsgLogger * fLogger;  ! message logger ;  ; Int_t * fMaskDiv;  ! [fDim] Dynamic Mask for cell division ;  ; UInt_t fMaxDepth;  maximum depth of cell tree ;  ; TString fName;  Name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTree.html:17537,inherit,inherited,17537,doc/master/classTMVA_1_1PDEFoamDecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTree.html,3,['inherit'],['inherited']
Modifiability,"vaMatB(iv, jm) = (*corrMatB)(nmeth + iv, jm);; 1769 }; 1770 }; 1771 ; 1772 if (nmeth > 1) {; 1773 Log() << kINFO << Endl;; 1774 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1775 << ""Inter-MVA correlation matrix (signal):"" << Endl;; 1776 gTools().FormattedOutput(mvaMatS, *theVars, Log());; 1777 Log() << kINFO << Endl;; 1778 ; 1779 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1780 << ""Inter-MVA correlation matrix (background):"" << Endl;; 1781 gTools().FormattedOutput(mvaMatB, *theVars, Log());; 1782 Log() << kINFO << Endl;; 1783 }; 1784 ; 1785 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1786 << ""Correlations between input variables and MVA response (signal):"" << Endl;; 1787 gTools().FormattedOutput(varmvaMatS, theInputVars, *theVars, Log());; 1788 Log() << kINFO << Endl;; 1789 ; 1790 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1791 << ""Correlations between input variables and MVA response (background):"" << Endl;; 1792 gTools().FormattedOutput(varmvaMatB, theInputVars, *theVars, Log());; 1793 Log() << kINFO << Endl;; 1794 } else; 1795 Log() << kWARNING << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1796 << ""<TestAllMethods> cannot compute correlation matrices"" << Endl;; 1797 ; 1798 // print overlap matrices; 1799 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1800 << ""The following \""overlap\"" matrices contain the fraction of events for which "" << Endl;; 1801 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1802 << ""the MVAs 'i' and 'j' have returned conform answers about \""signal-likeness\"""" << Endl;; 1803 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1804 << ""An event is signal-like, if its MVA output exceeds the following value:"" << Endl;; 1805 gTools().FormattedOutput(rvec, *theVars, ""Method"", ""Cut value"", Log());; 1806 Log() << kINFO << Form(""Dataset[%s] : """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:73954,variab,variables,73954,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variables']
Modifiability,"va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TKey; char * fBuffer;  Object buffer. ;  ; TBuffer * fBufferRef;  Pointer to the TBuffer object. ;  ; TString fClassName;  Object Class name. ;  ; Short_t fCycle;  Cycle number. ;  ; TDatime fDatime;  Date/Time of insertion in file. ;  ; Short_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir ;  ; Long64_t fSeekKey;  Location of object on file. ;  ; Long64_t fSeekPdir;  Location of parent directory on file. ;  ; Int_t fVersion;  Key version identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for ROOT::Experimental::Internal::RKeyBlob:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RKeyBlob() [1/2]. ROOT::Experimental::Internal::RKeyBlob::RKeyBlob ; (; ). default . ◆ RKeyBlob() [2/2]. ROOT::Experimental::Internal::RKeyBlob::RKeyBlob ; (; TFile * ; file). inlineexplicit . Definition at line 617 of file RMiniFile.cxx. Member Function Documentation. ◆ Class(). static TClass * ROOT::Experimental::Internal::RKeyBlob::Class ; (; ). inlinestatic . ReturnsTClass describing this class ; Definition at line 631 of file RMiniFile.cxx. ◆ Class_Name(). static const char * ROOT::Experimental::Internal::RKeyBlob::Class_Name ; (; ). inlinestatic . ReturnsName of this class ; Definition at line 631 of file RMiniFile.cxx. ◆ Class_Version(). static constexpr Version_t ROOT::Experimental::Internal::RKeyBlob::Class_Version ; (; ). inlinestati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html:16307,inherit,inherited,16307,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,1,['inherit'],['inherited']
Modifiability,"va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TContextMenuImp;  TContextMenuImp (const TContextMenuImp &cmi);  ; TContextMenuImp & operator= (const TContextMenuImp &cmi);  . Private Member Functions;  TRootContextMenu (const TRootContextMenu &);  ; void CreateMenu (TObject *object);  Create the context menu depending on the selected object. ;  ; TRootContextMenu & operator= (const TRootContextMenu &);  . Private Attributes; TRootDialog * fDialog;  dialog prompting for command line arguments ;  ; TList * fTrash;  list of objects to be deleted before refilling menu ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:29423,inherit,inherited,29423,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,1,['inherit'],['inherited']
Modifiability,"vailable; Pointer is managed internally, it must not be deleted. double Chi2() const; Chi2 fit value; in case of likelihood must be computed ?. { return fChi2; }. unsigned int Ndf() const; Number of degree of freedom. { return fNdf; }. double Prob() const; p value of the fit (chi2 probability). const std::vector<double> & Errors() const; parameter errors (return st::vector). { return fErrors; }. const double * GetErrors() const; parameter errors (return const pointer). { return (fErrors.empty()) ? 0 : &fErrors.front(); }. const std::vector<double> & Parameters() const; parameter values (return std::vector). { return fParams; }. const double * GetParams() const; parameter values (return const pointer). { return &fParams.front(); }. double Value(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Parameter(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Error(unsigned int i) const; parameter error by index; (NOTE: this due to conflict with TObject::Error cannot used in derived class which; inherits from TObject. Use instead ParError (or Errors()[i] ). double ParError(unsigned int i) const; parameter error by index. std::string ParName(unsigned int i) const; name of the parameter. void SetMinosError(unsigned int i, double elow, double eup); set the Minos errors for parameter i (called by the Fitter class when running Minos). bool HasMinosError(unsigned int i) const; query if parameter i has the Minos error. double LowerError(unsigned int i) const; lower Minos error. If Minos has not run for parameter i return the parabolic error. double UpperError(unsigned int i) const; upper Minos error. If Minos has not run for parameter i return the parabolic error. double GlobalCC(unsigned int i) const; parameter global correlation coefficient. double CovMatrix(unsigned int i, unsigned int j) const; retrieve covariance matrix element. double Correlation(unsigned int i, unsigned int j) const; retrieve correlation elements. v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__FitResult.html:8991,inherit,inherits,8991,root/html604/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__FitResult.html,1,['inherit'],['inherits']
Modifiability,"value (integer representation). ;  ; virtual void SetLimits (ELimit limits=kNELNoLimits, Double_t min=0, Double_t max=1);  Set the numerical limits. ;  ; virtual void SetLogStep (Bool_t on=kTRUE);  Set logarithmic steps. ;  ; virtual void SetNumber (Double_t val, Bool_t emit=kTRUE);  Set the numeric value (floating point representation). ;  ; void SetState (Bool_t state) override;  Set the active state. ;  ; void SetText (const char *text, Bool_t emit=kTRUE) override;  Set the value (text format). ;  ; virtual void SetTime (Int_t hour, Int_t min, Int_t sec, Bool_t emit=kTRUE);  Set the numeric value (time format). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TextChanged (const char *text=nullptr) override;  Text has changed message. ;  ;  Public Member Functions inherited from TGTextEntry;  TGTextEntry (const TGWindow *p, TGTextBuffer *text, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kSunkenFrame|kDoubleBorder, Pixel_t back=GetWhitePixel());  Create a text entry widget. ;  ;  TGTextEntry (const TGWindow *parent=nullptr, const char *text=nullptr, Int_t id=-1);  Simple text entry constructor. ;  ;  TGTextEntry (const TString &contents, const TGWindow *parent, Int_t id=-1);  Simple test entry constructor. ;  ;  ~TGTextEntry () override;  Delete a text entry widget. ;  ; virtual void AppendText (const char *text);  Appends text to the end of text entry, clears the selection and moves the cursor to the end of the line. ;  ; void Backspace ();  Deletes the character on the left side of the text cursor and moves the cursor one position to the left. ;  ; void Clear (Option_t *option="""") override;  Clears up the text entry. ;  ; void CursorLeft (Bool_t mark=kFALSE, Int_t steps=1);  Moves the cursor leftwards one or more characters. ;  ; virtual void CursorOutDown ();  This signal is emitted when cursor is going",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:3744,inherit,inherited,3744,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,1,['inherit'],['inherited']
Modifiability,"value for this object.; This default implementation considers all values valid. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Create a RooProfileLL object that eliminates all nuisance parameters in the; present function. The nuisance parameters are defined as all parameters; of the function except the stated paramsOfInterest. RooAbsReal* createIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. The following named arguments are accepted. NormSet(const RooArgSet&) -- Specify normalization set, mostly useful when working with PDFS; NumIntConfig(const RooNumIntConfig&) -- Use given configuration for any numeric integration, if necessary; Range(const char* name) -- Integrate only over given range. Multiple ranges may be specified; by passing multiple Range() arguments. RooAbsReal* createIntegral(const RooArgSet& iset, const RooArgSet* nset = 0, const RooNumIntConfig* cfg = 0, const char* rangeName = 0) const; Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. If nset is specified the integrand is reque",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsReal.html:35857,variab,variables,35857,root/html528/RooAbsReal.html,https://root.cern,https://root.cern/root/html528/RooAbsReal.html,6,['variab'],['variables']
Modifiability,"value from table and convert it to Bool_t value. void SqlReadBasic(UChar_t& value); read current value from table and convert it to UChar_t value. void SqlReadBasic(UShort_t& value); read current value from table and convert it to UShort_t value. void SqlReadBasic(UInt_t& value); read current value from table and convert it to UInt_t value. void SqlReadBasic(ULong_t& value); read current value from table and convert it to ULong_t value. void SqlReadBasic(ULong64_t& value); read current value from table and convert it to ULong64_t value. const char* SqlReadValue(const char* tname); read string value from current stack node. const char* SqlReadCharStarValue(); read CharStar value, if it has special code, request it from large table. TSQLStructure* PushStack(); Push stack with structurual information about streamed object. TSQLStructure* PopStack(); Pop stack. TSQLStructure* Stack(Int_t depth = 0); returns head of stack. void SetFloatFormat(const char* fmt = ""%e""); set printf format for float/double members, default ""%e""; changes global TSQLServer variable. const char* GetFloatFormat(); return current printf format for float/double members, default ""%e""; return format, hold by TSQLServer. Int_t ApplySequence(const TStreamerInfoActions::TActionSequence& sequence, void* object); Read one collection of objects from the buffer using the StreamerInfoLoopAction.; The collection needs to be a split TClonesArray or a split vector of pointers. Int_t ApplySequenceVecPtr(const TStreamerInfoActions::TActionSequence& sequence, void* start_collection, void* end_collection); Read one collection of objects from the buffer using the StreamerInfoLoopAction.; The collection needs to be a split TClonesArray or a split vector of pointers. Int_t ApplySequence(const TStreamerInfoActions::TActionSequence& sequence, void* start_collection, void* end_collection); Read one collection of objects from the buffer using the StreamerInfoLoopAction. TBufferSQL2(const TBufferSQL2& ); TBufferSQL2 objects",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBufferSQL2.html:43907,variab,variable,43907,root/html532/TBufferSQL2.html,https://root.cern,https://root.cern/root/html532/TBufferSQL2.html,4,['variab'],['variable']
Modifiability,"value from table and convert it to Bool_t value. void SqlReadBasic(UChar_t& value); read current value from table and convert it to UChar_t value. void SqlReadBasic(UShort_t& value); read current value from table and convert it to UShort_t value. void SqlReadBasic(UInt_t& value); read current value from table and convert it to UInt_t value. void SqlReadBasic(ULong_t& value); read current value from table and convert it to ULong_t value. void SqlReadBasic(ULong64_t& value); read current value from table and convert it to ULong64_t value. const char* SqlReadValue(const char* tname); read string value from current stack node. const char* SqlReadCharStarValue(); read CharStar value, if it has special code, request it from large table. TSQLStructure* PushStack(); Push stack with structurual information about streamed object. TSQLStructure* PopStack(); Pop stack. TSQLStructure* Stack(Int_t depth = 0); returns head of stack. void SetFloatFormat(const char* fmt = ""%e""); set printf format for float/double members, default ""%e""; changes global TSQLServer variable. const char* GetFloatFormat(); return current printf format for float/double members, default ""%e""; return format, hold by TSQLServer. Int_t ReadSequence(const TStreamerInfoActions::TActionSequence& sequence, void* object); Read one collection of objects from the buffer using the StreamerInfoLoopAction.; The collection needs to be a split TClonesArray or a split vector of pointers. Int_t ReadSequenceVecPtr(const TStreamerInfoActions::TActionSequence& sequence, void* start_collection, void* end_collection); Read one collection of objects from the buffer using the StreamerInfoLoopAction.; The collection needs to be a split TClonesArray or a split vector of pointers. Int_t ReadSequence(const TStreamerInfoActions::TActionSequence& sequence, void* start_collection, void* end_collection); Read one collection of objects from the buffer using the StreamerInfoLoopAction. TBufferSQL2(const TBufferSQL2& ); TBufferSQL2 objects ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBufferSQL2.html:43904,variab,variable,43904,root/html530/TBufferSQL2.html,https://root.cern,https://root.cern/root/html530/TBufferSQL2.html,1,['variab'],['variable']
Modifiability,"value is calculated for each event using the observable values of the event in case the function depends on variables with names that are identical to the observable names in the dataset ; Definition at line 1171 of file RooDataSet.cxx. ◆ addFast(). void RooDataSet::addFast ; (; const RooArgSet & ; data, . double ; wgt = 1.0, . double ; wgtError = 0.0 . ). virtual . Add a data point, with its coordinates specified in the 'data' argset, to the data set. ; AttentionThe order and type of the input variables are assumed to be the same as for the RooArgSet returned by RooDataSet::get(). Input values will just be written into the internal data columns by ordinal position. ; Parameters. [in]dataData point. ; [in]wgtEvent weight. Defaults to 1. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]wgtErrorOptional weight error. . NoteThis requires including the weight variable in the set of StoreError variables when constructing the dataset. ; Definition at line 1037 of file RooDataSet.cxx. ◆ append(). void RooDataSet::append ; (; RooDataSet & ; data). Add all data points of given data set to this data set. ; Observable in 'data' that are not in this dataset with not be transferred ; Definition at line 1138 of file RooDataSet.cxx. ◆ binnedClone(). RooFit::OwningPtr< RooDataHist > RooDataSet::binnedClone ; (; const char * ; newName = nullptr, . const char * ; newTitle = nullptr . ); const. Return binned clone of this dataset. ; Definition at line 736 of file RooDataSet.cxx. ◆ Class(). static TClass * RooDataSet::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooDataSet::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooDataSet::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 143 of file RooDataSet.h. ◆ cleanup(). voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:45631,variab,variable,45631,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,2,['variab'],"['variable', 'variables']"
Modifiability,"value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyrho1; RooRealProxyrho2; RooRealProxysigp; RooRealProxyx; RooRealProxyxi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBukinPdf(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _Xp, RooAbsReal& _sigp, RooAbsReal& _xi, RooAbsReal& _rho1, RooAbsReal& _rho2); The two addresses refer to our first dependent variable and; parameter, respectively, as declared in the rdl file; Constructor. RooBukinPdf(const RooBukinPdf& other, const char* name = 0); Copy constructor. Double_t evaluate() const; Implementation. RooBukinPdf(); {}. TObject* clone(const char* newname) const; { return new RooBukinPdf(*this,newname);	}. virtual ~RooBukinPdf(); { }. » Last changed: Thu Sep 23 19:58:36 2010 » Last generated: 2010-09-23 19:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooBukinPdf.html:40122,variab,variable,40122,root/html528/RooBukinPdf.html,https://root.cern,https://root.cern/root/html528/RooBukinPdf.html,1,['variab'],['variable']
Modifiability,"value of dependent; quantity. See also the; class description. void AddTestRow(const Double_t* x, Double_t D, Double_t E = 0); Add a row consisting of fNVariables independent variables, the; known, dependent quantity, and optionally, the square error in; the dependent quantity, to the test sample to be used for the; test of the parameterization.; This sample needn't be representive of the problem at hand.; Please note, that if no error is given Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void Browse(TBrowser* b); Browse the TMultiDimFit object in the TBrowser. void Clear(Option_t* option = """"); Clear internal structures and variables. Double_t Eval(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalError(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization error at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalControl(const Int_t* powers) const; PRIVATE METHOD:; Calculate the control parameter from the passed powers. Double_t EvalFactor(Int_t p, Double_t x) const; PRIVATE METHOD:; Evaluate function with power p at variable value x. void FindParameterization(Option_t* option = """"); Find the parameterization. Options:; None so far. For detailed description of what this entails, please refer to the; class description. void Fit(Option_t* option = """"); Try to fit the found parameterisation to the test sample. Options; M use Minuit to improve coefficients. Also, refer to; class description. TMultiDimFit* Instance(); Return the static instance. void MakeCandidates(); PRIVATE METHOD:; Create list of candidate functions for the parameterisation. See; also; class description. Double_t MakeChi2(const Double_t* coeff = 0); C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:26941,parameteriz,parameterization,26941,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,6,['parameteriz'],['parameterization']
Modifiability,"value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealSumPdf(); Default constructor. RooRealSumPdf(const char *name, const char *title); Constructor with name and title. RooRealSumPdf(const char *name, const char *title,		 RooAbsReal& func1, RooAbsReal& func2, RooAbsReal& coef1); Construct p.d.f consisting of coef1*func1 + (1-coef1)*func2; The input coefficients and functions are allowed to be negative; but the resulting sum is not, which is enforced at runtime. RooRealSumPdf(const char *name, const char *title, const RooArgList& inFuncList, const RooArgList& inCoefList, Bool_t extended); Constructor p.d.f implementing sum_i [ coef_i * func_i ], if N_coef==N_func; or sum_i [ coef_i * func_i ] + (1 - sum_i [ coef_i ] )* func_N if Ncoef==N_func-1. All coefficients and functions are allowed to be negative; but the sum is not, which is enforced at runtime. RooRealSumPdf(const RooRealSumPdf& other, const char* name); Copy constructor. ~RooRealSumPdf(); Destructor. RooAbsPdf::ExtendMode extendMode() const. Double_t evaluate() const; Calculate the current value. Bool_t checkObservables(const RooArgSet* nset) const; Check if FUNC is valid for given normalization set.; Coeffient and FUNC must be non-overlapping, but func-coefficient; pairs may overlap each other. In the present implementation, coefficients may not be observables or derive; from observables. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealSumPdf.html:40769,extend,extended,40769,root/html526/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html526/RooRealSumPdf.html,1,['extend'],['extended']
Modifiability,"value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:13857,config,configuration,13857,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,3,['config'],['configuration']
Modifiability,"value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and paramete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBreitWigner.html:12838,config,configuration,12838,doc/master/classRooBreitWigner.html,https://root.cern,https://root.cern/doc/master/classRooBreitWigner.html,27,['config'],['configuration']
Modifiability,"value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:17494,config,configuration,17494,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,20,['config'],['configuration']
Modifiability,"value. bool CheckMinuitInstance() const; check instance of fMinuit. bool CheckVarIndex(unsigned int ivar) const; check index of Variable (assume fMinuit exists). bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. bool SetVariableStepSize(unsigned int , double ); set the step-size of an existing variable; parameter must exist or return false. bool SetVariableLowerLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableUpperLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an existing variable; parameter must exist or return false. bool FixVariable(unsigned int ); Fix an existing variable. bool ReleaseVariable(unsigned int ); Fix an existing variable. bool IsFixedVariable(unsigned int ) const; query if variable is fixed. bool GetVariableSettings(unsigned int , ROOT::Fit::ParameterSettings& ) const; retrieve variable settings (all set info on the variable). std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void RetrieveParams(); retrieve from TMinuit minimum parameter values; and errors. void RetrieveErrorMatrix(); get covariance error matrix from TMinuit; when some parameters are fixed filled the corresponding rows and column with zero's. unsigned int NCalls() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMinuitMinimizer.html:9869,variab,variable,9869,root/html602/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html602/TMinuitMinimizer.html,2,['variab'],['variable']
Modifiability,"valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddPdf(); Default constructor used for persistence. RooAddPdf(const char* name, const char* title = 0); Dummy constructor. RooAddPdf(const char* name, const char* title, RooAbsPdf& pdf1, RooAbsPdf& pdf2, RooAbsReal& coef1); Constructor with two PDFs and one coefficient. RooAddPdf(const char* name, const char* title, const RooArgList& pdfList, const RooArgList& coefList, Bool_t recursiveFraction = kFALSE); Generic constructor from list of PDFs and list of coefficients.; Each pdf list element (i) is paired with coefficient list element (i).; The number of coefficients must be either equal to the number of PDFs,; in which case extended MLL fitting is enabled, or be one less. All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal. If the recursiveFraction flag is true, the coefficients are interpreted as recursive; coefficients as explained in the class description. RooAddPdf(const char* name, const char* title, const RooArgList& pdfList); Generic constructor from list of extended PDFs. There are no coefficients as the expected; number of events from each components determine the relative weight of the PDFs. All PDFs must inherit from RooAbsPdf. RooAddPdf(const RooAddPdf& other, const char* name = 0); Copy constructor. ~RooAddPdf(); Destructor. void fixCoefNormalization(const RooArgSet& refCoefNorm); By default the interpretation of the fraction coefficients is; performed in the contextual choice of observables. This makes the; shape of the p.d.f explicitly dependent on the choice of; observables. This method instructs RooAddPdf to freeze the; interpretation of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddPdf.html:43159,extend,extended,43159,root/html528/RooAddPdf.html,https://root.cern,https://root.cern/root/html528/RooAddPdf.html,6,['extend'],['extended']
Modifiability,"valued object that can be used by RooRealIntegral to integrate over. ; The requirements for this are; Can be modified directly (i.e. invertible formula); Jacobian term in integral is constant (but not necessarily 1). This class implements the most general form that satisfies these requirements ; \[; RLV = \mathrm{slope} \cdot x + \mathrm{offset}; \]. \( x \) is required to be a RooRealVar to meet the invertibility criterium, slope and offset are RooAbsReals, but cannot overlap with \( x \), i.e., \( x \) may not be a server of slope and offset.; In the context of a dataset, slope may not contain any real-valued dependents (to satisfyt the constant Jacobian requirement). This check cannot be enforced at construction time, but can be performed at run time through the isJacobianOK(depList) member function. ; Definition at line 29 of file RooLinearVar.h. Public Member Functions;  RooLinearVar ();  ;  RooLinearVar (const char *name, const char *title, RooAbsRealLValue &variable, const RooAbsReal &slope, const RooAbsReal &offset, const char *unit="""");  Constructor with RooAbsRealLValue variable and RooAbsReal slope and offset. ;  ;  RooLinearVar (const RooLinearVar &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooLinearVar () override;  Destructor. ;  ; TObject * clone (const char *newname) const override;  ; const RooAbsBinning & getBinning (const char *name=nullptr, bool verbose=true, bool createOnTheFly=false) const override;  Const version of getBinning() ;  ; RooAbsBinning & getBinning (const char *name=nullptr, bool verbose=true, bool createOnTheFly=false) override;  Retrieve binning of this linear transformation. ;  ; std::list< std::string > getBinningNames () const override;  Get a list of all binning names. ;  ; bool hasBinning (const char *name) const override;  Returns true if binning with given name exists.If a given binning exists on the input variable, it will also exists on this linear transformation. ;  ; TClass * IsA () const override;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearVar.html:1346,variab,variable,1346,doc/master/classRooLinearVar.html,https://root.cern,https://root.cern/doc/master/classRooLinearVar.html,2,['variab'],['variable']
Modifiability,"values and errors); mean.Print();; sigma.Print();; ; // Draw all frames on a canvas; TCanvas *c = new TCanvas(""rf101_basics"", ""rf101_basics"", 800, 400); c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; xframe->GetYaxis()->SetTitleOffset(1.6);; xframe->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; xframe2->GetYaxis()->SetTitleOffset(1.6);; xframe2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf101_basicsDefinition rf101_basics.py:1; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf101__basics_8C.html:3026,variab,variable,3026,doc/master/rf101__basics_8C.html,https://root.cern,https://root.cern/doc/master/rf101__basics_8C.html,1,['variab'],['variable']
Modifiability,"values from the object in the workspace are; saved. If importValues is TRUE, the values of the objects passed in the 'params'; argument are saved. Bool_t saveSnapshot(const char* name, const RooArgSet& params, Bool_t importValues = kFALSE); Save snapshot of values and attributes (including ""Constant"") of parameters 'params'; If importValues is FALSE, the present values from the object in the workspace are; saved. If importValues is TRUE, the values of the objects passed in the 'params'; argument are saved. Bool_t loadSnapshot(const char* name); Load the values and attributes of the parameters in the snapshot saved with; the given name. RooAbsPdf* pdf(const char* name) const; Retrieve p.d.f (RooAbsPdf) with given name. A null pointer is returned if not found. RooAbsReal* function(const char* name) const; Retrieve function (RooAbsReal) with given name. Note that all RooAbsPdfs are also RooAbsReals. A null pointer is returned if not found. RooRealVar* var(const char* name) const; Retrieve real-valued variable (RooRealVar) with given name. A null pointer is returned if not found. RooCategory* cat(const char* name) const; Retrieve discrete variable (RooCategory) with given name. A null pointer is returned if not found. RooAbsCategory* catfunc(const char* name) const; Retrieve discrete function (RooAbsCategory) with given name. A null pointer is returned if not found. RooAbsArg* arg(const char* name) const; Return RooAbsArg with given name. A null pointer is returned if none is found. RooArgSet argSet(const char* nameList) const; Return set of RooAbsArgs matching to given list of names. RooAbsArg* fundArg(const char* name) const; Return fundamental (i.e. non-derived) RooAbsArg with given name. Fundamental types; are e.g. RooRealVar, RooCategory. A null pointer is returned if none is found. RooAbsData* data(const char* name) const; Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. RooArgSet allVars() const; Return set with all v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooWorkspace.html:17816,variab,variable,17816,root/html526/RooWorkspace.html,https://root.cern,https://root.cern/root/html526/RooWorkspace.html,4,['variab'],['variable']
Modifiability,"values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Binding_double_unsigned_int_double_.html:32363,config,configuration,32363,root/html526/RooCFunction2Binding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Binding_double_unsigned_int_double_.html,2,['config'],['configuration']
Modifiability,"values of the parameters at the time of the call; 6290///; 6291/// also prints other relevant information such as function value,; 6292/// estimated distance to minimum, parameter errors, step sizes.; 6293///; 6294/// According to the value of IKODE, the printout is:; 6295/// IKODE=INKODE=; 6296/// - 0 only info about function value; 6297/// - 1 parameter values, errors, limits; 6298/// - 2 values, errors, step sizes, internal values; 6299/// - 3 values, errors, step sizes, first derivs.; 6300/// - 4 values, parabolic errors, MINOS errors; 6301///; 6302/// when INKODE=5, MNPRIN chooses IKODE=1,2, or 3, according to fISW[1]; 6303 ; 6304void TMinuit::mnprin(Int_t inkode, Double_t fval); 6305{; 6306 /* Initialized data */; 6307 ; 6308 static const TString cblank = "" "";; 6309 TString cnambf = "" "";; 6310 ; 6311 /* Local variables */; 6312 Double_t dcmax, x1, x2, x3, dc;; 6313 x2 = x3 = 0;; 6314 Int_t nadd, i, k, l, m, ikode, ic, nc, ntrail, lbl;; 6315 TString chedm;; 6316 TString colhdl[6], colhdu[6], cx2, cx3, cheval;; 6317 ; 6318 if (fNu == 0) {; 6319 Printf("" THERE ARE CURRENTLY NO PARAMETERS DEFINED"");; 6320 return;; 6321 }; 6322// get value of IKODE based in INKODE, fISW[1]; 6323 ikode = inkode;; 6324 if (inkode == 5) {; 6325 ikode = fISW[1] + 1;; 6326 if (ikode > 3) ikode = 3;; 6327 }; 6328// set 'default' column headings; 6329 for (k = 1; k <= 6; ++k) {; 6330 colhdu[k-1] = ""UNDEFINED"";; 6331 colhdl[k-1] = ""COLUMN HEAD"";; 6332 }; 6333// print title if Minos errors, and title exists.; 6334 if (ikode == 4 && fCtitl != fCundef) {; 6335 Printf("" MINUIT TASK: %s"",(const char*)fCtitl);; 6336 }; 6337// report function value and status; 6338 if (fval == fUndefi) cheval = "" unknown "";; 6339 else cheval.Form(""%g"",fval);; 6340 ; 6341 if (fEDM == fBigedm) chedm = "" unknown "";; 6342 else chedm.Form(""%g"",fEDM);; 6343 ; 6344 nc = fNfcn - fNfcnfr;; 6345 Printf("" FCN=%s FROM %8s STATUS=%10s %6d CALLS %9d TOTAL""; 6346 ,(const char*)cheval; 6347 ,(const char*)fCfrom; 6348 ,(const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:204776,variab,variables,204776,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElementList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * Decl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackList.html:32816,inherit,inherited,32816,doc/master/classTEveTrackList.html,https://root.cern,https://root.cern/doc/master/classTEveTrackList.html,4,['inherit'],['inherited']
Modifiability,"values; boolfPolynomialflag for polynomial functions; static doublefgEpsepsilon used in derivative calculation h ~ eps |p|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedMultiTF1(TF1& f, unsigned int dim = 0). constructor from a function pointer to a TF1; If dim = 0 dimension is taken from TF1::GetNdim().; IN case of multi-dimensional function created using directly TF1 object the dimension; returned by TF1::GetNdim is always 1. The user must then pass the correct value of dim. virtual ~WrappedMultiTF1(). Destructor (no operations). Function pointer is not owned. { if (fOwnFunc && fFunc) delete fFunc; }. WrappedMultiTF1(const ROOT::Math::WrappedMultiTF1& rhs). Copy constructor. IMultiGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. unsigned int NDim() const; function dimension. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cached inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (from TF1). void ParameterGradient(const double* x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void SetDerivPrecision(double eps); precision value used for calculating the derivative step-size; h = eps * |x|. The default is 0.001, give a smaller in case function changes rapidly. double GetDerivPrecision(); get precision value used for calculating the derivative step-size. const TF1 * GetFunction() const; method to retrieve the internal function pointer. { return fFunc; }. void SetAndCopyFunction(const TF1* f = 0); method to set a new function pointer and copy it inside.; By calling th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__WrappedMultiTF1.html:2888,inherit,inherited,2888,root/html534/ROOT__Math__WrappedMultiTF1.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__WrappedMultiTF1.html,2,['inherit'],['inherited']
Modifiability,"var, const string& name, double val, double step, double lower, double upper); set upper/lower limited variable. bool SetFixedVariable(unsigned int ivar, const string& name, double val); set fixed variable. bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fNFree; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. { return (fErrors.size() > 0) ? &fErrors.front() : 0; }. double CovMatrix(unsigned int , unsigned int ) const; {; static std::vector<double> err;; err.resize(fDim);; return &err.front();; }; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. int CovMatrixStatus() const; return covariance matrix status. » Author: L. Moneta Wed Dec 20 17:16:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLNLSMinimizer.h 31604 2009-12-07 19:04:33Z moneta $ » Last generated: 2009-12-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLNLSMinimizer.html:7952,variab,variable,7952,root/html526/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLNLSMinimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,"var1 myvar2 var3 var4; : myvar1: +1.000 -0.021 +0.783 +0.931; : myvar2: -0.021 +1.000 -0.162 +0.057; : var3: +0.783 -0.162 +1.000 +0.841; : var4: +0.931 +0.057 +0.841 +1.000; : ----------------------------------------; DataSetFactory : [dataset] : ; : ; Factory : Booking method: ␛[1mFDA_GA␛[0m; : ; : Create parameter interval for parameter 0 : [-1,1]; : Create parameter interval for parameter 1 : [-10,10]; : Create parameter interval for parameter 2 : [-10,10]; : Create parameter interval for parameter 3 : [-10,10]; : Create parameter interval for parameter 4 : [-10,10]; : User-defined formula string : ""(0)+(1)*x0+(2)*x1+(3)*x2+(4)*x3""; : TFormula-compatible formula string: ""[0]+[1]*[5]+[2]*[6]+[3]*[7]+[4]*[8]""; Factory : Booking method: ␛[1mMLPBNN␛[0m; : ; MLPBNN : [dataset] : Create Transformation ""N"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; MLPBNN : Building Network. ; : Initializing weights; Factory : Booking method: ␛[1mDNN_CPU␛[0m; : ; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=N:WeightInitialization=XAVIERUNIFORM:Layout=TANH|128,TANH|128,TANH|128,LINEAR:TrainingStrategy=LearningRate=1e-2,Momentum=0.9,ConvergenceSteps=20,BatchSize=100,TestRepetitions=1,WeightDecay=1e-4,Regularization=None,DropConfig=0.0+0.5+0.5+0.5:Architecture=CPU""; : The following options are set:; : - By User:; : <none>; : - Default:; : Boost_num: ""0"" [Number of times the classifier will be boosted]; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=N:WeightInitialization=XAVIERUNIFORM:Layout=TANH|128,TANH|128,TANH|128,LINEAR:TrainingStrategy=LearningRate=1e-2,Momentum=0.9,ConvergenceSteps=20,BatchSize=100,TestRepetitions=1,WeightDecay=1e-4,Regularization=No",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:5338,variab,variable,5338,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,8,['variab'],['variable']
Modifiability,var2 : 2.100e+00; : -------------------------------------; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : ------------------------------------; : Rank : Variable : Correlation Ratio; : ------------------------------------; : 1 : var2 : 2.458e+00; : 2 : var1 : 2.336e+00; : ------------------------------------; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : ----------------------------------------; : Rank : Variable : Correlation Ratio (T); : ----------------------------------------; : 1 : var1 : 5.362e-01; : 2 : var2 : 5.109e-01; : ----------------------------------------; : Elapsed time for training with 9999 events: 5.01e-06 sec ; : Dataset[datasetcvreg] : Create results for training; : Dataset[datasetcvreg] : Evaluation of BDTG on training sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 9999 events: 0.369 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: datasetcvreg/weights/TMVACrossValidationRegression_BDTG.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDTG for Regression performance; : ; : Dataset[datasetcvreg] : Create results for testing; : Dataset[datasetcvreg] : Evaluation of BDTG on testing sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 9999 events: 0.37 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; <HEADER> Factory : Evaluate all methods; : Evaluate regression method: BDTG; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9999 events: 0.37 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 9999 events: 0.369 sec ; <HEADER> TFHandler_BDTG : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:11958,variab,variable,11958,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['variab'],['variable']
Modifiability,"var=0; jvar<nvar; jvar++) {; 337 if (ivar != jvar) {; 338 Double_t d = (*covMat)(ivar, ivar)*(*covMat)(jvar, jvar);; 339 if (d > 1E-20) {; 340 (*corrMat)(ivar, jvar) = (*covMat)(ivar, jvar)/TMath::Sqrt(d);; 341 } else {; 342 Log() << ""<GetCorrelationMatrix> zero variances for variables ""; 343 << ""("" << ivar << "", "" << jvar << "")"" << Endl;; 344 (*corrMat)(ivar, jvar) = 0;; 345 }; 346 if (TMath::Abs( (*corrMat)(ivar,jvar)) > 1){; 347 Log() << kWARNING; 348 << "" Element corr(""<<ivar<<"",""<<ivar<<"")="" << (*corrMat)(ivar,jvar); 349 << "" sigma2=""<<d; 350 << "" cov(""<<ivar<<"",""<<ivar<<"")="" <<(*covMat)(ivar, ivar); 351 << "" cov(""<<jvar<<"",""<<jvar<<"")="" <<(*covMat)(jvar, jvar); 352 << Endl;; 353 ; 354 }; 355 }; 356 else (*corrMat)(ivar, ivar) = 1.0;; 357 }; 358 }; 359 Log() << Endl;; 360 return corrMat;; 361}; 362 ; 363////////////////////////////////////////////////////////////////////////////////; 364/// projects variable from tree into normalised histogram; 365 ; 366TH1* TMVA::Tools::projNormTH1F( TTree* theTree, const TString& theVarName,; 367 const TString& name, Int_t nbins,; 368 Double_t xmin, Double_t xmax, const TString& cut ); 369{; 370 // needed because of ROOT bug (feature) that excludes events that have value == xmax; 371 xmax += 0.00001;; 372 ; 373 TH1* hist = new TH1F( name, name, nbins, xmin, xmax );; 374 hist->Sumw2(); // enable quadratic errors; 375 theTree->Project( name, theVarName, cut );; 376 NormHist( hist );; 377 return hist;; 378}; 379 ; 380////////////////////////////////////////////////////////////////////////////////; 381/// normalises histogram; 382 ; 383Double_t TMVA::Tools::NormHist( TH1* theHist, Double_t norm ); 384{; 385 if (!theHist) return 0;; 386 ; 387 if (theHist->GetSumw2N() == 0) theHist->Sumw2();; 388 if (theHist->GetSumOfWeights() != 0) {; 389 Double_t w = ( theHist->GetSumOfWeights(); 390 *(theHist->GetXaxis()->GetXmax() - theHist->GetXaxis()->GetXmin())/theHist->GetNbinsX() );; 391 if (w > 0) theHist->Scale( norm/w );; 392 return w;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:12426,variab,variable,12426,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['variab'],['variable']
Modifiability,"variable ROOT_TTREECACHE_PREFILL; In particular the default can be set back to the same as in version 5 by setting TTreeCache.Size (or ROOT_TTREECACHE_SIZE) and TTreeCache.Prefill (or ROOT_TTREECACHE_PREFILL) both to zero.; TTree methods which are expected to modify a cache, like AddBranchToCache, will attempt to setup a cache of default size if one does not exist, irrespective of whether the auto cache creation is enabled. Additionally several methods giving control of the cache have changed return type from void to Int_t, to be able to return a code to indicate if there was an error.; Usually TTree::SetCacheSize will no longer reset the list of branches to be cached (either set or previously learnt) nor restart the learning phase. The learning phase is restarted when a new cache is created, e.g. after having removed a cache with SetCacheSize(0).; TSelectorDraw; The axis titles in case of a x:y:z plot with the option COLZ were not correct.; TParallelCoordVar; Change the format used to print the variables limit for ||-Coord to %g. It was %6.4f before.; Histogram Libraries; TFormula. New version of the TFormula class based on Cling. Formula expressions are now used to create functions which are passed to Cling to be Just In Time compiled. The expression is therefore compiled using Clang/LLVVM which will give execution time as compiled code and in addition correctness of the result obtained.; This class is not 100% backward compatible with the old TFormula class, which is still available in ROOT as =ROOT::v5::TFormula=. Some of the TFormula member funtions available in version 5, such as =Analyze= and =AnalyzeFunction= are not available in the new TFormula class. On the other hand formula expressions which were valid in version 5 are still valid in TFormula version 6; TFormula is not anymore a base class for TF1.; The new TFormula allows to defines the parameter names directly in the syntax. Example:. TFormula f(""f"",""f1"",""[constant]+[slope]*x"");. New pre-defined funct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:14318,variab,variables,14318,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['variab'],['variables']
Modifiability,"variable dimensions case; TObjArrayfFormulas; Bool_tfMultiVarDimTrue if one of the variable has 2 variable size dimensions.; Int_tfMultiplicityIndicator of the variability of the formula; Int_tfNdata! Last value calculated by GetNdata; Bool_tfNeedSyncIndicate whether a new formula has been added since the last synchronization; Int_tfUsedSizes[6]Actual size of the dimensions as seen for this entry.; TArrayI*fVarDims[6]List of variable sizes dimensions.; Int_tfVirtUsedSizes[6]Virtual size of lower dimensions as seen for this formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeFormulaManager(); -*Tree FormulaManger default constructor; *-* ======================================. void Remove(TTreeFormula* ); Remove a formula from this manager. void Add(TTreeFormula* ); Add a new formula to the list of formulas managed; The manager of the formula will be changed and the old one will be deleted; if it is empty. void AddVarDims(Int_t virt_dim); Add a variable dimension. void CancelDimension(Int_t virt_dim); Cancel a dimension. This is usually called when an out-of-bounds index; is used. void EnableMultiVarDims(); Set the manager as handling a formula with multiple variable dimensions. Int_t GetNdata(Bool_t forceLoadDim = kFALSE); -*-*Return number of available instances in the formulas; *-* ====================================================. Bool_t Sync(); Synchronize all the formulae. void UpdateFormulaLeaves(); this function could be called TTreePlayer::UpdateFormulaLeaves, itself; called by TChain::LoadTree when a new Tree is loaded.; Because Trees in a TChain may have a different list of leaves, one; must update the leaves numbers in the TTreeFormula used by the TreePlayer. void UpdateUsedSize(Int_t& virt_dim, Int_t vsize); Reload the array sizes. TTreeFormulaManager(const TTreeFormulaManager& ); Not implemented yet. TTreeFormulaManager& operator=(const TTreeFormulaManager& ). Int_t GetMultiplicity() const; {return ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeFormulaManager.html:6784,variab,variable,6784,root/html528/TTreeFormulaManager.html,https://root.cern,https://root.cern/root/html528/TTreeFormulaManager.html,4,['variab'],['variable']
Modifiability,"variable i. Variable and function must be set before using Scan; Return false if an error or if minimizer does not support this functionality. bool Contour(unsigned int ivar, unsigned int jvar, unsigned int& npoints, double* xi, double* xj). find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum; The contour will be find for value of the function = Min + ErrorUp();. void PrintResults(); return reference to the objective function; virtual const ROOT::Math::IGenFunction & Function() const = 0;; print the result according to set level (implemented for TMinuit for mantaining Minuit-style printing). {}. std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names); return an empty string if variable is not found. int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. int PrintLevel() const; minimizer configuration parameters ; set print level. { return fOptions.PrintLevel(); }. unsigned int MaxFunctionCalls() const; max number of function calls. { return fOptions.MaxFunctionCalls(); }. unsigned int MaxIterations() const; max iterations. { return fOptions.MaxIterations(); }. double Tolerance() const; absolute tolerance. { return fOptions.Tolerance(); }. double Precision() const; precision of minimizer in the evaluation of the objective function; ( a value <=0 corresponds to the let the minimizer choose its default one). { return fOptions.Precision(); }. int Strategy() const; strategy. { return fOptions.Strategy(); }. int Status() const; status code of minimizer. { return fStatus; }. double ErrorDef() const; return the statistical scale used for calculate the error; is typically 1 for Chi2 and 0.5 for likelihood minimization. { return fOptions.ErrorDef(); }. bool IsValidError() const; return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit). { return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:11898,config,configuration,11898,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,3,['config'],['configuration']
Modifiability,"variable index. ;  . Private Attributes; bool fOwnInput;  True if we created the input list. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . #include <TSelectorEntries.h>. Inheritance diagram for TSelectorEntries:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSelectorEntries() [1/2]. TSelectorEntries::TSelectorEntries ; (; TTree * ; tree = nullptr, . const char * ; selection = nullptr . ). Default, constructor. ; Definition at line 46 of file TSelectorEntries.cxx. ◆ TSelectorEntr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorEntries.html:13601,inherit,inherited,13601,doc/master/classTSelectorEntries.html,https://root.cern,https://root.cern/doc/master/classTSelectorEntries.html,2,['inherit'],['inherited']
Modifiability,"variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: TMVA_DNN; : ; TMVA_DNN : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: PyKeras_LSTM; : ; PyKeras_LSTM : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: BDTG; : ; BDTG : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; : ; : Evaluation results ranked by best signal efficiency and purity (area); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA ; : Name: Method: ROC-integ; : dataset PyKeras_LSTM : 0.857; : dataset BDTG : 0.843; : dataset TMVA_LSTM : 0.783; : dataset TMVA_DNN : 0.654; : -------------------------------------------------------------------------------------------------------------------; : ; : Testing efficiency compared to training efficiency (overtraining check); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA Signal efficiency: from test sample (from training sample) ; : Name: Method: @B=0.01 @B=0.10 @B=0.30 ; : -------------------------------------------------------------------------------------------------------------------; : dataset PyKeras_LSTM : 0.225 (0.215) 0.600 (0.609) 0.839 (0.855); : dataset BDTG : 0.135 (0.272) 0.502 (0.648) 0.835 (0.886); : dataset TMVA_LSTM : 0.058 (0.097) 0.445 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:54981,variab,variable,54981,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,2,['variab'],"['variable', 'variables']"
Modifiability,"variables (t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) directly selected PDF components: (ampl1); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) indirectly selected PDF components: (poly1,coshGBasis); [#1] INFO:Plotting -- RooAbsReal::plotOn(pdf) plot on cosa integrates over variables (t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) directly selected PDF components: (ampl2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) indirectly selected PDF components: (poly2,sinhGBasis); [#1] INFO:Plotting -- RooAbsReal::plotOn(pdf) plot on cosa integrates over variables (t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf704_amplitudefit.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf704__amplitudefit_8C.html:11055,variab,variables,11055,doc/master/rf704__amplitudefit_8C.html,https://root.cern,https://root.cern/doc/master/rf704__amplitudefit_8C.html,1,['variab'],['variables']
Modifiability,"variables that occur in 'vars'. The returned object is an instance of the object you just defined; connected to the variables listed in 'vars'. The name of the; object is 'name', its class name Roo<name>Class. This function is an effective compiled replacement of RooFormulaVar. You can add optional expressions for analytical integrals to be; advertised by your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. RooAbsReal* makeFunctionInstance(const char* className, const char* name, const char* expression, const RooArgList& vars, const char* intExpression = 0); Write, compile and load code and instantiate object for a; RooAbsReal implementation with class name 'name', taking all; elements of 'vars' as constructor arguments. The initial value; expression is taken to be 'expression' which can be any one-line; C++ expression in terms of variables that occur in 'vars'. The returned object is an instance of the object you just defined; connected to the variables listed in 'vars'. The name of the; object is 'name', its class name Roo<name>Class. This function is an effective compiled replacement of RooFormulaVar. You can add optional expressions for analytical integrals to be; advertised by your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. RooAbsPdf* makePdfInstance(const char* name, const char* expression, const RooArgList& vars, const char* intExpression = 0); Write, compile and load code and instantiate object for a; RooAbsPdf implementation with class name 'name', taking all; elements of 'vars' as constructor arguments. The initial value; expression is taken to be 'expression' wh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooClassFactory.html:10938,variab,variables,10938,root/html526/RooClassFactory.html,https://root.cern,https://root.cern/root/html526/RooClassFactory.html,7,['variab'],['variables']
Modifiability,"variables that the pdf for the corresponding channel depends on. This is much faster in case of many channels, and the resulting sub-datasets don't waste memory for unused columns.; Parameters. splitCatThe categorical variable used for splitting the dataset. ; createEmptyDataSetsFlag indicating whether to create empty datasets for missing categories (false by default). ReturnsAn owning pointer to a TList of subsets of the dataset. Returns nullptr if an error occurs. ; Definition at line 1552 of file RooAbsData.cxx. ◆ split() [2/2]. RooFit::OwningPtr< TList > RooAbsData::split ; (; const RooSimultaneous & ; simPdf, . bool ; createEmptyDataSets = false . ); const. virtual . Split the dataset into subsets based on the channels of a RooSimultaneous. ; Returns a list of sub-datasets, which each dataset named after the applicable state name of the RooSimultaneous index category. The index category itself is no longer present in the sub-datasets. The sub-datasets only contain variables that the pdf for the corresponding channel depends on.; Parameters. simPdfThe simultaneous pdf used for splitting the dataset. ; createEmptyDataSetsFlag indicating whether to create empty datasets for missing categories (false by default). ReturnsAn owning pointer to a TList of subsets of the dataset. Returns nullptr if an error occurs. ; Definition at line 1584 of file RooAbsData.cxx. ◆ standMoment(). double RooAbsData::standMoment ; (; const RooRealVar & ; var, . double ; order, . const char * ; cutSpec = nullptr, . const char * ; cutRange = nullptr . ); const. Calculate standardized moment. ; Parameters. [in]varVariable to be used for calculating the moment. ; [in]orderOrder of the moment. ; [in]cutSpecIf specified, the moment is calculated on the subset of the data which pass the C++ cut specification expression 'cutSpec' ; [in]cutRangeIf specified, calculate inside the range named 'cutRange' (also applies cut spec) . Returns\( \frac{\left< \left( X - \left< X \right> \right)^n \right>}{\",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:70048,variab,variables,70048,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variables']
Modifiability,"variance matrix. ;  ; void MakeRealCode (const char *filename, const char *prefix, Option_t *option="""");  This is the method that actually generates the code for the transformations to and from feature space and pattern space It's called by TPrincipal::MakeCode and TPrincipal::MakeMethods. ;  ; TPrincipal & operator= (const TPrincipal &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD fCovarianceMatrix;  Covariance matrix. ;  ; TVectorD fEigenValues;  Eigenvalue vector of trans. ;  ; TMatrixD fEigenVectors;  Eigenvector matrix of trans. ;  ; TList * fHistograms;  List of histograms. ;  ; Bool_t fIsNormalised;  Normalize matrix? ;  ; TVectorD fMeanValues;  Mean value over all data points. ;  ; Int_t fNumberOfDataPoints;  Number of data points. ;  ; Int_t fNumberOfVariables;  Number of variables. ;  ; TVectorD fOffDiagonal;  Elements of the tridiagonal. ;  ; TVectorD fSigmas;  vector of sigmas ;  ; Bool_t fStoreData;  Should we store input data? ;  ; Double_t fTrace;  Trace of covarience matrix. ;  ; TVectorD fUserData;  Vector of original data points. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPrincipal.html:20446,variab,variables,20446,doc/master/classTPrincipal.html,https://root.cern,https://root.cern/doc/master/classTPrincipal.html,1,['variab'],['variables']
Modifiability,"vas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TXMLParser; virtual void InitializeContext ();  Initialize parser parameters, such as, disactivate non-standards libxml1 features, on/off validation, clear error and warning messages. ;  ; virtual void OnValidateError (const TString &message);  This function is called when an error from the parser has occurred. ;  ; virtual void OnValidateWarning (const TString &message);  This function is called when a warning from the parser has occurred. ;  ; virtual void SetParseCode (Int_t code);  Set the parse code: ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDOMParser.html:15223,inherit,inherited,15223,doc/master/classTDOMParser.html,https://root.cern,https://root.cern/doc/master/classTDOMParser.html,1,['inherit'],['inherited']
Modifiability,"vas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEventList*fElistevent list; TList*fEventListsa list of EventLists; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEventList(); Destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the eventlist with given values. void SlaveTerminate(void); See TProofDraw::SlaveTerminate(). void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawEventList(); {}. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawEventList.html:7627,variab,variable,7627,root/html530/TProofDrawEventList.html,https://root.cern,https://root.cern/root/html530/TProofDrawEventList.html,1,['variab'],['variable']
Modifiability,"vas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEventList*fElistevent list; TList*fEventListsa list of EventLists; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEventList(); Destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the eventlist with given values. void SlaveTerminate(void); See TProofDraw::SlaveTerminate(). void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawEventList(); {}. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDrawEventList.html:7627,variab,variable,7627,root/html532/TProofDrawEventList.html,https://root.cern,https://root.cern/root/html532/TProofDrawEventList.html,1,['variab'],['variable']
Modifiability,"vas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawListOfPolyMarkers3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-03 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofDrawListOfPolyMarkers3D.html:8509,variab,variable,8509,root/html604/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html604/TProofDrawListOfPolyMarkers3D.html,1,['variab'],['variable']
Modifiability,"vas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawListOfPolyMarkers3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawListOfPolyMarkers3D.html:8509,variab,variable,8509,root/html602/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html602/TProofDrawListOfPolyMarkers3D.html,1,['variab'],['variable']
Modifiability,vate . The background model combination. ; Definition at line 92 of file HLFactory.h. ◆ fComboCat. RooCategory* RooStats::HLFactory::fComboCat = nullptr. private . The category of the combination. ; Definition at line 91 of file HLFactory.h. ◆ fComboDataset. RooDataSet* RooStats::HLFactory::fComboDataset = nullptr. private . The datasets combination. ; Definition at line 94 of file HLFactory.h. ◆ fComboSigBkgPdf. RooAbsPdf* RooStats::HLFactory::fComboSigBkgPdf = nullptr. private . The signal plus background model combination. ; Definition at line 93 of file HLFactory.h. ◆ fDatasetsNames. TList RooStats::HLFactory::fDatasetsNames. private . List of channels names to combine for the datasets. ; Definition at line 98 of file HLFactory.h. ◆ fInclusionLevel. int RooStats::HLFactory::fInclusionLevel = 0. private . Keep trace of the inclusion deepness. ; Definition at line 101 of file HLFactory.h. ◆ fLabelsNames. TList RooStats::HLFactory::fLabelsNames. private . List of channels names to combine for the datasets. ; Definition at line 99 of file HLFactory.h. ◆ fOwnWs. bool RooStats::HLFactory::fOwnWs = false. private . Owns workspace. ; Definition at line 103 of file HLFactory.h. ◆ fSigBkgPdfNames. TList RooStats::HLFactory::fSigBkgPdfNames. private . List of channels names to combine for the signal plus background pdfs. ; Definition at line 96 of file HLFactory.h. ◆ fVerbose. bool RooStats::HLFactory::fVerbose = false. private . The verbosity flag. ; Definition at line 100 of file HLFactory.h. ◆ fWs. RooWorkspace* RooStats::HLFactory::fWs = nullptr. private . The RooWorkspace containing the models and variables. ; Definition at line 102 of file HLFactory.h. Libraries for RooStats::HLFactory:. [legend]; The documentation for this class was generated from the following files:; roofit/roostats/inc/RooStats/HLFactory.h; roofit/roostats/src/HLFactory.cxx. RooStatsHLFactory. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:54 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HLFactory.html:22026,variab,variables,22026,doc/master/classRooStats_1_1HLFactory.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HLFactory.html,1,['variab'],['variables']
Modifiability,"vate Attributes; Double_t fAdaptiveSpeed;  how fast temperature change in adaptive (in adaptive two variables describe the change of temperature, but fAdaptiveSpeed should be 1.0 and its not recommended to change it) ;  ; Double_t fEps;  relative required FCN accuracy at minimum ;  ; Double_t fInitialTemperature;  initial temperature (depends on FCN) ;  ; TString fKernelTemperatureS;  string just to set fKernelTemperature ;  ; Int_t fMaxCalls;  max number of FCN calls ;  ; Double_t fMinTemperature;  minimum temperature before SA quit ;  ; Double_t fTemperatureAdaptiveStep;  used to calculate InitialTemperature if fUseDefaultTemperature ;  ; Double_t fTemperatureScale;  how fast temperature change ;  ; Bool_t fUseDefaultScale;  if TRUE, SA calculates its own TemperatureScale ;  ; Bool_t fUseDefaultTemperature;  if TRUE, SA calculates its own InitialTemperature (MinTemperautre) ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::FitterBase; MsgLogger & Log () const;  message logger ;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet fl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealingFitter.html:14565,inherit,inherited,14565,doc/master/classTMVA_1_1SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealingFitter.html,1,['inherit'],['inherited']
Modifiability,"vate Attributes; TMap * fActiveNodes;  ; Int_t fMaxWrksNode;  ; Int_t fMinWrksNode;  ; Int_t fNActiveWrks;  ; Int_t fNCores;  ; Int_t fNNodes;  ; TMap * fNodes;  ; Int_t fNWrks;  ; TProof * fProof;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofNodes.h>. Inheritance diagram for TProofNodes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofNodes(). TProofNodes::TProofNodes ; (; TProof * ; proof). Constructor. ; Definition at line 30 of file TProofNodes.cxx. ◆ ~TProofNodes(). TProofNodes::~TProofNodes ; (; ). override . Destructor. ; Definition at line 41 of file TProofNodes.cxx. Member Function Documentation. ◆ ActivateWorkers() [1/2]. Int_t TProofNodes::ActivateWorkers ; (; const char * ; workers). Description: Activate the same number of workers on all nodes. ; Input: workers: string of the form ""nx"" where non-negative integer n is the number of worker on each node to be activated. Return: The number of active workers per node when the operation is su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofNodes.html:10582,inherit,inherited,10582,doc/master/classTProofNodes.html,https://root.cern,https://root.cern/doc/master/classTProofNodes.html,2,['inherit'],['inherited']
Modifiability,"vate Attributes; TString fDSetSendOpts;  ; TString fFilesSendOpts;  ; TVirtualMonitoringWriter * fWriter;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProofMonSender; enum  EConfigBits { kSendSummary = (1ULL << ( 15 )); , kSendDataSetInfo = (1ULL << ( 16 )); , kSendFileInfo = (1ULL << ( 17 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TProofMonSender; Int_t fDataSetInfoVrs;  ; Int_t fFileInfoVrs;  ; Int_t fSummaryVrs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProofMonSenderSQL.h>. Inheritance diagram for TProofMonSenderSQL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofMonSenderSQL(). TProofMonSenderSQL::TProofMonSenderSQL ; (; const char * ; serv, . const char * ; user, . const char * ; pass, . const char * ; table = ""proof.proofquerylog"", . const char * ; dstab = 0, . const char * ; filestab = 0 . ). Main constructor. ; Definition at line 37 of file TProofMonSenderSQL.cxx. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSenderSQL.html:11915,inherit,inherited,11915,doc/master/classTProofMonSenderSQL.html,https://root.cern,https://root.cern/doc/master/classTProofMonSenderSQL.html,3,['inherit'],['inherited']
Modifiability,"vate:. TMVA::DataInputHandler&DataInput(); TMVA::DataSetInfo&DefaultDataSetInfo(); voidGreetings(); voidSetInputTreesFromEventAssignTrees(); voidWriteDataInformation(). Data Members; public:. enum DataAssignType { kUndefined; kAssignTrees; kAssignEvents; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Float_t*fATreeEventevent variables; Int_tfATreeTypetype of event (=classIndex); Float_tfATreeWeightweight of the event; TMVA::Types::EAnalysisTypefAnalysisType! the training type; TMVA::Factory::DataAssignTypefDataAssignType! flags for data assigning; TMVA::DataInputHandler*fDataInputHandler; TMVA::DataSetManager*fDataSetManagerDSMTEST; vector<TMVA::VariableTransformBase*>fDefaultTrfs! list of transformations on default DataSet; TStringfJobName! jobname, used as extension in weight file names; TMVA::Factory::MVectorfMethods! all MVA methods; TStringfOptions! option string given by construction (presently only ""V""); vector<TTree*>fTestAssignTree! for each class: tmp tree if user wants to assign the events directly; vector<TTree*>fTrainAssignTree! for each class: tmp tree if user wants to assign the events directly; TStringfTransformations! List of transformations to test; Bool_tfVerbose! verbose mode; static TFile*fgTargetFile! ROOT output file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Factory(TString theJobName, TFile* theTargetFile, TString theOption = """"); standard constructor; jobname : this name will appear in all weight file names produced by the MVAs; theTargetFile : output ROOT file; the test tree and all evaluation plots; will be stored here; theOption : option string; currently: ""V"" for verbose. void Greetings(); print welcome message; options are: kLogoWelcomeMsg, kIsometricWelcomeMsg, kLeanWelco",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Factory.html:11606,variab,variables,11606,root/html528/TMVA__Factory.html,https://root.cern,https://root.cern/root/html528/TMVA__Factory.html,4,['variab'],['variables']
Modifiability,vation * fActivation;  ; std::vector< TH1 * > fEpochMonHistB;  ; std::vector< TH1 * > fEpochMonHistS;  ; std::vector< TH1 * > fEpochMonHistW;  ; EEstimator fEstimator;  ; TH1F * fEstimatorHistTest;  ; TH1F * fEstimatorHistTrain;  ; TString fEstimatorS;  ; TActivation * fIdentity;  ; TNeuronInput * fInputCalculator;  ; TMatrixD fInvHessian;  zjh ;  ; Int_t fNcycles;  number of epochs to train ;  ; TString fNeuronInputType;  name of neuron input calculator class ;  ; TString fNeuronType;  name of neuron activation function class ;  ; TActivation * fOutput;  ; Int_t fRandomSeed;  random seed for initial synapse weights ;  ; std::vector< Int_t > fRegulatorIdx;  ; std::vector< Double_t > fRegulators;  ; TRandom3 * frgen;  ; TObjArray * fSynapses;  ; bool fUseRegulator;  zjh ;  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TMVA::ConvergenceTest; Float_t fCurrentValue;  ! current value ;  ; Float_t fImprovement;  ! minimum improvement which counts as improvement ;  ; Int_t fSteps;  ! number of steps without improvement required for convergence ;  .,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html:37865,inherit,inherited,37865,doc/master/classTMVA_1_1MethodMLP.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html,3,['inherit'],['inherited']
Modifiability,"vative for the appropriate function at the working point ;  ; Double_t GetError () const;  Computes the error for output neurons. ;  ; TNeuron * GetInLayer (Int_t n) const;  ; Double_t GetInput () const;  Returns neuron input. ;  ; const Double_t * GetNormalisation () const;  ; TSynapse * GetPost (Int_t n) const;  ; TSynapse * GetPre (Int_t n) const;  ; Double_t GetTarget () const;  Computes the normalized target pattern for output neurons. ;  ; ENeuronType GetType () const;  Returns the neuron type. ;  ; Double_t GetValue () const;  Computes the output using the appropriate function and all the weighted inputs, or uses the branch as input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the neuron weight. ;  ; void SetNewEvent () const;  Inform the neuron that inputs of the network have changed, so that the buffered values have to be recomputed. ;  ; void SetNormalisation (Double_t mean, Double_t RMS);  Sets the normalization variables. ;  ; void SetWeight (Double_t w);  Sets the neuron weight to w. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TTreeFormula * UseBranch (TTree *, const char *);  Sets a formula that can be used to make the neuron an input. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNeuron.html:3538,variab,variables,3538,doc/master/classTNeuron.html,https://root.cern,https://root.cern/doc/master/classTNeuron.html,1,['variab'],['variables']
Modifiability,"vatives are provided; by the user via this interface and there not calculated by Minuit. void Fcn(int& , double* , double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGenFunction interface to TMinuit FCN static function. void FcnGrad(int& , double* g, double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGradFunction interface to TMinuit FCN static function in the case of user; provided gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a free variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set a limited variable. bool CheckMinuitInstance() const; check instance of fMinuit. bool CheckVarIndex(unsigned int ivar) const; check index of Variable (assume fMinuit exists). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set a lower limited variable; since is not supported in TMinuit , just use a artificial large value. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a upper limited variable; since is not supported in TMinuit , just use a artificial large negative value. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. bool SetVariableStepSize(unsigned int , double ); set the step-size of an existing variable; parameter must exist or return false. bool SetVariableLowerLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableUpperLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:8646,variab,variable,8646,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,"ve 3-D effects when drawing various; boxes (see TWbox, TPave, TPaveText, TPaveLabel, etc). The Dark colors have an index = color_index+100; The Bright colors have an index = color_index+150; Two static functions return the bright and dark color number; corresponding to a color index. If the bright or dark color does not; exist, they are created:; ; Int_t dark = TColor::GetColorDark(color_index);; Int_t bright = TColor::GetColorBright(color_index);; . Gray scale view of of canvas with colors; One can toggle between a grayscale preview and the regular colored mode using; TCanvas::SetGrayscale(). Note that in grayscale mode, access via RGB; will return grayscale values according to ITU standards (and close to b&w; printer grayscales), while access via HLS returns de-saturated grayscales. The; image below shows the ROOT color wheel in grayscale mode. Picture; Source. {; TColorWheel *w = new TColorWheel();; w->Draw();; w->GetCanvas()->SetGrayscale();; w->GetCanvas()->Modified();; w->GetCanvas()->Update();; return w->GetCanvas();; }; Color palettes; It is often very useful to represent a variable with a color map. The concept; of ""color palette"" allows to do that. One color palette is active at any time.; This ""current palette"" is set using:. gStyle->SetPalette(...);. This function has two parameters: the number of colors in the palette and an; array of containing the indices of colors in the pallette. The following small; example demonstrates how to define and use the color palette:. Picture; Source. {; TCanvas *c1 = new TCanvas(""c1"",""c1"",0,0,600,400);; TF2 *f1 = new TF2(""f1"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",1,3,1,3);; Int_t palette[5];; palette[0] = 15;; palette[1] = 20;; palette[2] = 23;; palette[3] = 30;; palette[4] = 32;; gStyle->SetPalette(5,palette);; f1->Draw(""colz"");; return c1;; }; To define more a complexe palette with a continous gradient of color, one; should use the static function TColor::CreateGradientColorTable().; The following example demostrates h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TColor.html:3739,variab,variable,3739,root/html528/TColor.html,https://root.cern,https://root.cern/root/html528/TColor.html,2,['variab'],['variable']
Modifiability,"ve Error; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL kADAPTIVE type). Possible type values are : kGAUSS (simple Gauss method), kADAPTIVE (from GSL), kADAPTIVESINGULAR (from GSL), kNONADAPTIVE (from GSL); Possible rule values are kGAUS15 (rule = 1), kGAUS21( rule = 2), kGAUS31(rule =3), kGAUS41 (rule=4), kGAUS51 (rule =5), kGAUS61(rule =6); lower rules are indicated for singular functions while higher for smooth functions to get better accuracies. NOTE: When the default values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions. IntegratorOneDim(const ROOT::Math::IGenFunction& f, ROOT::Math::IntegrationOneDim::Type type = IntegrationOneDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int size = 0, int rule = 0). Constructor of one dimensional Integrator passing a function interface. @param f integration function (1D interface). It is copied inside; @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When the default values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions. SetFunction(const ROOT::Math::IGenFunction& f, bool copy = false). IntegratorOneDim(const ROOT::Math::IGenFunction& f, ROOT::Math::IntegrationOneDim::Type type = IntegrationOneDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int size = 0, int rule = 0). Template Constructor of one dimensional Integrator passing a generic function object. @param f integration function (any C++ callable object implementing operator()(double x); @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; @pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__IntegratorOneDim.html:5814,adapt,adaptive,5814,root/html528/ROOT__Math__IntegratorOneDim.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__IntegratorOneDim.html,12,['adapt'],['adaptive']
Modifiability,"ve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; TODO --> adapt to variable,target,spectator selection; default transformation output; --> only indicate that transformation occurred. void UpdateNorm(Int_t ivar, Double_t x); TODO --> adapt to variable,target,spectator selection; update min and max of a given variable (target) and a given transformation method. void AttachXMLTo(void* parent); create XML description the transformation (write out info of selected variables). void ReadFromXML(void* trfnode); Read the input variables from the XML node. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); getinput and setoutput equivalent. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ). const Event* Transform(const TMVA::Event *const , Int_t cls) const. const Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. void SetEnabled(Bool_t e); accessors. { fEnabled = e; }. void SetNormalise(Bool_t n); { fNormalise = n; }. Bool_t IsEnabled() const; { return fEnabled; }. Bool_t IsCreated() const; { return fCreated; }. Bool_t IsNormalised() const; { return fNormalise; }. void ToggleInputSortOrder(Bool_t sortOrder); { fSortGet = sortOrder; }. void SetOu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableTransformBase.html:10052,adapt,adapt,10052,root/html530/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableTransformBase.html,6,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,"ve at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IMultiGenFunction& f, const double* x, unsigned int icoord = 0, double h = 1E-8); Derivatives for multi-dimension functions. Evaluate the partial derivative of a multi-dim function; with respect coordinate x_icoord at the point x[]. double Eval(IParamFunction & f, double x, const double * p, unsigned int ipar = 0, double h = 1E-8",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Derivator.html:4597,adapt,adaptive,4597,root/html526/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Derivator.html,1,['adapt'],['adaptive']
Modifiability,"ve at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IMultiGenFunction& f, const double* x, unsigned int icoord = 0, double h = 1E-8); Derivatives for multi-dimension functions. Evaluate the partial derivative of a multi-dim function; with respect coordinate x_icoord at the point x[]. double Eval(ROOT::Math::IParamFunction& f, double x, const double* p, unsigned int ipar = 0, doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__Derivator.html:4597,adapt,adaptive,4597,root/html528/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__Derivator.html,4,['adapt'],['adaptive']
Modifiability,"ve been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TRefCnt;  TRefCnt (EReferenceFlag);  Leave fRefs alone. ;  ;  TRefCnt (Int_t initRef=0);  ; virtual ~TRefCnt ();  ; void AddReference ();  ; UInt_t References () const;  ; UInt_t RemoveReference ();  ; void SetRefCount (UInt_t r);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGFont (const char *name);  ;  TGFont (const TGFont &)=delete;  ; LayoutChunk_t * NewChunk (TGTextLayout *layout, int *maxPtr, const char *start, int numChars, int curX, int newX, int y) const;  Helper function for ComputeTextLayout(). ;  ; void operator= (const TGFont &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFont.html:11460,inherit,inherited,11460,doc/master/classTGFont.html,https://root.cern,https://root.cern/doc/master/classTGFont.html,2,['inherit'],['inherited']
Modifiability,"ve components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; bool _doFast = false;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVoigtian.html:71183,inherit,inherited,71183,doc/master/classRooVoigtian.html,https://root.cern,https://root.cern/doc/master/classRooVoigtian.html,4,['inherit'],['inherited']
Modifiability,"ve for each coordinate and ROOT::Math::Fdf calculates the gradient and the function value at the same time. The pure private virtual method DoDerivative() must be implemented by the derived classes, while Gradient and FdF are by default implemented using DoDerivative, butthey can be overloaded by the derived classes to improve the efficiency in the derivative calculation.; Gradient interface (abstract class) defining the signature for calculating the gradient of a multi-dimensional function. Three methods are provided:; Gradient(const double *x, double * grad) evaluate the full gradient vector at the vector value x; Derivative(const double * x, int icoord) evaluate the partial derivative for the icoord coordinate; FdF(const double *x, double &f, double * g) evaluate at the same time gradient and function/ . Definition at line 168 of file IFunction.h. Public Types; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ; typedef IGradientFunctionMultiDimTempl< T > BaseGrad;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions; T Derivative (const T *x, unsigned int icoord, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the derivative algorithm will use information from the previous step, these can be passed in with this overload. ;  ; T Derivative (const T *x, unsigned int icoord=0) const;  Return the partial derivative with respect to the passed coordinate. ;  ; virtual void FdF (const T *x, T &f, T *df) const;  Optimized method to evaluate at the same time the function value and derivative at a point x. ;  ; virtual void Gradient (const T *x, T *grad) const;  Evaluate all the vector of function derivatives (gradient) at a point x. ;  ; virtual void GradientWithPrevResult (const T *x, T *grad, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the gradient algorithm will use information from t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientFunctionMultiDimTempl.html:1766,inherit,inherited,1766,doc/master/classROOT_1_1Math_1_1IGradientFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IGradientFunctionMultiDimTempl.html,1,['inherit'],['inherited']
Modifiability,"ve function ;  ; void PrintResult () const;  print result of minimization ;  ; bool ReleaseVariable (unsigned int ivar) override;  release an existing variable ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower) override;  set lower limit variable (override if minimizer supports them ) ;  ; bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper) override;  set upper limit variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableLimits (unsigned int ivar, double lower, double upper) override;  set the limits of an already existing variable ;  ; bool SetVariableLowerLimit (unsigned int ivar, double lower) override;  set the lower-limit of an already existing variable ;  ; bool SetVariableStepSize (unsigned int ivar, double step) override;  set the step size of an already existing variable ;  ; bool SetVariableUpperLimit (unsigned int ivar, double upper) override;  set the upper-limit of an already existing variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; bool SetVariableValues (const double *x) override;  set the values of all existing variables (array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:4128,variab,variable,4128,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,2,['variab'],['variable']
Modifiability,"ve g and h to the TFile, exit; 4) Open the TFile, retrieve g and h; 5) Call h->SetDirectory(0); 6) Call g->SetHistogram(h) again; 7) Carry on as normal. void SetMargin(Double_t m = 0.1); Sets the extra space (in %) around interpolated area for the 2D histogram. void SetMarginBinsContent(Double_t z = 0.); Sets the histogram bin height for points lying outside the TGraphDelaunay; convex hull ie: the bins in the margin. void SetMaximum(Double_t maximum = -1111); Set maximum. void SetMinimum(Double_t minimum = -1111); Set minimum. void SetName(const char* name); Changes the name of this 2D graph. void SetNameTitle(const char* name, const char* title); Change the name and title of this 2D graph. void SetNpx(Int_t npx = 40); Sets the number of bins along X used to draw the function. void SetNpy(Int_t npx = 40); Sets the number of bins along Y used to draw the function. void SetPoint(Int_t point, Double_t x, Double_t y, Double_t z); Sets point number n.; If n is greater than the current size, the arrays are automatically; extended. void SetTitle(const char* title = """"); Sets graph title. void Streamer(TBuffer& ); Stream a class object. TDirectory * GetDirectory() const; {return fDirectory;}. Int_t GetNpx() const; {return fNpx;}. Int_t GetNpy() const; {return fNpy;}. TList * GetListOfFunctions() const; { return fFunctions; }. Double_t GetMargin() const; {return fMargin;}. Double_t GetMaximum() const; {return fMaximum;}. Double_t GetMinimum() const; {return fMinimum;}. Int_t GetN() const; {return fNpoints;}. Double_t * GetX() const; {return fX;}. Double_t * GetY() const; {return fY;}. Double_t * GetZ() const; {return fZ;}. Double_t * GetEX() const; {return 0;}. Double_t * GetEY() const; {return 0;}. Double_t * GetEZ() const; {return 0;}. Double_t GetXmaxE() const; {return GetXmax();}. Double_t GetXminE() const; {return GetXmin();}. Double_t GetYmaxE() const; {return GetYmax();}. Double_t GetYminE() const; {return GetYmin();}. Double_t GetZmaxE() const; {return GetZmax();}. D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph2D.html:31957,extend,extended,31957,root/html534/TGraph2D.html,https://root.cern,https://root.cern/root/html534/TGraph2D.html,1,['extend'],['extended']
Modifiability,"ve in the workspace already, or the autoImport flag; // of defineSet must be set to import them on the fly. Named sets contain only references; // to the original variables, therefore the value of observables in named sets already; // reflect their 'current' value; std::unique_ptr<RooArgSet> params{model.getParameters(x)};; w.defineSet(""parameters"", *params);; w.defineSet(""observables"", x);; ; // E n c o d e r e f e r e n c e v a l u e f o r p a r a m e t e r s i n w o r k s p a c e; // ---------------------------------------------------------------------------------------------------; ; // Define a parameter 'snapshot' in the pdf; // Unlike a named set, a parameter snapshot stores an independent set of values for; // a given set of variables in the workspace. The values can be stored and reloaded; // into the workspace variable objects using the loadSnapshot() and saveSnapshot(); // methods. A snapshot saves the value of each variable, any errors that are stored; // with it as well as the 'Constant' flag that is used in fits to determine if a; // parameter is kept fixed or not.; ; // Do a dummy fit to a (supposedly) reference dataset here and store the results; // of that fit into a snapshot; std::unique_ptr<RooDataSet> refData{model.generate(x, 10000)};; model.fitTo(*refData, PrintLevel(-1));; ; // The true flag imports the values of the objects in (*params) into the workspace; // If not set, the present values of the workspace parameters objects are stored; w.saveSnapshot(""reference_fit"", *params, true);; ; // Make another fit with the signal component forced to zero; // and save those parameters too; ; bkgfrac.setVal(1);; bkgfrac.setConstant(true);; bkgfrac.removeError();; model.fitTo(*refData, PrintLevel(-1));; ; w.saveSnapshot(""reference_fit_bkgonly"", *params, true);; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; RooWorkspace.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf510__wsnamedsets_8C.html:4473,variab,variable,4473,doc/master/rf510__wsnamedsets_8C.html,https://root.cern,https://root.cern/doc/master/rf510__wsnamedsets_8C.html,1,['variab'],['variable']
Modifiability,"ve neurons (returning the optionally normalized input) and output neurons are linear. The type of hidden neurons is free, the default being sigmoids. (One should still try to pass normalized inputs, e.g. between [0.,1]); The basic input is a TTree and two (training and test) TEventLists. Input and output neurons are assigned a value computed for each event with the same possibilities as for TTree::Draw(). Events may be weighted individually or via TTree::SetWeight(). 6 learning methods are available: kStochastic, kBatch, kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS.; This implementation, written by C. Delaere, is inspired from the mlpfit package from J.Schwindling et al. with some extensions:. the algorithms are globally the same; in TMultilayerPerceptron, there is no limitation on the number of layers/neurons, while MLPFIT was limited to 2 hidden layers; TMultilayerPerceptron allows you to save the network in a root file, and provides more export functionalities; TMultilayerPerceptron gives more flexibility regarding the normalization of inputs/outputs; TMultilayerPerceptron provides, thanks to Andrea Bocci, the possibility to use cross-entropy errors, which allows to train a network for pattern classification based on Bayesian posterior probability. Introduction; Neural Networks are more and more used in various fields for data analysis and classification, both for research and commercial institutions. Some randomly chosen examples are:. image analysis; financial movements predictions and analysis; sales forecast and product shipping optimisation; in particles physics: mainly for classification tasks (signal over background discrimination). More than 50% of neural networks are multilayer perceptrons. This implementation of multilayer perceptrons is inspired from the MLPfit package originally written by Jerome Schwindling. MLPfit remains one of the fastest tool for neural networks studies, and this ROOT add-on will not try to compete on that. A clear a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:1340,layers,layers,1340,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,2,['layers'],['layers']
Modifiability,"ve not been yet assigned to any merger; TList*fWrksOutputReadyList of workers ready to send output (in control output sending mode); static TPluginHandler*fgLogViewerLog dialog box plugin; static TList*fgProofEnvListList of TNameds defining environment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProof(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:35633,config,config,35633,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,1,['config'],['config']
Modifiability,"ve proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; const ROOT::Math::IBaseFunctionOneDim * func;  ; RooRealProxy var;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctor1DPdfBinding.html:67802,config,configuration,67802,doc/master/classRooFunctor1DPdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctor1DPdfBinding.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 15 | 27781.4 26354.5 0.0197825 0.0017915 44466.6 0; : 16 Minimum Test error found - save the configuration ; : 16 | 27524.2 26104.3 0.0196926 0.00175551 44600.3 0; : 17 Minimum Test error found - save the configuration ; : 17 | 27271.4 25860.7 0.0197778 0.00177907 44447.7 0; : 18 Minimum Test error found - save the configuration ; : 18 | 27023.6 25622.6 0.0197311 0.00176281 44522.9 0; : 19 Minimum Test error found - save the configuration ; : 19 | 26780.6 25388.8 0.0197339 0.00176163 44513.1 0; : 20 Minimum Test error found - save the configuration ; : 20 | 26542.7 25157.4 0.0198818 0.0018763 44431 0; : 21 Minimum Test error found - save the configuration ; : 21 | 26311 24925.1 0.0199584 0.00175652 43951.6 0; : 22 Minimum Test error found - save the configuration ; : 22 | 26076.9 24700.5 0.0197873 0.00176359 44385.9 0; : 23 Minimum Test error found - save the configuration ; : 23 | 25845.4 24483.8 0.0196702 0.00176161 44671.3 0; : 24 Minimum Test error found - save the configuration ; : 24 | 25624.1 24264.1 0.0196853 0.00176075 44631.5 0; : 25 Minimum Test error found - save the configuration ; : 25 | 25402.4 24046.8 0.0199052 0.00182376 44244.2 0; : 26 Minimum Test error found - save the configuration ; : 26 | 25181.1 23835.2 0.0199605 0.00176778 43973.7 0; : 27 Minimum Test error found - save the configuration ; : 27 | 24965.1 23625.2 0.0197673 0.00175956 44425.4 0; : 28 Minimum Test error found - save the configuration ; : 28 | 24751.3 23417.4 0.0197715 0.00178318 44473.3 0; : 29 Minimum Test error found - save the configuration ; : 29 | 24538.1 23214.7 0.019691 0.0017711 44643.2 0; : 30 Minimum Test error found - save the configuration ; : 30 | 24332.4 23009.4 0.0197207 0.00177726 44584.5 0; : 31 Minimum Test error found - save the configuration ; : 31 | 24122.8 22810.9 0.0196876 0.00176879 44645.9 0; : 32 Minimum Test error found - save the configuration ; : 32 | 23919.8 22612.5 0.01973 0.00178692 44585.4 0; : 33 Minimum Test error found,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:13779,config,configuration,13779,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 34 | 23516.3 22222.5 0.0206631 0.00186547 42558.4 0; : 35 Minimum Test error found - save the configuration ; : 35 | 23322.1 22028.2 0.0200826 0.00177554 43698.9 0; : 36 Minimum Test error found - save the configuration ; : 36 | 23123.9 21840 0.0197735 0.00177073 44437.6 0; : 37 Minimum Test error found - save the configuration ; : 37 | 22932.1 21651.2 0.0197273 0.00177446 44561.1 0; : 38 Minimum Test error found - save the configuration ; : 38 | 22740.7 21464.4 0.0197166 0.00177193 44581.5 0; : 39 Minimum Test error found - save the configuration ; : 39 | 22549.1 21282.9 0.0197213 0.00177445 44576 0; : 40 Minimum Test error found - save the configuration ; : 40 | 22363.6 21100 0.0197729 0.00177445 44448.2 0; : 41 Minimum Test error found - save the configuration ; : 41 | 22176.6 20921.1 0.0197131 0.00176514 44573.2 0; : 42 Minimum Test error found - save the configuration ; : 42 | 21994.9 20740.9 0.0197264 0.00176834 44548.1 0; : 43 Minimum Test error found - save the configuration ; : 43 | 21811.7 20564.6 0.0197476 0.00176764 44494 0; : 44 Minimum Test error found - save the configuration ; : 44 | 21631.5 20390.5 0.0198172 0.00177793 44347.7 0; : 45 Minimum Test error found - save the configuration ; : 45 | 21453.9 20217 0.0197313 0.00176795 44535.1 0; : 46 Minimum Test error found - save the configuration ; : 46 | 21277.2 20045.6 0.0197489 0.00176953 44495.5 0; : 47 Minimum Test error found - save the configuration ; : 47 | 21102.5 19876.1 0.0197499 0.00176859 44490.7 0; : 48 Minimum Test error found - save the configuration ; : 48 | 20931.2 19705.9 0.0197403 0.00176149 44496.7 0; : 49 Minimum Test error found - save the configuration ; : 49 | 20758.9 19539.2 0.0199993 0.00178715 43926.8 0; : 50 Minimum Test error found - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:15896,config,configuration,15896,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 40 | 22363.6 21100 0.0197729 0.00177445 44448.2 0; : 41 Minimum Test error found - save the configuration ; : 41 | 22176.6 20921.1 0.0197131 0.00176514 44573.2 0; : 42 Minimum Test error found - save the configuration ; : 42 | 21994.9 20740.9 0.0197264 0.00176834 44548.1 0; : 43 Minimum Test error found - save the configuration ; : 43 | 21811.7 20564.6 0.0197476 0.00176764 44494 0; : 44 Minimum Test error found - save the configuration ; : 44 | 21631.5 20390.5 0.0198172 0.00177793 44347.7 0; : 45 Minimum Test error found - save the configuration ; : 45 | 21453.9 20217 0.0197313 0.00176795 44535.1 0; : 46 Minimum Test error found - save the configuration ; : 46 | 21277.2 20045.6 0.0197489 0.00176953 44495.5 0; : 47 Minimum Test error found - save the configuration ; : 47 | 21102.5 19876.1 0.0197499 0.00176859 44490.7 0; : 48 Minimum Test error found - save the configuration ; : 48 | 20931.2 19705.9 0.0197403 0.00176149 44496.7 0; : 49 Minimum Test error found - save the configuration ; : 49 | 20758.9 19539.2 0.0199993 0.00178715 43926.8 0; : 50 Minimum Test error found - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - save the configuration ; : 52 | 20255.7 19051.4 0.0197679 0.00177721 44467.5 0; : 53 Minimum Test error found - save the configuration ; : 53 | 20090.6 18891.7 0.0197461 0.00177488 44515.6 0; : 54 Minimum Test error found - save the configuration ; : 54 | 19926.4 18735.4 0.0197628 0.00177559 44476 0; : 55 Minimum Test error found - save the configuration ; : 55 | 19766 18579 0.0197479 0.00177128 44502.3 0; : 56 Minimum Test error found - save the configuration ; : 56 | 19606.6 18423 0.0198259 0.00178958 44354.9 0; : 57 Minimum Test error found - save the configuration ; : 57 | 19448.2 18266.7 0.0197832 0.00177932 44434.9 0; : 58 Minimum Test error found - save,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:16564,config,configuration,16564,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 60 | 18976.4 17813.4 0.0198417 0.00178241 44298.6 0; : 61 Minimum Test error found - save the configuration ; : 61 | 18829.3 17664.6 0.0197742 0.00177192 44438.7 0; : 62 Minimum Test error found - save the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found - save the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found - save the configuration ; : 68 | 17745 16589.7 0.0198886 0.00178724 44195.6 0; : 69 Minimum Test error found - save the configuration ; : 69 | 17598.1 16441.7 0.0198822 0.00177929 44191.7 0; : 70 Minimum Test error found - save the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found -,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:18787,config,configuration,18787,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 61 | 18829.3 17664.6 0.0197742 0.00177192 44438.7 0; : 62 Minimum Test error found - save the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found - save the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found - save the configuration ; : 68 | 17745 16589.7 0.0198886 0.00178724 44195.6 0; : 69 Minimum Test error found - save the configuration ; : 69 | 17598.1 16441.7 0.0198822 0.00177929 44191.7 0; : 70 Minimum Test error found - save the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found -,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:18899,config,configuration,18899,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found - save the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found - save the configuration ; : 68 | 17745 16589.7 0.0198886 0.00178724 44195.6 0; : 69 Minimum Test error found - save the configuration ; : 69 | 17598.1 16441.7 0.0198822 0.00177929 44191.7 0; : 70 Minimum Test error found - save the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found -,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:19011,config,configuration,19011,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found - save the configuration ; : 68 | 17745 16589.7 0.0198886 0.00178724 44195.6 0; : 69 Minimum Test error found - save the configuration ; : 69 | 17598.1 16441.7 0.0198822 0.00177929 44191.7 0; : 70 Minimum Test error found - save the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found -,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:19233,config,configuration,19233,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found - save the configuration ; : 68 | 17745 16589.7 0.0198886 0.00178724 44195.6 0; : 69 Minimum Test error found - save the configuration ; : 69 | 17598.1 16441.7 0.0198822 0.00177929 44191.7 0; : 70 Minimum Test error found - save the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found -,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:19345,config,configuration,19345,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found - save the configuration ; : 68 | 17745 16589.7 0.0198886 0.00178724 44195.6 0; : 69 Minimum Test error found - save the configuration ; : 69 | 17598.1 16441.7 0.0198822 0.00177929 44191.7 0; : 70 Minimum Test error found - save the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - sa,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:19457,config,configuration,19457,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 69 | 17598.1 16441.7 0.0198822 0.00177929 44191.7 0; : 70 Minimum Test error found - save the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:19789,config,configuration,19789,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 70 | 17446.3 16297.7 0.0199037 0.00178336 44149.4 0; : 71 Minimum Test error found - save the configuration ; : 71 | 17299.3 16156.1 0.0199217 0.00177946 44096 0; : 72 Minimum Test error found - save the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:19901,config,configuration,19901,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 72 | 17155.5 16013.3 0.0198893 0.00178782 44195.4 0; : 73 Minimum Test error found - save the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:20123,config,configuration,20123,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 73 | 17008.7 15875.5 0.0199043 0.00178745 44157.9 0; : 74 Minimum Test error found - save the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - save the configuration ; : 90 | 14737.4 13659.4 0.0204557 0.00186757 43038.2 0; : 91 Minimum Test error found - ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:20235,config,configuration,20235,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 74 | 16868.3 15734.7 0.0199692 0.00179417 44016.4 0; : 75 Minimum Test error found - save the configuration ; : 75 | 16724.2 15597.7 0.0199149 0.00178949 44136.9 0; : 76 Minimum Test error found - save the configuration ; : 76 | 16584 15460 0.0199224 0.00178826 44115.8 0; : 77 Minimum Test error found - save the configuration ; : 77 | 16444.4 15323.6 0.0199118 0.00178921 44143.8 0; : 78 Minimum Test error found - save the configuration ; : 78 | 16305.9 15188.8 0.0201885 0.00179593 43495.8 0; : 79 Minimum Test error found - save the configuration ; : 79 | 16166.6 15057.4 0.0199259 0.00179169 44115.6 0; : 80 Minimum Test error found - save the configuration ; : 80 | 16031 14926.5 0.0199332 0.00179406 44103.6 0; : 81 Minimum Test error found - save the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - save the configuration ; : 90 | 14737.4 13659.4 0.0204557 0.00186757 43038.2 0; : 91 Minimum Test error found - save the configuration ; : 91 | 14612.9 13539.6 0.0208154 0.00188863 42268.3 0; : 92 Minimum Test error found - ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:20347,config,configuration,20347,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 8 | 29852.4 28319.6 0.0206438 0.00186969 42611.9 0; : 9 Minimum Test error found - save the configuration ; : 9 | 29498.2 28000.3 0.0204359 0.0018446 43030.8 0; : 10 Minimum Test error found - save the configuration ; : 10 | 29182.7 27696.8 0.0202998 0.00181461 43277.8 0; : 11 Minimum Test error found - save the configuration ; : 11 | 28878.3 27413.2 0.0196838 0.00176755 44652.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 28593.7 27134.7 0.0196593 0.00176089 44696.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 28310.5 26871.8 0.0196662 0.00176724 44695.4 0; : 14 Minimum Test error found - save the configuration ; : 14 | 28043.7 26610.8 0.019761 0.00176915 44464.7 0; : 15 Minimum Test error found - save the configuration ; : 15 | 27781.4 26354.5 0.0197825 0.0017915 44466.6 0; : 16 Minimum Test error found - save the configuration ; : 16 | 27524.2 26104.3 0.0196926 0.00175551 44600.3 0; : 17 Minimum Test error found - save the configuration ; : 17 | 27271.4 25860.7 0.0197778 0.00177907 44447.7 0; : 18 Minimum Test error found - save the configuration ; : 18 | 27023.6 25622.6 0.0197311 0.00176281 44522.9 0; : 19 Minimum Test error found - save the configuration ; : 19 | 26780.6 25388.8 0.0197339 0.00176163 44513.1 0; : 20 Minimum Test error found - save the configuration ; : 20 | 26542.7 25157.4 0.0198818 0.0018763 44431 0; : 21 Minimum Test error found - save the configuration ; : 21 | 26311 24925.1 0.0199584 0.00175652 43951.6 0; : 22 Minimum Test error found - save the configuration ; : 22 | 26076.9 24700.5 0.0197873 0.00176359 44385.9 0; : 23 Minimum Test error found - save the configuration ; : 23 | 25845.4 24483.8 0.0196702 0.00176161 44671.3 0; : 24 Minimum Test error found - save the configuration ; : 24 | 25624.1 24264.1 0.0196853 0.00176075 44631.5 0; : 25 Minimum Test error found - save the configuration ; : 25 | 25402.4 24046.8 0.0199052 0.00182376 44244.2 0; : 26 Minimum Test error found ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:13000,config,configuration,13000,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - save the configuration ; : 90 | 14737.4 13659.4 0.0204557 0.00186757 43038.2 0; : 91 Minimum Test error found - save the configuration ; : 91 | 14612.9 13539.6 0.0208154 0.00188863 42268.3 0; : 92 Minimum Test error found - save the configuration ; : 92 | 14490.4 13421.6 0.0202522 0.00182164 43406.2 0; : 93 Minimum Test error found - save the configuration ; : 93 | 14371 13301.8 0.0200599 0.00180046 43813.1 0; : 94 Minimum Test error found - save the configuration ; : 94 | 14248.9 13186.1 0.0201736 0.00184165 43639.6 0; : 95 Minimum Test error found - save the configuration ; : 95 | 14131.5 13069.6 0.020175 0.00181418 43571 0; : 96 Minimum Test error found - save the configuration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - save the configuration ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - save the configuration ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found - save the configuration ; : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error fo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:21570,config,configuration,21570,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,ve the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - save the configuration ; : 90 | 14737.4 13659.4 0.0204557 0.00186757 43038.2 0; : 91 Minimum Test error found - save the configuration ; : 91 | 14612.9 13539.6 0.0208154 0.00188863 42268.3 0; : 92 Minimum Test error found - save the configuration ; : 92 | 14490.4 13421.6 0.0202522 0.00182164 43406.2 0; : 93 Minimum Test error found - save the configuration ; : 93 | 14371 13301.8 0.0200599 0.00180046 43813.1 0; : 94 Minimum Test error found - save the configuration ; : 94 | 14248.9 13186.1 0.0201736 0.00184165 43639.6 0; : 95 Minimum Test error found - save the configuration ; : 95 | 14131.5 13069.6 0.020175 0.00181418 43571 0; : 96 Minimum Test error found - save the configuration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - save the configuration ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - save the configuration ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found - save the configuration ; : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error fou,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:21682,config,configuration,21682,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"ve(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCheckButton.html:13008,inherit,inherited,13008,doc/master/classTGCheckButton.html,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html,13,['inherit'],['inherited']
Modifiability,"ve(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddModel.html:28652,config,config,28652,root/html528/RooAddModel.html,https://root.cern,https://root.cern/root/html528/RooAddModel.html,5,['config'],['config']
Modifiability,"ve(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsCachedPdf.html:27848,config,config,27848,root/html528/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsCachedPdf.html,1,['config'],['config']
Modifiability,"ve(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetMode(const RooMomentMorph::Setting& setting); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMomentMorph.html:27203,config,config,27203,root/html528/RooMomentMorph.html,https://root.cern,https://root.cern/root/html528/RooMomentMorph.html,1,['config'],['config']
Modifiability,"ve-part [ ""?"" query ] [ ""#"" fragment ] cf. ;  ; Bool_t IsSortable () const override;  ; Bool_t IsUri () const;  Returns kTRUE if instance qualifies as URI URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ] cf. ;  ; void Normalise ();  Syntax based normalisation according to RFC chapter 6.2.2. ;  ; TUri & operator= (const TUri &rhs);  TUri assignment operator. ;  ; void Print (Option_t *option="""") const override;  Display function,. ;  ; void Reset ();  Initialize this URI object. ;  ; Bool_t SetAuthority (const TString &authority);  Set authority part of URI: ;  ; Bool_t SetFragment (const TString &fragment);  Set fragment component of URI: ;  ; Bool_t SetHierPart (const TString &hier);  returns hier-part component of URI ;  ; Bool_t SetHost (const TString &host);  Set host component of URI: ;  ; Bool_t SetPath (const TString &path);  Set path component of URI: ;  ; Bool_t SetPort (const TString &port);  Set port component of URI: ;  ; Bool_t SetQuery (const TString &path);  Set query component of URI: ;  ; Bool_t SetRelativePart (const TString &);  Returns kTRUE is string qualifies as relative-part: ;  ; Bool_t SetScheme (const TString &scheme);  Set scheme component of URI: ;  ; Bool_t SetUri (const TString &uri);  Parse URI and set the member variables accordingly, returns kTRUE if URI validates, and kFALSE otherwise: ;  ; Bool_t SetUserInfo (const TString &userinfo);  Set userinfo component of URI: ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to cu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUri.html:3434,variab,variables,3434,doc/master/classTUri.html,https://root.cern,https://root.cern/doc/master/classTUri.html,1,['variab'],['variables']
Modifiability,"veCaloData::CellId_t> >TEveCaloData::fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; THStack*fHStack; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCaloDataHist.html:19531,variab,variable,19531,root/html528/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html528/TEveCaloDataHist.html,4,['variab'],['variable']
Modifiability,"veCaloData::CellId_t> >fCellList; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tTEveCaloViz::fEndCapPosFforward end cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Color_tfFrameColor; Char_tfFrameTransparency; Float_tfFrameWidth; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tfRnrBarrelFrame; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrEndCapFrame; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveCalo3D.html:22370,variab,variable,22370,root/html534/TEveCalo3D.html,https://root.cern,https://root.cern/root/html534/TEveCalo3D.html,1,['variab'],['variable']
Modifiability,"veElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  . Public Member Functions;  TEveCalo2D (const char *n=""TEveCalo2D"", const char *t="""");  Constructor. ;  ;  ~TEveCalo2D () override;  Destructor. ;  ; void CellSelectionChanged () override;  Sort selected cells in eta or phi bins for selection and highlight. ;  ; void ComputeBBox () override;  Fill bounding-box information of the base-class TAttBBox (virtual method). ;  ; const TEveCalo2D::vBinCells_t & GetBinLists () const;  ; Float_t GetValToHeight () const override;  Virtual function of TEveCaloViz. ;  ; TClass * IsA () const override;  ; void SetProjection (TEveProjectionManager *proj, TEveProjectable *model) override;  Set projection manager and model object. ;  ; void SetScaleAbs (Bool_t) override;  Set absolute scale in projected calorimeter. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  This is virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCalo2D.html:2007,inherit,inherited,2007,doc/master/classTEveCalo2D.html,https://root.cern,https://root.cern/doc/master/classTEveCalo2D.html,1,['inherit'],['inherited']
Modifiability,"veElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  . Public Member Functions;  TEveCaloLego (TEveCaloData *data=nullptr, const char *n=""TEveCaloLego"", const char *t="""");  Constructor. ;  ;  ~TEveCaloLego () override;  ; void ComputeBBox () override;  Fill bounding-box information of the base-class TAttBBox (virtual method). ;  ; E2DMode_e Get2DMode ();  ; Bool_t GetAutoRebin () const;  ; EBoxMode_e GetBoxMode ();  ; Int_t GetCellPixelFontSize ();  ; Bool_t GetDrawHPlane () const;  ; Int_t GetDrawNumberCellPixels ();  ; float GetFixedHeightValIn2DMode () const;  ; Color_t GetFontColor () const;  ; Color_t GetGridColor () const;  ; bool GetHasFixedHeightIn2DMode () const;  ; Float_t GetHPlaneVal () const;  ; Bool_t GetNormalizeRebin () const;  ; Int_t GetNZSteps () const;  ; Int_t GetPixelsPerBin () const;  ; Color_t GetPlaneColor () const;  ; Char_t GetPlaneTransparency () const;  ; EProjection_e GetProjection () const;  ; TClass * IsA () const override;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloLego.html:2026,inherit,inherited,2026,doc/master/classTEveCaloLego.html,https://root.cern,https://root.cern/doc/master/classTEveCaloLego.html,1,['inherit'],['inherited']
Modifiability,"veElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  . Public Member Functions;  TEveSelection (const char *n=""TEveSelection"", const char *t="""");  Constructor. ;  ;  ~TEveSelection () override;  ; Bool_t AcceptElement (TEveElement *el) override;  Pre-addition check. ;  ; virtual void ActivateSelection ();  Activate this selection. ;  ; void AddElement (TEveElement *el) override;  Add an element into selection, virtual from TEveElement. ;  ; virtual void DeactivateSelection ();  Deactivate this selection. ;  ; Bool_t GetIsMaster () const;  ; Int_t GetPickToSelect () const;  ; TClass * IsA () const override;  ; TEveElement * MapPickedToSelected (TEveElement *el);  Given element el that was picked or clicked by the user, find the parent/ancestor element that should actually become the main selected element according to current selection mode. ;  ; void RecheckImpliedSetForElement (TEveElement *el);  If given element is selected or implied-selected with this se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSelection.html:2041,inherit,inherited,2041,doc/master/classTEveSelection.html,https://root.cern,https://root.cern/doc/master/classTEveSelection.html,1,['inherit'],['inherited']
Modifiability,"veElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  . Public Member Functions;  TEveShape (const char *n=""TEveShape"", const char *t="""");  Constructor. ;  ;  ~TEveShape () override;  Destructor. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; virtual Bool_t GetDrawFrame () const;  ; virtual Color_t GetFillColor () const;  ; virtual Bool_t GetHighlightFrame () const;  ; virtual Color_t GetLineColor () const;  ; virtual Float_t GetLineWidth () const;  ; virtual Bool_t GetMiniFrame () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint this object. Only direct rendering is supported. ;  ; virtual void SetDrawFrame (Bool_t f);  ; virtual void SetFillColor (Color_t c);  ; virtual void SetHighlightFrame (Bool_t f);  ; virtual void SetLineColor (Color_t c);  ; virtual void SetLineWidth (Float_t lw);  ; void SetMainColor (Color_t color) override;  Set main colo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveShape.html:2142,inherit,inherited,2142,doc/master/classTEveShape.html,https://root.cern,https://root.cern/doc/master/classTEveShape.html,1,['inherit'],['inherited']
Modifiability,"veElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  . Public Member Functions;  TEveTrackPropagator (const char *n=""TEveTrackPropagator"", const char *t="""", TEveMagField *field=nullptr, Bool_t own_field=kTRUE);  Default constructor. ;  ;  ~TEveTrackPropagator () override;  Destructor. ;  ; void CheckReferenceCount (const TEveException &eh=""TEveElement::CheckReferenceCount "") override;  Check reference count - virtual from TEveElement. ;  ; void ElementChanged (Bool_t update_scenes=kTRUE, Bool_t redraw=kFALSE) override;  Element-change notification. ;  ; void FillPointSet (TEvePointSet *ps) const;  Reset ps and populate it with points in propagation cache. ;  ; Int_t GetCurrentPoint () const;  Get index of current point on track. ;  ; Double_t GetDelta () const;  ; Bool_t GetEditPathMarks () const;  ; Bool_t GetFitCluster2Ds () const;  ; Bool_t GetFitDaughters () const;  ; Bool_t GetFitDecay () const;  ; Bool_t GetFitLineSegments () const;  ; Bool_t GetFitRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackPropagator.html:2749,inherit,inherited,2749,doc/master/classTEveTrackPropagator.html,https://root.cern,https://root.cern/doc/master/classTEveTrackPropagator.html,1,['inherit'],['inherited']
Modifiability,"veElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Short_tfCompoundOpenIf more than zero, tag new children as compound members.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCompound.html:18133,variab,variable,18133,root/html528/TEveCompound.html,https://root.cern,https://root.cern/root/html528/TEveCompound.html,1,['variab'],['variable']
Modifiability,"veElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Short_tfCompoundOpenIf more than zero, tag new children as compound members.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveCompound.html:18499,variab,variable,18499,root/html530/TEveCompound.html,https://root.cern,https://root.cern/root/html530/TEveCompound.html,3,['variab'],['variable']
Modifiability,veElement::fCompoundCompound this object belongs to.; Double_tfCurrentScale; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveStraightLineSet::fDepthTest; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; TEveStraightLineSet::Line_t*TEveStraightLineSet::fLastLine!; Color_tTAttLine::fLineColorline color; TEveChunkManagerTEveStraightLineSet::fLinePlex; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; TEveChunkManagerTEveStraightLineSet::fMarkerPlex; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveStraightLineSet::fOwnLinesIdsFlag specifying if id-objects are owned by the line-set; Bool_tTEveStraightLineSet::fOwnMarkersIdsFlag specifying if id-objects are owned by the line-set; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveStraightLineSet::fRnrLines; Bool_tTEveStraightLineSet::fRnrMarkers; Bool_tTEveElement::fRnrSelfRender this element.; Float_tfScaleCenter[3]; Bool_tTEveElement::fSel,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveScalableStraightLineSet.html:25760,variab,variable,25760,root/html602/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html602/TEveScalableStraightLineSet.html,2,['variab'],['variable']
Modifiability,"veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TEveSceneList (const TEveSceneList &);  ; TEveSceneList & operator= (const TEveSceneList &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSceneList.html:28890,inherit,inherited,28890,doc/master/classTEveSceneList.html,https://root.cern,https://root.cern/doc/master/classTEveSceneList.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fLogX;  ; Bool_t fLogY;  ; Bool_t fLogZ;  ; TObject * fPlot;  ; TString fPlotOption;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePlot3D.html:28713,inherit,inherited,28713,doc/master/classTEvePlot3D.html,https://root.cern,https://root.cern/doc/master/classTEvePlot3D.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Short_t fCompoundOpen;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; B,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompound.html:28785,inherit,inherited,28785,doc/master/classTEveCompound.html,https://root.cern,https://root.cern/doc/master/classTEveCompound.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCn,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementList.html:28144,inherit,inherited,28144,doc/master/classTEveElementList.html,https://root.cern,https://root.cern/doc/master/classTEveElementList.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGFrame * fGUIFrame;  ;  Protected Attributes inherited from TEveWindow; TEveCompositeFrame * fEveFrame;  ; Bool_t fShowTitleBar;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowFrame.html:32036,inherit,inherited,32036,doc/master/classTEveWindowFrame.html,https://root.cern,https://root.cern/doc/master/classTEveWindowFrame.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGPack * fPack;  ;  Protected Attributes inherited from TEveWindow; TEveCompositeFrame * fEveFrame;  ; Bool_t fShowTitleBar;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fPare,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowPack.html:32450,inherit,inherited,32450,doc/master/classTEveWindowPack.html,https://root.cern,https://root.cern/doc/master/classTEveWindowPack.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGTab * fTab;  ;  Protected Attributes inherited from TEveWindow; TEveCompositeFrame * fEveFrame;  ; Bool_t fShowTitleBar;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParent,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowTab.html:31999,inherit,inherited,31999,doc/master/classTEveWindowTab.html,https://root.cern,https://root.cern/doc/master/classTEveWindowTab.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; std::vector< TString > fNewEventCommands;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveEventManager.html:29022,inherit,inherited,29022,doc/master/classTEveEventManager.html,https://root.cern,https://root.cern/doc/master/classTEveEventManager.html,1,['inherit'],['inherited']
Modifiability,"veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void HandleTooltip ();  Show / hide tooltip for various MouseOver events. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fBrightness;  ; Bool_t fShowTooltip;  ; Bool_t fUseLightColorSet;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveViewerList.html:29928,inherit,inherited,29928,doc/master/classTEveViewerList.html,https://root.cern,https://root.cern/doc/master/classTEveViewerList.html,1,['inherit'],['inherited']
Modifiability,"veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void PreDeleteElement () override;  Called before the element is deleted, thus offering the last chance to detach from acquired resources and from the framework itself. ;  ; virtual void SetCurrent (Bool_t curr);  Set current state of this eve-window. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TEveCompositeFrame * fEveFrame;  ; Bool_t fShowTitleBar;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindow.html:31527,inherit,inherited,31527,doc/master/classTEveWindow.html,https://root.cern,https://root.cern/doc/master/classTEveWindow.html,1,['inherit'],['inherited']
Modifiability,"veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void RetransHierarchicallyRecurse (TEveElement *el, const TEveTrans &tp);  Set transformation matrix for physical shape of element el in the GL-scene and recursively descend into children (if enabled). ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fChanged;  ; TGLScenePad * fGLScene;  ; Bool_t fHierarchical;  ; TEvePad * fPad;  ; Bool_t fS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveScene.html:29380,inherit,inherited,29380,doc/master/classTEveScene.html,https://root.cern,https://root.cern/doc/master/classTEveScene.html,1,['inherit'],['inherited']
Modifiability,"veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetCurrent (Bool_t curr) override;  Set current state of this window-slot. ;  ;  Protected Member Functions inherited from TEveWindow; void PreDeleteElement () override;  Called before the element is deleted, thus offering the last chance to detach from acquired resources and from the framework itself. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGCompositeFrame * fEmbedBuffer;  ; TGTextButton * fEmptyButt;  ;  Protected At",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowSlot.html:32452,inherit,inherited,32452,doc/master/classTEveWindowSlot.html,https://root.cern,https://root.cern/doc/master/classTEveWindowSlot.html,1,['inherit'],['inherited']
Modifiability,veElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static void InitInternal ();  Initialize static data-members according to running conditions. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . Protected Attributes; TGLViewer * fGLViewer;  ; TGFrame * fGLViewerFrame;  ;  Protected Attributes inherited from TEveWindowFrame; TGFrame * fGUIFrame;  ;  Protected Attributes inherited from TEveWindow; TEveCompositeFrame * fEveFrame;  ; Bool_t fShowTitleBar;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveViewer.html:33876,inherit,inherited,33876,doc/master/classTEveViewer.html,https://root.cern,https://root.cern/doc/master/classTEveViewer.html,1,['inherit'],['inherited']
Modifiability,"veGridStepper & operator= (const TEveGridStepper &);  . Private Attributes; Int_t * fLimitArr [3];  ; Int_t * fValueArr [3];  . Friends; class TEveGridStepperSubEditor;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveGridStepper.h>. Inheritance diagram for TEveGridStepper:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStepMode_e. enum TEveGridStepper::EStepMode_e. EnumeratorkSM_XYZ ; kSM_YXZ ; kSM_XZY . Definition at line 32 of file TEveGridStepper.h. Constructor & Destructor Documentation. ◆ TEveGridStepper() [1/2]. TEveGridStepper::TEveGridStepper ; (; const TEveGridStepper & ; ). private . Internal traversal variables. . ◆ TEveGridStepper() [2/2]. TEveGridStepper::TEveGridStepper ; (; Int_t ; sm = kSM_XYZ). Constructor. ; Definition at line 26 of file TEveGridStepper.cxx. ◆ ~TEveGridStepper(). TEveGridStepper::~TEveGridStepper ; (; ). inlineoverride . Definition at line 44 of file TEveGridStepper.h. Member Function Documentation. ◆ Class(). static TClass * TEveGridStepper::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveGridStepper::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveGridStepper::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file TEveGridStepper.h. ◆ DeclFileName(). static const char * TEveGridStepper::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file TEveGridStepper.h. ◆ GetCx(). Int_t TEveGridStepper::GetCx ; (; ); const. inline . D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGridStepper.html:12064,variab,variables,12064,doc/master/classTEveGridStepper.html,https://root.cern,https://root.cern/doc/master/classTEveGridStepper.html,1,['variab'],['variables']
Modifiability,"vePrimitive(std::ostream &out, Option_t *option = """") override;; 45 virtual void SetObjectX(TObject *obj);; 46 virtual void SetObjectY(TObject *obj);; 47 virtual void SetVarX(const char *varx); // *MENU*; 48 virtual void SetVarY(const char *vary); // *MENU*; 49 ; 50 ClassDefOverride(TCutG,2) // A Graphical cut.; 51};; 52 ; 53#endif; h#define h(i)Definition RSha256.hxx:106; Float_tfloat Float_tDefinition RtypesCore.h:57; Double_tdouble Double_tDefinition RtypesCore.h:59; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; namechar name[80]Definition TGX11.cxx:110; TGraph.h; TCutGGraphical cut class.Definition TCutG.h:20; TCutG::IntegralHistvirtual Double_t IntegralHist(TH2 *h, Option_t *option="""") constCompute the integral of 2-d histogram h for all bins inside the cut if option ""width"" is specified,...Definition TCutG.cxx:311; TCutG::fVarYTString fVarYY variable.Definition TCutG.h:24; TCutG::Centervirtual void Center(Double_t &cx, Double_t &cy) constCompute the center x,y of this TCutG The algorithm uses Stoke's theorem over the border of the closed...Definition TCutG.cxx:289; TCutG::~TCutG~TCutG() overrideTCutG destructor.Definition TCutG.cxx:243; TCutG::TCutGTCutG()TCutG default constructor.Definition TCutG.cxx:99; TCutG::GetVarXconst char * GetVarX() constDefinition TCutG.h:41; TCutG::SavePrimitivevoid SavePrimitive(std::ostream &out, Option_t *option="""") overrideSave primitive as a C++ statement(s) on output stream out.Definition TCutG.cxx:356; TCutG::fObjectYTObject * fObjectY! pointer to an object corresponding to YDefinition TCutG.h:26; TCutG::SetVarYvirtual void SetVarY(const char *vary)Set Y variable.Definition TCutG.cxx:412; TCutG::Areavirtual Double_t Area() constCompute the area inside this TCutG The algorithm uses Stoke's theorem over the border of the closed p...Definition TCutG.cxx:272; TCutG::fVarXTString ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCutG_8h_source.html:2685,variab,variable,2685,doc/master/TCutG_8h_source.html,https://root.cern,https://root.cern/doc/master/TCutG_8h_source.html,1,['variab'],['variable']
Modifiability,"veProjected ();  Destructor. ;  ; Float_t GetDepth () const;  ; TEveProjectionManager * GetManager () const;  ; TEveProjectable * GetProjectable () const;  ; virtual void SetDepth (Float_t d);  Set depth coordinate for the element. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnRefProjectable (TEveProjectable *assumed_parent, bool notifyParent=true);  Remove reference to projectable. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEvePointSet; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPointSet3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPolyMarker3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with 3-d polymarkers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetProjected.html:35893,inherit,inherited,35893,doc/master/classTEvePointSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetProjected.html,4,['inherit'],['inherited']
Modifiability,"veProjected *p);  ; virtual void AddProjectedsToSet (std::set< REveElement * > &set);  Add the projected elements to the set, dyn-casting them to REveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; virtual void ClearProjectedList ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (REveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; ProjList_t & RefProjecteds ();  ; virtual void RemoveProjected (REveProjected *p);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual TClass * IsA () const;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html:15211,inherit,inherited,15211,doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,1,['inherit'],['inherited']
Modifiability,"vector of source spectrum, its length should be size except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR transform. These need 2*size length to supply real and imaginary coefficients.; destVector-pointer to the vector of dest data, its length should be size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These need 2*size length to store real and imaginary coefficients. Transform methods; Goal: to analyse experimental data using orthogonal transforms. orthogonal transforms can be successfully used for the processing of nuclear spectra (not only); they can be used to remove high frequency noise, to increase signal-to-background ratio as well as to enhance low intensity components [1], to carry out e.g. Fourier analysis etc.; we have implemented the function for the calculation of the commonly used orthogonal transforms as well as functions for the filtration and enhancement of experimental data. References:; [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [2] Morhac; M., Matouoek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; [3] Morhac; M., Matouoek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac; M., Matouoek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. Example - script Transform.c:. Fig. 1 Original gamma-ray spectrum. Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; Script:; Example to illustrate Transform function (class TSpectrumTransform). To execute this example, do:; root > .x Transform.C; #include <TSpectrum>; #include <TSpectrumTransform>; void Transform() {; Int_t i;; Double_t nbins = 4096;; Double_t xmin = 0;; Double_t xmax = (Double_t)nbins;; Double_t * source = new Double_t[nbins];; Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:30586,enhance,enhancement,30586,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,"vector.C Write and read STL vectors in a tree ;  JetEvent.cxx;  JetEvent.h;  jets.CUsage of a Tree using the JetEvent class ;  ntuple1.C Simple tree analysis ;  parallelcoord.C Script illustrating the use of the TParalleCoord class ;  parallelcoordtrans.C Use of transparency with ||-Coord ;  printSizes.C This macro can be used to get aggregate information on the size take on disk or in memory by the various branches in a TTree ;  run_h1analysis.C Macro driving the analysis can specify file name and type ;  spider.C TSpider example ;  staff.C Create a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct - without a dictionary, by creating the branches for builtin types (int, float, double) and arrays explicitly ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unfold;  testUnfold1.C Test program for the classes TUnfold and related ;  testUnfold2.C Test program as an example for a user specific regularisation scheme ;  testUnfold3.C Simple Test program for the class TUnfoldDensity ;  testUnfold4.C Test program for the class TUnfoldSys ;  testUnfold5a.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5b.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5c.C Test program for the clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/files.html:163033,variab,variables,163033,doc/v614/files.html,https://root.cern,https://root.cern/doc/v614/files.html,1,['variab'],['variables']
Modifiability,"vector< ShapeDescr > fShapes! shapes with created descriptionsDefinition RGeomData.hxx:253; ROOT::RGeomDescription::GetSearchstd::string GetSearch() constDefinition RGeomData.hxx:383; ROOT::RGeomDescription::fJsonCompint fJsonComp! default JSON compressionDefinition RGeomData.hxx:261; ROOT::RGeomDescription::ChangeNodeVisibilitybool ChangeNodeVisibility(const std::vector< std::string > &path, bool on)Change visibility for specified element Returns true if changes was performed.Definition RGeomData.cxx:1850; ROOT::RGeomDescription::SetMutexvoid SetMutex(TVirtualMutex *mutex)Set mutex, it must be recursive one.Definition RGeomData.hxx:312; ROOT::RGeomDescription::RGeomDescriptionRGeomDescription()=default; ROOT::RGeomDescription::fSearchstd::string fSearch! search string in hierarchyDefinition RGeomData.hxx:255; ROOT::RGeomDescription::fSearchJsonstd::string fSearchJson! drawing json for searchDefinition RGeomData.hxx:256; ROOT::RGeomDescription::SavePrimitivevoid SavePrimitive(std::ostream &fs, const std::string &name)Save geometry configuration as C++ macro.Definition RGeomData.cxx:2143; ROOT::RGeomDescription::fHighlightedStackstd::vector< int > fHighlightedStack! highlighted element by stackDefinition RGeomData.hxx:249; ROOT::RGeomDescription::ClearAllPhysVisibilitybool ClearAllPhysVisibility()Reset all custom visibility settings.Definition RGeomData.cxx:2089; ROOT::RGeomDescription::MakeDrawingJsonstd::string MakeDrawingJson(RGeomDrawing &drawing, bool has_shapes=false)Produce JSON for the drawing If TGeoShape appears in the drawing, one has to keep typeinfo But in thi...Definition RGeomData.cxx:1826; ROOT::RGeomDescription::fActualLevelint fActualLevel! level can be reduced when selecting nodesDefinition RGeomData.hxx:259; ROOT::RGeomDescription::GetVolumeTGeoVolume * GetVolume(int nodeid)Get volume for specified nodeid If specific volume was configured, it will be returned for nodeid==0.Definition RGeomData.cxx:583; ROOT::RGeomDescription::SetActiveItembool Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RGeomData_8hxx_source.html:27755,config,configuration,27755,doc/v632/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RGeomData_8hxx_source.html,1,['config'],['configuration']
Modifiability,"vector< ShapeDescr > fShapes! shapes with created descriptionsDefinition RGeomData.hxx:253; ROOT::RGeomDescription::GetSearchstd::string GetSearch() constDefinition RGeomData.hxx:385; ROOT::RGeomDescription::fJsonCompint fJsonComp! default JSON compressionDefinition RGeomData.hxx:261; ROOT::RGeomDescription::ChangeNodeVisibilitybool ChangeNodeVisibility(const std::vector< std::string > &path, bool on)Change visibility for specified element Returns true if changes was performed.Definition RGeomData.cxx:1850; ROOT::RGeomDescription::SetMutexvoid SetMutex(TVirtualMutex *mutex)Set mutex, it must be recursive one.Definition RGeomData.hxx:312; ROOT::RGeomDescription::RGeomDescriptionRGeomDescription()=default; ROOT::RGeomDescription::fSearchstd::string fSearch! search string in hierarchyDefinition RGeomData.hxx:255; ROOT::RGeomDescription::fSearchJsonstd::string fSearchJson! drawing json for searchDefinition RGeomData.hxx:256; ROOT::RGeomDescription::SavePrimitivevoid SavePrimitive(std::ostream &fs, const std::string &name)Save geometry configuration as C++ macro.Definition RGeomData.cxx:2143; ROOT::RGeomDescription::fHighlightedStackstd::vector< int > fHighlightedStack! highlighted element by stackDefinition RGeomData.hxx:249; ROOT::RGeomDescription::ClearAllPhysVisibilitybool ClearAllPhysVisibility()Reset all custom visibility settings.Definition RGeomData.cxx:2089; ROOT::RGeomDescription::MakeDrawingJsonstd::string MakeDrawingJson(RGeomDrawing &drawing, bool has_shapes=false)Produce JSON for the drawing If TGeoShape appears in the drawing, one has to keep typeinfo But in thi...Definition RGeomData.cxx:1826; ROOT::RGeomDescription::fActualLevelint fActualLevel! level can be reduced when selecting nodesDefinition RGeomData.hxx:259; ROOT::RGeomDescription::GetVolumeTGeoVolume * GetVolume(int nodeid)Get volume for specified nodeid If specific volume was configured, it will be returned for nodeid==0.Definition RGeomData.cxx:583; ROOT::RGeomDescription::SetActiveItembool Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:28006,config,configuration,28006,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,1,['config'],['configuration']
Modifiability,"vector<Double_t> >*_weights!; vector<std::vector<Double_t> >_weights0; vector<std::vector<Double_t> >_weights1; Double_t_widthFactor; vector<Double_t>_x; vector<Double_t>_x0; vector<Double_t>_x1; vector<Double_t>_x2; vector<Double_t>_xDatHi; vector<Double_t>_xDatHi3s; vector<Double_t>_xDatLo; vector<Double_t>_xDatLo3s; vector<Double_t>_xVarHi; vector<Double_t>_xVarHiM3s; vector<Double_t>_xVarHiP3s; vector<Double_t>_xVarLo; vector<Double_t>_xVarLoM3s; vector<Double_t>_xVarLoP3s; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, TString options = ""a"", Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; from dataset 'data'. Options can be. 'a' = Use adaptive kernels (width varies with local event density); 'm' = Mirror data points over observable boundaries. Improves modeling; behavior at edges for distributions that are not close to zero; at edge; 'd' = Debug flag; 'v' = Verbose flag. The parameter rho (default = 1) provides an overall scale factor that can; be applied to the bandwith calculated for each kernel. The nSigma parameter; determines the size of the box that is used to search for contributing kernels; around a given point in observable space. The nSigma parameters is used; in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; the calculation of adaptive keys p.d.f.s. The optional weight arguments allows to specify an observable or function; expression in observables that specifies the weight of each event. RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, const TVectorD& rho, TString options = ""a"", Double_t nSigma = 3, Bool_t rotate = kTRUE); Constructor. RooNDKeysPdf(const char* name, const char* title,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNDKeysPdf.html:47085,adapt,adaptive,47085,root/html534/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html534/RooNDKeysPdf.html,1,['adapt'],['adaptive']
Modifiability,"vector<TEveCaloData::vCellId_t*>fCellLists; vector<TEveCaloData::vCellId_t*>fCellListsHighlighted; vector<TEveCaloData::vCellId_t*>fCellListsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*TEveCaloViz::fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloViz::fEndCapPosend cap z coordinate in cm; Double_tTEveCaloViz::fEtaMax; Double_tTEveCaloViz::fEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Float_tfMaxESumBin; Float_tfMaxEtSumBin; Float_tTEveCaloViz::fMaxTowerHbounding box z dimesion; Float_tTEveCaloViz::fMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*TEveCaloViz::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tTEveCaloViz::fPhi; Double_tTEveCaloViz::fPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCalo2D.html:22088,variab,variable,22088,root/html528/TEveCalo2D.html,https://root.cern,https://root.cern/root/html528/TEveCalo2D.html,3,['variab'],['variable']
Modifiability,"vector<THit>, vector<THit*>, TClonesArray(TObjHit) not split TClonesArray(TObjHit) split.; The next graphs show the two columns on the right which represent the split and non-split TClonesArray, are significantly lower than the vectors. The most significant difference is in reading a file without compression.; The file size with compression, write times with and without compression and the read times with and without compression all favor the TClonesArray.; 12.23 Impact of Compression on I/O; This benchmark illustrates the pros and cons of the compression option. We recommend using compression when the time spent in I/O is small compared to the total processing time. In this case, if the I/O operation is increased by a factor of 5 it is still a small percentage of the total time and it may very well save a factor of 10 on disk space. On the other hand if the time spend on I/O is large, compression may slow down the program’s performance. The standard test program $ROOTSYS/test/Event was used in various configurations with 400 events. The data file contains a TTree. The program was invoked with:; Event 400 comp split. comp = 0 means: no compression at all.; comp = 1 means: compress everything if split = 0.; comp = 1 means: compress only the tree branches with integers if split = 1.; comp = 2 means: compress everything if split=1.; split = 0 : the full event is serialized into one single buffer.; split = 1 : the event is split into branches. One branch for each data member of the Event class. The list of tracks (a TClonesArray) has the data members of the Track class also split into individual buffers. These tests were run on Pentium III CPU with 650 MHz. Event Parameters; File Size; Total Time to Write (MB/sec); Effective Time to Write (MB/sec); Total Time to Read All (MB/sec); Total Time to Read Sample (MB/sec). Comp = 0; Split = 1; 19.75 MB; 6.84 s.(2.8 MB/s); 3.56 s.(5.4 MB/s); 0.79s.(24.2 MB/s); 0.79 s.(24.2 MB/s). Comp = 1; Split = 1; 17.73 MB; 6.44 s.(3.0 MB/s)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:648250,config,configurations,648250,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['config'],['configurations']
Modifiability,"vector<pair<double,const TMVA::Event*> >::iterator, vector<pair<double,const TMVA::Event*> >::iterator, UInt_t); TMVA::BinarySearchTreeNode*Search(TMVA::Event*, TMVA::Node*) const; Double_tSearchVolume(TMVA::Node*, TMVA::Volume*, Int_t, vector<const TMVA::BinarySearchTreeNode*>* events). Data Members; protected:. UInt_tTMVA::BinaryTree::fDepthmaximal depth in tree reached; UInt_tTMVA::BinaryTree::fNNodestotal number of nodes in the tree (counted); TMVA::Node*TMVA::BinaryTree::fRootthe root node of the tree. private:. Bool_tfCanNormalizethe tree can be normalised; UInt_tfCurrentDepthinternal variable, counting the depth of the tree during insertion; vector<Float_t>fMax[2]RMS for signal and background for each variable; vector<Float_t>fMeans[2]mean for signal and background for each variable; vector<Float_t>fMin[2]RMS for signal and background for each variable; Double_tfNEventsW[2]Number of events per class, taking into account event weights; vector<pair<Double_t,const TMVA::Event*> >fNormalizeTreeTable; UInt_tfPeriodperiode (number of event variables); vector<Float_t>fRMS[2]RMS for signal and background for each variable; Bool_tfStatisticsIsValidflag if last stat calculation is still valid, set to false if new node is insert; vector<Double_t>fSum[2]Sum for signal and background for each variable; Double_tfSumOfWeightsTotal number of events (weigthed) counted during filling; vector<Double_t>fSumSq[2]Squared Sum for signal and background for each variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinarySearchTree(const TMVA::BinarySearchTree& b); default constructor. BinarySearchTree(const TMVA::BinarySearchTree& b); copy constructor that creates a true copy, i.e. a completely independent tree. ~BinarySearchTree( void ); destructor. TMVA::BinarySearchTree* CreateFromXML(void* node, UInt_t tmva_Version_Code = 262656); re-create a new tree (decision tree or search tree) from XML. void Insert(const TMVA::Event* ); insert ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__BinarySearchTree.html:3799,variab,variable,3799,root/html602/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html602/TMVA__BinarySearchTree.html,8,['variab'],"['variable', 'variables']"
Modifiability,"vector<pair<double,const TMVA::Event*> >::iterator, vector<pair<double,const TMVA::Event*> >::iterator, UInt_t); TMVA::BinarySearchTreeNode*Search(TMVA::Event*, TMVA::Node*) const; Double_tSearchVolume(TMVA::Node*, TMVA::Volume*, Int_t, vector<const TMVA::BinarySearchTreeNode*>* events). Data Members; protected:. UInt_tTMVA::BinaryTree::fDepthmaximal depth in tree reached; UInt_tTMVA::BinaryTree::fNNodestotal number of nodes in the tree (counted); TMVA::Node*TMVA::BinaryTree::fRootthe root node of the tree. private:. Bool_tfCanNormalizethe tree can be normalised; UInt_tfCurrentDepthinternal variable, counting the depth of the tree during insertion; vector<Float_t>fMax[2]RMS for signal and background for each variable; vector<Float_t>fMeans[2]mean for signal and background for each variable; vector<Float_t>fMin[2]RMS for signal and background for each variable; Double_tfNEventsW[2]Number of events per class, taking into account event weights; vector<pair<Double_t,const TMVA::Event*> >fNormalizeTreeTable; UInt_tfPeriodperiode (number of event variables); vector<Float_t>fRMS[2]RMS for signal and background for each variable; Bool_tfStatisticsIsValidflag if last stat calculation is still valid, set to false if new node is insert; vector<Double_t>fSum[2]Sum for signal and background for each variable; Double_tfSumOfWeightsTotal number of events (weigthed) counted during filling; vector<Double_t>fSumSq[2]Squared Sum for signal and background for each variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinarySearchTree(const TMVA::BinarySearchTree& b); default constructor. BinarySearchTree(const TMVA::BinarySearchTree& b); copy constructor that creates a true copy, i.e. a completely independent tree. ~BinarySearchTree( void ); destructor. TMVA::BinarySearchTree* CreateFromXML(void* node, UInt_t tmva_Version_Code = 262657); re-create a new tree (decision tree or search tree) from XML. void Insert(const TMVA::Event* ); insert ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__BinarySearchTree.html:3807,variab,variable,3807,root/html604/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html604/TMVA__BinarySearchTree.html,8,['variab'],"['variable', 'variables']"
Modifiability,"ved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooSimSplitGenContext (const RooSimSplitGenContext &other);  ; RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs) override;  this method is empty because it is not used by this context ;  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  this method is empty because it is not used in this type of context ;  ; void initGenerator (const RooArgSet &theEvent) override;  Perform one-time initialization of generator context. ;  ;  Protected Member Functions inherited from RooAbsGenContext; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooArgSet _allVarsPdf;  All pdf variables. ;  ; double * _fracThresh;  fraction thresholds ;  ; std::vector< int > _gcIndex;  Index value corresponding to component. ;  ; std::vector< RooAbsGenContext * > _gcList;  List of component generator contexts. ;  ; RooAbsCategoryLValue * _idxCat;  Clone of index category. ;  ; TString _idxCatName;  Name of index category. ;  ; RooArgSet _idxCatSet;  Owner of index category components. ;  ; Int_t _numPdf;  Number of generated PDFs. ;  ; const RooSimultaneous * _pdf;  Original PDF. ;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _proto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimSplitGenContext.html:14811,variab,variables,14811,doc/master/classRooSimSplitGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimSplitGenContext.html,1,['variab'],['variables']
Modifiability,"ved, all nodes will be unlinked from root node and kept in memory. ;  ; void StoreStreamerElement (XMLNodePointer_t node, TStreamerElement *elem);  store data of single TStreamerElement in streamer node ;  ; Int_t SysClose (Int_t) final;  Interface to system close. All arguments like in POSIX close(). ;  ; Int_t SysOpen (const char *, Int_t, UInt_t) final;  Interface to system open. All arguments like in POSIX open(). ;  ; Int_t SysRead (Int_t, void *, Int_t) final;  Interface to system read. All arguments like in POSIX read(). ;  ; Long64_t SysSeek (Int_t, Long64_t, Int_t) final;  Interface to system lseek. ;  ; Int_t SysStat (Int_t, Long_t *, Long64_t *, Long_t *, Long_t *) final;  Return file stat information. ;  ; Int_t SysSync (Int_t) final;  Interface to system fsync. All arguments like in POSIX fsync(). ;  ; Int_t SysWrite (Int_t, const void *, Int_t) final;  Interface to system write. All arguments like in POSIX write(). ;  ;  Protected Member Functions inherited from TFile; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the relate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:34957,inherit,inherited,34957,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['inherit'],['inherited']
Modifiability,"ved. Bool_t saveSnapshot(const char* name, const RooArgSet& params, Bool_t importValues = kFALSE); Save snapshot of values and attributes (including ""Constant"") of parameters 'params'; If importValues is FALSE, the present values from the object in the workspace are; saved. If importValues is TRUE, the values of the objects passed in the 'params'; argument are saved. Bool_t loadSnapshot(const char* name); Load the values and attributes of the parameters in the snapshot saved with; the given name. RooAbsPdf* pdf(const char* name) const; Retrieve p.d.f (RooAbsPdf) with given name. A null pointer is returned if not found. RooAbsReal* function(const char* name) const; Retrieve function (RooAbsReal) with given name. Note that all RooAbsPdfs are also RooAbsReals. A null pointer is returned if not found. RooRealVar* var(const char* name) const; Retrieve real-valued variable (RooRealVar) with given name. A null pointer is returned if not found. RooCategory* cat(const char* name) const; Retrieve discrete variable (RooCategory) with given name. A null pointer is returned if not found. RooAbsCategory* catfunc(const char* name) const; Retrieve discrete function (RooAbsCategory) with given name. A null pointer is returned if not found. RooAbsArg* arg(const char* name) const; Return RooAbsArg with given name. A null pointer is returned if none is found. RooArgSet argSet(const char* nameList) const; Return set of RooAbsArgs matching to given list of names. RooAbsArg* fundArg(const char* name) const; Return fundamental (i.e. non-derived) RooAbsArg with given name. Fundamental types; are e.g. RooRealVar, RooCategory. A null pointer is returned if none is found. RooAbsData* data(const char* name) const; Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. RooArgSet allVars() const; Return set with all variable objects. RooArgSet allCats() const; Return set with all category objects. RooArgSet allFunctions() const; Return set with all functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooWorkspace.html:17956,variab,variable,17956,root/html526/RooWorkspace.html,https://root.cern,https://root.cern/root/html526/RooWorkspace.html,4,['variab'],['variable']
Modifiability,"vel, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Rcpp::Function * f;  . Friends; TRFunctionImport Rcpp::as (SEXP);  ; SEXP Rcpp::wrap (const TRFunctionImport &f);  ; class TRInterface;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRFunctionImport.h>. Inheritance diagram for ROOT::R::TRFunctionImport:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRFunctionImport() [1/6]. ROOT::R::TRFunctionImport::TRFunctionImport ; (; const Rcpp::Function & ; fun). inlineprotected . TRFunctionImport constructor for Rcpp::DataFrame. ; Parameters. funraw function object from Rcpp . Definition at line 126 of file TRFunctionImport.h. ◆ TRFunctionImport() [2/6]. TRFunctionImport::TRFunctionImport ; (; const TString & ; name). TRFunctionImport constructor. ; Parameters. namename of function from R . Definition at line 31 of file TRFunctionImport.cxx. ◆ TRFunctionImport() [3/6]. TRFunctionImport::TRFunctionImport ; (; const TString & ; name, . const TString & ; ns . ). TRFunctionImport constructor. ; Parameters. namename of function from R ; nsnamespace of function from R . Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRFunctionImport.html:15035,inherit,inherited,15035,doc/master/classROOT_1_1R_1_1TRFunctionImport.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRFunctionImport.html,1,['inherit'],['inherited']
Modifiability,"vel;  Compression level. ;  ; void * fLocal;  Extra file header data. ;  ; UInt_t fLocalLen;  Length of extra file header data. ;  ; UInt_t fMethod;  Compression type. ;  . Friends; class TZIPFile;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TArchiveMember; TString fComment;  Comment field. ;  ; Long64_t fCsize;  Compressed size. ;  ; Bool_t fDirectory;  Flag indicating this is a directory. ;  ; Long64_t fDsize;  Decompressed size. ;  ; Long64_t fFilePosition;  Byte position in archive where member data starts. ;  ; TDatime fModTime;  Modification time. ;  ; TString fName;  Name of member. ;  ; Long64_t fPosition;  Byte position in archive. ;  . #include <TZIPFile.h>. Inheritance diagram for TZIPMember:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TZIPMember() [1/3]. TZIPMember::TZIPMember ; (; ). Default ctor. ; Definition at line 569 of file TZIPFile.cxx. ◆ TZIPMember() [2/3]. TZIPMember::TZIPMember ; (; const char * ; name). Cr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTZIPMember.html:11538,inherit,inherited,11538,doc/master/classTZIPMember.html,https://root.cern,https://root.cern/doc/master/classTZIPMember.html,2,['inherit'],['inherited']
Modifiability,"vely ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fEditPathMarks;  ; Bool_t fFitCluster2Ds;  ; Bool_t fFitDaughters;  ; Bool_t fFitDecay;  ; Bool_t fFitLineSegments;  ; Bool_t fFitReferences;  ; TMarker fFVAtt;  ; Helix_t fH;  ; std::vector< TEveVector4D > fLastPoints;  ; TEveMagField * fMagFieldObj;  ; Double_t fMaxOrbs;  ; Double_t fMaxR;  ; Double_t fMaxZ;  ; Int_t fNMax;  ; Bool_t fOwnMagFiledObj;  ; TMarker fPMAtt;  ; std::vector< TEveVector4D > fPoints;  ; UChar_t fProjTrackBreaking;  ; TMarker fPTBAtt;  ; Bool_t fRnrCluster2Ds;  ; Bool_t fRnrDaughters;  ; Bool_t fRnrDecay;  ; Bool_t fRnrFV;  ; Bool_t fRnrPTBMarkers;  ; Bool_t fRnrReferences;  ; EStepper_e fStepper;  ; TEveVectorD fV;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackPropagator.html:40718,inherit,inherited,40718,doc/master/classTEveTrackPropagator.html,https://root.cern,https://root.cern/doc/master/classTEveTrackPropagator.html,2,['inherit'],['inherited']
Modifiability,"vely. ; [in]maxptsMaximum number of function evaluations to be allowed. maxpts >= 2^n +2*n*(n+1) +1 if maxpts<minpts, maxpts is set to 10*minpts ; [in]epsrelSpecified relative accuracy. ; [in]epsabsSpecified absolute accuracy. The integration algorithm will attempt to reach either the relative or the absolute accuracy. In case the maximum function called is reached the algorithm will stop earlier without having reached the desired accuracy; [out]relerrContains, on exit, an estimation of the relative accuracy of the result. ; [out]nfnevlnumber of function evaluations performed. ; [out]ifail0 Normal exit. At least minpts and at most maxpts calls to the function were performed.; 1 maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the specified value of maxpts.; 3 n<2 or n>15 . Method:; The default method used is the Genz-Mallik adaptive multidimensional algorithm using the class ROOT::Math::AdaptiveIntegratorMultiDim (see the reference documentation of the class); Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator() to different integrators. Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class Possible methods are : Vegas, Miser or Plain IN case of MC integration the accuracy is determined by the number of function calls, one should be careful not to use a too large value of maxpts ; Definition at line 2851 of file TF1.cxx. ◆ IntegralMultiple() [3/3]. virtual Double_t TF1::IntegralMultiple ; (; Int_t ; n, . const Double_t * ; a, . const Double_t * ; b, . Int_t ; , . Int_t ; maxpts, . Double_t ; epsrel, . Double_t & ; relerr, . Int_t & ; nfnevl, . Int_t & ; ifail . ). inlinevirtual . Definition at line 616 of file TF1.h. ◆ IntegralOneDim(). Double_t TF1::IntegralOneDim ; (; Double_t ; a, . Double_t ; b, . Double_t ; epsrel, . Double_t ; epsabs, . Double_t & ; error . ). virtual . Return Integral of function between a and b using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:100375,adapt,adaptive,100375,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['adapt'],['adaptive']
Modifiability,"ven Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void Browse(TBrowser* b); Browse the TMultiDimFit object in the TBrowser. void Clear(Option_t* option = """"); Clear internal structures and variables. Double_t Eval(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalError(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization error at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalControl(const Int_t* powers) const; PRIVATE METHOD:; Calculate the control parameter from the passed powers. Double_t EvalFactor(Int_t p, Double_t x) const; PRIVATE METHOD:; Evaluate function with power p at variable value x. void FindParameterization(Option_t* option = """"); Find the parameterization. Options:; None so far. For detailed description of what this entails, please refer to the; class description. void Fit(Option_t* option = """"); Try to fit the found parameterisation to the test sample. Options; M use Minuit to improve coefficients. Also, refer to; class description. TMultiDimFit* Instance(); Return the static instance. void MakeCandidates(); PRIVATE METHOD:; Create list of candidate functions for the parameterisation. See; also; class description. Double_t MakeChi2(const Double_t* coeff = 0); Calculate Chi square over either the test sample. The optional; argument coeff is a vector of coefficients to use in the; evaluation of the parameterisation. If coeff == 0, then the found; coefficients is used.; Used my MINUIT for fit (see TMultDimFit::Fit). void MakeCode(const char* functionName = ""MDF"", Option_t* option = """"); Generate the file <filename> with .C appended if argument doesn't; end in .cxx or .C. The contains the implementatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:27384,parameteriz,parameterization,27384,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,6,['parameteriz'],['parameterization']
Modifiability,"ven a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrices elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html:7806,variab,variables,7806,root/html526/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html,2,['variab'],['variables']
Modifiability,"ven a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:8132,variab,variables,8132,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,3,['variab'],['variables']
Modifiability,"ven axis. Supported axes are: X, Y, Z, Rxy, Phi, Rxyz. A given shape cannot be divided however on any axis. The general rule is that that divisions are possible on whatever axis that produces still known shapes as slices. The division of shapes are performed by the call TGeoShape::Divide(), but this operation can be done only via TGeoVolume::Divide() method. In other words, the algorithm for dividing a specific shape is known by the shape object, but is always invoked in a generic way from the volume level. Details on how to do that can be found in the paragraph ‘Dividing volumes’. One can see how all division options are interpreted and which their result inside specific shape classes is.; 18.3.7 Parametric Shapes; Shapes generally have a set of parameters that is well defined at build time. In fact, when the final geometrical hierarchy is assembled and the geometry is closed, all constituent shapes MUST**have well defined and valid parameters. In order to ease-up geometry creation, some parameterizations are however allowed.; For instance let’s suppose that we need to define several volumes having exactly the same properties but different sizes. A way to do this would be to create as many different volumes and shapes. The modeller allows however the definition of a single volume having undefined shape parameters.; TGeoManager::Volume(const char *name,const char *shape,Int_t nmed);. name: the name of the newly created volume;; shape:the type of the associated shape. This has to contain the case-insensitive first 4 letters of the corresponding class name (e.g. “tubs” will match TGeoTubeSeg, “bbox” will match TGeoBBox); nmed: the medium number. This will create a special volume that will not be directly used in the geometry, but whenever positioned will require a list of actual parameters for the current shape that will be created in this process. Such volumes having shape parameters known only when used have to be positioned only with TGeoManager::Node() method (see ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:926049,parameteriz,parameterizations,926049,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['parameteriz'],['parameterizations']
Modifiability,"ven dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateRooFit::OwningPtr< RooDataSet > generate(const RooArgSet &whatVars, Int_t nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={})See RooAbsPdf::generate(const RooArgSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,...Definition RooAbsPdf.h:57; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; RooWorkspace::Printvoid Print(Option_t *opts=nullptr) const overridePrint contents of the workspace.Definition RooWorkspace.cxx:2095; RooWorkspace::pdfRooAbsPdf * pdf(RooStringView name) constRetrieve p.d.f (RooAbsPdf) with given name. A null pointer is returned if not found.Definition RooWorkspace.cxx:1214; RooWorkspace::varRooRealVar * var(RooStringView name) constRetrieve real-valued variable (RooRealVar) with given name. A null pointer is returned if not found.Definition RooWorkspace.cxx:1232; TAttAxis::SetTitl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf509__wsinteractive_8C.html:5424,variab,variable,5424,doc/master/rf509__wsinteractive_8C.html,https://root.cern,https://root.cern/doc/master/rf509__wsinteractive_8C.html,1,['variab'],['variable']
Modifiability,"vent ; (; Int_t ; entry, . Int_t ; px, . Int_t ; py . ). overridevirtual . Execute the corresponding entry. ; Reimplemented from TObject.; Definition at line 182 of file TParallelCoordVar.cxx. ◆ GetBarHisto(). bool TParallelCoordVar::GetBarHisto ; (; ). inline . Definition at line 66 of file TParallelCoordVar.h. ◆ GetBoxPlot(). bool TParallelCoordVar::GetBoxPlot ; (; ). inline . Definition at line 67 of file TParallelCoordVar.h. ◆ GetCurrentAverage(). Double_t TParallelCoordVar::GetCurrentAverage ; (; ); const. inline . Definition at line 74 of file TParallelCoordVar.h. ◆ GetCurrentMax(). Double_t TParallelCoordVar::GetCurrentMax ; (; ); const. inline . Definition at line 73 of file TParallelCoordVar.h. ◆ GetCurrentMin(). Double_t TParallelCoordVar::GetCurrentMin ; (; ); const. inline . Definition at line 72 of file TParallelCoordVar.h. ◆ GetEntryWeight(). Int_t TParallelCoordVar::GetEntryWeight ; (; Long64_t ; evtidx). Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ; Definition at line 346 of file TParallelCoordVar.cxx. ◆ GetEntryXY(). void TParallelCoordVar::GetEntryXY ; (; Long64_t ; n, . Double_t & ; x, . Double_t & ; y . ). Get the position of the variable on the graph for the n'th entry. ; Definition at line 317 of file TParallelCoordVar.cxx. ◆ GetHistBinning(). Int_t TParallelCoordVar::GetHistBinning ; (; ); const. inline . Definition at line 71 of file TParallelCoordVar.h. ◆ GetHistHeight(). Double_t TParallelCoordVar::GetHistHeight ; (; ). inline . Definition at line 77 of file TParallelCoordVar.h. ◆ GetHistLineWidth(). Int_t TParallelCoordVar::GetHistLineWidth ; (; ). inline . Definition at line 78 of file TParallelCoordVar.h. ◆ GetHistogram(). TH1F * TParallelCoordVar::GetHistogram ; (; ). Create or recreate the histogram. ; Definition at line 355 of file TParallelCoordVar.cxx. ◆ GetId(). Int_t TParallelCoordVar::GetId ; (; ). inline . Definition at line 69 of file TPar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:23295,variab,variable,23295,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,1,['variab'],['variable']
Modifiability,"vent*>& el); set the training events randomly. void GetRndmSampleEvents(vector<const TMVA::Event*>& evevec, UInt_t nevents); draw a random subsample of the training events without replacement. void NormVisHists(vector<TH2F*>& hlist); normalize rule importance hists. if all weights are positive, the scale will be 1/maxweight; if minimum weight < 0, then the scale will be 1/max(maxweight,abs(minweight)). void FillCut(TH2F* h2, const TMVA::Rule* rule, Int_t vind); Fill cut. void FillLin(TH2F* h2, Int_t vind); fill lin. void FillCorr(TH2F* h2, const TMVA::Rule* rule, Int_t v1, Int_t v2); fill rule correlation between vx and vy, weighted with either the importance or the coefficient. void FillVisHistCut(const TMVA::Rule* rule, vector<TH2F*>& hlist); help routine to MakeVisHists() - fills for all variables. void FillVisHistCorr(const TMVA::Rule* rule, vector<TH2F*>& hlist); help routine to MakeVisHists() - fills for all correlation plots. Bool_t GetCorrVars(TString& title, TString& var1, TString& var2); get first and second variables from title. void MakeVisHists(); this will create histograms visualizing the rule ensemble. void MakeDebugHists(); this will create a histograms intended rather for debugging or for the curious user. RuleFit(const TMVA::MethodBase* rfbase); main constructor. void ReshuffleEvents(); { std::random_shuffle(fTrainingEventsRndm.begin(),fTrainingEventsRndm.end()); }. void SetModelLinear(); set usage of linear term. { fRuleEnsemble.SetModelLinear(); }. void SetModelRules(); set usage of rules. { fRuleEnsemble.SetModelRules(); }. void SetModelFull(); set usage of linear term. { fRuleEnsemble.SetModelFull(); }. void SetImportanceCut(Double_t minimp = 0); set minimum importance allowed. { fRuleEnsemble.SetImportanceCut(minimp); }. void SetRuleMinDist(Double_t d); set minimum rule distance - see RuleEnsemble. { fRuleEnsemble.SetRuleMinDist(d); }. void SetGDTau(Double_t t = 0.); set path related parameters. { fRuleFitParams.SetGDTau(t); }. void SetGDPathS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__RuleFit.html:6482,variab,variables,6482,root/html602/TMVA__RuleFit.html,https://root.cern,https://root.cern/root/html602/TMVA__RuleFit.html,2,['variab'],['variables']
Modifiability,"vent*>& el); set the training events randomly. void GetRndmSampleEvents(vector<const TMVA::Event*>& evevec, UInt_t nevents); draw a random subsample of the training events without replacement. void NormVisHists(vector<TH2F*>& hlist); normalize rule importance hists. if all weights are positive, the scale will be 1/maxweight; if minimum weight < 0, then the scale will be 1/max(maxweight,abs(minweight)). void FillCut(TH2F* h2, const TMVA::Rule* rule, Int_t vind); Fill cut. void FillLin(TH2F* h2, Int_t vind); fill lin. void FillCorr(TH2F* h2, const TMVA::Rule* rule, Int_t v1, Int_t v2); fill rule correlation between vx and vy, weighted with either the importance or the coefficient. void FillVisHistCut(const TMVA::Rule* rule, vector<TH2F*>& hlist); help routine to MakeVisHists() - fills for all variables. void FillVisHistCorr(const TMVA::Rule* rule, vector<TH2F*>& hlist); help routine to MakeVisHists() - fills for all correlation plots. Bool_t GetCorrVars(TString& title, TString& var1, TString& var2); get first and second variables from title. void MakeVisHists(); this will create histograms visualizing the rule ensemble. void MakeDebugHists(); this will create a histograms intended rather for debugging or for the curious user. RuleFit(const TMVA::MethodBase* rfbase); main constructor. void ReshuffleEvents(); { std::random_shuffle(fTrainingEventsRndm.begin(),fTrainingEventsRndm.end()); }. void SetModelLinear(); set usage of linear term. { fRuleEnsemble.SetModelLinear(); }. void SetModelRules(); set usage of rules. { fRuleEnsemble.SetModelRules(); }. void SetModelFull(); set usage of linear term. { fRuleEnsemble.SetModelFull(); }. void SetImportanceCut(Double_t minimp = 0); set minimum importance allowed. { fRuleEnsemble.SetImportanceCut(minimp); }. void SetRuleMinDist(Double_t d); set minimum rule distance - see RuleEnsemble. { fRuleEnsemble.SetRuleMinDist(d); }. void SetGDTau(Double_t t = 0.0); set path related parameters. { fRuleFitParams.SetGDTau(t); }. void SetGDPath",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__RuleFit.html:6364,variab,variables,6364,root/html528/TMVA__RuleFit.html,https://root.cern,https://root.cern/root/html528/TMVA__RuleFit.html,4,['variab'],['variables']
Modifiability,"vent; Bool_tfDropLogicals; TEveScene*fEventScene; TEveManager::TExceptionHandler*fExcHandler; Bool_tfFullRedraw; TMap*fGeometries; TMap*fGeometryAliases; TEveScene*fGlobalScene; TEveSelection*fHighlight; Bool_tfKeepEmptyCont; TEveGListTreeEditorFrame*fLTEFrame; TFolder*fMacroFolder; TEveElementList*fOrphanage; Int_tfRedrawDisabled; TTimerfRedrawTimer; Bool_tfResetCameras; TEveSceneList*fScenes; TEveSelection*fSelection; TExMap*fStampedElements; Bool_tfTimerActive; Bool_tfUseOrphanage; TEveViewerList*fViewers; TMap*fVizDB; Bool_tfVizDBReplace; Bool_tfVizDBUpdate; TEveWindowManager*fWindowManager. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveManager(UInt_t w, UInt_t h, Bool_t map_window = kTRUE, Option_t* opt = ""FI""); Constructor.; If map_window is true, the TEveBrowser window is mapped. Option string is first parsed for the following characters:; V - spawn a default GL viewer. The consumed characters are removed from the options and they; are passed to TEveBrowser for creation of additional plugins. Default options: ""FIV"" - file-browser, command-line, GL-viewer. ~TEveManager(); Destructor. void ClearOrphanage(); Clear the orphanage. TGWindow* GetMainWindow() const; Get the main window, i.e. EVE-browser. TEveViewer* GetDefaultViewer() const; Returns the default viewer - the first one in the fViewers list. TGLViewer* GetDefaultGLViewer() const; Get TGLViewer of the default TEveViewer. TEveGedEditor* GetEditor() const; Returns main object editor. TGStatusBar* GetStatusBar() const; Returns main window status bar. TCanvas* AddCanvasTab(const char* name); Add a new canvas tab. TEveViewer* SpawnNewViewer(const char* name, const char* title = """", Bool_t embed = kTRUE); Create a new GL viewer. TEveScene* SpawnNewScene(const char* name, const char* title = """"); Create a new scene. TMacro* GetMacro(const char* name) const; Find macro in fMacroFolder by name. void EditElement(TEveElement* element); Show element in default editor. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveManager.html:4927,plugin,plugins,4927,root/html534/TEveManager.html,https://root.cern,https://root.cern/root/html534/TEveManager.html,2,['plugin'],['plugins']
Modifiability,"vent;  start time of this run ;  ; TH1I * fProcPcktHist;  histogram of packets processed per slave ;  ; TH2D * fProcTimeHist;  histogram of latency due to packet requests ;  ; Int_t fSlaves;  total number of events to be processed ;  ; Long64_t fTotBytesRead;  total cpu time of all slaves ;  ; Double_t fTotCpuTime;  track bytes read of main file ;  ; Long64_t fTotEvents;  total bytes read on all slaves ;  ; TTree * fTrace;  ; TTimeStamp fTzero;  TTree with trace events. ;  . Static Private Attributes; static Long_t fgResMemMax = -1;  Max virtual memory used by this process. ;  ; static Long_t fgVirtMemMax = -1;  Saved pointer to the output list. ;  . Friends; class TProofMonSender;  . Additional Inherited Members;  Public Types inherited from TVirtualPerfStats; enum  EEventType { ;   kUnDefined; , kPacket; , kStart; , kStop; , ;   kFile; , kFileOpen; , kFileRead; , kRate; , ;   kNumEventType. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPerfStats.h>. Inheritance diagram for TPerfStats:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [leg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPerfStats.html:14026,inherit,inherited,14026,doc/master/classTPerfStats.html,https://root.cern,https://root.cern/doc/master/classTPerfStats.html,1,['inherit'],['inherited']
Modifiability,"ventDensity &);  Copy constructor. ;  ;  PDEFoamEventDensity (std::vector< Double_t > box);  User constructor. ;  ; virtual ~PDEFoamEventDensity ();  ; virtual Double_t Density (std::vector< Double_t > &Xarg, Double_t &event_density);  This function is needed during the foam buildup. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::PDEFoamDensityBase;  PDEFoamDensityBase ();  ;  PDEFoamDensityBase (const PDEFoamDensityBase &);  Copy constructor. ;  ;  PDEFoamDensityBase (std::vector< Double_t > box);  User constructor. ;  ; virtual ~PDEFoamDensityBase ();  destructor ;  ; void FillBinarySearchTree (const Event *ev);  This method inserts the given event 'ev' it into the binary search tree. ;  ; const std::vector< Double_t > & GetBox () const;  ; void SetBox (std::vector< Double_t > box);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamEventDensity.html:1649,inherit,inherited,1649,doc/master/classTMVA_1_1PDEFoamEventDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamEventDensity.html,1,['inherit'],['inherited']
Modifiability,"ventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; virtual void Terminate (Int_t status=0);  Terminate the application by call TSystem::Exit() unless application has been told to return from Run(), by a call to SetReturnFromRun(). ;  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication.html:5884,inherit,inherited,5884,doc/master/classTApplication.html,https://root.cern,https://root.cern/doc/master/classTApplication.html,1,['inherit'],['inherited']
Modifiability,"vents with negative event weight should be ignored in the training, or not. ; Definition at line 408 of file Event.cxx. ◆ SetIsTraining(). void TMVA::Event::SetIsTraining ; (; Bool_t ; b). static . when this static function is called, it sets the flag whether events with negative event weight should be ignored in the training, or not. ; Definition at line 399 of file Event.cxx. ◆ SetSpectator(). void TMVA::Event::SetSpectator ; (; UInt_t ; ivar, . Float_t ; value . ). set spectator value (dimension ivar) to value ; Definition at line 376 of file Event.cxx. ◆ SetSpectatorTypes(). void TMVA::Event::SetSpectatorTypes ; (; const std::vector< char > & ; types). inline . Definition at line 119 of file Event.h. ◆ SetTarget(). void TMVA::Event::SetTarget ; (; UInt_t ; itgt, . Float_t ; value . ). set the target value (dimension itgt) to value ; Definition at line 367 of file Event.cxx. ◆ SetVal(). void TMVA::Event::SetVal ; (; UInt_t ; ivar, . Float_t ; val . ). set variable ivar to val ; Definition at line 348 of file Event.cxx. ◆ SetVariableArrangement(). void TMVA::Event::SetVariableArrangement ; (; std::vector< UInt_t > *const ; m); const. set the variable arrangement ; Definition at line 191 of file Event.cxx. ◆ SetWeight(). void TMVA::Event::SetWeight ; (; Double_t ; w). inline . Definition at line 110 of file Event.h. ◆ Streamer(). virtual void TMVA::Event::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TMVA::Event::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 153 of file Event.h. Friends And Related Symbol Documentation. ◆ operator<<. std::ostream & operator<< ; (; std::ostream & ; os, . const Event & ; event . ). friend . Member Data Documentation. ◆ fBoostWeight. Double_t TMVA::Event::fBoostWeight. mutableprivate . internal weight to be set by boosting algorithm ; Definition at line 148 of file Event.h. ◆ fClass. UInt_t TMVA::Event:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Event.html:21507,variab,variable,21507,doc/master/classTMVA_1_1Event.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Event.html,1,['variab'],['variable']
Modifiability,"vents. ; This method is mainly useful when doing regression analysis with the MLP (i.e. not classification, but continuous truth values). The returned THStack contains all the TProfiles. It is drawn unless the option ""goff"" is specified. Options are passed to TProfile::Draw. ; Definition at line 431 of file TMLPAnalyzer.cxx. ◆ GatherInformations(). void TMLPAnalyzer::GatherInformations ; (; ). Collect information about what is useful in the network. ; This method has to be called first when analyzing a network. Fills the two analysis trees. ; Definition at line 170 of file TMLPAnalyzer.cxx. ◆ GetInputNeuronTitle(). const char * TMLPAnalyzer::GetInputNeuronTitle ; (; Int_t ; in). protected . Returns the name of any neuron from the input layer. ; Definition at line 128 of file TMLPAnalyzer.cxx. ◆ GetIOTree(). TTree * TMLPAnalyzer::GetIOTree ; (; ); const. inline . Definition at line 56 of file TMLPAnalyzer.h. ◆ GetLayers(). Int_t TMLPAnalyzer::GetLayers ; (; ). protected . Returns the number of layers. ; Definition at line 54 of file TMLPAnalyzer.cxx. ◆ GetNeuronFormula(). TString TMLPAnalyzer::GetNeuronFormula ; (; Int_t ; idx). protected . Returns the formula used as input for neuron (idx) in the first layer. ; Definition at line 102 of file TMLPAnalyzer.cxx. ◆ GetNeurons(). Int_t TMLPAnalyzer::GetNeurons ; (; Int_t ; layer). protected . Returns the number of neurons in given layer. ; Definition at line 63 of file TMLPAnalyzer.cxx. ◆ GetOutputNeuronTitle(). const char * TMLPAnalyzer::GetOutputNeuronTitle ; (; Int_t ; out). protected . Returns the name of any neuron from the output layer. ; Definition at line 137 of file TMLPAnalyzer.cxx. ◆ IsA(). TClass * TMLPAnalyzer::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 58 of file TMLPAnalyzer.h. ◆ Streamer(). void TMLPAnalyzer::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMLPAnalyzer.html:18041,layers,layers,18041,doc/master/classTMLPAnalyzer.html,https://root.cern,https://root.cern/doc/master/classTMLPAnalyzer.html,1,['layers'],['layers']
Modifiability,"ventsMax for MinMax and RMS volume range; NEventsMin <int> Minimum number of events for adaptive volume range; NEventsMax <int> Maximum number of events for adaptive volume range; MaxVIterations <int> Maximum number of iterations for adaptive volume range; InitialScale <float> Initial scale for adaptive volume range; GaussSigma <float> Width with respect to the volume size of Gaussian kernel estimator. void ProcessOptions(); process the options specified by the user. void Train( void ); this is a dummy training: the preparation work to do is the construction; of the binary tree as a pointer chain. It is easier to directly save the; trainingTree in the weight file, and to rebuild the binary tree in the; test phase from scratch. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); init the size of a volume element using a defined fraction of the; volume containing the entire events. const std::vector< Float_t >& GetRegressionValues(). void CalcAverages(); compute also average RMS values required for adaptive Gaussian. void CreateBinarySearchTree(TMVA::Types::ETreeType type); create binary search trees for signal and background. void SetVolumeElement( void ); defines volume dimensions. Double_t IGetVolumeContentForRoot(Double_t ); Interface to RootFinder. Double_t GetVolumeContentForRoot(Double_t ); count number of events in rescaled volume. void GetSample(const TMVA::Event& e, vector<const TMVA::BinarySearchTreeNode*,allocator<const TMVA::BinarySearchTreeNode*> >& events, TMVA::Volume* volume). Double_t CRScalc(const TMVA::Event& ). void RRScalc(const TMVA::Event& , vector<Float_t>* count). Double_t CKernelEstimate(const TMVA::Event& , vector<const TMVA::BinarySearchTreeNode*,allocator<const TMVA::BinarySearchTreeNode*> >& , TMVA::Volume& ); normalization factors so we can work with radius 1 hyperspheres. void RKernelEstimate(const TMVA::Event& , vector<const TMVA::BinarySearchTreeNode*,allocator<const TMVA::BinarySearchTreeNode*> >& , TMVA::Volume& , vecto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodPDERS.html:21995,adapt,adaptive,21995,root/html528/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodPDERS.html,4,['adapt'],['adaptive']
Modifiability,"ventsMax for MinMax and RMS volume range; NEventsMin <int> Minimum number of events for adaptive volume range; NEventsMax <int> Maximum number of events for adaptive volume range; MaxVIterations <int> Maximum number of iterations for adaptive volume range; InitialScale <float> Initial scale for adaptive volume range; GaussSigma <float> Width with respect to the volume size of Gaussian kernel estimator. void ProcessOptions(); process the options specified by the user. void Train( void ); this is a dummy training: the preparation work to do is the construction; of the binary tree as a pointer chain. It is easier to directly save the; trainingTree in the weight file, and to rebuild the binary tree in the; test phase from scratch. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); init the size of a volume element using a defined fraction of the; volume containing the entire events. const std::vector< Float_t >& GetRegressionValues(). void CalcAverages(); compute also average RMS values required for adaptive Gaussian. void CreateBinarySearchTree(TMVA::Types::ETreeType type); create binary search trees for signal and background. void SetVolumeElement( void ); defines volume dimensions. Double_t IGetVolumeContentForRoot(Double_t ); Interface to RootFinder. Double_t GetVolumeContentForRoot(Double_t ); count number of events in rescaled volume. void GetSample(const TMVA::Event& e, vector<const TMVA::BinarySearchTreeNode*>& events, TMVA::Volume* volume). Double_t CRScalc(const TMVA::Event& ). void RRScalc(const TMVA::Event& , vector<Float_t>* count). Double_t CKernelEstimate(const TMVA::Event& , vector<const TMVA::BinarySearchTreeNode*>& , TMVA::Volume& ); normalization factors so we can work with radius 1 hyperspheres. void RKernelEstimate(const TMVA::Event& , vector<const TMVA::BinarySearchTreeNode*>& , TMVA::Volume& , vector<Float_t>* pdfSum); normalization factors so we can work with radius 1 hyperspheres. Double_t ApplyKernelFunction(Double_t normalized_dis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDERS.html:24362,adapt,adaptive,24362,root/html602/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDERS.html,2,['adapt'],['adaptive']
Modifiability,"ver redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions; std::unique_ptr< RooDataSet > generate (RooAbsGenContext &context, const RooArgSet &whatVars, const RooDataSet *prototype, double nEvents, bool verbose, bool randProtoOrder, bool resampleProto, bool skipInit=false, bool extended=false) const;  Internal method. ;  ; void logBatchComputationErrors (std::span< const double > &outputs, std::size_t begin) const;  Scan through outputs and fix+log all nans and negative values. ;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooArgSet &params, bool showConstants=false, const char *label="""", double xmin=0.65, double xmax=0.99, doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:77938,inherit,inherited,77938,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['inherit'],['inherited']
Modifiability,"ver to owner. ;  ; bool remove (const RooAbsCollection &list, bool silent=false, bool matchByNameOnly=false);  Remove each argument in the input list from our list using remove(const RooAbsArg&). ;  ; void removeAll () override;  Remove all argument inset using remove(const RooAbsArg&). ;  ; bool replace (const RooAbsArg &var1, const RooAbsArg &var2) override;  Replace object 'var1' in set with 'var2'. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsProxy;  RooAbsProxy ();  ;  RooAbsProxy (const char *name, const RooAbsProxy &other);  Copy constructor. ;  ; virtual ~RooAbsProxy ();  ; const RooArgSet * nset () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsProxy; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; bool changePointer (const RooAbsCollection &newServerSet, bool nameChange=false, bool factoryInitMode=false) override;  Process server change operation on owner. ;  ; bool changePointer (std::unordered_map< RooAbsArg *, RooAbsArg * > const &replacements) override;  ; void checkValid () const;  . Private Attributes; bool _defShapeServer = false;  ; bool _defValueServer = false;  ; RooAbsArg * _owner = nullptr;  . Additional Inherited Members;  Protected Member Functions inherited from RooAbsProxy; virtual void changeNormSet (const RooArgSet *newNormSet);  Destructor. ;  ;  Protected Attributes inherited from RooAbsProxy; RooArgSet * _nset = nullptr;  ! Normalization set to be used for evaluation of RooAbsPdf contents ;  . #include <RooCollectionProxy.h>. Inherita",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCollectionProxy.html:5913,inherit,inherited,5913,doc/master/classRooCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classRooCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,"ver, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetEps(Double_t e); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDerivative.html:22536,config,config,22536,root/html526/RooDerivative.html,https://root.cern,https://root.cern/root/html526/RooDerivative.html,1,['config'],['config']
Modifiability,"ver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; std::vector< Lbc_t > fLbc;  ! list of default entries ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFSComboBox.html:28704,inherit,inherited,28704,doc/master/classTGFSComboBox.html,https://root.cern,https://root.cern/doc/master/classTGFSComboBox.html,1,['inherit'],['inherited']
Modifiability,"ver, the address looks like:; <script type='module'>; import { httpRequest, draw } from 'http://your_root_server:8080/jsrootsys/modules/main.mjs';; let obj = await httpRequest('http://your_root_server:8080/Objects/hist/root.json','object');; await draw('drawing', obj, 'hist');; </script>; Loading main module is enough to get public JSROOT functionality - reading files and drawing objects. One also can load some special components directly like:; <script type='module'>; import { HierarchyPainter } from 'https://root.cern/js/latest/modules/gui.mjs';. let h = new HierarchyPainter(""example"", ""myTreeDiv"");. // configure 'simple' in provided <div> element; // one also can specify ""grid2x2"" or ""flex"" or ""tabs""; h.setDisplay(""simple"", ""myMainDiv"");. // open file and display element; await h.openRootFile('../../files/hsimple.root');; await h.display('hpxpy;1"",""colz');; </script>; After script loading one can configure different parameters in gStyle object. It is instance of the TStyle object and behaves like gStyle variable in ROOT. For instance, to change stat format using to display value in stats box:; import { gStyle } from 'https://root.cern/js/latest/modules/main.mjs';; gStyle.fStatFormat = '7.5g';; There is also settings object which contains all other JSROOT settings. For instance, one can configure custom format for different axes:; import { settings } from 'https://root.cern/js/latest/modules/main.mjs';; settings.XValuesFormat = '4.2g';; settings.YValuesFormat = '6.1f';; One also can use build/jsroot.js bundle to load all functionality at one and access it via JSROOT global handle:; <script src=""https://root.cern/js/latest/build/jsroot.js""></script>; <script>; // getting json string from somewhere; let obj = JSROOT.parse(root_json);; JSROOT.draw('plain', obj, 'colz');; </script>; 1.11.2 Use of JSON; It is strongly recommended to use JSON when communicating with ROOT application. THttpServer provides a JSON representation for every registered object with an url addr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:24354,variab,variable,24354,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,1,['variab'],['variable']
Modifiability,"ver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void ActivateItem (TGFrameElement *el) override;  Select/activate item. ;  ; void DeActivateItem (TGFrameElement *el) override;  Unselect/deactivate item. ;  ;  Protected Member Functions inherited from TGContainer; void DoRedraw () override;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVContainer.html:31482,inherit,inherited,31482,doc/master/classTGLVContainer.html,https://root.cern,https://root.cern/doc/master/classTGLVContainer.html,1,['inherit'],['inherited']
Modifiability,"ver; Double_t_padFactorScale our y-axis to _padFactor of our maximum contents.; RooAbsRealLValue*_plotVarCloneA clone of the variable we are plotting.; RooArgSet*_plotVarSetA list owning the cloned tree nodes of the plotVarClone; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooPlot(); Default constructor; coverity[UNINIT_CTOR]. RooPlot(Double_t xmin, Double_t xmax); Constructor of RooPlot with range [xmin,xmax]. RooPlot(Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax); Construct of a two-dimensioanl RooPlot with ranges [xmin,xmax] x [ymin,ymax]. RooPlot(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2); Construct a two-dimensional RooPlot with ranges and properties taken; from variables var1 and var2. RooPlot(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax); Construct a two-dimensional RooPlot with ranges and properties taken; from variables var1 and var2 but with an overriding range definition; of [xmin,xmax] x [ymin,ymax]. RooPlot(const char* name, const char* title, const RooAbsRealLValue& var, Double_t xmin, Double_t xmax, Int_t nBins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot(const RooAbsRealLValue& var, Double_t xmin, Double_t xmax, Int_t nBins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot* emptyClone(const char* name); Return empty clone of current RooPlot. void initialize(); Perform initialization that is common to all constructors. TString histName() const; Construct automatic name of internal TH1. ~RooPlot(); Destructor. void updateNormVars(const RooArgSet& vars); Install the given set of observables are reference normalization; variables for this fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooPlot.html:13473,variab,variables,13473,root/html528/RooPlot.html,https://root.cern,https://root.cern/root/html528/RooPlot.html,3,['variab'],['variables']
Modifiability,"ver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DestroyWindowRecursively (TEveWindow *window);  Destroy window's children and then the window itself. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TEveWindow * fCurrentWindow;  ; TEveWindow * fDefaultContainer;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowManager.html:34292,inherit,inherited,34292,doc/master/classTEveWindowManager.html,https://root.cern,https://root.cern/doc/master/classTEveWindowManager.html,1,['inherit'],['inherited']
Modifiability,"verFrame * fServerFrame;  ; TSessionFrame * fSessionFrame;  ; TGListTree * fSessionHierarchy;  ; TGListTreeItem * fSessionItem;  ; TGPopupMenu * fSessionMenu;  ; TList * fSessions;  ; time_t fStart;  ; TGStatusBar * fStatusBar;  ; TTimer * fTimer;  ; TGToolBar * fToolBar;  ; TGCanvas * fTreeView;  ; UserGroup_t * fUserGroup;  ; TGVerticalFrame * fV1;  ; TGVerticalFrame * fV2;  ; TEnv * fViewerEnv;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:33126,inherit,inherited,33126,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,1,['inherit'],['inherited']
Modifiability,"ver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileHandler.html:14900,inherit,inherited,14900,doc/master/classTFileHandler.html,https://root.cern,https://root.cern/doc/master/classTFileHandler.html,1,['inherit'],['inherited']
Modifiability,"ver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGListBox * fListBox;  ; TGLBEntry * fSelected;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGComboBoxPopup.html:25201,inherit,inherited,25201,doc/master/classTGComboBoxPopup.html,https://root.cern,https://root.cern/doc/master/classTGComboBoxPopup.html,2,['inherit'],['inherited']
Modifiability,"verage. ;  ; void SetAverageLineStyle (Style_t sty);  Set the LineStyle of the average. ;  ; void SetAverageLineWidth (Width_t wid);  Set the LineWidth of the average. ;  ; void SetDisplayAverage (bool disp);  Display or not the average. ;  ; void SetFillColor (Color_t col) override;  Set fill color. ;  ; void SetFillStyle (Style_t sty) override;  Set fill style. ;  ; void SetLineColor (Color_t col) override;  Set lin color. ;  ; void SetLineStyle (Style_t sty) override;  Set line style. ;  ; void SetLineWidth (Width_t wid) override;  Set line width. ;  ; void SetNdivRadial (Int_t div);  Set number of radial divisions. ;  ; void SetNx (UInt_t nx);  Set the X number of sub pads. ;  ; void SetNy (UInt_t ny);  Set the Y number of sub pads. ;  ; void SetSegmentDisplay (bool seg);  Set the segment display or not. ;  ; void SetSelectionExpression (const char *selexp);  Compile selection expression if there is one. ;  ; void SetShowRange (bool showrange);  ; void SetVariablesExpression (const char *varexp);  Compile the variables expression from the given string varexp. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SuperposeTo (TSpider *sp);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:5444,variab,variables,5444,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variables']
Modifiability,"verall means. void GetCov_WithinClass( void ); the matrix of covariance 'within class' reflects the dispersion of the; events relative to the center of gravity of their own class. void GetCov_BetweenClass( void ); the matrix of covariance 'between class' reflects the dispersion of the; events of a class relative to the global center of gravity of all the class; hence the separation between classes. void GetCov_Full( void ); compute full covariance matrix from sum of within and between matrices. void GetFisherCoeff( void ); Fisher = Sum { [coeff]*[variables] }. let Xs be the array of the mean values of variables for signal evts; let Xb be the array of the mean values of variables for backgd evts; let InvWith be the inverse matrix of the 'within class' correlation matrix. then the array of Fisher coefficients is; [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith. void GetDiscrimPower( void ); computation of discrimination power indicator for each variable; small values of ""fWith"" indicates little compactness of sig & of backgd; big values of ""fBetw"" indicates large separation between sig & backgd. we want signal & backgd classes as compact and separated as possible; the discriminating power is then defined as the ration ""fBetw/fWith"". const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void PrintCoefficients( void ); display Fisher coefficients and discriminating power for each variable; check maximum length of variable name. void ReadWeightsFromStream(istream& i); read Fisher coefficients from weight file. void AddWeightsXMLTo(void* parent) const; create XML description of Fisher classifier. void ReadWeightsFromXML(void* wghtnode); read Fisher coefficients from xml weight file. void MakeClassSpecific(ostream& , const TString& ) const; write Fisher-specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". EFisherMethod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodFisher.html:20510,variab,variable,20510,root/html528/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodFisher.html,4,['variab'],['variable']
Modifiability,"verall means. void GetCov_WithinClass( void ); the matrix of covariance 'within class' reflects the dispersion of the; events relative to the center of gravity of their own class. void GetCov_BetweenClass( void ); the matrix of covariance 'between class' reflects the dispersion of the; events of a class relative to the global center of gravity of all the class; hence the separation between classes. void GetCov_Full( void ); compute full covariance matrix from sum of within and between matrices. void GetFisherCoeff( void ); Fisher = Sum { [coeff]*[variables] }. let Xs be the array of the mean values of variables for signal evts; let Xb be the array of the mean values of variables for backgd evts; let InvWith be the inverse matrix of the 'within class' correlation matrix. then the array of Fisher coefficients is; [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith. void GetDiscrimPower( void ); computation of discrimination power indicator for each variable; small values of ""fWith"" indicates little compactness of sig & of backgd; big values of ""fBetw"" indicates large separation between sig & backgd. we want signal & backgd classes as compact and separated as possible; the discriminating power is then defined as the ration ""fBetw/fWith"". const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void PrintCoefficients( void ); display Fisher coefficients and discriminating power for each variable; check maximum length of variable name. void ReadWeightsFromStream(istream& i); read Fisher coefficients from weight file. void AddWeightsXMLTo(void* parent) const; create XML description of Fisher classifier. void ReadWeightsFromXML(void* wghtnode); read Fisher coefficients from xml weight file. void MakeClassSpecific(ostream& , const TString& ) const; write Fisher-specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodFisher(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodFisher.html:22429,variab,variable,22429,root/html602/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodFisher.html,2,['variab'],['variable']
Modifiability,"verboseClient;  ; bool _verboseServer;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:55936,inherit,inherited,55936,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['inherit'],['inherited']
Modifiability,"vergence of its training; : (at least 10k training cycles are required to achieve approximately; : competitive results).; : ; : ␛[1mOvertraining: ␛[0monly the TMlpANN performs an explicit separation of the; : full training sample into independent training and validation samples.; : We have found that in most high-energy physics applications the ; : available degrees of freedom (training events) are sufficient to ; : constrain the weights of the relatively simple architectures required; : to achieve good performance. Hence no overtraining should occur, and ; : the use of validation samples would only reduce the available training; : information. However, if the performance on the training sample is ; : found to be significantly better than the one found with the inde-; : pendent test sample, caution is needed. The results for these samples ; : are printed to standard output at the end of each training job.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : The hidden layer architecture for all ANNs is defined by the option; : ""HiddenLayers=N+1,N,..."", where here the first hidden layer has N+1; : neurons and the second N neurons (and so on), and where N is the number ; : of input variables. Excessive numbers of hidden layers should be avoided,; : in favour of more neurons in the first hidden layer.; : ; : The number of cycles should be above 500. As said, if the number of; : adjustable weights is small compared to the training sample size,; : using a large number of training samples should not lead to overtraining.; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; TFHandler_MLPBNN : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : myvar1: 0.089214 0.20183 [ -1.0000 1.0000 ]; : myvar2: -0.090751 0.29609 [ -1.0000 1.0000 ]; : var3: 0.059878 0.21436 [ -1.0000 1.0000 ]; : var4: 0.11587 0.24261 [ -1.0000 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:43708,config,configuration,43708,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['config'],['configuration']
Modifiability,"verride for class of which you would like to have different; icons for objects of the same class. UInt_t GetUniqueID() const; Return the unique object id. char * GetObjectInfo(Int_t px, Int_t py) const; Returns string containing info about the object at position (px,py).; This method is typically overridden by classes of which the objects; can report peculiarities for different positions.; Returned string will be re-used (lock in MT environment). const char * GetTitle() const; Returns title of object. This default method returns the class title; (i.e. description). Classes that give objects a title should override; this method. Bool_t HandleTimer(TTimer* timer); Execute action in response of a timer timing out. This method; must be overridden if an object has to react to timers. ULong_t Hash() const; Return hash value for this object. Bool_t InheritsFrom(const char* classname) const; Returns kTRUE if object inherits from class ""classname"". Bool_t InheritsFrom(const TClass* cl) const; Returns kTRUE if object inherits from TClass cl. void Inspect() const; Dump contents of this object in a graphics canvas.; Same action as Dump but in a graphical form.; In addition pointers to other objects can be followed. The following picture is the Inspect of a histogram object:. /*; ; */. Bool_t IsFolder() const; Returns kTRUE in case object contains browsable objects (like containers; or lists of other objects). Bool_t IsEqual(const TObject* obj) const; Default equal comparison (objects are equal if they have the same; address in memory). More complicated classes might want to override; this function. void ls(Option_t* option = """") const; The ls function lists the contents of a class on stdout. Ls output; is typically much less verbose then Dump(). Bool_t Notify(); This method must be overridden to handle object notifcation. void Paint(Option_t* option = """"); This method must be overridden if a class wants to paint itself.; The difference between Paint() and Draw() is that when a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TObject.html:10957,inherit,inherits,10957,root/html528/TObject.html,https://root.cern,https://root.cern/root/html528/TObject.html,6,['inherit'],['inherits']
Modifiability,"verride if minimizer supports them ) ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower) override;  set lower limit variable (override if minimizer supports them ) ;  ; bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper) override;  set upper limit variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableLimits (unsigned int ivar, double lower, double upper) override;  set the limits of an already existing variable ;  ; bool SetVariableLowerLimit (unsigned int ivar, double lower) override;  set the lower-limit of an already existing variable ;  ; bool SetVariableStepSize (unsigned int ivar, double step) override;  set the step size of an already existing variable ;  ; bool SetVariableUpperLimit (unsigned int ivar, double upper) override;  set the upper-limit of an already existing variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; bool SetVariableValues (const double *x) override;  set the values of all existing variables (array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is not found ;  ; std::string VariableName (unsigned int ivar) const override;  get name of variables (override if minimizer support storing of variable names) ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:4391,variab,variable,4391,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,2,['variab'],['variable']
Modifiability,"verride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigmaL; RooRealProxysigmaR; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooBifurGauss.html:39333,config,configuration,39333,root/html530/RooBifurGauss.html,https://root.cern,https://root.cern/root/html530/RooBifurGauss.html,2,['config'],['configuration']
Modifiability,"verride;  ; virtual Int_t numBins (const RooAbsBinning &binning) const;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Structure printing. ;  ; void randomize (const char *rangeName=nullptr) override;  Set a new value sampled from a uniform distribution over the fit range. ;  ; virtual void randomize (const RooAbsBinning &binning);  Set a new value sampled from a uniform distribution over the fit range. ;  ; void setBin (Int_t ibin, const char *rangeName=nullptr) override;  Set value to center of bin 'ibin' of binning 'rangeName' (or of default binning if no range is specified) ;  ; virtual void setBin (Int_t ibin, const RooAbsBinning &binning);  Set value to center of bin 'ibin' of binning 'binning'. ;  ; void setConstant (bool value=true);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; double volume (const char *rangeName) const override;  ; virtual double volume (const RooAbsBinning &binning) const;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:10985,inherit,inherited,10985,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,2,['inherit'],['inherited']
Modifiability,"verride;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html:2507,inherit,inherited,2507,doc/v632/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html,9,['inherit'],['inherited']
Modifiability,"verride;  Check if given value is valid. ;  ; virtual double jacobian () const;  ; Int_t numBins (const char *rangeName=nullptr) const override;  ; virtual Int_t numBins (const RooAbsBinning &binning) const;  ; void randomize (const char *rangeName=nullptr) override;  Set a new value sampled from a uniform distribution over the fit range. ;  ; virtual void randomize (const RooAbsBinning &binning);  Set a new value sampled from a uniform distribution over the fit range. ;  ; void setBin (Int_t ibin, const char *rangeName=nullptr) override;  Set value to center of bin 'ibin' of binning 'rangeName' (or of default binning if no range is specified) ;  ; virtual void setBin (Int_t ibin, const RooAbsBinning &binning);  Set value to center of bin 'ibin' of binning 'binning'. ;  ; void setConstant (bool value=true);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; double volume (const char *rangeName) const override;  ; virtual double volume (const RooAbsBinning &binning) const;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:12860,inherit,inherited,12860,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['inherit'],['inherited']
Modifiability,"verride;  Default Destructor. ;  ; int GetNumberPoints () const;  ; void GetWeightVectors (double *x, double *w) const;  Returns the arrays x and w containing the abscissa and weight of the Gauss-Legendre n-point quadrature formula. ;  ; int NEval () const override;  return number of function evaluations in calculating the integral This is equivalent to the number of points ;  ; ROOT::Math::IntegratorOneDimOptions Options () const override;  get the option used for the integration ;  ; void SetAbsTolerance (double) override;  This method is not implemented. ;  ; void SetNumberPoints (int num);  Set the number of points used in the calculation of the integral. ;  ; void SetOptions (const ROOT::Math::IntegratorOneDimOptions &opt) override;  set the options (should be re-implemented by derived classes -if more options than tolerance exist ;  ; void SetRelTolerance (double) override;  Set the desired relative Error. ;  ;  Public Member Functions inherited from ROOT::Math::GaussIntegrator;  GaussIntegrator (double absTol=-1, double relTol=-1);  Default Constructor. ;  ;  ~GaussIntegrator () override;  Destructor. ;  ; void AbsValue (bool flag);  Static function: set the fgAbsValue flag. ;  ; double Error () const override;  Return the estimate of the absolute Error of the last Integral calculation. ;  ; double Integral () override;  Returns Integral of function on an infinite interval. ;  ; double Integral (const std::vector< double > &pts) override;  This method is not implemented. ;  ; double Integral (double a, double b) override;  Returns Integral of function between a and b. ;  ; double IntegralCauchy (double a, double b, double c) override;  This method is not implemented. ;  ; double IntegralLow (double b) override;  Returns Integral of function on a lower semi-infinite interval. ;  ; double IntegralUp (double a) override;  Returns Integral of function on an upper semi-infinite interval. ;  ; double Result () const override;  Returns the result of the last Integral",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html:1762,inherit,inherited,1762,doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,1,['inherit'],['inherited']
Modifiability,"verride;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXTRU.html:6992,inherit,inherited,6992,doc/master/classTXTRU.html,https://root.cern,https://root.cern/doc/master/classTXTRU.html,1,['inherit'],['inherited']
Modifiability,"verride;  Number of dimension (parameters) . ;  ; virtual unsigned int NPoints () const;  return the number of data points used in evaluating the function ;  ; virtual void ResetNCalls ();  reset number of function calls ;  ; virtual void UpdateNCalls () const;  update number of calls ;  . Private Member Functions; virtual double DoDerivative (const double *x, unsigned int icoord) const;  ; virtual double DoEval (const double *x) const;  Evaluation of the function (required by interface) ;  . Private Attributes; ::ROOT::EExecutionPolicy fExecutionPolicy;  Execution policy. ;  ; std::vector< double > fGrad;  for derivatives ;  ; bool fIsExtended;  flag for indicating if likelihood is extended ;  ; unsigned int fNEffPoints;  number of effective points used in the fit ;  ; int fWeight;  flag to indicate if needs to evaluate using weight or weight squared (default weight = 0) ;  . Additional Inherited Members;  Static Public Member Functions inherited from ROOT::Math::BasicFitMethodFunction< DerivFunType >; static bool IsAGradFCN ();  Static function to indicate if a function is supporting gradient. ;  ;  Protected Types inherited from ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >; typedef BaseObjFunction::BaseFunction BaseFunction;  ; typedef ::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunction;  ; typedef ::ROOT::Math::IParametricGradFunctionMultiDimTempl< T > IGradModelFunction;  ; typedef ::ROOT::Math::IParamMultiFunctionTempl< T > IModelFunction;  ; typedef ModelFunType::BackendType T;  ;  Protected Member Functions inherited from ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >;  BasicFCN (const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func);  Constructor from data set and model function. ;  ; virtual ~BasicFCN ();  Destructor (no operations) ;  ; void SetData (const std::shared_ptr< DataType > &data);  Set the data pointer. ;  ; void SetModelFunction (const std::shared_ptr< IModelFunction ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html:4747,inherit,inherited,4747,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,1,['inherit'],['inherited']
Modifiability,"verride;  Paint a TPolyMarker3D. ;  ; void Print (Option_t *option="""") const override;  Print 3-D polymarker with its attributes on stdout. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream. ;  ; virtual void SetName (const char *name);  Change (i.e. ;  ; virtual Int_t SetNextPoint (Double_t x, Double_t y, Double_t z);  Set point following LastPoint to x, y, z. ;  ; void SetPoint (Int_t n, Double_t x, Double_t y, Double_t z);  Set point n to x, y, z. ;  ; virtual void SetPolyMarker (Int_t n, Double_t *p, Marker_t marker, Option_t *option="""");  Re-initialize polymarker with n points from p. ;  ; virtual void SetPolyMarker (Int_t n, Float_t *p, Marker_t marker, Option_t *option="""");  Re-initialize polymarker with n points from p. ;  ; virtual Int_t Size () const;  ; void Streamer (TBuffer &) override;  Stream a 3-D polymarker object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:24593,inherit,inherited,24593,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,8,['inherit'],['inherited']
Modifiability,"verride;  Paint a any kind of TGraph. ;  ; virtual void PaintHighlightPoint (TGraph *theGraph, Option_t *option);  Paint highlight point as TMarker object (open circle) ;  ; void PaintPolyLineHatches (TGraph *theGraph, Int_t n, const Double_t *x, const Double_t *y);  Paint a polyline with hatches on one side showing an exclusion zone. ;  ; void PaintScatter (TScatter *theScatter, Option_t *option) override;  Paint a scatter plot. ;  ; void PaintStats (TGraph *theGraph, TF1 *fit) override;  Paint the statistics box with the fit info. ;  ; void SetHighlight (TGraph *theGraph) override;  Set highlight (enable/disable) mode for theGraph. ;  ; void Smooth (TGraph *theGraph, Int_t npoints, Double_t *x, Double_t *y, Int_t drawtype);  Smooth a curve given by N points. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualGraphPainter;  TVirtualGraphPainter ();  ;  ~TVirtualGraphPainter () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter.html:30433,inherit,inherited,30433,doc/master/classTGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter.html,1,['inherit'],['inherited']
Modifiability,"verride;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0);  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void Resize (UInt_t w, UInt_t h);  Resize the window. ;  ; virtual void SetBackgroundColor (Pixel_t color);  set background color ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditable (Bool_t on=kTRUE);  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnmapWindow ();  unmap window ;  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWindow.html:4339,inherit,inherited,4339,doc/master/classTGWindow.html,https://root.cern,https://root.cern/doc/master/classTGWindow.html,1,['inherit'],['inherited']
Modifiability,"verride;  Read a 8 bit integer from std::istream s and store it into the branch buffer. ;  ; void SetAddress (void *addr=nullptr) override;  Set value buffer address. ;  ; virtual void SetMaximum (Char_t max);  ; virtual void SetMinimum (Char_t min);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual bool CanGenerateOffsetArray ();  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual TString GetFullName () const;  Return the full name (including the parent's branch names) of the leaf. ;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, Long64_t len);  If this branch is a branch count, return the set of collection size for the entry range requested start: first entry to read and return information about len: number of entries to read. ;  ; virtual Int_t GetLen () const;  Return the number of effective elements of this leaf, for the current entry. ;  ; virtual Int_t GetLenStatic () const;  Return the fixed length of this leaf. ;  ; virtual Int_t GetLenType () const;  ; virtual Int_t GetNdata () const;  ; virtual Int_t GetOffset () const;  ; template<typename T > ; T GetTypedValue (Int_t i=0) const;  ; virtual Long64_t GetValueLong64 (Int_t i=0) const;  ; virtual LongDou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafB.html:2729,variab,variable-sized,2729,doc/master/classTLeafB.html,https://root.cern,https://root.cern/doc/master/classTLeafB.html,2,['variab'],"['variable', 'variable-sized']"
Modifiability,"verride;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Int_t * fCpos;  position of sub names ;  ; TGLayoutHints * fItemLayout;  item layout hints ;  ; Int_t * fJmode;  alignment of sub names ;  ; TGLVEntry * fLastActive;  last active item ;  ; TGListView * fListView;  listview which contains this container ;  ; Bool_t fMultiSelect;  true = multiple file selection ;  ; EListViewMode fViewMode;  list view viewing mode ;  ;  Protected Attributes inherited from TGContainer; Bool_t fBdown;  ; TGCanvas * fCanvas;  pointer to canvas ;  ; Bool_t fDragging;  true if in dragging mode ;  ; TGRectangle fExposedRegion;  exposed area ;  ; TString fKeyInput;  keyboard input (buf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVContainer.html:31976,inherit,inherited,31976,doc/master/classTGLVContainer.html,https://root.cern,https://root.cern/doc/master/classTGLVContainer.html,3,['inherit'],['inherited']
Modifiability,"verride;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; const TGPicture * fApp_s;  big application icon ;  ; const TGPicture * fApp_t;  small application icon ;  ; Bool_t fCachePictures;  kTRUE use caching ;  ; TList * fCleanups;  list of pictures to cleanup ;  ; TString fDirectory;  current directory ;  ; Bool_t fDisplayStat;  kFALSE to interrupt display directory contents in case of many files inside ;  ; const TGPicture * fDoc_s;  big document icon ;  ; const TGPicture * fDoc_t;  small document icon ;  ; TRegexp * fFilter;  file filter ;  ; const TGPicture * fFolder_s;  big folder icon ;  ; const TGPicture * fFolder_t;  small folder icon ;  ; ULong_t fMtime;  di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileContainer.html:34341,inherit,inherited,34341,doc/master/classTGFileContainer.html,https://root.cern,https://root.cern/doc/master/classTGFileContainer.html,3,['inherit'],['inherited']
Modifiability,"verride;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static const TGGC & GetActiveGC ();  Return default graphics context in use. ;  ; static const TGGC & GetColorGC ();  Return graphics context for highlighted frame background. ;  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDrawGC ();  Return default graphics context in use. ;  ; static Pixel_t GetGrayPixel ();  Return gray draw color in use. ;  ; static const TGGC & GetHighlightGC ();  Return graphics context for highlighted frame background. ;  ; static const TGGC & GetLineGC ();  Return graphics context in use for line drawing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListTree.html:40431,inherit,inherited,40431,doc/master/classTGListTree.html,https://root.cern,https://root.cern/doc/master/classTGListTree.html,3,['inherit'],['inherited']
Modifiability,"verride;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static const TGGC & GetLineGC ();  Get graphics context for line drawing. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainer.html:30959,inherit,inherited,30959,doc/master/classTGContainer.html,https://root.cern,https://root.cern/doc/master/classTGContainer.html,3,['inherit'],['inherited']
Modifiability,"verride;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGContainer; static const TGGC & GetLineGC ();  Get graphics context for line drawing. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVContainer.html:34821,inherit,inherited,34821,doc/master/classTTVLVContainer.html,https://root.cern,https://root.cern/doc/master/classTTVLVContainer.html,3,['inherit'],['inherited']
Modifiability,"verride;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocketHandler.html:2377,inherit,inherited,2377,doc/master/classTSocketHandler.html,https://root.cern,https://root.cern/doc/master/classTSocketHandler.html,1,['inherit'],['inherited']
Modifiability,"verride;  Reset the camera to defaults - reframe the world volume established in Setup() in default state. ;  ; void SetFOV (Double_t fov);  ; void Setup (const TGLBoundingBox &box, Bool_t reset=kTRUE) override;  Setup camera limits suitable to view the world volume defined by 'box' and call Reset() to initialise camera. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t Truck (Double_t xDelta, Double_t yDelta);  Truck the camera - 'move camera parallel to film plane'. ;  ; Bool_t Truck (Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2) override;  Truck the camera - 'move camera parallel to film plane'. ;  ; virtual Bool_t Truck (Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2)=0;  ; Bool_t Zoom (Int_t delta, Bool_t mod1, Bool_t mod2) override;  Zoom the camera - 'adjust lens focal length, retaining camera position'. ;  ;  Public Member Functions inherited from TGLCamera;  TGLCamera ();  Default base camera constructor. ;  ;  TGLCamera (const TGLVector3 &hAxis, const TGLVector3 &vAxis);  Default base camera constructor. ;  ;  ~TGLCamera () override;  Base camera destructor. ;  ; Bool_t AdjustAndClampVal (Double_t &val, Double_t min, Double_t max, Int_t screenShift, Int_t screenShiftRange, Bool_t mod1, Bool_t mod2) const;  Adjust a passed REFERENCE value 'val', based on screenShift delta. ;  ; Double_t AdjustDelta (Double_t screenShift, Double_t deltaFactor, Bool_t mod1, Bool_t mod2) const;  Adjust a passed screen value and apply modifiers. ;  ; virtual Bool_t Dolly (Int_t delta, Bool_t mod1, Bool_t mod2);  Dolly the camera - 'move camera along eye line, retaining lens focal length'. ;  ; void DrawDebugAids () const;  Draw out some debugging aids for the camera: ;  ; TGLVector3 EyeDirection () const;  Extract the camera eye direction (vector), running from EyePoint() Camera must have valid frustum cache - call Apply() after last modification, before ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLPerspectiveCamera.html:2210,inherit,inherited,2210,doc/master/classTGLPerspectiveCamera.html,https://root.cern,https://root.cern/doc/master/classTGLPerspectiveCamera.html,1,['inherit'],['inherited']
Modifiability,"verride;  Save a text edit widget as a C++ statement(s) on output stream out. ;  ; virtual void ScreenDown ();  Move one screen down. ;  ; virtual void ScreenUp ();  Move one screen up. ;  ; void ScrollCanvas (Int_t newTop, Int_t direction) override;  Scroll the canvas to new_top in the kVertical or kHorizontal direction. ;  ; virtual void Search (Bool_t close);  Invokes search dialog. ;  ; Bool_t Search (const char *string, Bool_t direction=kTRUE, Bool_t caseSensitive=kFALSE) override;  Search for string in the specified direction. ;  ; virtual void SetCurrent (TGLongPosition new_coord);  Make the specified position the current position. ;  ; virtual void SetFocus ();  ; virtual void SetInsertMode (EInsertMode mode=kInsert);  Sets the mode how characters are entered. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTextView;  TGTextView (const TGWindow *parent, UInt_t w, UInt_t h, const char *string, Int_t id=-1, UInt_t sboptions=0, Pixel_t back=GetWhitePixel());  Create a text view widget. ;  ;  TGTextView (const TGWindow *parent, UInt_t w, UInt_t h, TGText *text, Int_t id=-1, UInt_t sboptions=0, Pixel_t back=GetWhitePixel());  Create a text view widget. ;  ;  TGTextView (const TGWindow *parent=nullptr, UInt_t w=1, UInt_t h=1, Int_t id=-1, UInt_t sboptions=0, Pixel_t back=GetWhitePixel());  Create a text view widget. ;  ;  ~TGTextView () override;  Cleanup text view widget. ;  ; virtual void AddLine (const char *string);  Add a line of text to the view widget. ;  ; virtual void AddLineFast (const char *string);  Add a line of text to the view widget. ;  ; virtual void AddText (TGText *text);  Add text to the view widget. ;  ; virtual void AdjustWidth ();  Adjust widget width to longest line. ;  ; void Clear (Option_t *="""") override;  Clear text view widget. ;  ; virtual void Clicked (const char *word);  ; virtual void DataChang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:6842,inherit,inherited,6842,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,1,['inherit'],['inherited']
Modifiability,"verride;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print binning arguments (the RooAbsReal objects represening the variable bin boundaries for parameterized binning implementations. ;  ; void printClassName (std::ostream &os) const override;  Print binning class name. ;  ; void printName (std::ostream &os) const override;  Print binning name. ;  ; void printTitle (std::ostream &os) const override;  Print binning title. ;  ; void printValue (std::ostream &os) const override;  Print binning value, i.e the bin boundary positions. ;  ; virtual void removeHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon removal from a RooAbsRealLValue. ;  ; virtual void setMax (double xhi);  Change upper bound to xhi. ;  ; virtual void setMin (double xlo);  Change lower bound to xlo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUniformBinning.html:4131,inherit,inherited,4131,doc/master/classRooUniformBinning.html,https://root.cern,https://root.cern/doc/master/classRooUniformBinning.html,2,['inherit'],['inherited']
Modifiability,"verride;  set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval) ;  ; void SetInterpolationOption (InterpolOption_t opt);  set the interpolation option, linear (kLinear ) or spline (kSpline) ;  ; virtual void SetTestSize (double size);  set the size of the test (rate of Type I error) (eg. 0.05 for a 95% Confidence Interval) ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; double UpperLimit () override;  return the interval upper limit ;  ; double UpperLimitEstimatedError ();  Estimate of lower limit error function evaluates only a rough error on the lower limit. ;  ; void UseCLs (bool on=true);  flag to switch between using CLsb (default) or CLs as confidence level ;  ;  Public Member Functions inherited from RooStats::SimpleInterval;  SimpleInterval (const char *name, const RooRealVar &var, double lower, double upper, double cl);  constructor from name, the Parameter of interest and lower/upper bound values ;  ;  SimpleInterval (const char *name=nullptr);  default constructor ;  ;  SimpleInterval (const SimpleInterval &other, const char *name);  default constructor ;  ; bool CheckParameters (const RooArgSet &) const override;  check if parameters are correct (i.e. they are the POI of this interval) ;  ; double ConfidenceLevel () const override;  return the confidence interval ;  ; RooArgSet * GetParameters () const override;  return a cloned list with the parameter of interest ;  ; TClass * IsA () const override;  ; bool IsInInterval (const RooArgSet &) const override;  check if parameter is in the interval ;  ; SimpleInterval & operator= (const SimpleInterval &other);  default constructor ;  ; void SetConfidenceLevel (double) override;  set the confidence level for the interval. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterResult.html:6798,inherit,inherited,6798,doc/master/classRooStats_1_1HypoTestInverterResult.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterResult.html,1,['inherit'],['inherited']
Modifiability,"verrideDraw this legend with its current attributes.Definition TLegend.cxx:425; TMatrixTSym< Double_t >; TMatrixT< Double_t >; TQpDataDensData for the dense QP formulation.Definition TQpDataDens.h:63; TQpProbDensdense matrix problem formulationDefinition TQpProbDens.h:61; TQpProbDens::MakeVariablesTQpVar * MakeVariables(const TQpDataBase *data) overrideSetup the variables.Definition TQpProbDens.cxx:182; TQpProbDens::MakeDatavirtual TQpDataBase * MakeData(Double_t *c, Double_t *Q, Double_t *xlo, Bool_t *ixlo, Double_t *xup, Bool_t *ixup, Double_t *A, Double_t *bA, Double_t *C, Double_t *clo, Bool_t *iclo, Double_t *cup, Bool_t *icup)Setup the data.Definition TQpProbDens.cxx:80; TQpProbDens::MakeResidualsTQpResidual * MakeResiduals(const TQpDataBase *data) overrideSetup the residuals.Definition TQpProbDens.cxx:172; TQpResidualThe Residuals class calculates and stores the quantities that appear on the right-hand side of the li...Definition TQpResidual.h:62; TQpVarClass containing the variables for the general QP formulation.Definition TQpVar.h:60; TQpVar::fXTVectorD fXDefinition TQpVar.h:91; TROOT::GetTutorialDirstatic const TString & GetTutorialDir()Get the tutorials directory in the installation. Static utility function.Definition TROOT.cxx:3119; TStringBasic string class.Definition TString.h:139; TSystem::AccessPathNamevirtual Bool_t AccessPathName(const char *path, EAccessMode mode=kFileExists)Returns FALSE if one can access a file using the specified access mode.Definition TSystem.cxx:1296; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::GetBranchvirtual TBranch * GetBranch(const char *name)Return pointer to the branch with the given name in this tree or its friends.Definition TTree.cxx:5294; TTree::SetBranchAddressvirtual Int_t SetBranchAddress(const char *bname, void *add, TBranch **ptr=nullptr)Change branch address, dealing with clone trees properly.Definition TTree.cxx:8385; TTree::GetEntriesvirtual Long64_t GetEntries() constDefinitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/portfolio_8C.html:18807,variab,variables,18807,doc/master/portfolio_8C.html,https://root.cern,https://root.cern/doc/master/portfolio_8C.html,1,['variab'],['variables']
Modifiability,"verrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7ffc9b6dfb50 RooAddPdf::model = 0.898615/1 [Auto,Clean] ; 0x7ffc9b6df238/V- RooCheby",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf202__extendedmlfit_8C.html:6554,extend,extended,6554,doc/master/rf202__extendedmlfit_8C.html,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html,1,['extend'],['extended']
Modifiability,"verrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3116 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition at line 147 of file RooAbsReal.h. ◆ sigma() [1/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs). inline . Definition at line 361 of file RooAbsReal.h. ◆ sigma() [2/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs, . const RooArgSet & ; nset . ). inline . Definition at line 362 of file RooAbsReal.h. ◆ specialIntegratorConfig() [1/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; ); const. Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned. ; Definition at line 3282 of file RooAbsReal.cxx. ◆ specialIntegratorConfig() [2/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; bool ; createOnTheFly). Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned, unless createOnTheFly is true in which case a clone of the default integrator configuration is created, installed as specialized configuration, and returned ; Definition at line 3294 of file RooAbsReal.cxx. ◆ Streamer(). void RooAbsReal::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in RooStats::HistFactory::RooBarlowBeestonLL, RooArgusBG, RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBernstein, RooBifurGauss, RooBMixDecay, RooBreitWigner, RooBukinPdf, RooCBShape, RooCFunction1Binding< VO, VI >, RooCFunction1PdfBinding< VO, VI >, RooCFunction2Binding< VO, VI1, VI2 >, RooCFunction2PdfBinding< VO, VI1, VI2 >, RooCFunction3Binding< VO, VI1, VI2, VI3 >, RooCFunction3PdfBinding< VO, VI1, VI2, VI3 >, RooCFunction4Binding< VO, VI1, VI2, VI3, VI4 >, RooCFunction4PdfBinding< VO, VI1, VI2, VI3, VI4 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:147920,config,configuration,147920,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"verrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3198 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition at line 147 of file RooAbsReal.h. ◆ sigma() [1/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs). inline . Definition at line 368 of file RooAbsReal.h. ◆ sigma() [2/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs, . const RooArgSet & ; nset . ). inline . Definition at line 369 of file RooAbsReal.h. ◆ specialIntegratorConfig() [1/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; ); const. Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned. ; Definition at line 3364 of file RooAbsReal.cxx. ◆ specialIntegratorConfig() [2/2]. RooNumIntConfig * RooAbsReal::specialIntegratorConfig ; (; bool ; createOnTheFly). Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned, unless createOnTheFly is true in which case a clone of the default integrator configuration is created, installed as specialized configuration, and returned ; Definition at line 3376 of file RooAbsReal.cxx. ◆ Streamer(). void RooAbsReal::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in RooStats::HistFactory::RooBarlowBeestonLL, RooArgusBG, RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBernstein, RooBifurGauss, RooBMixDecay, RooBreitWigner, RooBukinPdf, RooCBShape, RooCFunction1Binding< VO, VI >, RooCFunction1PdfBinding< VO, VI >, RooCFunction2Binding< VO, VI1, VI2 >, RooCFunction2PdfBinding< VO, VI1, VI2 >, RooCFunction3Binding< VO, VI1, VI2, VI3 >, RooCFunction3PdfBinding< VO, VI1, VI2, VI3 >, RooCFunction4Binding< VO, VI1, VI2, VI3, VI4 >, RooCFunction4PdfBinding< VO, VI1, VI2, VI3, VI4 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:149757,config,configuration,149757,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"verridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 57 of file RooConstraintSum.h. ◆ list(). const RooArgList & RooConstraintSum::list ; (; ). inline . Definition at line 36 of file RooConstraintSum.h. ◆ setData() [1/2]. bool RooConstraintSum::setData ; (; RooAbsData & ; data, . bool ; cloneData = true . ). inlineoverridevirtual . Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ; This function will do nothing if this RooConstraintSum is configured to not use the global observables stored in datasets. ; Reimplemented from RooAbsReal.; Definition at line 40 of file RooConstraintSum.h. ◆ setData() [2/2]. bool RooConstraintSum::setData ; (; RooAbsData const & ; data, . bool ; cloneData = true . ). Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ; This function will do nothing if this RooConstraintSum is configured to not use the global observables stored in datasets. ; Definition at line 117 of file RooConstraintSum.cxx. ◆ Streamer(). void RooConstraintSum::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooConstraintSum::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 57 of file RooConstraintSum.h. ◆ translate(). void RooConstraintSum::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:64090,config,configured,64090,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['config'],['configured']
Modifiability,"vertices.; Bool_tfZLogChange in logZ updates only bin heights.; Double_tfZMin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLH2PolyPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Ctor. char * GetPlotInfo(Int_t px, Int_t py); Show number of bin and bin contents, if bin is under the cursor. Bool_t InitGeometry(); Tesselate polygons, if not done yet.; All pointers are validated here (and in functions called from here).; If any pointer is invalid - zero, or has unexpected type (dynamic_cast fails) -; InitGeometry will return false and nothing will be painted later.; That's why there are no checks in other functions. void StartPan(Int_t px, Int_t py); User clicks on a lego with middle mouse button (middle for pad). void Pan(Int_t px, Int_t py); Mouse events handler. void AddOption(const TString& stringOption); No additional options. void ProcessEvent(Int_t event, Int_t px, Int_t py); No events. void InitGL() const; Initialize some gl state variables. void DeInitGL() const; Return some gl states to original values. void DrawPlot() const; Draw extruded polygons and plot's frame. void DrawExtrusion() const; Extruded part of bins.; GL_QUADS, GL_QUAD_STRIP - have the same time on my laptop, so I use; GL_QUADS and forgot about vertex arrays (can require more memory BTW). void DrawExtrusion(const TGraph* polygon, Double_t zMin, Double_t zMax, Int_t nBin) const; Extrude polygon, described by TGraph. void DrawExtrusion(const TMultiGraph* polygon, Double_t zMin, Double_t zMax, Int_t nBin) const; Multigraph contains a list of graphs, draw them. void DrawCaps() const; Caps on bins. void DrawCap(TGLH2PolyPainter::CIter_t cap, Int_t bin) const; Draw a cap on top of a bin. Bool_t CacheGeometry(); Cache all data for TH2Poly object. Bool_t BuildTesselation(Rgl::Pad::Tesselator& tess, const TGraph* g, Double_t z); Tesselate a polygon described by TGraph. Bool_t BuildTesselation(Rgl::Pad::Tesselator& tess, const TMultiGra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLH2PolyPainter.html:4964,variab,variables,4964,root/html528/TGLH2PolyPainter.html,https://root.cern,https://root.cern/root/html528/TGLH2PolyPainter.html,6,['variab'],['variables']
Modifiability,"verwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Static Public Member Functions inherited from RooProjectedPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::Eval",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:65952,inherit,inherited,65952,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,3,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,"very point in a given polygon is closer to its central point than to any other. A Voronoï diagram is sometimes also known as a Dirichlet tessellation.; The TGraph2D class has the following constructors:. With an arrays’ dimension n and three arrays x, y, and z (can be arrays of doubles, floats, or integers):. TGraph2D *g = new TGraph2D(n,x,y,z);. With an array dimension only:. TGraph2D *g = new TGraph2D(n);. Internal arrays are filled with the method SetPoint at the position “i” with the values x, y, z:. g->SetPoint(i,x,y,z);. Without parameters; the method SetPoint must be used to fill the internal arrays. TGraph2D *g = new TGraph2D();. From a file:. TGraph2D *g = new TGraph2D(""graph.dat"");; The arrays are read from the ASCII file “graph.dat” according to a specified format. The format’s default value is “%lg %lg %lg”. Note that in any of last three cases, the SetPoint method can be used to change a data point or to add a new one. If the data point index (i) is greater than the size of the internal arrays, they are automatically extended.; Specific drawing options can be used to paint a TGraph2D:. “TRI” the Delaunay triangles are drawn using filled area. A hidden surface drawing technique is used. The surface is painted with the current fill area color. The edges of the triangles are painted with the current line color;; “TRIW”the Delaunay triangles are drawn as wire frame;; “TRI1” the Delaunay triangles are painted with color levels. The edges of the triangles are painted with the current line color;; “TRI2” the Delaunay triangles are painted with color levels;; “P”draws a marker at each vertex;; “P0” draws a circle at each vertex. Each circle background is white. A TGraph2D can be also drawn with ANY options valid for 2D histogram drawing. In this case, an intermediate 2D histogram is filled using the Delaunay triangles technique to interpolate the data set. TGraph2D linearly interpolate a Z value for any (X,Y) point given some existing (X,Y,Z) points. The existi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:158510,extend,extended,158510,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['extend'],['extended']
Modifiability,"very simple probability density estimator (PDE) has been suggested in hep-ex/0211019. The PDE for a given test event is obtained from counting the (normalized) number of signal and background (training) events that occur in the ""vicinity"" of the test event. The volume that describes ""vicinity"" is user-defined. A search method based on binary-trees is used to effectively reduce the selection time for the range search. Three different volume definitions are optional:. MinMax: the volume is defined in each dimension with respect to the full variable range found in the training sample.; RMS: the volume is defined in each dimensions with respect to the RMS estimated from the training sample.; Adaptive: a volume element is defined in each dimensions with respect to the RMS estimated from the training sample. The overall scale of the volume element is then determined for each event so that the total number of events confined in the volume be within a user-defined range. The adaptive range search is used by default. ; Definition at line 61 of file MethodPDERS.h. Public Member Functions;  MethodPDERS (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption);  standard constructor for the PDERS method ;  ;  MethodPDERS (DataSetInfo &theData, const TString &theWeightFile);  construct MethodPDERS through from file ;  ; virtual ~MethodPDERS (void);  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  write weights to xml file ;  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  init the size of a volume element using a defined fraction of the volume containing the entire events ;  ; const std::vector< Float_t > & GetRegressionValues ();  ; Double_t GetVolumeContentForRoot (Double_t);  count number of events in rescaled volume ;  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets);  PDERS can handle classification with 2 classes and regression with on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html:1861,adapt,adaptive,1861,doc/master/classTMVA_1_1MethodPDERS.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html,1,['adapt'],['adaptive']
Modifiability,"very specification document. Short overview:. If the BEARER_TOKEN environment variable is set, then the value is taken to be the token contents.; If the BEARER_TOKEN_FILE environment variable is set, then its value is interpreted as a filename. The contents of the specified file are taken to be the token contents.; If the XDG_RUNTIME_DIR environment variable is set, then take the token from the contents of $XDG_RUNTIME_DIR/bt_u$ID(this additional location is intended to provide improved security for shared login environments as $XDG_RUNTIME_DIR is defined to be user-specific as opposed to a system-wide directory.).; Otherwise, take the token from /tmp/bt_u$ID. Xrootd client support; ROOT can now be built with Xrootd 5 client libraries.; GUI Libraries; RBrowser improvements. central factory methods to handle browsing, editing and drawing of different classes; simple possibility to extend RBrowser on user-defined classes; support of web-based geometry viewer; better support of TTree drawing; server-side handling of code editor and image viewer widgets; rbrowser content is fully recovered when web-browser is reloaded; load of widgets code only when really required (shorter startup time for RBrowser). JavaScript ROOT; Major JSROOT update to version 6. update all used libraries d3.js, three.js, MathJax.js, openui5; change to Promise based interface for all async methods, remove call-back arguments; change scripts names, core scripts name now JSRoot.core.js; unify function/methods naming conventions, many changes in method names; provide central code loader via JSROOT.require, supporting 4 different loading engines; many nice features and many bug fixes; see JSROOT v6 release notes. Class Reference Guide; One can now select a class’s documentation for a specific version. If a class does not exist in a given version, that version is grayed out, see for instance the documentation for ROOT::Experimental::RNTupleReader.; Build, Configuration and Testing Infrastructure. a new ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:28248,extend,extend,28248,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['extend'],['extend']
Modifiability,"ves the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual const double * MinGradient () const;  return pointer to gradient values at the minimum ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ProvidesError () const;  minimizer provides error and error matrix ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html:9462,config,configuration,9462,doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"vide for one or two arrays. The first array, which must always be present, shall contain the x, y, z, and t values for the call. The second array, which is optional and its size depends on the number given to the TF1 constructor, contains the values that parameterize the function. For more details, see the TF1 documentation and the examples below.; 19.1.8.1 Plotting Python Function; This is an example of a parameter less Python function that is plotted on a default canvas:; from ROOT import TF1, TCanvas. def identity( x ):; return x[0]. # create an identity function; f = TF1('pyf1', identity, -1., 1.). # plot the function; c = TCanvas(); f.Draw(); Because no number of parameters is given to the TF1 constructor, ‘0’ (the default) is assumed. This way, the ‘identity' function need not handle a second argument, which would normally be used to pass the function parameters. Note that the argument’x’ is an array of size 4. The following is an example of a parameterized Python callable instance that is plotted on a default canvas:; from ROOT import TF1, TCanvas. class Linear:; def __call__( self, x, par ):; return par[0] + x[0]*par[1]. # create a linear function with offset 5, and pitch 2; f = TF1('pyf2',Linear(),-1.,1.,2); f.SetParameters(5.,2.). # plot the function; c = TCanvas(); f.Draw(); Note that this time the constructor is told that there are two parameters, and note in particular how these parameters are set. It is, of course, also possible (and preferable if you only use the function for plotting) to keep the parameters as data members of the callable instance and use and set them directly from Python.; 19.1.8.2 Fitting Histograms; Fitting a histogram with a Python function is no more difficult than plotting: instantiate a TF1 with the Python callable and supply that TF1 as a parameter to the Fit() member function of the histogram. After the fit, you can retrieve the fit parameters from the TF1 instance. For example:; from ROOT import TF1, TH1F, TCanvas. class Lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1066953,parameteriz,parameterized,1066953,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['parameteriz'],['parameterized']
Modifiability,"viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOSTATS; » RooStats::ProfileLikelihoodCalculator. class RooStats::ProfileLikelihoodCalculator: public RooStats::CombinedCalculator. ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator ; (the interface class for a tools which can produce both RooStats HypoTestResults and ConfIntervals). ; The tool uses the profile likelihood ratio as a test statistic, and assumes that Wilks' theorem is valid. ; Wilks' theorem states that -2* log (profile likelihood ratio) is asymptotically distributed as a chi^2 distribution ; with N-dof, where N is the number of degrees of freedom. Thus, p-values can be constructed and the profile likelihood ratio; can be used to construct a LikelihoodInterval.; (In the future, this class could be extended to use toy Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be configured by specifying:. a model common model (eg. a family of specific models which includes both the null and alternate),; a data set, ; a set of parameters of interest. The nuisance parameters will be all other parameters of the model ; a set of parameters of which specify the null hypothesis (including values and const/non-const status) . The interface allows one to pass the model, data, and parameters either directly or via a ModelConfig class.; The alternate hypothesis leaves the parameter free to take any value other than those specified by the null hypotesis. There is therefore no need to ; specify the alternate parameters. . After configuring the calculator, one only needs to ask GetHypoTest() (which will return a HypoTestResult pointer) or GetInterval() (which will return an ConfInterval pointer). The concrete implementations of this interface should deal with the details of how the nuisance parameters are; dealt with (eg. integration vs. profiling) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__ProfileLikelihoodCalculator.html:1168,config,configured,1168,root/html528/RooStats__ProfileLikelihoodCalculator.html,https://root.cern,https://root.cern/root/html528/RooStats__ProfileLikelihoodCalculator.html,1,['config'],['configured']
Modifiability,"ving from TGeoMaterial and defined by their number of components and the density:; TGeoMixture(const char *name,Int_t nel,Double_t rho);; Elements have to be further defined one by one:; void TGeoMixture::DefineElement(Int_t iel,Double_t a,Double_t z,; Double_t weigth);; void TGeoMixture::DefineElement(Int_t iel, TGeoElement *elem,; Double_t weight);; void TGeoMixture::DefineElement(Int_t iel, Int_t z, Int_t natoms);; or:; void AddElement(TGeoMaterial* mat, Double_t weight);; void AddElement(TGeoElement* elem, Double_t weight);; void AddElement(TGeoElement* elem, Int_t natoms);; void AddElement(Double_t a, Double_t z, Double_t weight). iel: index of the element[0,nel-1]; a and z: the atomic mass and charge; weight: proportion by mass of the elements; natoms: number of atoms of the element in the molecule making the mixture. The radiation length is automatically computed when all elements are defined. Since tracking MC provide several other ways to create materials/mixtures, the materials classes are likely to evolve as the interfaces to these engines are being developed. Generally in the process of tracking material properties are not enough and more specific media properties have to be defined. These highly depend on the MC performing tracking and sometimes allow the definition of different media properties (e.g. energy or range cuts) for the same material.; 18.2.2 Radionuclides; A new class TGeoElementRN was introduced in this version to provide support for radioactive nuclides and their decays. A database of 3162 radionuclides can be loaded on demand via the table of elements (TGeoElementTable class). One can make then materials/mixtures based on these radionuclides and use them in a geometry; root[] TGeoManager *geom = new TGeoManager(""geom"",""radionuclides"");; root[] TGeoElementTable *table = geom->GetElementTable();; root[] TGeoElementRN *c14 = table->GetElementRN(14,6); // A,Z; root[] c14->Print();; 6-C-014 ENDF=60140; A=14; Z=6; Iso=0; Level=0[MeV]; Dmass=3.0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:890896,evolve,evolve,890896,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['evolve'],['evolve']
Modifiability,"ving the ""!"" (not) in; 206 // front of the ""Silent"" argument in the option string; 207 auto factory = std::make_unique<TMVA::Factory>(; 208 ""TMVAClassification"", outputFile.get(),; 209 ""!V:!Silent:Color:DrawProgressBar:Transformations=I;D;P;G,D:AnalysisType=Classification"");; 210 auto dataloader_raii = std::make_unique<TMVA::DataLoader>(""dataset"");; 211 auto *dataloader = dataloader_raii.get();; 212 // If you wish to modify default settings; 213 // (please check ""src/Config.h"" to see all available global options); 214 //; 215 // (TMVA::gConfig().GetVariablePlotting()).fTimesRMS = 8.0;; 216 // (TMVA::gConfig().GetIONames()).fWeightFileDir = ""myWeightDirectory"";; 217 ; 218 // Define the input variables that shall be used for the MVA training; 219 // note that you may also use variable expressions, such as: ""3*var1/var2*abs(var3)""; 220 // [all types of expressions that can also be parsed by TTree::Draw( ""expression"" )]; 221 dataloader->AddVariable( ""myvar1 := var1+var2"", 'F' );; 222 dataloader->AddVariable( ""myvar2 := var1-var2"", ""Expression 2"", """", 'F' );; 223 dataloader->AddVariable( ""var3"", ""Variable 3"", ""units"", 'F' );; 224 dataloader->AddVariable( ""var4"", ""Variable 4"", ""units"", 'F' );; 225 ; 226 // You can add so-called ""Spectator variables"", which are not used in the MVA training,; 227 // but will appear in the final ""TestTree"" produced by TMVA. This TestTree will contain the; 228 // input variables, the response values of all trained MVAs, and the spectator variables; 229 ; 230 dataloader->AddSpectator( ""spec1 := var1*2"", ""Spectator 1"", ""units"", 'F' );; 231 dataloader->AddSpectator( ""spec2 := var1*3"", ""Spectator 2"", ""units"", 'F' );; 232 ; 233 ; 234 // global event weights per tree (see below for setting event-wise weights); 235 Double_t signalWeight = 1.0;; 236 Double_t backgroundWeight = 1.0;; 237 ; 238 // You can add an arbitrary number of signal or background trees; 239 dataloader->AddSignalTree ( signalTree, signalWeight );; 240 dataloader->AddBackgroundTree(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C_source.html:8645,variab,variables,8645,doc/master/TMVAClassification_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C_source.html,3,['variab'],"['variable', 'variables']"
Modifiability,"ving the given cut expression; Cut(const RooFormulaVar& expr) -- Only retain event surviving the given cut formula; CutRange(const char* name) -- Only retain events inside range with given name. Multiple CutRange; arguments may be given to select multiple ranges; EventRange(int lo, int hi) -- Only retain events with given sequential event numbers; Name(const char* name) -- Give specified name to output dataset; Title(const char* name) -- Give specified title to output dataset. RooAbsData* reduce(const char* cut); Create a subset of the data set by applying the given cut on the data points.; The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points.; The 'cutVar' formula variable is used to select the subset of data points to be; retained in the reduced data collection. RooAbsData* reduce(const RooArgSet& varSubset, const char* cut = 0); Create a subset of the data set by applying the given cut on the data points; and reducing the dimensions to the specified set. The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooArgSet& varSubset, const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points; and reducing the dimensions to the specified set. The 'cutVar' formula variable is used to select the subset of data points to be; retained in the reduced data collection. Double_t weightError(RooAbsData::ErrorType etype = Poisson) const; Return error on current weight (dummy implementation returning zero). void weightError(Double_t& lo, Double_t& hi, RooAbsData::Error",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsData.html:16243,variab,variable,16243,root/html528/RooAbsData.html,https://root.cern,https://root.cern/root/html528/RooAbsData.html,6,['variab'],['variable']
Modifiability,"ving the given cut expression; Cut(const RooFormulaVar& expr) -- Only retain event surviving the given cut formula; CutRange(const char* name) -- Only retain events inside range with given name. Multiple CutRange; arguments may be given to select multiple ranges; EventRange(int lo, int hi) -- Only retain events with given sequential event numbers; Name(const char* name) -- Give specified name to output dataset; Title(const char* name) -- Give specified title to output dataset. RooAbsData* reduce(const char* cut); Create a subset of the data set by applying the given cut on the data points.; The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points.; The 'cutVar' formula variable is used to select the subset of data points to be; retained in the reduced data collection. RooAbsData* reduce(const RooArgSet& varSubset, const char* cut); Create a subset of the data set by applying the given cut on the data points; and reducing the dimensions to the specified set. The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooArgSet& varSubset, const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points; and reducing the dimensions to the specified set. The 'cutVar' formula variable is used to select the subset of data points to be; retained in the reduced data collection. Double_t weightError(RooAbsData::ErrorType etype = Poisson) const; Return error on current weight (dummy implementation returning zero). void weightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsData.html:16145,variab,variable,16145,root/html526/RooAbsData.html,https://root.cern,https://root.cern/root/html526/RooAbsData.html,1,['variab'],['variable']
Modifiability,"vior of TTreeFormula). The main features of this skeleton are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). For example with Event.root, if; Double_t somepx = fTracks.fPx[2];; is executed by one of the method of the skeleton,; somepx will be updated with the current value of fPx of the 3rd track. Both macrofilename and the optional cutfilename are expected to be; the name of source files which contain at least a free standing; function with the signature:; x_t macrofilename(); // i.e function with the same name as the file; and; y_t cutfilename(); // i.e function with the same name as the file. x_t and y_t needs to be types that can convert respectively to a double; and a bool (because the skeleton uses:; if (cutfilename()) htemp->Fill(macrofilename());. This 2 functions are run in a context such that the branch names are; available as local variables of the correct (read-only) type. Note that if you use the same 'variable' twice, it is more efficient; to 'cache' the value. For example; Int_t n = fEventNumber; // Read fEventNumber; if (n<10 || n>10) { ... }; is more efficient than; if (fEventNumber<10 || fEventNumber>10). Access to TClonesArray. If a branch (or member) is a TClonesArray (let's say fTracks), you; can access the TClonesArray itself by using ->:; fTracks->GetLast();; However this will load the full TClonesArray object and its content.; To quickly read the size of the TClonesArray use (note the dot):; fTracks.GetEntries();; This will read only the size from disk if the TClonesArray has been; split.; To access the content of the TClonesArray, use the [] operator:; float px = fTracks[i].fPx; // fPx of the i-th track. Warning:; The variable actually use for access are 'wrapper' around the; real data type (to add autoload for example) and hence getting to; the data involves the implicit cal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:44895,variab,variables,44895,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,6,['variab'],['variables']
Modifiability,"virtual . Read back streamer infos from database List of streamer infos is always stored with key:id 0, which is not shown in normal keys list. ; Reimplemented from TFile.; Definition at line 882 of file TSQLFile.cxx. ◆ GetTablesType(). const char * TSQLFile::GetTablesType ; (; ); const. inline . Definition at line 190 of file TSQLFile.h. ◆ GetUseIndexes(). Int_t TSQLFile::GetUseIndexes ; (; ); const. inline . Definition at line 194 of file TSQLFile.h. ◆ GetUseSuffixes(). Bool_t TSQLFile::GetUseSuffixes ; (; ); const. inline . Definition at line 184 of file TSQLFile.h. ◆ GetUseTransactions(). Int_t TSQLFile::GetUseTransactions ; (; ); const. inline . Definition at line 192 of file TSQLFile.h. ◆ HasTable(). Bool_t TSQLFile::HasTable ; (; const char * ; name). protected . Test if table name exists. ; Definition at line 1883 of file TSQLFile.cxx. ◆ IncrementModifyCounter(). void TSQLFile::IncrementModifyCounter ; (; ). protected . Update value of modify counter in config table Modify counter used to indicate that something was changed in database. ; It will be used when multiple instances of TSQLFile for the same data base will be connected. ; Definition at line 1188 of file TSQLFile.cxx. ◆ InitSqlDatabase(). void TSQLFile::InitSqlDatabase ; (; Bool_t ; create). protected . initialize sql database and correspondent structures identical to TFile::Init() function ; Definition at line 998 of file TSQLFile.cxx. ◆ IsA(). TClass * TSQLFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TFile.; Definition at line 254 of file TSQLFile.h. ◆ IsLongStringCode(). Int_t TSQLFile::IsLongStringCode ; (; Long64_t ; objid, . const char * ; value . ). protected . Checks if this is long string code returns 0, if not or string id. ; Definition at line 2225 of file TSQLFile.cxx. ◆ IsMySQL(). Bool_t TSQLFile::IsMySQL ; (; ); const. checks, if MySQL database ; Definition at line 467 of file TSQLFile.cxx. ◆ IsODBC(). Bool_t TSQLFile::Is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:72168,config,config,72168,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['config'],['config']
Modifiability,"virtual . Reimplemented in TROOT, and TDirectoryFile.; Definition at line 202 of file TDirectory.h. ◆ Get() [1/2]. TObject * TDirectory::Get ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject. If not, the function TDirectory::GetObject should be called. However, this function will still work for a non-TObject, providing that the calling application cast the return type to the correct type (which is the actual type of the object).; NOTE:; The method GetObject offer better protection and avoid the need for any cast: MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }; VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>(). Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one can do: MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");; Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented in TDirectoryFile, and TDirectoryFile.; Definition at line 866 of file TDirectory.cxx. ◆ Get() [2/2]. template<class T > . T * TDirectory::Get ; (; const char * ; namecycle). inline . See documentation of TDirectoryFile::Get(const char *namecycle) ; Definition at line 205 of file TDirectory.h. ◆ GetBufferSize(). virtual Int_t TDire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:34074,inherit,inherits,34074,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,2,['inherit'],['inherits']
Modifiability,"virtual . Set left hand side of BoundingBox to a value (resize in x direction on left) ; Implements TAttBBox2D.; Definition at line 642 of file TLine.cxx. ◆ SetBBoxX2(). void TLine::SetBBoxX2 ; (; const Int_t ; x). overridevirtual . Set right hand side of BoundingBox to a value (resize in x direction on right) ; Implements TAttBBox2D.; Definition at line 655 of file TLine.cxx. ◆ SetBBoxY1(). void TLine::SetBBoxY1 ; (; const Int_t ; y). overridevirtual . Set top of BoundingBox to a value (resize in y direction on top) ; Implements TAttBBox2D.; Definition at line 667 of file TLine.cxx. ◆ SetBBoxY2(). void TLine::SetBBoxY2 ; (; const Int_t ; y). overridevirtual . Set bottom of BoundingBox to a value (resize in y direction on bottom) ; Implements TAttBBox2D.; Definition at line 680 of file TLine.cxx. ◆ SetHorizontal(). void TLine::SetHorizontal ; (; Bool_t ; set = kTRUE). Force the line to be drawn horizontally. ; Makes fY2 equal to fY1. The line length is kept. TArrow and TGaxis also get this function by inheritance. ; Definition at line 478 of file TLine.cxx. ◆ SetNDC(). void TLine::SetNDC ; (; Bool_t ; isNDC = kTRUE). virtual . Set NDC mode on if isNDC = kTRUE, off otherwise. ; Definition at line 467 of file TLine.cxx. ◆ SetVertical(). void TLine::SetVertical ; (; Bool_t ; set = kTRUE). Force the line to be drawn vertically. ; Makes fX2 equal to fX1. The line length is kept. TArrow and TGaxis also get this function by inheritance. ; Definition at line 499 of file TLine.cxx. ◆ SetX1(). virtual void TLine::SetX1 ; (; Double_t ; x1). inlinevirtual . Definition at line 65 of file TLine.h. ◆ SetX2(). virtual void TLine::SetX2 ; (; Double_t ; x2). inlinevirtual . Definition at line 66 of file TLine.h. ◆ SetY1(). virtual void TLine::SetY1 ; (; Double_t ; y1). inlinevirtual . Definition at line 67 of file TLine.h. ◆ SetY2(). virtual void TLine::SetY2 ; (; Double_t ; y2). inlinevirtual . Definition at line 68 of file TLine.h. ◆ Streamer(). void TLine::Streamer ; (; TBuffer & ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine.html:22369,inherit,inheritance,22369,doc/master/classTLine.html,https://root.cern,https://root.cern/doc/master/classTLine.html,1,['inherit'],['inheritance']
Modifiability,"virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCallProfiling(Bool_t flag, Int_t nbinX = 40, Int_t nbinCall = 40, Int_t nCallHigh = 1000); voidsetCallWarning(Int_t threshold = 2000); voidsetConvolutionWindow(RooAbsReal& centerParam, RooAbsReal& widthParam, Double_t widthScaleFactor = 1); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumConvPdf.html:29361,config,config,29361,root/html526/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html526/RooNumConvPdf.html,1,['config'],['config']
Modifiability,"virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TEntryList * fElist;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEntryList.html:12654,inherit,inherited,12654,doc/master/classTProofDrawEntryList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEntryList.html,2,['inherit'],['inherited']
Modifiability,"virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProfile * fProfile;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile.html:12704,inherit,inherited,12704,doc/master/classTProofDrawProfile.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile.html,2,['inherit'],['inherited']
Modifiability,"virtual Int_t SysClose (Int_t fd);  Interface to system close. All arguments like in POSIX close(). ;  ; virtual Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode);  Interface to system open. All arguments like in POSIX open(). ;  ; virtual Int_t SysRead (Int_t fd, void *buf, Int_t len);  Interface to system read. All arguments like in POSIX read(). ;  ; virtual Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence);  Interface to system lseek. ;  ; virtual Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime);  Return file stat information. ;  ; virtual Int_t SysSync (Int_t fd);  Interface to system fsync. All arguments like in POSIX fsync(). ;  ; virtual Int_t SysWrite (Int_t fd, const void *buf, Int_t len);  Interface to system write. All arguments like in POSIX write(). ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTFile.html:37166,inherit,inherited,37166,doc/v632/classTFile.html,https://root.cern,https://root.cern/doc/v632/classTFile.html,6,['inherit'],['inherited']
Modifiability,"virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualTreePlayer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualTreePlayer * GetCurrentPlayer ();  Static function: return the current player (if any) ;  ; static void SetPlayer (const char *player);  Static function to set an alternative Tree player. ;  ; static TVirtualTreePlayer * TreePlayer (TTree *obj);  Static function returning a pointer to a Tree player. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DeleteSelectorFromFile ();  Delete any selector created by this object. ;  ; const char * GetNameByIndex (TString &varexp, Int_t *index, Int_t colindex);  Return name corresponding to colindex in varexp. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fDimension;  Dimension of the current expression. ;  ; TList * fFormulaList;  ! Pointer to a list of coordinated list TTreeFormula (use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:14136,inherit,inherited,14136,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['inherit'],['inherited']
Modifiability,"virtual RooPlot*RooAbsData::plotEffOn(RooPlot* frame, const RooAbsCategoryLValue& effCat, RooAbsData::PlotOpt o) const; virtual RooPlot*RooAbsData::plotOn(RooPlot* frame, RooAbsData::PlotOpt o) const; virtual RooAbsData*RooAbsData::reduceEng(const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange = 0, Int_t nStart = 0, Int_t nStop = 2000000000, Bool_t copyCache = kTRUE); virtual voidRooAbsData::resetCache(); virtual voidRooAbsData::setArgStatus(const RooArgSet& set, Bool_t active). Data Members; public:. enum RooAbsData::ErrorType { Poisson; SumW2; None; Auto; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsData::_varsDimensions of this data set; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TString_blindStringBlinding string (optionally read from ASCII files) ; TTree*_treeTTree holding the data points; RooArgSet_truthTruth variables . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Thu Sep 23 20:01:26 2010 » Last generated: 2010-09-23 20:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooTreeData.html:14204,variab,variables,14204,root/html528/RooTreeData.html,https://root.cern,https://root.cern/root/html528/RooTreeData.html,4,['variab'],['variables']
Modifiability,"virtual UInt_tWriteVersionMemberWise(const TClass* cl, Bool_t useBcnt = kFALSE). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidExpand(Int_t newsize); voidTObject::MakeZombie(); voidoperator=(const TBuffer&); virtual Int_tRead(const char* name); virtual Int_tWrite(const char* name, Int_t opt, Int_t bufs); virtual Int_tWrite(const char* name, Int_t opt, Int_t bufs) const. Data Members; public:. enum EMode { kRead; kWrite; };; enum { kIsOwner; kCannotHandleMemberWiseStreaming; kInitialSize; kMinimalSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*fBufCurCurrent position in buffer; char*fBufMaxEnd of buffer; Int_tfBufSizeSize of buffer; char*fBufferBuffer used to store objects; Bool_tfModeRead or write mode; TObject*fParentPointer to parent object owning this buffer; ReAllocCharFun_tfReAllocFunc! Realloc function to be used when extending the buffer.; Int_tfVersionBuffer format version. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TBuffer(); Delete an I/O buffer object. void SetBuffer(void* buf, UInt_t bufsiz = 0, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Sets a new buffer in an existing TBuffer object. If newsiz=0 then the; new buffer is expected to have the same size as the previous buffer.; The current buffer position is reset to the start of the buffer.; If the TBuffer owned the previous buffer, it will be deleted prior; to accepting the new buffer. By default the new buffer will be; adopted unless adopt is false.; If the new buffer is _not_ adopted and no memory allocation routine; is provided, a Fatal error will be issued if the Buffer attempts to; expand. void Expand(Int_t newsize); Expand the I/O buffer to n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBuffer.html:15168,extend,extending,15168,root/html526/TBuffer.html,https://root.cern,https://root.cern/root/html526/TBuffer.html,1,['extend'],['extending']
Modifiability,"virtual bool CompileVariables (const char *varexp="""", const char *selection="""");  Compile input variables and selection expression. ;  ; virtual void InitArrays (Int_t newsize);  Initialization of the primitive type arrays if the new size is bigger than the available space. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAction;  ! Action type ;  ; bool fCleanElist;  True if original Tree elist must be saved. ;  ; Long64_t fCurrentSubEntry;  Current subentry when fSelectMultiple is true. Used to fill TEntryListArray. ;  ; Int_t fDimension;  Dimension of the current expression. ;  ; Long64_t fDraw;  ! Last entry loop number when object was drawn ;  ; Int_t fForceRead;  Force Read flag. ;  ; TTreeFormulaManager * fManager;  Pointer to the formula manager. ;  ; Int_t fMultiplicity;  Indicator of the variability of the size of entries. ;  ; Int_t * fNbins;  ![fDimension] Number of bins per dimension ;  ; Int_t fNfill;  ! Total number of histogram fills ;  ; bool fObjEval;  True if fVar1 returns an object (or pointer to). ;  ; Long64_t fOldEstimate;  Value of Tree fEstimate when selector is called. ;  ; TH1 * fOldHistogram;  ! Pointer to previously used histogram ;  ; TTreeFormula * fSelect;  Pointer to selection formula. ;  ; Long64_t fSelectedRows;  Number of selected entries. ;  ; bool fSelectMultiple;  True if selection has a variable index. ;  ; TTree * fTree;  Pointer to current Tree. ;  ; TObject * fTreeElist;  Pointer to Tree Event list. ;  ; TEntryListArray * fTreeElistArray;  ! Pointer to Tree Event list array ;  ; Double_t ** fVal;  ![fSelectedRows][fDimension] Local buffer for the variables ;  ; Int_t fValSize;  ; TTreeFormula ** fVar;  ![fDimension] Array of pointers to variables formula ;  ; bool * fVarMultiple;  ![fDimension] True if fVar[i] has a variable index ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:14284,variab,variability,14284,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['variab'],['variability']
Modifiability,"virtual std::vector< Double_t > GetDataMvaValues (DataSet *data=nullptr, Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the given Data type ;  ; const TString & GetInternalVarName (Int_t ivar) const;  ; virtual std::vector< Double_t > GetMvaValues (Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the current Data type ;  ; const TString & GetOriginalVarName (Int_t ivar) const;  ; const TString & GetWeightFileDir () const;  ; Bool_t HasTrainingTree () const;  ; Bool_t Help () const;  ; Bool_t IgnoreEventsWithNegWeightsInTraining () const;  ; Bool_t IsConstructedFromWeightFile () const;  ; Bool_t IsNormalised () const;  ; void NoErrorCalc (Double_t *const err, Double_t *const errUpper);  ; void SetNormalised (Bool_t norm);  ; void SetWeightFileDir (TString fileDir);  set directory of weight file ;  ; void SetWeightFileName (TString);  set the weight file name (depreciated) ;  ; void Statistics (Types::ETreeType treeType, const TString &theVarName, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &);  calculates rms,mean, xmin, xmax of the event variable this can be either done for the variables as they are or for normalised variables (in the range of 0-1) if ""norm"" is set to kTRUE ;  ; Bool_t TxtWeightsOnly () const;  ; Bool_t Verbose () const;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:30150,variab,variable,30150,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,20,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"virtual void KeyValue(const TString &, const TString &, const TString &)Definition TEnv.cxx:117; TEnvParser::fIfpFILE * fIfpDefinition TEnv.cxx:109; TEnvRecDefinition TEnv.h:86; TEnvRec::fValueTString fValueDefinition TEnv.h:96; TEnvRec::ChangeValuevoid ChangeValue(const char *v, const char *t, EEnvLevel l, Bool_t append=kFALSE, Bool_t ignoredup=kFALSE)Change the value of a resource.Definition TEnv.cxx:293; TEnvRec::fLevelEEnvLevel fLevelDefinition TEnv.h:97; TEnvRec::TEnvRecTEnvRec()Definition TEnv.h:107; TEnvRec::ExpandValueTString ExpandValue(const char *v)Replace all strings by the value defined in the shell (obtained via TSystem::Getenv()).Definition TEnv.cxx:334; TEnvRec::fNameTString fNameDefinition TEnv.h:94; TEnvRec::fModifiedBool_t fModifiedDefinition TEnv.h:98; TEnvRec::~TEnvRec~TEnvRec()TNamed destructor.Definition TEnv.cxx:284; TEnvRec::CompareInt_t Compare(const TObject *obj) const overrideComparison function for resources.Definition TEnv.cxx:325; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TEnv::fTableTHashList * fTableDefinition TEnv.h:127; TEnv::Printvoid Print(Option_t *option="""") const overridePrint all resources or the global, user or local resources separately.Definition TEnv.cxx:556; TEnv::PrintEnvvirtual void PrintEnv(EEnvLevel level=kEnvAll) constPrint all resources for a certain level (global, user, local, changed).Definition TEnv.cxx:574; TEnv::GetValuevirtual Int_t GetValue(const char *name, Int_t dflt) constReturns the integer value for a resource.Definition TEnv.cxx:491; TEnv::fRcNameTString fRcNameDefinition TEnv.h:128; TEnv::WriteFilevirtual Int_t WriteFile(const char *fname, EEnvLevel level=kEnvAll)Write resource records to file fname for a certain level.Definition TEnv.cxx:617; TEnv::IgnoreDuplicatesBool_t IgnoreDuplicates(Bool_t ignore)If set to true, no warnings in case of duplicates are issued.Definition TEnv.cxx:793; TEnv::ReadFilevirtual Int_t ReadFile(const char *fname, EEnvLevel level",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8cxx_source.html:27422,config,config,27422,doc/master/TEnv_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8cxx_source.html,1,['config'],['config']
Modifiability,"virtual void ResetMap()=0; TBuffer::SetBufferOffsetvoid SetBufferOffset(Int_t offset=0)Definition TBuffer.h:93; TBuffer::SetReadModevoid SetReadMode()Set buffer in read mode.Definition TBuffer.cxx:302; TBuffer::WriteVersionvirtual UInt_t WriteVersion(const TClass *cl, Bool_t useBcnt=kFALSE)=0; TBuffer::MapObjectvirtual void MapObject(const TObject *obj, UInt_t offset=1)=0; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Newvoid * New(ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) constReturn a pointer to a newly allocated object of this class.Definition TClass.cxx:5045; TClass::GetDirectoryAutoAddROOT::DirAutoAdd_t GetDirectoryAutoAdd() constReturn the wrapper around the directory auto add function.Definition TClass.cxx:7554; TClass::IsTObjectBool_t IsTObject() constReturn kTRUE is the class inherits from TObject.Definition TClass.cxx:6005; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TClass::GetBaseClassOffsetInt_t GetBaseClassOffset(const TClass *toBase, void *address=nullptr, bool isDerivedObject=true)Definition TClass.cxx:2858; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TCollection::Classstatic TClass * Class(); TCollection::UseRWLockvirtual bool UseRWLock(Bool_t enable=true)Set this collection to use a RW lock upon access, making it thread safe.Definition TCollection.cxx:761; TCollection::IsUsingRWLockR__ALWAYS_INLINE Bool_t IsUsingRWLock() constDefinition TCollection.h:212; TDirectory::TContextTDirectory::TContext keeps track and restore the current directory.Definition TDirectory.h:89; TDirectory::TContext::fDirectoryWaitstd::atomic< bool > fDirectoryWaitSet to true during the destructor execution.Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectory_8cxx_source.html:57068,inherit,inherits,57068,doc/master/TDirectory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectory_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooLinkedList_configSetsList of configuration sets for individual integration methods; static RooNumIntConfig*_default; Double_t_epsAbsAbsolute precision; Double_t_epsRelRelative precision; RooCategory_method1DSelects integration method for 1D integrals; RooCategory_method1DOpenSelects integration method for open ended 1D integrals; RooCategory_method2DSelects integration method for 2D integrals; RooCategory_method2DOpenSelects integration method for open ended 2D integrals; RooCategory_methodNDSelects integration method for ND integrals; RooCategory_methodNDOpenSelects integration method for open ended ND integrals; static Int_tRooPrintable::_nameLength; Bool_t_printEvalCounterFlag to control printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumIntConfig.html:7352,config,configuration,7352,root/html526/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html526/RooNumIntConfig.html,5,['config'],['configuration']
Modifiability,"virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocInfo.html:3191,inherit,inheritance,3191,doc/master/classTClassDocInfo.html,https://root.cern,https://root.cern/doc/master/classTClassDocInfo.html,17,['inherit'],['inheritance']
Modifiability,"virtual void ExecuteDefaultAction (TObject *);  ; virtual TBrowser * GetBrowser () const;  ; virtual TGMainFrame * GetMainFrame () const;  ; virtual void Iconify ();  ; virtual Bool_t IsWeb () const;  ; virtual void RemoveCheckBox (TObject *);  ; virtual void SetBrowser (TBrowser *b);  ; virtual void SetDrawOption (Option_t *="""");  ; virtual void SetStatusText (const char *, Int_t);  ; virtual void StartEmbedding (Int_t, Int_t);  ; virtual void StopEmbedding (const char *);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileBrowser.html:29776,inherit,inherited,29776,doc/master/classTGFileBrowser.html,https://root.cern,https://root.cern/doc/master/classTGFileBrowser.html,3,['inherit'],['inherited']
Modifiability,"virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEditorClass (const char *edclass);  Set GED editor class. ;  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html:25227,inherit,inherited,25227,doc/master/classTEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html,3,['inherit'],['inherited']
Modifiability,"virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetupFrameMarkup (IconBarCreator_foo creator, UInt_t top_frame_height=14, UInt_t mini_bar_height=4, Bool_t allow_top_collapse=kTRUE);  Set properties of the EVE frame. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrame.html:24821,inherit,inherited,24821,doc/master/classTEveCompositeFrame.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrame.html,2,['inherit'],['inherited']
Modifiability,"virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TGClient * fClient {nullptr};  pointer to the client environment ;  ; TString fDisplay;  display server to connect to ;  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGApplication.html:18422,inherit,inherited,18422,doc/master/classTGApplication.html,https://root.cern,https://root.cern/doc/master/classTGApplication.html,2,['inherit'],['inherited']
Modifiability,"virtual void MakeTableOfCoSin () const;  Make table of cosine and sine. ;  ; TPCON & operator= (const TPCON &);  assignment operator ;  ; void SetPoints (Double_t *points) const override;  Create PCON points. ;  ; virtual Bool_t SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TPCON; Double_t * fCoTab;  Table of sin(fPhi1) .... sin(fPhil+fDphi1) ;  ; Float_t fDphi1;  ; Float_t * fDz;  ; Int_t fNdiv;  ; Int_t fNz;  ; Float_t fPhi1;  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; Float_t * fRmax;  ; Float_t * fRmin;  ; Double_t * fSiTab;  ;  Protected Attributes inherited from TShape; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPGON.html:17814,inherit,inherited,17814,doc/master/classTPGON.html,https://root.cern,https://root.cern/doc/master/classTPGON.html,1,['inherit'],['inherited']
Modifiability,"virtual void SetMatrix (const TMatrixD &a);  Set matrix to be decomposed. ;  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &b) override;  Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ; Bool_t Solve (TVectorD &b) override;  Solve Ax=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &b) override;  Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the QR form of A is stored in fR,fQ and fW, but assume b has not been transformed. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompQRH.html:5017,inherit,inherited,5017,doc/master/classTDecompQRH.html,https://root.cern,https://root.cern/doc/master/classTDecompQRH.html,1,['inherit'],['inherited']
Modifiability,"virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooStats::HypoTestResult; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; bool fComputationsAltDoneFlag;  ; bool fComputationsNulDoneFlag;  ; bool fSumLargerValues;  ; std::vector< double > fTestStat_b;  ; double fTestStat_data;  ; std::vector< double > fTestStat_sb;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HybridResult.html:14492,inherit,inherited,14492,doc/master/classRooStats_1_1HybridResult.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HybridResult.html,3,['inherit'],['inherited']
Modifiability,"virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualMonitoringWriter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TSQLMonitoringWriter (const TSQLMonitoringWriter &)=delete;  ; TSQLMonitoringWriter & operator= (const TSQLMonitoringWriter &)=delete;  . Private Attributes; TSQLServer * fDB;  ; Long64_t fMaxBulkSize;  ; TString fTable;  ; Bool_t fVerbose;  . Additional Inherited Members;  Publ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLMonitoringWriter.html:10621,inherit,inherited,10621,doc/master/classTSQLMonitoringWriter.html,https://root.cern,https://root.cern/doc/master/classTSQLMonitoringWriter.html,3,['inherit'],['inherited']
Modifiability,"virtual void fixAddCoefRange (const char *rangeName=nullptr, bool force=true);  Fix the interpretation of the coefficient of any RooAddPdf component in the expression tree headed by this object to the given set of observables. ;  ; virtual bool forceAnalyticalInt (const RooAbsArg &) const;  ; virtual void forceNumInt (bool flag=true);  ; RooFunctor * functor (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a RooFunctor object bound to this RooAbsReal with given definition of observables and parameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual double getValV (const RooArgSet *normalisationSet=nullptr) const;  Return value of object. ;  ; virtual void gradient (double *) const;  ; virtual bool h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPiecewiseInterpolation.html:14505,config,configuration,14505,doc/master/classPiecewiseInterpolation.html,https://root.cern,https://root.cern/doc/master/classPiecewiseInterpolation.html,1,['config'],['configuration']
Modifiability,"virtual void printExtras (std::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooDirItem;  RooDirItem ();  ;  RooDirItem (const RooDirItem &);  ; virtual ~RooDirItem ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void cleanup ();  ; static const char * DeclFileName ();  ; static RooDataSet * read (const char *filename, const RooArgList &variables, const char *opts="""", const char *commonPath="""", const char *indexCatName=nullptr);  Read data from a text file and create a dataset from it. ;  ;  Static Public Member Functions inherited from RooAbsData; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static StorageType getDefaultStorageType ();  ; static void setDefaultStorageType (StorageType s);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:28420,variab,variables,28420,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variables']
Modifiability,"virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fCalcMass;  ; Int_t fDaughter [2];  ; Double_t fE;  ; Int_t fMother [2];  ; TParticlePDG * fParticlePDG;  ; Int_t fPdgCode;  ; Double_t fPolarPhi;  ; Double_t fPolarTheta;  ; Double_t fPx;  ; Double_t fPy;  ; Double_t fPz;  ; Int_t fStatusCode;  ; Double_t fVt;  ; Double_t fVx;  ; Double_t fVy;  ; Double_t fVz;  ; Float_t fWeight;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 ));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticle.html:14806,inherit,inherited,14806,doc/master/classTParticle.html,https://root.cern,https://root.cern/doc/master/classTParticle.html,2,['inherit'],['inherited']
Modifiability,"virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fEtot;  ; Int_t fFirstMother;  ; Int_t fGeneration;  ; Int_t fPart;  ; Double_t fPx;  ; Double_t fPy;  ; Double_t fPz;  ; Int_t fSecondMother;  ; Double_t fTime;  ; Double_t fTimeEnd;  ; TString fType;  ; Double_t fVx;  ; Double_t fVy;  ; Double_t fVz;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPrimary.html:11695,inherit,inherited,11695,doc/master/classTPrimary.html,https://root.cern,https://root.cern/doc/master/classTPrimary.html,2,['inherit'],['inherited']
Modifiability,"visibility. ;  ; virtual void SetVisContainers (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisDaughters (Bool_t vis=kTRUE);  Set visibility for the daughters. ;  ; virtual void SetVisLeaves (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; virtual void SetVisOnly (Bool_t flag=kTRUE);  Set branch type visibility. ;  ; void SetVisRaytrace (Bool_t flag=kTRUE);  ; void SetVisStreamed (Bool_t vis=kTRUE);  Mark attributes as ""streamed to file"". ;  ; void SetVisTouched (Bool_t vis=kTRUE);  Mark visualization attributes as ""modified"". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestAttBit (UInt_t f) const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNode.html:20305,inherit,inherited,20305,doc/master/classTGeoNode.html,https://root.cern,https://root.cern/doc/master/classTGeoNode.html,2,['inherit'],['inherited']
Modifiability,"vogadro constant (Avogadro's Number) in \( mol^{-1} \). ;  ; constexpr Double_t NaUncertainty ();  Avogadro constant (Avogadro's Number) uncertainty. ;  ; Long_t NextPrime (Long_t x);  ; template<typename T > ; Int_t Nint (T x);  Round to nearest integer. Rounds half integers to the nearest even integer. ;  ; template<typename T > ; T * Normal2Plane (const T v1[3], const T v2[3], const T v3[3], T normal[3]);  Calculates a normal vector of a plane. ;  ; Double_t Normalize (Double_t v[3]);  Normalize a vector v in place. ;  ; Float_t Normalize (Float_t v[3]);  Normalize a vector v in place. ;  ; template<typename T > ; T NormCross (const T v1[3], const T v2[3], T out[3]);  Calculates the Normalized Cross Product of two vectors. ;  ; Double_t NormQuantile (Double_t p);  Computes quantiles for standard normal distribution N(0, 1) at probability p. ;  ; Bool_t Odd (Long_t a);  Returns true if a is odd. ;  ; Bool_t Permute (Int_t n, Int_t *a);  Simple recursive algorithm to find the permutations of n natural numbers, not necessarily all distinct adapted from CERNLIB routine PERMU. ;  ; constexpr Double_t Pi ();  \( \pi\) ;  ; constexpr Double_t PiOver2 ();  \( \frac{\pi}{2} \) ;  ; constexpr Double_t PiOver4 ();  \( \frac{\pi}{4} \) ;  ; Double_t Poisson (Double_t x, Double_t par);  Computes the Poisson distribution function for (x,par). ;  ; Double_t PoissonI (Double_t x, Double_t par);  Computes the Discrete Poisson distribution function for (x,par). ;  ; Double_t Power (Double_t x, Double_t y);  Returns x raised to the power y. ;  ; Double_t Power (Double_t x, Int_t y);  Returns x raised to the power y. ;  ; LongDouble_t Power (Long64_t x, Long64_t y);  Returns x raised to the power y. ;  ; LongDouble_t Power (LongDouble_t x, Long64_t y);  Returns x raised to the power y. ;  ; LongDouble_t Power (LongDouble_t x, LongDouble_t y);  Returns x raised to the power y. ;  ; Double_t Prob (Double_t chi2, Int_t ndf);  Computation of the probability for a certain Chi-squared (chi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMath.html:16583,adapt,adapted,16583,doc/master/namespaceTMath.html,https://root.cern,https://root.cern/doc/master/namespaceTMath.html,1,['adapt'],['adapted']
Modifiability,"void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Polynomial. ;  ; double evaluate () const override;  Calculate and return value of polynomial. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyVar.html:47917,inherit,inherited,47917,doc/master/classRooPolyVar.html,https://root.cern,https://root.cern/doc/master/classRooPolyVar.html,1,['inherit'],['inherited']
Modifiability,"void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void FindMomentumLimits (TEveElement *el, Bool_t recurse=kTRUE);  Loop over track elements of argument el and find highest pT and p. ;  ; Double_t RoundMomentumLimit (Double_t x);  Round the momentum limit up to a nice value. ;  ; void SanitizeMinMaxCuts ();  Set Min/Max cuts so that they are within detected limits. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackList.html:34732,inherit,inherited,34732,doc/master/classTEveTrackList.html,https://root.cern,https://root.cern/doc/master/classTEveTrackList.html,1,['inherit'],['inherited']
Modifiability,"void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Draw list view container item. ;  ; void Init (const TGPicture *blpic, const TGPicture *slpic, FileStat_t &stat, EListViewMode viewMode);  Common initializer for file list view item. ;  ;  Protected Member Functions inherited from TGLVEntry; void DoRedraw () override;  Redraw list view item. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileItem.html:24506,inherit,inherited,24506,doc/master/classTGFileItem.html,https://root.cern,https://root.cern/doc/master/classTGFileItem.html,1,['inherit'],['inherited']
Modifiability,"void ReadSTLObjectWiseFastArray(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t /* vers */, UInt_t /* start */); 1361 {; 1362 TConfigSTL *config = (TConfigSTL*)conf;; 1363 // Idea: This needs to be unrolled, it currently calls the TGenCollectionStreamer ....; 1364 buf.ReadFastArray(addr,config->fNewClass,conf->fLength,(TMemberStreamer*)0,config->fOldClass);; 1365 }; 1366 INLINE_TEMPLATE_ARGS void ReadSTLObjectWiseStreamer(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t /* vers */, UInt_t /* start */); 1367 {; 1368 TConfigSTL *config = (TConfigSTL*)conf;; 1369 (*config->fStreamer)(buf,addr,conf->fLength);; 1370 }; 1371 INLINE_TEMPLATE_ARGS void ReadSTLObjectWiseFastArrayV2(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers, UInt_t start); 1372 {; 1373 // case of old TStreamerInfo; 1374 ; 1375 TConfigSTL *config = (TConfigSTL*)conf;; 1376 // Backward compatibility. Some TStreamerElement's where without; 1377 // Streamer but were not removed from element list; 1378 if (config->fIsSTLBase || vers == 0) {; 1379 buf.SetBufferOffset(start); //there is no byte count; 1380 }; 1381 // Idea: This needs to be unrolled, it currently calls the TGenCollectionStreamer ....; 1382 buf.ReadFastArray(addr,config->fNewClass,conf->fLength,(TMemberStreamer*)0,config->fOldClass);; 1383 }; 1384 INLINE_TEMPLATE_ARGS void ReadSTLObjectWiseStreamerV2(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers, UInt_t start); 1385 {; 1386 // case of old TStreamerInfo; 1387 ; 1388 TConfigSTL *config = (TConfigSTL*)conf;; 1389 // Backward compatibility. Some TStreamerElement's where without; 1390 // Streamer but were not removed from element list; 1391 if (config->fIsSTLBase || vers == 0) {; 1392 buf.SetBufferOffset(start); //there is no byte count; 1393 }; 1394 (*config->fStreamer)(buf,addr,conf->fLength);; 1395 }; 1396 ; 1397 template <void (*memberwise)(TBuffer&,void *,const TConfiguration*, Version_t),; 1398 void (*objectwise)(TBuffer&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:57484,config,config,57484,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"void SelectForMouseOver(); Run selection (optionally with on secondary selection) and emit; corresponding MouseOver() signals.; Protected method. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Process event of type 'event' - one of EEventType types,; occuring at window location px, py; This is provided for use when embedding GL viewer into pad. Bool_t HandleEvent(Event_t* event); Handle generic Event_t type 'event' - provided to catch focus changes; and terminate any interaction in viewer. Bool_t HandleFocusChange(Event_t* event); Handle generic Event_t type 'event' - provided to catch focus changes; and terminate any interaction in viewer. Bool_t HandleCrossing(Event_t* event); Handle generic Event_t type 'event' - provided to catch focus changes; and terminate any interaction in viewer. Bool_t HandleButton(Event_t* event); Handle mouse button 'event'. Bool_t HandleDoubleClick(Event_t* event); Handle mouse double click 'event'. Bool_t HandleConfigureNotify(Event_t* event); Handle configure notify 'event' - a window resize/movement. Bool_t HandleExpose(Event_t* event); Handle window expose 'event' - show. Bool_t HandleKey(Event_t* event); Handle keyboard 'event'. Bool_t HandleMotion(Event_t* event); Handle mouse motion 'event'. Bool_t Rotate(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Method to handle action TGLViewer::kDragCameraRotate. Bool_t HandleTimer(TTimer* t); If mouse delay timer times out emit signal. void StartMouseTimer(); Start mouse timer in single-shot mode. void StopMouseTimer(); Make sure mouse timers are not running. void ClearMouseOver(); Clear mouse-over state and emit mouse-over signals.; Current overlay element is also told the mouse has left. void Repaint(); Handle window expose 'event' - show. void PopupContextMenu(TGLPhysicalShape* pshp, Event_t* event, Int_t gx, Int_t gy); Popup context menu. void TriggerTooltip(const char* text); Trigger display of tooltip. void RemoveTooltip(); Hide the tooltip. void SetMouseOverSelectDela",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLEventHandler.html:13229,config,configure,13229,root/html528/TGLEventHandler.html,https://root.cern,https://root.cern/root/html528/TGLEventHandler.html,6,['config'],['configure']
Modifiability,"void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TAttMarker::SetMarkerSizevirtual void SetMarkerSize(Size_t msize=1)Set the marker size.Definition TAttMarker.h:45; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name)Stops Benchmark name and Prints results.Definition TBenchmark.cxx:155; TBenchmark::GetCpuTimeFloat_t GetCpuTime(const char *name)Returns Cpu time used by Benchmark name.Definition TBenchmark.cxx:117; TCanvasThe Canvas class.Definition TCanvas.h:23; TCanvas::Updatevoid Update() overrideUpdate canvas pad buffers.Definition TCanvas.cxx:2489; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPolyMarker3DA 3D polymarker.Definition TPolyMarker3D.h:33; TPolyMarker3D::SetPointvoid SetPoint(Int_t n, Double_t x, Double_t y, Double_t z)Set point n to x, y, z.Definition TPolyMarker3D.cxx:535; TPolyMarker3D::Drawvoid Draw(Option_t *option="""") overrideDraws 3-D polymarker with its current attributes.Definition TPolyMarker3D.cxx:242; TViewSee TView3D.Definition TView.h:25; TView::CreateViewstatic TView * CreateView(Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr)Create a concrete default 3-d view via the plug-in manager.Definition TView.cxx:27; TView::SetRangevirtual void SetRange(const Double_t *min, const Double_t *max)=0; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; tornadoDefinition tornado.py:1; AuthorRene Brun ; Definition in file tornado.C. tutorialsgraphicstornado.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tornado_8C.html:3586,plug-in,plug-in,3586,doc/master/tornado_8C.html,https://root.cern,https://root.cern/doc/master/tornado_8C.html,1,['plug-in'],['plug-in']
Modifiability,"void TCling::CodeComplete(const std::string& line, size_t& cursor,; 7671 std::vector<std::string>& completions); 7672{; 7673 fInterpreter->codeComplete(line, cursor, completions);; 7674}; 7675 ; 7676////////////////////////////////////////////////////////////////////////////////; 7677/// Get the interpreter value corresponding to the statement.; 7678int TCling::Evaluate(const char* code, TInterpreterValue& value); 7679{; 7680 auto V = reinterpret_cast<cling::Value*>(value.GetValAddr());; 7681 auto compRes = fInterpreter->evaluate(code, *V);; 7682 return compRes!=cling::Interpreter::kSuccess ? 0 : 1 ;; 7683}; 7684 ; 7685////////////////////////////////////////////////////////////////////////////////; 7686 ; 7687void TCling::RegisterTemporary(const TInterpreterValue& value); 7688{; 7689 using namespace cling;; 7690 const Value* V = reinterpret_cast<const Value*>(value.GetValAddr());; 7691 RegisterTemporary(*V);; 7692}; 7693 ; 7694////////////////////////////////////////////////////////////////////////////////; 7695/// Register value as a temporary, extending its lifetime to that of the; 7696/// interpreter. This is needed for TCling's compatibility interfaces; 7697/// returning long - the address of the temporary objects.; 7698/// As such, ""simple"" types don't need to be stored; they are returned by; 7699/// value; only pointers / references / objects need to be stored.; 7700 ; 7701void TCling::RegisterTemporary(const cling::Value& value); 7702{; 7703 if (value.isValid() && value.needsManagedAllocation()) {; 7704 R__LOCKGUARD(gInterpreterMutex);; 7705 fTemporaries->push_back(value);; 7706 }; 7707}; 7708 ; 7709////////////////////////////////////////////////////////////////////////////////; 7710/// If the interpreter encounters Name, check whether that is an object ROOT; 7711/// could retrieve. To not re-read objects from disk, cache the name/object; 7712/// pair for a given LookupCtx.; 7713 ; 7714TObject* TCling::GetObjectAddress(const char *Name, void *&LookupCtx); 77",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:300179,extend,extending,300179,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['extend'],['extending']
Modifiability,"void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooImproperIntegrator1D&operator=(const RooImproperIntegrator1D&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; Bool_tRooAbsIntegrator::printEvalCounter() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); RooImproperIntegrator1D(); RooImproperIntegrator1D(const RooAbsFunc& function); RooImproperIntegrator1D(const RooImproperIntegrator1D&); RooImproperIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); RooImproperIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Bool_tsetLimits(Double_t* xmin, Double_t* xmax); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsIntegrator::setPrintEvalCounter(Bool_t value); virtual voidTObject::SetUniqueID(UInt_t uid); virtual Bool_tsetUseIntegrandLimits(Bool_t flag); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooImproperIntegrator1D.html:4823,config,config,4823,root/html602/RooImproperIntegrator1D.html,https://root.cern,https://root.cern/root/html602/RooImproperIntegrator1D.html,2,['config'],['config']
Modifiability,"voidGradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(); ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(const ROOT::Math::IBaseFunctionMultiDim&); ROOT::Math::IGradientFunctionMultiDimROOT::Math::IGradientFunctionMultiDim::IGradientFunctionMultiDim(); ROOT::Math::IGradientFunctionMultiDimROOT::Math::IGradientFunctionMultiDim::IGradientFunctionMultiDim(const ROOT::Math::IGradientFunctionMultiDim&); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(const ROOT::Math::IGradientMultiDim&); boolIsWeighted() const; virtual const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&ModelFunction() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const ROOT::Fit::BinData& data, const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = true); virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeights(); voidUseSumOfWeightSquare(bool on = true).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html:3353,extend,extended,3353,root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,1,['extend'],['extended']
Modifiability,"voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEntryList*fElist; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEntryList(); class destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofDrawEntryList.html:6838,variab,variability,6838,root/html528/TProofDrawEntryList.html,https://root.cern,https://root.cern/root/html528/TProofDrawEntryList.html,1,['variab'],['variability']
Modifiability,"voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voiddumpFormula(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(UInt_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGenericPdf.html:10914,extend,extendMode,10914,root/html528/RooGenericPdf.html,https://root.cern,https://root.cern/root/html528/RooGenericPdf.html,2,['extend'],['extendMode']
Modifiability,"voidTObject::MakeZombie(); voidTBranch::ReadLeaves0Impl(TBuffer& b); voidTBranch::ReadLeaves1Impl(TBuffer& b); voidTBranch::ReadLeaves2Impl(TBuffer& b); voidTBranch::ReadLeavesImpl(TBuffer& b); voidTBranch::SetSkipZip(Bool_t skip = kTRUE); Int_tTBranch::WriteBasket(TBasket* basket, Int_t where). Data Members; public:. enum TBranch::EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TStringfBlockNameHbook block name; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tTBranch::fCompressCompression level and algorithm; TBasket*TBranch::fCurrentBasket! Pointer to the current basket.; TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; G__p2memfuncTBranch::fFillLeaves! Pointer to the FillLeaves implementation to use. ; Style_tTAttFill::fF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookBranch.html:10529,variab,variable,10529,root/html532/THbookBranch.html,https://root.cern,https://root.cern/root/html532/THbookBranch.html,1,['variab'],['variable']
Modifiability,"voidTObject::MakeZombie(); voidTBranch::ReadLeaves0Impl(TBuffer& b); voidTBranch::ReadLeaves1Impl(TBuffer& b); voidTBranch::ReadLeaves2Impl(TBuffer& b); voidTBranch::ReadLeavesImpl(TBuffer& b); voidTBranch::SetSkipZip(Bool_t skip = kTRUE); Int_tTBranch::WriteBasket(TBasket* basket, Int_t where). Data Members; public:. enum TBranch::EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TStringfBlockNameHbook block name; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tTBranch::fCompressCompression level and algorithm; TBasket*TBranch::fCurrentBasket! Pointer to the current basket.; TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Long64_tTBranch::fFirstBasketEntry! First entry in the curre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THbookBranch.html:10478,variab,variable,10478,root/html530/THbookBranch.html,https://root.cern,https://root.cern/root/html530/THbookBranch.html,1,['variab'],['variable']
Modifiability,"voidTObject::MakeZombie(); voidTBranch::ReadLeaves0Impl(TBuffer& b); voidTBranch::ReadLeaves1Impl(TBuffer& b); voidTBranch::ReadLeaves2Impl(TBuffer& b); voidTBranch::ReadLeavesImpl(TBuffer& b); voidTBranch::SetSkipZip(Bool_t skip = kTRUE); Int_tTBranch::WriteBasket(TBasket* basket, Int_t where). Data Members; public:. enum TBranch::EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Length of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TStringfBlockNameHbook block name; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tTBranch::fCompressCompression level and algorithm; TBasket*TBranch::fCurrentBasket! Pointer to the current basket.; TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; G__p2memfuncTBranch::fFillLeaves! Pointer to the FillLeaves implementation to use. ; Style_tTAttFill::fF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THbookBranch.html:10621,variab,variable,10621,root/html534/THbookBranch.html,https://root.cern,https://root.cern/root/html534/THbookBranch.html,1,['variab'],['variable']
Modifiability,"voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidsetAlwaysStartFromMin(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProfileLL.html:23520,config,config,23520,root/html532/RooProfileLL.html,https://root.cern,https://root.cern/root/html532/RooProfileLL.html,1,['config'],['config']
Modifiability,"void Clicked ();  ; TGButtonGroup * GetGroup () const;  ; GContext_t GetNormGC () const;  ; virtual EButtonState GetState () const;  ; virtual UInt_t GetStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual void SetStyle (UInt_t newstyle);  Set the button style (modern or classic). ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=400);  Set tool tip text associated with this button. ;  ; virtual void SetUserData (void *userData);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle (Bool_t emit=kFALSE);  ; virtual void Toggled (Bool_t on);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorSelect.html:7667,inherit,inherited,7667,doc/master/classTGColorSelect.html,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html,1,['inherit'],['inherited']
Modifiability,"void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy mean;  ; RooRealProxy sigma;  ; RooRealProxy width;  ; RooRealProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVoigtian.html:68991,inherit,inherited,68991,doc/master/classRooVoigtian.html,https://root.cern,https://root.cern/doc/master/classRooVoigtian.html,1,['inherit'],['inherited']
Modifiability,"void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  . Static Protected Member Functions; static TEveGeoShape * SubImportShapeExtract (TEveGeoShapeExtract *gse, TEveElement *parent);  Recursive version for importing a shape extract tree. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . Protected Attributes; TGeoCompositeShape * fCompositeShape;  ; Int_t fNSegments;  ; TGeoShape * fShape;  ;  Protected Attributes inherited from TEveShape; Bool_t fDrawFrame;  ; Color_t fFillColor;  ; Bool_t fHighlightFrame;  ; Color_t fLineColor;  ; Float_t fLineWidth;  ; Bool_t fMiniFrame;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Col",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoShape.html:34879,inherit,inherited,34879,doc/master/classTEveGeoShape.html,https://root.cern,https://root.cern/doc/master/classTEveGeoShape.html,1,['inherit'],['inherited']
Modifiability,"void FillWithRandomValues (std::vector< Double_t > &parameters);  random starting parameters ;  ; Double_t GenerateMaxTemperature (std::vector< Double_t > &parameters);  maximum temperature ;  ; std::vector< Double_t > GenerateNeighbour (std::vector< Double_t > &parameters, Double_t currentTemperature);  generate adjacent parameters ;  ; void GenerateNeighbour (std::vector< Double_t > &parameters, std::vector< Double_t > &oldParameters, Double_t currentTemperature);  generate adjacent parameters ;  ; void GenerateNewTemperature (Double_t &currentTemperature, Int_t Iter);  generate new temperature ;  ; MsgLogger & Log () const;  ; void ReWriteParameters (std::vector< Double_t > &from, std::vector< Double_t > &to);  copy parameters ;  ; void SetDefaultScale ();  setting of default scale ;  ; Bool_t ShouldGoIn (Double_t currentFit, Double_t localFit, Double_t currentTemperature);  result checker ;  . Private Attributes; Double_t fAdaptiveSpeed;  how fast temperature change in adaptive (in adaptive two variables describe the change of temperature, but fAdaptiveSpeed should be 1.0 and its not recommended to change it) ;  ; Double_t fEps;  epsilon ;  ; bool * fExitFromTraining = nullptr;  ; IFitterTarget & fFitterTarget;  the fitter target ;  ; Double_t fInitialTemperature;  initial temperature ;  ; UInt_t * fIPyCurrentIter = nullptr;  ; enum TMVA::SimulatedAnnealing::EKernelTemperature fKernelTemperature;  ; MsgLogger * fLogger;  ! message logger ;  ; Int_t fMaxCalls;  maximum number of minimisation calls ;  ; Double_t fMinTemperature;  minimum temperature ;  ; Double_t fProgress;  ; TRandom * fRandom;  random generator ;  ; const std::vector< TMVA::Interval * > & fRanges;  parameter ranges ;  ; Double_t fTemperatureAdaptiveStep;  used to calculate InitialTemperature if fUseDefaultTemperature ;  ; Double_t fTemperatureScale;  how fast temperature change ;  ; Bool_t fUseDefaultScale;  if TRUE, SA calculates its own TemperatureScale ;  ; Bool_t fUseDefaultTemperature;  if T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealing.html:2820,adapt,adaptive,2820,doc/master/classTMVA_1_1SimulatedAnnealing.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealing.html,3,"['adapt', 'variab']","['adaptive', 'variables']"
Modifiability,"void InvalidateUsersCellIdCache ();  Invalidate cell ids cache on back ptr references. ;  ; void PrintCellsSelected ();  Print selected cells info. ;  ; void ProcessSelection (vCellId_t &sel_cells, TGLSelectRecord &rec);  Process newly selected cells with given select-record. ;  ; SliceInfo_t & RefSliceInfo (Int_t s);  ; virtual void SetEps (Float_t eps);  ; virtual void SetEtaBins (TAxis *ax);  ; virtual void SetPhiBins (TAxis *ax);  ; void SetSliceColor (Int_t slice, Color_t col);  Set color for given slice. ;  ; void SetSliceThreshold (Int_t slice, Float_t threshold);  Set threshold for given slice. ;  ; void SetSliceTransparency (Int_t slice, Char_t t);  Set transparency for given slice. ;  ; void SetWrapTwoPi (Bool_t w);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnHighlighted () override;  Virtual method TEveElement::UnHighlighted. ;  ; void UnSelected () override;  Virtual method TEveElement::UnSelect. ;  ;  Public Member Functions inherited from TEveElement;  TEveElement ();  Default constructor. ;  ;  TEveElement (Color_t &main_color);  Constructor. ;  ;  TEveElement (const TEveElement &e);  Copy constructor. ;  ; virtual ~TEveElement ();  Destructor. ;  ; virtual Bool_t AcceptElement (TEveElement *el);  Check if el can be added to this element. ;  ; virtual void AddElement (TEveElement *el);  Add el to the list of children. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TEveElement *parent);  Add this render element into ltree to all items belonging to parent. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TGListTreeItem *parent_lti);  Add this element into ltree to an already existing item parent_lti. ;  ; virtual TGListTreeItem * AddIntoListTrees (TEveElement *parent);  Add this render element into all list-trees and all items belonging to parent. ;  ; virtual void AddParent (TEveElement *re);  Add re into the list parents. ;  ; virtual void AddStamp (UChar_t bits);  Add (bitwise or) give",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloDataHist.html:3670,inherit,inherited,3670,doc/master/classTEveCaloDataHist.html,https://root.cern,https://root.cern/doc/master/classTEveCaloDataHist.html,2,['inherit'],['inherited']
Modifiability,void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGProgressBar; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHProgressBar.html:21060,inherit,inherited,21060,doc/master/classTGHProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGHProgressBar.html,2,['inherit'],['inherited']
Modifiability,"void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveSecondarySelectable;  TEveSecondarySelectable ();  Constructor. ;  ; virtual ~TEveSecondarySelectable ();  ; Bool_t GetAlwaysSecSelect () const;  ; void ProcessGLSelection (TGLSelectRecord &rec);  Process secondary GL selection and populate selected set accordingly. ;  ; const SelectionSet_t & RefHighlightedSet () const;  ; const SelectionSet_t & RefSelectedSet () const;  ; void SetAlwaysSecSelect (Bool_t f);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveDigitSet; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBoxSet.html:35593,inherit,inherited,35593,doc/master/classTEveBoxSet.html,https://root.cern,https://root.cern/doc/master/classTEveBoxSet.html,2,['inherit'],['inherited']
Modifiability,"void Reset (void);  Reset the method, as if it had just been instantiated (forget all training etc.). ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Train (void);  Call the Optimizer with the set of parameters and ranges that are meant to be tuned. ;  ; void WriteMonitoringHistosToFile (void) const;  write special monitoring histograms to file dummy implementation here --------------— ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () const;  ; const Event * GetEvent (const TMVA::Event *ev) const;  ; const Event * GetEvent (Long64_t ievt) const;  ; const Event * GetEvent (Long64_t ievt, Types::ETreeType type) const;  ; const std::vector< TMVA::Event * > & GetEventCollection (Types::ETreeType type);  returns the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCrossValidation.html:2416,inherit,inherited,2416,doc/master/classTMVA_1_1MethodCrossValidation.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCrossValidation.html,1,['inherit'],['inherited']
Modifiability,"void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TStrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMaterial.html:11218,inherit,inherited,11218,doc/master/classTMaterial.html,https://root.cern,https://root.cern/doc/master/classTMaterial.html,2,['inherit'],['inherited']
Modifiability,"void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:16268,inherit,inherited,16268,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,2,['inherit'],['inherited']
Modifiability,"void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionFrame.html:14643,inherit,inherited,14643,doc/master/classTSessionFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionFrame.html,4,['inherit'],['inherited']
Modifiability,"void SetDefaultFFT (const char *name="""");  static: set name of default fft ;  ; static void SetTransform (TVirtualFFT *fft);  static: set the current transfrom to parameter ;  ; static TVirtualFFT * SineCosine (Int_t ndim, Int_t *n, Int_t *r2rkind, Option_t *option);  Returns a pointer to a sine or cosine transform of requested size and kind. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fSign;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTComplex.html:13561,inherit,inherited,13561,doc/master/classTFFTComplex.html,https://root.cern,https://root.cern/doc/master/classTFFTComplex.html,1,['inherit'],['inherited']
Modifiability,"void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  Delete data pointer m, if it was assigned on the heap. ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  Return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixT.h>. Inheritance diagram for TMatrixT< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [lege",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixT.html:26002,inherit,inherited,26002,doc/master/classTMatrixT.html,https://root.cern,https://root.cern/doc/master/classTMatrixT.html,1,['inherit'],['inherited']
Modifiability,"void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TGeoBoolNode * fNode;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCompositeShape.html:30824,inherit,inherited,30824,doc/master/classTGeoCompositeShape.html,https://root.cern,https://root.cern/doc/master/classTGeoCompositeShape.html,1,['inherit'],['inherited']
Modifiability,"void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static bool UseStaticMinuit (bool on=true);  static function to switch on/off usage of static global TMinuit instance (gMinuit) By default it is used (i.e. ;  . Protected Member Functions; bool CheckMinuitInstance () const;  check TMinuit instance ;  ; bool CheckVarIndex (unsigned int ivar) const;  check parameter ;  ; void DoClear ();  reset ;  ; void DoReleaseFixParameter (int ivar);  release a parameter that is fixed when it is redefined ;  ; void InitTMinuit (int ndim);  initialize the TMinuit instance ;  ; void RetrieveErrorMatrix ();  retrieve error matrix from TMinuit ;  ; void RetrieveParams ();  retrieve minimum param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:9821,variab,variables,9821,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,2,['variab'],['variables']
Modifiability,"void SetupCameras (Bool_t reset);  Setup cameras for current bounding box. ;  ; void SetupClipObject () override;  allow simple guide axes labels to be scaled relative to scene units ;  ; void SetViewport (const TGLRect &vp);  ; void SetViewport (Int_t x, Int_t y, Int_t width, Int_t height);  Set viewer viewport (window area) with bottom/left at (x,y), with dimensions 'width'/'height'. ;  ; void SwapBuffers () const;  Swap GL buffers. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TGLViewerBase; SceneInfoList_i FindScene (TGLSceneBase *scene);  Find scene-info corresponding to scene. ;  ; void SubRenderScenes (SubRender_foo render_foo);  Call sub-rendering function render_foo on all currently visible scenes. ;  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGLAutoRotator * fAutoRotator;  ; Bool_t fAxesDepthTest;  axes type ;  ; Int_t fAxesType;  smooth line edge rendering ;  ; TGLCameraOverlay * fCameraOverlay;  reference marker on? ;  ; TGLClipSet * fClipSet;  ; TContextMenu * fContextMenu;  external pad - remove replace with signal ;  ; TGLCamera * fCurrentCamera;  ; TGLOverlayElement * fCurrentOvlElm;  ; TGLSelectRecord fCurrentSelRec;  ; TGLColorSet fDarkColorSet;  viewport - drawn area ;  ; Bool_t fDebugMode;  cache logicals during scene rebuilds ;  ; EDragAction fDragAction;  ; Bool_t fDrawCameraCenter;  reference position ;  ; TGEventHandler * fEventHandler;  select record from last overlay select ;  ; Float_t fFader;  default file-name for SavePicture() ;  ; TGedEditor * fGedEditor;  event handler ;  ; TGLContextIdentity * fGLCtxId;  for embedded gl viewer ;  ; Int_t fGLDevice;  ; TGLWidget * fGLWidget;  ; Bool_t fIgnoreSizesOnUpdate;  f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLViewer.html:32002,inherit,inherited,32002,doc/master/classTGLViewer.html,https://root.cern,https://root.cern/doc/master/classTGLViewer.html,1,['inherit'],['inherited']
Modifiability,"void StackTrace ();  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixSystem.html:19479,variab,variable,19479,doc/master/classTDavixSystem.html,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html,3,['variab'],['variable']
Modifiability,"void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void configure (const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build This method parses any SplitParam and SplitParamComstrained argument in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::list< std::string > _miStateNameList;  ; std::map< std::string, std::pair< std::list< std::string >, std::string > > _paramSplitMap;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class BuildConfig;  ; class MultiBuildConfig;  ; class RooSimWSTool;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html:9505,config,configure,9505,doc/master/classRooSimWSTool_1_1SplitRule.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html,1,['config'],['configure']
Modifiability,"void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWin32ProxyBase;  TGWin32ProxyBase ();  ctor ;  ; virtual ~TGWin32ProxyBase ();  dtor ;  ; virtual void ExecuteCallBack (Bool_t sync);  Executes all batched callbacks and the latest callb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:44487,inherit,inherited,44487,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooCFunction3Map< VO, VI1, VI2, VI3 > & fmap ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef VO(* func_t) (VI1, VI2, VI3);  . Static Private Member Functions; static VO dummyFunction (VI1, VI2, VI3);  . Private Attributes; func_t _ptr;  Pointer to embedded function. ;  . Static Private Attributes; static RooCFunction3Map< VO, VI1, VI2, VI3 > * _fmap = nullptr;  Pointer to embedded function. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction3Ref.html:8784,inherit,inherited,8784,doc/master/classRooCFunction3Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction3Ref.html,1,['inherit'],['inherited']
Modifiability,"void Update (TGLBEntry *);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBEntry.html:2149,inherit,inheritance,2149,doc/master/classTGLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGLBEntry.html,1,['inherit'],['inheritance']
Modifiability,"void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TStreamerElement * GetCurrentElement ();  static function returning a pointer to the current TStreamerElement fgElement points to the current TStreamerElement being read in ReadBuffer ;  ;  Static Public Member Functions inherited from TVirtualStreamerInfo; static Bool_t CanDelete ();  static function returning true if ReadBuffer can delete object ;  ; static Bool_t CanOptimize ();  static function returning true if optimization can be on ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualStreamerInfo * Factory ();  Static function returning a pointer to a new TVirtualStreamerInfo object. ;  ; static TStreamerBasicType * GetElementCounter (const char *countName, TClass *cl);  Get pointer to a TStreamerBasicType in TClass *cl static function. ;  ; static const char * GetElementCounterStart (const char *dmTitle);  Given a comment/title declaring an array counter, for example: ;  ; static Bool_t GetStreamMemberWise ();  Return whether the TStreamerInfos will save the collections in ""member-wise"" order whenever possible. ;  ; static void Optimize (Bool_t opt=kTRUE);  This is a static function. ;  ; static void SetCanDelete (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo.html:23264,inherit,inherited,23264,doc/master/classTStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html,1,['inherit'],['inherited']
Modifiability,"void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::string MakeTextOper (const char *str);  Create text operation If text include special symbols - use simple hex coding. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TArrayF fBuf;  array of points for all operations ;  ; TAttFill fLastFill;  ! last fill attributes ;  ; TAttLine fLastLine;  ! last line attributes ;  ; TAttMarker fLastMarker;  ! last marker attributes ;  ; std::string fOper;  list of operations, separated by semicolons ;  ; Int_t fSize {0};  ! filled buffer size ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPainting.html:9865,inherit,inherited,9865,doc/master/classTWebPainting.html,https://root.cern,https://root.cern/doc/master/classTWebPainting.html,1,['inherit'],['inherited']
Modifiability,"void endTrainCycle (double);  action to be done when the training cycle is ended (e.g. ;  ; void setResultComputation (std::string _fileNameNetConfig, std::string _fileNameResult, std::vector< Pattern > *_resultPatternContainer);  preparation for monitoring output ;  ; void setWeightSums (double sumOfSigWeights, double sumOfBkgWeights);  set the weight sums to be scaled to (preparations for monitoring output) ;  ; virtual void startTestCycle ();  action to be done when the test cycle is started (e.g. ;  ; void startTrainCycle ();  action to be done when the training cycle is started (e.g. ;  ; void testIteration ();  callback for monitoring and loggging ;  ; void testSample (double error, double output, double target, double weight);  action to be done after the computation of a test sample (e.g. ;  ;  Public Member Functions inherited from TMVA::DNN::Settings;  Settings (TString name, size_t _convergenceSteps=15, size_t _batchSize=10, size_t _testRepetitions=7, double _factorWeightDecay=1e-5, TMVA::DNN::EnumRegularization _regularization=TMVA::DNN::EnumRegularization::NONE, MinimizerType _eMinimizerType=MinimizerType::fSteepest, double _learningRate=1e-5, double _momentum=0.3, int _repetitions=3, bool _multithreading=true);  c'tor ;  ; virtual ~Settings ();  d'tor ;  ; void addPoint (std::string histoName, double x);  for monitoring ;  ; void addPoint (std::string histoName, double x, double y);  for monitoring ;  ; size_t batchSize () const;  mini-batch size ;  ; void clear (std::string histoName);  for monitoring ;  ; virtual void computeResult (const Net &, std::vector< double > &);  callback for monitoring and logging ;  ; size_t convergenceCount () const;  returns the current convergence count ;  ; size_t convergenceSteps () const;  how many steps until training is deemed to have converged ;  ; void create (std::string histoName, int bins, double min, double max);  for monitoring ;  ; void create (std::string histoName, int bins, double min, double max, int bin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html:1896,inherit,inherited,1896,doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,1,['inherit'],['inherited']
Modifiability,"void setFitConfig (const char *pdfName, const char *obsName, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={});  ; void setGenConfig (const char *pdfName, const char *obsName, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={});  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsStudy;  RooAbsStudy ()=default;  ;  RooAbsStudy (const char *name, const char *title);  Constructor. ;  ;  RooAbsStudy (const RooAbsStudy &other);  Copy constructor. ;  ;  ~RooAbsStudy () override;  Destructor. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; RooLinkedList * detailedData ();  ; virtual void dump ();  ; void releaseDetailData ();  ; void storeDetailedOutput (bool flag);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; RooDataSet * summaryData ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenFitStudy.html:2329,inherit,inherited,2329,doc/master/classRooGenFitStudy.html,https://root.cern,https://root.cern/doc/master/classRooGenFitStudy.html,1,['inherit'],['inherited']
Modifiability,"void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double _eps = 1e-7;  Precision. ;  ; std::unique_ptr< RooFunctor > _ftor;  ! Functor binding of RooAbsReal ;  ; RooRealProxy _func;  Input function. ;  ; RooSetProxy _nset;  Normalization set (optional) ;  ; Int_t _order = 1;  Derivation order. ;  ; std::unique_ptr< ROOT::Math::RichardsonDerivator > _rd;  ! Derivator ;  ; RooRealProxy _x;  Observable. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDerivative.html:55130,inherit,inherited,55130,doc/master/classRooDerivative.html,https://root.cern,https://root.cern/doc/master/classRooDerivative.html,1,['inherit'],['inherited']
Modifiability,"void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _eff;  Efficiency function. ;  ; RooRealProxy _pdf;  Probability Density function. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffProd.html:68222,config,configuration,68222,doc/master/classRooEffProd.html,https://root.cern,https://root.cern/doc/master/classRooEffProd.html,1,['config'],['configuration']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Attributes; RooListProxy _actualVars;  ; std::vector< RooFit::SuperFloat > _coefficients;  ; RooArgSet * _nset;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCount",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearCombination.html:47332,inherit,inherited,47332,doc/master/classRooLinearCombination.html,https://root.cern,https://root.cern/doc/master/classRooLinearCombination.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Attributes; bool _divideByBinWidth {false};  ; RooTemplateProxy< const RooHistFunc > _histFunc;  . Static Private Attributes; static bool _enabled = true;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinWidthFunction.html:47866,inherit,inherited,47866,doc/master/classRooBinWidthFunction.html,https://root.cern,https://root.cern/doc/master/classRooBinWidthFunction.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Bernstein distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void fillBuffer () const;  ; double xmax () const;  ; double xmin () const;  . Private Attributes; std::vector< double > _buffer;  ! ;  ; RooListProxy _coefList;  ; std::string _refRangeName;  ; RooTemplateProxy< RooAbsRealLValue > _x;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeE,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBernstein.html:59316,inherit,inherited,59316,doc/master/classRooBernstein.html,https://root.cern,https://root.cern/doc/master/classRooBernstein.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Chebychev. ;  ; double evalAnaInt (const double a, const double b) const;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  . Private Attributes; RooListProxy _coefList;  ; TNamed * _refRangeName = nullptr;  ; RooRealProxy _x;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:58592,inherit,inherited,58592,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of ChiSquare distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  . Private Attributes; RooRealProxy _ndof;  ; RooRealProxy _x;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChiSquarePdf.html:58264,inherit,inherited,58264,doc/master/classRooChiSquarePdf.html,https://root.cern,https://root.cern/doc/master/classRooChiSquarePdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; double calculate (const RooProdPdf::CacheElem &cache, bool verbose=false) const;  Calculate running product of pdfs terms, using the supplied normalization set in 'normSetList' for each component. ;  ; CacheMode canNodeBeCached () const override;  ; std::unique_ptr< CacheElem > createCacheElem (const RooArgSet *nset, const RooArgSet *iset, const char *isetRangeName=nullptr) const;  ; void doEvalImpl (RooAbsArg const *caller, const RooProdPdf::CacheElem &cache, RooFit::EvalContext &) const;  Evaluate product of PDFs in batch mode. ;  ; double evaluate () const override;  Calculate current value of object. ;  ; void fact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:61806,inherit,inherited,61806,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  . Private Attributes; RooRealProxy _func;  ; bool _selfNormalized = false;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWrapperPdf.html:58811,inherit,inherited,58811,doc/master/classRooWrapperPdf.html,https://root.cern,https://root.cern/doc/master/classRooWrapperPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; double evaluate () const override;  Note: P_0^0 = 1, so P_l^m = P_l^m P_0^0. ;  . Private Attributes; double _n;  ; RooRealProxy _phi;  ; int _sgn1;  ; int _sgn2;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpHarmonic.html:48928,inherit,inherited,48928,doc/master/classRooSpHarmonic.html,https://root.cern,https://root.cern/doc/master/classRooSpHarmonic.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Types; enum  AnaInt_t { ;   kMass = 1; , kMean; , kLambda; , kGamma; , ;   kDelta. };  . Private Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of the Johnson distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  . Private Attributes; RooRealProxy _delta;  ; RooRealProxy _gamma;  ; RooRealProxy _lambda;  ; RooRealProxy _mass;  ; double _massThreshold {-1.E300};  ; RooRealProxy _mu;  . Additional Inherited Members;  Public Types inherited from RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJohnson.html:58990,inherit,inherited,58990,doc/master/classRooJohnson.html,https://root.cern,https://root.cern/doc/master/classRooJohnson.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; Int_t _basisB;  ; Int_t _basisCos;  ; Int_t _basisCosh;  ; Int_t _basisSin;  ; Int_t _basisSinh;  ; RooRealProxy _dgamma;  ; RooRealProxy _dm;  ; RooRealProxy _f0;  ; RooRealProxy _f1;  ; RooRealProxy _f2;  ; RooRealProxy _f3;  ; RooRealProxy _t;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basisFunc) convolution obj,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBDecay.html:63052,inherit,inherited,63052,doc/master/classRooBDecay.html,https://root.cern,https://root.cern/doc/master/classRooBDecay.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; Int_t _basisCos;  ; Int_t _basisExp;  ; RooRealProxy _delMistag;  ; RooRealProxy _dm;  ; double _genFlavFrac;  do not persist ;  ; double _genFlavFracMix;  ; double _genFlavFracUnmix;  ; double _genMixFrac;  ; RooRealProxy _mistag;  ; RooCategoryProxy _mixState;  ; RooRealProxy _t;  ; RooCategoryProxy _tagFlav;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooLi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:63080,inherit,inherited,63080,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; Int_t _basisExp;  ; RooRealProxy _t;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basisFunc) convolution objects. ;  ; RooRealProxy _convVar;  Convolution variable. ;  ; bool _isCopy;  ; RooRealProxy _model;  Original model. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDecay.html:63701,inherit,inherited,63701,doc/master/classRooDecay.html,https://root.cern,https://root.cern/doc/master/classRooDecay.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; Int_t _coefIdx;  Index code of the coefficient. ;  ; RooRealProxy _convPdf;  RooAbsAnaConv object implementing our coefficient. ;  ; RooSetProxy _varSet;  Not used anymore? ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvCoefVar.html:47334,inherit,inherited,47334,doc/master/classRooConvCoefVar.html,https://root.cern,https://root.cern/doc/master/classRooConvCoefVar.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooListProxy _coefList;  List of coefficients. ;  ; bool _doFloor = false;  Introduce floor at zero in pdf. ;  ; RooListProxy _funcList;  List of component FUNCs. ;  ; bool _haveLastCoef;  The integration cache manager. ;  ; bool _haveWarned {false};  ! ;  ; RooObjCacheManager _normIntMgr;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _pl,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:48722,inherit,inherited,48722,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,2,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooListProxy _coefList;  List of coefficients. ;  ; bool _doFloor = false;  Introduce floor at zero in pdf. ;  ; bool _extended;  Allow use as extended p.d.f. ;  ; RooListProxy _funcList;  List of component FUNCs. ;  ; bool _haveWarned {false};  ! ;  ; RooObjCacheManager _normIntMgr;  ! The integration cache manager ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; R,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:61929,inherit,inherited,61929,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,2,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooRealProxy _absLambda;  ; RooRealProxy _argLambda;  ; RooRealProxy _avgMistag;  ; Int_t _basisCos;  ; Int_t _basisExp;  ; Int_t _basisSin;  ; RooRealProxy _CPeigenval;  ; RooRealProxy _delMistag;  ; RooRealProxy _dm;  ; RooRealProxy _effRatio;  ; double _genB0Frac;  ; RooRealProxy _t;  ; RooCategoryProxy _tag;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooL,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPEffDecay.html:63101,inherit,inherited,63101,doc/master/classRooBCPEffDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPEffDecay.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooRealProxy _acp;  ; RooRealProxy _avgC;  ; RooRealProxy _avgS;  ; RooRealProxy _avgW;  ; Int_t _basisCos;  ; Int_t _basisExp;  ; Int_t _basisSin;  ; RooRealProxy _correctQ;  ; RooRealProxy _delC;  ; RooRealProxy _delS;  ; RooRealProxy _delW;  ; RooRealProxy _dm;  ; double _genB0Frac;  ; double _genRhoPlusFrac;  ; RooCategoryProxy _rhoQ;  ; RooRealProxy _t;  ; RooCategoryProxy _tag;  ; RooRealProxy _tau;  ; DecayType _type;  ; RooRealProxy _wQ;  dummy mischarge (must be set to zero!) ;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _c,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNonCPEigenDecay.html:63952,inherit,inherited,63952,doc/master/classRooNonCPEigenDecay.html,https://root.cern,https://root.cern/doc/master/classRooNonCPEigenDecay.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooRealProxy _avgC;  ; RooRealProxy _avgMistag;  ; RooRealProxy _avgS;  ; Int_t _basisCos;  ; Int_t _basisExp;  ; Int_t _basisSin;  ; RooRealProxy _delMistag;  ; RooRealProxy _dm;  ; double _genB0Frac;  ; RooRealProxy _mu;  ; RooRealProxy _t;  ; RooCategoryProxy _tag;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPGenDecay.html:63020,inherit,inherited,63020,doc/master/classRooBCPGenDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPGenDecay.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooRealProxy _func;  Input function. ;  ; RooRealProxy _mean;  Mean (if calculated for central moment) ;  ; RooSetProxy _nset;  Normalization set (optional) ;  ; Int_t _order = 1;  Moment order. ;  ; Int_t _takeRoot = false;  Return n-order root of moment. ;  ; RooRealProxy _x;  Observable. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsMoment.html:47126,inherit,inherited,47126,doc/master/classRooAbsMoment.html,https://root.cern,https://root.cern/doc/master/classRooAbsMoment.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooRealProxy _n;  Number of expected events. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator confi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedTerm.html:58571,inherit,inherited,58571,doc/master/classRooExtendedTerm.html,https://root.cern,https://root.cern/doc/master/classRooExtendedTerm.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooTemplateProxy< RooAbsReal > _n;  Number of expected events. ;  ; RooTemplateProxy< RooAbsPdf > _pdf;  Input p.d.f. ;  ; const TNamed * _rangeName = nullptr;  Name of subset range. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendPdf.html:59224,inherit,inherited,59224,doc/master/classRooExtendPdf.html,https://root.cern,https://root.cern/doc/master/classRooExtendPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; AnaIntData & anaIntData (Int_t code) const;  Check if cache entry was previously created. ;  ; void decodeCode (Int_t code, std::vector< int > &map1, std::vector< int > &map2) const;  Decode analytical integration/generation code into index map of integrated/generated (map2) and non-integrated/generated observables (map1) ;  ; double evaluate () const override;  Do not persist. ;  ; GenData & genData (Int_t code) const;  WVE – CHECK THAT GENDATA IS VALID GIVEN CURRENT VALUES OF _MU. ;  ; void syncMuVec () const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiVarGaussian.html:59078,inherit,inherited,59078,doc/master/classRooMultiVarGaussian.html,https://root.cern,https://root.cern/doc/master/classRooMultiVarGaussian.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; Int_t addParamSet (const RooArgList &params);  ; void doEval (RooFit::EvalContext &) const override;  Find all bins corresponding to the values of the observables in evalData, and evaluate the associated parameters. ;  ; double evaluate () const override;  Find the bin corresponding to the current value of the observable, and evaluate the associated parameter. ;  ; Int_t getCurrentBin () const;  Get the index of the gamma parameter associated with the current bin. ;  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:49131,inherit,inherited,49131,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooAbsCategory & dummyBlindState () const;  Return reference to internal dummy RooCategory implementation blinding state switch. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Return value of object. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::Ownin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsHiddenReal.html:47944,inherit,inherited,47944,doc/master/classRooAbsHiddenReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsHiddenReal.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooAbsReal & cloneModel () const;  ; RooAbsReal & clonePdf () const;  ; RooRealVar & cloneVar () const;  ; void initialize () const;  One-time initialization of object. ;  ; void printCompactTreeHook (std::ostream &os, const char *indent="""") override;  Hook function to intercept printCompactTree() calls so that it can print out the content of its private cache in the print sequence. ;  ; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Intercept server redirects. Throw away cache, as figuring out redirections on the cache is an unsolva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:50165,inherit,inherited,50165,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooArgSet const & flattenedCatList () const;  Internal utility function to get a list of all category components for this RooSimultaneous. ;  ; void selectNormalization (const RooArgSet *depSet=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ;  ; void selectNormalizationRange (const char *rangeName=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ;  ;  Protected Member Functions inherited from RooAbsPdf;  Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:62771,inherit,inherited,62771,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ;  ; FuncCacheElem * createCache (const RooArgSet *nset) const override;  Interface function to create an internal cache object that ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:48567,inherit,inherited,48567,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:60029,inherit,inherited,60029,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  Observable to be cached for given choice of normalization. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  Parameters of the cache. ;  ; PdfCacheElem * createCache (const RooArgSet *nset) const override;  Create and return a derived MorphCacheElem. ;  ; double evaluate () const override;  Dummy. ;  ; void fillCacheObject (PdfCacheElem &cache) const override;  Fill the cache with the interpolated shape. ;  ; const char * inputBaseName () const override;  Return base name component for,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooIntegralMorph.html:64085,inherit,inherited,64085,doc/master/classRooIntegralMorph.html,https://root.cern,https://root.cern/doc/master/classRooIntegralMorph.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  Return observable in nset to be cached by RooAbsCachedPdf this is always the x observable that is integrated. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  Return the parameters of the cache created by RooAbsCachedPdf. ;  ; const char * binningName () const override;  ; FuncCacheElem * createCache (const RooArgSet *nset) const override;  Create custom cache element for running integral calculations. ;  ; double evaluate () const override;  Dummy function that is never called. ;  ; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumRunningInt.html:48654,inherit,inherited,48654,doc/master/classRooNumRunningInt.html,https://root.cern,https://root.cern/doc/master/classRooNumRunningInt.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  Return the observables to be cached given the normalization set nset. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  Return the parameters on which the cache depends given normalization set nset. ;  ; void calcParams ();  (Re)calculate effective parameters of this p.d.f. ;  ; PdfCacheElem * createCache (const RooArgSet *nset) const override;  Return specialized cache subclass for FFT calculations. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Need,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:67571,inherit,inherited,67571,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooNumConvolution & conv () const;  ; RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const override;  Return appropriate generator context for this convolved p.d.f. ;  ; void initialize () const;  One-time initialization of object. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvPdf.html:61058,inherit,inherited,61058,doc/master/classRooNumConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooNumConvPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool areIdentical (const RooDataHist &dh1, const RooDataHist &dh2);  ; double evaluate () const override;  Return the current value: The value of the bin enclosing the current coordinates of the observables, normalized by the histograms contents. ;  ; bool importWorkspaceHook (RooWorkspace &ws) override;  Check if our datahist is already in the workspace. ;  ; double totalVolume () const;  ; double totVolume () const;  Return the total volume spanned by the observables of the RooHistPdf. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistPdf.html:59577,inherit,inherited,59577,doc/master/classRooHistPdf.html,https://root.cern,https://root.cern/doc/master/classRooHistPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool areIdentical (const RooDataHist &dh1, const RooDataHist &dh2);  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Return the current value: The value of the bin enclosing the current coordinates of the dependents, normalized by the histograms contents. ;  ; bool importWorkspaceHook (RooWorkspace &ws) override;  Check if our datahist is already in the workspace. ;  ; void ioStreamerPass2 () override;  Schema evolution: if histObsList wasn't filled from persistence (v1) then fill it here. ;  ;  Protected Memb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:48696,inherit,inherited,48696,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgusBG.html:58660,inherit,inherited,58660,doc/master/classRooArgusBG.html,https://root.cern,https://root.cern/doc/master/classRooArgusBG.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute addition of PDFs in batches. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const override;  Return specialized context to efficiently generate toy events from RooAddPdfs return RooAbsPdf::genContext(vars,prototype,auxProto,verbose) ; // WVE DEBUG. ;  ; AddCacheElem * getProjCac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:62059,inherit,inherited,62059,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of BifurGauss distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBifurGauss.html:58231,inherit,inherited,58231,doc/master/classRooBifurGauss.html,https://root.cern,https://root.cern/doc/master/classRooBifurGauss.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of BreitWigner distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBreitWigner.html:58227,inherit,inherited,58227,doc/master/classRooBreitWigner.html,https://root.cern,https://root.cern/doc/master/classRooBreitWigner.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Bukin distribution. ;  ; double evaluate () const override;  Implementation. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBukinPdf.html:58451,inherit,inherited,58451,doc/master/classRooBukinPdf.html,https://root.cern,https://root.cern/doc/master/classRooBukinPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of D*-D0 mass difference distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDstD0BG.html:58375,inherit,inherited,58375,doc/master/classRooDstD0BG.html,https://root.cern,https://root.cern/doc/master/classRooDstD0BG.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of ExpPoly distribution. ;  ; double evaluate () const override;  Evaluation. ;  ; double evaluateLog () const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegacyExpPoly.html:58907,inherit,inherited,58907,doc/master/classRooLegacyExpPoly.html,https://root.cern,https://root.cern/doc/master/classRooLegacyExpPoly.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Exponential distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExponential.html:58536,inherit,inherited,58536,doc/master/classRooExponential.html,https://root.cern,https://root.cern/doc/master/classRooExponential.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Gamma PDF. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitTo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGamma.html:58964,inherit,inherited,58964,doc/master/classRooGamma.html,https://root.cern,https://root.cern/doc/master/classRooGamma.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Gaussian distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussian.html:58448,inherit,inherited,58448,doc/master/classRooGaussian.html,https://root.cern,https://root.cern/doc/master/classRooGaussian.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Landau distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLandau.html:58266,inherit,inherited,58266,doc/master/classRooLandau.html,https://root.cern,https://root.cern/doc/master/classRooLandau.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Lognormal distribution. ;  ; double evaluate () const override;  ln(k)<1 would correspond to sigma < 0 in the parameterization resulting by transforming a normal random variable in its standard parameterization to a lognormal random variable => treat ln(k) as -ln(k) for k<1 ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:58864,inherit,inherited,58864,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Novosibirsk distribution. ;  ; double evaluate () const override;  If tail=eta=0 the Belle distribution becomes gaussian. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNovosibirsk.html:58278,inherit,inherited,58278,doc/master/classRooNovosibirsk.html,https://root.cern,https://root.cern/doc/master/classRooNovosibirsk.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Polynomial. ;  ; double evaluate () const override;  Calculate and return value of polynomial. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyVar.html:47140,inherit,inherited,47140,doc/master/classRooPolyVar.html,https://root.cern,https://root.cern/doc/master/classRooPolyVar.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Polynomial. ;  ; double evaluate () const override;  do not persist ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolynomial.html:59060,inherit,inherited,59060,doc/master/classRooPolynomial.html,https://root.cern,https://root.cern/doc/master/classRooPolynomial.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Voigtian distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVoigtian.html:59231,inherit,inherited,59231,doc/master/classRooVoigtian.html,https://root.cern,https://root.cern/doc/master/classRooVoigtian.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of the Poisson distribution. ;  ; double evaluate () const override;  Implementation in terms of the TMath::Poisson() function. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsDat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPoisson.html:58469,inherit,inherited,58469,doc/master/classRooPoisson.html,https://root.cern,https://root.cern/doc/master/classRooPoisson.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Evaluate in batch mode. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRatio.html:46986,inherit,inherited,46986,doc/master/classRooRatio.html,https://root.cern,https://root.cern/doc/master/classRooRatio.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  do not persist ;  ; double evaluate () const override;  Evaluation. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPowerSum.html:58572,inherit,inherited,58572,doc/master/classRooPowerSum.html,https://root.cern,https://root.cern/doc/master/classRooPowerSum.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool isValidReal (double, bool) const override;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Propagate server change information to embedded RooFormula object. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormulaVar.html:49611,inherit,inherited,49611,doc/master/classRooFormulaVar.html,https://root.cern,https://root.cern/doc/master/classRooFormulaVar.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward redirectServers call to our basis function, which is not connected to either resolution model or the physics model. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsDat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooResolutionModel.html:61389,inherit,inherited,61389,doc/master/classRooResolutionModel.html,https://root.cern,https://root.cern/doc/master/classRooResolutionModel.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double ApproxErf (double arg) const;  ; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Crystal ball Shape distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCBShape.html:58158,inherit,inherited,58158,doc/master/classRooCBShape.html,https://root.cern,https://root.cern/doc/master/classRooCBShape.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double calculate (const RooArgList &partIntList) const;  The cache manager. ;  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Evaluate product of input functions. ;  ; Int_t getPartIntList (const RooArgSet *iset, const char *rangeName=nullptr) const;  Return list of (partial) integrals whose product defines the integral of this RooProduct over the observables in iset in range isetRange. ;  ; ProdMap * groupProductTerms (const RooArgSet &) const;  Group observables into subsets in which the product factorizes ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProduct.html:47506,inherit,inherited,47506,doc/master/classRooProduct.html,https://root.cern,https://root.cern/doc/master/classRooProduct.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return 'raw' unnormalized value of p.d.f. ;  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffProd.html:58566,inherit,inherited,58566,doc/master/classRooEffProd.html,https://root.cern,https://root.cern/doc/master/classRooEffProd.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return current value of self. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if norm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJeffreysPrior.html:59025,inherit,inherited,59025,doc/master/classRooJeffreysPrior.html,https://root.cern,https://root.cern/doc/master/classRooJeffreysPrior.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return current value of self. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Inte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddition.html:47523,inherit,inherited,47523,doc/master/classRooAddition.html,https://root.cern,https://root.cern/doc/master/classRooAddition.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return value of \( a_n * \prod_{i=0}^{n-1} (1 - a_i) \). ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRecursiveFraction.html:47302,inherit,inherited,47302,doc/master/classRooRecursiveFraction.html,https://root.cern,https://root.cern/doc/master/classRooRecursiveFraction.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return value of polynomial. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Intern",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html:48336,inherit,inherited,48336,doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,2,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate pull. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for cr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPullVar.html:47361,inherit,inherited,47361,doc/master/classRooPullVar.html,https://root.cern,https://root.cern/doc/master/classRooPullVar.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate the current unnormalized value of the PDF. ;  ; double getCoefNorm (Int_t coefIdx, const RooArgSet *nset, const TNamed *rangeName) const;  Returns the normalization integral value of the coefficient with number coefIdx over normalization set nset in range rangeName. ;  ; void makeCoefVarList (RooArgList &) const;  Build complete list of coefficient variables. ;  ; RooArgSet * parseIntegrationRequest (const RooArgSet &intSet, Int_t &coefCode, RooArgSet *analVars=nullptr) const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsAnaConvPdf.html:63144,inherit,inherited,63144,doc/master/classRooAbsAnaConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsAnaConvPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate the raw value of the function which is the effFunc value if cat==1 and it is (1-effFunc) if cat==0. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiBinomial.html:47818,inherit,inherited,47818,doc/master/classRooMultiBinomial.html,https://root.cern,https://root.cern/doc/master/classRooMultiBinomial.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate the raw value of this p.d.f which is the effFunc value if cat==1 and it is (1-effFunc) if cat==0. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEfficiency.html:58966,inherit,inherited,58966,doc/master/classRooEfficiency.html,https://root.cern,https://root.cern/doc/master/classRooEfficiency.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate value. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDerivative.html:47495,inherit,inherited,47495,doc/master/classRooDerivative.html,https://root.cern,https://root.cern/doc/master/classRooDerivative.html,5,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate RooBlindTools unhide-offset method on blind value. ;  ;  Protected Member Functions inherited from RooAbsHiddenReal; RooAbsCategory & dummyBlindState () const;  Return reference to internal dummy RooCategory implementation blinding state switch. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Return value of object. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindOffset.html:48975,inherit,inherited,48975,doc/master/classRooUnblindOffset.html,https://root.cern,https://root.cern/doc/master/classRooUnblindOffset.html,2,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate RooBlindTools unhide-precision method on blind value. ;  ;  Protected Member Functions inherited from RooAbsHiddenReal; RooAbsCategory & dummyBlindState () const;  Return reference to internal dummy RooCategory implementation blinding state switch. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Return value of object. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindPrecision.html:49097,inherit,inherited,49097,doc/master/classRooUnblindPrecision.html,https://root.cern,https://root.cern/doc/master/classRooUnblindPrecision.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate profile likelihood by minimizing likelihood w.r.t. ;  ; void initializeMinimizer () const;  ; void validateAbsMin () const;  Check that parameters and likelihood value for 'best fit' are still valid. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProfileLL.html:47918,inherit,inherited,47918,doc/master/classRooProfileLL.html,https://root.cern,https://root.cern/doc/master/classRooProfileLL.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate projected p.d.f. ;  ; const RooAbsReal * getProjection (const RooArgSet *iset, const RooArgSet *nset, const char *rangeName, int &code) const;  Retrieve object representing projection integral of input p.d.f over observables iset, while normalizing over observables nset. ;  ; bool redirectServersHook (const RooAbsCollection &newServerList, bool, bool, bool) override;  Intercept a server redirection all and update list of dependents if necessary Specifically update the set proxy 'deps' which introduces the dependency on server value dirty flags of ourselves. ;  ;  Protected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:59281,inherit,inherited,59281,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate the spline function at the current point. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpline.html:48633,inherit,inherited,48633,doc/master/classRooSpline.html,https://root.cern,https://root.cern/doc/master/classRooSpline.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; CacheElem * getCache (const RooArgSet *nset) const;  ; int idxmax (const double &m) const;  ; int idxmin (const double &m) const;  ; Int_t ij (const Int_t &i, const Int_t &j) const;  ; void initialize ();  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorph.html:60711,inherit,inherited,60711,doc/master/classRooMomentMorph.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorph.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; CacheElem * getCache (const RooArgSet *nset) const;  ; int idxmax (const double &m) const;  ; int idxmin (const double &m) const;  ; Int_t ij (const Int_t &i, const Int_t &j) const;  ; void initialize ();  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFunc.html:49303,inherit,inherited,49303,doc/master/classRooMomentMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFunc.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; double lastBinValue () const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParametricStepFunction.html:62462,inherit,inherited,62462,doc/master/classRooParametricStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooParametricStepFunction.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsHiddenReal; RooAbsCategory & dummyBlindState () const;  Return reference to internal dummy RooCategory implementation blinding state switch. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Return value of object. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindCPAsymVar.html:49047,inherit,inherited,49047,doc/master/classRooUnblindCPAsymVar.html,https://root.cern,https://root.cern/doc/master/classRooUnblindCPAsymVar.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1PdfBinding.html:58421,inherit,inherited,58421,doc/master/classRooCFunction1PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1PdfBinding.html,12,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Binding.html:47584,inherit,inherited,47584,doc/master/classRooCFunction1Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Binding.html,13,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooResolutionModel; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward redirectServers call to our basis function, which is not connected to either resolution model or the physics model. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGExpModel.html:63194,inherit,inherited,63194,doc/master/classRooGExpModel.html,https://root.cern,https://root.cern/doc/master/classRooGExpModel.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluation. ;  ; void setCoordinate (const RooAbsCollection &observables, std::vector< double > const &observableValues);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyFunc.html:48443,inherit,inherited,48443,doc/master/classRooPolyFunc.html,https://root.cern,https://root.cern/doc/master/classRooPolyFunc.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Optimized implementation of createProfile for profile likelihoods. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html:47679,inherit,inherited,47679,doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Return 1 if x is in range, zero otherwise. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Inter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBoolean.html:47045,inherit,inherited,47045,doc/master/classRooRangeBoolean.html,https://root.cern,https://root.cern/doc/master/classRooRangeBoolean.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Return sum of -log of constraint p.d.f.s. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Intern",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:47745,inherit,inherited,47745,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Transfer contents to std::vector for use below. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStepFunction.html:47543,inherit,inherited,47543,doc/master/classRooStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooStepFunction.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; std::complex< double > evalCerfInt (double sign, double wt, double tau, double umin, double umax, double c) const;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooResolutionModel; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward redirectServers call to our basis function, which is not connected to either resolution model or the physics model. ;  ;  Protected Member Functions inherited from RooAbsPdf;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:60545,inherit,inherited,60545,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; std::span< const double > binBoundaries () const;  Get the bin boundaries for the observable. ;  ; double evaluate () const override;  Integrate the PDF over the current bin of the observable. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinSamplingPdf.html:62089,inherit,inherited,62089,doc/master/classRooBinSamplingPdf.html,https://root.cern,https://root.cern/doc/master/classRooBinSamplingPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; std::string createLabel () const;  Compile a string with all the labels of the serving categories, such as {1Jet;1Lepton;2Tag}. ;  ; value_type evaluate () const override;  Calculate the current value. ;  ; void recomputeShape () override;  Inspect all the subcategories, and enumerate and name their states. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiCategory.html:34497,inherit,inherited,34497,doc/master/classRooMultiCategory.html,https://root.cern,https://root.cern/doc/master/classRooMultiCategory.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; value_type evaluate () const override;  Calculate and return the value of the mapping function. ;  ; void initialize (const char *catTypeName=nullptr);  Iterator over all bins in input variable and define corresponding state labels. ;  ; void recomputeShape () override;  The shape of this category does not need to be recomputed, as it creates states on the fly. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  At",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinningCategory.html:34154,inherit,inherited,34154,doc/master/classRooBinningCategory.html,https://root.cern,https://root.cern/doc/master/classRooBinningCategory.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; value_type evaluate () const override;  Calculate and return the value of the mapping function. ;  ; void recomputeShape () override;  No shape recomputation is necessary. This category does not depend on other categories. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the given vector store. ;  ; void clearTypes ();  Delete all currently defined states. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooThresholdCategory.html:34095,inherit,inherited,34095,doc/master/classRooThresholdCategory.html,https://root.cern,https://root.cern/doc/master/classRooThresholdCategory.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; virtual RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const =0;  ; virtual RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const =0;  ; virtual const char * binningName () const;  ; std::string cacheNameSuffix (const RooArgSet &nset) const;  Construct string with unique suffix for cache objects based on observable names that define cache configuration. ;  ; virtual PdfCacheElem * createCache (const RooArgSet *nset) const;  ; void disableCache (bool flag);  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsRe,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedPdf.html:62116,inherit,inherited,62116,doc/master/classRooAbsCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void attachToStore (RooAbsDataStore &store);  Attach this argument to the data store such that it reads data from there. ;  ; virtual void attachToTree (TTree &t, Int_t bufSize=32000)=0;  Overloadable function for derived classes to implement attachment as branch to a TTree. ;  ; virtual void attachToVStore (RooVectorDataStore &vstore)=0;  ; TString cleanBranchName () const;  Construct a mangled name from the actual name that is free of any math symbols that might be interpreted by TTree. ;  ; void clearShapeDirty () const;  ; void clearValueAndShapeDirty () const;  ; void clearValueDirty () const;  ; virtual void co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:33437,inherit,inherited,33437,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDiry=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; void fillTreeBranch (TTree &t) override;  Fill tree branch associated with this object. ;  ; bool isValid () const override;  WVE (08/21/01) Probably obsolete now. ;  ; virtual bool isValidString (const char *, bool) const;  ; void setTreeBranchStatus (TTree &t, bool active) override;  (De)Activate associated tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStringVar.html:30625,inherit,inherited,30625,doc/master/classRooStringVar.html,https://root.cern,https://root.cern/doc/master/classRooStringVar.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; virtual double evaluate () const =0;  Evaluate this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:50569,inherit,inherited,50569,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,2,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Attach the category index and label to as branches to the given vector store. ;  ; void clearTypes ();  Delete all currently defined states. ;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValueDirty=true) override;  Copy the cached value from given source and raise dirty flag. ;  ; virtual const std::map< std::string, RooAbsCategory::value_type >::value_type & defineState (const std::string &label)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategory.html:35440,inherit,inherited,35440,doc/master/classRooAbsCategory.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategory.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void boxInfoInit (BoxInfo *bi, const char *rangeName, Int_t code) const;  ; void calculateBandWidth ();  ; void calculatePreNorm (BoxInfo *bi) const;  bi->nEventsBMSW=0.; bi->nEventsBW=0.; ;  ; void calculateShell (BoxInfo *bi) const;  determine points in +/- nSigma shell around the box determined by the variable ranges. ;  ; void checkInitWeights () const;  ; RooDataSet * createDatasetFromHist (const RooArgList &varList, const TH1 &hist) const;  ; void createPdf (bool firstCall, RooDataSet const &data);  evaluation order of constructor. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:62848,inherit,inherited,62848,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void changeBasis (RooFormulaVar *basis) override;  Changes associated bases function to 'inBasis'. ;  ; double evaluate () const override;  Evaluate the truth model: a delta function when used as PDF, the basis function itself, when convoluted with a basis function. ;  ;  Protected Member Functions inherited from RooResolutionModel; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward redirectServers call to our basis function, which is not connected to either resolution model or the physics model. ;  ;  Protected Member Functions ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTruthModel.html:60094,inherit,inherited,60094,doc/master/classRooTruthModel.html,https://root.cern,https://root.cern/doc/master/classRooTruthModel.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Calculate current value of this object. ;  ; RooFormula & formula () const;  ; bool isValidReal (double, bool) const override;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Propagate server changes to embedded formula object. ;  ; void translate (RooFit::Detail::CodeS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:60049,inherit,inherited,60049,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Note: P_0^0 = 1, so P_l^m = P_l^m P_0^0. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegendre.html:47328,inherit,inherited,47328,doc/master/classRooLegendre.html,https://root.cern,https://root.cern/doc/master/classRooLegendre.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void doEval (RooFit::EvalContext &) const override;  Interpolate between input distributions for all values of the observable in evalData. ;  ; double evaluate () const override;  Calculate and return current value of self. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::Own",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPiecewiseInterpolation.html:48787,inherit,inherited,48787,doc/master/classPiecewiseInterpolation.html,https://root.cern,https://root.cern/doc/master/classPiecewiseInterpolation.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void fillCacheObject (FuncCacheElem &cacheFunc) const override;  Fill cache using running integral cache elements calculate() method with specification of cdf-specific boundary conditions. ;  ;  Protected Member Functions inherited from RooNumRunningInt; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  Return observable in nset to be cached by RooAbsCachedPdf this is always the x observable that is integrated. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  Return the parameters of the cache created by RooAbsCachedPdf. ;  ; const c,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumCdf.html:49169,inherit,inherited,49169,doc/master/classRooNumCdf.html,https://root.cern,https://root.cern/doc/master/classRooNumCdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void findShape (const std::vector< double > &x) const;  ; CacheElem * getCache (const RooArgSet *nset) const;  ; void initialize ();  ; int sij (const int &i, const int &j) const;  ; RooAbsReal * sumFunc (const RooArgSet *nset);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFuncND.html:49732,inherit,inherited,49732,doc/master/classRooMomentMorphFuncND.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFuncND.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:66291,inherit,inherited,66291,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Types; enum  IntOperMode { Hybrid; , Analytic; , PassThrough; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; RooArgSet const * actualFuncNormSet () const;  ; void autoSelectDirtyMode ();  Set appropriate cache operation mode for integral depending on cache operation mode of server objects. ;  ; double evaluate () const override;  Perform the integration and return the result. ;  ; bool initNumIntegrator () const;  (Re)Initialize numerical integration engine if necessary. ;  ; virtual double integrate () const;  Perform hybrid numerical/analytical integration ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:48904,inherit,inherited,48904,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Types; typedef RooArgList * pRooArgList;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const override;  Return specialized context to efficiently generate toy events from RooAddModels. ;  ; void getCompIntList (const RooArgSet *nset, const RooArgSet *iset, pRooArgList &compIntList, Int_t &code, const char *isetRangeName) const;  Check if this configuration was created before. ;  ; AddCacheElem * getProjCache (const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:61530,inherit,inherited,61530,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability,void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Types; using CacheElem = FuncCacheElem;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const =0;  ; virtual RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const =0;  ; virtual const char * binningName () const;  ; TString cacheNameSuffix (const RooArgSet &nset) const;  Construct unique suffix name for cache p.d.f object. ;  ; virtual FuncCacheElem * createCache (const RooArgSet *nset) const;  Interface function to create an internal cache object that represent,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedReal.html:48174,inherit,inherited,48174,doc/master/classRooAbsCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedReal.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Public Attributes; RooRealProxy x;  ; RooRealProxy y;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  . Private Member Functions; double evaluateFull (double thisX, double thisY) const;  Evaluates the sum of the product of the 2D kernels for use in calculating the fixed kernel estimate, f, given the bandwidths _hx[j] and _hy[j]. ;  ; d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:59996,inherit,inherited,59996,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Static Public Attributes; static constexpr double implementedPrecision = RooFit::SuperFloatPrecision::digits10;  length of floating point digits precision supported by implementation. ;  . Private Member Functions; void disableInterference (const std::vector< const char * > &nonInterfering);  disable interference between terms ;  ; void disableInterferences (const std::vector< std::vector< const char * > > &nonInterfering);  disable interference between terms ;  ; RooLagrangianMorphFunc::CacheElem * getCache () const;  retrieve the cache object ;  ; bool hasCache () const;  return true if a cache object is present, false otherwise ;  ; void ini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:58226,inherit,inherited,58226,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Static Public Attributes; static constexpr value_type NoCatIdx = std::numeric_limits<value_type>::min();  . Protected Member Functions; value_type evaluate () const override;  Evaluate the category state and return. ;  ; const RooMappedCategoryCache * getOrCreateCache () const;  ; void recomputeShape () override;  When the input category changes states, the cached state mappings are invalidated. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMappedCategory.html:34392,inherit,inherited,34392,doc/master/classRooMappedCategory.html,https://root.cern,https://root.cern/doc/master/classRooMappedCategory.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:60375,inherit,inherited,60375,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,2,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protecte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:69077,inherit,inherited,69077,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,3,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:61338,inherit,inherited,61338,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; double evaluate () const override;  Calculate current value of this object. ;  ;  Protected Member Functions inherited from RooAbsRealLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ; virtual void setValFast (d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearVar.html:56049,inherit,inherited,56049,doc/master/classRooLinearVar.html,https://root.cern,https://root.cern/doc/master/classRooLinearVar.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; value_type evaluate () const override;  Evaluate the category state and return. ;  ; void recomputeShape () override;  Ask server category to recompute shape, and copy its information. ;  ;  Protected Member Functions inherited from RooAbsCategoryLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value from given source and raise dirty ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSuperCategory.html:37879,inherit,inherited,37879,doc/master/classRooSuperCategory.html,https://root.cern,https://root.cern/doc/master/classRooSuperCategory.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; value_type evaluate () const override;  Evaluate the category state and return. ;  ; void recomputeShape () override;  This category's shape does not depend on others, and does not need recomputing. ;  ;  Protected Member Functions inherited from RooAbsCategoryLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value from given source an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:40712,inherit,inherited,40712,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ; virtual void setValFast (double value);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsRealLValue.html:55157,inherit,inherited,55157,doc/master/classRooAbsRealLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsRealLValue.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value from given source and raise dirty flag. ;  ;  Protected Member Functions inherited from RooAbsCategory; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach the category index and label as branches to the given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategoryLValue.html:36182,inherit,inherited,36182,doc/master/classRooAbsCategoryLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategoryLValue.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void syncCache (const RooArgSet *set=nullptr) override;  Force the internal value cache to be up to date. ;  ;  Protected Member Functions inherited from RooAbsRealLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:56609,inherit,inherited,56609,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['inherit'],['inherited']
Modifiability,"void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; using SharedPropertiesMap = std::map< RooSharedProperties::UUID, std::weak_ptr< RooRealVarSharedProperties > >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or Store",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:58204,inherit,inherited,58204,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['inherit'],['inherited']
Modifiability,"w () override;  Redraw list view item. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fAlias;  Alias for this entry. ;  ; TTVLVContainer * fContainer;  Container to whom this item belongs. ;  ; TGItemContext * fContext;  Associated context menu. ;  ; TString fConvName;  Name converted into true expressions. ;  ; bool fIsCut;  Flag for cut type items. ;  ; TGToolTip * fTip;  Tool tip associated with item. ;  ; TString fTrueName;  Name for this entry. ;  ;  Protected Attributes inherited from TGLVEntry; Bool_t fActive;  true if item is active ;  ; const TGPicture * fBigPic;  big icon ;  ; Bool_t fChecked;  true if item is checked ;  ; const TGPicture * fCheckMark;  checkmark ;  ; Int_t * fCpos;  position of sub names ;  ; Int_t * fCtw;  width of sub names ;  ; const TGPicture * fCurrent;  current icon ;  ; FontStruct_t fFontStruct;  text font ;  ; TGString * fItemName;  name of item ;  ; Int_t * fJmode;  alignment for sub names ;  ; GContext_t fNormGC;  drawing graphics conte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVEntry.html:22060,inherit,inherited,22060,doc/master/classTTVLVEntry.html,https://root.cern,https://root.cern/doc/master/classTTVLVEntry.html,1,['inherit'],['inherited']
Modifiability,"w () override;  Redraw list view item. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; const TGPicture * fBlpic;  big icon ;  ; TBufferFile * fBuf;  buffer used for Drag and Drop ;  ; TDNDData fDNDData;  Drag and Drop data. ;  ; Int_t fGid;  file uid and gid ;  ; Bool_t fIsLink;  true if symbolic link ;  ; const TGPicture * fLcurrent;  current icon ;  ; Long_t fModTime;  modification time ;  ; Long64_t fSize;  file size ;  ; const TGPicture * fSlpic;  small icon ;  ; Int_t fType;  file type ;  ; Int_t fUid;  ;  Protected Attributes inherited from TGLVEntry; Bool_t fActive;  true if item is active ;  ; const TGPicture * fBigPic;  big icon ;  ; Bool_t fChecked;  true if item is checked ;  ; const TGPicture * fCheckMark;  checkmark ;  ; Int_t * fCpos;  position of sub names ;  ; Int_t * fCtw;  width of sub names ;  ; const TGPicture * fCurrent;  current icon ;  ; FontStruct_t fFontStruct;  text font ;  ; TGString * fItemName;  name of item ;  ; Int_t * fJmode;  alignment for sub names ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileItem.html:25534,inherit,inherited,25534,doc/master/classTGFileItem.html,https://root.cern,https://root.cern/doc/master/classTGFileItem.html,1,['inherit'],['inherited']
Modifiability,"w () override;  Redraw list view item. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static FontStruct_t GetDefaultFontStruct ();  Return the default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return the default graphics context in use. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVEntry.html:23787,inherit,inherited,23787,doc/master/classTGLVEntry.html,https://root.cern,https://root.cern/doc/master/classTGLVEntry.html,1,['inherit'],['inherited']
Modifiability,"w * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtml.html:18263,inherit,inherited,18263,doc/master/classTGHtml.html,https://root.cern,https://root.cern/doc/master/classTGHtml.html,1,['inherit'],['inherited']
Modifiability,"w editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveShape::vVector2_tfDebugPoints; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveShape::vVector2_tfPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveBoxProjected.html:21309,variab,variable,21309,root/html602/TEveBoxProjected.html,https://root.cern,https://root.cern/root/html602/TEveBoxProjected.html,2,['variab'],['variable']
Modifiability,w editing of main transparency.; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Double_tfCurMaxOverall and current maximum value of the separating quantity.; Double_tfCurMinOverall and current minimum value of the separating quantity.; Int_tfDefPointSetCapacityDefault capacity of subjugated TEvePointSet's.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Int_tfLastBin! Index of the last filled TEvePointSet.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Double_tfMaxOverall and current maximum value of the separating quantity.; Double_tfMinOverall and current minimum value of the separating quantity.; Int_tfNBinsNumber of subjugated TEvePointSet's.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TStringfQuantNameName of the separating quantity.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the so,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSetArray.html:20396,variab,variable,20396,root/html602/TEvePointSetArray.html,https://root.cern,https://root.cern/root/html602/TEvePointSetArray.html,2,['variab'],['variable']
Modifiability,"w such action, one could either grant generic access for all or one could allow to execute only special method:; root [8] serv->Restrict(""/Folder/histo1"", ""allow=all"");; root [9] serv->Restrict(""/Folder/histo1"", ""allow_method=GetTitle"");; One could provide several options for the same item, separating them with ‘&’ sign:; root [10] serv->Restrict(""/Folder/histo1"", ""allow_method=GetTitle&hide=guest"");; Complete list of supported options could be found in TRootSniffer:Restrict() method documentation.; 1.5 Using FastCGI interface; FastCGI is a protocol for interfacing interactive programs with a web server like Apache, lighttpd, Microsoft ISS and many others.; When starting THttpServer, one could specify:; serv = new THttpServer(""fastcgi:9000"");; In fact, the FastCGI interface can run in parallel to http server. One can just call:; serv = new THttpServer(""http:8080"");; serv->CreateEngine(""fastcgi:9000"");; One could specify a debug parameter to be able to adjust the FastCGI configuration on the web server:; serv->CreateEngine(""fastcgi:9000?debug=1"");; All user access will be ruled by the main web server - for the moment one cannot restrict access with fastcgi engine.; 1.5.1 Configure fastcgi with Apcahe2; First of all, one should compile and install mod_fastcgi module. Then mod_fastcgi should be specified in httpd.conf to load it when Apache server is started. Finally in host configuration file one should have following lines:; <IfModule mod_fastcgi.c>; FastCgiExternalServer ""/srv/www/htdocs/root.app"" -host rootapp_host_name:9000; </IfModule>; Here is supposed that directory “/srv/www/htdocs” is root directory for web server. Than one should be able to open address:; http://apache_host_name/root.app/; 1.5.2 Configure fastcgi with lighttpd; An example of configuration file for lighttpd server is:; server.modules += ( ""mod_fastcgi"" ); fastcgi.server = (; ""/root.app"" =>; (( ""host"" => ""192.168.1.11"",; ""port"" => 9000,; ""check-local"" => ""disable"",; ""docroot"" => ""/""; )); ); Be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/HttpServer/HttpServer.html:6301,config,configuration,6301,root/html534/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/html534/guides/HttpServer/HttpServer.html,1,['config'],['configuration']
Modifiability,"w the current implementation is not ideal (you need to copy to; and from the shared memory file) but the main problem is with the; class' virtual_table pointer. This pointer points to a table unique; for every process. Therefore, different options are:; 1) One could allocate an object directly in shared memory in the; producer, but the consumer still has to copy the object from; shared memory into a local object which has the correct vtbl; pointer for that process (copy ctor's can be used for creating; the local copy).; 2) Another possibility is to only allow objects without virtual; functions in shared memory (like simple C structs), or to; forbid (how?) the consumer from calling any virtual functions; of the objects in shared memory.; 3) A last option is to copy the object internals to shared memory; and copy them again from there. This is what is done in the; TMapFile (using the object Streamer() to make a deep copy).; Option 1) saves one copy, but requires solid copy ctor's (along the; full inheritance chain) to rebuild the object in the consumer. Most; classes don't provide these copy ctor's, especially not when objects; contain collections, etc. 2) is too limiting or dangerous (calling; accidentally a virtual function will segv). So since we have a; robust Streamer mechanism I opted for 3). Function Members (Methods); public:. virtual~TMapFile(); voidTObject::AbstractMethod(const char* method) const; voidAdd(const TObject* obj, const char* name = """"); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); Bool_tcd(const char* path = 0); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidClose(Option_t* option = """"); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TMapFile*Create(const char* name, Option_t* option = ""READ"", Int_t size =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMapFile.html:2148,inherit,inheritance,2148,root/html528/TMapFile.html,https://root.cern,https://root.cern/root/html528/TMapFile.html,6,['inherit'],['inheritance']
Modifiability,"w the current implementation is not ideal (you need to copy to; and from the shared memory file) but the main problem is with the; class' virtual_table pointer. This pointer points to a table unique; for every process. Therefore, different options are:; 1) One could allocate an object directly in shared memory in the; producer, but the consumer still has to copy the object from; shared memory into a local object which has the correct vtbl; pointer for that process (copy ctor's can be used for creating; the local copy).; 2) Another possibility is to only allow objects without virtual; functions in shared memory (like simple C structs), or to; forbid (how?) the consumer from calling any virtual functions; of the objects in shared memory.; 3) A last option is to copy the object internals to shared memory; and copy them again from there. This is what is done in the; TMapFile (using the object Streamer() to make a deep copy).; Option 1) saves one copy, but requires solid copy ctor's (along the; full inheritance chain) to rebuild the object in the consumer. Most; classes don't provide these copy ctor's, especially not when objects; contain collections, etc. 2) is too limiting or dangerous (calling; accidentally a virtual function will segv). So since we have a; robust Streamer mechanism I opted for 3). Function Members (Methods); public:. ~TMapRec(); void*GetBuffer(Long_t offset = 0) const; Int_tGetBufSize() const; const char*GetClassName(Long_t offset = 0) const; const char*GetName(Long_t offset = 0) const; TMapRec*GetNext(Long_t offset = 0) const; TObject*GetObject() const; TMapRec(const char* name, const TObject* obj, Int_t size, void* buf). private:. TMapRec&operator=(const TMapRec&); TMapRec(const TMapRec&). Data Members; private:. Int_tfBufSizebuffer size; void*fBufferbuffer containing object of class name; char*fClassNameclass name; char*fNameobject name; TMapRec*fNextnext MapRec in list; TObject*fObjectpointer to original object. Class Charts. Inheritance; Inherite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMapRec.html:2129,inherit,inheritance,2129,root/html602/TMapRec.html,https://root.cern,https://root.cern/root/html602/TMapRec.html,2,['inherit'],['inheritance']
Modifiability,"w title bar. ;  ; TGMdiVerticalWinResizer * fUpperHR;  ; TGMdiCornerWinResizer * fUpperLeftCR;  ; TGMdiCornerWinResizer * fUpperRightCR;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiMainFrame;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiDecorFrame.html:29672,inherit,inherited,29672,doc/master/classTGMdiDecorFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiDecorFrame.html,1,['inherit'],['inherited']
Modifiability,"w), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the eventlist with given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TEntryList * fElist;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEntryList.html:11737,inherit,inherited,11737,doc/master/classTProofDrawEntryList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEntryList.html,1,['inherit'],['inherited']
Modifiability,"w), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the eventlist with given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TEventList * fElist;  ; TList * fEventLists;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEventList.html:11737,inherit,inherited,11737,doc/master/classTProofDrawEventList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEventList.html,1,['inherit'],['inherited']
Modifiability,"w), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the graph with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGraph * fGraph;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawGraph.html:11759,inherit,inherited,11759,doc/master/classTProofDrawGraph.html,https://root.cern,https://root.cern/doc/master/classTProofDrawGraph.html,1,['inherit'],['inherited']
Modifiability,"w);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Static Protected Member Functions; static const TGGC & GetDefaultSelectedBackgroundGC ();  Return graphics context for highlighted frame background. ;  ; static const TGGC & GetDefaultSelectedGC ();  Return selection graphics context. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; ETextJustification fAlignment;  OPTION={GetMeth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEntry.html:35969,inherit,inherited,35969,doc/master/classTGTextEntry.html,https://root.cern,https://root.cern/doc/master/classTGTextEntry.html,1,['inherit'],['inherited']
Modifiability,"w, Double_t zup, Option_t* option = """"); Normal Constructor for Profile histograms*-*-*-*-; *-* ==========================================. The first eleven parameters are similar to TH3D::TH3D.; All values of t are accepted at filling time.; To fill a profile3D histogram, one must use TProfile3D::Fill function. Note that when filling the profile histogram the function Fill; checks if the variable t is betyween fTmin and fTmax.; If a minimum or maximum value is set for the T scale before filling,; then all values below tmin or above tmax will be discarded.; Setting the minimum or maximum value for the T scale before filling; has the same effect as calling the special TProfile3D constructor below; where tmin and tmax are specified. H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; (spread option), or e(I,J,K) if CHOPT=' ' (error on mean). See TProfile3D::BuildOptions for explanation of parameters. see other constructors below with all possible combinations of; fix and variable bin size like in TH3D. TProfile3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins, Option_t* option = """"); Create a 3-D Profile with variable bins in X , Y and Z. void BuildOptions(Double_t tmin, Double_t tmax, Option_t* option); Set Profile3D histogram structure and options*-*-; *-* =============================================. If a cell has N data points all with the same value T (especially; possible when dealing with integers), the spread in T for that cell; is zero, and the uncertainty assigned is also zero, and the cell is; ignored in making subsequent fits. If SQRT(T) was the correct error; in the case above, then SQRT(T)/SQRT(N) would be the correct error here.; In fact, any cell with non-zero number of entries N but with zero spread; should have an uncertainty SQRT(T)/SQRT(N). Now, is SQRT(T)/SQRT(N) really the correct uncertainty?; that it is only ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile3D.html:29283,variab,variable,29283,root/html528/TProfile3D.html,https://root.cern,https://root.cern/root/html528/TProfile3D.html,3,['variab'],['variable']
Modifiability,"w, Double_t zup, Option_t* option = """"); Normal Constructor for Profile histograms*-*-*-*-; *-* ==========================================. The first eleven parameters are similar to TH3D::TH3D.; All values of t are accepted at filling time.; To fill a profile3D histogram, one must use TProfile3D::Fill function. Note that when filling the profile histogram the function Fill; checks if the variable t is betyween fTmin and fTmax.; If a minimum or maximum value is set for the T scale before filling,; then all values below tmin or above tmax will be discarded.; Setting the minimum or maximum value for the T scale before filling; has the same effect as calling the special TProfile3D constructor below; where tmin and tmax are specified. H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; (spread option), or e(I,J,K) if CHOPT=' ' (error on mean). See TProfile3D::BuildOptions for explanation of parameters. see other constructors below with all possible combinations of; fix and variable bin size like in TH3D. TProfile3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins, Option_t* option = """"); Create a 3-D Profile with variable bins in X , Y and Z. void BuildOptions(Double_t tmin, Double_t tmax, Option_t* option); Set Profile3D histogram structure and options*-*-; *-* =============================================. tmin: minimum value allowed for t; tmax: maximum value allowed for t; if (tmin = tmax = 0) there are no limits on the allowed t values (tmin = -inf, tmax = +inf). option: this is the option for the computation of the t error of the profile ( TProfile3D::GetBinError ); possible values for the options are documented in TProfile3D::SetErrorOption. see also TProfile::BuildOptions for a detailed description. TProfile3D(const TProfile3D& profile); copy constructor. Bool_t Add(TF1* h1, Double_t c1 = 1, Option_t* option = """"); Performs the o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProfile3D.html:31802,variab,variable,31802,root/html534/TProfile3D.html,https://root.cern,https://root.cern/root/html534/TProfile3D.html,3,['variab'],['variable']
Modifiability,"w. ;  ; virtual void Rannor (Double_t &a, Double_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void Rannor (Float_t &a, Float_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void ReadRandom (const char *filename);  Reads saved random generator status from filename. ;  ; virtual void Sphere (Double_t &x, Double_t &y, Double_t &z, Double_t r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Uniform (Double_t x1, Double_t x2);  Returns a uniform deviate on the interval (x1, x2). ;  ; virtual Double_t Uniform (Double_t x1=1);  Returns a uniform deviate on the interval (0, x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom1.html:4784,inherit,inherited,4784,doc/master/classTRandom1.html,https://root.cern,https://root.cern/doc/master/classTRandom1.html,4,['inherit'],['inherited']
Modifiability,"w.factory(""SIMCLONE::model_sim( model, $SplitParam({w,dw,biasC},tagCat[Lep,Kao,NT1,NT2]))""); ; # Example of RooCustomizer interface; # -------------------------------------------------------------------; #; # Class ROOT.RooCustomizer makes clones of existing pdfs with certain prescribed; # modifications (branch of leaf node replacements); #; # Here we take our model (the original before ROOT.RooSimWSTool modifications); # and request that the parameter w (the mistag rate) is replaced with; # an expression-based function that calculates w in terms of the Dilution; # parameter D that is defined D = 1-2*w; ; # Make a clone model_D of original 'model' replacing 'w' with; # 'expr('0.5-D/2',D[0,1])'; w.factory(""EDIT::model_D(model, w=expr('0.5-D/2',D[0,1]) )""); ; # Print workspace contents; w.Print(); ; # Make workspace visible on command line; ROOT.gDirectory.Add(w); ; RooWorkspace(w) w contents; ; variables; ---------; (D,NBkg,Nsig,biasC,biasC_Kao,biasC_Lep,biasC_NT1,biasC_NT2,dm,dt,dterr,dw,dw_Kao,dw_Lep,dw_NT1,dw_NT2,fracC,fracT,k,mB0,mes,mixState,sigmB0,sigmaC,sigmaT,tagCat,tagFlav,tau,w,w_Kao,w_Lep,w_NT1,w_NT2); ; p.d.f.s; -------; RooProdPdf::bkg[ bkg_t * bkg_m ] = 0.307193; RooProdPdf::bkg_Kao[ bkg_t_Kao * bkg_m ] = 0.307193; RooProdPdf::bkg_Lep[ bkg_t_Lep * bkg_m ] = 0.307193; RooProdPdf::bkg_NT1[ bkg_t_NT1 * bkg_m ] = 0.307193; RooProdPdf::bkg_NT2[ bkg_t_NT2 * bkg_m ] = 0.307193; RooArgusBG::bkg_m[ m=mes m0=5.291 c=k p=0.5 ] = 0.279062; RooDecay::bkg_t[ t=dt tau=tau ] = 1.10081; RooDecay::bkg_t_Kao[ t=dt tau=tau ] = 1.10081; RooDecay::bkg_t_Lep[ t=dt tau=tau ] = 1.10081; RooDecay::bkg_t_NT1[ t=dt tau=tau ] = 1.10081; RooDecay::bkg_t_NT2[ t=dt tau=tau ] = 1.10081; RooAddPdf::model[ Nsig * sig + NBkg * bkg ] = 1.88229/1; RooAddPdf::model_D[ Nsig * sig_model_D + NBkg * bkg ] = 1.5029/1; RooAddPdf::model_Kao[ Nsig * sig_Kao + NBkg * bkg_Kao ] = 1.88229/1; RooAddPdf::model_Lep[ Nsig * sig_Lep + NBkg * bkg_Lep ] = 1.88229/1; RooAddPdf::model_NT1[ Nsig * sig_NT1 + NBkg ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf513__wsfactory__tools_8py.html:3228,variab,variables,3228,doc/master/rf513__wsfactory__tools_8py.html,https://root.cern,https://root.cern/doc/master/rf513__wsfactory__tools_8py.html,1,['variab'],['variables']
Modifiability,"w2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProfile3D(); Default constructor for Profile3D histograms*-*-*-; *-* ============================================. ~TProfile3D(); Default destructor for Profile3D histograms*-*-*-; *-* ===========================================. TProfile3D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup, Option_t* option = """"); Normal Constructor for Profile histograms*-*-*-*-; *-* ==========================================. The first eleven parameters are similar to TH3D::TH3D.; All values of t are accepted at filling time.; To fill a profile3D histogram, one must use TProfile3D::Fill function. Note that when filling the profile histogram the function Fill; checks if the variable t is betyween fTmin and fTmax.; If a minimum or maximum value is set for the T scale before filling,; then all values below tmin or above tmax will be discarded.; Setting the minimum or maximum value for the T scale before filling; has the same effect as calling the special TProfile3D constructor below; where tmin and tmax are specified. H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; (spread option), or e(I,J,K) if CHOPT=' ' (error on mean). See TProfile3D::BuildOptions for explanation of parameters. see other constructors below with all possible combinations of; fix and variable bin size like in TH3D. TProfile3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins, Option_t* option = """"); Create a 3-D Profile with variable bins in X , Y and Z. void BuildOptions(Double_t tmin, Double_t tmax, Option_t* option); Set Profile3D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile3D.html:28654,variab,variable,28654,root/html528/TProfile3D.html,https://root.cern,https://root.cern/root/html528/TProfile3D.html,6,['variab'],['variable']
Modifiability,w::fSelectMultiple. protected . True if selection has a variable index. ; Definition at line 61 of file TSelectorDraw.h. ◆ fTree. TTree* TSelectorDraw::fTree. protected . Pointer to current Tree. ; Definition at line 38 of file TSelectorDraw.h. ◆ fTreeElist. TObject* TSelectorDraw::fTreeElist. protected . Pointer to Tree Event list. ; Definition at line 42 of file TSelectorDraw.h. ◆ fTreeElistArray. TEntryListArray* TSelectorDraw::fTreeElistArray. protected . ! Pointer to Tree Event list array ; Definition at line 43 of file TSelectorDraw.h. ◆ fVal. Double_t** TSelectorDraw::fVal. protected . ![fSelectedRows][fDimension] Local buffer for the variables ; Definition at line 57 of file TSelectorDraw.h. ◆ fValSize. Int_t TSelectorDraw::fValSize. protected . Definition at line 58 of file TSelectorDraw.h. ◆ fVar. TTreeFormula** TSelectorDraw::fVar. protected . ![fDimension] Array of pointers to variables formula ; Definition at line 39 of file TSelectorDraw.h. ◆ fVarMultiple. bool* TSelectorDraw::fVarMultiple. protected . ![fDimension] True if fVar[i] has a variable index ; Definition at line 60 of file TSelectorDraw.h. ◆ fVmax. Double_t* TSelectorDraw::fVmax. protected . ![fDimension] Maxima of varexp columns ; Definition at line 55 of file TSelectorDraw.h. ◆ fVmin. Double_t* TSelectorDraw::fVmin. protected . ![fDimension] Minima of varexp columns ; Definition at line 54 of file TSelectorDraw.h. ◆ fW. Double_t* TSelectorDraw::fW. protected . ![fSelectedRows]Local buffer for weights ; Definition at line 59 of file TSelectorDraw.h. ◆ fWeight. Double_t TSelectorDraw::fWeight. protected . Tree weight (see TTree::SetWeight) ; Definition at line 56 of file TSelectorDraw.h. Libraries for TSelectorDraw:. [legend]; The documentation for this class was generated from the following files:; tree/treeplayer/inc/TSelectorDraw.h; tree/treeplayer/src/TSelectorDraw.cxx. TSelectorDraw. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:26 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:30812,variab,variable,30812,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['variab'],['variable']
Modifiability,"w;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGCheckButton * fAutoUpdate;  ; TGComboBox * fComboBox;  ; TRootEmbeddedCanvas * fHistCanvas;  canvas to draw the histogram ;  ; TH1D * fHisto;  histogram of image pixels ;  ; TVirtualPad * fImagePad;  ; LimitLine * fLimitLine [2];  ; Double_t fMaxValue;  max value of image ;  ; Double_t fMinValue;  min value of image ;  ; PaintPalette * fPaintPalette;  ; TImagePalette * fPalette;  current palette ;  ; TRootEmbeddedCanvas * fPaletteCanvas;  canvas to draw the current palette ;  ; TList * fPaletteList;  list of palettes for undo and redo ;  ; Int_t fRampFactor;  ; TGRadioButton * fRamps [3];  ; TGTextButton * fReDoButton;  ; TGCheckButton * fStepButton;  ; TGTextButton * fUnDoButton;  ;  Protected Attributes inherited from TPaletteEditor; TAttImage * fAttImage {nullptr};  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;  ; UInt_t fWMHeight;  WM height. ;  ; UInt_t fWMHeightInc;  WM height increments. ;  ; EInitialState fWMInitState;  WM initial state. ;  ; UInt_t fWMMaxHeight;  WM max height. ;  ; UInt_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPaletteEditor.html:31462,inherit,inherited,31462,doc/master/classTASPaletteEditor.html,https://root.cern,https://root.cern/doc/master/classTASPaletteEditor.html,2,['inherit'],['inherited']
Modifiability,"w;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static Window_t CreateWindow (const TGWindow *parent, const TGLFormat &format, UInt_t width, UInt_t height, std::pair< void *, void * > &innerData);  CreateWidget - X11 version. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Private Member Functions;  TGLWidget (const TGLWidget &)=delete;  ; TGLWidget & operator= (const TGLWidget &)=delete;  . Private Attributes; TGEventHandler * fEventHandler;  ; Bool_t fFromInit;  ; TGLContext * fGLContext;  ; TGLFormat fGLFormat;  ; std::pair< voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:26411,inherit,inherited,26411,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['inherit'],['inherited']
Modifiability,"wLine(0.33,0.0,0.33,1.0);; lv->DrawLine(0.6,0.165,1.,0.165);; lv->DrawLine(0.6,0.493,1.,0.493);; lv->DrawLine(0.6,0.823,1.,0.823);. // Horizontal alignment.; TText *th1 = new TText(0.33,0.165,""Left adjusted"");; th1->SetTextAlign(11); th1->SetTextSize(0.12);; th1->Draw();. TText *th2 = new TText(0.33,0.493,""Center adjusted"");; th2->SetTextAlign(21); th2->SetTextSize(0.12);; th2->Draw();. TText *th3 = new TText(0.33,0.823,""Right adjusted"");; th3->SetTextAlign(31); th3->SetTextSize(0.12);; th3->Draw();. // Vertical alignment.; TText *tv1 = new TText(0.66,0.165,""Bottom adjusted"");; tv1->SetTextAlign(11); tv1->SetTextSize(0.12);; tv1->Draw();. TText *tv2 = new TText(0.66,0.493,""Center adjusted"");; tv2->SetTextAlign(12); tv2->SetTextSize(0.12);; tv2->Draw();. TText *tv3 = new TText(0.66,0.823,""Top adjusted"");; tv3->SetTextAlign(13); tv3->SetTextSize(0.12);; tv3->Draw();. return Ta;; }. Text Angle; Text angle in degrees.; The text angle of any class inheriting from TAttText can; be changed using the method SetTextAngle and retrieved using the; method GetTextAngle.; The following picture shows the text angle:. Picture; Source. {; TCanvas *Ta = new TCanvas(""Ta"",""Text angle"",0,0,300,326);; Ta->Range(0,0,1,1);; TLine *l = new TLine();; l->SetLineColor(kRed);; l->DrawLine(0.1,0.1,0.9,0.1);; l->DrawLine(0.1,0.1,0.9,0.9);; TMarker *m = new TMarker();; m->SetMarkerStyle(20);; m->SetMarkerColor(kBlue);; m->DrawMarker(0.1,0.1);; TArc *a = new TArc();; a->SetFillStyle(0);; a->SetLineColor(kBlue); a->SetLineStyle(3);; a->DrawArc(0.1, 0.1, 0.2, 0.,45.,""only"");; TText *tt = new TText(0.1,0.1,""Text angle is 45 degrees"");; tt->SetTextAlign(11); tt->SetTextSize(0.1);; tt->SetTextAngle(45);; tt->Draw();; TLatex *t1 = new TLatex(0.3,0.18,""45^{o}"");; t1->Draw();; return Ta;; }. Mnemonic constants are available:; <pre>; kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; </pre>; They allow to write:; <pre>; object->SetTextAlign(kHAlig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAttText.html:2468,inherit,inheriting,2468,root/html602/TAttText.html,https://root.cern,https://root.cern/root/html602/TAttText.html,2,['inherit'],['inheriting']
Modifiability,"wMax); finds new limits for the axis so that *point* is within the range and; the limits are compatible with the previous ones (see TH1::Merge).; new limits are put into *newMin* and *newMax* variables.; axis - axis whose limits are to be recomputed; point - point that should fit within the new axis limits; newMin - new minimum will be stored here; newMax - new maximum will be stored here.; false if failed (e.g. if the initial axis limits are wrong; or the new range is more than 2^64 times the old one). void ExtendAxis(Double_t x, TAxis* axis); Histogram is resized along axis such that x is in the axis range.; The new axis limits are recomputed by doubling iteratively; the current axis range until the specified value x is within the limits.; The algorithm makes a copy of the histogram, then loops on all bins; of the old histogram to fill the extended histogram.; Takes into account errors (Sumw2) if any.; The algorithm works for 1-d, 2-D and 3-D histograms.; The axis must be extendable before invoking this function.; Ex: h->GetXaxis()->SetCanExtend(kTRUE);. void RecursiveRemove(TObject* obj); Recursively remove object from the list of functions. void Scale(Double_t c1 = 1, Option_t* option = """"); Multiply this histogram by a constant c1. this = c1*this. Note that both contents and errors(if any) are scaled.; This function uses the services of TH1::Add. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Scale. One can scale an histogram such that the bins integral is equal to; the normalization parameter via TH1::Scale(Double_t norm), where norm; is the desired normalization divided by the integral of the histogram. If option contains ""width"" the bin contents and errors are divided; by the bin width. Bool_t CanExtendAllAxes() const; returns true if all axes are extendable. UInt_t SetCanExtend(UInt_t extendBitMask); make the hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:105696,extend,extendable,105696,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,2,['extend'],['extendable']
Modifiability,"wMode fViewMode;  list view viewing mode ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileItem.html:27866,inherit,inherited,27866,doc/master/classTGFileItem.html,https://root.cern,https://root.cern/doc/master/classTGFileItem.html,2,['inherit'],['inherited']
Modifiability,"wMode fViewMode;  list view viewing mode ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVEntry.html:26845,inherit,inherited,26845,doc/master/classTGLVEntry.html,https://root.cern,https://root.cern/doc/master/classTGLVEntry.html,1,['inherit'],['inherited']
Modifiability,"wOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:31098,inherit,inherited,31098,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,11,['inherit'],['inherited']
Modifiability,"wVal, double normVal) constDefinition RooAbsPdf.cxx:282; RooAbsPdf::autoGenContextvirtual RooAbsGenContext * autoGenContext(const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") constDefinition RooAbsPdf.cxx:1136; RooAbsPdf::getAllConstraintsRooArgSet * getAllConstraints(const RooArgSet &observables, RooArgSet &constrainedParams, bool stripDisconnected=true) constThis helper function finds and collects all constraints terms of all component p.d....Definition RooAbsPdf.cxx:2562; RooAbsPdf::getGeneratorConfigconst RooNumGenConfig * getGeneratorConfig() constReturn the numeric MC generator configuration used for this object.Definition RooAbsPdf.cxx:2651; RooAbsPdf::initGeneratorvirtual void initGenerator(Int_t code)Interface for one-time initialization to setup the generator for the specified code.Definition RooAbsPdf.cxx:1532; RooAbsPdf::extendModevirtual ExtendMode extendMode() constReturns ability of PDF to provide extended likelihood terms.Definition RooAbsPdf.h:216; RooAbsPdf::RooAbsPdfRooAbsPdf()Default constructor.Definition RooAbsPdf.cxx:230; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::traceEvalPdfbool traceEvalPdf(double value) constCheck that passed value is positive and not 'not-a-number'.Definition RooAbsPdf.cxx:384; RooAbsPdf::defaultGeneratorConfigstatic RooNumGenConfig * defaultGeneratorConfig()Returns the default numeric MC generator configuration for all RooAbsReals.Definition RooAbsPdf.cxx:2613; RooAbsPdf::redirectServersHookbool redirectServersHook(const RooAbsCollection &newServerList, bool mustR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:152010,extend,extendModevirtual,152010,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,6,['extend'],"['extendMode', 'extendModevirtual', 'extended']"
Modifiability,"w_lwb..row_upb] and unspecified column; range . nr_nonZeros is the total number of non-zero entries in the matrix . TDecompSparse(const TMatrixDSparse& a, Int_t verbose); Constructor for matrix A . TDecompSparse(const TDecompSparse& another); Copy constructor. Int_t NonZerosUpperTriang(const TMatrixDSparse& a); Static function, returning the number of non-zero entries in the upper triangular matrix . void CopyUpperTriang(const TMatrixDSparse& a, Double_t* b); Static function, copying the non-zero entries in the upper triangle to; array b . User should allocate enough memory for array b . void SetMatrix(const TMatrixDSparse& a); Set matrix to be decomposed . Bool_t Decompose(); Decomposition engine .; If the decomposition succeeds, bit kDecomposed is set . Bool_t Solve(TVectorD& b); Solve Ax=b . Solution returned in b. void InitParam(); initializing control parameters. void InitPivot(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayI& Aiw, TArrayI& Aikeep, TArrayI& Aiw1, Int_t& nsteps, const Int_t iflag, Int_t* icntl, Double_t* cntl, Int_t* info, Double_t& ops); Setup Pivoting variables. void Factor(const Int_t n, const Int_t nz, TArrayI& Airn, TArrayI& Aicn, TArrayD& Aa, TArrayI& Aiw, TArrayI& Aikeep, const Int_t nsteps, Int_t& maxfrt, TArrayI& Aiw1, Int_t* icntl, Double_t* cntl, Int_t* info); Factorization routine, the workhorse for the decompostion step. void Solve(const Int_t n, TArrayD& Aa, TArrayI& Aiw, TArrayD& Aw, const Int_t maxfrt, TVectorD& b, TArrayI& Aiw1, const Int_t nsteps, Int_t* icntl, Int_t* info); Main routine for solving Ax=b. void InitPivot_sub1(const Int_t n, const Int_t nz, Int_t* irn, Int_t* icn, Int_t* iw, Int_t* ipe, Int_t* iq, Int_t* flag, Int_t& iwfr, Int_t* icntl, Int_t* info); Help routine for pivoting setup. void InitPivot_sub2(const Int_t n, Int_t* ipe, Int_t* iw, const Int_t lw, Int_t& iwfr, Int_t* nv, Int_t* nxt, Int_t* lst, Int_t* ipd, Int_t* flag, const Int_t iovflo, Int_t& ncmpa, const Double_t fratio); Help routi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDecompSparse.html:12536,variab,variables,12536,root/html528/TDecompSparse.html,https://root.cern,https://root.cern/root/html528/TDecompSparse.html,6,['variab'],['variables']
Modifiability,"w_t winID)=0;  ; TClass * IsA () const override;  ; virtual Bool_t MakeCurrent (Int_t ctxInd)=0;  ; virtual void MarkForDirectCopy (Int_t ctxInd, Bool_t)=0;  ; TGLManager & operator= (const TGLManager &)=delete;  ; virtual void PaintSingleObject (TVirtualGLPainter *)=0;  ; virtual void PanObject (TVirtualGLPainter *o, Int_t x, Int_t y)=0;  ; virtual Bool_t PlotSelected (TVirtualGLPainter *plot, Int_t px, Int_t py)=0;  ; virtual void PrintViewer (TVirtualViewer3D *vv)=0;  ; virtual void ReadGLBuffer (Int_t ctxInd)=0;  ; virtual Bool_t ResizeOffScreenDevice (Int_t ctxInd, Int_t x, Int_t y, UInt_t w, UInt_t h)=0;  ; virtual Bool_t SelectManip (TVirtualGLManip *manip, const TGLCamera *camera, const TGLRect *rect, const TGLBoundingBox *sceneBox)=0;  ; virtual void SelectOffScreenDevice (Int_t ctxInd)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLManager.html:1885,inherit,inherited,1885,doc/master/classTGLManager.html,https://root.cern,https://root.cern/doc/master/classTGLManager.html,1,['inherit'],['inherited']
Modifiability,"wable);  Set newest version to specified drawable. ;  ; void Remove ();  Remove canvas from global canvas lists, will be destroyed when shared_ptr will be removed. ;  ; void ResolveSharedPtrs ();  To resolve problem with storing of shared pointers Call this method when reading canvas from the file Can be called many times - after reinitialization of shared pointers no changes will be performed. ;  ; void Run (double tm=0.);  Run canvas functionality for given time (in seconds) ;  ; bool SaveAs (const std::string &filename);  Save canvas in image file. ;  ; void SetHeight (int height);  Set canvas height. ;  ; void SetSize (int width, int height);  Set canvas pixel size - width and height. ;  ; RCanvas & SetTitle (const std::string &title);  Set the canvas's title. ;  ; void SetWidth (int width);  Set canvas width. ;  ; void Show (const std::string &where="""");  Display the canvas. ;  ; void Update (bool async=false, CanvasCallback_t callback=nullptr);  update drawing ;  ;  Public Member Functions inherited from ROOT::Experimental::RPadBase;  ~RPadBase () override;  ; template<class T , class... ARGS> ; std::shared_ptr< T > Add (ARGS... args);  Add drawable of specified class T. ;  ; std::shared_ptr< RFrame > AddFrame ();  Add a frame object for the pad. ;  ; std::shared_ptr< RPad > AddPad (const RPadPos &, const RPadExtent &);  Add subpad. ;  ; std::vector< std::vector< std::shared_ptr< RPad > > > Divide (int nHoriz, int nVert, const RPadExtent &padding={});  Divide this pad into a grid of subpads with padding in between. ;  ; template<class T , class... ARGS> ; std::shared_ptr< T > Draw (ARGS... args);  Create drawable of specified class T. ;  ; template<class T , class... ARGS> ; auto Draw (const std::shared_ptr< T > &what, ARGS... args);  Add object to be painted. ;  ; std::shared_ptr< RDrawable > Draw (std::shared_ptr< RDrawable > &&drawable);  Add existing drawable instance to canvas. ;  ; const RPadBase * FindPadForPrimitiveWithDisplayId (const std::string &dis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html:3340,inherit,inherited,3340,doc/master/classROOT_1_1Experimental_1_1RCanvas.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html,1,['inherit'],['inherited']
Modifiability,"want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:16281,inherit,inheritance,16281,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,4,['inherit'],['inheritance']
Modifiability,"want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCatType.html:3269,inherit,inheritance,3269,doc/master/classRooCatType.html,https://root.cern,https://root.cern/doc/master/classRooCatType.html,1,['inherit'],['inheritance']
Modifiability,"want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMethodCall.html:7396,inherit,inheritance,7396,doc/master/classTMethodCall.html,https://root.cern,https://root.cern/doc/master/classTMethodCall.html,1,['inherit'],['inheritance']
Modifiability,"was fixed released; TMinuit is not able to release free parameters by redefining them; so we need to force the release. void PrintResults(); print-out results using classic Minuit format (mnprin). void SuppressMinuitWarnings(bool nowarn = true); suppress Minuit2 warnings. bool Contour(unsigned int i, unsigned int j, unsigned int& npoints, double* xi, double* xj); contour plot for parameter i and j; need a valid FunctionMinimum otherwise exits. bool Scan(unsigned int i, unsigned int& nstep, double* x, double* y, double xmin = 0, double xmax = 0); scan a parameter (variable) around the minimum value; the parameters must have been set before; if xmin=0 && xmax == 0 by default scan around 2 sigma of the error; if the errors are also zero then scan from min and max of parameter range; (if parameters are limited Minuit scan from min and max instead of 2 sigma by default); (force in that case to use errors). bool Hesse(); perform calculation of Hessian. const double * X() const; return pointer to X values at the minimum. { return &fParams.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. { return &fErrors.front(); }. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. » Author: L. Moneta Wed Oct 25 16:28:55 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/minuit:$Id$ » Last generated: 2015-03-14 16:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:13039,variab,variables,13039,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,3,['variab'],"['variable', 'variables']"
Modifiability,"was fixed released; TMinuit is not able to release free parameters by redefining them; so we need to force the release. void PrintResults(); print-out results using classic Minuit format (mnprin). void SuppressMinuitWarnings(bool nowarn = true); suppress Minuit2 warnings. bool Contour(unsigned int i, unsigned int j, unsigned int& npoints, double* xi, double* xj); contour plot for parameter i and j; need a valid FunctionMinimum otherwise exits. bool Scan(unsigned int i, unsigned int& nstep, double* x, double* y, double xmin = 0, double xmax = 0); scan a parameter (variable) around the minimum value; the parameters must have been set before; if xmin=0 && xmax == 0 by default scan around 2 sigma of the error; if the errors are also zero then scan from min and max of parameter range; (if parameters are limited Minuit scan from min and max instead of 2 sigma by default); (force in that case to use errors). bool Hesse(); perform calculation of Hessian. const double * X() const; return pointer to X values at the minimum. { return &fParams.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. { return &fErrors.front(); }. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. » Author: L. Moneta Wed Oct 25 16:28:55 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/minuit:$Id$ » Last generated: 2015-06-02 13:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMinuitMinimizer.html:13102,variab,variables,13102,root/html602/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html602/TMinuitMinimizer.html,3,['variab'],"['variable', 'variables']"
Modifiability,"was fixed released; TMinuit is not able to release free parameters by redefining them; so we need to force the release. void PrintResults(); print-out results using classic Minuit format (mnprin). void SuppressMinuitWarnings(bool nowarn = true); suppress Minuit2 warnings. bool Contour(unsigned int i, unsigned int j, unsigned int& npoints, double* xi, double* xj); contour plot for parameter i and j; need a valid FunctionMinimum otherwise exits. bool Scan(unsigned int i, unsigned int& nstep, double* x, double* y, double xmin = 0, double xmax = 0); scan a parameter (variable) around the minimum value; the parameters must have been set before; if xmin=0 && xmax == 0 by default scan around 2 sigma of the error; if the errors are also zero then scan from min and max of parameter range; (if parameters are limited Minuit scan from min and max instead of 2 sigma by default); (force in that case to use errors). bool Hesse(); perform calculation of Hessian. const double * X() const; return pointer to X values at the minimum. { return &fParams.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. { return &fErrors.front(); }. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. » Author: L. Moneta Wed Oct 25 16:28:55 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/minuit:$Id$ » Last generated: 2015-06-02 16:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMinuitMinimizer.html:13102,variab,variables,13102,root/html604/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html604/TMinuitMinimizer.html,3,['variab'],"['variable', 'variables']"
Modifiability,"was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; virtual void Terminate (Int_t status=0);  Terminate the application by call TSystem::Exit() unless application has been told to return from Run(), by a call to SetReturnFromRun(). ;  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGApplication.html:5006,inherit,inherited,5006,doc/master/classTGApplication.html,https://root.cern,https://root.cern/doc/master/classTGApplication.html,1,['inherit'],['inherited']
Modifiability,"we cannot generate any of the directVars (in this case, nothing should be added to generatedVars). Any non-zero codes will be passed to our generateEvent() implementation, but otherwise its value is arbitrary. The default implementation of this method returns zero. Subclasses will usually implement this method using the matchArgs() methods to advertise the algorithms they provide. ; Reimplemented in RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBMixDecay, RooDecay, RooGamma, RooGaussian, RooGaussModel, RooGExpModel, RooJohnson, RooLandau, RooLognormal, RooNonCPEigenDecay, RooPoisson, RooUniform, RooAddModel, RooBinSamplingPdf, RooMultiVarGaussian, RooProdPdf, and RooTruthModel.; Definition at line 1522 of file RooAbsPdf.cxx. ◆ getGeneratorConfig(). const RooNumGenConfig * RooAbsPdf::getGeneratorConfig ; (; ); const. Return the numeric MC generator configuration used for this object. ; If a specialized configuration was associated with this object, that configuration is returned, otherwise the default configuration for all RooAbsReals is returned ; Definition at line 2651 of file RooAbsPdf.cxx. ◆ getLogProbabilities(). void RooAbsPdf::getLogProbabilities ; (; std::span< const double > ; pdfValues, . double * ; output . ); const. Definition at line 671 of file RooAbsPdf.cxx. ◆ getLogVal(). double RooAbsPdf::getLogVal ; (; const RooArgSet * ; set = nullptr); const. virtual . Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ; Reimplemented in RooLegacyExpPoly, and RooHistConstraint.; Definition at line 620 of file RooAbsPdf.cxx. ◆ getNorm() [1/2]. double RooAbsPdf::getNorm ; (; const RooArgSet & ; nset); const. inline . Get normalisation term needed to normalise the raw values returned by getVal(). ; Note that getVal(normalisationVariables) will automatically apply the normalisation term returned here. Parameters. nsetSet of variables to normalise over. . Definition at line 195 of file RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:127657,config,configuration,127657,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,3,['config'],['configuration']
Modifiability,"wed to vary only between two limits specified by the user.; Variable with single sided limits: allowed to vary only between one upper or one lower limit specified by the user and unlimited to the other side.; Fixed: originally defined as variable, but now taking on only the value the parameter had at the moment it was fixed, or a value later assigned by the user.; Constant: taking on only one value as specified by the user. When using the minimal required interface, all variable parameters are free and unbound.; The user, in his \(\mbox{FCN}\), must of course be able to “see” all types of defined parameters, and he therefore has access to what we call the external parameter list, that is, the parameters as he defined them. On the other hand, the internal M minimizing routines only want to “see” variable parameters without limits, and so they have access only to the internal parameter list which is created from the external list by the following transformation:. Squeeze out all parameters that are not variable.; Transform all variable parameters with limits, so that the transformed parameter can vary without limits. (See the next section for details concerning this transformation.) Because this transformation is non-linear, it is recommended to avoid putting limits on parameters where they are not needed. As an example, suppose that the user has defined the following parameters:. Parameter 0, constant.; Parameter 1, freely variable.; Parameter 2, variable with limits.; Parameter 3, constant.; Parameter 4, freely variable. Then the internal parameter list would be as follows:. Internal parameter 0 = external parameter 1.; Internal parameter 1 = external parameter 2, transformed appropriately.; Internal parameter 2 = external parameter 4. In the above example, M considers that the number of external parameters is 5, and the number of internal parameters is 3. This is the number which determines, for example, the size of the error matrix of the parameters, since only va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:11747,variab,variable,11747,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['variab'],['variable']
Modifiability,"weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TChain(); -- Default constructor. TChain(const char* name, const char* title = """"); -- Create a chain. A TChain is a collection of TFile objects.; the first parameter ""name"" is the name of the TTree object; in the files added with Add.; Use TChain::Add to add a new element to this chain. In case the Tree is in a subdirectory, do, eg:; TChain ch(""subdir/treename"");. Example:; Suppose we have 3 files f1.root, f2.root and f3.root. Each file; contains a TTree object named ""T"".; TChain ch(""T""); creates a chain to process a Tree called ""T""; ch.Add(""f1.root"");; ch.Add(""f2.root"");; ch.Add(""f3.root"");; ch.Draw(""x"");; The Draw function above will process the variable ""x"" in Tree ""T""; reading sequentially the 3 files in the chain ch. The TChain data structure; Each TChainElement has a name equal to the tree name of this TChain; and a title equal to the file name. So, to loop over the; TFiles that have been added to this chain:. TObjArray *fileElements=chain->GetListOfFiles();; TIter next(fileElements);; TChainElement *chEl=0;; while (( chEl=(TChainElement*)next() )) {; TFile f(chEl->GetTitle());; ... do something with f ...; }. ~TChain(); -- Destructor. Int_t Add(TChain* chain); -- Add all files referenced by the passed chain to this chain.; The function returns the total number of files connected. Int_t Add(const char* name, Long64_t nentries = kBigNumber); -- Add a new file to this chain. Argument name may have either of two formats. The first:; [//machine]/path/file_name.root[/tree_name]. If tree_name is missing the chain name will be assumed.; Wildcard treatment is triggered by the any of the special characters []*?; which may be used in the file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TChain.html:28334,variab,variable,28334,root/html534/TChain.html,https://root.cern,https://root.cern/root/html534/TChain.html,1,['variab'],['variable']
Modifiability,"weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TChain(); -- Default constructor. TChain(const char* name, const char* title = """"); -- Create a chain. A TChain is a collection of TFile objects.; the first parameter ""name"" is the name of the TTree object; in the files added with Add.; Use TChain::Add to add a new element to this chain. In case the Tree is in a subdirectory, do, eg:; TChain ch(""subdir/treename"");. Example:; Suppose we have 3 files f1.root, f2.root and f3.root. Each file; contains a TTree object named ""T"".; TChain ch(""T""); creates a chain to process a Tree called ""T""; ch.Add(""f1.root"");; ch.Add(""f2.root"");; ch.Add(""f3.root"");; ch.Draw(""x"");; The Draw function above will process the variable ""x"" in Tree ""T""; reading sequentially the 3 files in the chain ch. The TChain data structure; Each TChainElement has a name equal to the tree name of this TChain; and a title equal to the file name. So, to loop over the; TFiles that have been added to this chain:. TObjArray *fileElements=chain->GetListOfFiles();; TIter next(fileElements);; TChainElement *chEl=0;; while (( chEl=(TChainElement*)next() )) {; TFile f(chEl->GetTitle());; ... do something with f ...; }. ~TChain(); -- Destructor. Int_t Add(TChain* chain); -- Add all files referenced by the passed chain to this chain.; The function returns the total number of files connected. Int_t Add(const char* name, Long64_t nentries = kBigNumber); -- Add a new file to this chain. Argument name may have the following format:; //machine/file_name.root/subdir/tree_name; machine, subdir and tree_name are optional. If tree_name is missing,; the chain name will be assumed.; In the file name part (but not in preceding directories) wildcarding; not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TChain.html:25307,variab,variable,25307,root/html526/TChain.html,https://root.cern,https://root.cern/root/html526/TChain.html,4,['variab'],['variable']
Modifiability,"weight arrays to the data store implementation. ;  ; double weightInterpolated (const RooArgSet &bin, int intOrder, bool correctForBinSize, bool cdfBoundaries);  Return the weight at given coordinates with interpolation. ;  . Static Private Member Functions; static std::unique_ptr< RooAbsDataStore > makeDefaultDataStore (RooStringView name, RooStringView title, RooArgSet const &vars);  . Private Attributes; std::vector< double > _interpolationBuffer;  ! Buffer to contain values used for weight interpolation ;  ; VarInfo _varInfo;  ! ;  . Friends; class RooDataHistSliceIter;  . Additional Inherited Members;  Public Types inherited from RooAbsData; using CategorySpans = std::map< RooFit::Detail::DataKey, std::span< const RooAbsCategory::value_type > >;  ; enum  ErrorType { ;   Poisson; , SumW2; , None; , Auto; , ;   Expected. };  ; using RealSpans = std::map< RooFit::Detail::DataKey, std::span< const double > >;  ; enum  StorageType { Tree; , Vector; , Composite; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Static Protected Attributes inherited from RooAbsData; static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:42021,inherit,inherited,42021,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['inherit'],['inherited']
Modifiability,"weighted) histograms. This paper describes the implementation modified \( \chi^{2} \) tests for comparison of weighted and unweighted histograms and two weighted histograms [2] as well as usual Pearson's \( \chi^{2} \) test for comparison two usual (unweighted) histograms.; Overview:; Comparison of two histograms expect hypotheses that two histograms represent identical distributions. To make a decision p-value should be calculated. The hypotheses of identity is rejected if the p-value is lower then some significance level. Traditionally significance levels 0.1, 0.05 and 0.01 are used. The comparison procedure should include an analysis of the residuals which is often helpful in identifying the bins of histograms responsible for a significant overall \( \chi^{2} \) value. Residuals are the difference between bin contents and expected bin contents. Most convenient for analysis are the normalized residuals. If hypotheses of identity are valid then normalized residuals are approximately independent and identically distributed random variables having N(0,1) distribution. Analysis of residuals expect test of above mentioned properties of residuals. Notice that indirectly the analysis of residuals increase the power of \( \chi^{2} \) test.; Methods of comparison:; \( \chi^{2} \) test for comparison two (unweighted) histograms: Let us consider two histograms with the same binning and the number of bins equal to r. Let us denote the number of events in the ith bin in the first histogram as ni and as mi in the second one. The total number of events in the first histogram is equal to: ; \[; N = \sum_{i=1}^{r} n_{i}; \]. and ; \[; M = \sum_{i=1}^{r} m_{i}; \]. in the second histogram. The hypothesis of identity (homogeneity) [3] is that the two histograms represent random values with identical distributions. It is equivalent that there exist r constants p1,...,pr, such that ; \[; \sum_{i=1}^{r} p_{i}=1; \]. and the probability of belonging to the ith bin for some measured value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:88227,variab,variables,88227,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variables']
Modifiability,"wer limited variable; since is not supported in TMinuit , just use a artificial large value. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a upper limited variable; since is not supported in TMinuit , just use a artificial large negative value. bool CheckMinuitInstance() const; check instance of fMinuit. bool CheckVarIndex(unsigned int ivar) const; check index of Variable (assume fMinuit exists). bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. bool SetVariableStepSize(unsigned int , double ); set the step-size of an existing variable; parameter must exist or return false. bool SetVariableLowerLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableUpperLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an existing variable; parameter must exist or return false. bool FixVariable(unsigned int ); Fix an existing variable. bool ReleaseVariable(unsigned int ); Fix an existing variable. bool IsFixedVariable(unsigned int ) const; query if variable is fixed. bool GetVariableSettings(unsigned int , ROOT::Fit::ParameterSettings& ) const; retrieve variable settings (all set info on the variable). std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMinuitMinimizer.html:9560,variab,variable,9560,root/html602/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html602/TMinuitMinimizer.html,2,['variab'],['variable']
Modifiability,"wer.h. Public Types; enum  EGLSACommands { ;   kGLHelpAbout; , kGLHelpViewer; , kGLPerspYOZ; , kGLPerspXOZ; , ;   kGLPerspXOY; , kGLXOY; , kGLXOZ; , kGLZOY; , ;   kGLZOX; , kGLXnOY; , kGLXnOZ; , kGLZnOY; , ;   kGLZnOX; , kGLOrthoRotate; , kGLOrthoDolly; , kGLSaveEPS; , ;   kGLSavePDF; , kGLSavePNG; , kGLSaveGIF; , kGLSaveAnimGIF; , ;   kGLSaveJPG; , kGLSaveAS; , kGLCloseViewer; , kGLQuitROOT; , ;   kGLEditObject; , kGLHideMenus. };  ;  Public Types inherited from TGLViewer; enum  ECameraType { ;   kCameraPerspXOZ; , kCameraPerspYOZ; , kCameraPerspXOY; , kCameraOrthoXOY; , ;   kCameraOrthoXOZ; , kCameraOrthoZOY; , kCameraOrthoZOX; , kCameraOrthoXnOY; , ;   kCameraOrthoXnOZ; , kCameraOrthoZnOY; , kCameraOrthoZnOX. };  ; enum  EDragAction { ;   kDragNone; , kDragCameraRotate; , kDragCameraTruck; , kDragCameraDolly; , ;   kDragOverlay. };  ; enum  EPushAction { kPushStd; , kPushCamCenter; , kPushAnnotate; };  ; enum  ESecSelType { kOnRequest; , kOnKeyMod1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGLLockable; enum  ELock { kUnlocked; , kDrawLock; , kSelectLock; , kModifyLock; };  . Public Member Functions;  TGLSAViewer (const TGWindow *parent, TVirtualPad *pad, TGedEditor *ged=nullptr, TGLFormat *format=nullptr);  Construct an embedded standalone viewer, bound to supplied 'pad'. ;  ;  TGLSAViewer (TVirtualPad *pad, TGLFormat *format=nullptr);  Constr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLSAViewer.html:1483,inherit,inherited,1483,doc/master/classTGLSAViewer.html,https://root.cern,https://root.cern/doc/master/classTGLSAViewer.html,1,['inherit'],['inherited']
Modifiability,wers ; Definition at line 54 of file TMultiDimFit.h. ◆ fMaxPowersFinal. Int_t* TMultiDimFit::fMaxPowersFinal. protected . [fNVariables] maximum powers from fit; ; Definition at line 68 of file TMultiDimFit.h. ◆ fMaxQuantity. Double_t TMultiDimFit::fMaxQuantity. protected . Max value of dependent quantity. ; Definition at line 31 of file TMultiDimFit.h. ◆ fMaxResidual. Double_t TMultiDimFit::fMaxResidual. protected . Max residual value. ; Definition at line 73 of file TMultiDimFit.h. ◆ fMaxResidualRow. Int_t TMultiDimFit::fMaxResidualRow. protected . Row giving max residual. ; Definition at line 75 of file TMultiDimFit.h. ◆ fMaxStudy. Int_t TMultiDimFit::fMaxStudy. protected . max functions to study ; Definition at line 61 of file TMultiDimFit.h. ◆ fMaxTerms. Int_t TMultiDimFit::fMaxTerms. protected . Max terms expected in final expr. ; Definition at line 52 of file TMultiDimFit.h. ◆ fMaxVariables. TVectorD TMultiDimFit::fMaxVariables. protected . max value of independent variables ; Definition at line 39 of file TMultiDimFit.h. ◆ fMeanQuantity. Double_t TMultiDimFit::fMeanQuantity. protected . Mean of dependent quantity. ; Definition at line 30 of file TMultiDimFit.h. ◆ fMeanVariables. TVectorD TMultiDimFit::fMeanVariables. protected . mean value of independent variables ; Definition at line 38 of file TMultiDimFit.h. ◆ fMinAngle. Double_t TMultiDimFit::fMinAngle. protected . Min angle for accepting new function. ; Definition at line 50 of file TMultiDimFit.h. ◆ fMinQuantity. Double_t TMultiDimFit::fMinQuantity. protected . Min value of dependent quantity. ; Definition at line 32 of file TMultiDimFit.h. ◆ fMinRelativeError. Double_t TMultiDimFit::fMinRelativeError. protected . Min relative error accepted. ; Definition at line 53 of file TMultiDimFit.h. ◆ fMinResidual. Double_t TMultiDimFit::fMinResidual. protected . Min residual value. ; Definition at line 74 of file TMultiDimFit.h. ◆ fMinResidualRow. Int_t TMultiDimFit::fMinResidualRow. protected . Row giving min re,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:64431,variab,variables,64431,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variables']
Modifiability,"whatVars randomized. Variables in whatVars that; are not in the prototype will be added as new columns to the generated dataset. RooDataSet * generate(RooAbsPdf::GenSpec& ) const; Generate data according to a pre-configured specification created by; RooAbsPdf::prepareMultiGen(). If many identical generation requests; are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); combination than calling the standard generate() multiple times as; initialization overhead is only incurred once. RooDataSet * generate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:68322,variab,variables,68322,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,3,['variab'],['variables']
Modifiability,"whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0. If expectedData is kTRUE (it is kFALSE by default), the returned histogram returns the 'expected'; data sample, i.e. no statistical fluctuations are present. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet* generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); Special generator interface for generation of 'global observables' -- for RooStats tools. RooPlot* plotOn(RooPlot* frame, RooLinkedList& cmdList) const; Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; will show a unit normalized curve in the frame variable, taken at the present value; of other observables defined for this PDF. If a PDF is plotted in a frame in which a dataset has already been plotted, it will; show a projected curve integrated over all variables that were present in the shown; dataset except for the one on the x-axis. The normalization of the curve will also; be adjusted to the event count of the plotted dataset. An informational message; will be printed for each projection step that is performed. This function takes the following named arguments. Projection control. Slice(const RooArgSet& set) -- Override default projection behaviour by omittting observables listed; in set from the projection, resulting a 'slice' plot. Slicing is usually; only sensible in discrete observables; Project(const RooArgSet& set) -- Override default projection behaviour by projecting over observables; given in set and complete ignoring the default projection behavior. Advanced use only.; ProjWData(const RooAbsData& d) -- Override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsPdf.html:67725,variab,variable,67725,root/html530/RooAbsPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsPdf.html,5,['variab'],['variable']
Modifiability,"when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TImagePalette * Create (Option_t *opts);  Factory method to creates an image palette of a specific typ. ;  ; static TImagePalette * CreateCOLPalette (Int_t nContours);  Factory method to creates an image palette for histogram plotting. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; UShort_t * fColorAlpha {nullptr};  [fNumPoints] alpha at each anchor point ;  ; UShort_t * fColorBlue {nullptr};  [fNumPoints] blue color at each anchor point ;  ; UShort_t * fColorGreen {nullptr};  [fNumPoints] green color at each anchor point ;  ; UShort_t * fColorRed {nullptr};  [fNumPoints] red color at each anchor point ;  ; UInt_t fNumPoints {0};  number of anchor points ;  ; Double_t * fPoints {nullptr};  [fNumPoints] value of each anchor point [0..1] ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTImagePalette.html:10820,inherit,inherited,10820,doc/master/classTImagePalette.html,https://root.cern,https://root.cern/doc/master/classTImagePalette.html,1,['inherit'],['inherited']
Modifiability,"where:. xyz : array of initial position; v : array of initial velocity; w : angular frequency; range: helix range; rtype: kHelixZ specifies allowed drawing range in helix Z direction, i.e., along B field. kLabZ specifies drawing range in lab frame. kHelixX, kHelixY, kLabX, kLabY, kUnchanged ... etc can also be specified; axis : helix axis. Example constructing a helix with several default values and drawing it:; {; TCanvas* helix_example_c1 = new TCanvas(""helix_example_c1"");; TView *view = TView::CreateView(1);; view->SetRange(-1,-1,-1,1,1,1);; THelix *helix = new THelix(0., 0., 0., 1., 0., 0.3, 10.);; helix->Draw();; }; TCanvasThe Canvas class.Definition TCanvas.h:23; THelix::THelixTHelix()Helix default constructor.Definition THelix.cxx:121; THelix::Drawvoid Draw(Option_t *option="""") overrideDraw this helix with its current attributes.Definition THelix.cxx:281; TViewSee TView3D.Definition TView.h:25; TView::CreateViewstatic TView * CreateView(Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr)Create a concrete default 3-d view via the plug-in manager.Definition TView.cxx:27; TView::SetRangevirtual void SetRange(const Double_t *min, const Double_t *max)=0. This initializes a helix with its axis in Z direction (rtype=kHelixZ). ; Definition at line 23 of file THelix.h. Public Member Functions;  THelix ();  Helix default constructor. ;  ;  THelix (const THelix &helix);  Helix copy constructor. ;  ;  THelix (Double_t const *xyz, Double_t const *v, Double_t w, Double_t const *range=nullptr, EHelixRangeType rtype=kHelixZ, Double_t const *axis=nullptr);  Helix normal constructor. ;  ;  THelix (Double_t x, Double_t y, Double_t z, Double_t vx, Double_t vy, Double_t vz, Double_t w);  Helix normal constructor. ;  ;  ~THelix () override;  Helix destructor. ;  ; void Copy (TObject &helix) const override;  Copy this helix to obj. ;  ; void Draw (Option_t *option="""") override;  Draw this helix with its current attributes. ;  ; Option_t * GetOption () const o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHelix.html:2525,plug-in,plug-in,2525,doc/master/classTHelix.html,https://root.cern,https://root.cern/doc/master/classTHelix.html,1,['plug-in'],['plug-in']
Modifiability,"which are used in calls to GetBinFactor() ;  ; TUnfoldBinning const * ToAxisBins (Int_t globalBin, Int_t *axisBins) const;  return distribution in which the bin is located and bin numbers on the corresponding axes ;  ; Int_t ToGlobalBin (Int_t const *axisBins, Int_t *isBelow=nullptr, Int_t *isAbove=nullptr) const;  get global bin number, given axis bin numbers ;  ; Int_t UpdateFirstLastBin (Bool_t startWithRootNode=kTRUE);  update fFirstBin and fLastBin members of this node and its children ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static TUnfoldBinningXML * ImportXMLNode (TXMLNode *node);  recursively import one node from the XML tree ;  . Additional Inherited Members;  Public Types inherited from TUnfoldBinning; enum  { MAXDIM =32; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TUnfoldBinning; TUnfoldBinning * childNode;  first daughter node ;  ; TObjArray * fAxisLabelList;  for each axis its name (TObjString), or names of unconnected bins ;  ; TObjArray * fAxisList;  for each axis the bin borders (TVectorD) ;  ; Double_t fBinFactorConstant;  common s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldBinningXML.html:23414,inherit,inherited,23414,doc/master/classTUnfoldBinningXML.html,https://root.cern,https://root.cern/doc/master/classTUnfoldBinningXML.html,2,['inherit'],['inherited']
Modifiability,"which can be conveniently invoked through a GUI that will appear at the end of the run of this macro. Launch the GUI via the command: root -l ./TMVAGui.C; You can also compile and run the example with the following commands make; ./TMVAClassification <Methods>; where: <Methods> = ""method1 method2"" are the TMVA classifier names example: ./TMVAClassification Fisher LikelihoodPCA BDT; If no method given, a default set is of classifiers is used. Project : TMVA - a ROOT-integrated toolkit for multivariate data analysis; Package : TMVA; Root Macro: TMVAClassification. ; ; ==> Start TMVAClassification; --- TMVAClassification : Using input file: ./files/tmva_class_example.root; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree TreeS of type Signal with 6000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree TreeB of type Background with 6000 events; Factory : Booking method: ␛[1mCuts␛[0m; : ; : Use optimization method: ""Monte Carlo""; : Use efficiency computation method: ""Event Selection""; : Use ""FSmart"" cuts for variable: 'myvar1'; : Use ""FSmart"" cuts for variable: 'myvar2'; : Use ""FSmart"" cuts for variable: 'var3'; : Use ""FSmart"" cuts for variable: 'var4'; Factory : Booking method: ␛[1mCutsD␛[0m; : ; CutsD : [dataset] : Create Transformation ""Decorrelate"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; : Use optimization method: ""Monte Carlo""; : Use efficiency computation method: ""Event Selection""; : Use ""FSmart"" cuts for variable: 'myvar1'; : Use ""FSmart"" cuts for variable: 'myvar2'; : Use ""FSmart"" cuts for variable: 'var3'; : Use ""FSmart"" cuts for variable: 'var4'; Factory : Booking method: ␛[1mLikelihood␛[0m; : ; Factory : Booking method: ␛[1mLikelihoodPCA␛[0m; : ; LikelihoodPCA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:1861,variab,variable,1861,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,4,['variab'],['variable']
Modifiability,"will be filled in histogram hname.; Note that the dimension of hname must match with the dimension of varexp. TSQLResult* Query(const char* varexp = """", const char* selection = """", Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Loop over entries and return a TSQLResult object containing entries following selection. Long64_t ReadFile(const char* filename, const char* branchDescriptor = """", char delimiter = ' '); Create or simply read branches from filename. if branchDescriptor = """" (default), it is assumed that the Tree descriptor; is given in the first line of the file with a syntax like; A/D:Table[2]/F:Ntracks/I:astring/C; otherwise branchDescriptor must be specified with the above syntax.; -If the type of the first variable is not specified, it is assumed to be ""/F""; -if the type of any other variable is not specified, the type of the previous; variable is assumed. eg; x:y:z (all variables are assumed of type ""F""; x/D:y:z (all variables are of type ""D""; x:y/D:z (x is type ""F"", y and z of type ""D""; -If the type is a string of characters. This will read; subsequent characters until a whitespace is found (whitespace; characters are considered to be blank, newline and tab). delimiter allows for the use of another delimiter besides whitespace.; This provides support for direct import of common data file formats; like csv. If delimiter != ' ' and branchDescriptor == """", then the; branch description is taken from the first line in the file, but; delimiter is used for the branch names tokenization rather than ':'.; Note however that if the values in the first line do not use the; /[type] syntax, all variables are assumed to be of type ""F"".; If the filename ends with extensions .csv or .CSV and a delimiter is; not specified (besides ' '), the delimiter is automatically set to ','. Lines in the input file starting with ""#"" are ignored.; This function will read and ignore any whitespace characters; (this includes blank spaces and the newline ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:115100,variab,variables,115100,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,4,['variab'],['variables']
Modifiability,"will be passed to the CINT interpreter. This combo box will keep the commands history and will allow you to re-execute the same commands during an editor session.; Keyboard Bindings; The following table lists the keyboard shortcuts and accelerator keys. Key: Action . Up Move cursor up. . Shift+Up Move cursor up and extend selection. . Down Move cursor down. . Shift+Down Move cursor down and extend selection. . Left Move cursor left. . Shift+Left Move cursor left and extend selection. . Right Move cursor right. . Shift+Right Move cursor right and extend selection. . Home Move cursor to begin of line. . Shift+Home Move cursor to begin of line and extend selection. . Ctrl+Home Move cursor to top of page. . End Move cursor to end of line. . Shift+End Move cursor to end of line and extend selection. . Ctrl+End Move cursor to end of page. . PgUp Move cursor up one page. . Shift+PgUp Move cursor up one page and extend selection. . PgDn Move cursor down one page. . Shift+PgDn Move cursor down one page and extend selection. . Delete Delete character after cursor, or text selection. . BackSpace Delete character before cursor, or text selection. . Ctrl+B Move cursor left. . Ctrl+D Delete character after cursor, or text selection. . Ctrl+E Move cursor to end of line. . Ctrl+H Delete character before cursor, or text selection. . Ctrl+K Delete characters from current position to the end of line. . Ctrl+U Delete current line. . Definition at line 33 of file TGTextEditor.h. Public Member Functions;  TGTextEditor (const char *filename=nullptr, const TGWindow *p=nullptr, UInt_t w=900, UInt_t h=600);  TGTextEditor constructor with file name as first argument. ;  ;  TGTextEditor (TMacro *macro, const TGWindow *p=nullptr, UInt_t w=0, UInt_t h=0);  TGTextEditor constructor with pointer to a TMacro as first argument. ;  ;  ~TGTextEditor () override;  TGTextEditor destructor. ;  ; void About ();  Display ROOT splash screen. ;  ; void AddLine (const char *string);  ; void AddLineFast (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditor.html:4261,extend,extend,4261,doc/master/classTGTextEditor.html,https://root.cern,https://root.cern/doc/master/classTGTextEditor.html,1,['extend'],['extend']
Modifiability,"will be stored If check_map==kFALSE, object will be stored in any case and pointer will not be registered in the map. ;  ; void PerformPostProcessing (TJSONStackObj *stack, const TClass *obj_cl=nullptr);  Function is converts TObject and TString structures to more compact representation. ;  ; TJSONStackObj * PopStack ();  remove one level from stack ;  ; TJSONStackObj * PushStack (Int_t inclevel=0, void *readnode=nullptr);  add new level to the structures stack ;  ; TJSONStackObj * Stack ();  ; void WorkWithClass (TStreamerInfo *info, const TClass *cl=nullptr);  Prepares buffer to stream data of specified class. ;  ; void WorkWithElement (TStreamerElement *elem, Int_t);  This is call-back from streamer which indicates that class member will be streamed Name of element used in JSON. ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) final;  Write object to buffer. Only used from TBuffer. ;  ;  Protected Member Functions inherited from TBufferText;  TBufferText ();  Default constructor. ;  ;  TBufferText (TBuffer::EMode mode, TObject *parent=nullptr);  Normal constructor. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; virtual void CheckCount (UInt_t);  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferJSON.html:47612,inherit,inherited,47612,doc/master/classTBufferJSON.html,https://root.cern,https://root.cern/doc/master/classTBufferJSON.html,1,['inherit'],['inherited']
Modifiability,"will draw the sum arr3 for the index 0 to 2 only if the; actual_size_of_arr3 is greater or equal to 3.; Note that the array in 'primary' is flatened/linearilized thus using; Alt$ with multi-dimensional arrays of different dimensions in unlikely; to yield the expected results. To visualize a bit more what elements; would be matched by TTree::Draw, TTree::Scan can be used:; tree->Scan(""arr1:Alt$(arr2,0)"");; will print on one line the value of arr1 and (arr2,0) that will be; matched by; tree->Draw(""arr1-Alt$(arr2,0)"");. The ternary operator is not directly support in TTree::Draw however, to plot the; equivalent of 'var2<20 ? -99 : var1', you can use:; tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");. Drawing a user function accessing the TTree data directly. If the formula contains a file name, TTree::MakeProxy will be used; to load and execute this file. In particular it will draw the; result of a function with the same name as the file. The function; will be executed in a context where the name of the branches can; be used as a C++ variable. For example draw px using the file hsimple.root (generated by the; hsimple.C tutorial), we need a file named hsimple.cxx:. double hsimple() {; return px;; }. MakeProxy can then be used indirectly via the TTree::Draw interface; as follow:; new TFile(""hsimple.root""); ntuple->Draw(""hsimple.cxx"");. A more complete example is available in the tutorials directory:; h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; Th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:75648,variab,variable,75648,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,3,['variab'],['variable']
Modifiability,"will lead to the deletion of its contents.; You can either make a shallow copy of the array: otherarr = new TObjArray(*myarr);; *otherarr = *myarr;; TObjArrayAn array of TObjects.Definition TObjArray.h:31; in which case ownership (if any) is not transfered but the other array points to the same object as the original array. Note that if the content of either array is deleted the other array is not notified in any way (i.e. still points to the now deleted objects).; You can also make a deep copy of the array: otherarr = (TObjArray*)myarr->Clone();; in which case the array and the content are both duplicated (i.e. otherarr and myarr do not point to the same objects). If myarr is set to the be the owner of its content, otherarr will also be set to the owner of its own content. ; Definition at line 31 of file TObjArray.h. Public Types; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObjArray (const TObjArray &a);  Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ;  ;  TObjArray (Int_t s=TCollection::kInitCapacity, Int_t lowerBound=0);  Create an object array. ;  ; virtual ~TObjArray ();  Delete an array. ;  ; void Add (TObject *obj) override;  ; void AddAfter (const TObject *after, TObject *obj) override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjArray.html:1874,inherit,inherited,1874,doc/master/classTObjArray.html,https://root.cern,https://root.cern/doc/master/classTObjArray.html,2,['inherit'],['inherited']
Modifiability,"will not be available to you for these classes. See “Cling the C++ Interpreter”. The ShowMembers and Streamer method, as well as the >> operator overloads, are implemented only if you use ClassDef and ClassImp. See $ROOTSYS/include/Rtypes.h for the definition of ClassDef and ClassImp. To exclude a data member from the Streamer, add a ! as the first character in the comments of the field:; Int_t fTempValue; //! temporary state value; 15.5.1 The LinkDef.h File; Step 3: The LinkDef.h file tells rootcling which classes should be added to the dictionary.; #ifdef __CLING__; #pragma link C++ class SClass;; #endif; Three options can trail the class name:. - : tells rootcling not to generate the Streamer method for this class. This is necessary for those classes that need a customized Streamer method. #pragma link C++ class SClass-; // no streamer. ! : tells rootcling not to generate the operator>>(TBuffer &b,MyClass *&obj) method for this class. This is necessary to be able to write pointers to objects of classes not inheriting from TObject. #pragma link C++ class SClass!; // no >> operator; // or; #pragma link C++ class SClass-!; // no streamer, no >> operator. + : in ROOT version 1 and 2 tells rootcling to generate a Streamer with extra byte count information. This adds an integer to each object in the output buffer, but it allows for powerful error correction in case a Streamer method is out of sync with data in the file. The + option is mutual exclusive with both the - and ! options. IMPORTANT NOTE: In ROOT Version 3 and later, a “+” after the class name tells rootcling to use the new I/O system. The byte count check is always added. The new I/O system has many advantages including support automatic schema evolution, full support for STL collections and better run-time performance. We strongly recommend using it.; #pragma link C++ class SClass+; // add byte count; For information on Streamers see “Input/Output”. To get help on rootcling type on the UNIX command line: ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:825031,inherit,inheriting,825031,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inheriting']
Modifiability,winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGWin32VirtualXProxy.cxx:249; namechar name[80]Definition TGX11.cxx:110; TVirtualRWMutex.h; R__WRITE_LOCKGUARD#define R__WRITE_LOCKGUARD(mutex)Definition TVirtualRWMutex.h:157; R__READ_LOCKGUARD#define R__READ_LOCKGUARD(mutex)Definition TVirtualRWMutex.h:154; ROOT::Math::GenAlgoOptions::PrintAllDefaultstatic void PrintAllDefault(std::ostream &os=std::cout)print all the default optionsDefinition GenAlgoOptions.cxx:67; ROOT::Math::GenAlgoOptions::Defaultstatic IOptions & Default(const char *algoname)Definition GenAlgoOptions.cxx:55; ROOT::Math::GenAlgoOptions::FindDefaultstatic IOptions * FindDefault(const char *algoname)Definition GenAlgoOptions.cxx:48; ROOT::Math::IOptionsGeneric interface for defining configuration options of a numerical algorithm.Definition IOptions.h:28; ROOT::Math::IOptions::Clonevirtual IOptions * Clone() const =0; ROOT::Math::IOptions::Printvirtual void Print(std::ostream &=std::cout) constprint optionsDefinition IOptions.cxx:56; ROOT::Math::MinimizerOptionsMinimizer options.Definition MinimizerOptions.h:40; ROOT::Math::MinimizerOptions::operator=MinimizerOptions & operator=(const MinimizerOptions &opt)assignment operatorsDefinition MinimizerOptions.cxx:151; ROOT::Math::MinimizerOptions::DefaultPrintLevelstatic int DefaultPrintLevel()Definition MinimizerOptions.cxx:97; ROOT::Math::MinimizerOptions::DefaultPrecisionstatic double DefaultPrecision()Definition MinimizerOptions.cxx:93; ROOT::Math::MinimizerOptions::Defaultstatic ROOT::Math::IOptions & Default(const char *name)Retrieve extra options for a given minimizer name.Definition MinimizerOptions.cxx:234; ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCallsstatic void SetDefaultMaxFunctionCalls(int m,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimizerOptions_8cxx_source.html:11383,config,configuration,11383,doc/master/MinimizerOptions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MinimizerOptions_8cxx_source.html,1,['config'],['configuration']
Modifiability,"window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiTitleBar;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiButtons.html:26736,inherit,inherited,26736,doc/master/classTGMdiButtons.html,https://root.cern,https://root.cern/doc/master/classTGMdiButtons.html,1,['inherit'],['inherited']
Modifiability,"wing frame initialized for this object, but no plot contents. ;  ; RooPlot * frame (Int_t nbins) const;  Create a new RooPlot on the heap with a drawing frame initialized for this object, but no plot contents. ;  ; Int_t getBin (const char *rangeName=nullptr) const override;  ; virtual Int_t getBin (const RooAbsBinning &binning) const;  ; Int_t getBin (const RooAbsBinning *ptr) const override;  ; const RooAbsBinning * getBinningPtr (const char *rangeName) const override;  ; virtual Int_t getBins (const char *name=nullptr) const;  Get number of bins of currently defined range. ;  ; double getBinWidth (Int_t i, const char *rangeName=nullptr) const override;  ; virtual double getBinWidth (Int_t i, const RooAbsBinning &binning) const;  ; virtual double getMax (const char *name=nullptr) const;  Get maximum of currently defined range. ;  ; virtual double getMin (const char *name=nullptr) const;  Get minimum of currently defined range. ;  ; std::pair< double, double > getRange (const char *name=nullptr) const;  Get low and high bound of the variable. ;  ; bool hasMax (const char *name=nullptr) const;  Check if variable has an upper bound. ;  ; bool hasMin (const char *name=nullptr) const;  Check if variable has a lower bound. ;  ; bool hasRange (const char *name) const override;  Check if variable has a binning with given name. ;  ; bool inRange (const char *name) const override;  Check if current value is inside range with given name. ;  ; bool inRange (double value, const char *rangeName, double *clippedValue=nullptr) const;  Return true if the input value is within our fit range. ;  ; void inRange (std::span< const double > values, std::string const &rangeName, std::vector< bool > &out) const;  Vectorized version of RooAbsRealLValue::inRange(double, const char*, double*). ;  ; bool isLValue () const override;  Is this argument an l-value, i.e., can it appear on the left-hand side of an assignment expression? LValues are also special since they can potentially be analytic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearVar.html:7967,variab,variable,7967,doc/master/classRooLinearVar.html,https://root.cern,https://root.cern/doc/master/classRooLinearVar.html,1,['variab'],['variable']
Modifiability,"wing frame initialized for this object, but no plot contents. ;  ; RooPlot * frame (Int_t nbins) const;  Create a new RooPlot on the heap with a drawing frame initialized for this object, but no plot contents. ;  ; Int_t getBin (const char *rangeName=nullptr) const override;  ; virtual Int_t getBin (const RooAbsBinning &binning) const;  ; Int_t getBin (const RooAbsBinning *ptr) const override;  ; const RooAbsBinning * getBinningPtr (const char *rangeName) const override;  ; virtual Int_t getBins (const char *name=nullptr) const;  Get number of bins of currently defined range. ;  ; double getBinWidth (Int_t i, const char *rangeName=nullptr) const override;  ; virtual double getBinWidth (Int_t i, const RooAbsBinning &binning) const;  ; virtual double getMax (const char *name=nullptr) const;  Get maximum of currently defined range. ;  ; virtual double getMin (const char *name=nullptr) const;  Get minimum of currently defined range. ;  ; std::pair< double, double > getRange (const char *name=nullptr) const;  Get low and high bound of the variable. ;  ; bool hasMax (const char *name=nullptr) const;  Check if variable has an upper bound. ;  ; bool hasMin (const char *name=nullptr) const;  Check if variable has a lower bound. ;  ; bool hasRange (const char *name) const override;  Check if variable has a binning with given name. ;  ; bool inRange (const char *name) const override;  Check if current value is inside range with given name. ;  ; bool inRange (double value, const char *rangeName, double *clippedValue=nullptr) const;  Return true if the input value is within our fit range. ;  ; void inRange (std::span< const double > values, std::string const &rangeName, std::vector< bool > &out) const;  Vectorized version of RooAbsRealLValue::inRange(double, const char*, double*). ;  ; virtual bool isJacobianOK (const RooArgSet &depList) const;  ; bool isLValue () const override;  Is this argument an l-value, i.e., can it appear on the left-hand side of an assignment expression? ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:8705,variab,variable,8705,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,2,['variab'],['variable']
Modifiability,"wing the content. ;  ; Items _items;  A list of the items we contain. ;  ; double _normBinWidth = 0;  Histogram bin width (for normalization) ;  ; double _normNumEvts = 0;  Number of events in histogram (for normalization) ;  ; const RooPlotable * _normObj = nullptr;  ! Pointer to normalization object ; ;  ; RooArgSet * _normVars = nullptr;  Variables that PDF plots should be normalized over. ;  ; double _padFactor;  Scale our y-axis to _padFactor of our maximum contents. ;  ; RooAbsRealLValue * _plotVar = nullptr;  The variable we are plotting. ;  ; RooArgSet * _plotVarSet = nullptr;  A list owning the cloned tree nodes of the plotVarClone. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static bool _addDirStatus = true;  static flag controlling AutoDirectoryAdd feature ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooPlot.h>. Inheritance diagram for RooPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Items. using RooPlot::Items = std::vector<std::pair<TObject*,std::string> >. Definition at line 47 of file RooPlot.h. Constructor & Destructor Documentation. ◆ RooPlot() [1/9]. RooPlot::RooPlot ; (; ). Default constructor coverity[UNINIT_CTOR]. ; Definition at line 85 of file RooPlot.cxx. ◆ RooPlot() [2/9]. RooPlot::RooPlot ; (; const char * ; name, . const char * ; title, . const RooAbsRealLValue & ; var, . double ; xmin, . double ; xmax, . Int_t ; nBins . ). Create an 1-dimensional with all properties taken from 'var', but with an explicit range [xmin,xmax] and a default binning of 'nbins'. ; Definition at line 176 of file RooPlot.cxx. ◆ RooPlot() [3/9]. RooPlot::RooPlot ; (; const RooAbsRealLValue & ; var, . double ; xmin, . double ; xmax, . I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:26776,inherit,inherited,26776,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['inherit'],['inherited']
Modifiability,"with __attribute__((unused)).; 302 * On the other hand, if the function is marked with this attribute,; 303 * but is used, the compiler raises a completely idiotic; 304 * ""used-but-marked-unused"" warning - and; 305 * #pragma GCC diagnostic ignored ""-Wused-but-marked-unused""; 306 * raises error: unknown option after ""#pragma GCC diagnostic"".; 307 * Disable this warning completely, until the GCC guys sober up; 308 * again.; 309 */; 310 ; 311#pragma GCC diagnostic ignored ""-Wunused-function""; 312 ; 313#define FUNCTION_MAY_BE_UNUSED /* __attribute__((unused)) */; 314 ; 315#else; 316#define FUNCTION_MAY_BE_UNUSED; 317#endif; 318 ; 319 ; 320/* Some ANSI #includes are not available on Windows CE and Zephyr */; 321#if !defined(_WIN32_WCE) && !defined(__ZEPHYR__); 322#include <errno.h>; 323#include <fcntl.h>; 324#include <signal.h>; 325#include <stdlib.h>; 326#include <sys/stat.h>; 327#include <sys/types.h>; 328#endif /* !_WIN32_WCE */; 329 ; 330 ; 331#if defined(__clang__); 332/* When using -Weverything, clang does not accept it's own headers; 333 * in a release build configuration. Disable what is too much in; 334 * -Weverything. */; 335#pragma clang diagnostic ignored ""-Wdisabled-macro-expansion""; 336#endif; 337 ; 338#if defined(__GNUC__) || defined(__MINGW32__); 339/* Who on earth came to the conclusion, using __DATE__ should rise; 340 * an ""expansion of date or time macro is not reproducible""; 341 * warning. That's exactly what was intended by using this macro.; 342 * Just disable this nonsense warning. */; 343 ; 344/* And disabling them does not work either:; 345 * #pragma clang diagnostic ignored ""-Wno-error=date-time""; 346 * #pragma clang diagnostic ignored ""-Wdate-time""; 347 * So we just have to disable ALL warnings for some lines; 348 * of code.; 349 * This seems to be a known GCC bug, not resolved since 2012:; 350 * https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53431; 351 */; 352#endif; 353 ; 354 ; 355#if defined(__MACH__) /* Apple OSX section */; 356 ; 357#if defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:12088,config,configuration,12088,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],['configuration']
Modifiability,"with awmi function. However it converges faster. The example for data given in Figure 5.6 (38 parameters) is presented in the following table:. # of iterations; Chi awmi; Chi-Stiefel. 1; 24.989; 10.415. 5; 20.546; 1.0553. 10; 6.256; 0.84383. 50; 1.0985; 0.64297. 100; 0.657; 1 0.64297. 500; 0.651; 94 0.64297. Again Stiefel-Hestens method converges faster. However its calculation is for this number of parameters approximately 3 times longer. For larger number of parameters the time needed to calculate the inversion grows with the cube of the number of fitted parameters. For example the fit of large number of parameters (2068) for data in Figure 5.8 using awmi algorithm lasted about 12 hours (using 450 MHz PC). The calculation using matrix inversion method is not realizable in reasonable time.; 6 TRANSFORMS; 6.1 1-DIMENSIONAL SPECTRA; Orthogonal transforms can be successfully used for the processing of nuclear spectra . They can be used to remove high frequency noise, to increase signal-to-background ratio as well as to enhance low intensity components [14]. We have implemented also the function for the calculation of the commonly used orthogonal transforms. Haar; Walsh; Cos; Sin; Fourier; Hartley. Between these transform one can define so called generalized mixed transforms that are also implemented in the transform function. Fourier-Haar; Fourier-Walsh; Walsh-Haar; Cos-Walsh; Cos-Haar; Sin-Walsh; Sin-Haar. The suitability of the application of appropriate transform depends on the character of the data, i.e., on the shape of dominant components contained in the data. The form of the transform function is as follows:; char *Transform1(const float *source,; float *dest,; int size,; int type,; int direction,; int degree);; This function transforms the source spectrum. The calling program should fill in input parameters. Transformed data are written into dest spectrum.; Function parameters:. source pointer to the vector of source spectrum, its length should be equal to siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/spectrum/Spectrum.html:54387,enhance,enhance,54387,root/html534/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/html534/guides/spectrum/Spectrum.html,1,['enhance'],['enhance']
Modifiability,"with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction4PdfBinding_double_double_double_double_bool_.html:42690,config,configuration,42690,root/html534/RooCFunction4PdfBinding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html534/RooCFunction4PdfBinding_double_double_double_double_bool_.html,1,['config'],['configuration']
Modifiability,"with mag, theta, phi. ;  ; void SetPerp (Double_t);  ; void SetPhi (Double_t);  Set phi keeping mag and theta constant (BaBar). ;  ; void SetPtEtaPhi (Double_t pt, Double_t eta, Double_t phi);  Set Pt, Eta and Phi. ;  ; void SetPtThetaPhi (Double_t pt, Double_t theta, Double_t phi);  Set Pt, Theta and Phi. ;  ; void SetTheta (Double_t);  Set theta keeping mag and phi constant (BaBar). ;  ; void SetX (Double_t);  ; void SetXYZ (Double_t x, Double_t y, Double_t z);  ; void SetY (Double_t);  ; void SetZ (Double_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TVector3. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t Theta () const;  Return the polar angle. ;  ; TVector3 & Transform (const TRotation &);  Transform this vector with a TRotation. ;  ; TVector3 Unit () const;  Return unit vector parallel to this. ;  ; Double_t x () const;  ; Double_t X () const;  ; TVector2 XYvector () const;  ; Double_t y () const;  ; Double_t Y () const;  ; Double_t z () const;  ; Double_t Z () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer faci",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVector3.html:9060,inherit,inherited,9060,doc/master/classTVector3.html,https://root.cern,https://root.cern/doc/master/classTVector3.html,1,['inherit'],['inherited']
Modifiability,"with multi-dimensional input distributions.; In addition, there are underflow and overflow bins; or other background bins, possibly determined with the help of auxillary; measurements. In TUnfoldDensity, such complex binning schemes are handled with the help; of the class TUnfoldBinning. For each vector there is a tree; structure. The tree nodes hold multi-dimensiopnal distributions. For example, the ""measurement"" tree could have two leaves, one for; the primary distribution and one for auxillary measurements. Similarly, the ""truth"" tree could have two leaves, one for the; signal and one for the background. each of the leaves may then have a multi-dimensional distribution. The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to the one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. Choice of the regularisation. In TUnfoldDensity, two methods are implemented to determine tau**2; (1) ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class; (2) ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized; this function is implemented in the TUnfoldDensity class,; such that the variable could be made depend on the binning scheme. Each of the algorithms has its own advantages and disadvantages. The algorithm (1) does not work if the input data are too similar to the; MC prediction, that is unfolding with tau=0 gives a least-square sum; of zero. Typical no-go cases of the L-curve scan are:; (a) the number of measurements is too small (e.g. ny=nx); (b) the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y]. The algorithm (2) only works if the variable does have a real minimum; as a function of tau.; If global correlations are minimized, the situation is as follows:; The matrix of migration typically introduces negative correlations.; The area co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfoldDensity.html:2975,variab,variable,2975,root/html534/TUnfoldDensity.html,https://root.cern,https://root.cern/root/html534/TUnfoldDensity.html,3,['variab'],['variable']
Modifiability,"with names matching the pattern will be printed. The client argument is used in recursive calls to properly display the value or shape nature of the client-server links. It should be zero in calls initiated by users. ; Definition at line 2007 of file RooAbsArg.cxx. ◆ printCompactTreeHook(). void RooAbsArg::printCompactTreeHook ; (; std::ostream & ; os, . const char * ; ind = """" . ). virtual . Hook function interface for object to insert additional information when printed in the context of a tree structure. ; This default implementation prints nothing ; Reimplemented in RooNumConvolution, RooAbsOptTestStatistic, and RooAbsTestStatistic.; Definition at line 2104 of file RooAbsArg.cxx. ◆ printComponentTree(). void RooAbsArg::printComponentTree ; (; const char * ; indent = """", . const char * ; namePat = nullptr, . Int_t ; nLevel = 999 . ). Print tree structure of expression tree on given ostream, only branch nodes are printed. ; Lead nodes (variables) will not be shown; If namePat is not ""*"", only nodes with names matching the pattern will be printed. ; Definition at line 2050 of file RooAbsArg.cxx. ◆ printDirty(). void RooAbsArg::printDirty ; (; bool ; depth = true); const. Print information about current value dirty state information. ; If depth flag is true, information is recursively printed for all nodes in this arg tree. ; Definition at line 1752 of file RooAbsArg.cxx. ◆ printMetaArgs(). virtual void RooAbsArg::printMetaArgs ; (; std::ostream & ; ); const. inlinevirtual . Reimplemented in RooLagrangianMorphFunc, RooAddition, RooAddModel, RooAddPdf, RooFFTConvPdf, RooFormulaVar, RooGenericPdf, RooMappedCategory, RooNumConvPdf, RooProdPdf, RooProduct, RooProjectedPdf, RooRealIntegral, RooRealSumFunc, and RooRealSumPdf.; Definition at line 304 of file RooAbsArg.h. ◆ printMultiline(). void RooAbsArg::printMultiline ; (; std::ostream & ; os, . Int_t ; contents, . bool ; verbose = false, . TString ; indent = """" . ); const. overridevirtual . Implement multi-line detailed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:83143,variab,variables,83143,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,1,['variab'],['variables']
Modifiability,"with nbins. ;  ; void FillYpdfHists (Int_t nbins=100);  Fills the histograms of pdf-s of y variables with binning nbins. ;  ; void FillYvarHists (Int_t nbins=100);  Fill the histograms of y variables. ;  ; Int_t GetNevents ();  ; Int_t GetNspecies ();  ; void GetSWeights (Double_t *weights);  Returns the matrix of sweights. ;  ; void GetSWeights (TMatrixD &weights);  Returns the matrix of sweights. ;  ; TH1D * GetSWeightsHist (Int_t ixvar, Int_t ispecies, Int_t iyexcl=-1);  Returns the histogram of a variable, weighted with sWeights. ;  ; TObjArray * GetSWeightsHists ();  Returns an array of all histograms of variables, weighted with sWeights. ;  ; TString * GetTreeExpression ();  ; TString * GetTreeName ();  ; TString * GetTreeSelection ();  ; TH1D * GetXvarHist (Int_t ixvar);  Returns the histogram of variable ixvar. ;  ; TObjArray * GetXvarHists ();  Returns the array of histograms of x variables (not weighted). ;  ; TH1D * GetYpdfHist (Int_t iyvar, Int_t ispecies);  Returns the histogram of the pdf of variable iyvar for species #ispecies, binning nbins. ;  ; TObjArray * GetYpdfHists ();  Returns the array of histograms of pdf's of y variables with binning nbins. ;  ; TH1D * GetYvarHist (Int_t iyvar);  Returns the histogram of variable iyvar.If histograms have not already been filled, they are filled with default binning 100. ;  ; TObjArray * GetYvarHists ();  Returns the array of histograms of y variables. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void MakeSPlot (Option_t *option=""v"");  Calculates the sWeights. ;  ; void RefillHist (Int_t type, Int_t var, Int_t nbins, Double_t min, Double_t max, Int_t nspecies=-1);  The Fill...Hist() methods fill the histograms with the real limits on the variables This method allows to refill the specified histogram with user-set boundaries min and max. ;  ; void SetInitialNumbersOfSpecies (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:12852,variab,variable,12852,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,1,['variab'],['variable']
Modifiability,"with one regression-target. void Train( void ); compute fSumMatx. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); Returns the MVA classification output. const std::vector< Float_t >& GetRegressionValues(); Calculates the regression output. void InitMatrices( void ); Initializaton method; creates global matrices and vectors. void GetSum( void ); Calculates the matrix transposed(X)*W*X with W being the diagonal weight matrix; and X the coordinates values. void GetSumVal( void ); Calculates the vector transposed(X)*W*Y with Y being the target vector. void GetLDCoeff( void ); Calculates the coeffiecients used for classification/regression. void ReadWeightsFromStream(istream& i); read LD coefficients from weight file. void AddWeightsXMLTo(void* parent) const; create XML description for LD classification and regression; (for arbitrary number of output classes/targets). void ReadWeightsFromXML(void* wghtnode); read coefficients from xml weight file. void MakeClassSpecific(ostream& , const TString& ) const; write LD-specific classifier response. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void DeclareOptions(); MethodLD options. void ProcessOptions(); this is the preparation for training. void PrintCoefficients( void ); Display the classification/regression coefficients for each variable. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodLD(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""LD"", TDirectory* theTargetDir = 0); constructor. » Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag » Copyright (c) 2008-2011: *; » Last changed: Tue Jun 2 16:17:09 2015 » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodLD.html:19133,variab,variables,19133,root/html604/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodLD.html,2,['variab'],"['variable', 'variables']"
Modifiability,with parametrized ranges to define non-rectangular regions for fitting and integration ;  ; file  rf313_paramranges.py;   Multidimensional models: working with parameterized ranges to define non-rectangular regions for fitting and integration ;  ; file  rf314_paramfitrange.C;   Multidimensional models: working with parametrized ranges in a fit. ;  ; file  rf314_paramfitrange.py;   Multidimensional models: working with parameterized ranges in a fit. ;  ; file  rf315_projectpdf.C;   Multidimensional models: marginizalization of multi-dimensional pdfs through integration ;  ; file  rf315_projectpdf.py;   Multidimensional models: marginizalization of multi-dimensional pdfs through integration ;  ; file  rf316_llratioplot.C;   Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf ;  ; file  rf316_llratioplot.py;   Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf ;  ; file  rf401_importttreethx.C;   Data and categories: advanced options for importing data from ROOT TTree and THx histograms ;  ; file  rf401_importttreethx.py;   'DATA AND CATEGORIES' RooFit tutorial macro #401 ;  ; file  rf402_datahandling.C;   Data and categories: tools for manipulation of (un)binned datasets ;  ; file  rf402_datahandling.py;   Data and categories: tools for manipulation of (un)binned datasets ;  ; file  rf403_weightedevts.C;   Data and categories: using weights in unbinned datasets ;  ; file  rf403_weightedevts.py;   'DATA AND CATEGORIES' RooFit tutorial macro #403 ;  ; file  rf404_categories.C;   Data and categories: working with RooCategory objects to describe discrete variables ;  ; file  rf404_categories.py;   Data and categories: working with ROOT.RooCategory objects to describe discrete variables ;  ; file  rf405_realtocatfuncs.C;   Data and categories: demonstration of real-->discrete mapping fu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:10153,enhance,enhanced,10153,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['enhance'],['enhanced']
Modifiability,"with the ""pt"" of selected particles for each event, Define() can be used to create a column that contains the desired array elements as follows:; // h is filled with all the elements of `good_pts`, for each event; auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); .Histo1D(""good_pts"");; ROOT::VecOps::RVec< float >; ptTPaveText * ptDefinition entrylist_figure1.C:7; And in Python:; h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); Learn more at ROOT::VecOps::RVec. Transformations: manipulating data. Filters; A filter is created through a call to Filter(f, columnList) or Filter(filterString). In the first overload, f can be a function, a lambda expression, a functor class, or any other callable object. It must return a bool signalling whether the event has passed the selection (true) or not (false). It should perform ""read-only"" operations on the columns, and should not have side-effects (e.g. modification of an external or static variable) to ensure correctness when implicit multi-threading is active. The second overload takes a string with a valid C++ expression in which column names are used as variable names (e.g. Filter(""x[0] + x[1] > 0"")). This is a convenience feature that comes with a certain runtime overhead: C++ code has to be generated on the fly from this expression before using it in the event loop. See the paragraph about ""Just-in-time compilation"" below for more information.; RDataFrame only evaluates filters when necessary: if multiple filters are chained one after another, they are executed in order and the first one returning false causes the event to be discarded and triggers the processing of the next entry. If multiple actions or transformations depend on the same filter, that filter is not executed multiple times for each entry: after the first access it simply serves a cached result.; Named filters and cutflow reports; An optional string parameter name can be passed to the Filter() method to create a named",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:27508,variab,variable,27508,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,['variab'],['variable']
Modifiability,"with the new parameters and copy object attributes.Definition TMathText.cxx:541; TMathText::TMathTextTMathText()Default constructor.Definition TMathText.cxx:345; TMathText::PaintMathTextvirtual void PaintMathText(Double_t x, Double_t y, Double_t angle, Double_t size, const char *text)Paint text (used by Paint()).Definition TMathText.cxx:577; TMathText::Copyvoid Copy(TObject &text) const overrideCopy.Definition TMathText.cxx:394; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::AppendPadvirtual void AppendPad(Option_t *option="""")Append graphics object to current pad.Definition TObject.cxx:190; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TStringBasic string class.Definition TString.h:139; TString::LengthSsiz_t Length() constDefinition TString.h:417; TString::ReplaceTString & Replace(Ssiz_t pos, Ssiz_t n, const char *s)Definition TString.h:694; TString::Dataconst char * Data() constDefinition TString.h:376; TString::ReplaceAllTString & ReplaceAll(const TString &s1, const TString &s2)Definition TString.h:704; TString::RemoveTString & Remove(Ssiz_t pos)Definition TString.h:685; TString::ContainsBool_t Contains(const char *pat, ECaseCompare cmp=kExact) constDefinition TString.h:632; TString::IndexSsiz_t Index(const char *pat, Ssiz_t i=0, ECaseCompare cmp=kExact) constDefinition TString.h:651; TTF::fgFacestatic FT_Face fgFace[kTTMaxFonts]font faceDefinition TTF.h:82; TTF::SetTextFontstatic void SetTextFont(Font_t fontnumber)Set specified ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMathText_8cxx_source.html:34133,inherit,inherits,34133,doc/master/TMathText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMathText_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"with the same host as ctx are cleaned. ;  . Private Attributes; TList * fCleanup;  ; void * fContext;  ; TDatime fExpDate;  ; TString fHost;  ; TString fID;  ; Int_t fMethod;  ; TString fMethodName;  ; Int_t fOffSet;  ; TString fToken;  ; TString fUser;  . Friends; class TRootSecContext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSecContext.h>. Inheritance diagram for TSecContext:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSecContext() [1/3]. TSecContext::TSecContext ; (; const TSecContext & ; sc). protected . copy constructor ; Definition at line 113 of file TSecContext.cxx. ◆ TSecContext() [2/3]. TSecContext::TSecContext ; (; const char * ; url, . Int_t ; meth, . Int_t ; offset, . const char * ; token, . const char * ; id, . TDatime ; expdate = kROOTTZERO, . void * ; ctx = nullptr . ). Ctor for SecContext object. ; User and host from url = user@host . ; Definition at line 78 of file TSecContext.cxx. ◆ TSecContext() [3/3]. TSecContext::TSecContext ; (; const char * ; user, . const char * ; host, . Int_t ; meth, . Int_t ; offset, . const char * ; id, . const char * ; token, . TDatime ; expdate = kROOTTZERO, . void * ; ctx = nullptr . ). Ctor for SecContext o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSecContext.html:12036,inherit,inherited,12036,doc/master/classTSecContext.html,https://root.cern,https://root.cern/doc/master/classTSecContext.html,1,['inherit'],['inherited']
Modifiability,"with workers; TStringfVarExpInternal variable to pass drawing options; static Int_tfgWrksMaxMax number of workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofLite(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. ~TProofLite(); Destructor. Int_t GetNumberOfWorkers(const char* url = 0); Static method to determine the number of workers giving priority to users request.; Otherwise use the system information, if available, or just start; the minimal number, i.e. 2 . Int_t SetupWorkers(Int_t opt = 0, TList* wrks = 0); Start up PROOF workers. void NotifyStartUp(const char* action, Int_t done, Int_t tot); Notify setting-up operation message. Int_t SetProofServEnv(const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofLite.html:26032,config,config,26032,root/html530/TProofLite.html,https://root.cern,https://root.cern/root/html530/TProofLite.html,5,['config'],['config']
Modifiability,"within one TTree entry) of the value of the; 4222/// elements of the formula given as a parameter.; 4223/// - `MinIf$(formula,condition)`; 4224/// - `MaxIf$(formula,condition)` : return the minimum (maximum) (within one TTree entry); 4225/// of the value of the elements of the formula given as a parameter; 4226/// if they match the condition. If no element matches the condition,; 4227/// the result is zero. To avoid the resulting peak at zero, use the; 4228/// pattern:; 4229/// ~~~ {.cpp}; 4230/// tree->Draw(""MinIf$(formula,condition)"",""condition"");; 4231/// ~~~; 4232/// which will avoid calculation `MinIf$` for the entries that have no match; 4233/// for the condition.; 4234/// - `Alt$(primary,alternate)` : return the value of ""primary"" if it is available; 4235/// for the current iteration otherwise return the value of ""alternate"".; 4236/// For example, with arr1[3] and arr2[2]; 4237/// ~~~ {.cpp}; 4238/// tree->Draw(""arr1+Alt$(arr2,0)"");; 4239/// ~~~; 4240/// will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; 4241/// Or with a variable size array arr3; 4242/// ~~~ {.cpp}; 4243/// tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; 4244/// ~~~; 4245/// will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); 4246/// As a comparison; 4247/// ~~~ {.cpp}; 4248/// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; 4249/// ~~~; 4250/// will draw the sum arr3 for the index 0 to 2 only if the; 4251/// actual_size_of_arr3 is greater or equal to 3.; 4252/// Note that the array in 'primary' is flattened/linearized thus using; 4253/// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; 4254/// to yield the expected results. To visualize a bit more what elements; 4255/// would be matched by TTree::Draw, TTree::Scan can be used:; 4256/// ~~~ {.cpp}; 4257/// tree->Scan(""arr1:Alt$(arr2,0)"");; 4258/// ~~~; 4259/// will print on one line the value of arr1 and (arr2,0) that will be; 4260/// matched by; 4261/// ~~~ {.cpp}; 4262/// tree->D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:170507,variab,variable,170507,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"within statistics, leading to additional contributions to the overall likelihood. This leads to many more fit parameters (one per bin per template), but the minimization with respect to these additional parameters is done analytically rather than introducing them as formal fit parameters. Some special care needs to be taken in the case of bins with zero content.; TMultiDimFit implements multi-dimensional function parametrization for multi-dimensional data by fitting them to multi-dimensional data using polynomial or Chebyshev or Legendre polynomial; TSpectrum contains advanced spectra processing functions for 1- and 2-dimensional background estimation, smoothing, deconvolution, peak search and fitting, and orthogonal transformations.; RooFit is a complete toolkit for fitting and data analysis modeling (see the RooFit User Guide at ftp://root.cern.ch/root/doc/RooFit_Users_Manual_2.07-29.pdf); TSplot to disentangle signal from background via an extended maximum likelihood fit and with a tool to access the quality and validity of the fit producing distributions for the control variables. (see M. Pivk and F.R. Le Diberder, Nucl. Inst. Meth.A 555, 356-369, 2005).; 13.14.3 Multi-variate Analysis Classes; TMultiLayerPerceptron is a Neural Network class (see for more details the chapter “Neural Networks”).; TPrincipal provides the Principal Component Analysis.; TRobustEstimator is a robust method for minimum covariance determinant estimator (MCD).; TMVA is a package for multivariate data analysis (see https://github.com/root-project/root/blob/master/documentation/tmva/UsersGuide/TMVAUsersGuide.pdf the User’s Guide).; 14 Linear Algebra in ROOT; The linear algebra package is supposed to give a complete environment in ROOT to perform calculations like equation solving and eigenvalue decompositions. Most calculations are performed in double precision. For backward compatibility, some classes are also provided in single precision like TMatrixF, TMatrixFSym and TVectorF. Copy con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:767373,extend,extended,767373,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,"['extend', 'variab']","['extended', 'variables']"
Modifiability,"without prefix) in current blob row ;  ; TSQLResult * fClassData;  ; TSQLRow * fClassRow;  ; Bool_t fCurrentBlob;  ; TSQLClassInfo * fInfo;  ; Int_t fLocatedColumn;  ; const char * fLocatedField;  ; const char * fLocatedValue;  ; Long64_t fObjId;  ; Bool_t fOwner;  ; TObjArray * fUnpack;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSQLObjectData.h>. Inheritance diagram for TSQLObjectData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSQLObjectData() [1/2]. TSQLObjectData::TSQLObjectData ; (; ). default constructor ; Definition at line 67 of file TSQLObjectData.cxx. ◆ TSQLObjectData() [2/2]. TSQLObjectData::TSQLObjectData ; (; TSQLClassInfo * ; sqlinfo, . Long64_t ; objid, . TSQLResult * ; classdata, . TSQLRow * ; classrow, . TSQLResult * ; blobdata, . TSQLStatement * ; blobstmt . ). normal constructor, ; Definition at line 77 of file TSQLObjectData.cxx. ◆ ~TSQLObjectData(). TSQLObjectData::~TSQLObjectData ; (; ). override . destructor of TSQLObjectData object ; Definition at line 95 of file TSQLObjectData.cxx. Member Function Documentation. ◆ AddUnpack(). void TSQLObjectData::AddUnpack ; (; const char * ; tname, . const char * ; value . ). add emulated data this ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLObjectData.html:12115,inherit,inherited,12115,doc/master/classTSQLObjectData.html,https://root.cern,https://root.cern/doc/master/classTSQLObjectData.html,1,['inherit'],['inherited']
Modifiability,"without taking the lock,; 6089 // this is valid since fProperty is atomic and set as; 6090 // the last operation before return.; 6091 if (fProperty!=(-1)) return fProperty;; 6092 ; 6093 R__LOCKGUARD(gInterpreterMutex);; 6094 ; 6095 // Check if another thread set fProperty while we; 6096 // were waiting.; 6097 if (fProperty!=(-1)) return fProperty;; 6098 ; 6099 // Avoid asking about the class when it is still building; 6100 if (TestBit(kLoading)) return fProperty;; 6101 ; 6102 // When called via TMapFile (e.g. Update()) make sure that the dictionary; 6103 // gets allocated on the heap and not in the mapped file.; 6104 TMmallocDescTemp setreset;; 6105 ; 6106 TClass *kl = const_cast<TClass*>(this);; 6107 ; 6108 kl->fStreamerType = TClass::kDefault;; 6109 kl->fStreamerImpl = &TClass::StreamerDefault;; 6110 ; 6111 if (InheritsFrom(TObject::Class())) {; 6112 kl->SetBit(kIsTObject);; 6113 ; 6114 // Is it DIRECT inheritance from TObject?; 6115 Int_t delta = kl->GetBaseClassOffsetRecurse(TObject::Class());; 6116 if (delta==0) kl->SetBit(kStartWithTObject);; 6117 ; 6118 kl->fStreamerType = kTObject;; 6119 kl->fStreamerImpl = &TClass::StreamerTObject;; 6120 }; 6121 ; 6122 if (HasInterpreterInfo()) {; 6123 ; 6124 // This code used to use ClassInfo_Has|IsValidMethod but since v6; 6125 // they return true if the routine is defined in the class or any of; 6126 // its parent. We explicitly want to know whether the function is; 6127 // defined locally.; 6128 if (!const_cast<TClass*>(this)->GetClassMethodWithPrototype(""Streamer"",""TBuffer&"",kFALSE)) {; 6129 ; 6130 kl->SetBit(kIsForeign);; 6131 kl->fStreamerType = kForeign;; 6132 kl->fStreamerImpl = &TClass::StreamerStreamerInfo;; 6133 ; 6134 } else if ( kl->fStreamerType == TClass::kDefault ) {; 6135 if (kl->fConvStreamerFunc) {; 6136 kl->fStreamerType = kInstrumented;; 6137 kl->fStreamerImpl = &TClass::ConvStreamerInstrumented;; 6138 } else if (kl->fStreamerFunc) {; 6139 kl->fStreamerType = kInstrumented;; 6140 kl->fStreamerImpl = &T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:235087,inherit,inheritance,235087,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"without taking the lock,; 6156 // this is valid since fProperty is atomic and set as; 6157 // the last operation before return.; 6158 if (fProperty!=(-1)) return fProperty;; 6159 ; 6160 R__LOCKGUARD(gInterpreterMutex);; 6161 ; 6162 // Check if another thread set fProperty while we; 6163 // were waiting.; 6164 if (fProperty!=(-1)) return fProperty;; 6165 ; 6166 // Avoid asking about the class when it is still building; 6167 if (TestBit(kLoading)) return fProperty;; 6168 ; 6169 // When called via TMapFile (e.g. Update()) make sure that the dictionary; 6170 // gets allocated on the heap and not in the mapped file.; 6171 TMmallocDescTemp setreset;; 6172 ; 6173 TClass *kl = const_cast<TClass*>(this);; 6174 ; 6175 kl->fStreamerType = TClass::kDefault;; 6176 kl->fStreamerImpl = &TClass::StreamerDefault;; 6177 ; 6178 if (InheritsFrom(TObject::Class())) {; 6179 kl->SetBit(kIsTObject);; 6180 ; 6181 // Is it DIRECT inheritance from TObject?; 6182 Int_t delta = kl->GetBaseClassOffsetRecurse(TObject::Class());; 6183 if (delta==0) kl->SetBit(kStartWithTObject);; 6184 ; 6185 kl->fStreamerType = kTObject;; 6186 kl->fStreamerImpl = &TClass::StreamerTObject;; 6187 }; 6188 ; 6189 if (HasInterpreterInfo()) {; 6190 ; 6191 // This code used to use ClassInfo_Has|IsValidMethod but since v6; 6192 // they return true if the routine is defined in the class or any of; 6193 // its parent. We explicitly want to know whether the function is; 6194 // defined locally.; 6195 if (!const_cast<TClass*>(this)->GetClassMethodWithPrototype(""Streamer"",""TBuffer&"",kFALSE)) {; 6196 ; 6197 kl->SetBit(kIsForeign);; 6198 kl->fStreamerType = kForeign;; 6199 kl->fStreamerImpl = &TClass::StreamerStreamerInfo;; 6200 ; 6201 } else if ( kl->fStreamerType == TClass::kDefault ) {; 6202 if (kl->fConvStreamerFunc) {; 6203 kl->fStreamerType = kInstrumented;; 6204 kl->fStreamerImpl = &TClass::ConvStreamerInstrumented;; 6205 } else if (kl->fStreamerFunc) {; 6206 kl->fStreamerType = kInstrumented;; 6207 kl->fStreamerImpl = &T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:237838,inherit,inheritance,237838,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"wn fox is not here anymore""); l->SetTextFont(i*10+2);; l->Draw();; }; }; 9.6.1.5 How to use True Type Fonts; You can activate the True Type Fonts by adding the following line in your .rootrc file.; Unix.*.Root.UseTTFonts: true; You can check that you indeed use the TTF in your Root session. When the TTF is active, you get the following message at the start of a session: “Free Type Engine v1.x used to render TrueType fonts.” You can also check with the command:; gEnv->Print(); 9.6.1.6 Setting Text Size; Use TAttText::SetTextSize to set the text size.; root[] la->SetTextSize(size); The size is the text size expressed in percentage of the current pad size.; The text size in pixels will be:. If current pad is horizontal, the size in pixels = textsize * canvas_height; If current pad is vertical, the size in pixels = textsize * canvas_width. The user interface for changing the text color, size, font and alignment looks like shown in this picture. It takes place in the editor frame anytime the selected object inherits the class TAttText.; 9.6.2 Line Attributes; All classes manipulating lines have to deal with line attributes: color, style and width. This is done by using secondary inheritance of the class TAttLine. The line color may be set by a method call. What is said here applies to all objects deriving from TAttLine, and there are many (histograms, plots). We will take an example that may be transposed to other types. Suppose “li” is a TLine object. The line color is set with:; root[] li->SetLineColor(color); The argument color is a color number. The colors are described in “Color and Color Palettes”; The line style may be set by a method call. What is said here applies to all objects deriving from TAttLine, and there are many (histograms, plots). We will take an example that may be transposed to other types. Suppose “li” is a TLine object. The line style is set with:; root[] li->SetLineStyle(style); The argument style is one of: 1=solid, 2=dash, 3=dot, 4=dash-dot.; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:357726,inherit,inherits,357726,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inherits']
Modifiability,"wn one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void DeclareOptions ();  options for this method ;  ; void Init ();  initialize the method ;  ; void InitCircularTree (const DataSetInfo &dsi);  initialize the circular tree ;  ; Bool_t PassesCut (const Event *ev, UInt_t methodIdx);  ; void ProcessOptions ();  process user options ;  . Private Attributes; std::vector< TTreeFormula * > fCatFormulas;  needed in conjunction with TTreeFormulas for evaluation category expressions ;  ; TTree * fCatTree;  ; DataSetManager * fDataSetManager;  . Friends; class Experimental::Classification;  ; class Factory;  ; class MethodBoost;  ; class Reader;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/MethodCategory.h>. Inheritance diagram for TMVA::MethodCategory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html:29865,inherit,inherited,29865,doc/master/classTMVA_1_1MethodCategory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html,2,['inherit'],['inherited']
Modifiability,"wn the TF1 function pointer; boolfPolynomialflag for polynomial functions; static doublefgEpsepsilon used in derivative calculation h ~ eps |p|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedMultiTF1(TF1& f, unsigned int dim = 0). constructor from a function pointer to a TF1; If dim = 0 dimension is taken from TF1::GetNdim().; IN case of multi-dimensional function created using directly TF1 object the dimension; returned by TF1::GetNdim is always 1. The user must then pass the correct value of dim. virtual ~WrappedMultiTF1(). Destructor (no operations). Function pointer is not owned. { if (fOwnFunc && fFunc) delete fFunc; }. WrappedMultiTF1(const ROOT::Math::WrappedMultiTF1& rhs). Copy constructor. IMultiGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. unsigned int NDim() const; function dimension. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values from TF1). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (from TF1). void ParameterGradient(const double* x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void SetDerivPrecision(double eps); precision value used for calculating the derivative step-size; h = eps * |x|. The default is 0.001, give a smaller in case function changes rapidly. double GetDerivPrecision(); get precision value used for calculating the derivative step-size. const TF1 * GetFunction() const; method to retrieve the internal function pointer. { return fFunc; }. void SetAndCopyFunction(const TF1* f = 0); method to set a new function pointer and copy it inside.; By calling this method the class m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__WrappedMultiTF1.html:3965,inherit,inherited,3965,root/html604/ROOT__Math__WrappedMultiTF1.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__WrappedMultiTF1.html,1,['inherit'],['inherited']
Modifiability,"wn; Int_tfForceReadForce Read flag; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*fManagerPointer to the formula manager; Int_tfMultiplicityIndicator of the variability of the size of entries; Int_t*fNbins![fDimension] Number of bins per dimension; Int_tfNfill! Total number of histogram fills; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); Long64_tfOldEstimatevalue of Tree fEstimate when selector is called; TH1*fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*fSelectPointer to selection formula; Bool_tfSelectMultipletrue if selection has a variable index; Long64_tfSelectedRowsNumber of selected entries; Long64_tTSelector::fStatusSelector status; TTree*fTreePointer to current Tree; TObject*fTreeElistpointer to Tree Event list; TEntryListArray*fTreeElistArray! pointer to Tree Event list array; Double_t**fVal![fSelectedRows][fDimension] Local buffer for the variables; Int_tfValSize; TTreeFormula**fVar![fDimension] Array of pointers to variables formula; Bool_t*fVarMultiple![fDimension] true if fVar[i] has a variable index; Double_t*fVmax![fDimension] Maxima of varexp columns; Double_t*fVmin![fDimension] Minima of varexp columns; Double_t*fW![fSelectedRows]Local buffer for weights; Double_tfWeightTree weight (see TTree::SetWeight). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSelectorDraw(); Default selector constructor. ~TSelectorDraw(); Selector destructor. void Begin(TTree* tree); Called everytime a loop on the tree(s) starts. void ClearFormula(); Delete internal buffers. Bool_t CompileVariables(const char* varexp = """", const char* selection = """"); Compile input variables and selection expression. varexp is an expression of the general form ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorDraw.html:8600,variab,variable,8600,root/html534/TSelectorDraw.html,https://root.cern,https://root.cern/root/html534/TSelectorDraw.html,4,['variab'],"['variable', 'variables']"
Modifiability,"wned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_t_ownBasisFlag indicating ownership of _basis ; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyxDependent/convolution variable.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooResolutionModel.html:40576,config,configuration,40576,root/html526/RooResolutionModel.html,https://root.cern,https://root.cern/root/html526/RooResolutionModel.html,3,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"wner () const;  ; TObject * GetParent (Int_t uid, TProcessID *context=nullptr) const;  Return object corresponding to uid. ;  ; TObjArray * GetParents () const;  ; Int_t GetSize (Int_t pid) const;  ; UInt_t GetUID () const;  ; TProcessID * GetUIDContext () const;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This function is called by TRef::Streamer or TStreamerInfo::ReadBuffer when reading a reference. ;  ; TRefTable & operator= (const TRefTable &)=delete;  ; virtual void ReadBuffer (TBuffer &b);  Fill buffer b with the fN elements in fParentdIDs. ;  ; virtual void Reset (Option_t *="""");  Clear all entries in the table. ;  ; virtual Int_t SetParent (const TObject *parent, Int_t branchID);  – Set current parent object, typically a branch of a tree. ;  ; virtual void SetUID (UInt_t uid, TProcessID *context=nullptr);  ; void Streamer (TBuffer &) override;  Stream an object of class TRefTable. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRefTable.html:4102,inherit,inherited,4102,doc/master/classTRefTable.html,https://root.cern,https://root.cern/doc/master/classTRefTable.html,1,['inherit'],['inherited']
Modifiability,"wner. ;  ; void RotateX (Double_t angle) override;  Rotate about X axis with angle expressed in degrees. ;  ; void RotateY (Double_t angle) override;  Rotate about Y axis with angle expressed in degrees. ;  ; void RotateZ (Double_t angle) override;  Rotate about Z axis with angle expressed in degrees. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDx (Double_t dx) override;  ; void SetDy (Double_t dy) override;  ; void SetDz (Double_t dz) override;  ; void SetRotation (const TGeoRotation &other);  Copy the rotation from another one. ;  ; void SetRotation (const TGeoRotation *rot);  Assign a foreign rotation to the combi. The rotation is NOT owned by this. ;  ; void SetTranslation (const TGeoTranslation &tr);  copy the translation component ;  ; void SetTranslation (Double_t *vect);  set the translation component ;  ; void SetTranslation (Double_t dx, Double_t dy, Double_t dz);  set the translation component ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMatrix;  TGeoMatrix ();  dummy constructor ;  ;  TGeoMatrix (const char *name);  Constructor. ;  ;  ~TGeoMatrix () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  Get total size in bytes of this. ;  ; void GetHomogenousMatrix (Double_t *hmat) const;  The homogenous matrix associated with the transformation is used for piling up's and visualization. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; TClass * IsA () const override;  ; Bool_t IsCombi () const;  ; Bool_t IsGeneral () const;  ; Bool_t IsIdentity () const;  ; Bool_t IsOwned () const;  ; Bool_t IsReflection () const;  ; Bool_t IsRegistered () const;  ; Bool_t IsRotAboutZ () const;  Returns true if no rotation or the rotation is about Z axis. ;  ; Bool_t IsRotation () const;  ; Bool_t IsScale () const;  ; Bool_t IsShared () const;  ; Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGenTrans.html:4521,inherit,inherited,4521,doc/master/classTGeoGenTrans.html,https://root.cern,https://root.cern/doc/master/classTGeoGenTrans.html,1,['inherit'],['inherited']
Modifiability,"wner; version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; checksum : comma delimited list of the checksums of the class layout that this rule applies to.; code={...} : code to be executed for the rule or name of the function implementing it. void AdoptSchemaRules(ROOT::TSchemaRuleSet* rules); Adopt a new set of Data Model Evolution rules. const ROOT::TSchemaRuleSet* GetSchemaRules() const; Return the set of the schema rules if any. ROOT::TSchemaRuleSet* GetSchemaRules(Bool_t create = kFALSE); Return the set of the schema rules if any.; If create is true, create an empty set. void AddImplFile(const char* filename, int line). void AddRef(TClassRef* ref); Register a TClassRef object which points to this TClass object.; When this TClass object is deleted, 'ref' will be 'Reset'. Int_t AutoBrowse(TObject* obj, TBrowser* browser); Browse external object inherited from TObject.; It passes through inheritance tree and calls TBrowser::Add; in appropriate cases. Static function. Int_t Browse(void* obj, TBrowser* b) const; Browse objects of of the class described by this TClass object. void Browse(TBrowser* b); This method is called by a browser to get the class information. void BuildRealData(void* pointer = 0, Bool_t isTransient = kFALSE); Build a full list of persistent data members.; Scans the list of all data members in the class itself and also; in all base classes. For each persistent data member, inserts a; TRealData object in the list fRealData. If pointer is not 0, uses the object at pointer; otherwise creates a temporary object of this class. void BuildEmulatedRealData(const char* name, Long_t offset, TClass* cl); Build the list of real data for an emulated class. void CalculateStreamerOffset() const; Calculate the offset between an object of this class to; its base class TObject. The pointer can be adjusted by; that offset to access any virtual method of TObject like; Streamer() and ShowMemb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClass.html:21428,inherit,inheritance,21428,root/html528/TClass.html,https://root.cern,https://root.cern/root/html528/TClass.html,3,['inherit'],['inheritance']
Modifiability,"wningPtr< RooAbsReal > RooAbsReal::createScanRI ; (; const RooArgSet & ; iset, . const RooArgSet & ; nset, . Int_t ; numScanBins, . Int_t ; intOrder . ). Utility function for createRunningIntegral that construct an object implementing the numeric scanning technique for calculating the running integral. ; Definition at line 3810 of file RooAbsReal.cxx. ◆ DeclFileName(). static const char * RooAbsReal::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 548 of file RooAbsReal.h. ◆ defaultErrorLevel(). virtual double RooAbsReal::defaultErrorLevel ; (; ); const. inlinevirtual . Reimplemented in RooAddition, RooFit::TestStatistics::RooRealL, RooFormulaVar, RooFit::Experimental::RooFuncWrapper, RooChi2Var, RooNLLVar, RooXYChi2Var, and ProgressMonitor.; Definition at line 248 of file RooAbsReal.h. ◆ defaultIntegratorConfig(). RooNumIntConfig * RooAbsReal::defaultIntegratorConfig ; (; ). static . Returns the default numeric integration configuration for all RooAbsReals. ; Definition at line 3272 of file RooAbsReal.cxx. ◆ derivative() [1/2]. RooDerivative * RooAbsReal::derivative ; (; RooRealVar & ; obs, . const RooArgSet & ; normSet, . Int_t ; order, . double ; eps = 0.001 . ). Return function representing first, second or third order derivative of this function. ; Definition at line 3999 of file RooAbsReal.cxx. ◆ derivative() [2/2]. RooDerivative * RooAbsReal::derivative ; (; RooRealVar & ; obs, . Int_t ; order = 1, . double ; eps = 0.001 . ). Return function representing first, second or third order derivative of this function. ; Definition at line 3987 of file RooAbsReal.cxx. ◆ doEval(). void RooAbsReal::doEval ; (; RooFit::EvalContext & ; ctx); const. virtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented in RooStats::HistFactory::FlexibleInterpVar, ParamHistFunc, PiecewiseInterpolation, RooArgusBG, RooBernstein, RooBifurGauss, RooBM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:96999,config,configuration,96999,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"wningPtr< RooAbsReal > RooAbsReal::createScanRI ; (; const RooArgSet & ; iset, . const RooArgSet & ; nset, . Int_t ; numScanBins, . Int_t ; intOrder . ). Utility function for createRunningIntegral that construct an object implementing the numeric scanning technique for calculating the running integral. ; Definition at line 3886 of file RooAbsReal.cxx. ◆ DeclFileName(). static const char * RooAbsReal::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 558 of file RooAbsReal.h. ◆ defaultErrorLevel(). virtual double RooAbsReal::defaultErrorLevel ; (; ); const. inlinevirtual . Reimplemented in RooAddition, RooChi2Var, RooFit::TestStatistics::RooRealL, RooFormulaVar, RooFit::Experimental::RooFuncWrapper, RooNLLVar, RooXYChi2Var, and ProgressMonitor.; Definition at line 248 of file RooAbsReal.h. ◆ defaultIntegratorConfig(). RooNumIntConfig * RooAbsReal::defaultIntegratorConfig ; (; ). static . Returns the default numeric integration configuration for all RooAbsReals. ; Definition at line 3354 of file RooAbsReal.cxx. ◆ derivative() [1/2]. RooDerivative * RooAbsReal::derivative ; (; RooRealVar & ; obs, . const RooArgSet & ; normSet, . Int_t ; order, . double ; eps = 0.001 . ). Return function representing first, second or third order derivative of this function. ; Definition at line 4075 of file RooAbsReal.cxx. ◆ derivative() [2/2]. RooDerivative * RooAbsReal::derivative ; (; RooRealVar & ; obs, . Int_t ; order = 1, . double ; eps = 0.001 . ). Return function representing first, second or third order derivative of this function. ; Definition at line 4063 of file RooAbsReal.cxx. ◆ doEval(). void RooAbsReal::doEval ; (; RooFit::EvalContext & ; ctx); const. virtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented in RooStats::HistFactory::FlexibleInterpVar, ParamHistFunc, PiecewiseInterpolation, RooArgusBG, RooBernstein, RooBifurGauss, RooBM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:98267,config,configuration,98267,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"wningPtr< RooAbsReal > createIntegral(const RooArgSet &iset, const char *rangeName) constCreate integral over observables in iset in range named rangeName.Definition RooAbsReal.h:207; RooAbsReal::defaultErrorLevelvirtual double defaultErrorLevel() constDefinition RooAbsReal.h:248; RooAbsReal::_DEBUG_getValdouble _DEBUG_getVal(const RooArgSet *normalisationSet) constDebug version of getVal(), which is slow and does error checking.Definition RooAbsReal.cxx:4434; RooAbsReal::createFundamentalRooFit::OwningPtr< RooAbsArg > createFundamental(const char *newname=nullptr) const overrideCreate a RooRealVar fundamental object with our properties.Definition RooAbsReal.cxx:3130; RooAbsReal::plotSanityChecksbool plotSanityChecks(RooPlot *frame) constUtility function for plotOn(), perform general sanity check on frame to ensure safe plotting operatio...Definition RooAbsReal.cxx:2860; RooAbsReal::bindVarsRooFit::OwningPtr< RooAbsFunc > bindVars(const RooArgSet &vars, const RooArgSet *nset=nullptr, bool clipInvalid=false) constCreate an interface adaptor f(vars) that binds us to the specified variables (in arbitrary order).Definition RooAbsReal.cxx:2980; RooAbsReal::selectNormalizationvirtual void selectNormalization(const RooArgSet *depSet=nullptr, bool force=false)Interface function to force use of a given set of observables to interpret function value.Definition RooAbsReal.cxx:3360; RooAbsReal::derivativeRooDerivative * derivative(RooRealVar &obs, Int_t order=1, double eps=0.001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::chi2FitTovirtual RooFit::OwningPtr< RooFitResult > chi2FitTo(RooDataHist &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={})Perform a fit to given histogram.Definition RooAbsReal.cxx:4105; RooAbsReal::asTFTF1 * asTF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:38039,adapt,adaptor,38039,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,2,"['adapt', 'variab']","['adaptor', 'variables']"
Modifiability,"wo filled histograms and you only want to; plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); to create a graph object.; III. Filling with events; You can fill the TEfficiency object by calling the Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; The boolean flag ""bPassed"" indicates whether the current event is a good; (both histograms are filled) or not (only fTotalHistogram is filled).; The variables x,y and z determine the bin which is filled. For lower; dimensions the z- or even the y-value may be omitted.; . Picture; Source. {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");. //only for this documentation; return c1;; }; . You can also set the number of passed or total events for a bin directly by; using the SetPassedEvents or SetTotalEvents method.; IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let k denotes the number of passed events and N the number of total; events.; Frequentist methods; The expectation value of the number of passed events is given by the true; efficiency times the total number of events. One can estimate the efficiency; by replacing the expected number of passed events by the observed number of; passed events. . Bayesian methods; In bayesian statistics a likelihood-function (how probable is it to get the; observed data assuming a true efficiency) and a pri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEfficiency.html:5656,variab,variable,5656,root/html602/TEfficiency.html,https://root.cern,https://root.cern/root/html602/TEfficiency.html,2,['variab'],['variable']
Modifiability,"wo functions, that we will call methods or member functions, to the TLine class. The first method is used for initializing the line objects we would build. It is called a constructor. The second one is the Draw method itself. Therefore, to build and draw a line, we have to do:; TLine l(0.2,0.2,0.8,0.9);; l.Draw();; The first line builds the object l by calling its constructor. The second line calls the TLine::Draw() method of this object. You don’t need to pass any parameters to this method since it applies to the object l, which knows the coordinates of the line. These are internal variables x1, y1, x2, y2 that were initialized by the constructor.; 6.2 Inheritance and Data Encapsulation; We have defined a TLine class that contains everything necessary to draw a line. If we want to draw an arrow, is it so different from drawing a line? We just have to draw a triangle at one end. It would be very inefficient to define the class TArrow from scratch. Fortunately, inheritance allows a class to be defined from an existing class. We would write something like:; class TArrow : public TLine {; int ArrowHeadSize;; void Draw();; void SetArrowSize(int arrowsize);; }; The keyword “public” will be explained later. The class TArrow now contains everything that the class TLine does, and a couple of more things, the size of the arrowhead and a function that can change it. The Draw method of TArrow will draw the head and call the draw method of TLine. We just have to write the code for drawing the head!; 6.2.1 Method Overriding; Giving the same name to a method (remember: method = member function of a class) in the child class (TArrow) as in the parent (TLine) does not give any problem. This is called overriding a method. Draw in TArrow overrides Draw in TLine. There is no possible ambiguity since, when one calls the Draw() method; this applies to an object whose type is known. Suppose we have an object l of type TLine and an object a of type TArrow. When you want to draw the line, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:243981,inherit,inheritance,243981,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inheritance']
Modifiability,"wo iterator objects. ;  ; TObject * operator* () const override;  Return current object or nullptr. ;  ; TIterator & operator= (const TIterator &) override;  ; void Reset () override;  ;  Public Member Functions inherited from TIterator; virtual ~TIterator ();  ; virtual Option_t * GetOption () const;  ; virtual TClass * IsA () const;  ; TObject * operator() ();  ; Bool_t operator== (const TIterator &other) const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from GenericRooFIter; virtual ~GenericRooFIter ();  . Private Member Functions; bool atEnd () const;  ; RooAbsArg * nextChecked ();  . Private Attributes; const RooAbsArg * fCurrentElem;  ! ;  ; std::size_t fIndex;  ! ;  ; const STLContainer & fSTLContainer;  ! ;  . Additional Inherited Members;  Static Public Member Functions inherited from TIterator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Member Functions inherited from TIterator;  TIterator ();  ;  TIterator (const TIterator &);  . #include <RooLinkedListIter.h>. Inheritance diagram for TIteratorToSTLInterface< STLContainer >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TIteratorToSTLInterface(). template<class STLContainer > . TIteratorToSTLInterface< STLContainer >::TIteratorToSTLInterface ; (; const STLContainer & ; container). inline . Definition at line 101 of file RooLinkedListIter.h. Member Function Documentation. ◆ atEnd(). template<class STLContainer > . bool TIteratorToSTLInterface< STLContainer >::atEnd ; (; ); const. inlineprivate . Definition at line 166 of file RooLinkedListIter.h. ◆ GetCollection(). template<class STLContainer > . const TCollection * TIteratorToSTLInterface< STLContainer >::GetCollection ; (; ); const. inlineoverrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIteratorToSTLInterface.html:2768,inherit,inherited,2768,doc/master/classTIteratorToSTLInterface.html,https://root.cern,https://root.cern/doc/master/classTIteratorToSTLInterface.html,2,['inherit'],['inherited']
Modifiability,"wo muons""); ; ; def define_variables(df):; """"""; Define the variables which shall be used for training; """"""; return df.Define(""Muon_pt_1"", ""Muon_pt[0]"")\; .Define(""Muon_pt_2"", ""Muon_pt[1]"")\; .Define(""Electron_pt_1"", ""Electron_pt[0]"")\; .Define(""Electron_pt_2"", ""Electron_pt[1]""); ; ; variables = [""Muon_pt_1"", ""Muon_pt_2"", ""Electron_pt_1"", ""Electron_pt_2""]; ; ; if __name__ == ""__main__"":; for filename, label in [[""SMHiggsToZZTo4L.root"", ""signal""], [""ZZTo2e2mu.root"", ""background""]]:; print("">>> Extract the training and testing events for {} from the {} dataset."".format(; label, filename)); ; # Load dataset, filter the required events and define the training variables; filepath = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/"" + filename; df = ROOT.RDataFrame(""Events"", filepath); df = filter_events(df); df = define_variables(df); ; # Book cutflow report; report = df.Report(); ; # Split dataset by event number for training and testing; columns = ROOT.std.vector[""string""](variables); df.Filter(""event % 2 == 0"", ""Select events with even event number for training"")\; .Snapshot(""Events"", ""train_"" + label + "".root"", columns); df.Filter(""event % 2 == 1"", ""Select events with odd event number for training"")\; .Snapshot(""Events"", ""test_"" + label + "".root"", columns); ; # Print cutflow report; report.Print(); formatOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva100__DataPreparation_8py.html:1657,variab,variables,1657,doc/master/tmva100__DataPreparation_8py.html,https://root.cern,https://root.cern/doc/master/tmva100__DataPreparation_8py.html,1,['variab'],['variables']
Modifiability,"work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoTubeSeg; void InitTrigonometry ();  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoTube.h>. Inheritance diagram for TGeoCtub:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoCtub() [1/4]. TGeoCtub::TGeoCtub ; (; ). ◆ TGeoCtub() [2/4]. TGeoCtub::TGeoCtub ; (; Double_t ; rmin, . Double_t ; rmax, . Double_t ; dz, . Double_t ; phi1, . Double_t ; phi2, . Double_t ; lx, . Double_t ; ly, . Double_t ; lz, . Double_t ; tx, . Double_t ; ty, . Double_t ; tz . ). ◆ TGeoCtub() [3/4]. TGeoCtub::TGeoCtub ; (; const char * ; name, . Double_t ; rmin, . Double_t ; rmax, . Double_t ; dz, . Double_t ; phi1, . Double_t ; phi2, . Double_t ; lx, . Double_t ; ly, . Double_t ; lz, . Double_t ; tx, . Double_t ; ty, . Double_t ; tz . ). ◆ TGeoCtub() [4/4]. TGeoCtub::TGeoCtub ; (; Double_t * ; par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCtub.html:27913,inherit,inherited,27913,doc/master/classTGeoCtub.html,https://root.cern,https://root.cern/doc/master/classTGeoCtub.html,1,['inherit'],['inherited']
Modifiability,"wptr, Int_t *col,Element *data);; It copies input arrays into matrix .; copy constructors; SetMatrixArray(Int_t nr,Int_t *irow,Int_t *icol,Element *data) where it is expected that the irow,icol and data array contain nr entries . Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; SetMatrixArray(Int_t nr,Int_t nrows,Int_t ncols,Int_t *irow,; Int_t *icol,Element *data) where it is expected that the irow, icol and data array contain nr entries . It allows to reshape the matrix according to nrows and ncols. Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; TMatrixTSparse a(n,m); for(....) { a(i,j) = .... This is a very flexible method but expensive :; if no entry for slot (i,j) is found in the sparse index table it will be entered, which involves some memory management !; before invoking this method in a loop it is smart to first set the index table through a call to SetSparseIndex(..). SetSub(Int_t row_lwb,Int_t col_lwb,const TMatrixTBase &source) the matrix to be inserted at position (row_lwb,col_lwb) can be both dense or sparse . . Definition at line 36 of file TMatrixTSparse.h. Public Types; enum  EMatrixCreatorsOp1 { kZero; , kUnit; , kTransposed; , kAtA; };  ; enum  EMatrixCreatorsOp2 { kMult; , kMultTranspose; , kPlus; , kMinus; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSparse.html:4064,flexible,flexible,4064,doc/master/classTMatrixTSparse.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html,1,['flexible'],['flexible']
Modifiability,"wrapper around RooAbsPdf::extendedTerm(double, RooArgSet const *, double, bool) const, where the number of observed events and observables to be used as the normalization set for the pdf is extracted from a RooAbsData.; For successful operation, the PDF implementation must indicate that it is extendable by overloading canBeExtended(), and must implement the expectedEvents() function.; Parameters. [in]dataThe RooAbsData to retrieve the set of observables and number of expected events. ; [in]weightSquaredIf set to true, the extended term will be scaled by the ratio of squared event weights over event weights: \( \sum w_{i}^2 / \sum w_{i} \). Intended to be used by fits with the SumW2Error() option that can be passed to RooAbsPdf::fitTo() (see the documentation of said function to learn more about the interpretation of fits with squared weights). ; [in]doOffsetSee RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const. . Definition at line 793 of file RooAbsPdf.cxx. ◆ extendMode(). virtual ExtendMode RooAbsPdf::extendMode ; (; ); const. inlinevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented in RooAddModel, RooAddPdf, RooBinSamplingPdf, RooExtendedTerm, RooExtendPdf, RooProdPdf, RooProjectedPdf, RooRealSumPdf, RooSimultaneous, RooNormalizedPdf, RooFixedProdPdf, and xRooProjectedPdf.; Definition at line 216 of file RooAbsPdf.h. ◆ fitTo(). template<typename... CmdArgs_t> . RooAbsPdf::fitTo ; (; RooAbsData & ; data, . CmdArgs_t const &... ; cmdArgs . ). inline . Fit PDF to given dataset. ; If dataset is unbinned, an unbinned maximum likelihood is performed. If the dataset is binned, a binned maximum likelihood is performed. By default the fit is executed through the MINUIT commands MIGRAD, HESSE in succession.; Parameters. dataReference to a RooAbsData object representing the dataset. ; cmdArgsVari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:103310,extend,extendMode,103310,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['extend'],['extendMode']
Modifiability,"write; kWriteDelete; };. protected:. char*TBuffer::fBufCurCurrent position in buffer; char*TBuffer::fBufMaxEnd of buffer; Int_tTBuffer::fBufSizeSize of buffer; char*TBuffer::fBufferBuffer used to store objects; vector<TVirtualArray*>TBuffer::fCacheStackStack of pointers to the cache where to temporarily store the value of 'missing' data members; TExMap*fClassMapMap containing object,class pairs for reading; Int_tfDisplacementValue to be added to the map offsets; TStreamerInfo*fInfoPointer to TStreamerInfo object writing/reading the buffer; vector<TStreamerInfo*>fInfoStackStack of pointers to the TStreamerInfos; TExMap*fMapMap containing object,offset pairs for reading/writing; Int_tfMapCountNumber of objects or classes in map; Int_tfMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tfPidOffsetOffset to be added to the pid index in this key/buffer.; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; Int_tTBuffer::fVersionBuffer format version; static Int_tfgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferFile(TBuffer::EMode mode); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. TBufferFile(TBuffer::EMode mode, Int_t bufsiz); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. TBufferFile(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; to TBuffer via the buf argument. By default this buffer will be adopted; unless adopt is false.; If the ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBufferFile.html:17681,extend,extending,17681,root/html528/TBufferFile.html,https://root.cern,https://root.cern/root/html528/TBufferFile.html,4,['extend'],['extending']
Modifiability,"writing to XML; TH1*fEffSefficiency histogram for rootfinder; vector<const std::vector<TMVA::Event*>*>fEventCollectionsif the method needs the complete event-collection, the transformed event coll. ist stored here.; TStringfFileDirunix sub-directory for weight files (default: ""weights""); Bool_tfHasMVAPdfsMVA Pdfs are created for this classifier; Bool_tfHelphelp flag; Bool_tfIgnoreNegWeightsInTrainingIf true, events with negative weights are not used in training; TStringfJobNamename of job -> user defined, appears in weight files; TMVA::PDF*fMVAPdfBbackground MVA PDF; TMVA::PDF*fMVAPdfSsignal MVA PDF; Double_tfMeanBmean (background); Double_tfMeanSmean (signal); TDirectory*fMethodBaseDirbase directory for the method; TStringfMethodNamename of the method (set in derived class); TMVA::Types::EMVAfMethodTypetype of method (set in derived class); Int_tfNbinsMVAPdfnumber of bins used in histogram that creates PDF; Bool_tfNormalisenormalise input variables; Int_tfNsmoothMVAPdfnumber of times a histogram is smoothed before creating the PDF; TStringfParentDirmethod parent name, like booster name; UInt_tfROOTTrainingVersionROOT version used for training; Double_tfRmsBRMS (background); Double_tfRmsSRMS (signal); Double_tfSignalReferenceCutminimum requirement on the MVA output to declare an event signal-like; Double_tfSignalReferenceCutOrientationminimum requirement on the MVA output to declare an event signal-like; TMVA::PDF*fSplBPDFs of MVA distribution (background); TMVA::TSpline1*fSplRefBhelper splines for RootFinder (background); TMVA::TSpline1*fSplRefShelper splines for RootFinder (signal); TMVA::PDF*fSplSPDFs of MVA distribution (signal); TMVA::PDF*fSplTrainBPDFs of training MVA distribution (background); TSpline*fSplTrainEffBvsSsplines for training signal eff. versus background eff.; TMVA::TSpline1*fSplTrainRefBhelper splines for RootFinder (background); TMVA::TSpline1*fSplTrainRefShelper splines for RootFinder (signal); TMVA::PDF*fSplTrainSPDFs of training MVA distribu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBase.html:17952,variab,variables,17952,root/html530/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBase.html,3,['variab'],['variables']
Modifiability,"written.; 231/// UPDATE | Open an existing file for writing. If no file exists, it is created.; 232/// READ | Open an existing file for reading (default).; 233/// NET | Used by derived remote file access classes, not a user callable option.; 234/// WEB | Used by derived remote http access class, not a user callable option.; 235/// READ_WITHOUT_GLOBALREGISTRATION | Used by TTreeProcessorMT, not a user callable option.; 236///; 237/// If option = """" (default), READ is assumed.; 238/// The file can be specified as a URL of the form:; 239///; 240/// file:///user/rdm/bla.root or file:/user/rdm/bla.root; 241///; 242/// The file can also be a member of an archive, in which case it is; 243/// specified as:; 244///; 245/// multi.zip#file.root or multi.zip#0; 246///; 247/// which will open file.root which is a member of the file multi.zip; 248/// archive or member 1 from the archive. For more on archive file; 249/// support see the TArchiveFile class.; 250/// TFile and its remote access plugins can also be used to open any; 251/// file, i.e. also non ROOT files, using:; 252///; 253/// file.tar?filetype=raw; 254///; 255/// This is convenient because the many remote file access plugins allow; 256/// easy access to/from the many different mass storage systems.; 257/// The title of the file (ftitle) will be shown by the ROOT browsers.; 258/// A ROOT file (like a Unix file system) may contain objects and; 259/// directories. There are no restrictions for the number of levels; 260/// of directories.; 261/// A ROOT file is designed such that one can write in the file in pure; 262/// sequential mode (case of BATCH jobs). In this case, the file may be; 263/// read sequentially again without using the file index written; 264/// at the end of the file. In case of a job crash, all the information; 265/// on the file is therefore protected.; 266/// A ROOT file can be used interactively. In this case, one has the; 267/// possibility to delete existing objects and add new ones.; 268/// When",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:9741,plugin,plugins,9741,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['plugin'],['plugins']
Modifiability,"wser is reloaded; load of widgets code only when really required (shorter startup time for RBrowser). JavaScript ROOT; Major JSROOT update to version 6. update all used libraries d3.js, three.js, MathJax.js, openui5; change to Promise based interface for all async methods, remove call-back arguments; change scripts names, core scripts name now JSRoot.core.js; unify function/methods naming conventions, many changes in method names; provide central code loader via JSROOT.require, supporting 4 different loading engines; many nice features and many bug fixes; see JSROOT v6 release notes. Class Reference Guide; One can now select a class’s documentation for a specific version. If a class does not exist in a given version, that version is grayed out, see for instance the documentation for ROOT::Experimental::RNTupleReader.; Build, Configuration and Testing Infrastructure. a new cmake variable, CMAKE_INSTALL_PYTHONDIR, has been added: it allows customization of the installation directory of ROOT’s python modules; the developer build option asserts is introduced to enable/disable asserts via the NDEBUG C/CXX flag. Asserts are always enabled for CMAKE_BUILD_TYPE=Debug and dev=ON. The previous behavior of the builds set via the CMAKE_BUILD_TYPE variable has not changed.; CMAKE_CXX_STANDARD, i.e. the C++ standard ROOT is built with, now defaults to the compiler default (or C++11 if the compiler default is older than that) rather than always defaulting to C++11. In turn this means that v6.24 is the first ROOT release for which ROOT’s pre-compiled binaries are not compiled with C++11 but with the default standard in use by the default system compiler. On Ubuntu 20.04, for example, the v6.24 pre-compiled binaries are now compiled with C++14 rather than C++11 as it happened for previous ROOT versions. Also see ROOT-10692. The following builtins have been updated:. VecCore 0.7.0; LZ4 1.9.3; openui5; Xrootd 4.12.8; Zstd 1.4.8. PyROOT. Deprecate TTree.AsMatrix in this release and mark",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:29361,variab,variable,29361,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['variab'],['variable']
Modifiability,"wser.h. ◆ fLH6. TGLayoutHints * TRootBrowser::fLH6. protected . Definition at line 61 of file TRootBrowser.h. ◆ fLH7. TGLayoutHints * TRootBrowser::fLH7. protected . Layout hints, part 2. ; Definition at line 61 of file TRootBrowser.h. ◆ fMenuBar. TGMenuBar* TRootBrowser::fMenuBar. protected . Main (owned) menu bar. ; Definition at line 81 of file TRootBrowser.h. ◆ fMenuExecPlugin. TGPopupMenu* TRootBrowser::fMenuExecPlugin. protected . ""Exec Plugin"" popup menu ; Definition at line 83 of file TRootBrowser.h. ◆ fMenuFile. TGPopupMenu* TRootBrowser::fMenuFile. protected . ""File"" popup menu ; Definition at line 82 of file TRootBrowser.h. ◆ fMenuFrame. TGHorizontalFrame* TRootBrowser::fMenuFrame. protected . Shared menu frame. ; Definition at line 79 of file TRootBrowser.h. ◆ fMenuHelp. TGPopupMenu* TRootBrowser::fMenuHelp. protected . ""Browser Help"" popup menu ; Definition at line 84 of file TRootBrowser.h. ◆ fNbInitPlugins. Int_t TRootBrowser::fNbInitPlugins. protected . Number of initial plugins (from .rootrc) ; Definition at line 90 of file TRootBrowser.h. ◆ fNbTab. Int_t TRootBrowser::fNbTab[3]. protected . Number of tab elements (for each Tab) ; Definition at line 91 of file TRootBrowser.h. ◆ fPid. Int_t TRootBrowser::fPid. protected . Current process id. ; Definition at line 93 of file TRootBrowser.h. ◆ fPlugins. TList TRootBrowser::fPlugins. protected . List of plugins. ; Definition at line 88 of file TRootBrowser.h. ◆ fPreMenuFrame. TGHorizontalFrame* TRootBrowser::fPreMenuFrame. protected . First (owned) menu frame. ; Definition at line 78 of file TRootBrowser.h. ◆ fShowCloseTab. Bool_t TRootBrowser::fShowCloseTab. protected . kTRUE to show close icon on tab elements ; Definition at line 94 of file TRootBrowser.h. ◆ fStatusBar. TGStatusBar* TRootBrowser::fStatusBar. protected . Status bar. ; Definition at line 89 of file TRootBrowser.h. ◆ fTabBottom. TGTab* TRootBrowser::fTabBottom. protected . Bottom Tab. ; Definition at line 64 of file TRootBrowser.h. ◆ fTab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:59978,plugin,plugins,59978,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,1,['plugin'],['plugins']
Modifiability,"wsing branches. ;  . Private Attributes; TMethod * fMethod {nullptr};  . Additional Inherited Members;  Public Types inherited from TVirtualBranchBrowsable; typedef Int_t(* MethodCreateListOfBrowsables_t) (TList &, const TBranch *branch, const TVirtualBranchBrowsable *parent);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TBranchBrowsable.h>. Inheritance diagram for TMethodBrowsable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TMethodBrowsable(). TMethodBrowsable::~TMethodBrowsable ; (; ). inlineoverride . Definition at line 105 of file TBranchBrowsable.h. ◆ TMethodBrowsable(). TMethodBrowsable::TMethodBrowsable ; (; const TBranch * ; branch, . TMethod * ; m, . const TVirtualBranchBrowsable * ; parent = nullptr . ). protected . Constructor. ; Links a TBranchElement to a TMethod, allowing the TBrowser to browse simple methods.; The c'tor sets the name for a method ""Class::Method(params) const"" to ""Method(params)"", title to TMethod::GetPrototype ; Definition at line 409 of file TBranchBrowsable.cxx. Member Function Documentation. ◆ Class(). static TClass * TMethodBrowsable::Class ; (; ). static . ReturnsTClass des",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMethodBrowsable.html:15523,inherit,inherited,15523,doc/master/classTMethodBrowsable.html,https://root.cern,https://root.cern/doc/master/classTMethodBrowsable.html,2,['inherit'],['inherited']
Modifiability,"wspacewriteDefinition rf502_wspacewrite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooChebychev::bkg; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::bkgfrac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::sig; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::mean; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sig1frac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing dataset modelData; ; RooWorkspace(w) workspace contents; ; variables; ---------; (a0,a1,bkgfrac,mean,sig1frac,sigma1,sigma2,x); ; p.d.f.s; -------; RooChebychev::bkg[ x=x coefList=(a0,a1) ] = 0.8; RooAddPdf::model[ bkgfrac * bkg + [%] * sig ] = 0.9/1; RooAddPdf::sig[ sig1frac * sig1 + [%] * sig2 ] = 1/1; RooGaussian::sig1[ x=x mean=mean sigma=sigma1 ] = 1; RooGaussian::sig2[ x=x mean=mean sigma=sigma2 ] = 1; ; datasets; --------; RooDataSet::modelData(x); ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf502__wspacewrite_8C.html:5329,variab,variables,5329,doc/master/rf502__wspacewrite_8C.html,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8C.html,1,['variab'],['variables']
Modifiability,"x (TObject *, Bool_t=kFALSE);  ; TBrowser * Browser () const;  ; virtual void CheckObjectItem (TObject *, Bool_t=kFALSE);  ; virtual void CloseTabs ();  ; virtual Longptr_t ExecPlugin (const char *, const char *, const char *, Int_t, Int_t);  ; virtual void ExecuteDefaultAction (TObject *);  ; virtual TBrowser * GetBrowser () const;  ; virtual Option_t * GetDrawOption () const;  ; virtual TGMainFrame * GetMainFrame () const;  ; virtual TClass * IsA () const;  ; virtual void RecursiveRemove (TObject *);  ; virtual void RemoveCheckBox (TObject *);  ; virtual void SetBrowser (TBrowser *b);  ; virtual void SetDrawOption (Option_t *="""");  ; virtual void SetStatusText (const char *, Int_t);  ; virtual void StartEmbedding (Int_t, Int_t);  ; virtual void StopEmbedding (const char *);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TBrowserImp * NewBrowser (TBrowser *b, const char *title, Int_t x, Int_t y, UInt_t width, UInt_t height, Option_t *opt="""");  Factory method to create RWebBrowserImp via plugin. ;  ; static TBrowserImp * NewBrowser (TBrowser *b=nullptr, const char *title=""ROOT Browser"", UInt_t width=800, UInt_t height=500, Option_t *opt="""");  Factory method to create RWebBrowserImp via plugin. ;  ;  Static Public Member Functions inherited from TBrowserImp; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; void ShowWarning ();  Show warning that RBrowser will be shown. ;  . Private Attributes; Int_t fHeight {0};  window coordinates ;  ; std::shared_ptr< RBrowser > fWebBrowser;  actual browser used ;  ; Int_t fWidth {0};  ; Int_t fX {-1};  ; Int_t fY {-1};  . Additional Inherited Members;  Protected Member Functions inherited from TBrowserImp;  TBrowserImp (const TBrowserImp &)=delete;  ; TBrowserImp & operator= (const TBrowserImp &br)=delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebBrowserImp.html:2714,plugin,plugin,2714,doc/v632/classROOT_1_1RWebBrowserImp.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebBrowserImp.html,2,['plugin'],['plugin']
Modifiability,"x * fListBox;  the listbox with text items ;  ; TGLBEntry * fSelEntry;  selected item frame ;  ; TGTextEntry * fTextEntry;  text entry ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGComboBox.html:31740,inherit,inherited,31740,doc/master/classTGComboBox.html,https://root.cern,https://root.cern/doc/master/classTGComboBox.html,5,['inherit'],['inherited']
Modifiability,"x = TWebCanvas::AddFont(""test"", ""test.ttf"", 2); gStyle->SetStatFont(font_indx);. ;  ; static void BatchImageMode (UInt_t n=100);  Configure batch image mode for web graphics. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TString CreateCanvasJSON (TCanvas *c, Int_t json_compression=0, Bool_t batchmode=kFALSE);  Create JSON painting output for given canvas Produce JSON can be used for offline drawing with JSROOT. ;  ; static TString CreatePadJSON (TPad *pad, Int_t json_compression=0, Bool_t batchmode=kFALSE);  Create JSON painting output for given pad Produce JSON can be used for offline drawing with JSROOT. ;  ; static const char * DeclFileName ();  ; static const std::string & GetCustomScripts ();  Returns configured custom script. ;  ; static bool IsCustomClass (const TClass *cl);  Checks if class belongs to custom. ;  ; static TCanvasImp * NewCanvas (TCanvas *c, const char *name, Int_t x, Int_t y, UInt_t width, UInt_t height);  Static method to create TWebCanvas instance Used by plugin manager. ;  ; static bool ProduceImage (TPad *pad, const char *filename, Int_t width=0, Int_t height=0);  Create image using batch (headless) capability of Chrome or Firefox browsers Supported png, jpeg, svg, pdf formats. ;  ; static bool ProduceImages (std::vector< TPad * > pads, const char *filename, Int_t width=0, Int_t height=0);  Create images for several pads using batch (headless) capability of Chrome or Firefox browsers Supported png, jpeg, svg, pdf, webp formats One can include d qualifier which will be replaced by image index using printf functionality. ;  ; static void SetCustomScripts (const std::string &src);  Configures custom script for canvas. ;  ; static Int_t StoreCanvasJSON (TCanvas *c, const char *filename, const char *option="""");  Create JSON painting output for given canvas and store into the file See TBufferJSON::ExportToFile() method for more details about option If option string ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebCanvas.html:7282,plugin,plugin,7282,doc/master/classTWebCanvas.html,https://root.cern,https://root.cern/doc/master/classTWebCanvas.html,1,['plugin'],['plugin']
Modifiability,"x and variable bin size like in TH3D. TProfile3D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins, Option_t* option = """"); Create a 3-D Profile with variable bins in X , Y and Z. void BuildOptions(Double_t tmin, Double_t tmax, Option_t* option); Set Profile3D histogram structure and options*-*-; *-* =============================================. If a cell has N data points all with the same value T (especially; possible when dealing with integers), the spread in T for that cell; is zero, and the uncertainty assigned is also zero, and the cell is; ignored in making subsequent fits. If SQRT(T) was the correct error; in the case above, then SQRT(T)/SQRT(N) would be the correct error here.; In fact, any cell with non-zero number of entries N but with zero spread; should have an uncertainty SQRT(T)/SQRT(N). Now, is SQRT(T)/SQRT(N) really the correct uncertainty?; that it is only in the case where the T variable is some sort; of counting statistics, following a Poisson distribution. This should; probably be set as the default case. However, T can be any variable; from an original NTUPLE, not necessarily distributed ""Poissonly"".; The computation of errors is based on the parameter option:; option:; ' ' (Default) Errors are Spread/SQRT(N) for Spread.ne.0. ,; "" "" SQRT(T)/SQRT(N) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0; 's' Errors are Spread for Spread.ne.0. ,; "" "" SQRT(T) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0; 'i' Errors are Spread/SQRT(N) for Spread.ne.0. ,; "" "" 1./SQRT(12.*N) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0. The third case above corresponds to Integer T values for which the; uncertainty is +-0.5, with the assumption that the probability that T; takes any value between T-0.5 and T+0.5 is uniform (the same argument; goes for T uniformly distributed between T and T+1); this would be; useful if T is an ADC measurement, for example. Other, fancier options; wou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile3D.html:30286,variab,variable,30286,root/html528/TProfile3D.html,https://root.cern,https://root.cern/root/html528/TProfile3D.html,3,['variab'],['variable']
Modifiability,"x assignments . Creating functions and pdfs . MyPdf::g(x,m,s) Create pdf or function of type MyPdf with name g with argument x,m,s Interpretation and number of arguments are mapped to the constructor arguments of the class (after the name and title). . MyPdf(x,m,s) As above, but with an implicitly defined (unique) object name . Creating sets and lists (to be used as inputs above) . {a,b,c} Create RooArgSet or RooArgList (as determined by context) from given contents . Objects that are not created, are assumed to exist in the workspace Object creation expressions as shown above can be nested, e.g. one can do RooGaussian::g(x[-10,10],m[0],3); xDouble_t x[n]Definition legend1.C:17; mTMarker mDefinition textangle.C:8; to create a pdf and its variables in one go. This nesting can be applied recursively e.g. SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); f#define f(i)Definition RSha256.hxx:104; creates the sum of a Gaussian and a Chebychev and all its variables.; A separate series of operator meta-type exists to simplify the construction of composite expressions meta-types in all capitals (SUM) create pdfs, meta types in lower case (sum) create functions. Expression Effect . SUM::name(f1*pdf1,f2*pdf2,pdf3] Create sum pdf name with value f1*pdf1+f2*pdf2+(1-f1-f2)*pdf3 . RSUM::name(f1*pdf1,f2*pdf2,pdf3] Create recursive sum pdf name with value f1*pdf1 + (1-f1)(f2*pdf2 + (1-f2)pdf3) . ASUM::name(f1*amp1,f2*amp2,amp3] Create sum pdf name with value f1*amp1+f2*amp2+(1-f1-f2)*amp3 where amplX are amplitudes of type RooAbsReal . sum::name(a1,a2,a3] Create sum function with value a1+a2+a3 . sum::name(a1*b1,a2*b2,a3*b 3] Create sum function with value a1*b1+a2*b2+a3*b3 . PROD::name(pdf1,pdf2] Create product of pdf with name with given input pdfs . PROD::name(pdf1|x,pdf2] Create product of conditional pdf pdf1 given x and pdf2 . prod::name(a,b,c] Create production function with value a*b*c . SIMUL::name(cat,a=pdf1,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFactoryWSTool.html:34227,variab,variables,34227,doc/master/classRooFactoryWSTool.html,https://root.cern,https://root.cern/doc/master/classRooFactoryWSTool.html,2,['variab'],['variables']
Modifiability,"x ex2aDict.cxx `root-config --cflags --glibs`; example2a.h; #include <TQObject.h>; #include <RQ_OBJECT.h>. class TGWindow;; class TGMainFrame;; class TRootEmbeddedCanvas;. class MyMainFrame {; RQ_OBJECT(""MyMainFrame""); private:; TGMainFrame *fMain;; TRootEmbeddedCanvas *fEcanvas;; public:; MyMainFrame(const TGWindow *p,UInt_t w,UInt_t h);; virtual ~MyMainFrame();; void DoDraw();; };; example2a.cxx; #include <TApplication.h>; #include <TGClient.h>; #include <TCanvas.h>; #include <TF1.h>; #include <TRandom.h>; #include <TGButton.h>; #include <TRootEmbeddedCanvas.h>; #include ""example2a.h"". MyMainFrame::MyMainFrame(const TGWindow *p,UInt_t w,UInt_t h) {...}; MyMainFrame::~MyMainFrame() { ... }; void MyMainFrame::DoDraw() { ... }; void example() { ... }. int main(int argc, char **argv) {; TApplication theApp(""App"",&argc,argv);; example();; theApp.Run();; return 0;; }; The class MyMainFrame could derive from TGMainFrame. In that case the RQ_OBJECT macro is not needed anymore, since the functionality it provides is obtained now via inheritance from TGMainFrame. This will reflect in the MyMainFrame class declaration and in the code of the MyMainFrame::MyMainFrame constructor as follows:; example2b.h; #include <TGFrame.h>; class MyMainFrame : public TGMainFrame {; private:; TRootEmbeddedCanvas *fEcanvas;; public:; MyMainFrame(const TGWindow *p,UInt_t w,UInt_t h);; virtual ~MyMainFrame() { ... }; void DoDraw(){ ... }; ClassDef(MyMainFrame,0); };; example2b.cxx; #include <TApplication.h>; #include <TGClient.h>; #include <TCanvas.h>; #include <TF1.h>; #include <TRandom.h>; #include <TGButton.h>; #include <TRootEmbeddedCanvas.h>; #include ""example2b.h"". MyMainFrame::MyMainFrame(const TGWindow *p,UInt_t w,UInt_t h); : TGMainFrame(p,w,h) {. // Creates widgets of the example; fEcanvas = new TRootEmbeddedCanvas (""Ecanvas"",this,200,200);; AddFrame(fEcanvas, new TGLayoutHints(kLHintsExpandX |; kLHintsExpandY, 10,10,10,1));; TGHorizontalFrame *hframe=new TGHorizontalFrame(this, 200,40",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1144361,inherit,inheritance,1144361,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inheritance']
Modifiability,"x of Variable (assume fMinuit exists). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set a lower limited variable; since is not supported in TMinuit , just use a artificial large value. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a upper limited variable; since is not supported in TMinuit , just use a artificial large negative value. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. bool SetVariableStepSize(unsigned int , double ); set the step-size of an existing variable; parameter must exist or return false. bool SetVariableLowerLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableUpperLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an existing variable; parameter must exist or return false. bool FixVariable(unsigned int ); Fix an existing variable. bool ReleaseVariable(unsigned int ); Fix an existing variable. bool IsFixedVariable(unsigned int ) const; query if variable is fixed. bool GetVariableSettings(unsigned int , ROOT::Fit::ParameterSettings& ) const; retrieve variable settings (all set info on the variable). std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:9497,variab,variable,9497,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,"x of a subset=0. ;  ; Double_t KOrdStat (Int_t ntotal, Double_t *arr, Int_t k, Int_t *work);  because I need an Int_t work array ;  ; Int_t Partition (Int_t nmini, Int_t *indsubdat);  divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ;  ; Int_t RDist (TMatrixD &sscp);  Calculates robust distances.Then the samples with robust distances greater than a cutoff value (0.975 quantile of chi2 distribution with fNvar degrees of freedom, multiplied by a correction factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of outliers. ;  ; void RDraw (Int_t *subdat, Int_t ngroup, Int_t *indsubdat);  Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixDSym fCorrelation;  ; TMatrixDSym fCovariance;  ; TMatrixD fData;  ; Int_t fExact;  ; Int_t fH;  ; TVectorD fHyperplane;  ; TMatrixDSym fInvcovariance;  ; TVectorD fMean;  ; Int_t fN;  ; Int_t fNvar;  ; TArrayI fOut;  ; TVectorD fRd;  ; TVectorD fSd;  ; Int_t fVarTemp;  ; Int_t fVecTemp;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRobustEstimator.html:17636,inherit,inherited,17636,doc/master/classTRobustEstimator.html,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html,1,['inherit'],['inherited']
Modifiability,"x value of independent variables; Double_tfMeanQuantityMean of dependent quantity; TVectorDfMeanVariablesmean value of independent variables; Double_tfMinAngleMin angle for acepting new function; Double_tfMinQuantityMin value of dependent quantity; Double_tfMinRelativeErrorMin relative error accepted; Double_tfMinResidualMin redsidual value; Int_tfMinResidualRowRow giving min residual; TVectorDfMinVariablesmin value of independent variables; Int_tfNCoefficientsDimension of model coefficients; Int_tfNVariablesNumber of independent variables; TStringTNamed::fNameobject identifier; TVectorDfOrthCoefficientsThe model coefficients; TMatrixDfOrthCurvatureMatrixModel matrix; TVectorDfOrthFunctionNormsNorm of the evaluated functions; TMatrixDfOrthFunctionsAs above, but orthogonalised; Int_tfParameterisationCodeExit code of parameterisation; TMultiDimFit::EMDFPolyTypefPolyTypeType of polynomials to use; Int_t*fPowerIndex[fMaxTerms] Index of accepted powers; Double_tfPowerLimitControl parameter; Int_t*fPowers[fMaxFuncNV] where fMaxFuncNV = fMaxFunctions*fNVariables; Double_tfPrecisionRelative precision of param; TVectorDfQuantityTraining sample, dependent quantity; Double_tfRMSRoot mean square of fit; TVectorDfResidualsVector of the final residuals; Int_tfSampleSizeSize of training sample; Bool_tfShowCorrelationprint correlation matrix; TVectorDfSqErrorTraining sample, error in quantity; Double_tfSumSqAvgQuantitySum of squares away from mean; Double_tfSumSqQuantitySumSquare of dependent quantity; Double_tfSumSqResidualSum of Square residuals; Double_tfTestCorrelationCoeffMulti Correlation coefficient; Double_tfTestErrorError from test; Double_tfTestPrecisionRelative precision of test; TVectorDfTestQuantityTest sample, dependent quantity; Int_tfTestSampleSizeSize of test sample; TVectorDfTestSqErrorTest sample, Error in quantity; TVectorDfTestVariablesTest sample, independent variables; TStringTNamed::fTitleobject title; TVectorDfVariablesTraining sample, independent variables.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:24704,variab,variables,24704,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,12,['variab'],['variables']
Modifiability,"x) override;  Set the minimum and maximum entry number to be processed this information helps to optimize the number of baskets to read when prefetching the branch buffers. ;  ; void SetUnzipBufferSize (Long64_t bufferSize);  Sets the size for the unzipping cache... by default it should be two times the size of the prefetching cache. ;  ; void SetUnzipGroupSize (Int_t groupSize);  ; void StopLearningPhase () override;  It's the same as TTreeCache::StopLearningPhase but we guarantee that we start the unzipping just after getting the buffers. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t UnzipBuffer (char **dest, char *src);  Unzips a ROOT specific buffer... by reading the header at the beginning. ;  ; Int_t UnzipCache (Int_t index);  This inflates a basket in the cache. ;  ; void UpdateBranches (TTree *tree) override;  update pointer to current Tree and recompute pointers to the branches in the cache ;  ;  Public Member Functions inherited from TTreeCache;  TTreeCache ();  Default Constructor. ;  ;  TTreeCache (TTree *tree, Int_t buffersize=0);  Constructor. ;  ;  ~TTreeCache () override;  Destructor. (in general called by the TFile destructor) ;  ; virtual void Disable ();  ; virtual Int_t DropBranch (const char *branch, bool subbranches=false);  Remove a branch to the list of branches to be stored in the cache this is to be used by user (thats why we pass the name of the branch). ;  ; virtual Int_t DropBranch (TBranch *b, bool subbranches=false);  Remove a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket. ;  ; virtual void Enable ();  ; const TObjArray * GetCachedBranches () const;  ; EPrefillType GetConfiguredPrefillType () const;  Return the desired prefill type from the environment or resource variable. ;  ; Double_t GetEfficiency () const;  Give the total efficiency of the primary cache... defined as th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCacheUnzip.html:4332,inherit,inherited,4332,doc/v632/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/v632/classTTreeCacheUnzip.html,2,['inherit'],['inherited']
Modifiability,"x, Double_t y);  Return ""true"" if the point (x,y) is inside the bin of binnr. ;  ; Bool_t Multiply (TF1 *, Double_t) override;  NOT IMPLEMENTED for TH2Poly. ;  ; TH2Poly & operator= (const TH2Poly &rhs);  Assignment operator. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Scale (Double_t c1=1, Option_t *option="""") override;  Multiply this histogram by a constant c1. ;  ; void SetBinContent (Int_t bin, Double_t content) override;  Sets the contents of the input bin to the input content Negative values between -1 and -9 are for the overflows and the sea. ;  ; void SetBinContentChanged (Bool_t flag);  ; void SetBinError (Int_t bin, Double_t error) override;  Set the bin Error. ;  ; void SetFloat (Bool_t flag=true);  When set to kTRUE, allows the histogram to expand if a bin outside the limits is added. ;  ; void SetNewBinAdded (Bool_t flag);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w. ;  ; virtual void AddBinContent (Int_t binx, Int_t biny);  Increment 2D bin content by 1. ;  ; virtual void AddBinContent (Int_t binx, Int_t biny, Double_t w);  Increment 2D bin content by a weight w. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; void FillRandom (const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr) override;  Fill histogram following distribution in function fname. ;  ; void FillRandom (TH1 *h, Int_t ntimes=5000, TRandom *rng=nullptr) override;  Fill histogram following distribution in histogram h. ;  ; virtual void FitSlicesX (TF1 *f1=nullptr, Int_t firstybin=0, Int_t lastybin=-1, Int_t cut=0, Option_t *option=""QNR"", TObjArray *arr=nullptr);  Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2Poly.html:8695,inherit,inherited,8695,doc/master/classTProfile2Poly.html,https://root.cern,https://root.cern/doc/master/classTProfile2Poly.html,1,['inherit'],['inherited']
Modifiability,"x, Int_t py) const override=0;  Returns string containing info about the object at position (px,py). ;  ; virtual TList * GetStack () const =0;  ; TClass * IsA () const override;  ; virtual Bool_t IsInside (Double_t x, Double_t y)=0;  ; virtual Bool_t IsInside (Int_t x, Int_t y)=0;  ; virtual Int_t MakeCuts (char *cutsopt)=0;  ; void Paint (Option_t *option="""") override=0;  This method must be overridden if a class wants to paint itself. ;  ; virtual void PaintStat (Int_t dostat, TF1 *fit)=0;  ; virtual void ProcessMessage (const char *mess, const TObject *obj)=0;  ; virtual void SetHighlight ()=0;  ; virtual void SetHistogram (TH1 *h)=0;  ; virtual void SetShowProjection (const char *option, Int_t nbins)=0;  ; virtual void SetShowProjectionXY (const char *option, Int_t nbinsY, Int_t nbinsX)=0;  ; virtual void SetStack (TList *stack)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualHistPainter.html:1957,inherit,inherited,1957,doc/master/classTVirtualHistPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualHistPainter.html,1,['inherit'],['inherited']
Modifiability,"x, momentum and optional referece-points (path-marks) along its path. More...;  ; class  REveTrackList;  REveTrackList A list of tracks supporting change of common attributes and selection based on track parameters. More...;  ; class  REveTrackListProjected;  REveTrackListProjected Specialization of REveTrackList for holding REveTrackProjected objects. More...;  ; class  REveTrackProjected;  REveTrackProjected Projected copy of a REveTrack. More...;  ; class  REveTrackPropagator;  REveTrackPropagator Calculates path of a particle taking into account special path-marks and imposed boundaries. More...;  ; class  REveTrans;  ; class  REveUtil;  REveUtil Standard utility functions for Reve. More...;  ; class  REveVector2T;  REveVector2T A two-vector template without TObject inheritance and virtual functions. More...;  ; class  REveVector4T;  REveVector4T A four-vector template without TObject inheritance and virtual functions. More...;  ; class  REveVectorT;  REveVectorT A three-vector template without TObject inheritance and virtual functions. More...;  ; class  REveViewContext;  ; class  REveViewer;  REveViewer Reve representation of TGLViewer. More...;  ; class  REveViewerList;  REveViewerList List of Viewers providing common operations on REveViewer collections. More...;  ; class  REveVSD;  ; class  REveXZProjection;  ; class  REveYZProjection;  ; class  REveZXProjection;  ; class  REveZYProjection;  ; class  RException;  Base class for all ROOT issued exceptions. More...;  ; class  RExtraTypeInfoDescriptor;  Field specific extra type information from the header / extenstion header. More...;  ; class  RField;  Classes with dictionaries that can be inspected by TClass. More...;  ; class  RField< bool >;  ; class  RField< char >;  ; class  RField< double >;  ; class  RField< float >;  ; class  RField< ItemT[N]>;  ; class  RField< RNTupleCardinality< SizeT > >;  ; class  RField< ROOT::VecOps::RVec< ItemT > >;  ; class  RField< std::array< ItemT, N > >;  ; class  RField",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html:10909,inherit,inheritance,10909,doc/master/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html,1,['inherit'],['inheritance']
Modifiability,"x, momentum and optional referece-points (path-marks) along its path. More...;  ; class  REveTrackList;  REveTrackList A list of tracks supporting change of common attributes and selection based on track parameters. More...;  ; class  REveTrackListProjected;  REveTrackListProjected Specialization of REveTrackList for holding REveTrackProjected objects. More...;  ; class  REveTrackProjected;  REveTrackProjected Projected copy of a REveTrack. More...;  ; class  REveTrackPropagator;  REveTrackPropagator Calculates path of a particle taking into account special path-marks and imposed boundaries. More...;  ; class  REveTrans;  ; class  REveUtil;  REveUtil Standard utility functions for Reve. More...;  ; class  REveVector2T;  REveVector2T A two-vector template without TObject inheritance and virtual functions. More...;  ; class  REveVector4T;  REveVector4T A four-vector template without TObject inheritance and virtual functions. More...;  ; class  REveVectorT;  REveVectorT A three-vector template without TObject inheritance and virtual functions. More...;  ; class  REveViewContext;  ; class  REveViewer;  REveViewer Reve representation of TGLViewer. More...;  ; class  REveViewerList;  REveViewerList List of Viewers providing common operations on REveViewer collections. More...;  ; class  REveVSD;  ; class  REveXZProjection;  ; class  REveYZProjection;  ; class  REveZXProjection;  ; class  REveZYProjection;  ; class  RException;  Base class for all ROOT issued exceptions. More...;  ; class  RField;  Classes with dictionaries that can be inspected by TClass. More...;  ; class  RField< bool >;  ; class  RField< char >;  ; class  RField< ClusterSize_t >;  ; class  RField< double >;  ; class  RField< float >;  ; class  RField< ItemT[N]>;  ; class  RField< RNTupleCardinality< SizeT > >;  ; class  RField< ROOT::VecOps::RVec< ItemT > >;  ; class  RField< std::array< ItemT, N > >;  ; class  RField< std::atomic< ItemT > >;  ; class  RField< std::bitset< N > >;  ; class  RField< std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html:11007,inherit,inheritance,11007,doc/v632/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html,1,['inherit'],['inheritance']
Modifiability,"x, y, and z: auto g = new TGraph2D(n, x, y, z);; g#define g(i)Definition RSha256.hxx:105; TGraph2D::TGraph2DTGraph2D()Graph2D default constructor.Definition TGraph2D.cxx:238; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; x, y, z arrays can be doubles, floats, or ints.; With an array's dimension only: auto g = new TGraph2D(n);; The internal arrays are then filled with SetPoint(). The following line fills the internal arrays at the position i with the values x, y, z. g->SetPoint(i, x, y, z);. Without parameters: auto g = new TGraph2D();; again SetPoint() must be used to fill the internal arrays.; From a file: auto g = new TGraph2D(""graph.dat"");; Arrays are read from the ASCII file ""graph.dat"" according to a specifies format. The default format is %lg %lg %lg. Note that in any of these three cases, SetPoint() can be used to change a data point or add a new one. If the data point index (i) is greater than the current size of the internal arrays, they are automatically extended.; Like TGraph some TGraph2D constructors do not have the TGraph2D title and name as parameters. For these constructors TGraph2D has the default title and name ""Graph2D"". To change the default title and name SetTitle and SetName should be called on the TGraph2D after its creation. Drawing options; Specific drawing options can be used to paint a TGraph2D:. Option Description . ""TRI"" The Delaunay triangles are drawn using filled area. An hidden surface drawing technique is used. The surface is painted with the current fill area color. The edges of each triangles are painted with the current line color. . ""TRIW"" The Delaunay triangles are drawn as wire frame. . ""TRI1"" The Delaunay triangles are painted with color levels. The edges of each triangles are painted with the current line color. . ""TRI2"" The Delaunay triangles are painted with color levels. . ""P"" Draw a marker at each vertex. . ""P0"" Draw a circle at each vertex. Each circ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:1800,extend,extended,1800,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,1,['extend'],['extended']
Modifiability,"x,; 16530 ssl_servername_callback);; 16531 ; 16532 /* If a callback has been specified, call it. */; 16533 callback_ret = (phys_ctx->callbacks.init_ssl == NULL); 16534 ? 0; 16535 : (phys_ctx->callbacks.init_ssl(dom_ctx->ssl_ctx,; 16536 phys_ctx->user_data));; 16537 ; 16538 /* If callback returns 0, civetweb sets up the SSL certificate.; 16539 * If it returns 1, civetweb assumes the calback already did this.; 16540 * If it returns -1, initializing ssl fails. */; 16541 if (callback_ret < 0) {; 16542 mg_cry_ctx_internal(phys_ctx,; 16543 ""SSL callback returned error: %i"",; 16544 callback_ret);; 16545 return 0;; 16546 }; 16547 if (callback_ret > 0) {; 16548 /* Callback did everything. */; 16549 return 1;; 16550 }; 16551 ; 16552 /* If a domain callback has been specified, call it. */; 16553 callback_ret = (phys_ctx->callbacks.init_ssl_domain == NULL); 16554 ? 0; 16555 : (phys_ctx->callbacks.init_ssl_domain(; 16556 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16557 dom_ctx->ssl_ctx,; 16558 phys_ctx->user_data));; 16559 ; 16560 /* If domain callback returns 0, civetweb sets up the SSL certificate.; 16561 * If it returns 1, civetweb assumes the calback already did this.; 16562 * If it returns -1, initializing ssl fails. */; 16563 if (callback_ret < 0) {; 16564 mg_cry_ctx_internal(phys_ctx,; 16565 ""Domain SSL callback returned error: %i"",; 16566 callback_ret);; 16567 return 0;; 16568 }; 16569 if (callback_ret > 0) {; 16570 /* Domain callback did everything. */; 16571 return 1;; 16572 }; 16573 ; 16574 /* Use some combination of start time, domain and port as a SSL; 16575 * context ID. This should be unique on the current machine. */; 16576 md5_init(&md5state);; 16577 clock_gettime(CLOCK_MONOTONIC, &now_mt);; 16578 md5_append(&md5state, (const md5_byte_t *)&now_mt, sizeof(now_mt));; 16579 md5_append(&md5state,; 16580 (const md5_byte_t *)phys_ctx->dd.config[LISTENING_PORTS],; 16581 strlen(phys_ctx->dd.config[LISTENING_PORTS]));; 16582 md5_append(&md5state,; 16583 (const md5_byte_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:490510,config,config,490510,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"x,; 16531 ssl_servername_callback);; 16532 ; 16533 /* If a callback has been specified, call it. */; 16534 callback_ret = (phys_ctx->callbacks.init_ssl == NULL); 16535 ? 0; 16536 : (phys_ctx->callbacks.init_ssl(dom_ctx->ssl_ctx,; 16537 phys_ctx->user_data));; 16538 ; 16539 /* If callback returns 0, civetweb sets up the SSL certificate.; 16540 * If it returns 1, civetweb assumes the calback already did this.; 16541 * If it returns -1, initializing ssl fails. */; 16542 if (callback_ret < 0) {; 16543 mg_cry_ctx_internal(phys_ctx,; 16544 ""SSL callback returned error: %i"",; 16545 callback_ret);; 16546 return 0;; 16547 }; 16548 if (callback_ret > 0) {; 16549 /* Callback did everything. */; 16550 return 1;; 16551 }; 16552 ; 16553 /* If a domain callback has been specified, call it. */; 16554 callback_ret = (phys_ctx->callbacks.init_ssl_domain == NULL); 16555 ? 0; 16556 : (phys_ctx->callbacks.init_ssl_domain(; 16557 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16558 dom_ctx->ssl_ctx,; 16559 phys_ctx->user_data));; 16560 ; 16561 /* If domain callback returns 0, civetweb sets up the SSL certificate.; 16562 * If it returns 1, civetweb assumes the calback already did this.; 16563 * If it returns -1, initializing ssl fails. */; 16564 if (callback_ret < 0) {; 16565 mg_cry_ctx_internal(phys_ctx,; 16566 ""Domain SSL callback returned error: %i"",; 16567 callback_ret);; 16568 return 0;; 16569 }; 16570 if (callback_ret > 0) {; 16571 /* Domain callback did everything. */; 16572 return 1;; 16573 }; 16574 ; 16575 /* Use some combination of start time, domain and port as a SSL; 16576 * context ID. This should be unique on the current machine. */; 16577 md5_init(&md5state);; 16578 clock_gettime(CLOCK_MONOTONIC, &now_mt);; 16579 md5_append(&md5state, (const md5_byte_t *)&now_mt, sizeof(now_mt));; 16580 md5_append(&md5state,; 16581 (const md5_byte_t *)phys_ctx->dd.config[LISTENING_PORTS],; 16582 strlen(phys_ctx->dd.config[LISTENING_PORTS]));; 16583 md5_append(&md5state,; 16584 (const md5_byte_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:490543,config,config,490543,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"x,py) to the object.; 268/// This member function must be implemented for each graphics primitive.; 269/// This default function returns a big number (999999).; 270 ; 271Int_t TObject::DistancetoPrimitive(Int_t, Int_t); 272{; 273 // AbstractMethod(""DistancetoPrimitive"");; 274 return 999999;; 275}; 276 ; 277////////////////////////////////////////////////////////////////////////////////; 278/// Default Draw method for all objects; 279 ; 280void TObject::Draw(Option_t *option); 281{; 282 AppendPad(option);; 283}; 284 ; 285////////////////////////////////////////////////////////////////////////////////; 286/// Draw class inheritance tree of the class to which this object belongs.; 287/// If a class B inherits from a class A, description of B is drawn; 288/// on the right side of description of A.; 289/// Member functions overridden by B are shown in class A with a blue line; 290/// crossing-out the corresponding member function.; 291/// The following picture is the class inheritance tree of class TPaveLabel:; 292///; 293/// \image html base_object.png; 294 ; 295void TObject::DrawClass() const; 296{; 297 IsA()->Draw();; 298}; 299 ; 300////////////////////////////////////////////////////////////////////////////////; 301/// Draw a clone of this object in the current selected pad with:; 302/// `gROOT->SetSelectedPad(c1)`.; 303/// If pad was not selected - `gPad` will be used.; 304 ; 305TObject *TObject::DrawClone(Option_t *option) const; 306{; 307 TVirtualPad::TContext ctxt(true);; 308 auto pad = gROOT->GetSelectedPad();; 309 if (pad); 310 pad->cd();; 311 ; 312 TObject *newobj = Clone();; 313 if (!newobj); 314 return nullptr;; 315 ; 316 if (!option || !*option); 317 option = GetDrawOption();; 318 ; 319 if (pad) {; 320 pad->Add(newobj, option);; 321 pad->Update();; 322 } else {; 323 newobj->Draw(option);; 324 }; 325 ; 326 return newobj;; 327}; 328 ; 329////////////////////////////////////////////////////////////////////////////////; 330/// Dump contents of object on stdout.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:10476,inherit,inheritance,10476,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"x,y,z in double precision ; To use it add the line #include <Vector3D.h>; See the documentation on the DisplacementVector3D page. ; Definition at line 44 of file Vector3Dfwd.h. ◆ XYZVectorD. typedef XYZVector ROOT::Math::XYZVectorD. Definition at line 53 of file Vector3Dfwd.h. ◆ XYZVectorF. typedef DisplacementVector3D< Cartesian3D<float>, DefaultCoordinateSystemTag > ROOT::Math::XYZVectorF. 3D Vector based on the cartesian coordinates x,y,z in single precision ; To use it add the line #include <Vector3D.h>; See the documentation on the DisplacementVector3D page. ; Definition at line 52 of file Vector3Dfwd.h. Enumeration Type Documentation. ◆ EMinimVariableType. enum ROOT::Math::EMinimVariableType. Enumeration describing the status of the variable The enumeration are used in the minimizer classes to categorize the variables. . EnumeratorkDefault free variable (unlimited) . kFix fixed variable . kBounds variable has two bounds . kLowBound variable has a lower bound . kUpBound variable has an upper bounds . Definition at line 27 of file MinimTransformVariable.h. ◆ ERotation3DMatrixIndex. enum ROOT::Math::ERotation3DMatrixIndex. EnumeratorkXX ; kXY ; kXZ ; kYX ; kYY ; kYZ ; kZX ; kZY ; kZZ . Definition at line 64 of file AxisAngle.cxx. Function Documentation. ◆ adkTestStat(). void ROOT::Math::adkTestStat ; (; double * ; adk, . const std::vector< std::vector< double > > & ; samples, . const std::vector< double > & ; zstar . ). Definition at line 546 of file GoFTest.cxx. ◆ Chebyshev0(). double ROOT::Math::Chebyshev0 ; (; double ; , . double ; c0 . ). inline . Definition at line 57 of file ChebyshevPol.h. ◆ Chebyshev1(). double ROOT::Math::Chebyshev1 ; (; double ; x, . double ; c0, . double ; c1 . ). inline . Definition at line 60 of file ChebyshevPol.h. ◆ Chebyshev10(). double ROOT::Math::Chebyshev10 ; (; double ; x, . double ; c0, . double ; c1, . double ; c2, . double ; c3, . double ; c4, . double ; c5, . double ; c6, . double ; c7, . double ; c8, . double ; c9, . doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:142671,variab,variable,142671,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,2,['variab'],['variable']
Modifiability,"x->SetName((std::string(GetName()) + ""_paramBox"").c_str());; 2364 box->SetFillColor(0);; 2365 box->SetBorderSize(0);; 2366 box->SetTextAlign(12);; 2367 box->SetTextSize(0.04F);; 2368 box->SetFillStyle(0);; 2369 ; 2370 for (const auto param : params) {; 2371 auto var = static_cast<const RooRealVar*>(param);; 2372 if(var->isConstant() && !showConstants) continue;; 2373 ; 2374 std::unique_ptr<TString> formatted{formatCmd ? var->format(*formatCmd) : var->format(2, ""NELU"")};; 2375 box->AddText(formatted->Data());; 2376 }; 2377 ; 2378 // add the optional label if specified; 2379 if (showLabel) {; 2380 for (const auto& line : ROOT::Split(label, ""\n"")) {; 2381 box->AddText(line.c_str());; 2382 }; 2383 }; 2384 ; 2385 // Add box to frame; 2386 frame->addObject(box) ;; 2387 ; 2388 return frame ;; 2389}; 2390 ; 2391 ; 2392 ; 2393 ; 2394////////////////////////////////////////////////////////////////////////////////; 2395/// Return expected number of events from this p.d.f for use in extended; 2396/// likelihood calculations. This default implementation returns zero; 2397 ; 2398double RooAbsPdf::expectedEvents(const RooArgSet*) const; 2399{; 2400 return 0 ;; 2401}; 2402 ; 2403 ; 2404 ; 2405////////////////////////////////////////////////////////////////////////////////; 2406/// Change global level of verbosity for p.d.f. evaluations; 2407 ; 2408void RooAbsPdf::verboseEval(Int_t stat); 2409{; 2410 _verboseEval = stat ;; 2411}; 2412 ; 2413 ; 2414 ; 2415////////////////////////////////////////////////////////////////////////////////; 2416/// Return global level of verbosity for p.d.f. evaluations; 2417 ; 2418Int_t RooAbsPdf::verboseEval(); 2419{; 2420 return _verboseEval ;; 2421}; 2422 ; 2423 ; 2424 ; 2425////////////////////////////////////////////////////////////////////////////////; 2426/// Destructor of normalization cache element. If this element; 2427/// provides the 'current' normalization stored in RooAbsPdf::_norm; 2428/// zero _norm pointer here before object pointed to is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:115736,extend,extended,115736,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"x->config[SSL_CERTIFICATE]) == NULL) {; 15599 /* If pem is NULL and conn->phys_ctx->callbacks.init_ssl is not,; 15600 * refresh_trust still can not work. */; 15601 return 0;; 15602 }; 15603 chain = conn->dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 15604 if (chain == NULL) {; 15605 /* pem is not NULL here */; 15606 chain = pem;; 15607 }; 15608 if (*chain == 0) {; 15609 chain = NULL;; 15610 }; 15611 ; 15612 if (stat(pem, &cert_buf) != -1) {; 15613 t = (int64_t)cert_buf.st_mtime;; 15614 }; 15615 ; 15616 mg_lock_context(conn->phys_ctx);; 15617 if ((t != 0) && (conn->dom_ctx->ssl_cert_last_mtime != t)) {; 15618 conn->dom_ctx->ssl_cert_last_mtime = t;; 15619 ; 15620 should_verify_peer = 0;; 15621 if (conn->dom_ctx->config[SSL_DO_VERIFY_PEER] != NULL) {; 15622 if (mg_strcasecmp(conn->dom_ctx->config[SSL_DO_VERIFY_PEER], ""yes""); 15623 == 0) {; 15624 should_verify_peer = 1;; 15625 } else if (mg_strcasecmp(conn->dom_ctx->config[SSL_DO_VERIFY_PEER],; 15626 ""optional""); 15627 == 0) {; 15628 should_verify_peer = 1;; 15629 }; 15630 }; 15631 ; 15632 if (should_verify_peer) {; 15633 char *ca_path = conn->dom_ctx->config[SSL_CA_PATH];; 15634 char *ca_file = conn->dom_ctx->config[SSL_CA_FILE];; 15635 if (SSL_CTX_load_verify_locations(conn->dom_ctx->ssl_ctx,; 15636 ca_file,; 15637 ca_path); 15638 != 1) {; 15639 mg_unlock_context(conn->phys_ctx);; 15640 mg_cry_ctx_internal(; 15641 conn->phys_ctx,; 15642 ""SSL_CTX_load_verify_locations error: %s ""; 15643 ""ssl_verify_peer requires setting ""; 15644 ""either ssl_ca_path or ssl_ca_file. Is any of them ""; 15645 ""present in ""; 15646 ""the .conf file?"",; 15647 ssl_error());; 15648 return 0;; 15649 }; 15650 }; 15651 ; 15652 if (ssl_use_pem_file(conn->phys_ctx, conn->dom_ctx, pem, chain) == 0) {; 15653 mg_unlock_context(conn->phys_ctx);; 15654 return 0;; 15655 }; 15656 }; 15657 mg_unlock_context(conn->phys_ctx);; 15658 ; 15659 return 1;; 15660}; 15661 ; 15662#if defined(OPENSSL_API_1_1); 15663#else; 15664static pthread_mutex_t *ssl_mutexes;; 15665#endi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:461530,config,config,461530,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,5,['config'],['config']
Modifiability,"x->config[SSL_CERTIFICATE]) == NULL) {; 15600 /* If pem is NULL and conn->phys_ctx->callbacks.init_ssl is not,; 15601 * refresh_trust still can not work. */; 15602 return 0;; 15603 }; 15604 chain = conn->dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 15605 if (chain == NULL) {; 15606 /* pem is not NULL here */; 15607 chain = pem;; 15608 }; 15609 if (*chain == 0) {; 15610 chain = NULL;; 15611 }; 15612 ; 15613 if (stat(pem, &cert_buf) != -1) {; 15614 t = (int64_t)cert_buf.st_mtime;; 15615 }; 15616 ; 15617 mg_lock_context(conn->phys_ctx);; 15618 if ((t != 0) && (conn->dom_ctx->ssl_cert_last_mtime != t)) {; 15619 conn->dom_ctx->ssl_cert_last_mtime = t;; 15620 ; 15621 should_verify_peer = 0;; 15622 if (conn->dom_ctx->config[SSL_DO_VERIFY_PEER] != NULL) {; 15623 if (mg_strcasecmp(conn->dom_ctx->config[SSL_DO_VERIFY_PEER], ""yes""); 15624 == 0) {; 15625 should_verify_peer = 1;; 15626 } else if (mg_strcasecmp(conn->dom_ctx->config[SSL_DO_VERIFY_PEER],; 15627 ""optional""); 15628 == 0) {; 15629 should_verify_peer = 1;; 15630 }; 15631 }; 15632 ; 15633 if (should_verify_peer) {; 15634 char *ca_path = conn->dom_ctx->config[SSL_CA_PATH];; 15635 char *ca_file = conn->dom_ctx->config[SSL_CA_FILE];; 15636 if (SSL_CTX_load_verify_locations(conn->dom_ctx->ssl_ctx,; 15637 ca_file,; 15638 ca_path); 15639 != 1) {; 15640 mg_unlock_context(conn->phys_ctx);; 15641 mg_cry_ctx_internal(; 15642 conn->phys_ctx,; 15643 ""SSL_CTX_load_verify_locations error: %s ""; 15644 ""ssl_verify_peer requires setting ""; 15645 ""either ssl_ca_path or ssl_ca_file. Is any of them ""; 15646 ""present in ""; 15647 ""the .conf file?"",; 15648 ssl_error());; 15649 return 0;; 15650 }; 15651 }; 15652 ; 15653 if (ssl_use_pem_file(conn->phys_ctx, conn->dom_ctx, pem, chain) == 0) {; 15654 mg_unlock_context(conn->phys_ctx);; 15655 return 0;; 15656 }; 15657 }; 15658 mg_unlock_context(conn->phys_ctx);; 15659 ; 15660 return 1;; 15661}; 15662 ; 15663#if defined(OPENSSL_API_1_1); 15664#else; 15665static pthread_mutex_t *ssl_mutexes;; 15666#endi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:461563,config,config,461563,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,5,['config'],['config']
Modifiability,"x. ◆ TH2() [5/7]. TH2::TH2 ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins . ). protected . Constructor for Double_t variable bin size 2-D histograms. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type double and size nbinsx+1 ; [in]nbinsynumber of bins ; [in]ybinsarray of low-edges for each bin. This is an array of type double and size nbinsy+1 . Definition at line 183 of file TH2.cxx. ◆ TH2() [6/7]. TH2::TH2 ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Float_t * ; xbins, . Int_t ; nbinsy, . const Float_t * ; ybins . ). protected . Constructor for variable bin size (along X and Y axis) 2-D histograms using input arrays of type float. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type float and size nbinsx+1 ; [in]nbinsynumber of bins ; [in]ybinsarray of low-edges for each bin. This is an array of type float and size nbinsy+1 . Definition at line 213 of file TH2.cxx. ◆ TH2() [7/7]. TH2::TH2 ; (; const TH2 & ; ). privatedelete . ◆ ~TH2(). TH2::~TH2 ; (; ). override . Destructor. ; Definition at line 230 of file TH2.cxx. Member Function Documentation. ◆ AddBinContent() [1/4]. void TH2::AddBinContent ; (; Int_t ; bin). overridevirtual . Increment bin content by 1. ; Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH1.; Reimplemented in TH2C, TH2S, TH2I, TH2L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:60651,variab,variable,60651,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  . Public Member Functions;  TGeoNode ();  Default constructor. ;  ;  TGeoNode (const TGeoVolume *vol);  Constructor. ;  ;  ~TGeoNode () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  How-to-browse for a node. ;  ; virtual void cd () const;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""");  Check overlaps bigger than OVLP hierarchically, starting with this node. ;  ; void CheckShapes ();  check for wrong parameters in shapes ;  ; Int_t CountDaughters (Bool_t unique_volumes=kFALSE);  Returns the numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNode.html:4783,inherit,inherited,4783,doc/master/classTGeoNode.html,https://root.cern,https://root.cern/doc/master/classTGeoNode.html,1,['inherit'],['inherited']
Modifiability,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  . Public Member Functions;  TGeoTrack ();  Default constructor. ;  ;  TGeoTrack (Int_t id, Int_t pdgcode, TVirtualGeoTrack *parent=nullptr, TObject *particle=nullptr);  Constructor. ;  ;  ~TGeoTrack () override;  Destructor. ;  ; TVirtualGeoTrack * AddDaughter (Int_t id, Int_t pdgcode, TObject *particle=nullptr) override;  Add a daughter track to this. ;  ; Int_t AddDaughter (TVirtualGeoTrack *other) override;  Add a daughter and return its index. ;  ; void AddPoint (Double_t x, Double_t y, Double_t z, Double_t t) override;  Add ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrack.html:1601,inherit,inherited,1601,doc/master/classTGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTGeoTrack.html,1,['inherit'],['inherited']
Modifiability,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  . Public Member Functions;  TGeoVolume ();  dummy constructor ;  ;  TGeoVolume (const char *name, const TGeoShape *shape, const TGeoMedium *med=nullptr);  default constructor ;  ;  ~TGeoVolume () override;  Destructor. ;  ; virtual TGeoNode * AddNode (TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""");  Add a TGeoNode to the list of nodes. ;  ; void AddNodeOffset (TGeoVolume *vol, Int_t copy_no, Double_t offset=0, Option_t *option="""");  Add a division node to the list of nodes. ;  ; virtual void AddNode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume.html:12526,inherit,inherited,12526,doc/master/classTGeoVolume.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume.html,1,['inherit'],['inherited']
Modifiability,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TVirtualGeoTrack.h>. Inheritance diagram for TVirtualGeoTrack:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualGeoTrack() [1/3]. TVirtualGeoTrack::TVirtualGeoTrack ; (; const TVirtualGeoTrack & ; ). protecteddelete . ◆ TVirtualGeoTrack() [2/3]. TVirtualGeoTrack::TVirtualGeoTrack ; (; ). Virtual tracks default constructor. ; Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoTrack.html:18290,inherit,inherited,18290,doc/master/classTVirtualGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoTrack.html,1,['inherit'],['inherited']
Modifiability,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoNode; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoNode; TGeoExtension * fFWExtension = n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNodeMatrix.html:17787,inherit,inherited,17787,doc/master/classTGeoNodeMatrix.html,https://root.cern,https://root.cern/doc/master/classTGeoNodeMatrix.html,2,['inherit'],['inherited']
Modifiability,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoVolume; TObject * fField;  pointer to TGeoManager owning this volume ;  ; TGeoPatternFinder * fFinder;  dummy medium ;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to volu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeMulti.html:35802,inherit,inherited,35802,doc/master/classTGeoVolumeMulti.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeMulti.html,1,['inherit'],['inherited']
Modifiability,"x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TGeoVolume; static TGeoMedium * fgDummyMedium = nullptr;  . #include <TGeoVolume.h>. Inheritance diagram for TGeoVolumeAssembly:. This browser is not able to show SVG: try Firefox, Chrome, S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeAssembly.html:29262,inherit,inherited,29262,doc/master/classTGeoVolumeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeAssembly.html,1,['inherit'],['inherited']
Modifiability,"x2=0, Double_t x3=0, Double_t x4=0, Double_t x5=0, Double_t x6=0, Double_t x7=0, Double_t x8=0, Double_t x9=0, Double_t x10=0, Double_t x11=0, Double_t x12=0, Double_t x13=0, Double_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Double_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ReadStream (std::istream &inputstream, const char *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ;  ; void ResetBranchAddress (TBranch *) override;  Reset the branch addresses to the internal fArgs array. ;  ; void ResetBranchAddresses () override;  Reset the branch addresses to the internal fArgs array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTree;  TTree ();  Default constructor and I/O constructor. ;  ;  TTree (const char *name, const char *title, Int_t splitlevel=99, TDirectory *dir=(::ROOT::Internal::TDirectoryAtomicAdapter{}));  Normal tree constructor. ;  ;  TTree (const TTree &tt)=delete;  ;  ~TTree () override;  Destructor. ;  ; void AddAllocationCount (UInt_t count);  ; virtual Int_t AddBranchToCache (const char *bname, bool subbranches=false);  Add branch with name bname to the Tree cache. ;  ; virtual Int_t AddBranchToCache (TBranch *branch, bool subbranches=false);  Add branch b to the Tree cache. ;  ; void AddClone (TTree *);  Add a cloned tree to our list of trees to be notified whenever we change our branch addresses or when we are deleted. ;  ; virtual TFriendElement * AddFriend (const char *treename, const char *filename="""");  Add a TFriendElement to the list of friends. ;  ; virtual TFriendElement * AddFriend (const char *treename, TFile *file);  Add a TFriendElement to the list ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:2492,inherit,inherited,2492,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,1,['inherit'],['inherited']
Modifiability,"x4 format ;  ; virtual void ReflectX (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to YZ. ;  ; virtual void ReflectY (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to ZX. ;  ; virtual void ReflectZ (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a reflection respect to XY. ;  ; virtual void RegisterYourself ();  Register the matrix in the current manager, which will become the owner. ;  ; virtual void RotateX (Double_t);  ; virtual void RotateY (Double_t);  ; virtual void RotateZ (Double_t);  ; void SetDefaultName ();  If no name was supplied in the ctor, the type of transformation is checked. ;  ; virtual void SetDx (Double_t);  ; virtual void SetDy (Double_t);  ; virtual void SetDz (Double_t);  ; void SetShared (Bool_t flag=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIdentity.html:4191,inherit,inherited,4191,doc/master/classTGeoIdentity.html,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html,2,['inherit'],['inherited']
Modifiability,"x:1529; NoteIf the body of the string expression contains an explicit return statement (even if it is in a nested scope), RDataFrame will not add another one in front of the expression. So this will not work: df.Define(""x2"", ""Map(v, [](float e) { return e*e; })""); but instead this will: df.Define(""x2"", ""return Map(v, [](float e) { return e*e; })""); ; Definition at line 441 of file RInterface.hxx. ◆ Define() [2/2]. template<typename Proxied , typename DataSource = void> . RInterface< Proxied, DS_t > ROOT::RDF::RInterface< Proxied, DataSource >::Define ; (; std::string_view ; name, . std::string_view ; expression . ). inline . Define a new column. ; Parameters. [in]nameThe name of the defined column. ; [in]expressionAn expression in C++ which represents the defined value . Returnsthe first node of the computation graph for which the new quantity is defined.; The expression is just-in-time compiled and used to produce the column entries. It must be valid C++ syntax in which variable names are substituted with the names of branches/columns.; NoteIf the body of the string expression contains an explicit return statement (even if it is in a nested scope), RDataFrame will not add another one in front of the expression. So this will not work: df.Define(""x2"", ""Map(v, [](float e) { return e*e; })""); but instead this will: df.Define(""x2"", ""return Map(v, [](float e) { return e*e; })""). Refer to the first overload of this method for the full documentation. ; Definition at line 528 of file RInterface.hxx. ◆ DefineImpl() [1/2]. template<typename Proxied , typename DataSource = void> . template<typename F , typename DefineType , typename RetType = typename TTraits::CallableTraits<F>::ret_type> . std::enable_if_t< std::is_default_constructible< RetType >::value, RInterface< Proxied, DS_t > > ROOT::RDF::RInterface< Proxied, DataSource >::DefineImpl ; (; std::string_view ; name, . F && ; expression, . const ColumnNames_t & ; columns, . const std::string & ; where . ). inlineprivate . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:51740,variab,variable,51740,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['variab'],['variable']
Modifiability,"x:2262; TStreamerInfoActions::AssociativeLooper::ReadCollectionFloat16static Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2251; TStreamerInfoActions::AssociativeLooper::SimpleReadFloat16static void SimpleReadFloat16(TBuffer &buf, void *addr, Int_t nvalues)Definition TStreamerInfoActions.cxx:2203; TStreamerInfoActions::AssociativeLooper::ReadNumericalCollectionstatic Int_t ReadNumericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2214; TStreamerInfoActions::BitsMarkerDefinition TStreamerInfoActions.cxx:67; TStreamerInfoActions::BitsMarker::Value_tUInt_t Value_tDefinition TStreamerInfoActions.cxx:68; TStreamerInfoActions::ConvertBasicType< BitsMarker, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1427; TStreamerInfoActions::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1457; TStreamerInfoActions::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1444; TStreamerInfoActions::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1414; TStreamerInfoActions::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1415; TStreamerInfoActions::GenericLooper::ConvertBasicType< BitsMarker, To, Generic >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2447; TStreamerInfoActions::GenericLooper::ConvertBasicType< NoFactorMarker< From >, To, Converter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:264780,config,config,264780,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"x:529; TCurlyLine::SetDefaultIsCurlystatic void SetDefaultIsCurly(Bool_t IsCurly)Set default ""IsCurly"".Definition TCurlyLine.cxx:432; TCurlyLine::SetWavyvirtual void SetWavy()Set wavy.Definition TCurlyLine.cxx:369; TCurlyLine::fgDefaultAmplitudestatic Double_t fgDefaultAmplitudedefault amplitudeDefinition TCurlyLine.h:32; TCurlyLine::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute distance from point px,py to a line.Definition TCurlyLine.cxx:169; TCurlyLine::fX2Double_t fX2end xDefinition TCurlyLine.h:24; TCurlyLine::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TCurlyLine.cxx:185; TCurlyLine::fIsCurlyBool_t fIsCurlytrue: Gluon, false: GammaDefinition TCurlyLine.h:29; TCurlyLine::SetBBoxCenterYvoid SetBBoxCenterY(const Int_t y) overrideSet Y coordinate of the center of the BoundingBox.Definition TCurlyLine.cxx:546; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TPointDefinition TPoint.h:31; TPolyLine::GetXDouble_t * GetX() constDefinition TPolyLine.h:54; TPolyLine::GetYDouble_t * GetY() constDefinition TPolyLine.h:55; TPolyLine::SetPolyLinevirtual void SetPolyLine(Int_t n)Resize this polyline to size n.Definition TPolyLine.cxx:657; bool; double; int; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::ATan2Double_t ATan2(Double_t y, Double_t x)Returns the principal value of the arc tangent of y/x, expressed in radians.Definition TMath.h:646; TMath::SqrtDouble_t Sqrt(Double_t x)Returns the square root of x.Definition TMath.h:662; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; TMath::CosDouble_t Cos(Double_t)Returns the cosine of an angle of x radians.Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyLine_8cxx_source.html:25268,inherit,inherits,25268,doc/master/TCurlyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCurlyLine_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,x::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsO,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:25108,variab,variable,25108,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,1,['variab'],['variable']
Modifiability,x::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ClassIndex.html:24776,variab,variable,24776,root/html532/ClassIndex.html,https://root.cern,https://root.cern/root/html532/ClassIndex.html,1,['variab'],['variable']
Modifiability,"x; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpiderEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. ~TSpiderEditor(); Destructor of the TSpidereditor. void ConnectSignals2Slots(); Connect signals to slots. void MakeBrowse(); Make the Browse tab. void SetModel(TObject* obj); Pick up the used spider attributes. void DoAddVar(); Slot to add a variable. void DoAvLineStyle(Int_t ); Slot to set the average LineStyle. void DoAvLineWidth(Int_t ); Slot to set the average LineWidth. void DoAvLineColor(Pixel_t ); Slot to set the average LineColor. void DoAvFillColor(Pixel_t ); Slot to set the average FillColor. void DoAvFillPattern(Style_t ); Slot to set the average FillStyle. void DoDeleteVar(); Slot to delete a variable. void DoDisplayAverage(Bool_t av); Slot Connected to the average display. void DoGotoEntry(); Slot to select an entry by number. void DoGotoNext(); Slot to Go to next entries. void DoGotoPrevious(); Slot to go to previous entries. void DoGotoFollowing(); Slot to go to next entry. void DoGotoPreceding(); Slot to go to last entry. void DoSetNx(); Slot connected to the nx setting. void DoSetNy(); Slot connected to the nx setting. void DoSetPlotType(); Slot to set the plot type. » Author: Bastien Dalla Piazza 20/07/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/treeview",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpiderEditor.html:22059,variab,variable,22059,root/html530/TSpiderEditor.html,https://root.cern,https://root.cern/root/html530/TSpiderEditor.html,3,['variab'],['variable']
Modifiability,"x;  ; Double_t fVy;  ; Double_t fVz;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPrimary.h>. Inheritance diagram for TPrimary:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPrimary() [1/2]. TPrimary::TPrimary ; (; ). Primary vertex particle default constructor. ; Definition at line 38 of file TPrimary.cxx. ◆ TPrimary() [2/2]. TPrimary::TPrimary ; (; Int_t ; part, . Int_t ; first, . Int_t ; second, . Int_t ; gener, . Double_t ; px, . Double_t ; py, . Double_t ; pz, . Double_t ; etot, . Double_t ; vx, . Double_t ; vy, . Double_t ; vz, . Double_t ; time, . Double_t ; timend, . const char * ; type = """" . ). TPrimary vertex particle normal constructor. ; Definition at line 63 of file TPrimary.cxx. ◆ ~TPrimary(). TPrimary::~TPrimary ; (; ). override . Primaray vertex particle default destructor. ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPrimary.html:13218,inherit,inherited,13218,doc/master/classTPrimary.html,https://root.cern,https://root.cern/doc/master/classTPrimary.html,2,['inherit'],['inherited']
Modifiability,"x;  Convolution observable. ;  ; RooRealProxy _xprime;  Input function representing value of convolution observable. ;  ;  Protected Attributes inherited from RooAbsCachedPdf; std::map< Int_t, AnaIntConfig > _anaIntMap;  ! Map for analytical integration codes ;  ; RooAICRegistry _anaReg;  ! Registry for analytical integration codes ;  ; RooObjCacheManager _cacheMgr;  ; Int_t _ipOrder;  The cache manager. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:80209,config,configuration,80209,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,1,['config'],['configuration']
Modifiability,"x=20);  Print values of all active leaves for entry. ;  ; virtual void StartViewer ();  Start the TTreeViewer on this tree. ;  ; virtual Int_t StopCacheLearningPhase ();  Stop the cache learning phase. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t UnbinnedFit (const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0);  Unbinned fit of one or more variable(s) from a tree. ;  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:28723,inherit,inherited,28723,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,8,['inherit'],['inherited']
Modifiability,"xAngle(Double_t angle = 0); Set the max angle (in degrees) between the initial data vector to; be fitted, and the new candidate function to be included in the; fit. By default it is 0, which automatically chooses another; selection criteria. See also; class description. void SetMinAngle(Double_t angle = 1); Set the min angle (in degrees) between a new candidate function; and the subspace spanned by the previously accepted; functions. See also; class description. void SetPowers(const Int_t* powers, Int_t terms); Define a user function. The input array must be of the form; (p11, ..., p1N, ... ,pL1, ..., pLN); Where N is the dimension of the data sample, L is the number of; terms (given in terms) and the first number, labels the term, the; second the variable. More information is given in the; class description. void SetPowerLimit(Double_t limit = 1e-3); Set the user parameter for the function selection. The bigger the; limit, the more functions are used. The meaning of this variable; is defined in the; class description. void SetMaxPowers(const Int_t* powers); Set the maximum power to be considered in the fit for each; variable. See also; class description. void SetMinRelativeError(Double_t error); Set the acceptable relative error for when sum of square; residuals is considered minimized. For a full account, refer to; the; class description. Bool_t TestFunction(Double_t squareResidual, Double_t dResidur); PRIVATE METHOD:; Test whether the currently considered function contributes to the; fit. See also; class description. TMultiDimFit(). void Draw(Option_t* = ""d""); { }. Double_t GetChi2() const; { return fChi2; }. const TMatrixD* GetCorrelationMatrix() const; { return &fCorrelationMatrix; }. const TVectorD* GetCoefficients() const; { return &fCoefficients; }. Double_t GetError() const; { return fError; }. Int_t* GetFunctionCodes() const; { return fFunctionCodes; }. const TMatrixD* GetFunctions() const; { return &fFunctions; }. TList* GetHistograms() const; { return fH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:33995,variab,variable,33995,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,3,['variab'],['variable']
Modifiability,"xAngle(Double_t angle = 0); Set the max angle (in degrees) between the initial data vector to; be fitted, and the new candidate function to be included in the; fit. By default it is 0, which automatically chooses another; selection criteria. See also; class description. void SetMinAngle(Double_t angle = 1); Set the min angle (in degrees) between a new candidate function; and the subspace spanned by the previously accepted; functions. See also; class description. void SetPowers(const Int_t* powers, Int_t terms); Define a user function. The input array must be of the form; (p11, ..., p1N, ... ,pL1, ..., pLN); Where N is the dimension of the data sample, L is the number of; terms (given in terms) and the first number, labels the term, the; second the variable. More information is given in the; class description. void SetPowerLimit(Double_t limit = 1e-3); Set the user parameter for the function selection. The bigger the; limit, the more functions are used. The meaning of this variable; is defined in the; class description. void SetMaxPowers(const Int_t* powers); Set the maximum power to be considered in the fit for each; variable. See also; class description. void SetMinRelativeError(Double_t error); Set the acceptable relative error for when sum of square; residuals is considered minimized. For a full account, refer to; the; class description. Bool_t TestFunction(Double_t squareResidual, Double_t dResidur); PRIVATE METHOD:; Test whether the currently considered function contributes to the; fit. See also; class description. TMultiDimFit(). void Draw(Option_t* = ""d""); { }. Double_t GetChi2() const; { return fChi2; }. const TMatrixD* GetCorrelationMatrix() const; { return &fCorrelationMatrix; }. const TVectorD* GetCoefficients() const; { return &fCoefficients; }. const TVectorD* GetCoefficientsRMS() const; { return &fCoefficientsRMS; }. Double_t GetError() const; { return fError; }. Int_t* GetFunctionCodes() const; { return fFunctionCodes; }. const TMatrixD* GetFunctions(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:34340,variab,variable,34340,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,1,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDiscriminant(); Default constructor for streamer, user should not use it. PDEFoamDiscriminant(const TString& , UInt_t ); {}. PDEFoamDiscriminant(const TMVA::PDEFoamDiscriminant& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void FillFoamCells(const TMVA::Event* ev, Float_t wt); This function fills an event into the discriminant PDEFoam. The; event weight 'wt' is filled into cell element 0 if the event is; of class fClass, and filled into cell element 1 otherwise. void Finalize(); Calc discriminator and its error for every cell and save it to; the cell. TH2D* Project2(Int_t , Int_t , TMVA::ECellValue , TMVA::PDEFoamKernelBase* , UInt_t ); Project foam variable idim1 and variable idi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__PDEFoamDiscriminant.html:11582,variab,variable,11582,root/html530/TMVA__PDEFoamDiscriminant.html,https://root.cern,https://root.cern/root/html530/TMVA__PDEFoamDiscriminant.html,15,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamEvent(); Default constructor for streamer, user should not use it. PDEFoamEvent(const TString& ); {}. PDEFoamEvent(const TMVA::PDEFoamEvent& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void FillFoamCells(const TMVA::Event* ev, Float_t wt); This function fills an event weight 'wt' into the PDEFoam. Cell; element 0 is filled with the weight 'wt', and element 1 is; filled with the squared weight. virtual ~PDEFoamEvent(); {}. » Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008, 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding the documentation or R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__PDEFoamEvent.html:11488,variab,variable,11488,root/html534/TMVA__PDEFoamEvent.html,https://root.cern,https://root.cern/root/html534/TMVA__PDEFoamEvent.html,3,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamEvent(); Default constructor for streamer, user should not use it. PDEFoamEvent(const TString& ); {}. PDEFoamEvent(const TMVA::PDEFoamEvent& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void FillFoamCells(const TMVA::Event* ev, Float_t wt); This function fills an event weight 'wt' into the PDEFoam. Cell; element 0 is filled with the weight 'wt', and element 1 is; filled with the squared weight. virtual ~PDEFoamEvent(); {}. » Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008, 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__PDEFoamEvent.html:11931,variab,variable,11931,root/html604/TMVA__PDEFoamEvent.html,https://root.cern,https://root.cern/root/html604/TMVA__PDEFoamEvent.html,3,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamEvent(); Default constructor for streamer, user should not use it. PDEFoamEvent(const TString& ); {}. PDEFoamEvent(const TMVA::PDEFoamEvent& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void FillFoamCells(const TMVA::Event* ev, Float_t wt); This function fills an event weight 'wt' into the PDEFoam. Cell; element 0 is filled with the weight 'wt', and element 1 is; filled with the squared weight. virtual ~PDEFoamEvent(); {}. » Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008, 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:17; This page has been automatically generated. For comments or suggestions regarding the documentation or R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamEvent.html:11923,variab,variable,11923,root/html602/TMVA__PDEFoamEvent.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamEvent.html,3,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamEvent(); Default constructor for streamer, user should not use it. PDEFoamEvent(const TString& ); {}. PDEFoamEvent(const TMVA::PDEFoamEvent& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void FillFoamCells(const TMVA::Event* ev, Float_t wt); This function fills an event weight 'wt' into the PDEFoam. Cell; element 0 is filled with the weight 'wt', and element 1 is; filled with the squared weight. virtual ~PDEFoamEvent(); {}. » Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008, 2010: *; » Last changed: root/tmva $Id: PDEFoamEvent.h 39395 2011-05-26 10:05:54Z moneta $ » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__PDEFoamEvent.html:11472,variab,variable,11472,root/html530/TMVA__PDEFoamEvent.html,https://root.cern,https://root.cern/root/html530/TMVA__PDEFoamEvent.html,3,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamEvent(); Default constructor for streamer, user should not use it. PDEFoamEvent(const TString& ); {}. PDEFoamEvent(const TMVA::PDEFoamEvent& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void FillFoamCells(const TMVA::Event* ev, Float_t wt); This function fills an event weight 'wt' into the PDEFoam. Cell; element 0 is filled with the weight 'wt', and element 1 is; filled with the squared weight. virtual ~PDEFoamEvent(); {}. » Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008, 2010: *; » Last changed: root/tmva $Id: PDEFoamEvent.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDEFoamEvent.html:11472,variab,variable,11472,root/html532/TMVA__PDEFoamEvent.html,https://root.cern,https://root.cern/root/html532/TMVA__PDEFoamEvent.html,3,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. private:. TMVA::SeparationBase*fSepTypeseparation type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDecisionTree(); Default constructor for streamer, user should not use it. PDEFoamDecisionTree(const TString& , TMVA::SeparationBase* sepType, UInt_t cls); Parameters:. - Name - name of the foam. - sepType - separation type used for the cell splitting (will be; deleted in the destructor). - cls - class to consider as signal when calcualting the purity. PDEFoamDecisionTree(const TMVA::PDEFoamDecisionTree& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). ~PDEFoamDecisionTree(); Destructor; deletes fSepType. void Explore(TMVA::PDEFoamCell* Cell); Internal subprogram used by Create. It explores newly defined; cell with according to th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__PDEFoamDecisionTree.html:12181,variab,variable,12181,root/html530/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html530/TMVA__PDEFoamDecisionTree.html,6,['variab'],['variable']
Modifiability,"xDepthmaximum depth of cell tree; Int_tTMVA::PDEFoam::fNBinNo. of bins in the edge histogram for cell MC exploration; Int_tTMVA::PDEFoam::fNCellsMaximum number of cells; UInt_tTMVA::PDEFoam::fNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. private:. TMVA::SeparationBase*fSepTypeseparation type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDecisionTree(); Default constructor for streamer, user should not use it. PDEFoamDecisionTree(const TString& , TMVA::SeparationBase* sepType, UInt_t cls); Parameters:. - name - name of the foam. - sepType - separation type used for the cell splitting (will be; deleted in the destructor). - cls - class to consider as signal when calcualting the purity. PDEFoamDecisionTree(const TMVA::PDEFoamDecisionTree& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). ~PDEFoamDecisionTree(); Destructor; deletes fSepType. void Explore(TMVA::PDEFoamCell* Cell); Internal subprogram used by Create. It explores newly defined; cell with according to th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__PDEFoamDecisionTree.html:12200,variab,variable,12200,root/html534/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html534/TMVA__PDEFoamDecisionTree.html,9,['variab'],['variable']
Modifiability,"xReturned;  ! used to optimize GetEntry() function from a loop ;  ; TList * fLists;  a list of underlying entry lists for each tree of a chain ;  ; Long64_t fN;  number of entries in the list ;  ; Int_t fNBlocks;  number of TEntryListBlocks ;  ; bool fReapply;  If true, TTree::Draw will 'reapply' the original cut. ;  ; bool fShift;  ! true when some sub-lists don't correspond to trees (when the entry list is used as input in TChain) ;  ; ULong_t fStringHash;  ! Hash value of a string of treename and filename ;  ; TString fTreeName;  name of the tree ;  ; Int_t fTreeNumber;  ! the index of the tree in the chain (used when the entry list is used as input (TTree::SetEntryList()) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; TEntryListArray & operator= (const TEntryListArray &);  . Additional Inherited Members;  Public Types inherited from TEntryList; enum  { kBlockSize = 64000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TEntryListArray.h>. Inheritance diagram for TEntryListArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEntryListArray() [1/7]. TEntryListArray::TEntryListArray ; (; ). Default c-tor. ; Definition at line 9",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryListArray.html:21961,inherit,inherited,21961,doc/master/classTEntryListArray.html,https://root.cern,https://root.cern/doc/master/classTEntryListArray.html,2,['inherit'],['inherited']
Modifiability,"xTSparse< Element > &a, const TMatrixT< Element > &b, Int_t constr=0);  General matrix multiplication. ;  ; void AMultBt (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  ; void APlusB (const TMatrixT< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  ; void APlusB (const TMatrixTSparse< Element > &a, const TMatrixT< Element > &b, Int_t constr=0);  General matrix addition. ;  ; void APlusB (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  General matrix addition. ;  ; void conservative_sparse_sparse_product_impl (const TMatrixTSparse< Element > &lhs, const TMatrixTSparse< Element > &rhs, Int_t constr=0);  General Sparse Matrix Multiplication (SpMM). ;  ; Int_t ReduceSparseMatrix (Int_t nr, Int_t *row, Int_t *col, Element *data);  Sum matrix entries corresponding to the same matrix element (i,j). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fColIndex;  ; Element * fElements;  ; Int_t * fRowIndex;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSparse.html:26897,inherit,inherited,26897,doc/master/classTMatrixTSparse.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html,1,['inherit'],['inherited']
Modifiability,"xTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::AddSpectatorvoid AddSpectator(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:524; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Types::kFisher@ kFisherDefinition Types.h:82; TMVA::Types::kBDT@ kBDTDefinition Types.h:86; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; TMVA::TMVAGuivoid TMVAGui(const char *fName=""TMVA.root"", TString dataset=""""); Factory.h; AuthorKim Albertsson (adapted from code originally by Andreas Hoecker) ; Definition in file TMVACrossValidation.C. tutorialstmvaTMVACrossValidation.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidation_8C.html:30205,adapt,adapted,30205,doc/master/TMVACrossValidation_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidation_8C.html,1,['adapt'],['adapted']
Modifiability,"xample ;  htest.C Save histograms in Tree branches ;  hvector.C Write and read STL vectors in a tree ;  JetEvent.cxx;  JetEvent.h;  jets.CUsage of a Tree using the JetEvent class ;  ntuple1.C Simple tree analysis ;  parallelcoord.C Script illustrating the use of the TParalleCoord class ;  parallelcoordtrans.C Use of transparency with ||-Coord ;  printSizes.C This macro can be used to get aggregate information on the size take on disk or in memory by the various branches in a TTree ;  run_h1analysis.C Macro driving the analysis can specify file name and type ;  spider.C TSpider example ;  staff.C Create a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unfold;  testUnfold1.C Test program for the classes TUnfold and related ;  testUnfold2.C Test program as an example for a user specific regularisation scheme ;  testUnfold3.C Simple Test program for the class TUnfoldDensity ;  testUnfold4.C Test program for the class TUnfoldSys ;  testUnfold5a.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5b.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5c.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5d.C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:159098,variab,variables,159098,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,2,['variab'],['variables']
Modifiability,"xample ;  htest.C Save histograms in Tree branches ;  hvector.C Write and read STL vectors in a tree ;  JetEvent.cxx;  JetEvent.h;  jets.CUsage of a Tree using the JetEvent class ;  ntuple1.C Simple tree analysis ;  parallelcoord.C Script illustrating the use of the TParalleCoord class ;  parallelcoordtrans.C Use of transparency with ||-Coord ;  printSizes.C This macro can be used to get aggregate information on the size take on disk or in memory by the various branches in a TTree ;  run_h1analysis.C Macro driving the analysis can specify file name and type ;  spider.C TSpider example ;  staff.C Create a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unuran;  unuranDemo.CExample macro to show unuran capabilities The results are compared with what is obtained using TRandom or TF1::GetRandom The macro is divided in 3 parts: ;  unuranFoamTest.CThis program must be compiled and executed with Aclic as follows ;  ► v7;  concurrentfill.cxx;  draw.cxx;  histops.cxx;  histspeedtest.cxx;  perf.cxx;  perfcomp.cxx;  simple.cxx;  ► xml;  DOMParsePerson.C ROOT implementation of a XML DOM Parser ;  DOMRecursive.C ROOT implementation of a XML DOM Parser ;  SAXHandler.C ROOT implementation of a s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:157245,variab,variables,157245,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['variab'],['variables']
Modifiability,"xample, the following folders exist:; //root/Files with the list of currently connected Root files; //root/Classes with the list of active classes; //root/Geometries with active geometries; //root/Canvases with the list of active canvases; //root/Styles with the list of graphics styles; //root/Colors with the list of active colors. For example, if a file ""myFile.root"" is added to the list of files, one can; retrieve a pointer to the corresponding TFile object with a statement like:; TFile *myFile = (TFile*)gROOT->FindObject(""//root/Files/myFile.root"");; The above statement can be abbreviated to:; TFile *myFile = (TFile*)gROOT->FindObject(""/Files/myFile.root"");; or even to:; TFile *myFile = (TFile*)gROOT->FindObjectAny(""myFile.root"");; In this last case, the TROOT::FindObjectAny function will scan the folder hierarchy; starting at //root and will return the first object named ""myFile.root"". Because a string-based search mechanism is expensive, it is recommended; to save the pointer to the object as a class member or local variable; if this pointer is used frequently or inside loops. /*. */. Function Members (Methods); public:. TFolder(); TFolder(const char* name, const char* title); virtual~TFolder(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* obj); TFolder*AddFolder(const char* name, const char* title, TCollection* collection = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFolder.html:3337,variab,variable,3337,root/html528/TFolder.html,https://root.cern,https://root.cern/root/html528/TFolder.html,4,['variab'],['variable']
Modifiability,"xample, the following folders exist:; //root/Files with the list of currently connected Root files; //root/Classes with the list of active classes; //root/Geometries with active geometries; //root/Canvases with the list of active canvases; //root/Styles with the list of graphics styles; //root/Colors with the list of active colors. For example, if a file ""myFile.root"" is added to the list of files, one can; retrieve a pointer to the corresponding TFile object with a statement like:; TFile *myFile = (TFile*)gROOT->FindObject(""//root/Files/myFile.root"");; The above statement can be abbreviated to:; TFile *myFile = (TFile*)gROOT->FindObject(""/Files/myFile.root"");; or even to:; TFile *myFile = (TFile*)gROOT->FindObjectAny(""myFile.root"");; In this last case, the TROOT::FindObjectAny function will scan the folder hierarchy; starting at //root and will return the first object named ""myFile.root"". Because a string-based search mechanism is expensive, it is recommended; to save the pointer to the object as a class member or local variable; if this pointer is used frequently or inside loops. /*. */. Function Members (Methods); public:. virtual~TFolder(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* obj); TFolder*AddFolder(const char* name, const char* title, TCollection* collection = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFolder.html:3337,variab,variable,3337,root/html602/TFolder.html,https://root.cern,https://root.cern/root/html602/TFolder.html,2,['variab'],['variable']
Modifiability,xamples showing how to use TSpectrum2Painter (the SPEC option) ;  ► splot;  TestSPlot.CThis tutorial illustrates the use of class TSPlot and of the sPlots method ;  ► sql;  sqlcanvas.CThis is slight modification of ntuple1.C example ;  sqlcreatedb.CCreate a runcatalog table in a MySQL test database ;  sqlfilldb.CFill run catalog with nfiles entries ;  sqlselect.C;  sqltables.CThis is an example illustrating how the TSQLFile class can be used ;  ► thread;  stressThreadPool.CUsage: ;  threadPool.CUsage: ;  threads.CExample of a simple script creating 3 threads ;  threadsh1.CExample of a simple script creating 3 threads ;  threadsh2.CExample of a simple script creating 2 threads each with one canvas ;  ► tmva;  ► envelope;  classification.C;  ► keras;  ApplicationClassificationKeras.py;  ApplicationRegressionKeras.py;  ClassificationKeras.py;  GenerateModel.py;  LaunchClasGUI.C;  LaunchMultiGUI.C;  LaunchRegGUI.C;  MulticlassKeras.py;  RegressionKeras.py;  createData.CPlot the variables ;  TMVAClassification.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVAClassificationApplication.C This macro provides a simple example on how to use the trained classifiers within an analysis module ;  TMVAClassificationCategory.C This macro provides examples for the training and testing of the TMVA classifiers in categorisation mode ;  TMVAClassificationCategoryApplication.C This macro provides a simple example on how to use the trained classifiers (with categories) within an analysis module ;  TMVACrossValidation.C This example explains how to use the cross-validation feature of TMVA ;  TMVAGAexample.C This exectutable gives an example of a very simple use of the genetic algorithm of TMVA ;  TMVAGAexample2.C This exectutable gives an example of a very simple use of the genetic algorithm of TMVA ;  TMVAMulticlass.C This macro provides a simple example for the training and testing of the TMVA multiclass classification ;  TMVAMulticlassApplicati,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/files.html:155596,variab,variables,155596,doc/v612/files.html,https://root.cern,https://root.cern/doc/v612/files.html,1,['variab'],['variables']
Modifiability,"xbin,""[cutg]"");; To invert the cut, it is enough to put a ""-"" in front of its name:; myhist->ProjectionY("" "",firstxbin,lastxbin,""[-cutg]"");; It is possible to apply several cuts:; myhist->ProjectionY("" "",firstxbin,lastxbin,""[cutg1,cutg2]"");. NOTE that if a TH1D named ""name"" exists in the current directory or pad and having; a compatible axis, the histogram is reset and filled again with the projected contents of the TH2.; In the case of axis incompatibility, an error is reported and a NULL pointer is returned. NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection. void PutStats(Double_t* stats); Replace current statistics with the values in array stats. TH1D* QuantilesX(Double_t prob = 0.5, const char* name = ""_qx"") const; Compute the X distribution of quantiles in the other variable Y; name is the name of the returned histogram; prob is the probability content for the quantile (0.5 is the default for the median); An approximate error for the quantile is computed assuming that the distribution in; the other variable is normal. TH1D* QuantilesY(Double_t prob = 0.5, const char* name = ""_qy"") const; Compute the Y distribution of quantiles in the other variable X; name is the name of the returned histogram; prob is the probability content for the quantile (0.5 is the default for the median); An approximate error for the quantile is computed assuming that the distribution in; the other variable is normal. TH1D* DoQuantiles(bool onX, const char* name, Double_t prob) const; Implementation of quantiles for x or y. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinContent(Int_t bin, Double_t content); Set bin content. void SetShowProjectionX(Int_t nbins = 1); When the mouse is moved in a pad containing a 2-d view of this histogram; a second canvas shows the projection along X corresponding to the; mouse position along Y.; To stop the generation of the projections, delete the canvas; containing the proje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2.html:55058,variab,variable,55058,root/html602/TH2.html,https://root.cern,https://root.cern/root/html602/TH2.html,2,['variab'],['variable']
Modifiability,"xcept;  ; reverse_iterator rbegin () noexcept;  ; const_reverse_iterator rend () const noexcept;  ; reverse_iterator rend () noexcept;  ; size_t size () const;  ; size_type size_in_bytes () const;  ;  Public Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; size_t capacity () const noexcept;  ; bool empty () const;  ; void set_size (size_t N);  Set the array size to N, which the current array must have enough capacity for. ;  ; size_t size () const;  . Private Types; using SuperClass = RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >;  . Friends; void Internal::VecOps::ResetView (RVec< T > &v, T *addr, std::size_t sz);  ; bool ROOT::Detail::VecOps::IsAdopting (const RVec< T > &v);  ; bool ROOT::Detail::VecOps::IsSmall (const RVec< T > &v);  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Detail::VecOps::RVecImpl< T >;  RVecImpl (unsigned N);  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >;  SmallVectorTemplateBase (size_t Size);  ; void grow (size_t MinSize=0);  Grow the allocated memory (without initializing new elements), doubling the size of the allocated memory. ;  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >;  SmallVectorTemplateCommon (size_t Size);  ; void grow_pod (size_t MinSize, size_t TSize);  ; bool isSmall () const;  Return true if this is a smallvector which has not had dynamic memory allocated for it. ;  ; void resetToSmall ();  Put this vector in a state of being small. ;  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase;  SmallVectorBase ()=delete;  ;  SmallVectorBase (void *FirstEl, size_t TotalCapacity);  ; void grow_pod (void *FirstEl, size_t MinSize, size_t TSize);  This is an implementation of the grow() method which only works on POD-like data types and is out of line to reduce code duplication. ;  ; bool Owns () const;  If fals",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1VecOps_1_1RVec.html:17715,inherit,inherited,17715,doc/v632/classROOT_1_1VecOps_1_1RVec.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1VecOps_1_1RVec.html,4,['inherit'],['inherited']
Modifiability,"xception: if the bound function is not a standard TMath or MathMore function the class cannot be persisted in a RooWorkspace without registering the function pointer first using RooCFunction1Binding<T1,T2>::register(). ; Definition at line 56 of file RooFunctorBinding.h. Public Member Functions;  RooFunctorPdfBinding ()=default;  ;  RooFunctorPdfBinding (const char *name, const char *title, const ROOT::Math::IBaseFunctionMultiDim &ftor, const RooArgList &vars);  Create a RooFit PDF that makes ftor usable as a PDF in RooFit. ;  ;  RooFunctorPdfBinding (const RooFunctorPdfBinding &other, const char *name=nullptr);  ;  ~RooFunctorPdfBinding () override;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctorPdfBinding.html:1823,inherit,inherited,1823,doc/master/classRooFunctorPdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctorPdfBinding.html,1,['inherit'],['inherited']
Modifiability,"xecScript(const char *name, int argc, const char **argv); 382{; 383 ; 384 // setup; 385 if (!Initialize()); 386 return;; 387 ; 388 PyGILRAII gilRaii;; 389 ; 390 // verify arguments; 391 if (!name) {; 392 std::cerr << ""Error: no file name specified."" << std::endl;; 393 return;; 394 }; 395 ; 396 std::vector<std::string> args(argc);; 397 for (int i = 0; i < argc; ++i) {; 398 args[i] = argv[i];; 399 }; 400 CPyCppyy::ExecScript(name, args);; 401}; 402 ; 403////////////////////////////////////////////////////////////////////////////////; 404/// Executes a Python command within the current Python environment.; 405///; 406/// This function initializes the Python environment if it is not already; 407/// initialized. It then executes the specified Python command string using the; 408/// Python C API.; 409///; 410/// In the Python command, you can change the value of a special TPyResult; 411/// object returned by TPyBuffer(). If the optional result parameter is; 412/// non-zero, the result parameter will be swapped with a std::any variable on; 413/// the Python side. You need to define this variable yourself, and it needs to; 414/// be of type std::any and its name needs to be `""_anyresult""` by default.; 415/// Like this, you can pass information from Python back to C++.; 416///; 417/// \param cmd The Python command to be executed as a string.; 418/// \param result Optional pointer to a std::any object that can be used to; 419/// transfer results from Python to C++.; 420/// \param resultName Name of the Python variable that is swapped over to the std::any result.; 421/// The default value is `""_anyresult""`.; 422/// \return bool Returns `true` if the command was successfully executed,; 423/// otherwise returns `false`.; 424 ; 425Bool_t TPython::Exec(const char *cmd, std::any *result, std::string const &resultName); 426{; 427 // setup; 428 if (!Initialize()); 429 return kFALSE;; 430 ; 431 PyGILRAII gilRaii;; 432 ; 433 std::stringstream command;; 434 // Add the actual command; 43",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:13668,variab,variable,13668,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['variab'],['variable']
Modifiability,"xedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. bool SetVariableStepSize(unsigned int , double ); set the step-size of an existing variable; parameter must exist or return false. bool SetVariableLowerLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableUpperLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an existing variable; parameter must exist or return false. bool FixVariable(unsigned int ); Fix an existing variable. bool ReleaseVariable(unsigned int ); Fix an existing variable. bool IsFixedVariable(unsigned int ) const; query if variable is fixed. bool GetVariableSettings(unsigned int , ROOT::Fit::ParameterSettings& ) const; retrieve variable settings (all set info on the variable). std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void RetrieveParams(); retrieve from TMinuit minimum parameter values; and errors. void RetrieveErrorMatrix(); get covariance error matrix from TMinuit; when some parameters are fixed filled the corresponding rows and column with zero's. unsigned int NCalls() const; return total number of function calls. double MinValue() const; return minimum function value. double Edm() const; return expected distance from the minimum. unsigned ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:9975,variab,variable,9975,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,6,['variab'],['variable']
Modifiability,"xel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. private:. TH1*fBinHistCloned histogram for rebin; Bool_tfMakeVeto Variable; Bool_tfMakeBavoid execution of Bar Slots; Double_tfOldOffsetsave the old offset of the histogram; Float_tfP1NDCold[3]; Float_tfP1old[3]; Float_tfP2NDCold[3]; Float_tfP2old[3]; Float_tfP3NDCold[3]; Float_tfP3old[3]; Float_tfP4NDCold[3]; Float_tfP4old[3]; Float_tfP5old[3]; Float_tfP6old[3]; Float_tfP7old[3]; Float_tfP8old[3]; Int_tfPx1old; Int_tfPx2old; Int_tfPy1old; Int_tfPy2old. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1Editor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of histogram attribute GUI. void CreateBinTab(); Create binning tab. ~TH1Editor(); Destructor of TH1 editor. void ConnectSignals2Slots(); Connect signals to slots. Bool_t AcceptModel(TObject* model); Check if object is able to configure with this editor. void SetModel(TObject* obj); Pick up current values of histogram attributes. void DoTitle(const char* text); Slot connected to the histogram title setting. void DoAddMarker(Bool_t on); Slot connected to the show markers check box. void DoAddB(Bool_t ); Slot connected to the bar Add check box. void DoAddBar(Bool_t ); Slot connected to the bar Add check box. void DoAddSimple(Bool_t on); Slot connected to fAddSimple check box for drawing a simple histogram; without errors (== HIST draw option) in combination with some other; draw options. It draws an additional line on the top of the bins. void DoHistView(); Slot connected to the 'Plot' button group. void DoHistSimple(); Slot connected to the 2D radio button. void DoHistComplex(); Slot connected to the 3D radio button. void DoHistChanges(); Slot connected to the histogram type, the coordinate type, the error type; and the Add combo box. void DoBarWidth(); Slot connected to the Bar Width of the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1Editor.html:29182,config,configure,29182,root/html602/TH1Editor.html,https://root.cern,https://root.cern/root/html602/TH1Editor.html,2,['config'],['configure']
Modifiability,"xes*-; *-* ===========================================================; *-* NXYPT is the number of points to be plotted; *-* XPT(I) = x-coord. of ith point; *-* YPT(I) = y-coord. of ith point; *-* CHPT(I) = character to be plotted at this position; *-* the input point arrays XPT, YPT, CHPT are destroyed.; -; -; *-* If fGraphicsmode is true (default), a TGraph object is produced; *-* via the Plug-in handler. To get the plot, you can do:; *-* TGraph *gr = (TGraph*)gMinuit->GetPlot();; *-* gr->Draw(""al"");; -; *. void mnpout(Int_t iuext, TString& chnam, Double_t& val, Double_t& err, Double_t& xlolim, Double_t& xuplim, Int_t& iuint) const; -*Provides the user with information concerning the current status; *-* ================================================================; *-* of parameter number IUEXT. Namely, it returns:; *-* CHNAM: the name of the parameter; *-* VAL: the current (external) value of the parameter; *-* ERR: the current estimate of the parameter uncertainty; *-* XLOLIM: the lower bound (or zero if no limits); *-* XUPLIM: the upper bound (or zero if no limits); *-* IUINT: the internal parameter number (or zero if not variable,; *-* or negative if undefined).; *-* Note also: If IUEXT is negative, then it is -internal parameter; *-* number, and IUINT is returned as the EXTERNAL number.; *-* Except for IUINT, this is exactly the inverse of MNPARM; *-* User-called; *. void mnprin(Int_t inkode, Double_t fval); Prints the values of the parameters at the time of the call*-; *-* ===========================================================; *-* also prints other relevant information such as function value,; *-* estimated distance to minimum, parameter errors, step sizes.; -; *-* According to the value of IKODE, the printout is:; *-* IKODE=INKODE= 0 only info about function value; *-* 1 parameter values, errors, limits; *-* 2 values, errors, step sizes, internal values; *-* 3 values, errors, step sizes, first derivs.; *-* 4 values, parabolic errors, MINOS errors; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:50495,variab,variable,50495,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,6,['variab'],['variable']
Modifiability,"xies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooArgSet _paramSet;  Set of parameters to which constraints apply. ;  ; RooListProxy _set1;  Set of constraint terms. ;  ; const bool _takeGlobalObservablesFromData = false;  If the global observable values are taken from data. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:55478,inherit,inherited,55478,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['inherit'],['inherited']
Modifiability,"ximising the signal significance- squared, \( \frac{S^2}{(S+B)} \), with S and B being the signal and background yields, correspond to a particular point in the optimised background rejection versus signal efficiency curve. This working point requires the knowledge of the expected yields, which is not the case in general. Note also that for rare signals, Poissonian statistics should be used, which modifies the significance criterion.; The rectangular cut of a volume in the variable space is performed using a binary tree to sort the training events. This provides a significant reduction in computing time (up to several orders of magnitudes, depending on the complexity of the problem at hand).; Technically, optimisation is achieved in TMVA by two methods:. Monte Carlo generation using uniform priors for the lower cut value, and the cut width, thrown within the variable ranges.; A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample. The GA is configurable by many external settings through the option string. For difficult cases (such as many variables), some tuning may be necessary to achieve satisfying results. Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown superior results, and often failed due to convergence at local minima.; The tests we have performed so far showed that in generic applications, the GA is superior to MC sampling, and hence GA is the default method. It is worthwhile trying both anyway.; Decorrelated (or ""diagonalized"") Cuts**; See class description for Method Likelihood for a detailed explanation. ; Definition at line 61 of file MethodCuts.h. Public Member Functions;  MethodCuts (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption=""MC:150:10000:"");  standard constructor ;  ;  MethodCuts (DataSetInfo &theData, const TString &theWeightFile);  construction from weight file ;  ; virtual ~MethodCuts (void);  destructor ;  ; void AddWeightsXMLTo (void *parent) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:1775,config,configurable,1775,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['config'],['configurable']
Modifiability,"xis (if any) ;  ; TString fChopt;  Axis options. ;  ; TF1 * fFunction;  ! Pointer to function computing axis values ;  ; TString fFunctionName;  Name of mapping function pointed by fFunction. ;  ; Float_t fGridLength;  Length of the grid in NDC. ;  ; Int_t fLabelColor;  Color for labels. ;  ; Int_t fLabelFont;  Font for labels. ;  ; Float_t fLabelOffset;  Offset of label wrt axis. ;  ; Float_t fLabelSize;  Size of labels in NDC. ;  ; TList * fModLabs;  List of modified labels. ;  ; TString fName;  Axis name. ;  ; Int_t fNdiv;  Number of divisions. ;  ; Int_t fNModLabs;  Number of modified labels. ;  ; Float_t fTickSize;  Size of primary tick mark in NDC. ;  ; TString fTimeFormat;  Time format, ex: 09/12/99 12:34:00. ;  ; TString fTitle;  Axis title. ;  ; Float_t fTitleOffset;  Offset of title wrt axis. ;  ; Float_t fTitleSize;  Size of title in NDC. ;  ; Double_t fWmax;  Highest value on the axis. ;  ; Double_t fWmin;  Lowest value on the axis. ;  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 ));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGaxis.html:57567,inherit,inherited,57567,doc/master/classTGaxis.html,https://root.cern,https://root.cern/doc/master/classTGaxis.html,1,['inherit'],['inherited']
Modifiability,"xis *a2);  Check that the axis limits of the histograms are the same. ;  ; static bool CheckBinLabels (const TAxis *a1, const TAxis *a2);  Check that axis have same labels. ;  ; static bool CheckBinLimits (const TAxis *a1, const TAxis *a2);  Check bin limits. ;  ; static int CheckConsistency (const TH1 *h1, const TH1 *h2);  Check histogram compatibility. ;  ; static bool CheckConsistentSubAxes (const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0);  Check that two sub axis are the same. ;  ; static bool CheckEqualAxes (const TAxis *a1, const TAxis *a2);  Check that the axis are the same. ;  ; static Bool_t RecomputeAxisLimits (TAxis &destAxis, const TAxis &anAxis);  Finds new limits for the axis for the Merge function. ;  ; static Bool_t SameLimitsAndNBins (const TAxis &axis1, const TAxis &axis2);  Same limits and bins. ;  ;  Protected Attributes inherited from TH1; Short_t fBarOffset;  (1000*offset) for bar charts or legos ;  ; Short_t fBarWidth;  (1000*width) for bar charts or legos ;  ; EBinErrorOpt fBinStatErrOpt;  Option for bin statistical errors. ;  ; Double_t * fBuffer;  [fBufferSize] entry buffer ;  ; Int_t fBufferSize;  fBuffer size ;  ; TArrayD fContour;  Array to display contour levels. ;  ; Int_t fDimension;  ! Histogram dimension (1, 2 or 3 dim) ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this histogram ;  ; Double_t fEntries;  Number of entries. ;  ; TList * fFunctions;  ->Pointer to list of functions (fits and user) ;  ; Double_t * fIntegral;  ! Integral of bins used by GetRandom ;  ; Double_t fMaximum;  Maximum value for plotting. ;  ; Double_t fMinimum;  Minimum value for plotting. ;  ; Int_t fNcells;  Number of bins(1D), cells (2D) +U/Overflows. ;  ; Double_t fNormFactor;  Normalization factor. ;  ; TString fOption;  Histogram options. ;  ; TVirtualHistPainter * fPainter;  ! Pointer to histogram painter ;  ; EStatOverflows fStatOverflows;  Per object flag to use under/overflows in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1C.html:48958,inherit,inherited,48958,doc/master/classTH1C.html,https://root.cern,https://root.cern/doc/master/classTH1C.html,6,['inherit'],['inherited']
Modifiability,"xis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange ; Reimplemented in TProfile3D, TProfile, and TProfile2D.; Definition at line 8875 of file TH1.cxx. ◆ SetBinsLength(). virtual void TH1::SetBinsLength ; (; Int_t ; = -1). inlinevirtual . Reimplemented in TH1C, TH1S, TH1I, TH1L, TH1F, TH1D, TH2C, TH2S, TH2I, TH2L, TH2F, TH2D, TH3C, TH3S, TH3I, TH3L, TH3F, TH3D, TProfile, TProfile2D, and TProfile3D.; Definition at line 380 of file TH1.h. ◆ SetBuffer(). void TH1::SetBuffer ; (; Int_t ; buffersize, . Option_t * ; option = """" . ). virtual . Set the maximum number of entries to be kept in the buffer. ; Reimplemented in TProfile3D, TProfile, and TProfile2D.; Definition at line 8458 of file TH1.cxx. ◆ SetCanExtend(). UInt_t TH1::SetCanExtend ; (; UInt_t ; extendBitMask). virtual . Make the histogram axes extendable / not extendable according to the bit mask returns the previous bit mask specifying which axes are extendable. ; Definition at line 6649 of file TH1.cxx. ◆ SetCellContent(). virtual void TH1::SetCellContent ; (; Int_t ; binx, . Int_t ; biny, . Double_t ; content . ). inlinevirtual . Definition at line 439 of file TH1.h. ◆ SetCellError(). virtual void TH1::SetCellError ; (; Int_t ; binx, . Int_t ; biny, . Double_t ; content . ). inlinevirtual . Definition at line 441 of file TH1.h. ◆ SetColors(). void TH1::SetColors ; (; Color_t ; linecolor = -1, . Color_t ; markercolor = -1, . Color_t ; fillcolor = -1 . ). virtual . Shortcut to set the three histogram colors with a single call. ; By default: linecolor = markercolor = fillcolor = -1 If a color is < 0 this method does not change the corresponding color if positive or null it set the color.; For instance: h->SetColors(kRed, kRed);; kRed@ kRedDefinition Rtypes.h:66; will set the line color and the marker color to red. ; Definition at line 4467 of file TH1.cxx. ◆ SetContent().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:208879,extend,extendable,208879,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,3,['extend'],['extendable']
Modifiability,"xis title can be added or edited and the title’s color, position, offset, size and font can be set interactively;; the color, size, and offset of axis labels can be set similarly. In addition, there is a check box for no exponent choice, and another one for setting the same decimal part for all labels. 9.7.2 TPadEditor. It provides the following user interface:; Fixed aspect ratio - can be set for pad resizing.; Edit - sets pad or canvas as editable.; Cross-hair - sets a cross hair on the pad.; TickX - set ticks along the X axis.; TickY - set ticks along the Y axis.; GridX - set a grid along the X axis.; GridY - set a grid along the Y axis.; The pad or canvas border size can be set if a sunken or a raised border mode is; selected; no border mode can be set too. 9.8 Copy and Paste; You can make a copy of a canvas using TCanvas::DrawClonePad. This method is unique to TCanvas. It clones the entire canvas to the active pad. There is a more general method TObject::DrawClone, which all objects descendent of TObject, specifically all graphic objects inherit. Below are two examples, one to show the use of DrawClonePad and the other to show the use of DrawClone.; 9.8.1 Using the GUI; In this example we will copy an entire canvas to a new one with DrawClonePad. Run the script draw2dopt.C.; root[] .x tutorials/hist/draw2dopt.C; This creates a canvas with 2D histograms. To make a copy of the canvas follow the steps:. Right-click on it to bring up the context menu; Select DrawClonePad. This copies the entire canvas and all its sub-pads to a new canvas. The copied canvas is a deep clone, and all the objects on it are copies and independent of the original objects. For instance, change the fill on one of the original histograms, and the cloned histogram retains its attributes. DrawClonePad will copy the canvas to the active pad; the target does not have to be a canvas. It can also be a pad on a canvas. Different draw options. If you want to copy and paste a graphic object from one",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:367387,inherit,inherit,367387,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inherit']
Modifiability,"xis"" range. ;  ; virtual void SetBarOffset (Float_t offset=0.25);  Set the bar offset as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBarWidth (Float_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBinsLength (Int_t=-1);  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:26831,variab,variable,26831,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,2,['variab'],['variable']
Modifiability,"xis"" range. ;  ; virtual void SetBarOffset (Float_t offset=0.25);  Set the bar offset as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBarWidth (Float_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask returns the previous bit mask specifying w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:28747,variab,variable,28747,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,13,['variab'],['variable']
Modifiability,"xis(Double_t x, TAxis *axis); 1584{; 1585 TProfile* hold = TProfileHelper::ExtendAxis(this, x, axis);; 1586 if ( hold ) {; 1587 fTsumwy = hold->fTsumwy;; 1588 fTsumwy2 = hold->fTsumwy2;; 1589 ; 1590 delete hold;; 1591 }; 1592}; 1593 ; 1594////////////////////////////////////////////////////////////////////////////////; 1595/// Reset contents of a Profile histogram.; 1596 ; 1597void TProfile::Reset(Option_t *option); 1598{; 1599 TH1D::Reset(option);; 1600 fBinEntries.Reset();; 1601 fBinSumw2.Reset();; 1602 TString opt = option;; 1603 opt.ToUpper();; 1604 if (opt.Contains(""ICE"") && !opt.Contains(""S"")) return;; 1605 fTsumwy = 0;; 1606 fTsumwy2 = 0;; 1607}; 1608 ; 1609////////////////////////////////////////////////////////////////////////////////; 1610/// Save primitive as a C++ statement(s) on output stream out.; 1611 ; 1612void TProfile::SavePrimitive(std::ostream &out, Option_t *option /*= """"*/); 1613{; 1614 //Note the following restrictions in the code generated:; 1615 // - variable bin size not implemented; 1616 // - SetErrorOption not implemented; 1617 ; 1618 Bool_t nonEqiX = kFALSE;; 1619 Int_t i;; 1620 // Check if the profile has equidistant X bins or not. If not, we; 1621 // create an array holding the bins.; 1622 if (GetXaxis()->GetXbins()->fN && GetXaxis()->GetXbins()->fArray) {; 1623 nonEqiX = kTRUE;; 1624 out << "" Double_t xAxis["" << GetXaxis()->GetXbins()->fN; 1625 << ""] = {"";; 1626 for (i = 0; i < GetXaxis()->GetXbins()->fN; i++) {; 1627 if (i != 0) out << "", "";; 1628 out << GetXaxis()->GetXbins()->fArray[i];; 1629 }; 1630 out << ""}; "" << std::endl;; 1631 }; 1632 ; 1633 char quote = '""';; 1634 out<<"" ""<<std::endl;; 1635 out<<"" ""<<ClassName()<<"" *"";; 1636 ; 1637 //histogram pointer has by default the histogram name.; 1638 //however, in case histogram has no directory, it is safer to add a incremental suffix; 1639 static Int_t hcounter = 0;; 1640 TString histName = gInterpreter->MapCppName(GetName());; 1641 if (!fDirectory) {; 1642 hcounter++;; 1643 histNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:59294,variab,variable,59294,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['variab'],['variable']
Modifiability,"xis.h:62; TAxis::kCenterLabels@ kCenterLabelsBit 13 is used by TObject.Definition TAxis.h:67; TAxis::kLabelsVert@ kLabelsVertDefinition TAxis.h:72; TAxis::fTimeDisplayBool_t fTimeDisplayOn/off displaying time values instead of numerics.Definition TAxis.h:41; TAxis::GetNoExponentBool_t GetNoExponent() constDefinition TAxis.h:127; TAxis::fModLabsTList * fModLabsList of modified labels.Definition TAxis.h:45; TAxis::GetBinLabelconst char * GetBinLabel(Int_t bin) constReturn label for bin.Definition TAxis.cxx:440; TAxis::FindBinvirtual Int_t FindBin(Double_t x)Find bin number corresponding to abscissa x.Definition TAxis.cxx:293; TAxis::GetBinLowEdgevirtual Double_t GetBinLowEdge(Int_t bin) constReturn low edge of bin.Definition TAxis.cxx:518; TAxis::fNbinsInt_t fNbinsNumber of bins.Definition TAxis.h:34; TAxis::kAlphanumeric@ kAlphanumericAxis is alphanumeric.Definition TAxis.h:49; TAxis::kNotAlpha@ kNotAlphaAxis is forced to be not alphanumeric.Definition TAxis.h:51; TAxis::kCanExtend@ kCanExtendAxis can be extended.Definition TAxis.h:50; TAxis::SetTimeDisplayvirtual void SetTimeDisplay(Int_t value)Definition TAxis.h:171; TAxis::fXminDouble_t fXminLow edge of first bin.Definition TAxis.h:35; TAxis::Setvirtual void Set(Int_t nbins, Double_t xmin, Double_t xmax)Initialize axis with fix bins.Definition TAxis.cxx:794; TAxis::HasBinWithoutLabelBool_t HasBinWithoutLabel() constThis helper function checks if there is a bin without a label if all bins have labels,...Definition TAxis.cxx:646; TAxis::RotateTitlevoid RotateTitle(Bool_t rotate=kTRUE)Rotate title by 180 degrees.Definition TAxis.h:203; TAxis::FindModLabTAxisModLab * FindModLab(Int_t num, Double_t v=0., Double_t eps=0.) constSearch for axis modifier by index or value.Definition TAxis.cxx:922; TAxis::CenterTitlevoid CenterTitle(Bool_t center=kTRUE)Center axis title.Definition TAxis.h:194; TAxis::FindFixBinvirtual Int_t FindFixBin(Double_t x) constFind bin number corresponding to abscissa x.Definition TAxis.cxx:419; TAx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8h_source.html:19344,extend,extended,19344,doc/master/TAxis_8h_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8h_source.html,1,['extend'],['extended']
Modifiability,"xist = ROOT.gSystem.AccessPathName(inputFileName); ; # if file does not exists create it; if fileDoesNotExist:; MakeTimeData(nTotEvts, ntime, ninput); ; ; inputFile = TFile.Open(inputFileName); if inputFile is None:; raise ROOT.Error(""Error opening input file %s - exit"", inputFileName.Data()); ; ; print(""--- RNNClassification : Using input file: {}"".format(inputFile.GetName())); ; # Create a ROOT output file where TMVA will store ntuples, histograms, etc.; outfileName = ""data_RNN_"" + archString + "".root""; outputFile = None; ; ; if writeOutputFile:; outputFile = TFile.Open(outfileName, ""RECREATE""); ; ; ## Declare Factory; ; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; ; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to; # pass; ; # - The first argument is the base of the name of all the output; # weightfiles in the directory weight/ that will be created with the; # method parameters; ; # - The second argument is the output file for the training results; #; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in; # the option string; ; ; # // Creating the factory object; factory = TMVA.Factory(; ""TMVAClassification"",; outputFile,; V=False,; Silent=False,; Color=True,; DrawProgressBar=True,; Transformations=None,; Correlations=False,; AnalysisType=""Classification"",; ModelPersistence=True,; ); dataloader = TMVA.DataLoader(""dataset""); ; signalTree = inputFile.Get(""sgn""); background = inputFile.Get(""bkg""); ; nvar = ninput * ntime; ; ## add variables - use new AddVariablesArray function; for i in range(ntime):; dataloader.AddVariablesArray(""vars_time"" + str(i), ninput); ; ; dataloader.AddSignalTree(signalTree, 1.0); dataloader.AddBackgroundTree(background, 1.0); ; # check given input; datainfo = dat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:54709,config,configuration,54709,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['config'],['configuration']
Modifiability,"xisting TProfile2D histogram. Making a 5D plot using GL; If option GL5D is specified together with 5 variables, a 5D plot is drawn using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot; In case of a 2-Dim or more expression with the option=para, one can generate a parallel coordinates plot. With that option, the number of dimensions is arbitrary. Giving more than 4 variables without the option=para or option=candle or option=goff will produce an error. Making a candle sticks chart; In case of a 2-Dim or more expression with the option=candle, one can generate a candle sticks chart. With that option, the number of dimensions is arbitrary. Giving more than 4 variables without the option=para or option=candle or option=goff will produce an error. Normalizing the output histogram to 1; When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; TTree::Draw can be used to fill a TEventList object (list of entry numbers) instead of histogramming one variable. If varexp0 has the form >>elist , a TEventList object named ""elist"" is created in the current directory. elist will contain the list of entry numbers satisfying the current selection. If option ""entrylist"" is used, a TEntryList object is created If the selection contains arrays, vectors or any container class and option ""entrylistarray"" is used, a TEntryListArray object is created containing also the subentries satisfying the selection, i.e. the indices of the branches which hold containers classes. Example: tree.Draw("">>yplus"",""y>0""); will create a TEventList object named ""yplus"" in the current directory. In an interactive session, one can type (after TTree::Draw) yplus.Print(""all""); to print the list of entry numbers in the list. tree.Draw("">>yplus"", ""y>0"", ""entrylist""); will create a TEntryList object names ""yplus"" in the current directory tree.Draw("">>yplus"", ""y>0"", ""entrylistarray""); w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:130131,variab,variable,130131,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['variab'],['variable']
Modifiability,"xisting definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:. gPluginMgr->AddHandler(""TSQLServer"", ""^sapdb:"",; ""TSapDBServer"", ""SapDB"",; ""TSapDBServer(const char*,const char*, const char*)"");. A list of currently defined handlers can be printed using:. gPluginMgr->Print(); // use option=""a"" to see ctors. The use of the plugin library manager removes all textual references; to hard-coded class and library names and the resulting dependencies; in the base classes. The plugin manager is used to extend a.o.; TFile, TSQLServer, TGrid, etc. functionality. Function Members (Methods); public:. TPluginManager(); virtual~TPluginManager(); voidTObject::AbstractMethod(const char* method) const; voidAddHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor = 0, const char* origin = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginManager.html:3223,plugin,plugin,3223,root/html528/TPluginManager.html,https://root.cern,https://root.cern/root/html528/TPluginManager.html,4,['plugin'],['plugin']
Modifiability,"xisting definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:. gPluginMgr->AddHandler(""TSQLServer"", ""^sapdb:"",; ""TSapDBServer"", ""SapDB"",; ""TSapDBServer(const char*,const char*, const char*)"");. A list of currently defined handlers can be printed using:. gPluginMgr->Print(); // use option=""a"" to see ctors. The use of the plugin library manager removes all textual references; to hard-coded class and library names and the resulting dependencies; in the base classes. The plugin manager is used to extend a.o.; TFile, TSQLServer, TGrid, etc. functionality. Function Members (Methods); public:. virtual~TPluginManager(); voidTObject::AbstractMethod(const char* method) const; voidAddHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor = 0, const char* origin = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPluginManager.html:3223,plugin,plugin,3223,root/html602/TPluginManager.html,https://root.cern,https://root.cern/root/html602/TPluginManager.html,2,['plugin'],['plugin']
Modifiability,"xisting definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:. gPluginMgr->AddHandler(""TSQLServer"", ""^sapdb:"",; ""TSapDBServer"", ""SapDB"",; ""TSapDBServer(const char*,const char*, const char*)"");. A list of currently defined handlers can be printed using:. gPluginMgr->Print(); // use option=""a"" to see ctors. The use of the plugin library manager removes all textual references; to hard-coded class and library names and the resulting dependencies; in the base classes. The plugin manager is used to extend a.o.; TFile, TSQLServer, TGrid, etc. functionality. Function Members (Methods); public:. voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Int_tCheckPlugin() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginHandler.html:3223,plugin,plugin,3223,root/html528/TPluginHandler.html,https://root.cern,https://root.cern/root/html528/TPluginHandler.html,6,['plugin'],['plugin']
Modifiability,"xisting variable not implemented"");; 112 MATH_UNUSED(ivar);; 113 MATH_UNUSED(pars);; 114 return false;; 115}; 116/** return covariance matrices element for variables ivar,jvar; 117 if the variable is fixed the return value is zero; 118 The ordering of the variables is the same as in the parameter and errors vectors; 119*/; 120double Minimizer::CovMatrix(unsigned int ivar, unsigned int jvar) const; 121{; 122 MATH_UNUSED(ivar);; 123 MATH_UNUSED(jvar);; 124 return 0;; 125}; 126 ; 127/**; 128 Fill the passed array with the covariance matrix elements; 129 if the variable is fixed or const the value is zero.; 130 The array will be filled as cov[i *ndim + j]; 131 The ordering of the variables is the same as in errors and parameter value.; 132 This is different from the direct interface of Minuit2 or TMinuit where the; 133 values were obtained only to variable parameters; 134*/; 135bool Minimizer::GetCovMatrix(double *covMat) const; 136{; 137 MATH_UNUSED(covMat);; 138 return false;; 139}; 140 ; 141/**; 142 Fill the passed array with the Hessian matrix elements; 143 The Hessian matrix is the matrix of the second derivatives; 144 and is the inverse of the covariance matrix; 145 If the variable is fixed or const the values for that variables are zero.; 146 The array will be filled as h[i *ndim + j]; 147*/; 148bool Minimizer::GetHessianMatrix(double *hMat) const; 149{; 150 MATH_UNUSED(hMat);; 151 return false;; 152}; 153 ; 154/**; 155 return global correlation coefficient for variable i; 156 This is a number between zero and one which gives; 157 the correlation between the i-th parameter and that linear combination of all; 158 other parameters which is most strongly correlated with i.; 159 Minimizer must overload method if implemented; 160 */; 161double Minimizer::GlobalCC(unsigned int ivar) const; 162{; 163 MATH_UNUSED(ivar);; 164 return -1;; 165}; 166 ; 167/**; 168 minos error for variable i, return false if Minos failed or not supported; 169 and the lower and upper errors ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:4951,variab,variable,4951,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,3,['variab'],"['variable', 'variables']"
Modifiability,"xiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Private Attributes; ROOT::Math::GSLMultiMinimizer * fGSLMultiMin;  ; double fLSTolerance;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::BasicMinimizer; bool CheckDimension () const;  ; bool CheckObjFunction () const;  ; MinimTransformFunction * CreateTransformation (std::vector< double > &startValues, const ROOT::Math::IMultiGradFunction *func=nullptr);  ; void SetFinalValues (const double *x, const MinimTransformFunction *func=nullptr);  ; void SetMinValue (double val);  ;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . #include <Math/GSLMinimizer.h>. Inheritance diagram for ROOT::Math::GSLMinimizer:. This browser is not able to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:10647,variab,variables,10647,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,1,['variab'],['variables']
Modifiability,"xiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Protected Attributes; std::string fMethod;  minimizer method to be used, must be of a type listed in R optim or optimx descriptions ;  ;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . Private Attributes; TMatrixD fCovMatrix;  covariant matrix ;  ; std::vector< double > fErrors;  vector of parameter errors ;  ; TMatrixD fHessMatrix;  Hessian matrix. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::BasicMinimizer; bool CheckDimension () const;  ; bool CheckObjFunction () const;  ; MinimTransformFunction * CreateTransformation (std::vector< double > &startValues, const ROOT::Math::IMultiGradFunction *func=nullptr);  ; void SetFinalV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:10544,variab,variables,10544,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,1,['variab'],['variables']
Modifiability,"xiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Protected Member Functions; bool CheckDimension () const;  ; bool CheckObjFunction () const;  ; MinimTransformFunction * CreateTransformation (std::vector< double > &startValues, const ROOT::Math::IMultiGradFunction *func=nullptr);  ; void SetFinalValues (const double *x, const MinimTransformFunction *func=nullptr);  ; void SetMinValue (double val);  . Private Attributes; std::map< unsigned int, std::pair< double, double > > fBounds;  map specifying the bound using as key the parameter index ;  ; unsigned int fDim;  ; double fMinVal;  ; std::vector< std::string > fNames;  ; const ROOT::Math::IMultiGenFunction * fObjFunc;  ; std::vector< double > fSteps;  ; std::vector< double > fValues;  ; std::vector< ROOT::Math::EMinimVariableType > fVarTypes;  vector specifying the type of variables ;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:10285,variab,variables,10285,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,1,['variab'],['variables']
Modifiability,"xiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Protected Member Functions; bool ExamineMinimum (const ROOT::Minuit2::FunctionMinimum &min);  examine the minimum result ;  ; virtual const ROOT::Minuit2::FCNBase * GetFCN () const;  ; virtual const ROOT::Minuit2::ModularFunctionMinimizer * GetMinimizer () const;  ; int RunMinosError (unsigned int i, double &errLow, double &errUp, int runopt);  ; bool SetCovariance (std::span< const double > cov, unsigned int nrow) override;  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n) override;  set initial second derivatives ;  ; virtual void SetMinimizer (ROOT::Minuit2::ModularFunctionMinimizer *m);  ; void SetMinimizerType (ROOT::Minuit2::EMinimizerType type);  . Private Attributes; unsigned int fDim;  ; std::vector< double > fErrors;  ; ROOT::Minuit2::ModularFunctionMinimizer * fMinimizer;  ; ROOT::Minuit2::FunctionMinimum * fMinimum;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:10731,variab,variables,10731,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variables']
Modifiability,"xiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Protected Member Functions; template<class Func > ; bool DoMinimize (const Func &f);  Internal method to perform minimization template on the type of method function. ;  ;  Protected Member Functions inherited from ROOT::Math::BasicMinimizer; bool CheckDimension () const;  ; bool CheckObjFunction () const;  ; MinimTransformFunction * CreateTransformation (std::vector< double > &startValues, const ROOT::Math::IMultiGradFunction *func=nullptr);  ; void SetFinalValues (const double *x, const MinimTransformFunction *func=nullptr);  ; void SetMinValue (double val);  . Private Attributes; std::vector< double > fCovMatrix;  ; double fEdm;  ; std::vector< double > fErrors;  ; ROOT::Math::GSLMultiFit * fGSLMultiFit;  ; double fLSTolerance;  ; unsigned int fNCalls;  ; unsigned int fNFree;  ; bool fUseGradFunction = false;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Mat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html:10045,variab,variables,10045,doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,1,['variab'],['variables']
Modifiability,"xiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Protected Member Functions; void DoSetMinimOptions (const GSLSimAnParams &params);  Set the Minimizer options from the simulated annealing parameters. ;  ; void DoSetSimAnParameters (const MinimizerOptions &opt);  set minimizer option parameters from stored ROOT::Math::MinimizerOptions (fOpt) ;  ;  Protected Member Functions inherited from ROOT::Math::BasicMinimizer; bool CheckDimension () const;  ; bool CheckObjFunction () const;  ; MinimTransformFunction * CreateTransformation (std::vector< double > &startValues, const ROOT::Math::IMultiGradFunction *func=nullptr);  ; void SetFinalValues (const double *x, const MinimTransformFunction *func=nullptr);  ; void SetMinValue (double val);  . Private Attributes; ROOT::Math::GSLSimAnnealing fSolver;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html:11586,variab,variables,11586,doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,1,['variab'],['variables']
Modifiability,"xmax) override;  Initialize the upper and lower bounds to draw the function. ;  ; void SetRange (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax) override;  Initialize the upper and lower bounds to draw the function-. ;  ; void SetRange (Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax) override;  Initialize the upper and lower bounds to draw the function. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TF3. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Variance3X (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon=0.000001);  ; virtual Double_t Variance3Y (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon=0.000001);  ; virtual Double_t Variance3Z (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon=0.000001);  ;  Public Member Functions inherited from TF2;  TF2 ();  TF2 default constructor. ;  ;  TF2 (const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Option_t *opt=nullptr);  F2 constructor using a formula definition. ;  ; template<class PtrObj , typename MemFn > ;  TF2 (const char *name, const PtrObj &p, MemFn memFn, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Int_t npar, const char *, const char *);  Backward compatible ctor. ;  ; template<class PtrObj , typename MemFn > ;  TF2 (const char *name, const PtrObj &p, MemFn memFn, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Int_t npar, Int_t ndim=2);  Template constructors from a pointer to any C++ class of type PtrObj with a specific member function of type MemFn. ;  ;  TF2 (const char *name, Double_t(*fcn)(const Double_t *, const Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Int_t npar=0, Int_t ndim=2);  F2 constructor using a pointer to a compiled function",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF3.html:8902,inherit,inherited,8902,doc/master/classTF3.html,https://root.cern,https://root.cern/doc/master/classTF3.html,1,['inherit'],['inherited']
Modifiability,"xmax); Redefine x axis parameters. The X axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins); Redefine x axis parameters with variable bin sizes. The X axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1. void SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); Redefine x and y axis parameters. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); Redefine x and y axis parameters with variable bin sizes. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1. void SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); Redefine x, y and z axis parameters. The X, Y and Z axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); Redefine x, y and z axis parameters with variable bin sizes. The X, Y and Z axis parameters are modified.; The bins content array is re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:125130,variab,variable,125130,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,2,['variab'],['variable']
Modifiability,"xmaximum (signal and background); Double_tfXminminimum (signal and background); static TMVA::MethodBase*fgThisBasethis pointer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~MethodBase( void ); destructor. void SetupMethod(); setup of methods. void ProcessSetup(); process all options; the ""CheckForUnusedOptions"" is done in an independent call, since it may be overridden by derived class; (sometimes, eg, fitters are used which can only be implemented during training phase). void CheckSetup(); check may be overridden by derived class; (sometimes, eg, fitters are used which can only be implemented during training phase). void InitBase(); default initialization called by all constructors. void DeclareBaseOptions(); define the options (their key words) that can be set in the option string; here the options valid for ALL MVA methods are declared.; know options: VariableTransform=None,Decorrelated,PCA to use transformed variables; instead of the original ones; VariableTransformType=Signal,Background which decorrelation matrix to use; in the method. Only the Likelihood; Method can make proper use of independent; transformations of signal and background; fNbinsMVAPdf = 50 Number of bins used to create a PDF of MVA; fNsmoothMVAPdf = 2 Number of times a histogram is smoothed before creating the PDF; fHasMVAPdfs create PDFs for the MVA outputs; V for Verbose output (!V) for non verbos; H for Help message. void ProcessBaseOptions(); the option string is decoded, for availabel options see ""DeclareOptions"". void CreateVariableTransforms(const TString& trafoDefinition). void DeclareCompatibilityOptions(). std::map<TString,Double_t> OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); call the Optimzier with the set of paremeters and ranges that; are meant to be tuned. void SetTuneParameters(map<TString,Double_t> tuneParameters); set the tuning parameters accoding to the argument; This is just a dummy .. h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:20139,variab,variables,20139,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,1,['variab'],['variables']
Modifiability,"xmaximum (signal and background); Double_tfXminminimum (signal and background); static TMVA::MethodBase*fgThisBasethis pointer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~MethodBase( void ); destructor. void SetupMethod(); setup of methods. void ProcessSetup(); process all options; the ""CheckForUnusedOptions"" is done in an independent call, since it may be overridden by derived class; (sometimes, eg, fitters are used which can only be implemented during training phase). void CheckSetup(); check may be overridden by derived class; (sometimes, eg, fitters are used which can only be implemented during training phase). void InitBase(); default initialization called by all constructors. void DeclareBaseOptions(); define the options (their key words) that can be set in the option string; here the options valid for ALL MVA methods are declared.; know options: VariableTransform=None,Decorrelated,PCA to use transformed variables; instead of the original ones; VariableTransformType=Signal,Background which decorrelation matrix to use; in the method. Only the Likelihood; Method can make proper use of independent; transformations of signal and background; fNbinsMVAPdf = 50 Number of bins used to create a PDF of MVA; fNsmoothMVAPdf = 2 Number of times a histogram is smoothed before creating the PDF; fHasMVAPdfs create PDFs for the MVA outputs; V for Verbose output (!V) for non verbos; H for Help message. void ProcessBaseOptions(); the option string is decoded, for availabel options see ""DeclareOptions"". void CreateVariableTransforms(const TString& trafoDefinition, TMVA::DataSetInfo& dataInfo, TMVA::TransformationHandler& transformationHandler, TMVA::MsgLogger& log); create variable transformations. void DeclareCompatibilityOptions(); options that are used ONLY for the READER to ensure backward compatibility; they are hence without any effect (the reader is only reading the training; options that HAD been used at the training of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:21021,variab,variables,21021,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,1,['variab'],['variables']
Modifiability,"xpect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooFitResult > fitTo (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Fit PDF to given dataset. ;  ; virtual RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const;  Interface function to create a generator context from a p.d.f. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Generate a new dataset containing the specified variables with events sampled from our distribution. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, const RooDataSet &prototype, Int_t nEvents=0, bool verbose=false, bool randProtoOrder=false, bool resampleProto=false) const;  Generate a new dataset using a prototype dataset as a model, with values of the variables in whatVars sampled from our distribution. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, double nEvents=0, bool verbose=false, bool autoBinned=true, const char *binnedTag="""", bool expectedData=false, bool extended=false) const;  Generate a new dataset containing the specified variables with events sampled from our distribution. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, Int_t nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={});  See RooAbsPdf::generate(const RooArgSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&) ;  ; RooFit::OwningPtr< RooDataSet > generate (GenSpec &) const;  Generate according to GenSpec obtained from prepareMultiGen(). ;  ; virtual RooFit::Ownin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:6648,variab,variables,6648,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,9,['variab'],['variables']
Modifiability,"xport LD_LIBRARY_PATH=$ROOTSYS/lib:$PYTHONDIR/lib:$LD_LIBRARY_PATH; export PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH; For Windows:; set PATH=%ROOTSYS%/bin;%PYTHONDIR%/bin;%PATH%; set PYTHONPATH=%ROOTSYS%/bin;%PYTHONPATH%; where $ROOTSYS should be set to /afs/cern.ch/sw/root/<version>/<platform>, and PYTHONDIR to /afs/cern.ch/sw/lcg/external/Python/2.3.4/<platform> with <version> and <platform> as appropriate. Note that the latest version of Python is 2.4.1.; 19.1.4.2 Building from Source; The standard installation instructions for building ROOT from source apply, with the addition that the build of PyROOT needs to be enabled at the configuration step. First, follow the instructions for obtaining and unpacking the source, and setting up the build environment.; Then, use the following command to configure the build process (of course, feel free to add any additional flags you may need):; $ ./configure <arch> [--with-python-incdir=<dir>][--with-python-libdir=>dir>]; For details on <arch> see the official build pages, the Python include directory should point to the directory that contains Python.h and the library directory should point to the directory containing libpythonx.y.so, where ‘x’ and ‘y’ are the major and minor version number, respectively. If you do not specify include and library directories explicitly, the configuration process will try the PYTHONDIR environment variable or, alternatively, the standard locations.; A recent distribution of Python is required: version 2.4.3 is preferred, but the older 2.2.x and 2.3.x versions suffice and are supported as well. Versions older than 2.2 are not supported and will not work. Note that one problem with 2.2 is that the shared library of the Python interpreter core is not build by default and the ‘–enable-shared’ flag should thus be used when building Python from source. If the Python interpreter that is installed on your system is too old, please obtain a new version from http://www.python.org.; Once configured, you cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1048084,config,configure,1048084,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['config'],['configure']
Modifiability,"xpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCanvas; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TCanvas * MakeDefCanvas ();  Static function to build a default canvas. ;  ; static Bool_t SaveAll (const std::vector< TPad * > &={}, const char *filename="""", Option_t *option="""");  Save provided pads/canvases into the image file(s) Filename can include printf argument for image number - like ""image%03d.png"". ;  ; static void SetFolder (Bool_t isfolder=kTRUE);  If isfolder=kTRUE, the canvas can be browsed like a folder by default a canvas is not browsable. ;  ; static Bool_t SupportAlpha ();  Static function returning ""true"" if transparency is supported. ;  ;  Static Public Member Functions inherited from TPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDialogCanvas.html:47632,inherit,inherited,47632,doc/master/classTDialogCanvas.html,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html,1,['inherit'],['inherited']
Modifiability,"xpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGGCPool (const TGGCPool &gp);  ; TGGCPool & operator= (const TGGCPool &gp);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void ForceFreeGC (const TGGC *gc);  Force remove graphics context from list. Is only called via ~TGGC(). ;  ; Int_t MatchGC (const TGGC *gc, GCValues_t *values);  Try to find matching graphics context. ;  ; void UpdateGC (TGGC *gc, GCValues_t *values);  Update graphics context with the values spcified in values->fMask. ;  . Private Attributes; THashTable * fList;  . Friends; class TGGC;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGCPool.html:10360,inherit,inherited,10360,doc/master/classTGGCPool.html,https://root.cern,https://root.cern/doc/master/classTGGCPool.html,2,['inherit'],['inherited']
Modifiability,"xpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TList * fColumns;  ; TString fCreateTime;  SQL tables engine name. ;  ; TString fEngine;  list of TSQLColumnInfo objects, describing each table column ;  ; TString fUpdateTime;  table creation time ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLTableInfo.html:10642,inherit,inherited,10642,doc/master/classTSQLTableInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLTableInfo.html,1,['inherit'],['inherited']
Modifiability,"xpressed in the base specified (range=2-36), i.e. ; {0,1} for base 2, {0-9,a-f,A-F} for base 16, {0-9,a-z,A-Z} for base 36. Returns false in case string length is 0 or string contains other characters. ; Definition at line 1957 of file TString.cxx. ◆ IsLong(). Bool_t TString::IsLong ; (; ); const. inlineprivate . Definition at line 238 of file TString.h. ◆ IsNull(). Bool_t TString::IsNull ; (; ); const. inline . Definition at line 414 of file TString.h. ◆ IsOct(). Bool_t TString::IsOct ; (; ); const. Returns true if all characters in string are octal digits (0-7). ; Returns false in case string length is 0 or string contains other characters. ; Definition at line 1924 of file TString.cxx. ◆ IsWhitespace(). Bool_t TString::IsWhitespace ; (; ); const. inline . Definition at line 415 of file TString.h. ◆ Itoa(). TString TString::Itoa ; (; Int_t ; value, . Int_t ; base . ). static . Converts an Int_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). Usage: the following statement produce the same output, namely ""1111"" std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; TString::Itoastatic TString Itoa(Int_t value, Int_t base)Converts an Int_t to a TString with respect to the base specified (2-36).Definition TString.cxx:2092; In case of error returns the ""!"" string. ; Definition at line 2092 of file TString.cxx. ◆ Last(). Ssiz_t TString::Last ; (; char ; c); const. Find last occurrence of a character c. ; Definition at line 931 of file TString.cxx. ◆ Length(). Ssiz_t TString::Length ; (; ); const. inline . Definition at line 417 of file TString.h. ◆ LLtoa(). TString TString::LLtoa ; (; Long64_t ; value, . Int_t ; base . ). static . Converts a Long64_t to a TString with respect to the base specified (2-36). ; Thus it is an enhanced vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTString.html:41387,enhance,enhanced,41387,doc/v632/classTString.html,https://root.cern,https://root.cern/doc/v632/classTString.html,4,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"xt *)&buf)->ReadBaseClass(x, (TStreamerBase *)config->fCompInfo->fElem);; 312 return 0;; 313 }; 314 ; 315 INLINE_TEMPLATE_ARGS Int_t ReadTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config); 316 {; 317 void *x = (void *)(((char *)addr) + config->fOffset);; 318 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 319 ; 320 UInt_t start, count;; 321 /* Version_t v = */ buf.ReadVersion(&start, &count, config->fCompInfo->fClass);; 322 (*pstreamer)(buf, x, config->fCompInfo->fLength);; 323 buf.CheckByteCount(start, count, config->fCompInfo->fElem->GetFullName());; 324 return 0;; 325 }; 326 ; 327 INLINE_TEMPLATE_ARGS Int_t ReadTextTObjectBase(TBuffer &buf, void *addr, const TConfiguration *config); 328 {; 329 // action required to call custom code for TObject as base class; 330 void *x = (void *)(((char *)addr) + config->fOffset);; 331 buf.ReadClassBuffer(TObject::Class(), x, TObject::Class());; 332 return 0;; 333 }; 334 ; 335 INLINE_TEMPLATE_ARGS Int_t ReadTextTNamed(TBuffer &buf, void *addr, const TConfiguration *config); 336 {; 337 void *x = (void *)(((char *)addr) + config->fOffset);; 338 buf.StreamObject(x, TNamed::Class(), TNamed::Class());; 339 return 0;; 340 }; 341 ; 342 /** Direct copy of code from TStreamerInfo::WriteBufferAux,; 343 * potentially can be used later for non-text streaming */; 344 template<bool kIsTextT>; 345 INLINE_TEMPLATE_ARGS Int_t WriteSTLp(TBuffer &buf, void *addr, const TConfiguration *config); 346 {; 347 TClass *cl = config->fCompInfo->fClass;; 348 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 349 TVirtualCollectionProxy *proxy = cl->GetCollectionProxy();; 350 TClass* vClass = proxy ? proxy->GetValueClass() : 0;; 351 UInt_t eoffset = 0; // extra parameter of TStreamerInfo::WriteBufferAux, 0 for all kind of objects writing; 352 UInt_t ioffset = eoffset + config->fOffset;; 353 ; 354 if (!buf.TestBit(TBuffer::kCannotHandleMemberWiseStreaming); 355 && proxy && vClass; 356 && config->fInfo->GetStreamMemberWis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:12729,config,config,12729,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"xt alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPDF.html:21692,inherit,inherited,21692,doc/master/classTPDF.html,https://root.cern,https://root.cern/doc/master/classTPDF.html,12,['inherit'],['inherited']
Modifiability,"xt entries with RGB values of color c. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGTextBuffer * fAlb;  RGB/HLS associated buffers. ;  ; TGTextEntry * fAle;  RGB/HLS text entries. ;  ; TGTextBuffer * fBtb;  ; TGTextEntry * fBte;  ; TGLabel * fColorInfo;  color info ;  ; TGColorPick * fColors;  color pick widget ;  ; TColorWheel * fColorWheel;  color wheel ;  ; TGColorPalette * fCpalette;  color palette ;  ; Pixel_t fCurrentColor;  currently selected color ;  ; TRootEmbeddedCanvas * fEcanvas;  embedded canvas holding the color wheel ;  ; TGTextBuffer * fGtb;  ; TGTextEntry * fGte;  ; TGTextBuffer * fHtb;  ; TGTextEntry * fHte;  ; Pixel_t fInitColor;  initially set color ;  ; TGTextBuffer * f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorDialog.html:30301,inherit,inherited,30301,doc/master/classTGColorDialog.html,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html,3,['inherit'],['inherited']
Modifiability,"xt files will first be run through; THtml::Convert().; You can see an example here;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.; VI. Auxiliary files: style sheet, JavaScript, help page; The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running MakeAll();; they can be generated on; demand by calling CreateAuxiliaryFiles().; VII. Class Charts; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged ontop of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies.; These graphs are generated using the Graphviz; package. You can install it from http://www.graphviz.org.; You can either put it into your $PATH, or tell THtml where to find it by calling; SetDotDir().; VIII. Configuration variables; Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; TEnv. Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (defualt: ) - link to search by replacing ""%s"" with user input; Root.Html.ViewCVS (default: ) - URL of ViewCVS base; Root.Html.XWho (default: http://consult.cern.ch/xwho/peopl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml.html:15782,variab,variables,15782,root/html528/THtml.html,https://root.cern,https://root.cern/root/html528/THtml.html,30,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"xt font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attrib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:45259,inherit,inherited,45259,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,6,['inherit'],['inherited']
Modifiability,"xt(""You can select one of back box planes, press middle mouse button and move cursor-"");; hdemo->AddText(""this will create \""slice\"" (TF does not support yet)."");; hdemo->AddText(""After the slice was created, you can project it on a back box"");; hdemo->AddText("" ---press key 'p' (now implemented only for surf options )."");; hdemo->AddText(""Left double click removes all slices/projections."");; ; hdemo->Draw();; ; }; kBlue@ kBlueDefinition Rtypes.h:66; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TCanvasThe Canvas class.Definition TCanvas.h:23; TControlBarA Control Bar is a fully user configurable tool which provides fast access to frequently used operati...Definition TControlBar.h:26; TControlBar::Showvoid Show()Show control bar.Definition TControlBar.cxx:317; TControlBar::AddButtonvoid AddButton(TControlBarButton *button)Add button.Definition TControlBar.cxx:141; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; TPaveLabel::Drawvoid Draw(Option_t *option="""") overrideDraw this pavelabel with its current attributes.Definition TPaveLabel.cxx:88; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavetext with its current attributes.Definition TPaveText.cxx:242; AuthorTimur Pocheptsov ; Definition in file gldemos.C. tutorialsglgldemos.C. ROOT master - Reference Guide ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gldemos_8C.html:3230,config,configurable,3230,doc/master/gldemos_8C.html,https://root.cern,https://root.cern/doc/master/gldemos_8C.html,1,['config'],['configurable']
Modifiability,"xt;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButtonGroup.html:34311,inherit,inherited,34311,doc/master/classTGButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html,1,['inherit'],['inherited']
Modifiability,"xt;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGroupFrame.html:29391,inherit,inherited,29391,doc/master/classTGGroupFrame.html,https://root.cern,https://root.cern/doc/master/classTGGroupFrame.html,1,['inherit'],['inherited']
Modifiability,"xt;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHButtonGroup.html:34927,inherit,inherited,34927,doc/master/classTGHButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGHButtonGroup.html,2,['inherit'],['inherited']
Modifiability,"xtAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTText.html:17002,inherit,inherited,17002,doc/master/classTText.html,https://root.cern,https://root.cern/doc/master/classTText.html,2,['inherit'],['inherited']
Modifiability,"xtCenterX|kTextCenterY);  Create a message dialog box with the following parameters:. ;  ;  TGMsgBox (const TGWindow *p=nullptr, const TGWindow *main=nullptr, const char *title=nullptr, const char *msg=nullptr, const TGPicture *icon=nullptr, Int_t buttons=kMBDismiss, Int_t *ret_code=nullptr, UInt_t options=kVerticalFrame, Int_t text_align=kTextCenterX|kTextCenterY);  Create a message dialog box. ;  ;  ~TGMsgBox () override;  Destroy message dialog box. ;  ; void CloseWindow () override;  Close dialog box. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle enter and escape keys (used as Ok and Cancel for now). ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process message dialog box event. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMsgBox.html:1558,inherit,inherited,1558,doc/master/classTGMsgBox.html,https://root.cern,https://root.cern/doc/master/classTGMsgBox.html,1,['inherit'],['inherited']
Modifiability,"xt_buffer_size > 0)) {; 20398 mg_snprintf(NULL,; 20399 NULL, /* No truncation check for error buffers */; 20400 error->text,; 20401 error->text_buffer_size,; 20402 ""Mandatory option %s missing"",; 20403 config_options[AUTHENTICATION_DOMAIN].name);; 20404 }; 20405 mg_free(new_dom);; 20406 return -4;; 20407 }; 20408 ; 20409 /* Set default value if needed. Take the config value from; 20410 * ctx as a default value. */; 20411 for (i = 0; config_options[i].name != NULL; i++) {; 20412 default_value = ctx->dd.config[i];; 20413 if ((new_dom->config[i] == NULL) && (default_value != NULL)) {; 20414 new_dom->config[i] = mg_strdup_ctx(default_value, ctx);; 20415 }; 20416 }; 20417 ; 20418 new_dom->handlers = NULL;; 20419 new_dom->next = NULL;; 20420 new_dom->nonce_count = 0;; 20421 new_dom->auth_nonce_mask =; 20422 (uint64_t)get_random() ^ ((uint64_t)get_random() << 31);; 20423 ; 20424#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20425 new_dom->shared_lua_websockets = NULL;; 20426#endif; 20427 ; 20428#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20429 if (!init_ssl_ctx(ctx, new_dom)) {; 20430 /* Init SSL failed */; 20431 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20432 mg_snprintf(NULL,; 20433 NULL, /* No truncation check for error buffers */; 20434 error->text,; 20435 error->text_buffer_size,; 20436 ""%s"",; 20437 ""Initializing SSL context failed"");; 20438 }; 20439 mg_free(new_dom);; 20440 return -3;; 20441 }; 20442#endif; 20443 ; 20444 /* Add element to linked list. */; 20445 mg_lock_context(ctx);; 20446 ; 20447 idx = 0;; 20448 dom = &(ctx->dd);; 20449 for (;;) {; 20450 if (!mg_strcasecmp(new_dom->config[AUTHENTICATION_DOMAIN],; 20451 dom->config[AUTHENTICATION_DOMAIN])) {; 20452 /* Domain collision */; 20453 mg_cry_ctx_internal(ctx,; 20454 ""domain %s already in use"",; 20455 new_dom->config[AUTHENTICATION_DOMAIN]);; 20456 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20457 mg_snprintf(NULL,; 20458 NULL, /* No truncation check for error buffers */; 2045",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:610454,config,config,610454,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,3,['config'],['config']
Modifiability,"xt_buffer_size > 0)) {; 20399 mg_snprintf(NULL,; 20400 NULL, /* No truncation check for error buffers */; 20401 error->text,; 20402 error->text_buffer_size,; 20403 ""Mandatory option %s missing"",; 20404 config_options[AUTHENTICATION_DOMAIN].name);; 20405 }; 20406 mg_free(new_dom);; 20407 return -4;; 20408 }; 20409 ; 20410 /* Set default value if needed. Take the config value from; 20411 * ctx as a default value. */; 20412 for (i = 0; config_options[i].name != NULL; i++) {; 20413 default_value = ctx->dd.config[i];; 20414 if ((new_dom->config[i] == NULL) && (default_value != NULL)) {; 20415 new_dom->config[i] = mg_strdup_ctx(default_value, ctx);; 20416 }; 20417 }; 20418 ; 20419 new_dom->handlers = NULL;; 20420 new_dom->next = NULL;; 20421 new_dom->nonce_count = 0;; 20422 new_dom->auth_nonce_mask =; 20423 (uint64_t)get_random() ^ ((uint64_t)get_random() << 31);; 20424 ; 20425#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20426 new_dom->shared_lua_websockets = NULL;; 20427#endif; 20428 ; 20429#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20430 if (!init_ssl_ctx(ctx, new_dom)) {; 20431 /* Init SSL failed */; 20432 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20433 mg_snprintf(NULL,; 20434 NULL, /* No truncation check for error buffers */; 20435 error->text,; 20436 error->text_buffer_size,; 20437 ""%s"",; 20438 ""Initializing SSL context failed"");; 20439 }; 20440 mg_free(new_dom);; 20441 return -3;; 20442 }; 20443#endif; 20444 ; 20445 /* Add element to linked list. */; 20446 mg_lock_context(ctx);; 20447 ; 20448 idx = 0;; 20449 dom = &(ctx->dd);; 20450 for (;;) {; 20451 if (!mg_strcasecmp(new_dom->config[AUTHENTICATION_DOMAIN],; 20452 dom->config[AUTHENTICATION_DOMAIN])) {; 20453 /* Domain collision */; 20454 mg_cry_ctx_internal(ctx,; 20455 ""domain %s already in use"",; 20456 new_dom->config[AUTHENTICATION_DOMAIN]);; 20457 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20458 mg_snprintf(NULL,; 20459 NULL, /* No truncation check for error buffers */; 2046",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:610487,config,config,610487,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,3,['config'],['config']
Modifiability,"xtended = false); boolFitFCN(); boolFitFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); ROOT::Fit::FitterFitter(); ROOT::Fit::FitterFitter(const shared_ptr<ROOT::Fit::FitResult>& result); ROOT::Math::IMultiGenFunction*GetFCN() const; ROOT::Math::Minimizer*GetMinimizer() const; boolIsBinFit() const; boolLeastSquareFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data, bool extended = true); boolLikelihoodFit(const shared_ptr<ROOT::Fit::BinData>& data, bool extended = true); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, bool extended = false); boolLikelihoodFit(const shared_ptr<ROOT::Fit::UnBinData>& data, bool extended = false); boolLinearFit(const ROOT::Fit::BinData& data); boolLinearFit(const shared_ptr<ROOT::Fit::BinData>& data); const ROOT::Fit::FitResult&Result() const; boolSetFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); voidSetFunction(const ROOT::Fit::Fitter::IModelFunction& func, bool useGradient = false); voidSetFunction(const RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__Fitter.html:2391,extend,extended,2391,root/html604/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__Fitter.html,1,['extend'],['extended']
Modifiability,"xtended ? RooRandom::randomGenerator()->Poisson(spec._nGen) : spec._nGen ;; 1351 //Int_t nEvt = spec._extended ? RooRandom::randomGenerator()->Poisson(spec._nGen==0?expectedEvents(spec._whatVars):spec._nGen) : spec._nGen ;; 1352 //Int_t nEvt = spec._nGen == 0 ? RooRandom::randomGenerator()->Poisson(expectedEvents(spec._whatVars)) : spec._nGen;; 1353 ; 1354 double nEvt = spec._nGen == 0 ? expectedEvents(spec._whatVars) : spec._nGen;; 1355 ; 1356 std::unique_ptr<RooDataSet> ret{generate(*spec._genContext,spec._whatVars,spec._protoData, nEvt,false,spec._randProto,spec._resampleProto,; 1357 spec._init,spec._extended)};; 1358 spec._init = true ;; 1359 return RooFit::makeOwningPtr(std::move(ret));; 1360}; 1361 ; 1362 ; 1363 ; 1364 ; 1365 ; 1366////////////////////////////////////////////////////////////////////////////////; 1367/// Generate a new dataset containing the specified variables with; 1368/// events sampled from our distribution.; 1369///; 1370/// \param[in] whatVars Generate a dataset with the variables (and categories) in this set.; 1371/// Any variables of this PDF that are not in `whatVars` will use their; 1372/// current values and be treated as fixed parameters.; 1373/// \param[in] nEvents Generate the specified number of events or else try to use; 1374/// expectedEvents() if nEvents <= 0 (default).; 1375/// \param[in] verbose Show which generator strategies are being used.; 1376/// \param[in] autoBinned If original distribution is binned, return bin centers and randomise weights; 1377/// instead of generating single events.; 1378/// \param[in] binnedTag; 1379/// \param[in] expectedData Call setExpectedData on the genContext.; 1380/// \param[in] extended Randomise number of events generated according to Poisson(nEvents). Only useful; 1381/// if PDF is extended.; 1382/// \return New dataset. Returns zero in case of an error. The caller takes ownership of the returned; 1383/// dataset.; 1384 ; 1385RooFit::OwningPtr<RooDataSet> RooAbsPdf::generate(const RooAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:67432,variab,variables,67432,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"xtended)};; 1437 }; 1438 else {; 1439 coutE(Generation) << ""RooAbsPdf::generate("" << GetName() << "") do not have a valid generator context"" << endl;; 1440 }; 1441 return generated;; 1442}; 1443 ; 1444 ; 1445 ; 1446 ; 1447////////////////////////////////////////////////////////////////////////////////; 1448/// Generate a new dataset using a prototype dataset as a model,; 1449/// with values of the variables in `whatVars` sampled from our distribution.; 1450///; 1451/// \param[in] whatVars Generate for these variables.; 1452/// \param[in] prototype Use this dataset; 1453/// as a prototype: the new dataset will contain the same number of; 1454/// events as the prototype (by default), and any prototype variables not in; 1455/// whatVars will be copied into the new dataset for each generated; 1456/// event and also used to set our PDF parameters. The user can specify a; 1457/// number of events to generate that will override the default. The result is a; 1458/// copy of the prototype dataset with only variables in whatVars; 1459/// randomized. Variables in whatVars that are not in the prototype; 1460/// will be added as new columns to the generated dataset.; 1461/// \param[in] nEvents Number of events to generate. Defaults to 0, which means number; 1462/// of event in prototype dataset.; 1463/// \param[in] verbose Show which generator strategies are being used.; 1464/// \param[in] randProtoOrder Randomise order of retrieval of events from proto dataset.; 1465/// \param[in] resampleProto Resample from the proto dataset.; 1466/// \return The new dataset. Returns zero in case of an error. The caller takes ownership of the; 1467/// returned dataset.; 1468 ; 1469RooFit::OwningPtr<RooDataSet> RooAbsPdf::generate(const RooArgSet &whatVars, const RooDataSet& prototype,; 1470 Int_t nEvents, bool verbose, bool randProtoOrder, bool resampleProto) const; 1471{; 1472 std::unique_ptr<RooAbsGenContext> context{genContext(whatVars,&prototype,nullptr,verbose)};; 1473 if (context) {; 1474",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:71640,variab,variables,71640,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"xts (TSecContext) ;  ; TVirtualPad * fSelectPad;  Currently selected pad. ;  ; TSeqCollection * fSockets;  List of network sockets. ;  ; TSeqCollection * fSpecials;  List of special objects. ;  ; TSeqCollection * fStreamerInfo;  List of active StreamerInfo classes. ;  ; TSeqCollection * fStyles;  List of styles. ;  ; TSeqCollection * fTasks;  List of tasks. ;  ; Int_t fTimer;  Timer flag. ;  ; TCollection * fTypes;  List of data types definition. ;  ; TProcessUUID * fUUIDs;  Pointer to TProcessID managing TUUIDs. ;  ; TString fVersion;  ROOT version (from CMZ VERSQQ) ex 0.05/01. ;  ; Int_t fVersionCode;  ROOT version code as used in RVersion.h. ;  ; Int_t fVersionDate;  Date of ROOT version (ex 951226) ;  ; Int_t fVersionInt;  ROOT version in integer format (501) ;  ; Int_t fVersionTime;  Time of ROOT version (ex 1152) ;  ; TString fWebDisplay;  If not empty it defines where web graphics should be rendered (cef, qt5, browser...) ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TROOT (const TROOT &)=delete;  ; TROOT & operator= (const TROOT &)=delete;  . Private Attributes; Int_t fLineIsProcessing;  To synchronize multi-threads. ;  . Static Private Attributes; static Int_t fgDirLevel = 0;  Indentation level for ls() ;  ; static Bool_t fgRootInit = kFALSE;  Singleton initialization flag. ;  . Friends; class ::ROOT::Internal::TROOTAllocator;  ; TROOT * ROOT::Internal::GetROOT2 ();  ; class TCling;  . Additional Inherited Members;  Static Protected Member Fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:37684,inherit,inherited,37684,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['inherit'],['inherited']
Modifiability,"xx. ◆ Filter() [1/4]. template<typename Proxied , typename DataSource = void> . template<typename F , std::enable_if_t<!std::is_convertible< F, std::string >::value, int > = 0> . RInterface< RDFDetail::RFilter< F, Proxied >, DS_t > ROOT::RDF::RInterface< Proxied, DataSource >::Filter ; (; F ; f, . const ColumnNames_t & ; columns = {}, . std::string_view ; name = """" . ). inline . Append a filter to the call graph. ; Parameters. [in]fFunction, lambda expression, functor class or any other callable object. It must return a bool signalling whether the event has passed the selection (true) or not (false). ; [in]columnsNames of the columns/branches in input to the filter function. ; [in]nameOptional name of this filter. See Report. . Returnsthe filter node of the computation graph.; Append a filter node at the point of the call graph corresponding to the object this method is called on. The callable f should not have side-effects (e.g. modification of an external or static variable) to ensure correct results when implicit multi-threading is active.; RDataFrame only evaluates filters when necessary: if multiple filters are chained one after another, they are executed in order and the first one returning false causes the event to be discarded. Even if multiple actions or transformations depend on the same filter, it is executed once per entry. If its result is requested more than once, the cached result is served. Example usage:; // C++ callable (function, functor class, lambda...) that takes two parameters of the types of ""x"" and ""y""; auto filtered = df.Filter(myCut, {""x"", ""y""});; ; // String: it must contain valid C++ except that column names can be used instead of variable names; auto filtered = df.Filter(""x*y > 0"");; NoteIf the body of the string expression contains an explicit return statement (even if it is in a nested scope), RDataFrame will not add another one in front of the expression. So this will not work: df.Filter(""Sum(Map(vec, [](float e) { return e*e > 0.5; }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:68624,variab,variable,68624,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['variab'],['variable']
Modifiability,xx. ◆ GetClassInfo() [2/2]. TMVA::ClassInfo * TMVA::DataSetInfo::GetClassInfo ; (; Int_t ; clNum); const. Definition at line 146 of file DataSetInfo.cxx. ◆ GetClassNameMaxLength(). Int_t TMVA::DataSetInfo::GetClassNameMaxLength ; (; ); const. Definition at line 524 of file DataSetInfo.cxx. ◆ GetCut() [1/2]. const TCut & TMVA::DataSetInfo::GetCut ; (; const TString & ; className); const. inline . Definition at line 169 of file DataSetInfo.h. ◆ GetCut() [2/2]. const TCut & TMVA::DataSetInfo::GetCut ; (; Int_t ; i); const. inline . Definition at line 168 of file DataSetInfo.h. ◆ GetDataSet(). TMVA::DataSet * TMVA::DataSetInfo::GetDataSet ; (; ); const. returns data set ; Definition at line 493 of file DataSetInfo.cxx. ◆ GetDataSetManager(). DataSetManager * TMVA::DataSetInfo::GetDataSetManager ; (; ). inline . Definition at line 194 of file DataSetInfo.h. ◆ GetListOfVariables(). std::vector< TString > TMVA::DataSetInfo::GetListOfVariables ; (; ); const. returns list of variables ; Definition at line 406 of file DataSetInfo.cxx. ◆ GetName(). virtual const char * TMVA::DataSetInfo::GetName ; (; ); const. inlinevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 71 of file DataSetInfo.h. ◆ GetNClasses(). UInt_t TMVA::DataSetInfo::GetNClasses ; (; ); const. inline . Definition at line 155 of file DataSetInfo.h. ◆ GetNormalization(). const TString & TMVA::DataSetInfo::GetNormalization ; (; ); const. inline . Definition at line 131 of file DataSetInfo.h. ◆ GetNSpectators(). UInt_t TMVA::DataSetInfo::GetNSpectators ; (; bool ; all = kTRUE); const. Definition at line 511 of file DataSetInfo.cxx. ◆ GetNTargets(). UInt_t TMVA::DataSetInfo::GetNTargets ; (; ); const. inline . Definition at line 128 of file DataSetInfo.h. ◆ GetNVariables(). UInt_t TMVA::DataSetInfo::GetNVariables ; (; ); const. inline . Definition at line 127 of file DataSetIn,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:22324,variab,variables,22324,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,1,['variab'],['variables']
Modifiability,"xx. ◆ RooNumRunningInt() [2/2]. RooNumRunningInt::RooNumRunningInt ; (; const RooNumRunningInt & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 66 of file RooNumRunningInt.cxx. ◆ ~RooNumRunningInt(). RooNumRunningInt::~RooNumRunningInt ; (; ). override . Destructor. ; Definition at line 79 of file RooNumRunningInt.cxx. Member Function Documentation. ◆ actualObservables(). RooFit::OwningPtr< RooArgSet > RooNumRunningInt::actualObservables ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . Return observable in nset to be cached by RooAbsCachedPdf this is always the x observable that is integrated. ; Implements RooAbsCachedReal.; Definition at line 260 of file RooNumRunningInt.cxx. ◆ actualParameters(). RooFit::OwningPtr< RooArgSet > RooNumRunningInt::actualParameters ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . Return the parameters of the cache created by RooAbsCachedPdf. ; These are always the input functions parameter, but never the integrated variable x. ; Implements RooAbsCachedReal.; Definition at line 274 of file RooNumRunningInt.cxx. ◆ binningName(). const char * RooNumRunningInt::binningName ; (; ); const. inlineoverrideprotectedvirtual . Reimplemented from RooAbsCachedReal.; Definition at line 47 of file RooNumRunningInt.h. ◆ Class(). static TClass * RooNumRunningInt::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooNumRunningInt::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooNumRunningInt::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 63 of file RooNumRunningInt.h. ◆ clone(). TObject * RooNumRunningInt::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 26 of file RooNumRunningInt.h. ◆ createCache(). RooAbsCachedReal::FuncCacheElem * RooNumRunningInt::createCache ; (; con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumRunningInt.html:64743,variab,variable,64743,doc/master/classRooNumRunningInt.html,https://root.cern,https://root.cern/doc/master/classRooNumRunningInt.html,1,['variab'],['variable']
Modifiability,"xx. ◆ SetResponse(). void TMVA::DecisionTreeNode::SetResponse ; (; Float_t ; r). inline . set the response of the node (for regression) ; Definition at line 173 of file DecisionTreeNode.h. ◆ SetRight(). virtual void TMVA::DecisionTreeNode::SetRight ; (; Node * ; r). inlinevirtual . Reimplemented from TMVA::Node.; Definition at line 289 of file DecisionTreeNode.h. ◆ SetRMS(). void TMVA::DecisionTreeNode::SetRMS ; (; Float_t ; r). inline . set the RMS of the response of the node (for regression) ; Definition at line 179 of file DecisionTreeNode.h. ◆ SetSampleMax(). void TMVA::DecisionTreeNode::SetSampleMax ; (; UInt_t ; ivar, . Float_t ; xmax . ). set the maximum of variable ivar from the training sample that pass/end up in this node, if traininfo defined ; Definition at line 449 of file DecisionTreeNode.cxx. ◆ SetSampleMin(). void TMVA::DecisionTreeNode::SetSampleMin ; (; UInt_t ; ivar, . Float_t ; xmin . ). set the minimum of variable ivar from the training sample that pass/end up in this node, if traininfo defined ; Definition at line 438 of file DecisionTreeNode.cxx. ◆ SetSelector(). void TMVA::DecisionTreeNode::SetSelector ; (; Short_t ; i). inline . set index of variable used for discrimination at this node ; Definition at line 148 of file DecisionTreeNode.h. ◆ SetSeparationGain(). void TMVA::DecisionTreeNode::SetSeparationGain ; (; Float_t ; sep). inline . set the separation, or information gained BY this node's selection, if traininfo defined ; Definition at line 263 of file DecisionTreeNode.h. ◆ SetSeparationIndex(). void TMVA::DecisionTreeNode::SetSeparationIndex ; (; Float_t ; sep). inline . set the chosen index, measure of ""purity"" (separation between S and B) AT this node, if traininfo defined ; Definition at line 257 of file DecisionTreeNode.h. ◆ SetSubTreeR(). void TMVA::DecisionTreeNode::SetSubTreeR ; (; Double_t ; r). inline . set the resubstitution estimate, R(T_t), of the tree rooted at this node, if traininfo defined ; Definition at line 298 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html:35872,variab,variable,35872,doc/master/classTMVA_1_1DecisionTreeNode.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html,1,['variab'],['variable']
Modifiability,"xx. ◆ UpdateCoefficients(). void TMVA::RuleFitParams::UpdateCoefficients ; (; ). protected . Establish maximum gradient for rules, linear terms and the offset. ; Definition at line 1441 of file RuleFitParams.cxx. ◆ UpdateTstCoefficients(). void TMVA::RuleFitParams::UpdateTstCoefficients ; (; ). protected . Establish maximum gradient for rules, linear terms and the offset for all taus TODO: do not need index range! ; Definition at line 1327 of file RuleFitParams.cxx. Member Data Documentation. ◆ fAverageRulePath. std::vector<Double_t> TMVA::RuleFitParams::fAverageRulePath. protected . average of each rule, same range ; Definition at line 205 of file RuleFitParams.h. ◆ fAverageRulePerf. std::vector<Double_t> TMVA::RuleFitParams::fAverageRulePerf. protected . average of each rule, same range ; Definition at line 207 of file RuleFitParams.h. ◆ fAverageSelectorPath. std::vector<Double_t> TMVA::RuleFitParams::fAverageSelectorPath. protected . average of each variable over the range fPathIdx1,2 ; Definition at line 204 of file RuleFitParams.h. ◆ fAverageSelectorPerf. std::vector<Double_t> TMVA::RuleFitParams::fAverageSelectorPerf. protected . average of each variable over the range fPerfIdx1,2 ; Definition at line 206 of file RuleFitParams.h. ◆ fAverageTruth. Double_t TMVA::RuleFitParams::fAverageTruth. protected . average truth, ie sum(y)/N, y=+-1 ; Definition at line 232 of file RuleFitParams.h. ◆ fbkgave. Double_t TMVA::RuleFitParams::fbkgave. protected . Average of F(bkg) ; Definition at line 248 of file RuleFitParams.h. ◆ fbkgrms. Double_t TMVA::RuleFitParams::fbkgrms. protected . Rms of F(bkg) ; Definition at line 249 of file RuleFitParams.h. ◆ fFstar. std::vector<Double_t> TMVA::RuleFitParams::fFstar. protected . vector of F*() - filled in CalcFStar() ; Definition at line 234 of file RuleFitParams.h. ◆ fFstarMedian. Double_t TMVA::RuleFitParams::fFstarMedian. protected . median value of F*() using ; Definition at line 235 of file RuleFitParams.h. ◆ fGDCoefLinTst. st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html:19808,variab,variable,19808,doc/master/classTMVA_1_1RuleFitParams.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html,1,['variab'],['variable']
Modifiability,"xx. ◆ expectedEvents() [1/3]. double RooLagrangianMorphFunc::expectedEvents ; (; ); const. return the number of expected events for the current parameter set ; Definition at line 2793 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [2/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet & ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2804 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [3/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet * ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2785 of file RooLagrangianMorphFunc.cxx. ◆ expectedUncertainty(). double RooLagrangianMorphFunc::expectedUncertainty ; (; ); const. return the expected uncertainty for the current parameter set ; Definition at line 2812 of file RooLagrangianMorphFunc.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooLagrangianMorphFunc::extendMode ; (; ); const. return extended mored capabilities ; Definition at line 2776 of file RooLagrangianMorphFunc.cxx. ◆ forceAnalyticalInt(). bool RooLagrangianMorphFunc::forceAnalyticalInt ; (; const RooAbsArg & ; arg); const. overridevirtual . Force analytical integration for the given observable. ; Reimplemented from RooAbsReal.; Definition at line 2938 of file RooLagrangianMorphFunc.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooLagrangianMorphFunc::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; numVars, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. overridevirtual . Retrieve the mat. ; Reimplemented from RooAbsReal.; Definition at line 2946 of file RooLagrangianMorphFunc.cxx. ◆ getBinWidth(). RooRealVar * RooLagrangianMorphFunc::getBinWidth ; (; ); const. retrieve the histogram observable ; Definition at line 2531 of file RooLagrangianMorphFunc.cxx. ◆ getCache(). RooLagra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:79425,extend,extendMode,79425,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['extend'],['extendMode']
Modifiability,"xx:110; TInterpreterValue.h; gInterpreterMutexR__EXTERN TVirtualMutex * gInterpreterMutexDefinition TInterpreter.h:46; CreateInterpreter_tTInterpreter * CreateInterpreter_t(void *shlibHandle, const char *argv[])Definition TInterpreter.h:570; gClingR__EXTERN TInterpreter * gClingDefinition TInterpreter.h:574; DestroyInterpreter_tvoid * DestroyInterpreter_t(TInterpreter *)Definition TInterpreter.h:571; TNamed.h; R__LOCKGUARD#define R__LOCKGUARD(mutex)Definition TVirtualMutex.h:95; TVirtualRWMutex.h; protoconst char * protoDefinition civetweb.c:17535; ROOT::TVirtualRWMutexDefinition TVirtualRWMutex.h:39; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDictionary::EMemberSelectionEMemberSelectionKinds of members to include in lists.Definition TDictionary.h:216; TDictionary::DeclId_tconst void * DeclId_tDefinition TDictionary.h:224; TEnumThe TEnum class implements the enum type.Definition TEnum.h:33; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; TFunctionGlobal functions class (global functions are obtained from CINT).Definition TFunction.h:30; TInterpreterValueDefinition TInterpreterValue.h:32; TInterpreter::SuspendAutoLoadingRAIIDefinition TInterpreter.h:120; TInterpreter::SuspendAutoLoadingRAII::~SuspendAutoLoadingRAII~SuspendAutoLoadingRAII()Definition TInterpreter.h:129; TInterpreter::SuspendAutoLoadingRAII::fOldValuebool fOldValueDefinition TInterpreter.h:122; TInterpreter::SuspendAutoLoadingRAII::fInterpTInterpreter * fInterpDefinition TInterpreter.h:121; TInterpreter::SuspendAutoLoadingRAII::SuspendAutoLoadingRAIISuspendAutoLoadingRAII(TInterpreter *interp)Definition TInterpreter.h:125; TInterpreter::SuspendAutoParsingDefinition TInterpreter.h:111; TInterpreter::SuspendAutoParsing::SuspendAutoParsingSuspendAutoParsing(TInterpreter *where, Bool_t value=kTRUE)Definition TInterpreter.h:115; TInterpreter::SuspendAutoParsing::fPreviousBool_t fPreviousDefinition TI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:39762,config,config,39762,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,1,['config'],['config']
Modifiability,"xx:1313; RooAbsArg::checkObservablesvirtual bool checkObservables(const RooArgSet *nset) constOverloadable function in which derived classes can implement consistency checks of the variables.Definition RooAbsArg.cxx:817; RooAbsArg::treeNodeServerListvoid treeNodeServerList(RooAbsCollection *list, const RooAbsArg *arg=nullptr, bool doBranch=true, bool doLeaf=true, bool valueOnly=false, bool recurseNonDerived=false) constFill supplied list with nodes of the arg tree, following all server links, starting with ourself as t...Definition RooAbsArg.cxx:499; RooAbsBinningAbstract base class for RooRealVar binning definitions.Definition RooAbsBinning.h:25; RooAbsBinning::isParameterizedvirtual bool isParameterized() constInterface function.Definition RooAbsBinning.h:102; RooAbsBinning::highBoundFuncvirtual RooAbsReal * highBoundFunc() constReturn pointer to RooAbsReal parameterized upper bound, if any.Definition RooAbsBinning.h:110; RooAbsBinning::lowBoundFuncvirtual RooAbsReal * lowBoundFunc() constReturn pointer to RooAbsReal parameterized lower bound, if any.Definition RooAbsBinning.h:106; RooAbsCategoryLValueAbstract base class for objects that represent a discrete value that can be set from the outside,...Definition RooAbsCategoryLValue.h:26; RooAbsCategoryLValue::setIndexvirtual bool setIndex(value_type index, bool printError=true)=0Change category state by specifying the index code of the desired state.; RooAbsCategoryA space to attach TBranches.Definition RooAbsCategory.h:33; RooAbsCategory::getCurrentIndexvirtual value_type getCurrentIndex() constReturn index number of current state.Definition RooAbsCategory.cxx:121; RooAbsCategory::isSignTypebool isSignType(bool mustHaveZero=false) constDetermine if category has 2 or 3 states with index values -1,0,1.Definition RooAbsCategory.cxx:660; RooAbsCollectionAbstract container object that can hold multiple RooAbsArg objects.Definition RooAbsCollection.h:65; RooAbsCollection::uniqueIdRooFit::UniqueId< RooAbsCollection > con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:208818,parameteriz,parameterized,208818,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['parameteriz'],['parameterized']
Modifiability,"xx:2530; TStreamerInfoActions::GenericLooper::SimpleReadFloat16static void SimpleReadFloat16(TBuffer &buf, void *addr)Definition TStreamerInfoActions.cxx:2550; TStreamerInfoActions::GenericLooper::ReadNumericalCollectionstatic Int_t ReadNumericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2564; TStreamerInfoActions::GenericLooper::GenericWritestatic Int_t GenericWrite(TBuffer &buf, void *, const void *, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2537; TStreamerInfoActions::GenericLooper::ReadCollectionBasicTypestatic Int_t ReadCollectionBasicType(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2615; TStreamerInfoActions::GenericLooper::SimpleReadstatic void SimpleRead(TBuffer &buf, void *addr)Definition TStreamerInfoActions.cxx:2545; TStreamerInfoActions::GenericLooper::ReadActionstatic Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2365; TStreamerInfoActions::GenericLooper::SimpleReadDouble32static void SimpleReadDouble32(TBuffer &buf, void *addr)Definition TStreamerInfoActions.cxx:2555; TStreamerInfoActions::GenericLooper::ReadCollectionDouble32static Int_t ReadCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2607; TStreamerInfoActions::NoFactorMarkerDefinition TStreamerInfoActions.cxx:63; TStreamerInfoActions::NoFactorMarker::Value_tFrom Value_tDefinition TStreamerInfoActions.cxx:64; TStreamerInfoActions::TBitsConfigurationDefinition TStreamerInfoActions.cxx:149; TStreamerInfoActions::TBitsConfiguration::AddToOffsetvoid AddToOffset(Int_t delta) overrideDefinition TStreamerInfoActions.cxx:171; TStreamerInfoActions::TBitsConfiguration::TBitsConfigurationTBitsConfiguration(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t off",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:269550,config,config,269550,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"xx:547; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::NumCPURooCmdArg NumCPU(Int_t nCPU, Int_t interleave=0)Definition RooGlobalFunc.cxx:474; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf603_multicpuDefinition rf603_multicpu.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; TimerDefinition histspeedtest.cxx:54; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- Command timer: Real time 0:00:00, CP time 0.140; [#1] INFO:Minimization -- Session timer: Real time 0:00:00, CP time 0.140; [#1] INFO:Minimization -- Command timer: Real time 0:00:00, CP time 0.010; [#1] INFO:Minimization -- Session timer: Real time 0:00:00, CP time 0.150, 2 slices; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf603_multicpu.C. tutorialsroofitrf603_multicpu.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf603__multicpu_8C.html:7099,variab,variables,7099,doc/master/rf603__multicpu_8C.html,https://root.cern,https://root.cern/doc/master/rf603__multicpu_8C.html,1,['variab'],['variables']
Modifiability,"xy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< double > _high;  ; std::vector< double > _low;  ; double _nominal = 0;  ; RooListProxy _paramList;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html:54912,inherit,inherited,54912,doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html,1,['inherit'],['inherited']
Modifiability,"xy (RooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy A;  ; RooRealProxy B;  ; RooRealProxy C;  ; RooRealProxy dm;  ; RooRealProxy dm0;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDstD0BG.html:67474,inherit,inherited,67474,doc/master/classRooDstD0BG.html,https://root.cern,https://root.cern/doc/master/classRooDstD0BG.html,1,['inherit'],['inherited']
Modifiability,"xy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGenMapProxy Class ReferenceInput/Output Library. ; Localoptimization class. ; Collection proxies get copied. On copy we switch the type of the proxy to the concrete STL type. The concrete types are optimized for element access. ; Definition at line 277 of file TGenCollectionProxy.cxx. Public Member Functions;  TGenMapProxy (const TGenCollectionProxy &c);  ;  ~TGenMapProxy () override;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenSetProxy;  TGenSetProxy (const TGenCollectionProxy &c);  ;  ~TGenSetProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ;  Public Member Functions inherited from TGenVectorProxy;  TGenVectorProxy (const TGenCollectionProxy &c);  ;  ~TGenVectorProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenCollectionProxy;  TGenCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &info, TClass *cl);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  TGenCollectionProxy (const TGenCollectionProxy &copy);  Build a proxy for an emulated container. ;  ;  TGenCollectionProxy (Info_t typ, size_t iter_size);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  ~TGenCollectionProxy () override;  Standard destructor. ;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocate the needed space. ;  ; void Clear (const char *opt="""") override;  Clear the emulated collection. ;  ; void Commit (void *env) override;  Commit the change. ;  ; TVirtualCollection",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy.html:934,inherit,inherited,934,doc/master/classTGenMapProxy.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy.html,1,['inherit'],['inherited']
Modifiability,"xy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooArgProxy Class ReferenceRooFit » RooFit Core. ; Abstract interface for RooAbsArg proxy classes. ; A RooArgProxy is the general mechanism to store references to other RooAbsArgs inside a RooAbsArg.; Creating a RooArgProxy adds the proxied object to the proxy owners server list (thus receiving value/shape dirty flags from it) and registers itself with the owning class. The latter allows the owning class to change the proxied pointer when the server it points to gets redirected (e.g. in a copy or clone operation). ; Definition at line 24 of file RooArgProxy.h. Public Member Functions;  RooArgProxy ()=default;  Default constructor. ;  ;  RooArgProxy (const char *name, const char *desc, RooAbsArg *owner, bool valueServer, bool shapeServer, bool proxyOwnsArg=false);  Constructor with owner and proxied variable. ;  ;  RooArgProxy (const char *name, const char *desc, RooAbsArg *owner, RooAbsArg &arg, bool valueServer, bool shapeServer, bool proxyOwnsArg=false);  Constructor with owner and proxied variable. ;  ;  RooArgProxy (const char *name, RooAbsArg *owner, const RooArgProxy &other);  Copy constructor. ;  ;  RooArgProxy (RooArgProxy &&other)=delete;  ;  RooArgProxy (RooArgProxy const &other)=delete;  ;  ~RooArgProxy () override;  Destructor. ;  ; RooAbsArg * absArg () const;  Return pointer to contained argument. ;  ; TClass * IsA () const override;  ; bool isShapeServer () const;  Returns true if contents is shape server of owner. ;  ; bool isValueServer () const;  Returns true of contents is value server of owner. ;  ; const char * name () const override;  Return name of proxy. ;  ; RooArgProxy & operator= (RooArgProxy &&other)=delete;  ; RooArgProxy & operator= (RooArgProxy const &other)=delete;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgProxy.html:1099,variab,variable,1099,doc/master/classRooArgProxy.html,https://root.cern,https://root.cern/doc/master/classRooArgProxy.html,1,['variab'],['variable']
Modifiability,"xy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList or a TEntryList. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has the form >>elist , a TEventList object named ""elist""; is created in the current directory. elist will contain the list; of entry numbers satisfying the current selection.; If option ""entrylist"" is used, a TEntryList object is created; Example:; tree.Draw("">>yplus"",""y>0""); will create a TEventList object named ""yplus"" in the current directory.; I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:79666,variab,variables,79666,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,1,['variab'],['variables']
Modifiability,"xy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has the form >>elist , a TEventList object named ""elist""; is created in the current directory. elist will contain the list; of entry numbers satisfying the current selection.; If option ""entrylist"" is used, a TEntryList object is created; If the selection contains arrays, vectors or any container class and option; ""entrylistarray""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:80150,variab,variables,80150,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,1,['variab'],['variables']
Modifiability,"xy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; const value_type _defIndex {std::numeric_limits<value_type>::min()};  ; RooRealProxy _inputVar;  ; std::vector< std::pair< double, value_type > > _threshList;  ;  Protected Attributes inherited from RooAbsCategory; value_type _currentIndex {std::numeric_limits<int>::min()};  Current category state. ;  ; std::vector< std::string > _insertionOrder;  Keeps track in which order state numbers have been inserted. Make sure this is updated in recomputeShape(). ;  ; std::map< value_type, std::unique_ptr< RooCatType, std::function< void(RooCatType *)> > > _legacyStates;  ! Map holding pointers to RooCatType instances. Only for legacy interface. Don't use if possible. ;  ; std::map< std::string, value_type > _stateNames;  Map state names to index numbers. Make sure state names are updated in recomputeShape(). ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooThresholdCategory.html:39747,inherit,inherited,39747,doc/master/classRooThresholdCategory.html,https://root.cern,https://root.cern/doc/master/classRooThresholdCategory.html,1,['inherit'],['inherited']
Modifiability,"xy list. ;  ; void registerProxy (RooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooCategoryProxy _state;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsHiddenReal.html:55746,inherit,inherited,55746,doc/master/classRooAbsHiddenReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsHiddenReal.html,1,['inherit'],['inherited']
Modifiability,"xy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy mean;  ; RooRealProxy sigma;  ; RooRealProxy width;  ; RooRealProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVoigtian.html:68859,config,configuration,68859,doc/master/classRooVoigtian.html,https://root.cern,https://root.cern/doc/master/classRooVoigtian.html,1,['config'],['configuration']
Modifiability,"xy). inline . Definition at line 104 of file EvalContext.h. ◆ config(). RooBatchCompute::Config RooFit::EvalContext::config ; (; RooAbsArg const * ; arg); const. Definition at line 73 of file EvalContext.cxx. ◆ enableVectorBuffers(). void RooFit::EvalContext::enableVectorBuffers ; (; bool ; enable). inline . Definition at line 110 of file EvalContext.h. ◆ output(). std::span< double > RooFit::EvalContext::output ; (; ). inline . Definition at line 112 of file EvalContext.h. ◆ resetVectorBuffers(). void RooFit::EvalContext::resetVectorBuffers ; (; ). inline . Definition at line 111 of file EvalContext.h. ◆ resize(). void RooFit::EvalContext::resize ; (; std::size_t ; n). Definition at line 82 of file EvalContext.cxx. ◆ set(). void RooFit::EvalContext::set ; (; RooAbsArg const * ; arg, . std::span< const double > const & ; span . ). inline . Definition at line 91 of file EvalContext.h. ◆ setConfig(). void RooFit::EvalContext::setConfig ; (; RooAbsArg const * ; arg, . RooBatchCompute::Config const & ; config . ). Definition at line 65 of file EvalContext.cxx. ◆ setOutputWithOffset(). void RooFit::EvalContext::setOutputWithOffset ; (; RooAbsArg const * ; arg, . ROOT::Math::KahanSum< double > ; val, . ROOT::Math::KahanSum< double > const & ; offset . ). Sets the output value with an offset. ; This function sets the output value with an offset for the given argument. It should only be used in reducer nodes. Depending on the current OffsetMode, the result will either be just the value, the value minus the offset, of just the offset.; Parameters. argPointer to the RooAbsArg object. ; valThe value to be set. ; offsetThe offset value. Exceptions. std::runtime_errorif the argument is not a reducer node. . Definition at line 100 of file EvalContext.cxx. ◆ size(). auto RooFit::EvalContext::size ; (; ); const. inline . Definition at line 88 of file EvalContext.h. Friends And Related Symbol Documentation. ◆ Evaluator. friend class Evaluator. friend . Definition at line 118 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1EvalContext.html:3129,config,config,3129,doc/master/classRooFit_1_1EvalContext.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1EvalContext.html,1,['config'],['config']
Modifiability,"xy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooCFunction4Ref< VO, VI1, VI2, VI3, VI4 > func;  ; RooRealProxy w;  ; RooRealProxy x;  ; RooRealProxy y;  ; RooRealProxy z;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction4Binding.html:55409,inherit,inherited,55409,doc/master/classRooCFunction4Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction4Binding.html,1,['inherit'],['inherited']
Modifiability,"xy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Int_t GetNumBins (const RooArgSet &vars);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . Protected Attributes; RooDataHist _dataSet;  ; RooListProxy _dataVars;  The RooRealVars. ;  ; RooObjCacheManager _normIntMgr;  ! The integration cache manager ;  ; Int_t _numBins = 0;  ; NumBins _numBinsPerDim;  ; RooListProxy _paramSet;  interpolation parameters ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:57304,inherit,inherited,57304,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['inherit'],['inherited']
Modifiability,"xy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooSetProxy _cacheObs;  Variables to be cached. ;  ; bool _cacheSource;  Keep an attached clone of the source in the cache for fast operation. ;  ; bool _useCdfBoundaries;  Are c.d.f boundary conditions used by the RooHistFuncs? ;  ; RooRealProxy func;  Proxy to function being cached. ;  ;  Protected Attributes inherited from RooAbsCachedReal; std::map< Int_t, std::pair< const RooArgSet *, const RooArgSet * > > _anaIntMap;  ! Map for analytical integration codes ;  ; RooObjCacheManager _cacheMgr;  ! The cache manager ;  ; Int_t _ipOrder;  Interpolation order for cache histograms. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:57977,inherit,inherited,57977,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['inherit'],['inherited']
Modifiability,"xy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsData::SumW2@ SumW2Definition RooAbsData.h:108; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooMinimizerWrapper class around ROOT::Math::Minimizer that provides a seamless interface between the minimizer f...Definition RooMinimizer.h:48; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TMarker::Printvoid Print(Option_t *option="""") const overrideDump this marker with its attributes.Definition TMarker.cxx:339; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::SumW2ErrorRooCmdArg SumW2Error(bool flag)Definition RooGlobalFunc.cxx:733; RooFit::DataErrorRooCmdA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf403__weightedevts_8C.html:7967,variab,variable,7967,doc/master/rf403__weightedevts_8C.html,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html,1,['variab'],['variable']
Modifiability,"xyxIntergrated observable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumRunningInt(const char* name, const char* title, RooAbsReal& _func, RooRealVar& _x, const char* binningName = ""cache""); Construct running integral of function '_func' over x_print from; the lower bound on _x to the present value of _x using a numeric; sampling technique. The sampling frequency is controlled by the; binning named 'bname' and a default second order interpolation; is applied to smooth the histogram-based c.d.f. RooNumRunningInt(const RooNumRunningInt& other, const char* name = 0); Copy constructor. ~RooNumRunningInt(); Destructor. const char* inputBaseName() const; Return unique name for RooAbsCachedPdf cache components; constructed from input function name. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Fill the cache object by calling its calculate() method. RooArgSet* actualObservables(const RooArgSet& nset) const; Return observable in nset to be cached by RooAbsCachedPdf; this is always the x observable that is integrated. RooArgSet* actualParameters(const RooArgSet& nset) const; Return the parameters of the cache created by RooAbsCachedPdf.; These are always the input functions parameter, but never the; integrated variable x. RooAbsCachedReal::FuncCacheElem* createCache(const RooArgSet* nset) const; Create custom cache element for running integral calculations. Double_t evaluate() const; Dummy function that is never called. TObject* clone(const char* newname) const; { return new RooNumRunningInt(*this,newname); }. const char* binningName() const; { return _binningName.c_str() ; }. const char* payloadUniqueSuffix() const; { return func.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Thu Sep 23 20:00:25 2010 » Last generated: 2010-09-23 20:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumRunningInt.html:35540,variab,variable,35540,root/html528/RooNumRunningInt.html,https://root.cern,https://root.cern/root/html528/RooNumRunningInt.html,1,['variab'],['variable']
Modifiability,"xyxIntergrated observable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumRunningInt(const char* name, const char* title, RooAbsReal& _func, RooRealVar& _x, const char* binningName = ""cache""); Construct running integral of function '_func' over x_print from; the lower bound on _x to the present value of _x using a numeric; sampling technique. The sampling frequency is controlled by the; binning named 'bname' and a default second order interpolation; is applied to smooth the histogram-based c.d.f. RooNumRunningInt(const RooNumRunningInt& other, const char* name = 0); Copy constructor. ~RooNumRunningInt(); Destructor. const char* inputBaseName() const; Return unique name for RooAbsCachedPdf cache components; constructed from input function name. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Fill the cache object by calling its calculate() method. RooArgSet* actualObservables(const RooArgSet& nset) const; Return observable in nset to be cached by RooAbsCachedPdf; this is always the x observable that is integrated. RooArgSet* actualParameters(const RooArgSet& nset) const; Return the parameters of the cache created by RooAbsCachedPdf.; These are always the input functions parameter, but never the; integrated variable x. RooAbsCachedReal::FuncCacheElem* createCache(const RooArgSet* nset) const; Create custom cache element for running integral calculations. Double_t evaluate() const; Dummy function that is never called. TObject* clone(const char* newname) const; { return new RooNumRunningInt(*this,newname); }. const char* binningName() const; { return _binningName.c_str() ; }. const char* payloadUniqueSuffix() const; { return func.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Tue Jun 30 14:34:41 2015 » Last generated: 2015-06-30 14:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumRunningInt.html:40171,variab,variable,40171,root/html602/RooNumRunningInt.html,https://root.cern,https://root.cern/root/html602/RooNumRunningInt.html,1,['variab'],['variable']
Modifiability,"xyxIntergrated observable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumRunningInt(const char* name, const char* title, RooAbsReal& _func, RooRealVar& _x, const char* binningName = ""cache""); Construct running integral of function '_func' over x_print from; the lower bound on _x to the present value of _x using a numeric; sampling technique. The sampling frequency is controlled by the; binning named 'bname' and a default second order interpolation; is applied to smooth the histogram-based c.d.f. RooNumRunningInt(const RooNumRunningInt& other, const char* name = 0); Copy constructor. ~RooNumRunningInt(); Destructor. const char* inputBaseName() const; Return unique name for RooAbsCachedPdf cache components; constructed from input function name. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Fill the cache object by calling its calculate() method. RooArgSet* actualObservables(const RooArgSet& nset) const; Return observable in nset to be cached by RooAbsCachedPdf; this is always the x observable that is integrated. RooArgSet* actualParameters(const RooArgSet& nset) const; Return the parameters of the cache created by RooAbsCachedPdf.; These are always the input functions parameter, but never the; integrated variable x. RooAbsCachedReal::FuncCacheElem* createCache(const RooArgSet* nset) const; Create custom cache element for running integral calculations. Double_t evaluate() const; Dummy function that is never called. TObject* clone(const char* newname) const; { return new RooNumRunningInt(*this,newname); }. const char* binningName() const; { return _binningName.c_str() ; }. const char* payloadUniqueSuffix() const; { return func.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Tue Mar 10 17:18:18 2015 » Last generated: 2015-03-10 17:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumRunningInt.html:38667,variab,variable,38667,root/html534/RooNumRunningInt.html,https://root.cern,https://root.cern/root/html534/RooNumRunningInt.html,1,['variab'],['variable']
Modifiability,"y &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooListProxy _set1;  Set of input fractions. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFracRemainder.html:54824,inherit,inherited,54824,doc/master/classRooFracRemainder.html,https://root.cern,https://root.cern/doc/master/classRooFracRemainder.html,1,['inherit'],['inherited']
Modifiability,"y &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy rho1;  ; RooRealProxy rho2;  ; RooRealProxy sigp;  ; RooRealProxy x;  ; RooRealProxy xi;  ; RooRealProxy Xp;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBukinPdf.html:67489,inherit,inherited,67489,doc/master/classRooBukinPdf.html,https://root.cern,https://root.cern/doc/master/classRooBukinPdf.html,1,['inherit'],['inherited']
Modifiability,"y &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _if;  Int(F(x))dx ;. ;  ; RooRealProxy _ixf;  Int((X-offset)*F(X))dx ;. ;  ; RooRealProxy _xf;  (X-offset)*F ;  ; double _xfOffset;  offset ;  ;  Protected Attributes inherited from RooAbsMoment; RooRealProxy _func;  Input function. ;  ; RooRealProxy _mean;  Mean (if calculated for central moment) ;  ; RooSetProxy _nset;  Normalization set (optional) ;  ; Int_t _order = 1;  Moment order. ;  ; Int_t _takeRoot = false;  Return n-order root of moment. ;  ; RooRealProxy _x;  Observable. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSecondMoment.html:55865,inherit,inherited,55865,doc/master/classRooSecondMoment.html,https://root.cern,https://root.cern/doc/master/classRooSecondMoment.html,1,['inherit'],['inherited']
Modifiability,"y &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Int_t GetNumBins (const RooArgSet &vars);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . Protected Attributes; RooDataHist _dataSet;  ; RooListProxy _dataVars;  The RooRealVars. ;  ; RooObjCacheManager _normIntMgr;  ! The integration cache manager ;  ; Int_t _numBins = 0;  ; NumBins _numBinsPerDim;  ; RooListProxy _paramSet;  interpolation parameters ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:57978,inherit,inherited,57978,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['inherit'],['inherited']
Modifiability,"y ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGraphErrors; static Int_t CalculateScanfFields (const char *fmt);  Calculate scan fields. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGraph; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t CompareArg (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s argument (angle with respect to positive x-axis) is bigger than that of point number ""right"". ;  ; static Bool_t CompareRadius (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s distance to origin is bigger than that of point number ""right"". ;  ; static Bool_t CompareX (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if fX[left] > fX[right]. Can be used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar.html:28183,inherit,inherited,28183,doc/master/classTGraphPolar.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar.html,1,['inherit'],['inherited']
Modifiability,"y (Int_t iclass);  Select all classes used/referenced by the class number iclass. ;  ; virtual void FindClassesUsing (Int_t iclass);  Select all classes using/referencing the class number iclass. ;  ; virtual void FindClassPosition (const char *classname, Float_t &x, Float_t &y);  Search the TPaveClass object in the pad with label=classname returns the x and y position of the center of the pave. ;  ; virtual void Init ();  Initialize the data structures. ;  ; TObjString * Mark (const char *classname, TList *los, Int_t abit);  set bit abit in class classname in list los ;  ; virtual void PaintClass (Int_t iclass, Float_t xleft, Float_t y);  Paint one class level. ;  ; virtual void ScanClasses (Int_t iclass);  Select all classes used by/referenced/referencing the class number iclass and build the list of these classes. ;  ; virtual void ShowCod ();  Draw the Code References relationships. ;  ; virtual void ShowHas ();  Draw the ""Has a"" relationships. ;  ; virtual void ShowMul ();  Draw the Multiple inheritance relationships. ;  ; virtual void ShowRef ();  Draw the References relationships (other than inheritance or composition) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fClasses;  List of classes to be drawn. ;  ; TString ** fCnames {nullptr};  ![fNclasses] class names ;  ; Int_t * fCparent {nullptr};  !parent number of classes (temporary) ;  ; TClass ** fCpointer {nullptr};  ![fNclasses] pointers to the TClass objects ;  ; Int_t * fCstatus {nullptr};  [fNclasses] classes status ;  ; TString ** fCtitles {nullptr};  ![fNclasses] class titles ;  ; char ** fDerived {nullptr};  ![fNclasses] table to indicate if i derives from j ;  ; Float_t fLabelDx {0};  width along x of TPaveLabels in per cent of pad ;  ; TList ** fLinks {nullptr};  ![fNclasses] for each class, the list ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTree.html:17423,inherit,inheritance,17423,doc/master/classTClassTree.html,https://root.cern,https://root.cern/doc/master/classTClassTree.html,1,['inherit'],['inheritance']
Modifiability,"y (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:35608,inherit,inherited,35608,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,3,['inherit'],['inherited']
Modifiability,"y (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Float_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  . Additional Inherited Members;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . #include <TArrayF.h>. Inheritance diagram for TArrayF:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArrayF() [1/4]. TArrayF::TArrayF ; (; ). Default TArrayF ctor. ; Definition at line 26 of file TArrayF.cxx. ◆ TArrayF() [2/4]. TArrayF::TArrayF ; (; Int_t ; n). Create TArrayF object and set array size to n floats. ; Definition at line 34 of file TArrayF.cxx. ◆ TArrayF() [3/4]. TArrayF::TArrayF ; (; Int_t ; n, . const Float_t * ; array . ). Create TArrayF object and initialize it with values of array. ; Definition at line 43 of file TArrayF.cxx. ◆ TArrayF() [4/4]. TArrayF::TArrayF ; (; const TArrayF & ; array). Copy constructor. ; Definition at line 52 of file TArrayF.cxx. ◆ ~TArrayF(). TArrayF::~TArrayF ; (; ). virtual . Delete TArrayF object. ; Definit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrayF.html:2716,inherit,inherited,2716,doc/master/classTArrayF.html,https://root.cern,https://root.cern/doc/master/classTArrayF.html,1,['inherit'],['inherited']
Modifiability,"y (function). RooSimultaneous(const char *name, const char *title, 				 map<string,RooAbsPdf*> pdfMap, RooAbsCategoryLValue& inIndexCat). void initialize(RooAbsCategoryLValue& inIndexCat, std::map<std::string,RooAbsPdf*> pdfMap); First see if there are any RooSimultaneous input components. RooSimultaneous(const RooSimultaneous& other, const char* name = 0); Copy constructor. ~RooSimultaneous(); Destructor. RooAbsPdf* getPdf(const char* catName) const; Return the p.d.f associated with the given index category name. Bool_t addPdf(const RooAbsPdf& pdf, const char* catLabel); Associate given PDF with index category state label 'catLabel'.; The names state must be already defined in the index category. RooSimultaneous can function without having a PDF associated; with every single state. The normalization in such cases is taken; from the number of registered PDFs, but getVal() will assert if; when called for an unregistered index state. PDFs may not overlap (i.e. share any variables) with the index category (function). RooAbsPdf::ExtendMode extendMode() const; WVE NEEDS FIX. Double_t evaluate() const; Return the current value:; the value of the PDF associated with the current index category state. Double_t expectedEvents(const RooArgSet* nset); Return the number of expected events: If the index is in nset,; then return the sum of the expected events of all components,; otherwise return the number of expected events of the PDF; associated with the current index category state. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Forward determination of analytical integration capabilities to component p.d.f.s; A unique code is assigned to the combined integration capabilities of all associated; p.d.f.s. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integration defined by given code. RooPlot* plotOn(RooPlot* frame, RooLinkedL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimultaneous.html:42566,variab,variables,42566,root/html526/RooSimultaneous.html,https://root.cern,https://root.cern/root/html526/RooSimultaneous.html,1,['variab'],['variables']
Modifiability,"y * fScanMin;  Min Value for Contour. ;  ; TGComboBox * fScanPar;  Parameter for Scan. ;  ; TGNumberEntry * fScanPoints;  Number of points for the graph. ;  ; TGTab * fTab;  Tab containing the available methods. ;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAdvancedGraphicsDialog.html:31485,inherit,inherited,31485,doc/master/classTAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/doc/master/classTAdvancedGraphicsDialog.html,1,['inherit'],['inherited']
Modifiability,"y 1. ;  ; Int_t Fill (Double_t x, Double_t w) override;  Increment bin with abscissa X with a weight w. ;  ; Double_t GetBinContent (Int_t bin) const override;  Return content of global bin number bin. ;  ; Double_t GetBinContent (Int_t bin, Int_t) const override;  ; Double_t GetBinContent (Int_t bin, Int_t, Int_t) const override;  ; Double_t GetBinError (Int_t bin) const override;  Return content of global bin error. ;  ; Double_t GetBinError (Int_t bin, Int_t) const override;  ; Double_t GetBinError (Int_t bin, Int_t, Int_t) const override;  ; TClass * IsA () const override;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out Note the following restrictions in the code generated: ;  ; void SetKOrd (Int_t k);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the addition of h1 and h2. ;  ; virtual Bool_t Add (const TH1 *h1, Double_t c1=1);  Performs the operation: this = this + c1*h1 If errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual Bool_t Add (TF1 *h1, Double_t c1=1, Option_t *option="""");  Performs the operation: this = this + c1*f1 if errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual void AddBinContent (Int_t bin);  Increment bin content by 1. ;  ; virtual void AddBinContent (Int_t bin, Double_t w);  Increment bin content by a weight w. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Double_t &advalue) const;  Same function as above but returning also the test statistic value. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Option_t *option="""") const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1K.html:2484,inherit,inherited,2484,doc/master/classTH1K.html,https://root.cern,https://root.cern/doc/master/classTH1K.html,1,['inherit'],['inherited']
Modifiability,y : [Category_Fisher_2_dsi] : ; : ; : Train method: Category_Fisher_2 for Classification; <HEADER> Category_Fisher_2 : Results for Fisher coefficients:; : -----------------------; : Variable: Coefficient:; : -----------------------; : var1: +0.107; : var2: +0.148; : var3: +0.251; : var4: +0.372; : (offset): -0.751; : -----------------------; : Elapsed time for training with 4871 events: 0.0015 sec ; <HEADER> Category_Fisher_2 : [Category_Fisher_2_dsi] : Evaluation of Category_Fisher_2 on training sample (4871 events); : Elapsed time for evaluation of 4871 events: 0.00213 sec ; : Training finished; : Begin ranking of input variables...; <HEADER> Category_Fisher_1 : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Discr. power; : -------------------------------; : 1 : var4 : 2.205e-01; : 2 : var3 : 1.054e-01; : 3 : var2 : 4.114e-02; : 4 : var1 : 1.987e-02; : -------------------------------; <HEADER> Category_Fisher_2 : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Discr. power; : -------------------------------; : 1 : var4 : 2.153e-01; : 2 : var3 : 1.105e-01; : 3 : var2 : 4.289e-02; : 4 : var1 : 1.986e-02; : -------------------------------; : Elapsed time for training with 10000 events: 0.0412 sec ; <HEADER> Category_Fisher_1 : [Category_Fisher_1_dsi] : Evaluation of Category_Fisher_1 on training sample (10000 events); : Elapsed time for evaluation of 10000 events: 0.00549 sec ; <HEADER> Category_Fisher_2 : [Category_Fisher_2_dsi] : Evaluation of Category_Fisher_2 on training sample (10000 events); : Elapsed time for evaluation of 10000 events: 0.00519 sec ; : Creating xml weight file: dataset/weights/TMVAClassificationCategory_FisherCat.weights.xml; <HEADER> Factory : Training finished; : ; <HEADER> Factory : Train method: LikelihoodCat for Classification; : ; : Train all sub-classifiers for Classification ...; : Rebuilding Dataset Category_Likelihood_1_dsi; : B,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:12069,variab,variable,12069,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,1,['variab'],['variable']
Modifiability,"y ; Definition at line 665 of file RooFFTConvPdf.cxx. ◆ setBufferFraction(). void RooFFTConvPdf::setBufferFraction ; (; double ; frac). Change the size of the buffer on either side of the observable range to frac times the size of the range of the convolution observable. ; Definition at line 912 of file RooFFTConvPdf.cxx. ◆ setBufferStrategy(). void RooFFTConvPdf::setBufferStrategy ; (; BufStrat ; bs). Change strategy to fill the overflow buffer on either side of the convolution observable range. . Extend means is that the input p.d.f convolution observable range is widened to include the buffer range; Flat means that the buffer is filled with the p.d.f. value at the boundary of the observable range; Mirror means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary. The default strategy is extend. If one of the input p.d.f.s is a RooAddPdf, it is configured so that the interpretation range of the fraction coefficients is kept at the nominal convolutions observable range (instead of interpreting coefficients in the widened range including the buffer). ; Definition at line 936 of file RooFFTConvPdf.cxx. ◆ setCacheObservables(). void RooFFTConvPdf::setCacheObservables ; (; const RooArgSet & ; obs). inline . Definition at line 38 of file RooFFTConvPdf.h. ◆ setShift(). void RooFFTConvPdf::setShift ; (; double ; val1, . double ; val2 . ). inline . Definition at line 37 of file RooFFTConvPdf.h. ◆ Streamer(). void RooFFTConvPdf::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsCachedPdf. ◆ StreamerNVirtual(). void RooFFTConvPdf::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 124 of file RooFFTConvPdf.h. Friends And Related Symbol Documentation. ◆ FFTCacheElem. friend class FFTCacheElem. friend . Definition at line 94 of file RooFFTConvPdf.h. ◆ RooConvGenContext. friend class RooConvGenContext. friend . Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:95595,config,configured,95595,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,1,['config'],['configured']
Modifiability,"y ; Reimplemented from TObject.; Definition at line 4502 of file TH1.cxx. ◆ GetOption(). Option_t * TH1::GetOption ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 303 of file TH1.h. ◆ GetPainter(). TVirtualHistPainter * TH1::GetPainter ; (; Option_t * ; option = """"). Return pointer to painter. ; If painter does not exist, it is created ; Definition at line 4511 of file TH1.cxx. ◆ GetQuantiles(). Int_t TH1::GetQuantiles ; (; Int_t ; n, . Double_t * ; xp, . const Double_t * ; p = nullptr . ). virtual . Compute Quantiles for this histogram Quantile x_p := Q(p) is defined as the value x_p such that the cumulative probability distribution Function F of variable X yields: ; F(x_p) = Pr(X <= x_p) = p with 0 <= p <= 1.; x_p = Q(p) = F_inv(p); X#define X(type, name); pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; F#define F(x, y, z); For instance the median x_0.5 of a distribution is defined as that value of the random variable X for which the distribution function equals 0.5:; F(x_0.5) = Probability(X < x_0.5) = 0.5; x_0.5 = Q(0.5); AuthorEddy Offermann code from Eddy Offermann, Renaissance; Parameters. [in]nmaximum size of array xp and size of array p (if given) ; [out]xparray to be filled with nq quantiles evaluated at (p). Memory has to be preallocated by caller. If p is null (default value), then xp is actually set to the (first n) histogram bin edges ; [in]parray of cumulative probabilities where quantiles should be evaluated.; if p is null, the CDF of the histogram will be used instead as array, and will have a size = number of bins + 1 in h. It will correspond to the quantiles calculated at the lowest edge of the histogram (quantile=0) and all the upper edges of the bins. (nbins might be > n).; if p is not null, it is assumed to contain at least n values. . Returnsvalue nq (<=n) with the number of quantiles computed; Note that the Integral of the histogram is automatically recomputed if the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:167783,variab,variable,167783,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variable']
Modifiability,"y ; in the; test sample, and. is evaluated. The relative error over the test sample. should not be to low or high compared to from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representive of; the problem. A large difference in the reduced over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use Minuit; [4] to further improve the fit, using the test sample. Christian Holm; November 2000, NBI. Bibliography; 1. Philip R. Bevington and D. Keith Robinson.; Data Reduction and Error Analysis for the Physical Sciences.; McGraw-Hill, 2 edition, 1992.; 2. René Brun et al.; Mudifi.; Long writeup DD/75-23, CERN, 1980.; 3. Gene H. Golub and Charles F. van Loan.; Matrix Computations.; John Hopkins Univeristy Press, Baltimore, 3 edition, 1996.; 4. F. James.; Minuit.; Long writeup D506, CERN, 1998.; 5. H. Wind.; Function parameterization.; In Proceedings of the 1972 CERN Computing and Data Processing; School, volume 72-21 of Yellow report. CERN, 1972.; 6. H. Wind.; 1. principal component analysis, 2. pattern recognition for track; finding, 3. interpolation and functional representation.; Yellow report EP/81-12, CERN, 1981. */. Function Members (Methods); public:. TMultiDimFit(); TMultiDimFit(const TMultiDimFit&); TMultiDimFit(Int_t dimension, TMultiDimFit::EMDFPolyType type = kMonomials, Option_t* option = """"); virtual~TMultiDimFit(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddRow(const Double_t* x, Double_t D, Double_t E = 0); virtual voidAddTestRow(const Double_t* x, Double_t D, Double_t E = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """")MENU ; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:13044,parameteriz,parameterization,13044,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,3,['parameteriz'],['parameterization']
Modifiability,"y ; of {splitCat1} and {splitCat2}; and split {parameter} with that RooSuperCategory. Here is an example of a builder configuration that uses several of the options discussed; above:; . physModels = pdf; splitCats = tagCat runBlock; pdf = tagCat : signalRes,bkgRes ; runBlock : fudgeFactor ; tagCat,runBlock : kludgeParam; ; How to enter configuration data. The prototype builder configuration returned by ; RooSimPdfBuilder::createProtoBuildConfig() is a pointer to a RooArgSet filled with; initially blank RooStringVars named physModels,splitCats and one additional for each; PDF supplied to the RooSimPdfBuilders constructor (with the same name); . In macro code, the easiest way to assign new values to these RooStringVars; is to use RooArgSets array operator and the RooStringVars assignment operator, e.g.; . (*config)[""physModels""] = ""Blah"" ;; . To enter multiple splitting rules simply separate consecutive rules by whitespace; (not newlines), e.g. ; . (*config)[""physModels""] = ""Blah "" // << note trailing space here; ""Blah 2"" ;; . In this example, the C++ compiler will concatenate the two string literals (without inserting; any whitespace), so the extra space after 'Blah' is important here.; ; ; Alternatively, you can read the configuration from an ASCII file, as you can; for any RooArgSet using RooArgSet::readFromFile(). In that case the ASCII file; can follow the syntax of the examples above and the '\\' line continuation ; sequence can be used to fold a long splitting rule over multiple lines.; . RooArgSet* config = builder.createProtoBuildConfig() ;; config->readFromFile(""config.txt"") ;; --- config.txt ---------------- ; physModels = pdf; splitCats = tagCat; pdf = tagCat : bogusPar; -------------------------------; ; Working with multiple prototype PDFs. It is also possible to build a RooSimultaneous PDF from multiple PDF prototypes.; This is appropriate for cases where the input prototype PDF would otherwise be ; a RooSimultaneous PDF by itself. In such cases we don'",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:6539,config,config,6539,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,7,['config'],['config']
Modifiability,"y = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProofMonSender; enum  EConfigBits { kSendSummary = (1ULL << ( 15 )); , kSendDataSetInfo = (1ULL << ( 16 )); , kSendFileInfo = (1ULL << ( 17 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TProofMonSender; Int_t fDataSetInfoVrs;  ; Int_t fFileInfoVrs;  ; Int_t fSummaryVrs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProofMonSenderSQL.h>. Inheritance diagram for TProofMonSenderSQL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofMonSenderSQL(). TProofMonSenderSQL::TProofMonSenderSQL ; (; const char * ; serv, . const char * ; user, . const char * ; pass, . const char * ; table = ""proof.proofquerylog"", . const char * ; dstab = 0, . const char * ; filestab = 0 . ). Main constructor. ; Definition at line 37 of file TProofMonSenderSQL.cxx. ◆ ~TProofMonSenderSQL(). TProofMonSenderSQL::~TProofMonSenderSQL ; (; ). override . Destructor. ; Definition at line 75 of file TProofMonSenderSQL.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofMonSenderSQL::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofMonSenderSQL::C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSenderSQL.html:12402,inherit,inherited,12402,doc/master/classTProofMonSenderSQL.html,https://root.cern,https://root.cern/doc/master/classTProofMonSenderSQL.html,2,['inherit'],['inherited']
Modifiability,"y = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void Add (TObject *obj)=0;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; void Clear (Option_t *option="""") override=0;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Delete (Option_t *option="""") override=0;  Delete this object. ;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCollection.html:2486,inherit,inherit,2486,doc/v632/classTCollection.html,https://root.cern,https://root.cern/doc/v632/classTCollection.html,2,['inherit'],['inherit']
Modifiability,"y = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static RooArgSet _emptySet;  Supports named argument constructor. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions;  RooChi2Var (const char *name, const char *title, RooAbsReal &func, RooDataHist &data, const RooArgSet &projDeps, FuncMode funcMode, RooAbsTestStatistic::Configuration const &cfg, RooDataHist::ErrorType etype);  . Additional Inherited Members;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:65444,inherit,inherited,65444,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"y Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTreeFormulaManager() [1/2]. TTreeFormulaManager::TTreeFormulaManager ; (; const TTreeFormulaManager & ; ). privatedelete . ◆ TTreeFormulaManager() [2/2]. TTreeFormulaManager::TTreeFormulaManager ; (; ). Tree FormulaManger default constructor. ; Definition at line 30 of file TTreeFormulaManager.cxx. ◆ ~TTreeFormulaManager(). TTreeFormulaManager::~TTreeFormulaManager ; (; ). override . Tree FormulaManager default destructor. ; Definition at line 49 of file TTreeFormulaManager.cxx. Member Function Documentation. ◆ Add(). void TTreeFormulaManager::Add ; (; TTreeFormula * ; adding). virtual . Add a new formula to the list of formulas managed The manager of the formula will be changed and the old one will be deleted if it is empty. ; Definition at line 71 of file TTreeFormulaManager.cxx. ◆ AddVarDims(). void TTreeFormulaManager::AddVarDims ; (; Int_t ; virt_dim). protectedvirtual . Add a variable dimension. ; Definition at line 96 of file TTreeFormulaManager.cxx. ◆ CancelDimension(). void TTreeFormulaManager::CancelDimension ; (; Int_t ; virt_dim). protectedvirtual . Cancel a dimension. ; This is usually called when an out-of-bounds index is used. ; Definition at line 105 of file TTreeFormulaManager.cxx. ◆ Class(). static TClass * TTreeFormulaManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTreeFormulaManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTreeFormulaManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 73 of file TTreeFormulaManager.h. ◆ DeclFileName(). static const char * TTreeFormulaManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 73 of file TTreeFormulaManager.h. ◆ EnableMultiVarDims(). void TTreeFormulaManager::EnableM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormulaManager.html:13224,variab,variable,13224,doc/master/classTTreeFormulaManager.html,https://root.cern,https://root.cern/doc/master/classTTreeFormulaManager.html,1,['variab'],['variable']
Modifiability,"y Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * RooTreeData::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooTreeData::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooTreeData::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 36 of file RooTreeData.h. ◆ DeclFileName(). static const char * RooTreeData::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 36 of file RooTreeData.h. ◆ GetTree(). const TTree * RooTreeData::GetTree ; (; ); const. inline . Definition at line 28 of file RooTreeData.h. ◆ IsA(). TClass * RooTreeData::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsData.; Definition at line 36 of file RooTreeData.h. ◆ Streamer(). void RooTreeData::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class RooAbsData. ; Reimplemented from RooAbsData. ◆ StreamerNVirtual(). void RooTreeData::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 36 of file RooTreeData.h. Member Data Documentation. ◆ _blindString. TString RooTreeData::_blindString. private . Blinding string (optionally read from ASCII files) ; Definition at line 34 of file RooTreeData.h. ◆ _tree. TTree* RooTreeData::_tree = nullptr. private . TTree holding the data points. ; Definition at line 32 of file RooTreeData.h. ◆ _truth. RooArgSet RooTreeData::_truth. private . Truth variables. ; Definition at line 33 of file RooTreeData.h. Libraries for RooTreeData:. [legend]; The documentation for this class was generated from the following file:; roofit/roofitcore/inc/RooFitLegacy/RooTreeData.h. RooTreeData. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:10 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeData.html:30100,variab,variables,30100,doc/master/classRooTreeData.html,https://root.cern,https://root.cern/doc/master/classRooTreeData.html,1,['variab'],['variables']
Modifiability,"y Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ FlagMap. typedef std::map<const std::string, FlagSet> RooLagrangianMorphFunc::FlagMap. Definition at line 83 of file RooLagrangianMorphFunc.h. ◆ FlagSet. typedef std::map<const std::string, int> RooLagrangianMorphFunc::FlagSet. Definition at line 81 of file RooLagrangianMorphFunc.h. ◆ ParamMap. typedef std::map<const std::string, ParamSet> RooLagrangianMorphFunc::ParamMap. Definition at line 82 of file RooLagrangianMorphFunc.h. ◆ ParamSet. typedef std::map<const std::string, double> RooLagrangianMorphFunc::ParamSet. Definition at line 80 of file RooLagrangianMorphFunc.h. Constructor & Destructor Documentation. ◆ RooLagrangianMorphFunc() [1/3]. RooLagrangianMorphFunc::RooLagrangianMorphFunc ; (; ). Definition at line 1985 of file RooLagrangianMorphFunc.cxx. ◆ RooLagrangianMorphFunc() [2/3]. RooLagrangianMorphFunc::RooLagrangianMorphFunc ; (; const char * ; name, . const char * ; title, . const Config & ; config . ). constructor with proper arguments ; Definition at line 1823 of file RooLagrangianMorphFunc.cxx. ◆ RooLagrangianMorphFunc() [3/3]. RooLagrangianMorphFunc::RooLagrangianMorphFunc ; (; const RooLagrangianMorphFunc & ; other, . const char * ; newName . ). copy constructor ; Definition at line 1947 of file RooLagrangianMorphFunc.cxx. ◆ ~RooLagrangianMorphFunc(). RooLagrangianMorphFunc::~RooLagrangianMorphFunc ; (; ). override . default destructor ; Definition at line 1996 of file RooLagrangianMorphFunc.cxx. Member Function Documentation. ◆ analyticalIntegralWN(). double RooLagrangianMorphFunc::analyticalIntegralWN ; (; Int_t ; code, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. overridevirtual . Retrieve the matrix of coefficients. ; Reimplemented from RooAbsReal.; Definition at line 2955 of file RooLagrangianMorphFunc.cxx. ◆ binBoundaries(). std::list< double > * RooLagrangianMorphFunc::binBoundaries ; (; RooAbsRealLValue & ; obs, . double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:71658,config,config,71658,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['config'],['config']
Modifiability,"y GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGWin32VirtualXProxy.cxx:249; TProcessID.h; ReAllocCharFun_tchar *(* ReAllocCharFun_t)(char *, size_t, size_t)Definition TStorage.h:30; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TBuffer::TBufferTBuffer()Definition TBuffer.h:59; TBuffer::SetWriteModevoid SetWriteMode()Set buffer in write mode.Definition TBuffer.cxx:315; TBuffer::ByteSwapBufferBool_t ByteSwapBuffer(Long64_t n, EDataType type)Byte-swap N primitive-elements in the buffer.Definition TBuffer.cxx:392; TBuffer::fCacheStackCacheList_t fCacheStackRealloc function to be used when extending the buffer.Definition TBuffer.h:56; TBuffer::ReadProcessIDvirtual TProcessID * ReadProcessID(UShort_t pidf)=0Return the current Process-ID.Definition TBuffer.cxx:344; TBuffer::WriteProcessIDvirtual UShort_t WriteProcessID(TProcessID *pid)=0Always return 0 (current processID).Definition TBuffer.cxx:353; TBuffer::fBufSizeInt_t fBufSizeDefinition TBuffer.h:50; TBuffer::SetParentvoid SetParent(TObject *parent)Set parent owning this buffer.Definition TBuffer.cxx:270; TBuffer::GetParentTObject * GetParent() constReturn pointer to parent of this buffer.Definition TBuffer.cxx:262; TBuffer::GetCurrentchar * GetCurrent() constDefinition TBuffer.h:97; TBuffer::Expandvoid Expand(Int_t newsize, Bool_t copy=kTRUE)Expand (or shrink) the I/O buffer to newsize bytes.Definition TBuffer.cxx:223; TBuffer::kIsOwner@ kIsOwnerDefinition TBuffer.h:75; TBuffer::SetBuffervoid SetBuffer(void *buf, UInt_t bufsiz=0, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBuffer_8cxx_source.html:17246,extend,extending,17246,doc/master/TBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBuffer_8cxx_source.html,1,['extend'],['extending']
Modifiability,"y SQL implementation. ;  ; void WriteFastArrayString (const Char_t *c, Long64_t n) final;  WriteFastArray SQL implementation. ;  ; void WriteFloat (Float_t f) final;  Operator<<. ;  ; void WriteInt (Int_t i) final;  Operator<<. ;  ; void WriteLong (Long_t l) final;  Operator<<. ;  ; void WriteLong64 (Long64_t l) final;  Operator<<. ;  ; void WriteShort (Short_t s) final;  Operator<<. ;  ; void WriteStdString (const std::string *s) final;  Write a std::string. ;  ; virtual void WriteStdString (const std::string *s)=0;  Write std::string to TBuffer. ;  ; virtual void WriteStdString (std::string &s);  ; void WriteTString (const TString &s) final;  Write a TString. ;  ; void WriteUChar (UChar_t c) final;  Operator<<. ;  ; void WriteUInt (UInt_t i) final;  Operator<<. ;  ; void WriteULong (ULong_t l) final;  Operator<<. ;  ; void WriteULong64 (ULong64_t l) final;  Operator<<. ;  ; void WriteUShort (UShort_t s) final;  Operator<<. ;  ;  Public Member Functions inherited from TBufferFile;  TBufferFile (TBuffer::EMode mode);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ;  ~TBufferFile () override;  Delete an I/O buffer object. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *object) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; Int_t ApplySequenceVecPtr (const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL.html:7316,inherit,inherited,7316,doc/master/classTBufferSQL.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL.html,1,['inherit'],['inherited']
Modifiability,"y TTree::Draw to automatically weight each; selected entry in the resulting histogram. For example the equivalent of:. T.Draw(""x"", ""w""). is:. T.SetWeight(w);; T.Draw(""x"");. This function is redefined by TChain::SetWeight. In case of a; TChain, an option ""global"" may be specified to set the same weight; for all trees in the TChain instead of the default behaviour; using the weights of each tree in the chain (see TChain::SetWeight). void Show(Long64_t entry = -1, Int_t lenmax = 20); Print values of all active leaves for entry. if entry==-1, print current entry (default); if a leaf is an array, a maximum of lenmax elements is printed. void StartViewer(); Start the TTreeViewer on this tree. ww is the width of the canvas in pixels; wh is the height of the canvas in pixels. void StopCacheLearningPhase(); stop the cache learning phase. void Streamer(TBuffer& ); Stream a class object. Int_t UnbinnedFit(const char* funcname, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Unbinned fit of one or more variable(s) from a tree. funcname is a TF1 function. See TTree::Draw for explanations of the other parameters. Fit the variable varexp using the function funcname using the; selection cuts given by selection. The list of fit options is given in parameter option.; option = ""Q"" Quiet mode (minimum printing); = ""V"" Verbose mode (default is between Q and V); = ""E"" Perform better Errors estimation using Minos technique; = ""M"" More. Improve fit results. You can specify boundary limits for some or all parameters via; func->SetParLimits(p_number, parmin, parmax);; if parmin>=parmax, the parameter is fixed; Note that you are not forced to fix the limits for all parameters.; For example, if you fit a function with 6 parameters, you can do:; func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; func->SetParLimits(4,-10,-4);; func->SetParLimits(5, 1,1);; With this setup, parameters 0->3 can vary freely; Parameter 4 has ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:137918,variab,variable,137918,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,2,['variab'],['variable']
Modifiability,"y a plot variable"" << std::endl;; 2873 return true;; 2874 }; 2875 ; 2876 // check that the plot variable is not derived; 2877 if(!dynamic_cast<RooAbsRealLValue*>(var)) {; 2878 coutE(Plotting) << ClassName() << ""::"" << GetName() << "":plotOn: cannot plot variable \""""; 2879 << var->GetName() << ""\"" of type "" << var->ClassName() << std::endl;; 2880 return true;; 2881 }; 2882 ; 2883 // check if we actually depend on the plot variable; 2884 if(!this->dependsOn(*var)) {; 2885 coutE(Plotting) << ClassName() << ""::"" << GetName() << "":plotOn: WARNING: variable is not an explicit dependent: ""; 2886 << var->GetName() << std::endl;; 2887 }; 2888 ; 2889 return false ;; 2890}; 2891 ; 2892 ; 2893 ; 2894 ; 2895////////////////////////////////////////////////////////////////////////////////; 2896/// Utility function for plotOn() that constructs the set of; 2897/// observables to project when plotting ourselves as function of; 2898/// 'plotVar'. 'allVars' is the list of variables that must be; 2899/// projected, but may contain variables that we do not depend on. If; 2900/// 'silent' is cleared, warnings about inconsistent input parameters; 2901/// will be printed.; 2902 ; 2903void RooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars,; 2904 RooArgSet& projectedVars, bool silent) const; 2905{; 2906 cxcoutD(Plotting) << ""RooAbsReal::makeProjectionSet("" << GetName() << "") plotVar = "" << plotVar->GetName(); 2907 << "" allVars = "" << (allVars?(*allVars):RooArgSet()) << std::endl ;; 2908 ; 2909 projectedVars.removeAll() ;; 2910 if (!allVars) return ;; 2911 ; 2912 // Start out with suggested list of variables; 2913 projectedVars.add(*allVars) ;; 2914 ; 2915 // Take out plot variable; 2916 RooAbsArg *found= projectedVars.find(plotVar->GetName());; 2917 if(found) {; 2918 projectedVars.remove(*found);; 2919 ; 2920 // Take out eventual servers of plotVar; 2921 std::unique_ptr<RooArgSet> plotServers{plotVar->getObservables(&projectedVars)};; 2922 for(RooAbsArg * ps : *p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:126243,variab,variables,126243,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,2,['variab'],['variables']
Modifiability,"y arr into TArrayD, i.e. ;  ; Double_t At (Int_t i) const;  ; void Copy (TArrayD &array) const;  ; Double_t * GetArray ();  ; const Double_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TClass * IsA () const override;  ; TArrayD & operator= (const TArrayD &rhs);  TArrayD assignment operator. ;  ; Double_t & operator[] (Int_t i);  ; Double_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Double_t val);  ; void Set (Int_t n) override;  Set size of this array to n doubles. ;  ; void Set (Int_t n, const Double_t *array);  Set size of this array to n doubles and set the contents This function should not be called if the array was declared via Adopt. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void Streamer (TBuffer &) override;  Stream a TArrayD object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Double_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  . Additional Inherited Members;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrayD.html:1812,inherit,inherited,1812,doc/master/classTArrayD.html,https://root.cern,https://root.cern/doc/master/classTArrayD.html,1,['inherit'],['inherited']
Modifiability,"y be useful in case some of the tracked observables are in binned datasets where each observable propagates a valueDirty flag when an event is loaded even though usually only one observable actually changes. ; Definition at line 23 of file RooChangeTracker.h. Public Member Functions;  RooChangeTracker ()=default;  ;  RooChangeTracker (const char *name, const char *title, const RooArgSet &trackSet, bool checkValues=false);  Constructor. ;  ;  RooChangeTracker (const RooChangeTracker &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; bool hasChanged (bool clearState);  Returns true if state has changed since last call with clearState=true. ;  ; TClass * IsA () const override;  ; RooArgSet parameters () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChangeTracker.html:1618,inherit,inherited,1618,doc/master/classRooChangeTracker.html,https://root.cern,https://root.cern/doc/master/classRooChangeTracker.html,1,['inherit'],['inherited']
Modifiability,"y constructible and destructible. ;  ; static constexpr int kTraitTypeChecksum = 0x08;  The TClass checksum is set and valid. ;  ;  Protected Member Functions inherited from ROOT::Experimental::RClassField; std::size_t AppendImpl (const void *from) final;  Operations on values of complex types, e.g. ;  ; std::unique_ptr< RFieldBase > CloneImpl (std::string_view newName) const final;  Called by Clone(), which additionally copies the on-disk ID. ;  ; void ConstructValue (void *where) const final;  Constructs value in a given location of size at least GetValueSize(). Called by the base class' CreateValue(). ;  ; std::unique_ptr< RDeleter > GetDeleter () const final;  ; void OnConnectPageSource () final;  Called by ConnectPageSource() once connected; derived classes may override this as appropriate. ;  ; void ReadGlobalImpl (NTupleSize_t globalIndex, void *to) final;  ; void ReadInClusterImpl (RClusterIndex clusterIndex, void *to) final;  ;  Protected Member Functions inherited from ROOT::Experimental::RFieldBase; size_t AddReadCallback (ReadCallback_t func);  Set a user-defined function to be called after reading a value, giving a chance to inspect and/or modify the value object. ;  ; std::size_t Append (const void *from);  Write the given value into columns. ;  ; void Attach (std::unique_ptr< RFieldBase > child);  Add a new subfield to the list of nested fields. ;  ; void AutoAdjustColumnTypes (const RNTupleWriteOptions &options);  When connecting a field to a page sink, the field's default column representation is subject to adjustment according to the write options. ;  ; virtual void CommitClusterImpl ();  ; void * CreateObjectRawPtr () const;  Factory method for the field's type. The caller owns the returned pointer. ;  ; const ColumnRepresentation_t & EnsureCompatibleColumnTypes (const RNTupleDescriptor &desc, std::uint16_t representationIndex) const;  Returns the on-disk column types found in the provided descriptor for fOnDiskId and the given representation index",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html:7955,inherit,inherited,7955,doc/master/classROOT_1_1Experimental_1_1RField.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html,1,['inherit'],['inherited']
Modifiability,"y contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Member Functions; void installFormulaOrThrow (const std::string &formulaa);  Check that the formula compiles, and also fulfills the assumptions. ;  ; std::string processFormula (std::string origFormula) const;  Process given formula by replacing all ordinal and name references by x[i], where i matches the position of the argument in _origList. ;  ; std::string reconstructFormula (std::string internalRepr) const;  From the internal representation, construct a formula by replacing all index place holders with the names of the variables that are being used to evaluate it. ;  ; RooArgList usedVariables () const;  Analyse internal formula to find out which variables are actually in use. ;  . Private Attributes; std::vector< bool > _isCategory;  ! Whether an element of the _origList is a category. ;  ; RooArgList _origList;  ! Original list of dependents ;  ; std::unique_ptr< TFormula > _tFormula;  ! The formula used to compute values ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormula.html:14179,variab,variables,14179,doc/master/classRooFormula.html,https://root.cern,https://root.cern/doc/master/classRooFormula.html,1,['variab'],['variables']
Modifiability,"y dir locker; TPMERegexp*fReInvalidRegular expression matching invalid dataset URIs; TStringfSandboxPROOF sandbox root dir; TStringfSelectionInternal variable to pass drawing options; TServerSocket*fServSockServer socket to accept call backs; TStringfSockPathUNIX socket path for communication with workers; TStringfVarExpInternal variable to pass drawing options; static Int_tfgWrksMaxMax number of workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofLite(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. ~TProofLite(); Destructor. Int_t GetNumberOfWorkers(const char* url = 0); Static method to determine the number of workers giving priority to users request.; Otherwise",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofLite.html:28266,config,config,28266,root/html534/TProofLite.html,https://root.cern,https://root.cern/root/html534/TProofLite.html,6,['config'],"['config', 'configurations']"
Modifiability,"y expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class RooAddGenContext;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:75665,inherit,inherited,75665,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,4,['inherit'],['inherited']
Modifiability,"y flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGVerticalLayout;  TGVerticalLayout (const TGVerticalLayout &gvl);  ; TGVerticalLayout & operator= (const TGVerticalLayout &gvl);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGVerticalLayout; TList * fList;  ; TGCompositeFrame * fMain;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . #include <TGLayout.h>. Inheritance diagram for TGHorizontalLayout:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGHorizontalLayout(). TGHorizontalLayout::TGHorizontalLayout ; (; TGCompositeFrame * ; main). inline . Definition at line 189 of file TGLayout.h. Member Function Documentation. ◆ Class(). static TClass * TGHorizontalLayout::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGHorizontalLayout::Class_Name ; (; ). st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHorizontalLayout.html:11117,inherit,inherited,11117,doc/master/classTGHorizontalLayout.html,https://root.cern,https://root.cern/doc/master/classTGHorizontalLayout.html,3,['inherit'],['inherited']
Modifiability,"y flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClonesArray * fHits;  ; Int_t fNofEntries;  ; Int_t fNofHits;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/clonesA_Event.h>. Inheritance diagram for TUsrHitBuffer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TUsrHitBuffer(). TUsrHitBuffer::TUsrHitBuffer ; (; Int_t ; maxent = 10). Definition at line 16 of file clonesA_Event.cxx. ◆ ~TUsrHitBuffer(). virtual TUsrHitBuffer::~TUsrHitBuffer ; (; ). inlinevirtual . Definition at line 24 of file clonesA_Event.h. Member Function Documentation. ◆ AddHit(). TUsrHit * TUsrHitBuffer::AddHit ; (; Int_t ; ev). Definition at line 25 of file clonesA_Event.cxx. ◆ Class(). static TClass * TUsrHitBuffer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TUsrH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrHitBuffer.html:9706,inherit,inherited,9706,doc/master/classTUsrHitBuffer.html,https://root.cern,https://root.cern/doc/master/classTUsrHitBuffer.html,2,['inherit'],['inherited']
Modifiability,"y flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fClassName;  ; Long64_t fObjId;  ; Version_t fVersion;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSQLObjectData.h>. Inheritance diagram for TSQLObjectInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSQLObjectInfo() [1/2]. TSQLObjectInfo::TSQLObjectInfo ; (; ). Definition at line 45 of file TSQLObjectData.cxx. ◆ TSQLObjectInfo() [2/2]. TSQLObjectInfo::TSQLObjectInfo ; (; Long64_t ; objid, . const char * ; classname, . Version_t ; version . ). Definition at line 51 of file TSQLObjectData.cxx. ◆ ~TSQLObjectInfo(). TSQLObjectInfo::~TSQLObjectInfo ; (; ). override . Definition at line 58 of file TSQLObjectData.cxx. Member Function Documentation. ◆ Class(). static TClass * TSQLObjectInfo::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSQLObjectInfo::Class_Name ; (; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLObjectInfo.html:9884,inherit,inherited,9884,doc/master/classTSQLObjectInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLObjectInfo.html,2,['inherit'],['inherited']
Modifiability,"y flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t InitGraphics ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TContextMenu * fContextMenu {nullptr};  Browser's timer. ;  ; TBrowserImp * fImp {nullptr};  ; Bool_t fNeedRefresh {kFALSE};  Context menu pointer. ;  ; TBrowserTimer * fTimer {nullptr};  Window system specific browser implementation. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TBrowser (const TBrowser &)=delete;  The last TObject selected by user. ;  ; TBrowser & operator= (const TBrowser &)=delete;  . Private Attributes; TObject * fLastSelectedObject {nullptr};  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TBrowser.h>. Inheritance diagram for TBrowser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TBrowser::EStatusBits. EnumeratorkNoHidden . Definition at line 54 of file TBrowser.h. Constructor & Destructor Documentation. ◆ TBrowser() [1/10]. TBrowser::TBrowser ; (; const TBrowser & ; ). privatedelete . The last TObject selected by user. . ◆ TBrowser() [2/10]. TBrowser::TBrowser ; (; const char * ; name = ""Browser"", . const char * ; title = ""ROOT Object Browser"", . TBrowserImp * ; extimp = nullptr, . Option_t * ; opt = """" . ). Create a new browser with a name, title. ; Width and height are by default set to 640x400 and (optionally) adjusted by the screen factor (depending on Rint.Canvas.UseScreenFactor to be true or false, default is true). ; Definition at line 136 of file TBrowser.cxx. ◆ TBrowser() [3/10]. TBrowser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowser.html:15889,inherit,inherited,15889,doc/master/classTBrowser.html,https://root.cern,https://root.cern/doc/master/classTBrowser.html,1,['inherit'],['inherited']
Modifiability,"y flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; float fPt {0};  ; float fX {0};  ; float fY {0};  ; float fZ {0};  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for RecHit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RecHit(). RecHit::RecHit ; (; float ; pt, . float ; x, . float ; y, . float ; z . ). inline . Definition at line 96 of file collection_proxies.C. Member Function Documentation. ◆ Class(). static TClass * RecHit::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RecHit::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RecHit::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 97 of file collection_proxies.C. ◆ DeclFileName(). static const char * RecHit::DeclFileName ; (; ). inlinestatic . ReturnsName of the file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRecHit.html:9598,inherit,inherited,9598,doc/master/classRecHit.html,https://root.cern,https://root.cern/doc/master/classRecHit.html,2,['inherit'],['inherited']
Modifiability,y flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttAxis; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; EAxesMode fAxesMode;  ; Bool_t fDrawCenter;  ; Bool_t fDrawOrigin;  ; ELabMode fLabMode;  ; TEveProjectionManager * fManager;  ; Bool_t fUseColorSet;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protec,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionAxes.html:32204,inherit,inherited,32204,doc/master/classTEveProjectionAxes.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionAxes.html,1,['inherit'],['inherited']
Modifiability,"y for functions and pdfs ;  ; file  rf104_classfactory.py;   Basic functionality: the class factory for functions and pdfs ;  ; file  rf105_funcbinding.C;   Basic functionality: binding ROOT math functions as RooFit functions and pdfs ;  ; file  rf105_funcbinding.py;   'BASIC FUNCTIONALITY' RooFit tutorial macro #105 Demonstration of binding ROOT Math functions as RooFit functions and pdfs ;  ; file  rf106_plotdecoration.C;   Basic functionality: adding boxes with parameters, statistics to RooPlots, decorating with arrows, text etc... ;  ; file  rf106_plotdecoration.py;   Basic functionality: adding boxes with parameters to RooPlots and decorating with arrows, etc... ;  ; file  rf107_plotstyles.C;   Basic functionality: various plotting styles of data, functions in a RooPlot ;  ; file  rf107_plotstyles.py;   Basic functionality: demonstration of various plotting styles of data, functions in a RooPlot ;  ; file  rf108_plotbinning.C;   Basic functionality: plotting unbinned data with alternate and variable binnings ;  ; file  rf108_plotbinning.py;   Basic functionality: plotting unbinned data with alternate and variable binnings ;  ; file  rf109_chi2residpull.C;   Basic functionality: Calculating chi^2 from histograms and curves in RooPlots, making histogram of residual and pull distributions ;  ; file  rf109_chi2residpull.py;   'BASIC FUNCTIONALITY' RooFit tutorial macro #109 Calculating chi^2 from histograms and curves in ROOT.RooPlots, making histogram of residual and pull distributions ;  ; file  rf110_normintegration.C;   Basic functionality: normalization and integration of pdfs, construction of cumulative distribution monodimensional functions ;  ; file  rf110_normintegration.py;   Basic functionality: examples on normalization and integration of pdfs, construction of cumulative distribution functions from monodimensional pdfs ;  ; file  rf111_derivatives.C;   Basic functionality: numerical 1st,2nd and 3rd order derivatives w.r.t. ;  ; file  rf111_derivatives.py",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:1994,variab,variable,1994,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['variab'],['variable']
Modifiability,"y from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy c;  ; RooRealProxy m;  ; RooRealProxy m0;  ; RooRealProxy p;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgusBG.html:68289,config,configuration,68289,doc/master/classRooArgusBG.html,https://root.cern,https://root.cern/doc/master/classRooArgusBG.html,1,['config'],['configuration']
Modifiability,y function should come from a uniform proposal distribution ; Definition at line 63 of file ProposalHelper.h. ◆ SetUpdateProposalParameters(). virtual void RooStats::ProposalHelper::SetUpdateProposalParameters ; (; bool ; updateParams). inlinevirtual . Definition at line 52 of file ProposalHelper.h. ◆ SetVariables() [1/3]. virtual void RooStats::ProposalHelper::SetVariables ; (; const RooArgList & ; vars). inlinevirtual . Definition at line 58 of file ProposalHelper.h. ◆ SetVariables() [2/3]. virtual void RooStats::ProposalHelper::SetVariables ; (; RooArgList & ; vars). inlinevirtual . Definition at line 55 of file ProposalHelper.h. ◆ SetVariables() [3/3]. virtual void RooStats::ProposalHelper::SetVariables ; (; RooArgSet & ; vars). inlinevirtual . Definition at line 85 of file ProposalHelper.h. ◆ SetWidthRangeDivisor(). virtual void RooStats::ProposalHelper::SetWidthRangeDivisor ; (; double ; divisor). inlinevirtual . set what divisor we will use when dividing the range of a variable to determine the width of the proposal function for each dimension e.g. ; divisor = 6 for sigma = 1/6th ; Definition at line 76 of file ProposalHelper.h. ◆ Streamer(). void RooStats::ProposalHelper::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void RooStats::ProposalHelper::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 127 of file ProposalHelper.h. Member Data Documentation. ◆ fCacheSize. Int_t RooStats::ProposalHelper::fCacheSize = -1. protected . for generating proposals from PDFs ; Definition at line 110 of file ProposalHelper.h. ◆ fClues. RooDataSet* RooStats::ProposalHelper::fClues = nullptr. protected . data set of clues ; Definition at line 106 of file ProposalHelper.h. ◆ fCluesFrac. double RooStats::ProposalHelper::fCluesFrac = -1. protected . what fraction of the PDF integral comes from clues ; Definition at line 113 of file ProposalHelper.h,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ProposalHelper.html:17436,variab,variable,17436,doc/master/classRooStats_1_1ProposalHelper.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ProposalHelper.html,1,['variab'],['variable']
Modifiability,"y identifier in KeysTables ;  ; Long64_t fObjId {-1};  ! stored object identifier ;  ;  Protected Attributes inherited from TKey; char * fBuffer;  Object buffer. ;  ; TBuffer * fBufferRef;  Pointer to the TBuffer object. ;  ; TString fClassName;  Object Class name. ;  ; Short_t fCycle;  Cycle number. ;  ; TDatime fDatime;  Date/Time of insertion in file. ;  ; Short_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir ;  ; Long64_t fSeekKey;  Location of object on file. ;  ; Long64_t fSeekPdir;  Location of parent directory on file. ;  ; Int_t fVersion;  Key version identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TKeySQL (const TKeySQL &)=delete;  ; TKeySQL & operator= (const TKeySQL &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TKeySQL.h>. Inheritance diagram for TKeySQL:. This browser is not able to sho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeySQL.html:16880,inherit,inherited,16880,doc/master/classTKeySQL.html,https://root.cern,https://root.cern/doc/master/classTKeySQL.html,1,['inherit'],['inherited']
Modifiability,"y identifying the referenced object among those written by that process (see Format of the DATA for a TObject object). Similarly, every persistent reference to that object (a TRef Object, see Format of the DATA for a TRef object) also contains ""pidf"" and ""fUniqueID"" fields with the same value, thereby uniquely determining the referenced object (which need not even be in the same file). In the case of an array of references (a TRefArray object, see Format of the DATA for a TRefArray object), there is one ""pidf"" value for the entire array, and a separate ""fUniqueID"" value for each reference. For further information, see the above URL. Some useful container classes. TObjArray and TClonesArray; The TObjArray class can be used to support an array of objects. The objects need not be of the same type, but each object must be of a class type that inherits from TObject. We have already seen a specific example of the use of TObjArray, in the StreamerInfo record, where it is used to hold an array of TStreamerElement objects, each of which is of a class inheriting from TStreamerElement, which in turn inherits from TObject.; The TClonesArray class is a specialization of the TObjArray class for holding an array of objects that are all of the same type. The format of a TClonesArray object is given in Format of the DATA for a TClonesArray object.; There are two great advantages in the use of TClonesArray over TObjArray when the objects all will be of the same class:. Memory for the objects will be allocated only once for the entire array, rather than the per-object allocation for TObjArray. This can be done because all the objects are the same size.; In the case of TObjArray, the stored objects are written sequentially. However, in a TClonesArray, by default, each object is split one level deep into its base class(es) and data members, and each of these members is written sequentially for all objects in the array before the next member is written. This has two advantages:; Greater c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootio.html:12718,inherit,inheriting,12718,doc/master/rootio.html,https://root.cern,https://root.cern/doc/master/rootio.html,2,['inherit'],"['inheriting', 'inherits']"
Modifiability,"y in the download ROOT server.; other procedures. cling-periodic; cling-clone-repo; cling-repo-sync; root-test; root-staticAnalysis-master. Basic operations; Understanding information for a single build; The Status shows a summary for the build. In case of multi-configuration jobs it it also show the configuration matrix that can be used to select a contrete configuration. See the following figure: ; For each individual build (select one cell in the matrix) the following information is provided:. Status. Shows a summary of the build (changes, errors, warnings, git revision, test results, etc.); Changes. Shows the details about the changes since the last build.; Console Output/View as plain text. Shows the full log of the build including all the steps (checkout, configuration, build, running tests, etc.); Parsed Console Output. The same as previous but with warnings and errors selected.; Parameters. The parameters used for the job.; Environment variables. A table with all the environment variables defined for the job.; Test Result. An interface to the CTest tests results. All test, failing and not failing can be shown with their output. Starting and stopping jobs. New jobs can be launched at any time independently of their automatic scheduling (time based or triggered by changes in the GIT repository). This is done by selecting Build with Parameters from the selected project page. This only enabled when your are logged in. Typically the default parameters should be sufficient unless you want to launch a special job.; Jobs (single or multi-configuration) can be stopped by pressing the small cross in the job build history or in the job status page. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how-use-root-jenkins.html:4981,variab,variables,4981,d/how-use-root-jenkins.html,https://root.cern,https://root.cern/d/how-use-root-jenkins.html,1,['variab'],['variables']
Modifiability,"y interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrumTransform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 1D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 18 of file TSpectrumTransform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:1451,adapt,adaptive,1451,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['adapt'],['adaptive']
Modifiability,"y is specified, the client-server links between the cloned; list elements and the cloned external dependents are reconnected to; each other, making the snapshot a completely self-contained entity. Bool_t addServerClonesToList(const RooAbsArg& var); Add clones of servers of given argument to list. RooAbsCollection & operator=(const RooAbsCollection& other); The assignment operator sets the value of any argument in our set; that also appears in the other set. RooAbsCollection & assignValueOnly(const RooAbsCollection& other, Bool_t oneSafe = kFALSE); The assignment operator sets the value of any argument in our set; that also appears in the other set. void assignFast(const RooAbsCollection& other, Bool_t setValDirty = kTRUE); Functional equivalent of operator=() but assumes this and other collection; have same layout. Also no attributes are copied. Bool_t addOwned(RooAbsArg& var, Bool_t silent = kFALSE); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list.; This method can only be called on a list that is flagged as owning; all of its contents, or else on an empty list (which will force the; list into that mode). RooAbsArg * addClone(const RooAbsArg& var, Bool_t silent = kFALSE); Add a clone of the specified argument to list. Returns a pointer to; the clone if successful, or else zero if a variable of the same name; is already in the list or the list does *not* own its variables (in; this case, try add() instead.) Calling addClone() on an empty list; forces it to take ownership of all its subsequent variables. Bool_t add(const RooAbsArg& var, Bool_t silent = kFALSE); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list; or the list owns its variables (in this case, try addClone() or addOwned() instead). Bool_t add(const RooAbsCollection& list, Bool_t silent = kFALSE); Add a collection of arguments to this c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsCollection.html:12185,variab,variable,12185,root/html532/RooAbsCollection.html,https://root.cern,https://root.cern/root/html532/RooAbsCollection.html,4,['variab'],['variable']
Modifiability,"y libraries (g3d and geom) efficiently.; Publishing to a viewer consists of the following steps:. Create / obtain viewer handle; Begin scene on viewer; Fill mandatory parts of TBuffer3D describing object; Add to viewer; Fill optional parts of TBuffer3D if requested by viewer, and add again ... repeat 3/4/5 as required; End scene on viewer. Creating / Obtaining Viewer; Create/obtain the viewer handle via local/global pad - the viewer is always bound to a TPad object at present [This may be removed as a restriction in the future] . You should perform the publishing to the viewer described below in the Paint() method of the object you attach to the pad (via Draw()) TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; gPad#define gPadDefinition TVirtualPad.h:308; TVirtualViewer3DAbstract 3D shapes viewer.Definition TVirtualViewer3D.h:34; v@ vDefinition rootcling_impl.cxx:3699; "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or Pad ""pad"" (default). The viewer is created via the plugin manager, attached to pad, and the interface returned. Begin / End Scene; Objects must be added to viewer between BeginScene/EndScene calls e.g. v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; The BeginScene call will cause the viewer to suspend redraws etc, and after the EndScene the viewer will reset the camera to frame the new scene and redraw. [x3d viewer does not support changing of scenes - objects added after the first Open/CloseScene pair will be ignored.]. Filling TBuffer3D and Adding to Viewer; The viewers behind the TVirtualViewer3D interface differ greatly in their capabilities e.g. Some know how to draw certain shapes natively (e.g. spheres/tubes in OpenGL) - others always require a raw tessellation description of points/lines/segments.; Some need the 3D object positions in the global frame, others can cope with local frames + a translation matrix - which can give considerable performance benefits. To cope with these situations the object b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualViewer3D.html:2040,plugin,plugin,2040,doc/master/classTVirtualViewer3D.html,https://root.cern,https://root.cern/doc/master/classTVirtualViewer3D.html,1,['plugin'],['plugin']
Modifiability,"y list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _eff;  Efficiency function. ;  ; RooRealProxy _pdf;  Probability Density function. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffProd.html:67669,inherit,inherited,67669,doc/master/classRooEffProd.html,https://root.cern,https://root.cern/doc/master/classRooEffProd.html,1,['inherit'],['inherited']
Modifiability,"y list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooListProxy _coefList;  ; TArrayD _limits;  ; Int_t _nBins = 0;  ; RooRealProxy _x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParametricStepFunction.html:71965,config,configuration,71965,doc/master/classRooParametricStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooParametricStepFunction.html,1,['config'],['configuration']
Modifiability,"y logs. ;  ; TClass * IsA () const override;  ; void LoadBuffer (const char *buffer);  Load a text buffer in the window. ;  ; void LoadFile (const char *file);  Load a file in the window. ;  ; void LogMessage (const char *msg, Bool_t all);  Load/append a log msg in the log frame, if open. ;  ; void NoLineEntry ();  Enable/disable the line number entry. ;  ; void Popup ();  Show log window. ;  ; void Rebuild ();  Rebuild the log info for a new entered session. ;  ; void SaveToFile ();  Save the logs to a file Only the name of the file is taken, no expansion. ;  ; void Select (Int_t id, Bool_t all=kTRUE);  actions of select all/clear all button ;  ; void SetGrepView ();  Sets the view of grep filters according to the value of checkboxes. ;  ; void SetUrl (const char *url);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressLog.html:2170,inherit,inherited,2170,doc/master/classTProofProgressLog.html,https://root.cern,https://root.cern/doc/master/classTProofProgressLog.html,1,['inherit'],['inherited']
Modifiability,"y of the result.; nfnevl : number of function evaluations performed.; ifail :; 0 Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1 maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 3 n<2 or n>15. Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. Notes:. 1.Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2.Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. References:. 1.A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2.A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. Bool_t IsInside(const Double_t* x) const; Return kTRUE if the point is inside the function range. void Paint(Option_t* option = """"); Paint this function with its current attributes. void Print(Option_t* option = """") const; Dump this function with its attributes. void ReleaseParameter(Int_t ipar); Release parameter number ipar If used in a fit, the parameter; can vary freely. The parameter limits are reset to 0,0. void Save(Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Double_t zmin, Double_t zmax); Save values of function in array fSave. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetCurrent(TF1* f1); Static function setting the current function.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF1.html:58892,adapt,adaptive,58892,root/html528/TF1.html,https://root.cern,https://root.cern/root/html528/TF1.html,4,['adapt'],['adaptive']
Modifiability,"y of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . Protected Attributes; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:31161,inherit,inherited,31161,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['inherit'],['inherited']
Modifiability,"y of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDCacheSystem.html:31396,inherit,inherited,31396,doc/master/classTDCacheSystem.html,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html,2,['inherit'],['inherited']
Modifiability,"y painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPainter = nullptr;  . #include <ROOT/RGeoPainter.hxx>. Inheritance diagram for ROOT::RGeoPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeoPainter(). RGeoPainter::RGeoPainter ; (; TGeoManager * ; manager). Definition at line 19 of file RGeoPainter.cxx. ◆ ~RGeoPainter(). RGeoPainter::~RGeoPainter ; (; ). override . Definition at line 25 of file RGeoPainter.cxx. Member Function Documentation. ◆ AddSize3D(). void ROOT::RGeoPainter::AddSize3D ; (; Int_t ; , . Int_t ; , . Int_t ;  . ). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 31 of file RGeoPainter.hxx. ◆ AddTrack(). TVirtualGeoTrack * ROOT::RGeoPainter::AddTrack ; (; Int_t ; , . Int_t ; , . TObject * ;  . ). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 32 of file RGeoPainter.hxx. ◆ AddTrackPoint(). void ROOT::RGeoPainter::Add",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:15350,inherit,inherited,15350,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,1,['inherit'],['inherited']
Modifiability,"y painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPainter = nullptr;  . #include <ROOT/RGeoPainter.hxx>. Inheritance diagram for ROOT::RGeoPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeoPainter(). RGeoPainter::RGeoPainter ; (; TGeoManager * ; manager). Definition at line 20 of file RGeoPainter.cxx. ◆ ~RGeoPainter(). RGeoPainter::~RGeoPainter ; (; ). override . Definition at line 26 of file RGeoPainter.cxx. Member Function Documentation. ◆ AddSize3D(). void ROOT::RGeoPainter::AddSize3D ; (; Int_t ; , . Int_t ; , . Int_t ;  . ). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 31 of file RGeoPainter.hxx. ◆ AddTrack(). TVirtualGeoTrack * RGeoPainter::AddTrack ; (; Int_t ; id, . Int_t ; pdgcode, . TObject * ; particle . ). overridevirtual . Implements TVirtualGeoPainter.; Definition at line 28 of file RGeoPainter.cxx. ◆ AddTrackPoint(). void RGeoPainter::AddT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeoPainter.html:15351,inherit,inherited,15351,doc/master/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeoPainter.html,1,['inherit'],['inherited']
Modifiability,"y passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user via this interface and there not calculated by Minuit. void Fcn(int& , double* , double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGenFunction interface to TMinuit FCN static function. void FcnGrad(int& , double* g, double& f, double* , int ); implementation of FCN static function used internally by TMinuit.; Adapt IMultiGradFunction interface to TMinuit FCN static function in the case of user; provided gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a free variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set a limited variable. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void RetrieveParams(); retrieve from TMinuit minimum parameter values; and errors. void RetrieveErrorMatrix(); get covariance error matrix from TMinuit; when some parameters are fixed filled the corresponding rows and column with zero's. unsigned int NCalls() const; return total number of function calls. double MinValue() const; return minimum function value. double Edm() const; return expected distance from the minimum. unsigned int NFr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuitMinimizer.html:7996,variab,variable,7996,root/html528/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html528/TMinuitMinimizer.html,3,['variab'],['variable']
Modifiability,"y prototype variables not in; 1192/// whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters.; 1193/// The user can specify a number of events to generate that will override the default. The result is a; 1194/// copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that; 1195/// are not in the prototype will be added as new columns to the generated dataset.; 1196///; 1197/// </table>; 1198///; 1199/// #### Accessing the underlying event generator; 1200/// Depending on the fit model (if it is difficult to sample), it may be necessary to change generator settings.; 1201/// For the default generator (RooFoamGenerator), the number of samples or cells could be increased by e.g. using; 1202/// myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);; 1203///; 1204/// The foam generator e.g. has the following config options:; 1205/// - nCell[123N]D; 1206/// - nSample; 1207/// - chatLevel; 1208/// \see rf902_numgenconfig.C; 1209 ; 1210RooFit::OwningPtr<RooDataSet> RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1,const RooCmdArg& arg2,; 1211 const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6); 1212{; 1213 // Select the pdf-specific commands; 1214 RooCmdConfig pc(""RooAbsPdf::generate("" + std::string(GetName()) + "")"");; 1215 pc.defineObject(""proto"",""PrototypeData"",0,nullptr) ;; 1216 pc.defineString(""dsetName"",""Name"",0,"""") ;; 1217 pc.defineInt(""randProto"",""PrototypeData"",0,0) ;; 1218 pc.defineInt(""resampleProto"",""PrototypeData"",1,0) ;; 1219 pc.defineInt(""verbose"",""Verbose"",0,0) ;; 1220 pc.defineInt(""extended"",""Extended"",0,0) ;; 1221 pc.defineInt(""nEvents"",""NumEvents"",0,0) ;; 1222 pc.defineInt(""autoBinned"",""AutoBinned"",0,1) ;; 1223 pc.defineInt(""expectedData"",""ExpectedData"",0,0) ;; 1224 pc.defineDouble(""nEventsD"",""NumEventsD"",0,-1.) ;; 1225 pc.defineString(""binnedTag"",""GenBinned"",0,"""")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:59978,config,config,59978,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['config'],['config']
Modifiability,"y remove the dataset 'dset', i.e. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProof * fProof;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TProofBenchDataSet.h>. Inheritance diagram for TProofBenchDataSet:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofBenchDataSet(). TProofBenchDataSet::TProofBenchDataSet ; (; TProof * ; proof = 0). Constructor. ; Definition at line 36 of file TProofBenchDataSet.cxx. ◆ ~TProofBenchDataSet(). TProofBenchDataSet::~TProofBenchDataSet ; (; ). inlineoverride . Definition at line 39 of file TProofBenchDataSet.h. Member Function Documentation. ◆ Class(). static TClass * TProofBenchDataSet::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofBenchDataSet::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofBenchDataSet::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 47 of file TProofBenchD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBenchDataSet.html:10465,inherit,inherited,10465,doc/master/classTProofBenchDataSet.html,https://root.cern,https://root.cern/doc/master/classTProofBenchDataSet.html,1,['inherit'],['inherited']
Modifiability,"y remove the file 'fn'. ;  . Private Attributes; TString fDestDir;  ; TPBHandleDSType * fType;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . #include <TSelHandleDataSet.h>. Inheritance diagram for TSelHandleDataSet:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSelHandleDataSet(). TSelHandleDataSet::TSelHandleDataSet ; (; ). inline . Definition at line 42 of file TSelHandleDataSet.h. ◆ ~TSelHandleDataSet(). TSelHandleDataSet::~TSelHandleDataSet ; (; ). inlineoverride . Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelHandleDataSet.html:12274,inherit,inherited,12274,doc/master/classTSelHandleDataSet.html,https://root.cern,https://root.cern/doc/master/classTSelHandleDataSet.html,2,['inherit'],['inherited']
Modifiability,"y represented by an integer. RooAbsCategory::lookupName() can be used to retrieve the corresponding state name. There is no limit for the length of the state name.; To not break old code, the old RooCatType interfaces are still available. Whenever possible, the following replacements should be used:; lookupType() \( \rightarrow \) lookupName() / lookupIndex(); typeIterator() \( \rightarrow \) range-based for loop / begin() / end(); isValidIndex(Int_t index) \( \rightarrow \) hasIndex(); isValid(const RooCatType&) \( \rightarrow \) hasIndex() / hasLabel() . Definition at line 33 of file RooAbsCategory.h. Public Types; using value_type = int;  The type used to denote a specific category state. ;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategory.html:2182,inherit,inherited,2182,doc/master/classRooAbsCategory.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategory.html,2,['inherit'],['inherited']
Modifiability,"y run. ;  ; virtual bool initializeInstance ();  Initializer called immediately after attachment to RooMCStudy object and initialization of module base class. ;  ; virtual bool initializeRun (Int_t);  Method called at the beginning of each RooMCStudy run. ;  ; TClass * IsA () const override;  ; virtual bool processAfterFit (Int_t);  Method called after fit has been performed. ;  ; virtual bool processBeforeGen (Int_t);  Method called after resetting of generator parameters to initial values and before call to generator context Any modifications to generator parameters will affect next generation operation (only) ;  ; virtual bool processBetweenGenAndFit (Int_t);  Method called after generation of toy data sample and resetting of fit parameters to initial values and before actual fit is performed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsMCStudyModule.html:2257,inherit,inherited,2257,doc/master/classRooAbsMCStudyModule.html,https://root.cern,https://root.cern/doc/master/classRooAbsMCStudyModule.html,1,['inherit'],['inherited']
Modifiability,"y the angle of rotation ;  CRotationZRotation class representing a 3D rotation about the Z axis by the angle of rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the Y axis, followed by a third rotation of an angle psi (roll) about the X axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  CSkipFunction;  CSkipFunction< 0 >;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineClass to wrap engines fron the C++ standard random library in the ROOT Random interface ;  CStdEngineType;  CStdEngineType< std::knuth_b >;  CStdEngineType< std::minstd_rand >;  CStdEngineType< std::mt19937 >;  CStdEngineType< std::mt19937_64 >;  CStdEngineType< std::random_device >;  CStdEngineType< std::ranlux24 >;  CStdEngineType< std::ranlux48 >;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) of two vectors giving a matrix ;  CTRandomEngine;  CTransposeOpClass for Transpose Operations ;  CTranspPolicyMatrix transpose policy ;  CTranspPolicy< T, D1, D2, MatRepSym< T, D1 > >;  CUnaryOpUnaryOperation class A class representing unary operators in the parse tree ;  CVavilovBase class describing a Vavilov distribution ;  CVavilovAccurateClass describing a Vav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:57254,variab,variables,57254,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,3,['variab'],['variables']
Modifiability,"y the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPointSet3D.html:8558,inherit,inherits,8558,doc/master/classTPointSet3D.html,https://root.cern,https://root.cern/doc/master/classTPointSet3D.html,2,['inherit'],['inherits']
Modifiability,"y the main transformation matrix, it will always be taken as identity. ;  ; virtual void DestroyOrWarn ();  Destroy this element. Prints a warning if deny-destroy is in force. ;  ; void DisableListElements (Bool_t rnr_self=kFALSE, Bool_t rnr_children=kFALSE);  Disable rendering of children and their list contents. ;  ; void DumpSourceObject () const;  Call Dump() on source object. ;  ; virtual void ElementChanged (Bool_t update_scenes=kTRUE, Bool_t redraw=kFALSE);  Call this after an element has been changed so that the state can be propagated around the framework. ;  ; void EnableListElements (Bool_t rnr_self=kTRUE, Bool_t rnr_children=kTRUE);  Enable rendering of children and their list contents. ;  ; List_i EndChildren ();  ; List_ci EndChildren () const;  ; List_i EndParents ();  ; List_ci EndParents () const;  ; void ExportSourceObjectToCINT (char *var_name) const;  Export source object to CINT with given name for the variable. ;  ; virtual void ExportToCINT (char *var_name);  Export render-element to CINT with variable name var_name. ;  ; virtual void FillImpliedSelectedSet (Set_t &impSelSet);  Populate set impSelSet with derived / dependant elements. ;  ; TEveElement * FindChild (const TString &name, const TClass *cls=nullptr);  Find the first child with given name. ;  ; TEveElement * FindChild (TPRegexp &regexp, const TClass *cls=nullptr);  Find the first child whose name matches regexp. ;  ; Int_t FindChildren (List_t &matches, const TString &name, const TClass *cls=nullptr);  Find all children with given name and append them to matches list. ;  ; Int_t FindChildren (List_t &matches, TPRegexp &regexp, const TClass *cls=nullptr);  Find all children whose name matches regexp and append them to matches list. ;  ; virtual sLTI_i FindItem (TGListTree *ltree);  Find any list-tree-item of this element in list-tree 'ltree'. ;  ; virtual sLTI_i FindItem (TGListTree *ltree, TGListTreeItem *parent_lti);  Find list-tree-item of this element with given parent list-tree-i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoNode.html:7461,variab,variable,7461,doc/master/classTEveGeoNode.html,https://root.cern,https://root.cern/doc/master/classTEveGeoNode.html,2,['variab'],['variable']
Modifiability,"y the method of Simplex"");; 3467 goto L99;; 3468 }; 3469 ; 3470//______________________________________________________________________________; 3471//; 3472// Command CLEAR; 3473//; 3474 if( !strncmp(comd.Data(),""CLE"",3) ) {; 3475 Printf("" ***>CLEAR"");; 3476 Printf("" Resets all parameter names and values to undefined."");; 3477 Printf("" Must normally be followed by a PARameters command or "");; 3478 Printf("" equivalent, in order to define parameter values."");; 3479 goto L99;; 3480 }; 3481//______________________________________________________________________________; 3482//; 3483// Command CONTOUR; 3484//; 3485 if( !strncmp(comd.Data(),""CON"",3) ) {; 3486 Printf("" ***>CONTOUR <par1> <par2> [devs] [ngrid]"");; 3487 Printf("" Instructs Minuit to trace contour lines of the user function"");; 3488 Printf("" with respect to the two parameters whose external numbers"");; 3489 Printf("" are <par1> and <par2>."");; 3490 Printf("" Other variable parameters of the function, if any, will have"");; 3491 Printf("" their values fixed at the current values during the contour"");; 3492 Printf("" tracing. The optional parameter [devs] (default value 2.)"");; 3493 Printf("" gives the number of standard deviations in each parameter"");; 3494 Printf("" which should lie entirely within the plotting area."");; 3495 Printf("" Optional parameter [ngrid] (default value 25 unless page"");; 3496 Printf("" size is too small) determines the resolution of the plot,"");; 3497 Printf("" i.e. the number of rows and columns of the grid at which the"");; 3498 Printf("" function will be evaluated. [See also MNContour.]"");; 3499 goto L99;; 3500 }; 3501//______________________________________________________________________________; 3502//; 3503// Command END; 3504//; 3505 if( !strncmp(comd.Data(),""END"",3) ) {; 3506 Printf("" ***>END"");; 3507 Printf("" Signals the end of a data block (i.e., the end of a fit),"");; 3508 Printf("" and implies that execution should continue, because another"");; 3509 Printf("" Data Block follows. A Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:110447,variab,variable,110447,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"y the status of the fit and can be obtained by an automatic conversion of the TFitResultPtr to an integer.; If the fit option S is instead used, TFitResultPtr contains the TFitResult and behaves as a smart pointer to it. This is an example:; int fitStatus = hist->Fit(myFunction); // TFitResultPtr contains only the fit status. TFitResultPtr r = hist->Fit(myFunction,""S""); // TFitResultPtr contains the TFitResult; TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; r->Print(""V""); // print full information of fit including covariance matrix; r->Write(); // store the result in a file; 5.8 The Minimization packages; As explained before various minimization packages can be used when fitting in ROOT. We have seen before how to configure the Fitter class to use different minimization packages and different minimization options. When using the Fit method the minimization package (and its options) can be selected using the static methods of the ROOT::Math::MinimizerOptions class. For example to select Minuit2 instead of Minuit for fitting an histogram do:; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit2"");; // fit the histogram histo with the gaussian pre-defined function; histo->Fit(""gaus"");; In the following we will give some brief description of the minimization packages. The packages all implement the ROOT::Math::Minimizer interface which can be use for finding the minimum of a multi-dimensional function. The interface is documented in the Mathematical Library Chapter.; In addition packages like Minuit or Minuit2 provide their own interfaces.; 5.9 MINUIT (Old TMInuit Version); This package was originally written in FORTRAN by Fred James and part of PACKLIB (patch D506). It has been converted to a C++ class by René Brun. The current ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:212986,config,configure,212986,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['config'],['configure']
Modifiability,"y the; user. In case of error 0 is returned. UserGroup_t * GetGroupInfo(Int_t gid); Returns all group info in the UserGroup_t structure. The only active; fields in the UserGroup_t structure for this call are:; fGid and fGroup; The returned structure must be deleted by the user. In case of; error 0 is returned. UserGroup_t * GetGroupInfo(const char* group = 0); Returns all group info in the UserGroup_t structure. The only active; fields in the UserGroup_t structure for this call are:; fGid and fGroup; If group = 0, returns current user's group. The returned structure; must be deleted by the user. In case of error 0 is returned. void Setenv(const char* name, const char* value); Set environment variable. The string passed will be owned by; the environment and can not be reused till a ""name"" is set; again. The solution below will lose the space for the string; in that case, but if this functions is not called thousands; of times that should not be a problem. const char * Getenv(const char* name); Get environment variable. int Exec(const char* shellcmd); Execute a command. FILE * OpenPipe(const char* shellcmd, const char* mode); Open a pipe. int ClosePipe(FILE* pipe); Close the pipe. int GetPid(); Get process id. void Exit(int code, Bool_t mode = kTRUE); Exit the application. void Abort(int code = 0); Abort the application. void StackTrace(); Print a stack trace. void Openlog(const char* name, Int_t options, ELogFacility facility); Open connection to system log daemon. For the use of the options and; facility see the Unix openlog man page. void Syslog(ELogLevel level, const char* mess); Send mess to syslog daemon. Level is the logging level and mess the; message that will be written on the log. void Closelog(); Close connection to system log daemon. Int_t RedirectOutput(const char* name, const char* mode = ""a"", RedirectHandle_t* h = 0); Redirect standard output (stdout, stderr) to the specified file.; If the file argument is 0 the output is set again to stderr, stdout.; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnixSystem.html:29857,variab,variable,29857,root/html528/TUnixSystem.html,https://root.cern,https://root.cern/root/html528/TUnixSystem.html,3,['variab'],['variable']
Modifiability,"y this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphNode.html:12830,inherit,inherited,12830,doc/master/classTGraphNode.html,https://root.cern,https://root.cern/doc/master/classTGraphNode.html,2,['inherit'],['inherited']
Modifiability,"y this object. ;  ; virtual void SetVsbPosition (Long_t newPos);  Set position of vertical scrollbar. ;  ; virtual void ShowBottom ();  Show bottom of the page. ;  ; virtual void ShowTop ();  Show top of the page. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Long_t ToObjXCoord (Long_t xCoord, Long_t line);  Convert x screen coordinate to column in specified line. ;  ; virtual Long_t ToObjYCoord (Long_t yCoord);  Convert y screen coordinate to line number. ;  ; virtual Long_t ToScrXCoord (Long_t xCoord, Long_t line);  Convert column number in specified line to screen coordinate. ;  ; virtual Long_t ToScrYCoord (Long_t yCoord);  Convert line number to screen coordinate. ;  ; virtual void Update ();  update the whole window of text view ;  ;  Public Member Functions inherited from TGView;  TGView (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, Int_t id=-1, UInt_t xMargin=0, UInt_t yMargin=0, UInt_t options=kSunkenFrame|kDoubleBorder, UInt_t sboptions=0, Pixel_t back=GetWhitePixel());  Create an editor view, containing an TGEditorFrame and (optionally) a horizontal and vertical scrollbar. ;  ;  ~TGView () override;  Delete view. ;  ; void ChangeBackground (Pixel_t) override;  Change background color of the canvas frame. ;  ; void Clear (Option_t *="""") override;  Clear view. ;  ; void DrawBorder () override;  Draw the border of the text edit widget. ;  ; TGViewFrame * GetCanvas () const;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; TGLongPosition GetScrollPosition () const;  ; TGLongPosition GetScrollValue () const;  ; const TGGC & GetViewWhiteGC ();  ; TGDimension GetVirtualSize () const;  ; Bool_t HandleButton (Event_t *event) override;  handle button ;  ; Bool_t HandleExpose (Event_t *event) override;  Handle expose events. ;  ; TClass * IsA () const override;  ; void Layout () override;  layout ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:11451,inherit,inherited,11451,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,2,['inherit'],['inherited']
Modifiability,"y this to obj.Definition TObject.cxx:146; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::SetDrawOptionvirtual void SetDrawOption(Option_t *option="""")Set drawing option for object.Definition TObject.cxx:770; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::SetDtorOnlystatic void SetDtorOnly(void *obj)Set destructor only flag.Definition TObject.cxx:1090; TObject::SetUniqueIDvirtual void SetUniqueID(UInt_t uid)Set the unique object id.Definition TObject.cxx:797; TObject::GetTitlevirtual const char * GetTitle() constReturns title of object.Definition TObject.cxx:488; TObject::EDeprecatedStatusBitsEDeprecatedStatusBitsDefinition TObject.h:75; TObject::kObjInCanvas@ kObjInCanvasfor backward compatibility only, use kMustCleanupDefinition TObject.h:76; TObject::DrawClassvirtual void DrawClass() constDraw class inheritance tree of the class to which this object belongs.Definition TObject.cxx:295; TObject::TestBitsInt_t TestBits(UInt_t f) constDefinition TObject.h:200; TObject::Comparevirtual Int_t Compare(const TObject *obj) constCompare abstract method.Definition TObject.cxx:244; TObject::MakeZombievoid MakeZombie()Definition TObject.h:53; TObject::~TObjectvirtual ~TObject()TObject destructor.Definition TObject.cxx:164; TObject::Paintvirtual void Paint(Option_t *option="""")This method must be overridden if a class wants to paint itself.Definition TObject.cxx:612; TObject::Printvirtual void Print(Option_t *option="""") constThis method must be overridden when a class wants to print itself.Definition TObject.cxx:642; TObject::Popvirtual void Pop()Pop on object drawn in a pad to the top of the display list.Definition TObject.cxx:621; TObject::TObjectTObject()TObject constructor.Definition TObject.h:254; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8h_source.html:29562,inherit,inheritance,29562,doc/master/TObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TObject_8h_source.html,1,['inherit'],['inheritance']
Modifiability,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;  ; Bool_t fDynamicStartup;  ; TList * fEnabledPackages;  ; TString fImage;  ; TProofMgr * fManager;  ; Bool_t fMasterServ;  ; Float_t fPrepTime;  ; Int_t fProtocol;  ; EQueryMode fQueryMode;  ; TStopwatch fQuerySTW;  ; TList * fRunningDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofCondor.h>. Inheritance diagram for TProofCondor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofCondor(). TProofCondor::TProofCondor ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProofMgr * ; mgr = 0 . ). Star",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofCondor.html:42899,inherit,inherited,42899,doc/master/classTProofCondor.html,https://root.cern,https://root.cern/doc/master/classTProofCondor.html,4,['inherit'],['inherited']
Modifiability,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;  ; Bool_t fDynamicStartup;  ; TList * fEnabledPackages;  ; TString fImage;  ; TProofMgr * fManager;  ; Bool_t fMasterServ;  ; Float_t fPrepTime;  ; Int_t fProtocol;  ; EQueryMode fQueryMode;  ; TStopwatch fQuerySTW;  ; TList * fRunningDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofLite.h>. Inheritance diagram for TProofLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofLite() [1/3]. TProofLite::TProofLite ; (; const TProofLite & ; ). private . ◆ TProofLite() [2/3]. TProofLite::TProofLite ; (; ). inlineprotected . Definition at line 87 of file TProofLite.h. ◆ TProofLite() [3/3]. TProofLite::TProofLite ; (; cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:45258,inherit,inherited,45258,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,4,['inherit'],['inherited']
Modifiability,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TProof; TMonitor * fAllMonitor;  ; TList * fAvailablePackages;  ; TList * fBadSlaves;  ; Long64_t fBytesReady;  ; Int_t fCollectTimeout;  ; TString fConfDir;  ; TString fConfFile;  ; TString fDataPoolUrl;  ; Bool_t fDataReady;  ; Bool_t fDynamicStartup;  ; TList * fEnabledPackages;  ; TString fImage;  ; TProofMgr * fManager;  ; Bool_t fMasterServ;  ; Float_t fPrepTime;  ; Int_t fProtocol;  ; EQueryMode fQueryMode;  ; TStopwatch fQuerySTW;  ; TList * fRunningDSets;  ; TSelector * fSelector;  ; TProofMgr::EServType fServType;  ; TList * fSlaves;  ; TList * fTerminatedSlaveInfos;  ; Long64_t fTotalBytes;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofSuperMaster.h>. Inheritance diagram for TProofSuperMaster:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofSuperMaster(). TProofSuperMaster::TProofSuperMaster ; (; const char * ; masterurl, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProof",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofSuperMaster.html:42536,inherit,inherited,42536,doc/master/classTProofSuperMaster.html,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html,4,['inherit'],['inherited']
Modifiability,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGTextLBEntry; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGListBox.h>. Inheritance diagram for TGIconLBEntry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGIconLBEntry() [1/2]. TGIconLBEntry::TGIconLBEntry ; (; const TGIconLBEntry & ; ). privatedelete . ◆ TGIconLBEntry() [2/2]. TGIconLBEntry::TGIconLBEntry ; (; const TGWindow * ; p = nullptr, . Int_t ; id = -1, . const char * ; str = nullptr, . const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIconLBEntry.html:29419,inherit,inherited,29419,doc/master/classTGIconLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGIconLBEntry.html,4,['inherit'],['inherited']
Modifiability,"y typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGTextLBEntry; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGListBox.h>. Inheritance diagram for TGLineLBEntry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLineLBEntry() [1/2]. TGLineLBEntry::TGLineLBEntry ; (; const TGLineLBEntry & ; ). privatedelete . ◆ TGLineLBEntry() [2/2]. TGLineLBEntry::TGLineLBEntry ; (; const TGWindow * ; p = nullptr, . Int_t ; id = -1, . const char * ; str = nullptr, . UInt_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLineLBEntry.html:29686,inherit,inherited,29686,doc/master/classTGLineLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGLineLBEntry.html,4,['inherit'],['inherited']
Modifiability,"y updated, when the Slider is released. This should be activated if the redrawing of the histogram is too time consuming.; 4 Graphs; A graph is a graphics object made of two arrays X and Y, holding the x,y coordinates of n points. There are several graph classes; they are TGraph, TGraphErrors, TGraphAsymmErrors, and TMultiGraph.; 4.1 TGraph; The TGraph class supports the general case with non-equidistant points, and the special case with equidistant points. Graphs are created with the TGraph constructor. First, we define the arrays of coordinates and then create the graph. The coordinates can be arrays of doubles or floats.; Int_t n = 20;; Double_t x[n], y[n];; for (Int_t i=0; i<n; i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2);; }; TGraph *gr1 = new TGraph (n, x, y);; An alternative constructor takes only the number of points n. It is expected that the coordinates will be set later.; TGraph *gr2 = new TGraph(n);; The default constructor can also be used. Further calls to SetPoint() will extend the internal vectors.; TGraph *gr3 = new TGraph();; 4.1.1 Graph Draw Options; The various drawing options for a graph are explained in TGraph::PaintGraph. They are:. “L” A simple poly-line between every points is drawn; “F” A fill area is drawn; “F1” Idem as “F” but fill area is no more repartee around X=0 or Y=0; “F2” draw a fill area poly line connecting the center of bins; “A” Axis are drawn around the graph; “C” A smooth curve is drawn; “*” A star is plotted at each point; “P” The current marker of the graph is plotted at each point; “B” A bar chart is drawn at each point; “[]” Only the end vertical/horizontal lines of the error bars are drawn. This option only applies to the TGraphAsymmErrors.; “1” ylow = rwymin. The options are not case sensitive and they can be concatenated in most cases. Let us look at some examples.; 4.1.1.1 Continuous Line, Axis and Stars (AC*). A graph drawn with axis, * markers and continuous line (option AC*). {; Int_t n = 20;; Double_t x[n], y[n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:142308,extend,extend,142308,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['extend'],['extend']
Modifiability,"y window width and height ; Definition at line 71 of file RWebDisplayArgs.cxx. ◆ RWebDisplayArgs() [5/5]. RWebDisplayArgs::RWebDisplayArgs ; (; std::shared_ptr< RWebWindow > ; master, . unsigned ; conndid = 0, . int ; channel = -1 . ). Constructor. ; Let specify master window and channel (if reserved already) ; Definition at line 82 of file RWebDisplayArgs.cxx. ◆ ~RWebDisplayArgs(). RWebDisplayArgs::~RWebDisplayArgs ; (; ). virtualdefault . Destructor. ; Must be defined in source code to correctly call RWebWindow destructor . Member Function Documentation. ◆ AppendUrlOpt(). void RWebDisplayArgs::AppendUrlOpt ; (; const std::string & ; opt). append extra url options, add ""&"" as separator if required ; Append string to url options.; Add ""&"" as separator if any options already exists ; Definition at line 287 of file RWebDisplayArgs.cxx. ◆ GetBrowserKind(). EBrowserKind ROOT::RWebDisplayArgs::GetBrowserKind ; (; ); const. inline . returns configured browser kind, see EBrowserKind for supported values ; Definition at line 98 of file RWebDisplayArgs.hxx. ◆ GetBrowserName(). std::string RWebDisplayArgs::GetBrowserName ; (; ); const. Returns configured browser name. ; Definition at line 248 of file RWebDisplayArgs.cxx. ◆ GetCustomExec(). std::string RWebDisplayArgs::GetCustomExec ; (; ); const. returns custom executable to start web browser ; Returns custom executable to start web browser. ; Definition at line 332 of file RWebDisplayArgs.cxx. ◆ GetDriverData(). void * ROOT::RWebDisplayArgs::GetDriverData ; (; ); const. inline . [internal] returns web-driver data, used to start window ; Definition at line 214 of file RWebDisplayArgs.hxx. ◆ GetExtraArgs(). const std::string & ROOT::RWebDisplayArgs::GetExtraArgs ; (; ); const. inline . get extra command line arguments for starting web browser command ; Definition at line 194 of file RWebDisplayArgs.hxx. ◆ GetFullUrl(). std::string RWebDisplayArgs::GetFullUrl ; (; ); const. returns window url with append options ; Returns full ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebDisplayArgs.html:10308,config,configured,10308,doc/v632/classROOT_1_1RWebDisplayArgs.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebDisplayArgs.html,1,['config'],['configured']
Modifiability,"y window width and height ; Definition at line 71 of file RWebDisplayArgs.cxx. ◆ RWebDisplayArgs() [5/5]. RWebDisplayArgs::RWebDisplayArgs ; (; std::shared_ptr< RWebWindow > ; master, . unsigned ; conndid = 0, . int ; channel = -1 . ). Constructor. ; Let specify master window and channel (if reserved already) ; Definition at line 82 of file RWebDisplayArgs.cxx. ◆ ~RWebDisplayArgs(). RWebDisplayArgs::~RWebDisplayArgs ; (; ). virtualdefault . Destructor. ; Must be defined in source code to correctly call RWebWindow destructor . Member Function Documentation. ◆ AppendUrlOpt(). void RWebDisplayArgs::AppendUrlOpt ; (; const std::string & ; opt). append extra url options, add ""&"" as separator if required ; Append string to url options.; Add ""&"" as separator if any options already exists ; Definition at line 292 of file RWebDisplayArgs.cxx. ◆ GetBrowserKind(). EBrowserKind ROOT::RWebDisplayArgs::GetBrowserKind ; (; ); const. inline . returns configured browser kind, see EBrowserKind for supported values ; Definition at line 99 of file RWebDisplayArgs.hxx. ◆ GetBrowserName(). std::string RWebDisplayArgs::GetBrowserName ; (; ); const. Returns configured browser name. ; Definition at line 252 of file RWebDisplayArgs.cxx. ◆ GetCustomExec(). std::string RWebDisplayArgs::GetCustomExec ; (; ); const. returns custom executable to start web browser ; Returns custom executable to start web browser. ; Definition at line 337 of file RWebDisplayArgs.cxx. ◆ GetDriverData(). void * ROOT::RWebDisplayArgs::GetDriverData ; (; ); const. inline . [internal] returns web-driver data, used to start window ; Definition at line 215 of file RWebDisplayArgs.hxx. ◆ GetExtraArgs(). const std::string & ROOT::RWebDisplayArgs::GetExtraArgs ; (; ); const. inline . get extra command line arguments for starting web browser command ; Definition at line 195 of file RWebDisplayArgs.hxx. ◆ GetFullUrl(). std::string RWebDisplayArgs::GetFullUrl ; (; ); const. returns window url with append options ; Returns full ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebDisplayArgs.html:10346,config,configured,10346,doc/master/classROOT_1_1RWebDisplayArgs.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebDisplayArgs.html,1,['config'],['configured']
Modifiability,"y with FCN only fits, when fFitFunc=0); vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(ROOT::Math::Minimizer& min, const ROOT::Fit::FitConfig& fconfig, const ROOT::Fit::FitResult::IModelFunction* f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Construct from a Minimizer instance after fitting; Run also Minos if requested from the configuration. FitResult(const ROOT::Fit::FitResult& ). Copy constructor. ~FitResult(). Destructor. bool Update(const ROOT::Math::Minimizer& min, bool isValid, unsigned int ncalls = 0). Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created. const std::string & MinimizerType() const; minimization quantities ; minimizer type. { return fMinimType; }. bool IsValid() const; True if fit successful, otherwise false. { return fValid; }. bool IsEmpty() const; True if a fit result does not exist (even invalid) with parameter values. { return (fParams.size() == 0); }. double MinFcnValue() const; Return value of the objective function (chi2 or likelihood) used in the fit. { return fVal; }. unsigned int NCalls() const; Number of function calls to find minimum. { return fNCalls; }. double Edm() const; Expected distance from minimum. { return fEdm; }. unsigned int NTotalParameters() const; get total number of parameters. { return fParams.size(); }. unsigned int NPar() const; total number of parameters (abbreviation). { return NTotalParameters(); }. unsigned int NFreeParameters() const; get total",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Fit__FitResult.html:5335,config,configuration,5335,root/html528/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html528/ROOT__Fit__FitResult.html,1,['config'],['configuration']
Modifiability,"y » Advanced spectra processing classes. ; Advanced 1-dimensional orthogonal transform functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrumTransform is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrumTransform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 1D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 18 of file TSpectrumTransform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:1348,enhance,enhancement,1348,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,"y! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfEditPathMarksShow widgets for path-mark control in GUI editor.; TMarkerfFVAttMarker attributes for fits vertex.; Bool_tfFitCluster2DsPass through 2D-clusters when extrapolating a track.; Bool_tfFitDaughtersPass through daughter creation points when extrapolating a track.; Bool_tfFitDecayPass through decay point when extrapolating a track.; Bool_tfFitLineSegmentsPass through line when extrapolating a track.; Bool_tfFitReferencesPass through given track-references when extrapolating a track.; TEveTrackPropagator::Helix_tfHHelix.; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveMagField*fMagFieldObj; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Double_tfMaxOrbsMaximal angular path of tracks' orbits (1 ~ 2Pi).; Double_tfMaxRMax radius for track extrapolation; Double_tfMaxZMax z-coordinate for track extrapolation.; Int_tfNMaxMax steps; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tfOwnMagFiledObj; TMarkerfPMAttMarker attributes for rendering of path-marks.; TMarkerfPTBAttMarker attributes for track break-points.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector4D>fPointsCalculated point.; UChar_tfProjTrackBreakingHandling of projected-track breaking.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Int_tTEveRefCnt::fRefCount; Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveTrackPropagator.html:24250,variab,variable,24250,root/html534/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html534/TEveTrackPropagator.html,1,['variab'],['variable']
Modifiability,"y(TDirectory *dir)By default, when a histogram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; TH1::fBufferDouble_t * fBuffer[fBufferSize] entry bufferDefinition TH1.h:108; TH1::GetEffectiveEntriesvirtual Double_t GetEffectiveEntries() constNumber of effective entries of the histogram.Definition TH1.cxx:4448; TH1::kXaxis@ kXaxisDefinition TH1.h:73; TH1::kYaxis@ kYaxisDefinition TH1.h:74; TH1::fNcellsInt_t fNcellsNumber of bins(1D), cells (2D) +U/Overflows.Definition TH1.h:89; TH1::fTsumwDouble_t fTsumwTotal Sum of weights.Definition TH1.h:96; TH1::fTsumw2Double_t fTsumw2Total Sum of squares of weights.Definition TH1.h:97; TH1::fTsumwx2Double_t fTsumwx2Total Sum of weight*X*X.Definition TH1.h:99; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetNbinsXvirtual Int_t GetNbinsX() constDefinition TH1.h:297; TH1::fBufferSizeInt_t fBufferSizefBuffer sizeDefinition TH1.h:107; TH1::SetBinErrorvirtual void SetBinError(Int_t bin, Double_t error)Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empt...Definition TH1.cxx:9206; TH1::fgBufferSizestatic Int_t fgBufferSize! Default buffer size for automatic histogramsDefinition TH1.h:115; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TH1::SavePrimitiveHelpvirtual void SavePrimitiveHelp(std::ostream &out, const char *hname, Option_t *option="""")Helper function for the SavePrimitive functions from TH1 or classes derived from TH1,...Definition TH1.cxx:7379; TH1::GetAxisLabelStatusUInt_t GetAxisLabelStatus() constInternal function used in TH1::Fill to see which axis is full alphanumeric, i.e.Definition TH1.c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:80706,extend,extendable,80706,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf305__condcorrprod_8py.html:2757,variab,variables,2757,doc/master/rf305__condcorrprod_8py.html,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html,2,['variab'],['variables']
Modifiability,"y) override;  Set Y coordinate of the center of the BoundingBox. ;  ; void SetBBoxX1 (const Int_t x) override;  Set left hand side of BoundingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t x) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t y) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t y) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetCenter (Double_t x1, Double_t y1);  Set Curly Arc center. ;  ; virtual void SetPhimax (Double_t phimax);  Set Curly Arc maximum Phi. ;  ; virtual void SetPhimin (Double_t phimin);  Set Curly Arc minimum Phi. ;  ; virtual void SetRadius (Double_t radius);  Set Curly Arc radius. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCurlyLine;  TCurlyLine ();  Default constructor. ;  ;  TCurlyLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t wl=.02, Double_t amp=.01);  Create a new TCurlyLine with starting point (x1, y1), end point (x2,y2). ;  ;  ~TCurlyLine () override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a line. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Double_t GetAmplitude () const;  ; Rectangle_t GetBBox () override;  Return the bounding Box of the CurlyLine. ;  ; TPoint GetBBoxCenter () override;  Return the center of the BoundingBox as TPoint in pixels. ;  ; Bool_t GetCurly () const;  ; Double_t GetEndX () const;  ; Double_t GetEndY () const;  ; Double_t GetStartX () const;  ; Double_t GetStartY () const;  ; Double_t GetWaveLength () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyArc.html:6025,inherit,inherited,6025,doc/master/classTCurlyArc.html,https://root.cern,https://root.cern/doc/master/classTCurlyArc.html,1,['inherit'],['inherited']
Modifiability,"y);  set the first entry number (case of TBranchSTL) ;  ; void SetIOFeatures (TIOFeatures &features);  ; virtual bool SetMakeClass (bool decomposeObj=true);  Set the branch in a mode where the object are decomposed (Also known as MakeClass mode). ;  ; virtual void SetObject (void *objadd);  Set object this branch is pointing to. ;  ; virtual void SetOffset (Int_t offset=0);  ; virtual void SetStatus (bool status=true);  Set branch status to Process or DoNotProcess. ;  ; virtual void SetTree (TTree *tree);  ; virtual void SetupAddresses ();  If the branch address is not set, we set all addresses starting with the top level parent branch. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool SupportsBulkRead () const;  Returns true if this branch supports bulk IO, false otherwise. ;  ; virtual void UpdateAddress ();  ; virtual void UpdateFile ();  Refresh the value of fDirectory (i.e. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchRef.html:10964,inherit,inherited,10964,doc/master/classTBranchRef.html,https://root.cern,https://root.cern/doc/master/classTBranchRef.html,3,['inherit'],['inherited']
Modifiability,"y);; 3307 }; 3308 ; 3309 }; 3310 ; 3311 TString libmapfilename;; 3312 AssignAndDelete( libmapfilename, ConcatFileName( build_loc, libname ) );; 3313 libmapfilename += "".rootmap"";; 3314#if (defined(R__MACOSX) && !defined(MAC_OS_X_VERSION_10_5)) || defined(R__WIN32); 3315 Bool_t produceRootmap = kTRUE;; 3316#else; 3317 Bool_t produceRootmap = kFALSE;; 3318#endif; 3319 Bool_t linkDepLibraries = !produceRootmap;; 3320 if (gEnv) {; 3321#if (defined(R__MACOSX) && !defined(MAC_OS_X_VERSION_10_5)); 3322 Int_t linkLibs = gEnv->GetValue(""ACLiC.LinkLibs"",2);; 3323#elif defined(R__WIN32); 3324 Int_t linkLibs = gEnv->GetValue(""ACLiC.LinkLibs"",3);; 3325#else; 3326 Int_t linkLibs = gEnv->GetValue(""ACLiC.LinkLibs"",1);; 3327#endif; 3328 produceRootmap = linkLibs & 0x2;; 3329 linkDepLibraries = linkLibs & 0x1;; 3330 }; 3331 ; 3332 // FIXME: Triggers clang false positive warning -Wunused-lambda-capture.; 3333 /*constexpr const*/ bool useCxxModules =; 3334#ifdef R__USE_CXXMODULES; 3335 true;; 3336#else; 3337 false;; 3338#endif; 3339 ; 3340 // FIXME: Switch to generic polymorphic when we make c++14 default.; 3341 auto ForeachSharedLibDep = [](const char *lib, std::function<bool(const char *)> f) {; 3342 using std::string, std::vector, std::istringstream, std::istream_iterator;; 3343 string deps = gInterpreter->GetSharedLibDeps(lib, /*tryDyld*/ true);; 3344 istringstream iss(deps);; 3345 vector<string> libs{istream_iterator<std::string>{iss}, istream_iterator<string>{}};; 3346 // Skip the first element: it is a relative path to `lib`.; 3347 for (auto I = libs.begin() + 1, E = libs.end(); I != E; ++I); 3348 if (!f(I->c_str())); 3349 break;; 3350 };; 3351 auto LoadLibrary = [useCxxModules, produceRootmap, ForeachSharedLibDep](const TString &lib) {; 3352 // We have no rootmap files or modules to construct `-l` flags enabling; 3353 // explicit linking. We have to resolve the dependencies by ourselves; 3354 // taking the job of the dyld.; 3355 // FIXME: This is a rare case where we have rootc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:111177,polymorphi,polymorphic,111177,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['polymorphi'],['polymorphic']
Modifiability,"y, TChain implements a callback mechanism to inform interested parties when it switches to a new sub-tree. ; Reimplemented from TObject.; Definition at line 206 of file TTreeFormula.h. ◆ operator=(). TTreeFormula & TTreeFormula::operator= ; (; const TTreeFormula & ; ). privatedelete . ◆ ParseWithLeaf(). Int_t TTreeFormula::ParseWithLeaf ; (; TLeaf * ; leaf, . const char * ; subExpression, . bool ; final, . UInt_t ; paran_level, . TObjArray & ; castqueue, . bool ; useLeafCollectionObject, . const char * ; fullExpression . ). protected . Decompose 'expression' as pointing to something inside the leaf Returns: . -2 Error: some information is missing (message already printed); -1 Error: Syntax is incorrect (message already printed); 0; >0 the value returns is the action code. . Definition at line 764 of file TTreeFormula.cxx. ◆ PrintValue() [1/2]. char * TTreeFormula::PrintValue ; (; Int_t ; mode, . Int_t ; instance, . const char * ; decform = ""9.9"" . ); const. virtual . Return value of variable as a string. . mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values; decform contains the requested format (with the same convention as printf). . Definition at line 4840 of file TTreeFormula.cxx. ◆ PrintValue() [2/2]. char * TTreeFormula::PrintValue ; (; Int_t ; mode = 0); const. virtual . Return value of variable as a string. . mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values . Definition at line 4826 of file TTreeFormula.cxx. ◆ RegisterDimensions() [1/5]. Int_t TTreeFormula::RegisterDimensions ; (; const char * ; size, . Int_t ; code . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 402 of file TTreeFormula.cxx. ◆ RegisterDimensions() [2/5]. Int_t TTreeFormula::RegisterDimensions ; (; Int_t ; code, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; multidim = nullptr . ). protected . This method stores the dimension information fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:46479,variab,variable,46479,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variable']
Modifiability,"y, and RooNonCPEigenDecay.; Definition at line 546 of file RooAbsAnaConvPdf.cxx. ◆ coefficient(). virtual double RooAbsAnaConvPdf::coefficient ; (; Int_t ; basisIndex); const. pure virtual . Implemented in RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBMixDecay, RooDecay, and RooNonCPEigenDecay. ◆ coefVars(). RooFit::OwningPtr< RooArgSet > RooAbsAnaConvPdf::coefVars ; (; Int_t ; coefIdx); const. virtual . Return set of parameters with are used exclusively by the coefficient functions. ; Reimplemented in RooBDecay.; Definition at line 619 of file RooAbsAnaConvPdf.cxx. ◆ compileForNormSet(). std::unique_ptr< RooAbsArg > RooAbsAnaConvPdf::compileForNormSet ; (; RooArgSet const & ; normSet, . RooFit::Detail::CompileContext & ; ctx . ); const. overridevirtual . Reimplemented from RooAbsArg.; Definition at line 669 of file RooAbsAnaConvPdf.cxx. ◆ convVar() [1/2]. RooAbsRealLValue * RooAbsAnaConvPdf::convVar ; (; ). Retrieve the convolution variable. ; Return a pointer to the convolution variable instance used in the resolution model. ; Definition at line 314 of file RooAbsAnaConvPdf.cxx. ◆ convVar() [2/2]. const RooAbsRealLValue * RooAbsAnaConvPdf::convVar ; (; ); const. inline . Retrieve the convolution variable. ; Definition at line 79 of file RooAbsAnaConvPdf.h. ◆ declareBasis(). Int_t RooAbsAnaConvPdf::declareBasis ; (; const char * ; expression, . const RooArgList & ; params . ). Declare a basis function for use in this physics model. ; The string expression must be a valid RooFormulVar expression representing the basis function, referring to the convolution variable as '@0', and any additional parameters (supplied in 'params' as '@1','@2' etc.; The return value is a unique identifier code, that will be passed to coefficient() to identify the basis function for which the coefficient is requested. If the resolution model used does not support the declared basis function, code -1 is returned. ; Definition at line 159 of file RooAbsAnaConvPdf.cxx. ◆ DeclFileName(). stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsAnaConvPdf.html:83251,variab,variable,83251,doc/master/classRooAbsAnaConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsAnaConvPdf.html,1,['variab'],['variable']
Modifiability,"y, z and t. The parameters used will be the ones in the array params if params is given otherwise parameters will be taken from the stored data members fParams ; Definition at line 2668 of file TFormula_v5.cxx. ◆ EvalPar(). virtual Double_t ROOT::v5::TFormula::EvalPar ; (; const Double_t * ; x, . const Double_t * ; params = nullptr . ). inlinevirtual . Definition at line 235 of file TFormula.h. ◆ EvalParFast(). Double_t TFormula::EvalParFast ; (; const Double_t * ; x, . const Double_t * ; uparams . ). protected . Evaluate this formula. ; The current value of variables x,y,z,t is passed through the pointer x. The parameters used will be the ones in the array params if params is given otherwise parameters will be taken from the stored data members fParams. Definition at line 4189 of file TFormula_v5.cxx. ◆ EvalParOld(). Double_t TFormula::EvalParOld ; (; const Double_t * ; x, . const Double_t * ; uparams = nullptr . ). virtual . Evaluate this formula. ; The current value of variables x,y,z,t is passed through the pointer x. The parameters used will be the ones in the array params if params is given otherwise parameters will be taken from the stored data members fParams. Definition at line 2687 of file TFormula_v5.cxx. ◆ EvalPrimitive(). Double_t TFormula::EvalPrimitive ; (; const Double_t * ; x, . const Double_t * ; params . ). protected . Evaluate primitive formula. ; Definition at line 4114 of file TFormula_v5.cxx. ◆ EvalPrimitive0(). Double_t TFormula::EvalPrimitive0 ; (; const Double_t * ; x, . const Double_t * ; params . ). protected . Evaluate primitive formula. ; Definition at line 4135 of file TFormula_v5.cxx. ◆ EvalPrimitive1(). Double_t TFormula::EvalPrimitive1 ; (; const Double_t * ; x, . const Double_t * ; params . ). protected . Evaluate primitive formula. ; Definition at line 4144 of file TFormula_v5.cxx. ◆ EvalPrimitive2(). Double_t TFormula::EvalPrimitive2 ; (; const Double_t * ; x, . const Double_t * ; params . ). protected . Evaluate primitive formul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html:37921,variab,variables,37921,doc/master/classROOT_1_1v5_1_1TFormula.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html,1,['variab'],['variables']
Modifiability,"y. ;  ; void StoreKeyAttributes ();  Stores keys attributes in key node. ;  ; void StoreObject (const void *obj, const TClass *cl, Bool_t check_tobj=kFALSE);  convert object to xml structure and keep this structure in key ;  ; TXMLEngine * XMLEngine ();  return pointer on TXMLEngine object, used for xml conversion ;  ; void * XmlReadAny (void *obj, const TClass *expectedClass);  read object from key and cast to expected class ;  ;  Protected Member Functions inherited from TKey; void Build (TDirectory *motherDir, const char *classname, Long64_t filepos);  Method used in all TKey constructor to initialize basic data fields. ;  ; virtual void Create (Int_t nbytes, TFile *f=nullptr);  Create a TKey object of specified size. ;  ; void Reset ();  Reset the key as it had not been 'filled' yet. ;  ; virtual Int_t WriteFileKeepBuffer (TFile *f=nullptr);  Write the encoded object supported by this key. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Long64_t fKeyId {0};  node with stored object ;  ; XMLNodePointer_t fKeyNode {nullptr};  ; Bool_t fSubdir {kFALSE};  unique identifier of key for search methods ;  ;  Protected Attributes inherited from TKey; char * fBuffer;  Object buffer. ;  ; TBuffer * fBufferRef;  Pointer to the TBuffer object. ;  ; TString fClassName;  Object Class name. ;  ; Short_t fCycle;  Cycle number. ;  ; TDatime fDatime;  Date/Time of insertion in file. ;  ; Short_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeyXML.html:15468,inherit,inherited,15468,doc/master/classTKeyXML.html,https://root.cern,https://root.cern/doc/master/classTKeyXML.html,1,['inherit'],['inherited']
Modifiability,"y. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fActive;  ; ImplySelect_foo fDecImpSelElement;  ; SelMap_t fImpliedSelected;  ; ImplySelect_foo fIncImpSelElement;  ; Bool_t fIsMaster;  ; Int_t fPickToSelect;  ; Select_foo fSelElement;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attribu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSelection.html:36989,inherit,inherited,36989,doc/master/classTEveSelection.html,https://root.cern,https://root.cern/doc/master/classTEveSelection.html,2,['inherit'],['inherited']
Modifiability,"y. ;  ;  Public Member Functions inherited from TEveRefBackPtr;  TEveRefBackPtr ();  Default constructor. ;  ;  TEveRefBackPtr (const TEveRefBackPtr &);  Copy constructor. ;  ;  ~TEveRefBackPtr () override;  Destructor. Noop, should complain if back-ref list is not empty. ;  ; void DecRefCount ();  ; virtual void DecRefCount (TEveElement *re);  Decrease reference count and remove re from the list of back-references. ;  ; void IncRefCount ();  ; virtual void IncRefCount (TEveElement *re);  Increase reference count and add re to the list of back-references. ;  ; TClass * IsA () const override;  ; TEveRefBackPtr & operator= (const TEveRefBackPtr &);  Assignment operator. ;  ; virtual void StampBackPtrElements (UChar_t stamps);  Add given stamps to elements in the list of reverse references. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveRefCnt;  TEveRefCnt ();  ;  TEveRefCnt (const TEveRefCnt &);  ; virtual ~TEveRefCnt ();  ; void DecRefCount ();  ; void IncRefCount ();  ; TEveRefCnt & operator= (const TEveRefCnt &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveRefBackPtr; static TClass * Class ();  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveFrameBox.html:11885,inherit,inherited,11885,doc/master/classTEveFrameBox.html,https://root.cern,https://root.cern/doc/master/classTEveFrameBox.html,1,['inherit'],['inherited']
Modifiability,"y. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include <RooRealIntegral.h>. Inheritance diagram for RooRealIntegral:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ IntOperMode. enum RooRealIntegral::IntOperMode. protected . EnumeratorHybrid ; Analytic ; PassThrough . Definition at line 92 of file RooRealIntegral.h. Constructor & Destructor Documentation. ◆ RooRealIntegral() [1/3]. RooRealIntegral::RooRealIntegral ; (; ). Definition at line 282 of file RooRealIntegral.cxx. ◆ RooRealIntegral() [2/3]. RooRealIntegral::RooRealIntegral ; (; const char * ; name, . const char * ; title, . const RooAbsReal & ; function, . const RooArgSet & ; depList, . const RooArgSet * ; funcNormSet = nullptr, . const RooNumIntConfig * ; config = nullptr, . const char * ; rangeName = nullptr . ). Construct integral of 'function' over observables in 'depList' in range 'rangeName' with normalization observables 'funcNormSet' (for p.d.f.s). ; In the integral is performed to the maximum extent possible the internal (analytical) integrals advertised by function. The other integrations are performed numerically. The optional config object prescribes how these numeric integrations are configured.; \Note If pdf component selection was globally overridden to always include all components (either with RooAbsReal::globalSelectComp(bool) or a RooAbsReal::GlobalSelectComponentRAII), then any created integral will ignore component selections during its lifetime. This is especially useful when creating normalization or projection integrals. ; Definition at line 300 of file RooRealIntegral.cxx. ◆ RooRealIntegral() [3/3]. RooRealIntegral::RooRealIntegral ; (; const RooRealIntegral & ; other, . const char * ; name = nullptr . ). Cop",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:64328,config,config,64328,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['config'],['config']
Modifiability,"y. In this case, the normal Bar::Streamer function; will be called. The Bar::Streamer function works OK independently; if the Bar StreamerInfo had been generated in optimized mode or not. void Compress(); Remove empty slots from array. void Clear(Option_t* option = """"); Clear the clones array. Only use this routine when your objects don't; allocate memory since it will not call the object dtors.; However, if the class in the TClonesArray implements the function; Clear(Option_t *option) and if option = ""C"" the function Clear(); is called for all objects in the array. In the function Clear(), one; can delete objects or dynamic arrays allocated in the class.; This procedure is much faster than calling TClonesArray::Delete().; When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; are in turn cleared with the option ""xyz"". void Delete(Option_t* option = """"); Clear the clones array. Use this routine when your objects allocate; memory (e.g. objects inheriting from TNamed or containing TStrings; allocate memory). If not you better use Clear() since if is faster. void Expand(Int_t newSize); Expand or shrink the array to newSize elements. void ExpandCreate(Int_t n); Expand or shrink the array to n elements and create the clone; objects by calling their default ctor. If n is less than the current size; the array is shrinked and the allocated space is freed.; This routine is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly). void ExpandCreateFast(Int_t n); Expand or shrink the array to n elements and create the clone; objects by calling their default ctor. If n is less than the current size; the array is shrinked but the allocated space is _not_ freed.; This routine is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; Th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClonesArray.html:17687,inherit,inheriting,17687,root/html528/TClonesArray.html,https://root.cern,https://root.cern/root/html528/TClonesArray.html,2,['inherit'],['inheriting']
Modifiability,"y. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GED; » TStyleManager. class TStyleManager: public TGMainFrame. TStyleManager. This class provides a Graphical User Interface to manage styles; in ROOT. It allows the user to edit styles, import / export; them to macros, apply a style on the selected object or on; all canvases, change gStyle. Activate the style manager by selecting Edit menu / Style...; in the canvas window. The Style Manager interface is composed of two parts:; - the top level interface that manages a list of styles;; - the style editor, which deals with the current style settings. /*. */. The combo box 'Available Styles' contains the list of available; styles for the current ROOT session and shows the currently; selected one. The field on the right shows the setting of the gStyle.; You can set the global variable gStyle to the selected style by; clicking on the button in the middle.; The group frame 'Apply on' displays information for the currently; selected canvas and object in the ROOT session. This selection might; be changed by clicking on another object with the middle mouse; button. You have a choice to apply a style on the selected object or; on all available canvases.; WARNING: You cannot undo the changes after applying the style! If; you are not sure of that action, it may be better to see a preview; of what you are going to apply.; If the check button 'Preview' is selected, a preview of the selected; canvas according to the selected style will be shown. The selection; of the next check button 'Run Time Preview' will apply updates of; the preview any time a value of the selected style is changed. For; drawings that take a time it is better to disable this option. Create a new style:; A new style can be created via the Style menu/New... or the toolbar.; A clone of the selected style will be used as a bas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStyleManager.html:1046,variab,variable,1046,root/html602/TStyleManager.html,https://root.cern,https://root.cern/root/html602/TStyleManager.html,2,['variab'],['variable']
Modifiability,"y. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOSTATS; » RooStats::HybridCalculatorOriginal. class RooStats::HybridCalculatorOriginal: public RooStats::HypoTestCalculator, public TNamed. HybridCalculatorOriginal class: this class is a fresh rewrite in RooStats of; 	RooStatsCms/LimitCalculator developped by D. Piparo and G. Schott; Authors: D. Piparo, G. Schott - Universitaet Karlsruhe. The class is born from the need to have an implementation of the CLs; method that could take advantage from the RooFit Package.; The basic idea is the following:; - Instantiate an object specifying a signal+background model, a background model and a dataset.; - Perform toy MC experiments to know the distributions of -2lnQ; - Calculate the CLsb and CLs values as ""integrals"" of these distributions. The class allows the user to input models as RooAbsPdf ( TH1 object could be used; by using the RooHistPdf class); The pdfs must be ""extended"": for more information please refer to; http://roofit.sourceforge.net). The dataset can be entered as a; RooAbsData objects. Unlike the TLimit Class a complete MC generation is performed at each step; and not a simple Poisson fluctuation of the contents of the bins.; Another innovation is the treatment of the nuisance parameters. The user; can input in the constructor nuisance parameters.; To include the information that we have about the nuisance parameters a prior; PDF (RooAbsPdf) should be specified. Different test statistic can be used (likelihood ratio, number of events or; profile likelihood ratio. The default is the likelihood ratio.; See the method SetTestStatistic. The number of toys to be generated is controlled by SetNumberOfToys(n). The result of the calculations is returned as a HybridResult object pointer. see also the following interesting references:; - Alex Read, ""Presentation of search results: the CLs technique"",; Journal o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HybridCalculatorOriginal.html:1130,extend,extended,1130,root/html528/RooStats__HybridCalculatorOriginal.html,https://root.cern,https://root.cern/root/html528/RooStats__HybridCalculatorOriginal.html,1,['extend'],['extended']
Modifiability,"y. TClass * GetClass(const type_info& typeinfo, Bool_t load = kTRUE, Bool_t silent = kFALSE) const; Return pointer to class from its name. Obsolete, use TClass::GetClass directly; See TClass::GetClass. TColor * GetColor(Int_t color) const; Return address of color with index color. TCanvas * MakeDefCanvas() const; Return a default canvas. TDataType * GetType(const char* name, Bool_t load = kFALSE) const; Return pointer to type with name. TFile * GetFile(const char* name) const; Return pointer to file with name. TStyle * GetStyle(const char* name) const; Return pointer to style with name. TObject * GetFunction(const char* name) const; Return pointer to function with name. TFunctionTemplate * GetFunctionTemplate(const char* name). TGlobal * GetGlobal(const char* name, Bool_t load = kFALSE) const; Return pointer to global variable by name. If load is true force; reading of all currently defined globals from CINT (more expensive). TGlobal * GetGlobal(const TObject* obj, Bool_t load = kFALSE) const; Return pointer to global variable with address addr. TListOfFunctions * GetGlobalFunctions(); Internal routine returning, and creating if necessary, the list; of global function. TCollection * GetListOfFunctionOverloads(const char* name) const; Return the collection of functions named ""name"". TFunction * GetGlobalFunction(const char* name, const char* params = 0, Bool_t load = kFALSE); Return pointer to global function by name.; If params != 0 it will also resolve overloading other it returns the first; name match.; If params == 0 and load is true force reading of all currently defined; global functions from Cling.; The param string must be of the form: ""3189,\""aap\"",1.3"". TFunction * GetGlobalFunctionWithPrototype(const char* name, const char* proto = 0, Bool_t load = kFALSE); Return pointer to global function by name. If proto != 0; it will also resolve overloading. If load is true force reading; of all currently defined global functions from CINT (more expensive).; The prot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TROOT.html:27013,variab,variable,27013,root/html602/TROOT.html,https://root.cern,https://root.cern/root/html602/TROOT.html,2,['variab'],['variable']
Modifiability,"y. void SecondSort(); Sort buffers to be prefetched in increasing order of positions.; Merge consecutive blocks if necessary.; Sort buffers to be prefetched in increasing order of positions.; Merge consecutive blocks if necessary. TFilePrefetch* GetPrefetchObj(). void WaitFinishPrefetch(). Int_t SetBufferSize(Int_t buffersize); Sets the buffer size. If the current prefetch list is too large to fit in; the new buffer some or all of the prefetch blocks are dropped. The; requested buffersize must be greater than zero.; Returns 0 if the prefetch block lists remain unchanged; 1 if some or all blocks have been removed from the prefetch list; -1 on error. void SetEnablePrefetching(Bool_t setPrefetching = kFALSE); Set the prefetching mode of this file.; if 'setPrefetching', enable the asynchronous prefetching; (using TFilePrefetch) and if the gEnv and rootrc; variable Cache.Directory is set, also enable the local; caching of the prefetched blocks.; if 'setPrefetching', the old prefetcher is enabled is; the gEnv and rootrc variable is TFile.AsyncReading. void SetEnablePrefetchingImpl(Bool_t setPrefetching = kFALSE); TFileCacheRead implementation of SetEnablePrefetching. This function is called from the constructor and should not be virtual. TFileCacheRead(const TFileCacheRead& ). TFileCacheRead& operator=(const TFileCacheRead& ). Int_t AddBranch(TBranch* , Bool_t = kFALSE); { return 0; }. Int_t AddBranch(const char* , Bool_t = kFALSE); { return 0; }. void AddNoCacheBytesRead(Long64_t len); { fNoCacheBytesRead += len; }. void AddNoCacheReadCalls(Int_t reads); { fNoCacheReadCalls += reads; }. Int_t GetBufferSize() const; { return fBufferSize; }. Long64_t GetBytesRead() const; { return fBytesRead; }. Long64_t GetNoCacheBytesRead() const; { return fNoCacheBytesRead; }. Long64_t GetBytesReadExtra() const; { return fBytesReadExtra; }. TFile * GetFile() const; { return fFile; }. Int_t GetNseek() const; { return fNseek; }. Int_t GetNtot() const; { return fNtot; }. Int_t GetReadCalls(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFileCacheRead.html:12850,variab,variable,12850,root/html604/TFileCacheRead.html,https://root.cern,https://root.cern/root/html604/TFileCacheRead.html,1,['variab'],['variable']
Modifiability,"y.h; RooCategory.h; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooBMixDecayClass RooBMixDecay is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf310__sliceplot_8C.html:4737,variab,variable,4737,doc/master/rf310__sliceplot_8C.html,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html,1,['variab'],['variable']
Modifiability,"y1, Double_t x2, Double_t y2);  Diamond standard constructor. ;  ;  ~TDiamond () override;  Diamond destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a diamond. ;  ; void Draw (Option_t *option="""") override;  Draw this diamond with its current attributes. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; TClass * IsA () const override;  ; Int_t IsInside (Double_t x, Double_t y) const override;  Return 1 if the point (x,y) is inside the polygon defined by the diamond 0 otherwise. ;  ; void Paint (Option_t *option="""") override;  Paint this diamond with its current attributes. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TBox. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TPaveText;  TPaveText ();  pavetext default constructor. ;  ;  TPaveText (const TPaveText &pavetext);  pavetext copy constructor. ;  ;  TPaveText (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option=""br"");  PaveText normal constructor. ;  ;  ~TPaveText () override;  pavetext default destructor. ;  ; virtual TBox * AddBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Add a new graphics box to this pavetext. ;  ; virtual TLine * AddLine (Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0);  Add a new graphics line to this pavetext. ;  ; virtual TText * AddText (const char *label);  Add a new Text line to this pavetext. ;  ; virtual TText * AddText (Double_t x1, Double_t y1, const char *label);  Add a new Text line to this pavetext at given coordinates. ;  ; void Clear (Option_t *option="""") override;  Clear all lines in this pavetext. ;  ; virtual void DeleteText ();  Delete text at the mouse position. ;  ; void Draw (Option_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDiamond.html:2049,inherit,inherited,2049,doc/master/classTDiamond.html,https://root.cern,https://root.cern/doc/master/classTDiamond.html,1,['inherit'],['inherited']
Modifiability,"y: . -1: Only one or 0 element per entry but contains variable length array!; 0: Only one element per entry, no variable length array; 1: loop over the elements of a variable length array; 2: loop over elements of fixed length array (nData is the same for all entry) . Definition at line 314 of file TFormLeafInfo.cxx. ◆ GetNdata() [1/2]. Int_t TFormLeafInfo::GetNdata ; (; ). virtual . Get the number of element in the entry. ; Reimplemented in TFormLeafInfoCast.; Definition at line 332 of file TFormLeafInfo.cxx. ◆ GetNdata() [2/2]. Int_t TFormLeafInfo::GetNdata ; (; TLeaf * ; leaf). Definition at line 320 of file TFormLeafInfo.cxx. ◆ GetObjectAddress(). char * TFormLeafInfo::GetObjectAddress ; (; TLeafElement * ; leaf, . Int_t & ; instance . ). Returns the location of the object pointed to. ; Modify instance if the object is part of an array. ; Definition at line 184 of file TFormLeafInfo.cxx. ◆ GetPrimaryIndex(). Int_t TFormLeafInfo::GetPrimaryIndex ; (; ). virtual . Method for multiple variable dimensions. ; Reimplemented in TFormLeafInfoMultiVarDim.; Definition at line 418 of file TFormLeafInfo.cxx. ◆ GetSize(). Int_t TFormLeafInfo::GetSize ; (; Int_t ; index). virtual . For the current entry, and the value 'index' for the main array, return the size of the secondary variable dimension of the 'array'. ; Reimplemented in TFormLeafInfoMultiVarDim.; Definition at line 448 of file TFormLeafInfo.cxx. ◆ GetSumOfSizes(). Int_t TFormLeafInfo::GetSumOfSizes ; (; ). virtual . Total all the elements that are available for the current entry for the secondary variable dimension. ; Reimplemented in TFormLeafInfoMultiVarDim.; Definition at line 458 of file TFormLeafInfo.cxx. ◆ GetTypedValue(). template<typename T > . T TFormLeafInfo::GetTypedValue ; (; TLeaf * ; leaf, . Int_t ; instance = 0 . ). inline . Definition at line 133 of file TFormLeafInfo.h. ◆ GetValue(). virtual Double_t TFormLeafInfo::GetValue ; (; TLeaf * ; leaf, . Int_t ; instance = 0 . ). inlinevirtual . Reimplement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormLeafInfo.html:20542,variab,variable,20542,doc/master/classTFormLeafInfo.html,https://root.cern,https://root.cern/doc/master/classTFormLeafInfo.html,1,['variab'],['variable']
Modifiability,"y::ReadFile ; (; ). virtual . Read the key structure from the file. ; Reimplemented in TKeySQL, and TKeyXML.; Definition at line 1274 of file TKey.cxx. ◆ ReadKeyBuffer(). void TKey::ReadKeyBuffer ; (; char *& ; buffer). Decode input buffer. ; Definition at line 1231 of file TKey.cxx. ◆ ReadObj(). TObject * TKey::ReadObj ; (; ). virtual . To read a TObject* from the file. ; The object associated to this key is read from the file into memory Once the key structure is read (via Streamer) the class identifier of the object is known. Using the class identifier we find the TClass object for this class. A TClass object contains a full description (i.e. dictionary) of the associated class. In particular the TClass object can create a new object of the class type it describes. This new object now calls its Streamer function to rebuilt itself.; Use TKey::ReadObjectAny to read any object non-derived from TObject. Note; A C style cast can only be used in the case where the final class of this object derives from TObject as a first inheritance, otherwise one must use a dynamic_cast.; Example1: simplified case; class MyClass : public TObject, public AnotherClass; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one get away with using: MyClass *obj = (MyClass*)key->ReadObj();; Example2: Usual case (recommended unless performance is critical); MyClass *obj = dynamic_cast<MyClass*>(key->ReadObj());; which support also the more complex inheritance like: class MyClass : public AnotherClass, public TObject; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented in TKeySQL, and TKeyXML.; Definition at line 759 of file TKey.cxx. ◆ ReadObject(). template<typename T > . T * TKey::ReadObject ; (; ). inline . To read an object (non deriving from TObject) from the file. ; This is more user friendly version of TKey::ReadObjectAny. See TKey::ReadObjectAny for more details. ; Definition at line 103 of file TKey.h. ◆ ReadObjectAny(). void * TKey::Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey.html:28484,inherit,inheritance,28484,doc/master/classTKey.html,https://root.cern,https://root.cern/doc/master/classTKey.html,1,['inherit'],['inheritance']
Modifiability,y::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory::StatError ; RooStats::HistFactory::StatErrorConfig ; RooStats::HybridCalculator ; RooStats::HybridCalculatorOriginal Hypothesis test calculator using a Bayesian-frequentist hybrid method; RooStats::HybridPlot Provides the plots for an HybridResult; RooStats::HybridResult Class containing the results of the HybridCalculator; RooStats::HypoTestCalculator Interface for tools doing hypothesis tests; RooStats::HypoTestCalculatorGeneric ; RooStats::HypoTestInverter HypoTestInverter class; RooStats::HypoTestInverterOriginal HypoTestInverterOriginal class; RooStats::HypoTestInverterPlot HypoTestInverterPlot class; RooStats::HypoTestInverterResult HypoTestInverterResult class ; RooStats::HypoTestPlot ; RooStats::HypoTestResult Base class to represent results of a hypothesis test; RooStats::IntervalCalculator Interface for tools setting limits (producing confidence intervals); RooStats::LikelihoodInterval Concrete implementation of a ConfInterval based on a likelihood ratio; RooStats::LikelihoodIntervalPlot Class containing the results of the IntervalCalculator; RooStats::MCMCCalculator Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestStat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:48665,config,configuration,48665,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,1,['config'],['configuration']
Modifiability,"y; RooAbsPdf::prepareMultiGen(). If many identical generation requests; are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); combination than calling the standard generate() multiple times as; initialization overhead is only incurred once. RooDataSet * generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Int_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a; number of events to generate that will override the default. The result is a; copy of the prototype dataset with only variables in whatVars; randomized. Variables in whatVars that are not in the prototype; will be added as new columns to the generated dataset. Returns; zero ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:64931,extend,extended,64931,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"y; kNoCacheUpdate; kRefreshLs; kList; kAllFiles; kStagedFiles; kNoStagedCheck; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Long64_tTDataSetManager::fAvgFileSizeAverage file size to be used to estimate the dataset size (in MB); TUriTDataSetManager::fBaseBase URI used to parse dataset names; TStringTDataSetManager::fCommonGroupGroup that stores the COMMON datasets; TStringTDataSetManager::fCommonUserUser that stores the COMMON datasets; TStringTDataSetManager::fGroupGroup to which the owner of this session belongs; TStringTDataSetManager::fGroupConfigFilePath to the group config file; TMapTDataSetManager::fGroupQuotaGroup quotas (read from config file); TMapTDataSetManager::fGroupUsed<group> --> <used bytes> (TParameter); Long_tTDataSetManager::fMTimeGroupConfigLast modification of the group config file; Int_tTDataSetManager::fNDisappearedFilesNumber of files disappared in the last ScanDataSet operation; Int_tTDataSetManager::fNOpenedFilesNumber of files opened in the last ScanDataSet operation; Int_tTDataSetManager::fNTouchedFilesNumber of files touched in the last ScanDataSet operation; TStringTDataSetManager::fUserOwner of the session; TMapTDataSetManager::fUserUsed<group> --> <map of users> --> <value>; static TStringTDataSetManager::fgCommonDataSetTagName for common datasets, default: COMMON; static TList*TDataSetManager::fgDataSetSrvMapsList of TPair(TRegexp, TObjString) for mapping server coordinates. private:. Int_tfCacheUpdatePeriodPeriod for checking for new updated information; TStringfDataSetDirLocation of datasets; TStringfDataSetLockFileDataset lock file; Bool_tfIsRemoteTrue if the repository is remote; TStringfListFileFile to check repository updates; TStringfLocalCacheDirLocal cache when the repository is remote; Int_tfLockFileTimeL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:10268,config,config,10268,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,12,['config'],['config']
Modifiability,"y; kOverwrite; kWriteDelete; };. private:. THashTable*fBasesLoaded! table of base classes already checked or loaded; TList*fHandlerslist of plugin handlers; Bool_tfReadingDirs! true if we are running LoadHandlersFromPluginDirs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TPluginManager(); Clean up the plugin manager. void LoadHandlersFromEnv(TEnv* env); Load plugin handlers specified in config file, like:; Plugin.TFile: ^rfio: TRFIOFile RFIO ""TRFIOFile(...)""; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""TMySQLServer(...)""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""TPgSQLServer(...)""; The + allows the extension of an already defined resource (see TEnv). void LoadHandlerMacros(const char* path); Load all plugin macros from the specified path/base directory. void LoadHandlersFromPluginDirs(const char* base = 0); Load plugin handlers specified via macros in a list of plugin; directories. The $ROOTSYS/etc/plugins is the default top plugin directory; specified in $ROOTSYS/etc/system.rootrc. The macros must have names; like <BaseClass>/PX0_<PluginClass>.C, e.g.:; TFile/P10_TRFIOFile.C, TSQLServer/P20_TMySQLServer.C, etc.; to allow easy sorting and grouping. If the BaseClass is in a namespace; the directory must have the name NameSpace@@BaseClass as : is a reserved; pathname character on some operating systems. Macros not beginning with; 'P' and ending with "".C"" are ignored. If base is specified only plugin; macros for that base class are loaded. The macros typically; should look like:; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; }; In general these macros should not cause side effects, by changing global; ROOT state via, e.g. gSystem calls, etc. However, in specific cases; this might be useful, e.g. adding a library search path, adding a specific; dependency, check on some OS or ROOT capability or downloading;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginManager.html:9669,plugin,plugins,9669,root/html528/TPluginManager.html,https://root.cern,https://root.cern/root/html528/TPluginManager.html,8,['plugin'],"['plugin', 'plugins']"
Modifiability,"y; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfNamename of the collection; Int_tfSizenumber of elements in collection. private:. static TCollection*fgCurrentCollectionused by macro R__FOR_EACH; static Bool_tfgEmptyingGarbageused by garbage collector; static TObjectTable*fgGarbageCollectionused by garbage collector; static Int_tfgGarbageStackused by garbage collector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddAll(const TCollection* col); Add all objects from collection col to this collection. void AddVector(TObject *va_(obj1), ...); Add all arguments to the collection. The list of objects must be; temrinated by 0, e.g.: l.AddVector(o1, o2, o3, o4, 0);. Bool_t AssertClass(TClass* cl) const; Make sure all objects in this collection inherit from class cl. void Browse(TBrowser* b); Browse this collection (called by TBrowser).; If b=0, there is no Browse call TObject::Browse(0) instead.; This means TObject::Inspect() will be invoked indirectly. Int_t Compare(const TObject* obj) const; Compare two TCollection objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp()). void Draw(Option_t* option = """"); Draw all objects in this collection.; wildcarding supported, eg option=""xxx*"" draws only objects; with names xxx*. void Dump() const; Dump all objects in this collection. TObject * FindObject(const char *name); Find an object in this collection using its name. Requires a sequential; scan till the object has been found. Returns 0 if object with specified; name is not found. TObject * operator()(const char* name) const; Find an object in this collection by name. TObject * FindObject(const TObject *obj); Find an object in this collection using the object's IsEqua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCollection.html:8144,inherit,inherit,8144,root/html526/TCollection.html,https://root.cern,https://root.cern/root/html526/TCollection.html,1,['inherit'],['inherit']
Modifiability,"y; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfNamename of the collection; Int_tfSizenumber of elements in collection. private:. static TCollection*fgCurrentCollectionused by macro R__FOR_EACH; static Bool_tfgEmptyingGarbageused by garbage collector; static TObjectTable*fgGarbageCollectionused by garbage collector; static Int_tfgGarbageStackused by garbage collector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddAll(const TCollection* col); Add all objects from collection col to this collection. void AddVector(TObject *va_(obj1), ...); Add all arguments to the collection. The list of objects must be; temrinated by 0, e.g.: l.AddVector(o1, o2, o3, o4, 0);. Bool_t AssertClass(TClass* cl) const; Make sure all objects in this collection inherit from class cl. void Browse(TBrowser* b); Browse this collection (called by TBrowser).; If b=0, there is no Browse call TObject::Browse(0) instead.; This means TObject::Inspect() will be invoked indirectly. TObject * Clone(const char* newname = """") const; Make a clone of an collection using the Streamer facility.; If newname is specified, this will be the name of the new collection. Int_t Compare(const TObject* obj) const; Compare two TCollection objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp()). void Draw(Option_t* option = """"); Draw all objects in this collection. void Dump() const; Dump all objects in this collection. TObject * FindObject(const char* name) const; Find an object in this collection using its name. Requires a sequential; scan till the object has been found. Returns 0 if object with specified; name is not found. TObject * operator()(const char* name) const; Find an object in this collection by ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TCollection.html:8121,inherit,inherit,8121,root/html528/TCollection.html,https://root.cern,https://root.cern/root/html528/TCollection.html,4,['inherit'],['inherit']
Modifiability,"yEntries or hadd interfaces. The new cache is enabled by default, to update the size of the cache or disable it from TTreeCloner use: TTreeCloner::SetCacheSize. To do the same from TTree::CopyEntries add to the option string “cachesize=SIZE”. To update the size of the cache or disable it from hadd, use the command line option -cachesize SIZE. SIZE shouyld be given in number bytes and can be expressed in ‘human readable form’ (number followed by size unit like MB, MiB, GB or GiB, etc. or SIZE can be set zero to disable the cache. Histogram Libraries. Protect access to TROOT::GetListOfGlobalFunctions in TFormula. Math. Update MixMax random number generator for 32 bit architectures. TColor. Import TColor from master to make sure the high quality palettes are defined only ones. This was requested here. PyROOT. Fix case where c++ exception in a constructor were not propagated to python ROOT-7864; Fix case where PyROOT was unable to call copy constructor ROOT-7783; Fix handling of vector<enums> ROOT-7916; Fix the wrong return value when calling a c++ function returning short, or when retuning a char with a negative value ROOT-7872; Added a new configuration option (ROOT.PyConfig.DisableRootLogon) to disable processing of the rootlogon[.py|C] macro in addition to the -n option in the command arguments. Bug Fixes and Tasks. [ROOT-7426] - Cannot print elements of vector on Mac; [ROOT-7739] - TVectorD times double returns a TH1 on ROOT command line; [ROOT-7825] - wrong value passed to function expecting “const T*&""; [ROOT-7830] - Cling automatic RooFit objects always reloaded from file; [ROOT-7862] - CMake Error: CMake can not determine linker language for target: g2root; [ROOT-7864] - Segfault in __cf_15 and FastCall (c++ exception in a constructor is not propagated to python); [ROOT-7865] - root commandline tools are not executable after installation; [ROOT-7872] - PyROOT: wrong return value when calling a c++ function returning short; [ROOT-7879] - Autoloader (parser?) tri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v606/release-notes.html:26893,config,configuration,26893,doc/v606/release-notes.html,https://root.cern,https://root.cern/doc/v606/release-notes.html,1,['config'],['configuration']
Modifiability,"yGSL method key; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimits; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; void*_workspaceGSL workspace ; Double_t*_x! Current coordinate; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register this class with RooNumIntConfig as a possible choice of numeric; integrator for one-dimensional integrals over finite and infinite domains. RooAdaptiveGaussKronrodIntegrator1D(); coverity[UNINIT_CTOR]; Default constructor. RooAdaptiveGaussKronrodIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor taking a function binding and a configuration object. RooAdaptiveGaussKronrodIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Constructor taking a function binding, an integration range and a configuration object. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Virtual constructor. Bool_t initialize(); Initialize integrator allocate buffers and setup GSL workspace. ~RooAdaptiveGaussKronrodIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Double_t integral(const Double_t* yvec = 0); Calculate and return integral at at given parameter values. RooAdaptiveGaussKronrodIntegrator1D(); Constructors, assignment etc. Bool_t setUseIntegrandLimits(Bool_t flag); If flag is true, intergr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAdaptiveGaussKronrodIntegrator1D.html:8785,config,config,8785,root/html530/RooAdaptiveGaussKronrodIntegrator1D.html,https://root.cern,https://root.cern/root/html530/RooAdaptiveGaussKronrodIntegrator1D.html,6,['config'],"['config', 'configuration']"
Modifiability,"yGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; TObjArray * fKeep;  Pointer to the class of the elements. ;  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObjArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TObjArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inheri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClonesArray.html:25046,inherit,inherited,25046,doc/master/classTClonesArray.html,https://root.cern,https://root.cern/doc/master/classTClonesArray.html,1,['inherit'],['inherited']
Modifiability,"yLen = body.Length();; 1956 ExtractFunctors(body);; 1957 formula.Replace(i - originalBodyLen, originalBodyLen, body, body.Length());; 1958 i += body.Length() - originalBodyLen;; 1959 fFuncs.push_back(TFormulaFunction(name, body, args));; 1960 } else {; 1961 ; 1962 // std::cout << ""check if character : "" << i << "" "" << formula[i] << "" from name "" << name << "" is a; 1963 // function "" << std::endl;; 1964 ; 1965 // check if function is provided by gROOT; 1966 TObject *obj = nullptr;; 1967 // exclude case function name is x,y,z,t; 1968 if (!IsReservedName(name)); 1969 {; 1970 R__LOCKGUARD(gROOTMutex);; 1971 obj = gROOT->GetListOfFunctions()->FindObject(name);; 1972 }; 1973 TFormula *f = dynamic_cast<TFormula *>(obj);; 1974 if (!f) {; 1975 // maybe object is a TF1; 1976 TF1 *f1 = dynamic_cast<TF1 *>(obj);; 1977 if (f1); 1978 f = f1->GetFormula();; 1979 }; 1980 if (f) {; 1981 // Replacing user formula the old way (as opposed to 'HandleFunctionArguments'); 1982 // Note this is only for replacing functions that do; 1983 // not specify variables and/or parameters in brackets; 1984 // (the other case is done by `HandleFunctionArguments`); 1985 ; 1986 TString replacementFormula = f->GetExpFormula();; 1987 ; 1988 // analyze expression string; 1989 // std::cout << ""formula to replace for "" << f->GetName() << "" is "" << replacementFormula <<; 1990 // std::endl;; 1991 PreProcessFormula(replacementFormula);; 1992 // we need to define different parameters if we use the unnamed default parameters ([0]); 1993 // I need to replace all the terms in the functor for backward compatibility of the case; 1994 // f1(""[0]*x"") f2(""[0]*x"") f1+f2 - it is weird but it is better to support; 1995 // std::cout << ""current number of parameter is "" << fNpar << std::endl;; 1996 int nparOffset = 0;; 1997 // if (fParams.find(""0"") != fParams.end() ) {; 1998 // do in any case if parameters are existing; 1999 std::vector<TString> newNames;; 2000 if (fNpar > 0) {; 2001 nparOffset = fNpar;; 2002 newNames.resize(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:74748,variab,variables,74748,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"yList;  list of menu entries ;  ; UInt_t fEntrySep;  separation distance between entries ;  ; FontStruct_t fFontStruct;  font to draw menu entries ;  ; Bool_t fHasGrab;  true if menu has grabbed pointer ;  ; FontStruct_t fHifontStruct;  font to draw highlighted entries ;  ; TGMenuBar * fMenuBar;  menu bar (if any) ;  ; UInt_t fMenuHeight;  height of popup menu ;  ; UInt_t fMenuWidth;  width of popup menu ;  ; const TGWindow * fMsgWindow;  window which handles menu events ;  ; GContext_t fNormGC;  normal drawing graphics context ;  ; Bool_t fPoppedUp;  true if menu is currently popped up ;  ; GContext_t fSelbackGC;  graphics context for drawing selection background ;  ; GContext_t fSelGC;  graphics context for drawing selections ;  ; TGSplitButton * fSplitButton;  split button (if any) ;  ; Bool_t fStick;  stick mode (popup menu stays sticked on screen) ;  ; UInt_t fXl;  Max width of all menu entries. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPopupMenu.html:29415,inherit,inherited,29415,doc/master/classTGPopupMenu.html,https://root.cern,https://root.cern/doc/master/classTGPopupMenu.html,2,['inherit'],['inherited']
Modifiability,"yListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; RooArgSet_rrvArgsSet of real-valued observables; TIterator*_rrvIter! Iterator over set of real-valued observables; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealVar*_yvarY variable if so designated; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooXYChi2Var(). RooXYChi2Var(const char *name, const char* title, RooAbsReal& func, RooDataSet& xydata, Bool_t integrate). RooXYChi2Var constructor with function and X-Y values dataset. An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; as the Y value and the weight error is interpreted as the Y value error. The weight must have an; non-zero error defined at each point for the chi^2 calcul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooXYChi2Var.html:35417,config,configuration,35417,root/html526/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html526/RooXYChi2Var.html,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"yListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; RooArgSet_rrvArgsSet of real-valued observables; TIterator*_rrvIter! Iterator over set of real-valued observables; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealVar*_yvarY variable if so designated; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooXYChi2Var(); coverity[UNINIT_CTOR]. RooXYChi2Var(const char* name, const char* title, RooAbsReal& func, RooDataSet& data, Bool_t integrate = kFALSE). RooXYChi2Var constructor with function and X-Y values dataset. An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; as the Y value and the weight error is interpreted as the Y value error. The weight must have an; non-zero error defined at e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooXYChi2Var.html:35683,config,configuration,35683,root/html528/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html528/RooXYChi2Var.html,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"yMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrLine; Bool_tfRnrPoints; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tfSmooth; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringTEvePointSet::fTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tfgDefaultSmooth. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveLine(Int_t n_points = 0, TEvePointSelectorConsumer::ETreeVarType_e tv_type = kTVT_XYZ); Constructor. TEveLine(const char* name, Int_t n_points = 0, TEvePointSelectorConsumer::ETreeVarType_e tv_type = kTVT_XYZ); Constructor. const TGPicture* GetListTreeIcon(Bool_t open = kFALSE); Returns list-tree icon for TEveLine. void SetMarkerColor(Color_t col); Set marker color. Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveLine.html:27710,variab,variables,27710,root/html534/TEveLine.html,https://root.cern,https://root.cern/root/html534/TEveLine.html,1,['variab'],['variables']
Modifiability,"yMode TProof::GetQueryMode ; (; Option_t * ; mode = 0); const. Find out the query mode based on the current setting and 'mode'. ; Definition at line 6119 of file TProof.cxx. ◆ GetQueryReference(). Int_t TProof::GetQueryReference ; (; Int_t ; qry, . TString & ; ref . ). private . Get reference for the qry-th query in fQueries (as displayed by ShowQueries). ; Definition at line 5857 of file TProof.cxx. ◆ GetQueryResult(). TQueryResult * TProof::GetQueryResult ; (; const char * ; ref = 0). Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ; If ref = 0 or """", return the last query result. ; Definition at line 2148 of file TProof.cxx. ◆ GetQueryResults(). TList * TProof::GetQueryResults ; (; ). Return pointer to the list of query results in the player. ; Definition at line 2139 of file TProof.cxx. ◆ GetRC() [1/3]. Int_t TProof::GetRC ; (; const char * ; RCenv, . Double_t & ; env, . const char * ; ord = ""0"" . ). Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ; Definition at line 6691 of file TProof.cxx. ◆ GetRC() [2/3]. Int_t TProof::GetRC ; (; const char * ; RCenv, . Int_t & ; env, . const char * ; ord = ""0"" . ). Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ; Definition at line 6665 of file TProof.cxx. ◆ GetRC() [3/3]. Int_t TProof::GetRC ; (; const char * ; RCenv, . TString & ; env, . const char * ; ord = ""0"" . ). Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ; Definition at line 6717 of file TProof.cxx. ◆ GetRealTime(). Float_t TProof::GetRealTime ; (; ); const. inline . Definition at line 930 of file TProof.h. ◆ GetRemoteProtocol(). Int_t TProof::GetRemoteProtocol ; (; ); const. inline . Definition at line 913 of file TProof.h. ◆ GetRunStatus(). ERunStatus TProof::GetRunStatus ; (; ); const. inline . Definition at line 943 of file TProof.h. ◆ GetSandbox(). Int_t TProof::GetSandbox ; (; TString & ; sb, . Bool_t ; assert = kFALSE, . const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:104577,variab,variable,104577,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['variab'],['variable']
Modifiability,"yNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< BitBlock > _aicMap;  ! ;  ; std::map< int, AnaIntData > _anaIntCache;  ! ;  ; TMatrixDSym _cov;  ; TMatrixDSym _covI;  ; double _det;  ; std::map< int, GenData > _genCache;  ! ;  ; RooListProxy _mu;  ; TVectorD _muVec;  ; RooListProxy _x;  ; double _z;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNorm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiVarGaussian.html:68568,inherit,inherited,68568,doc/master/classRooMultiVarGaussian.html,https://root.cern,https://root.cern/doc/master/classRooMultiVarGaussian.html,1,['inherit'],['inherited']
Modifiability,"yOptions(); options that are used ONLY for the READER to ensure backward compatibility; they are hence without any effect (the reader is only reading the training; options that HAD been used at the training of the .xml weightfile at hand. std::map<TString,Double_t> OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); call the Optimzier with the set of paremeters and ranges that; are meant to be tuned. void SetTuneParameters(map<TString,Double_t> tuneParameters); set the tuning parameters accoding to the argument; This is just a dummy .. have a look at the MethodBDT how you could; perhaps implment the same thing for the other Classifiers.. void TrainMethod(). void GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const. void AddRegressionOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddMulticlassOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void NoErrorCalc(Double_t *const err, Double_t *const errUpper). Double_t GetMvaValue(const TMVA::Event *const ev, Double_t* err = 0, Double_t* errUpper = 0). Bool_t IsSignalLike(); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event would be selected as signal or background. Bool_t IsSignalLike(Double_t mvaVal); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event with this mva output value would tbe selected as signal or background. void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:22885,variab,variable,22885,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,1,['variab'],['variable']
Modifiability,"yOptions(); options that are used ONLY for the READER to ensure backward compatibility; they are hence without any effect (the reader is only reading the training; options that HAD been used at the training of the .xml weightfile at hand. std::map<TString,Double_t> OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); call the Optimzier with the set of paremeters and ranges that; are meant to be tuned. void SetTuneParameters(map<TString,Double_t> tuneParameters); set the tuning parameters accoding to the argument; This is just a dummy .. have a look at the MethodBDT how you could; perhaps implment the same thing for the other Classifiers.. void TrainMethod(). void GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const. void AddRegressionOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddMulticlassOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void NoErrorCalc(Double_t*const err, Double_t*const errUpper). Double_t GetMvaValue(const TMVA::Event*const ev, Double_t* err = 0, Double_t* errUpper = 0). Bool_t IsSignalLike(); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event would be selected as signal or background. Bool_t IsSignalLike(Double_t mvaVal); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event with this mva output value would tbe selected as signal or background. void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:24398,variab,variable,24398,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,2,['variab'],['variable']
Modifiability,"yPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL.html:35829,inherit,inherited,35829,doc/master/classTBufferSQL.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL.html,1,['inherit'],['inherited']
Modifiability,"y_locations(dom_ctx->ssl_ctx, ca_file, ca_path); 16625 != 1) {; 16626 mg_cry_ctx_internal(phys_ctx,; 16627 ""SSL_CTX_load_verify_locations error: %s ""; 16628 ""ssl_verify_peer requires setting ""; 16629 ""either ssl_ca_path or ssl_ca_file. ""; 16630 ""Is any of them present in the ""; 16631 "".conf file?"",; 16632 ssl_error());; 16633 return 0;; 16634 }; 16635 ; 16636 if (peer_certificate_optional) {; 16637 SSL_CTX_set_verify(dom_ctx->ssl_ctx, SSL_VERIFY_PEER, NULL);; 16638 } else {; 16639 SSL_CTX_set_verify(dom_ctx->ssl_ctx,; 16640 SSL_VERIFY_PEER; 16641 | SSL_VERIFY_FAIL_IF_NO_PEER_CERT,; 16642 NULL);; 16643 }; 16644 ; 16645 if (use_default_verify_paths; 16646 && (SSL_CTX_set_default_verify_paths(dom_ctx->ssl_ctx) != 1)) {; 16647 mg_cry_ctx_internal(phys_ctx,; 16648 ""SSL_CTX_set_default_verify_paths error: %s"",; 16649 ssl_error());; 16650 return 0;; 16651 }; 16652 ; 16653 if (dom_ctx->config[SSL_VERIFY_DEPTH]) {; 16654 verify_depth = atoi(dom_ctx->config[SSL_VERIFY_DEPTH]);; 16655 SSL_CTX_set_verify_depth(dom_ctx->ssl_ctx, verify_depth);; 16656 }; 16657 }; 16658 ; 16659 if (dom_ctx->config[SSL_CIPHER_LIST] != NULL) {; 16660 if (SSL_CTX_set_cipher_list(dom_ctx->ssl_ctx,; 16661 dom_ctx->config[SSL_CIPHER_LIST]); 16662 != 1) {; 16663 mg_cry_ctx_internal(phys_ctx,; 16664 ""SSL_CTX_set_cipher_list error: %s"",; 16665 ssl_error());; 16666 }; 16667 }; 16668 ; 16669 /* SSL session caching */; 16670 ssl_cache_timeout = ((dom_ctx->config[SSL_CACHE_TIMEOUT] != NULL); 16671 ? atoi(dom_ctx->config[SSL_CACHE_TIMEOUT]); 16672 : 0);; 16673 if (ssl_cache_timeout > 0) {; 16674 SSL_CTX_set_session_cache_mode(dom_ctx->ssl_ctx, SSL_SESS_CACHE_BOTH);; 16675 /* SSL_CTX_sess_set_cache_size(dom_ctx->ssl_ctx, 10000); ... use; 16676 * default */; 16677 SSL_CTX_set_timeout(dom_ctx->ssl_ctx, (long)ssl_cache_timeout);; 16678 }; 16679 ; 16680#if defined(USE_ALPN); 16681 /* Initialize ALPN only of TLS library (OpenSSL version) supports ALPN */; 16682#if !defined(NO_SSL_DL); 16683 if (!tls_feature_missing[T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:493979,config,config,493979,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,6,['config'],['config']
Modifiability,"y_locations(dom_ctx->ssl_ctx, ca_file, ca_path); 16626 != 1) {; 16627 mg_cry_ctx_internal(phys_ctx,; 16628 ""SSL_CTX_load_verify_locations error: %s ""; 16629 ""ssl_verify_peer requires setting ""; 16630 ""either ssl_ca_path or ssl_ca_file. ""; 16631 ""Is any of them present in the ""; 16632 "".conf file?"",; 16633 ssl_error());; 16634 return 0;; 16635 }; 16636 ; 16637 if (peer_certificate_optional) {; 16638 SSL_CTX_set_verify(dom_ctx->ssl_ctx, SSL_VERIFY_PEER, NULL);; 16639 } else {; 16640 SSL_CTX_set_verify(dom_ctx->ssl_ctx,; 16641 SSL_VERIFY_PEER; 16642 | SSL_VERIFY_FAIL_IF_NO_PEER_CERT,; 16643 NULL);; 16644 }; 16645 ; 16646 if (use_default_verify_paths; 16647 && (SSL_CTX_set_default_verify_paths(dom_ctx->ssl_ctx) != 1)) {; 16648 mg_cry_ctx_internal(phys_ctx,; 16649 ""SSL_CTX_set_default_verify_paths error: %s"",; 16650 ssl_error());; 16651 return 0;; 16652 }; 16653 ; 16654 if (dom_ctx->config[SSL_VERIFY_DEPTH]) {; 16655 verify_depth = atoi(dom_ctx->config[SSL_VERIFY_DEPTH]);; 16656 SSL_CTX_set_verify_depth(dom_ctx->ssl_ctx, verify_depth);; 16657 }; 16658 }; 16659 ; 16660 if (dom_ctx->config[SSL_CIPHER_LIST] != NULL) {; 16661 if (SSL_CTX_set_cipher_list(dom_ctx->ssl_ctx,; 16662 dom_ctx->config[SSL_CIPHER_LIST]); 16663 != 1) {; 16664 mg_cry_ctx_internal(phys_ctx,; 16665 ""SSL_CTX_set_cipher_list error: %s"",; 16666 ssl_error());; 16667 }; 16668 }; 16669 ; 16670 /* SSL session caching */; 16671 ssl_cache_timeout = ((dom_ctx->config[SSL_CACHE_TIMEOUT] != NULL); 16672 ? atoi(dom_ctx->config[SSL_CACHE_TIMEOUT]); 16673 : 0);; 16674 if (ssl_cache_timeout > 0) {; 16675 SSL_CTX_set_session_cache_mode(dom_ctx->ssl_ctx, SSL_SESS_CACHE_BOTH);; 16676 /* SSL_CTX_sess_set_cache_size(dom_ctx->ssl_ctx, 10000); ... use; 16677 * default */; 16678 SSL_CTX_set_timeout(dom_ctx->ssl_ctx, (long)ssl_cache_timeout);; 16679 }; 16680 ; 16681#if defined(USE_ALPN); 16682 /* Initialize ALPN only of TLS library (OpenSSL version) supports ALPN */; 16683#if !defined(NO_SSL_DL); 16684 if (!tls_feature_missing[T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:494012,config,config,494012,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,6,['config'],['config']
Modifiability,"y_move_constructible<T>::value) && std::is_trivially_destructible<T>::value>; class ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >SmallVectorTemplateBase<TriviallyCopyable = false> - This is where we put method implementations that are designed to work with non-trivial T's. ; We approximate is_trivially_copyable with trivial move/copy construction and trivial destruction. While the standard doesn't specify that you're allowed copy these types with memcpy, there is no way for the type to observe this. This catches the important case of std::pair<POD, POD>, which is not trivially assignable. ; Definition at line 328 of file RVec.hxx. Public Member Functions; void pop_back ();  ; void push_back (const T &Elt);  ; void push_back (T &&Elt);  ;  Public Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >; reference back ();  ; const_reference back () const;  ; const_iterator begin () const noexcept;  ; iterator begin () noexcept;  ; size_t capacity () const noexcept;  ; size_t capacity_in_bytes () const;  ; const_iterator cbegin () const noexcept;  ; const_iterator cend () const noexcept;  ; const_reverse_iterator crbegin () const noexcept;  ; const_reverse_iterator crend () const noexcept;  ; const_pointer data () const noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; pointer data () noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; bool empty () const;  ; const_iterator end () const noexcept;  ; iterator end () noexcept;  ; reference front ();  ; const_reference front () const;  ; size_type max_size () const noexcept;  ; const_reverse_iterator rbegin () const noexcept;  ; reverse_iterator rbegin () noexcept;  ; const_reverse_iterator rend () const noexcept;  ; reverse_iterator rend () noexcept;  ; size_t size () const;  ; size_type size_in_bytes () const;  ;  Public Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; size_t capacity () const noexcept;  ; b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html:1283,inherit,inherited,1283,doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html,1,['inherit'],['inherited']
Modifiability,"y_pdfListList of PDF components; RooLinkedList_pdfNSetListList of PDF component normalization sets; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; TNamed*_refRangeNameReference range name for interpretation of conditional products; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; Bool_t_selfNormIs self-normalized; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_useDefaultGenUse default or distributed event generator; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProdPdf.html:44650,config,configuration,44650,root/html532/RooProdPdf.html,https://root.cern,https://root.cern/root/html532/RooProdPdf.html,2,['config'],['configuration']
Modifiability,"ybins Number of bins for second variable; 1176/// \param[in] zbins Number of bins for third variable; 1177/// \return TH1*, which is one of TH[1-3]. The histogram is owned by the caller.; 1178///; 1179/// For a greater degree of control use; 1180/// RooAbsReal::createHistogram(const char *, const RooAbsRealLValue&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&) const; 1181///; 1182 ; 1183TH1* RooAbsReal::createHistogram(RooStringView varNameList, Int_t xbins, Int_t ybins, Int_t zbins) const; 1184{; 1185 std::unique_ptr<RooArgSet> vars{getVariables()};; 1186 ; 1187 auto varNames = ROOT::Split(varNameList, "",:"");; 1188 std::vector<RooRealVar*> histVars(3, nullptr);; 1189 ; 1190 for(std::size_t iVar = 0; iVar < varNames.size(); ++iVar) {; 1191 if(varNames[iVar].empty()) continue;; 1192 if(iVar >= 3) {; 1193 std::stringstream errMsg;; 1194 errMsg << ""RooAbsPdf::createHistogram("" << GetName() << "") ERROR more than three variable names passed, but maximum number of supported variables is three"";; 1195 coutE(Plotting) << errMsg.str() << std::endl;; 1196 throw std::invalid_argument(errMsg.str());; 1197 }; 1198 auto var = static_cast<RooRealVar*>(vars->find(varNames[iVar].c_str()));; 1199 if(!var) {; 1200 std::stringstream errMsg;; 1201 errMsg << ""RooAbsPdf::createHistogram("" << GetName() << "") ERROR variable "" << varNames[iVar] << "" does not exist in argset: "" << *vars;; 1202 coutE(Plotting) << errMsg.str() << std::endl;; 1203 throw std::runtime_error(errMsg.str());; 1204 }; 1205 histVars[iVar] = var;; 1206 }; 1207 ; 1208 // Construct list of named arguments to pass to the implementation version of createHistogram(); 1209 ; 1210 RooLinkedList argList ;; 1211 if (xbins>0) {; 1212 argList.Add(RooFit::Binning(xbins).Clone()) ;; 1213 }; 1214 ; 1215 if (histVars[1]) {; 1216 argList.Add(RooFit::YVar(*histVars[1], ybins > 0 ? RooFit::Binning(ybins) : RooCmdArg::none()).Clone()) ;; 1217",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:48562,variab,variable,48562,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"yer and all libraries libTreePlayer depends on are loaded also. The dependent libraries are shown in the ROOT reference guide’s library dependency graph. The difference between reference guide libHist and libHistPainter is that the former needs to be explicitly linked and the latter will be loaded automatically at runtime when ROOT needs it, by means of the Plugin Manager. plugin manager; In the Figure 1-2, the libraries represented by green boxes outside of the core are loaded via the plugin manager plugin manager or equivalent techniques, while the white ones are not. Of course, if one wants to access a plugin library directly, it has to be explicitly linked. An example of a plugin library is libMinuit. To create and fill histograms you need to link libHist.so. If the code has a call to fit the histogram, the “fitter” will dynamically load libMinuit if it is not yet loaded.; 1.6.2.3 Plugins: Runtime Library Dependencies for Linking; plugin manager The Plugin Manager TPluginManager allows postponing library dependencies to runtime: a plugin library will only be loaded when it is needed. Non-plugins will need to be linked, and are thus loaded at start-up. Plugins are defined by a base class (e.g. TFile) that will be implemented in a plugin, a tag used to identify the plugin (e.g. ^rfio: as part of the protocol string), the plugin class of which an object will be created (e.g. TRFIOFile), the library to be loaded (in short libRFIO.so to RFIO), and the constructor to be called (e.g. “TRFIOFile()”). This can be specified in the .rootrc which already contains many plugin definitions, or by calls to gROOT->GetPluginManager()->AddHandler().; 1.6.2.4 Library AutoLoading; When using a class in Cling, e.g. in an interpreted source file, ROOT will automatically load the library that defines this class. On start-up, ROOT parses all files ending on .rootmap rootmap that are in one of the $LD_LIBRARY_PATH (or $DYLD_LIBRARY_PATH for MacOS, or $PATH for Windows). They contain clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:23360,plugin,plugin,23360,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['plugin'],['plugin']
Modifiability,"yer class ;  CVOptimizerGeneric Optimizer class ;  ►NExperimental;  CClassification;  CClassificationResult;  ►NkNN;  CEvent;  CModulekNN;  CNodeThis file contains binary tree and global function template that searches tree for k-nearest neigbors ;  CAbsoluteDeviationLossFunctionAbsolute Deviation Loss Function ;  CAbsoluteDeviationLossFunctionBDTAbsolute Deviation BDT Loss Function ;  CAbsValue;  CBDTEventWrapper;  CBinarySearchTreeA simple Binary search tree including a volume search method ;  CBinarySearchTreeNodeNode for the BinarySearch or Decision Trees ;  CBinaryTreeBase class for BinarySearch and Decision Trees ;  CCCPrunerA helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) ;  ►CCCTreeWrapper;  CCCTreeNode;  CClassifierFactoryThis is the MVA factory ;  CClassInfoClass that contains all the information of a class ;  Ccompose_binary_t;  Ccompose_unary_t;  ►CConfigSingleton class for global configuration settings used by TMVA ;  CIONames;  CVariablePlotting;  CConfigurable;  CConvergenceTestCheck for convergence ;  CCostComplexityPruneToolA class to prune a decision tree using the Cost Complexity method ;  CCrossEntropyImplementation of the CrossEntropy as separation criterion ;  CCrossValidationClass to perform cross validation, splitting the dataloader into folds ;  CCrossValidationFoldResult;  CCrossValidationResultClass to save the results of cross validation, the metric for the classification ins ROC and you can ROC curves ROC integrals, ROC average and ROC standard deviation ;  CCvSplit;  CCvSplitKFolds;  CCvSplitKFoldsExpr;  CDataInputHandlerClass that contains all the data information ;  CDataLoader;  CDataSetClass that contains all the data information ;  ►CDataSetFactoryClass that contains all the data information ;  CEventStats;  CDataSetInfoClass that contains all the data information ;  CDataSetManagerClass that contains all the data information ;  CDecisionTreeImpl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/annotated.html:83381,config,configuration,83381,doc/v616/annotated.html,https://root.cern,https://root.cern/doc/v616/annotated.html,1,['config'],['configuration']
Modifiability,"yer@cern.ch> - CERN, Switzerland *; 17 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 18 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 19 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 20 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 21 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 22 * *; 23 * Copyright (c) 2005-2011: *; 24 * CERN, Switzerland *; 25 * U. of Victoria, Canada *; 26 * MPI-K Heidelberg, Germany *; 27 * U. of Bonn, Germany *; 28 * *; 29 * Redistribution and use in source and binary forms, with or without *; 30 * modification, are permitted according to the terms listed in LICENSE *; 31 * (see tmva/doc/LICENSE) *; 32 **********************************************************************************/; 33 ; 34/*! \class TMVA::Reader; 35\ingroup TMVA; 36 ; 37 The Reader class serves to use the MVAs in a specific analysis context.; 38 Within an event loop, a vector is filled that corresponds to the variables; 39 that were used to train the MVA(s) during the training stage. This vector; 40 is transfered to the Reader, who takes care of interpreting the weight; 41 file of the MVA of choice, and to return the MVA's output. This is then; 42 used by the user for further analysis.; 43 ; 44 Usage:; 45 ; 46~~~ {.cpp}; 47 // ------ before starting the event loop (eg, in the initialisation step); 48 ; 49 //; 50 // create TMVA::Reader object; 51 //; 52 TMVA::Reader *reader = new TMVA::Reader();; 53 ; 54 // create a set of variables and declare them to the reader; 55 // - the variable names must corresponds in name and type to; 56 // those given in the weight file(s) that you use; 57 Float_t var1, var2, var3, var4;; 58 reader->AddVariable( ""var1"", &var1 );; 59 reader->AddVariable( ""var2"", &var2 );; 60 reader->AddVariable( ""var3"", &var3 );; 61 reader->AddVariable( ""var4"", &var4 );; 62 ; 63 // book the MVA of your choice (prior training of these methods, ie,; 64 // existence of the weight files i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:1805,variab,variables,1805,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variables']
Modifiability,"yers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are the two TEventLists defining events to be used during the neural net training. Both the TTree and the TEventLists can be defined in the constructor, or later with the suited setter method. ; Definition at line 380 of file TMultiLayerPerceptron.cxx. ◆ ~TMultiLayerPerceptron(). TMultiLayerPerceptron::~TMultiLayerPerceptron ; (; ). override . Destructor. ; Definition at line 581 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [6/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const TMultiLayerPerceptron & ; ). private . Member Function Documentation. ◆ AttachData(). void TMultiLayerPerceptron::AttachData ; (; ). protected . Connects the TTree to Neurons in input and output layers. ; The formulas associated to each neuron are created and reported to the network formula manager. By default, the branch is not normalised since this would degrade performance for classification jobs. Normalisation can be requested by putting '@' in front of the formula. ; Definition at line 1266 of file TMultiLayerPerceptron.cxx. ◆ BFGSDir(). void TMultiLayerPerceptron::BFGSDir ; (; TMatrixD & ; bfgsh, . Double_t * ; dir . ). protected . Computes the direction for the BFGS algorithm as the product between the Hessian estimate (bfgsh) and the dir. ; Definition at line 2494 of file TMultiLayerPerceptron.cxx. ◆ BuildFirstLayer(). void TMultiLayerPerceptron::BuildFirstLayer ; (; TString & ; input). private . Instantiates the neurons in input Inputs are normalised and the type is set to kOff (simple forward of the formula value) ; Definition at line 1401 of file TMultiLayerPerceptron.cxx. ◆ BuildHiddenLayers(). void TMultiLayerPerceptron::BuildHiddenLayers ; (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:33875,layers,layers,33875,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['layers'],['layers']
Modifiability,"yle (Style_t fstyle) override;  ; void SetLineColor (Color_t lcolor) override;  ; void SetLineStyle (Style_t lstyle) override;  ; void SetLineWidth (Width_t lwidth) override;  ; void SetOpacity (Int_t percent) override;  ; void SetPainting (TWebPainting *p);  ; void SetTextAlign (Short_t align) override;  ; void SetTextAngle (Float_t tangle) override;  ; void SetTextColor (Color_t tcolor) override;  ; void SetTextFont (Font_t tfont) override;  ; void SetTextSize (Float_t tsize) override;  ; void SetTextSizePixels (Int_t npixels) override;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualPadPainter; virtual ~TVirtualPadPainter ();  Virtual dtor. ;  ; virtual void InitPainter ();  Empty definition. ;  ; virtual void InvalidateCS ();  Empty definition. ;  ; virtual void LockPainter ();  Empty definition. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:4478,inherit,inherited,4478,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['inherit'],['inherited']
Modifiability,"yle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoConverter * Instance (TGeoManager *geom=nullptr);  Static function returning a pointer to the current geometry converter. ;  ; static void SetConverter (const TVirtualGeoConverter *conv);  Static function to set an alternative converter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TGeoManager * fGeom;  . Static Protected Attributes; static TVirtualGeoConverter * fgGeoConverter = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoConverter.html:8944,inherit,inherited,8944,doc/master/classTVirtualGeoConverter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoConverter.html,1,['inherit'],['inherited']
Modifiability,"yle settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSeqCollection.html:12546,inherit,inherited,12546,doc/master/classTSeqCollection.html,https://root.cern,https://root.cern/doc/master/classTSeqCollection.html,1,['inherit'],['inherited']
Modifiability,"yle settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void DecayName (UInt_t decay, TString &name);  Returns decay name. ;  ; static const char * DeclFileName ();  ; static TGeoDecayChannel * ReadDecay (const char *record);  Create element from line record. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fBranchingRatio;  ; TGeoElementRN * fDaughter;  ; UInt_t fDecay;  ; Int_t fDiso;  ; TGeoElementRN * fParent;  ; Double_t fQvalue;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoElement.h>. Inheritance diagram for TGeoDecayChannel:. This browser is not able to show SVG: try Firefox, Chrom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoDecayChannel.html:10440,inherit,inherited,10440,doc/master/classTGeoDecayChannel.html,https://root.cern,https://root.cern/doc/master/classTGeoDecayChannel.html,1,['inherit'],['inherited']
Modifiability,"yle(kDashed), LineColor(kRed));; ; // Draw the plot on a canvas; new TCanvas(""rf609_xychi2fit"", ""rf609_xychi2fit"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; }; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; RooDataSet.h; RooPlot.h; RooPolyVar.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gPad#define gPadDefinition TVirtualPad.h:308; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolyVarA RooAbsReal implementing a polynomial in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf609__xychi2fit_8C.html:3570,variab,variable,3570,doc/master/rf609__xychi2fit_8C.html,https://root.cern,https://root.cern/doc/master/rf609__xychi2fit_8C.html,1,['variab'],['variable']
Modifiability,"yle. ;  . Private Attributes; BtCoef_t * fCoeff;  ; Int_t fCsize;  ; TGeoElementRN * fElem;  ; TGeoElementRN * fElemTop;  ; Double_t fFactor;  ; Int_t fNcoeff;  ; Double_t fTmax;  ; Double_t fTmin;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . #include <TGeoElement.h>. Inheritance diagram for TGeoBatemanSol:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoBatemanSol() [1/4]. TGeoBatemanSol::TGeoBatemanSol ; (; ). inline . Definition at line 301 of file TGeoElement.h. ◆ TGeoBatemanSol() [2/4]. TGeoBatemanSol::TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBatemanSol.html:15946,inherit,inherited,15946,doc/master/classTGeoBatemanSol.html,https://root.cern,https://root.cern/doc/master/classTGeoBatemanSol.html,2,['inherit'],['inherited']
Modifiability,"yleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Int_tRooPrintable::_nameLength; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooClassFactory(); Default constructor. ~RooClassFactory(); Destructor. Bool_t makeAndCompilePdf(const char* name, const char* expression, const RooArgList& vars, const char* intExpression = 0). Bool_t makeAndCompileFunction(const char* name, const char* expression, const RooArgList& args, const char* intExpression = 0); Write, compile and load code for a RooAbsReal implementation with; class name 'name', taking all elements of 'vars' as constructor; arguments. The initial value expression is taken to be; 'expression' which can be any one-line C++ expression in terms of; variables that occur in 'vars'. You can add optional expressions; for analytical integrals to be advertised by your class in the; syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. RooAbsReal* makeFunctionInstance(const char* name, const char* expression, const RooArgList& vars, const char* intExpression = 0); Write, compile and load code and instantiate object for a; RooAbsReal implementation with class name 'name', taking all; elements of 'vars' as constructor arguments. The initial value; expression is taken to be 'expression' which can be any one-line; C++ expression in terms of variables that occur in 'vars'. The returned object is an instance of the object you just defined; connected to the variables listed in 'vars'. The name of the; object is 'name', its clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooClassFactory.html:10206,variab,variables,10206,root/html602/RooClassFactory.html,https://root.cern,https://root.cern/root/html602/RooClassFactory.html,2,['variab'],['variables']
Modifiability,"yle_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawOutlineCube (TList *outline, Double_t *rmin, Double_t *rmax);  Draw cube outline with 3d polylines. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyLine3D.html:14162,inherit,inherited,14162,doc/master/classTPolyLine3D.html,https://root.cern,https://root.cern/doc/master/classTPolyLine3D.html,1,['inherit'],['inherited']
Modifiability,"yle_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPolyLine3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawOutlineCube (TList *outline, Double_t *rmin, Double_t *rmax);  Draw cube outline with 3d polylines. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHelix.html:15538,inherit,inherited,15538,doc/master/classTHelix.html,https://root.cern,https://root.cern/doc/master/classTHelix.html,1,['inherit'],['inherited']
Modifiability,"yle_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TH2 (const TH2 &)=delete;  ; virtual Double_t Integral (Int_t binx1, Int_t binx2, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2]. ;  ; virtual Double_t Integral (Option_t *option="""") const;  Return integral of bin contents. ;  ; virtual Double_t IntegralAndError (Int_t binx1, Int_t binx2, Double_t &err, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2] and its error. ;  ; TH2 & operator= (const TH2 &)=delete;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:53423,inherit,inherited,53423,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['inherit'],['inherited']
Modifiability,"yle_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TH3 (const TH3 &)=delete;  ; virtual Double_t Integral (Int_t binx1, Int_t binx2, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2]. ;  ; virtual Double_t Integral (Option_t *option="""") const;  Return integral of bin contents. ;  ; virtual Double_t IntegralAndError (Int_t binx1, Int_t binx2, Double_t &err, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2] and its error. ;  ; TH3 & operator= (const TH3 &)=delete;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:56676,inherit,inherited,56676,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['inherit'],['inherited']
Modifiability,ymError(RooAbsReal* real); Bool_thasError(RooAbsReal* real); virtual Bool_thasFilledCache() const; Bool_tisFullReal(RooAbsReal* real); voidTObject::MakeZombie(); vector<RealFullVector*>&realfStoreList(); vector<RealVector*>&realStoreList(). private:. voidsetAllBuffersNative(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; RooArgSetRooAbsDataStore::_cachedVars; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsDataStore::_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooVectorDataStore*_cache! Optimization cache; RooAbsArg*_cacheOwner! Cache owner; vector<CatVector*>_catStoreList; Double_t_curWgtWeight of current event; Double_t_curWgtErrWeight of current event; Double_t_curWgtErrHiWeight of current event; Double_t_curWgtErrLoWeight of current event; Double_t*_extSumW2Array! External sum of weights array; Double_t*_extWgtArray! External weight array; Double_t*_extWgtErrHiArray! External weight array - high error; Double_t*_extWgtErrLoArray! External weight array - low error; RooVectorDataStore::CatVector**_firstCat! do not persist; RooVectorDataStore::RealVector**_firstReal! do not persist; RooVectorDataStore::RealFullVector**_firstRealF! do not persist; Bool_t_forcedUpdate! Request for forced cache update ; Int_t_nCat; In,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooVectorDataStore.html:10263,variab,variables,10263,root/html534/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html534/RooVectorDataStore.html,2,['variab'],['variables']
Modifiability,"ymanConstruction is a concrete implementation of the NeymanConstruction interface that, as the name suggests, performs a NeymanConstruction ;  CNuisanceParametersSamplerHelper class for ToyMCSampler ;  CNumberCountingPdfFactory;  CNumEventsTestStatNumEventsTestStat is a simple implementation of the TestStatistic interface used for simple number counting ;  CPdfProposalPdfProposal is a concrete implementation of the ProposalFunction interface ;  CPointSetIntervalPointSetInterval is a concrete implementation of the ConfInterval interface ;  CProfileInspector;  CProfileLikelihoodCalculatorProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator (the interface class for a tools which can produce both RooStats HypoTestResults and ConfIntervals) ;  CProfileLikelihoodTestStatProfileLikelihoodTestStat is an implementation of the TestStatistic interface that calculates the profile likelihood ratio at a particular parameter point given a dataset ;  CProofConfigHolds configuration options for proof and proof-lite ;  CProposalFunctionProposalFunction is an interface for all proposal functions that would be used with a Markov Chain Monte Carlo algorithm ;  CProposalHelper;  CRatioOfProfiledLikelihoodsTestStatTestStatistic that returns the ratio of profiled likelihoods ;  CSamplingDistPlotThis class provides simple and straightforward utilities to plot SamplingDistribution objects ;  CSamplingDistributionThis class simply holds a sampling distribution of some test statistic ;  CSamplingSummary;  CSamplingSummaryLookup;  CSequentialProposalClass implementing a proposal function that samples the parameter space by moving only in one coordinate (choosen randomly) at each step ;  CSimpleInterval;  CSimpleLikelihoodRatioTestStatTestStatistic class that returns -log(L[null] / L[alt]) where L is the likelihood ;  CSPlotThis class calculates sWeights used to create an sPlot ;  CTestStatisticTestStatistic is an interface class to provide a facility for construction t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:8303,config,configuration,8303,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,2,['config'],['configuration']
Modifiability,"ymmetric error. Parameters. [out]loLow error. ; [out]hiHigh error. ; etypeerror type . Reimplemented from RooAbsData.; Definition at line 817 of file RooDataSet.cxx. ◆ weightError() [2/2]. double RooDataSet::weightError ; (; ErrorType ; etype = SumW2); const. overridevirtual . Parameters. etypeerror type . Reimplemented from RooAbsData.; Definition at line 826 of file RooDataSet.cxx. ◆ weightSquared(). double RooDataSet::weightSquared ; (; ); const. overridevirtual . Return squared event weight of the current event. ; If this RooDataSet has no weight errors set, this will be the same as weight() * weight(), like expected for an unbinned dataset. When weight errors are set, it is assumed that the RooDataSet represents a weighted binned dataset and weightSquared() is the corresponding sum of weight squares for the bin. ; Implements RooAbsData.; Definition at line 773 of file RooDataSet.cxx. ◆ weightVar(). RooRealVar * RooDataSet::weightVar ; (; ); const. inline . Returns a pointer to the weight variable (if set). ; Definition at line 84 of file RooDataSet.h. ◆ write() [1/2]. bool RooDataSet::write ; (; const char * ; filename); const. Write the contents of this dataset to an ASCII file with the specified name. ; Each event will be written as a single line containing the written values of each observable in the order they were declared in the dataset and separated by whitespaces ; Definition at line 1557 of file RooDataSet.cxx. ◆ write() [2/2]. bool RooDataSet::write ; (; std::ostream & ; ofs); const. Write the contents of this dataset to the stream. ; Each event will be written as a single line containing the written values of each observable in the order they were declared in the dataset and separated by whitespaces ; Definition at line 1577 of file RooDataSet.cxx. Friends And Related Symbol Documentation. ◆ RooProdGenContext. friend class RooProdGenContext. friend . Definition at line 122 of file RooDataSet.h. Member Data Documentation. ◆ _doWeightErrorCheck. bool Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:59335,variab,variable,59335,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variable']
Modifiability,"ymmetry N[+] - N[-] / ( N[+] + N[-] ), where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1 as function of the frames variable. ;  ; virtual RooPlot * plotEffOn (RooPlot *frame, const RooAbsCategoryLValue &effCat, PlotOpt o) const;  Create and fill a histogram with the efficiency N[1] / ( N[1] + N[0] ), where N(1/0) is the number of data points with effCat=1 and effCat=0 as function of the frames variable. ;  ; virtual RooPlot * plotOn (RooPlot *frame, PlotOpt o) const;  Create and fill a histogram of the frame's variable and append it to the frame. ;  ; virtual void resetCache ();  Internal method – Remove cached function values. ;  ; virtual void setArgStatus (const RooArgSet &set, bool active);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from RooDirItem; void appendToDir (TObject *obj, bool forceMemoryResident=false);  Append object to directory. ;  ; void removeFromDir (TObject *obj);  Remove object from directory it was added to. ;  . Protected Attributes; RooArgSet _varsNoWgt;  Vars without weight variable. ;  ; RooRealVar * _wgtVar = nullptr;  Pointer to weight variable (if set) ;  ;  Protected Attributes inherited from RooAbsData; RooArgSet _cachedVars;  ! External variables cached with this data set ;  ; std::unique_ptr< RooAbsDataStore > _dstore;  Data storage implementation. ;  ; std::unique_ptr< RooArgSet > _globalObservables;  Snapshot of global observables. ;  ; const TNamed * _namePtr = nullptr;  ! De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; std::map< std::string, RooAbsData * > _ownedComponents;  Owned external components. ;  ; RooArgSet _vars;  Dimensions of this data set. ;  ; StorageType storageType;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:33322,inherit,inherited,33322,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['inherit'],['inherited']
Modifiability,"ymore.; CINT objects are always on the heap. void Reset(); Reset the CINT state to the state saved by the last call to; TCint::SaveContext(). void ResetAll(); Reset the CINT state to its initial state. void ResetGlobals(); Reset the CINT global object state to the state saved by the last; call to TCint::SaveGlobalsContext(). void ResetGlobalVar(void* obj); Reset the CINT global object state to the state saved by the last; call to TCint::SaveGlobalsContext(). void RewindDictionary(); Rewind CINT dictionary to the point where it was before executing; the current macro. This function is typically called after SEGV or; ctlr-C after doing a longjmp back to the prompt. Int_t DeleteGlobal(void* obj); Delete obj from CINT symbol table so it cannot be accessed anymore.; Returns 1 in case of success and 0 in case object was not in table. void SaveContext(); Save the current CINT state. void SaveGlobalsContext(); Save the current CINT state of global objects. void UpdateListOfGlobals(); Update the list of pointers to global variables. This function; is called by TROOT::GetListOfGlobals(). void UpdateListOfGlobalFunctions(); Update the list of pointers to global functions. This function; is called by TROOT::GetListOfGlobalFunctions(). void UpdateListOfTypes(); Update the list of pointers to Datatype (typedef) definitions. This; function is called by TROOT::GetListOfTypes(). void SetClassInfo(TClass* cl, Bool_t reload = kFALSE); Set pointer to CINT's G__ClassInfo in TClass. Bool_t CheckClassInfo(const char* name, Bool_t autoload = kTRUE); Checks if a class with the specified name is defined in CINT.; Returns kFALSE is class is not defined. void CreateListOfBaseClasses(TClass* cl); Create list of pointers to base class(es) for TClass cl. void CreateListOfDataMembers(TClass* cl); Create list of pointers to data members for TClass cl. void CreateListOfMethods(TClass* cl); Create list of pointers to methods for TClass cl. void UpdateListOfMethods(TClass* cl); Update the list of point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TCint.html:22909,variab,variables,22909,root/html530/TCint.html,https://root.cern,https://root.cern/root/html530/TCint.html,2,['variab'],['variables']
Modifiability,"ymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMatrixDSymfCorrelationcorrelation matrix; TMatrixDSymfCovariancecovariance matrix estimate; TMatrixDfDatathe original data; Int_tfExactif there was an exact fit, stores the number of points on a hyperplane; Int_tfHalgorithm parameter, determining the subsample size; TVectorDfHyperplanein case more than fH observations lie on a hyperplane; TMatrixDSymfInvcovarianceinverse of the covariance matrix; TVectorDfMeanlocation estimate (mean values); Int_tfNnumber of observations; Int_tfNvarnumber of variables; TArrayIfOutarray of indexes of ouliers, size <0.5*n; TVectorDfRdarray of robust distances, size n; TVectorDfSdarray of standard deviations; Int_tfVarTempnumber of variables already added to the data matrix; Int_tfVecTempnumber of observations already added to the data matrix. Class Charts. Inheritance Chart:. TObject. ←; TRobustEstimator. Function documentation; TRobustEstimator(); this constructor should be used in a univariate case:; first call this constructor, then - the EvaluateUni(..) function. TRobustEstimator(Int_t nvectors, Int_t nvariables, Int_t hh = 0); constructor. void AddColumn(Double_t* col); adds a column to the data matrix; it is assumed that the column has size fN; variable fVarTemp keeps the number of columns l; already added. void AddRow(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRobustEstimator.html:12287,variab,variables,12287,root/html602/TRobustEstimator.html,https://root.cern,https://root.cern/root/html602/TRobustEstimator.html,2,['variab'],['variables']
Modifiability,"ymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooLinkedList_configSetsList of configuration sets for individual integration methods; static RooNumIntConfig*_default; Double_t_epsAbsAbsolute precision; Double_t_epsRelRelative precision; RooCategory_method1DSelects integration method for 1D integrals; RooCategory_method1DOpenSelects integration method for open ended 1D integrals; RooCategory_method2DSelects integration method for 2D integrals; RooCategory_method2DOpenSelects integration method for open ended 2D integrals; RooCategory_methodNDSelects integration method for ND integrals; RooCategory_methodNDOpenSelects integration method for open ended ND integrals; static Int_tRooPrintable::_nameLength; Bool_t_printEvalCounterFlag to control printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumIntConfig.html:8432,config,configuration,8432,root/html602/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html602/RooNumIntConfig.html,2,['config'],['configuration']
Modifiability,"ymous)TObject::kZombie. protected:. UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TEveCompositeFrame*fEveFrame; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tfShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveEleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveWindow.html:20158,variab,variable,20158,root/html602/TEveWindow.html,https://root.cern,https://root.cern/root/html602/TEveWindow.html,2,['variab'],['variable']
Modifiability,"ync () const;  ; Int_t LoadPackage (const char *package, Bool_t notOnClient=kFALSE, TList *loadopts=0, TList *workers=0);  Load specified package. ;  ; void MarkBad (TSlave *wrk, const char *reason=0);  Add a bad slave server to the bad slave list and remove it from the active list and from the two monitor objects. ;  ; void MarkBad (TSocket *s, const char *reason=0);  Add slave with socket s to the bad slave list and remove if from the active list and from the two monitor objects. ;  ; Int_t ModifyWorkerLists (const char *ord, Bool_t add, Bool_t save);  Modify the worker active/inactive list by making the worker identified by the ordinal number 'ord' active (add == TRUE) or inactive (add == FALSE). ;  ; void NotifyLogMsg (const char *msg, const char *sfx=""\n"");  Notify locally 'msg' to the appropriate units (file, stdout, window) If defined, 'sfx' is added after 'msg' (typically a line-feed);. ;  ; void operator= (const TProof &);  ; void ParseConfigField (const char *config);  The config file field may contain special instructions which need to be parsed at the beginning, e.g. ;  ; Int_t Ping (ESlaves list);  Ping PROOF slaves. Returns the number of slaves that responded. ;  ; void PrintProgress (Long64_t total, Long64_t processed, Float_t procTime=-1., Long64_t bytesread=-1);  Print a progress bar on stderr. Used in batch mode. ;  ; Bool_t Prompt (const char *p);  Prompt the question 'p' requiring an answer y,Y,n,N Return kTRUE is the answer was y or Y, kFALSE in all other cases. ;  ; void RecvLogFile (TSocket *s, Int_t size);  Receive the log file of the slave with socket s. ;  ; void RedirectWorker (TSocket *s, TSlave *sl, Int_t output_size);  Redirect output of worker sl to some merger. ;  ; void ReleaseMonitor (TMonitor *mon);  Release the used monitor to be used, making sure to delete newly created monitors. ;  ; void ResetMergePrg ();  Reset the merge progress notificator. ;  ; void ResetMergers ();  ; Int_t RestoreActiveList ();  Restore saved list of acti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:51386,config,config,51386,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,2,['config'],['config']
Modifiability,"yntax is incorrect (message already printed); 0; >0 the value returns is the action code. . Definition at line 764 of file TTreeFormula.cxx. ◆ PrintValue() [1/2]. char * TTreeFormula::PrintValue ; (; Int_t ; mode, . Int_t ; instance, . const char * ; decform = ""9.9"" . ); const. virtual . Return value of variable as a string. . mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values; decform contains the requested format (with the same convention as printf). . Definition at line 4840 of file TTreeFormula.cxx. ◆ PrintValue() [2/2]. char * TTreeFormula::PrintValue ; (; Int_t ; mode = 0); const. virtual . Return value of variable as a string. . mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values . Definition at line 4826 of file TTreeFormula.cxx. ◆ RegisterDimensions() [1/5]. Int_t TTreeFormula::RegisterDimensions ; (; const char * ; size, . Int_t ; code . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 402 of file TTreeFormula.cxx. ◆ RegisterDimensions() [2/5]. Int_t TTreeFormula::RegisterDimensions ; (; Int_t ; code, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; multidim = nullptr . ). protected . This method stores the dimension information for later usage. ; Definition at line 439 of file TTreeFormula.cxx. ◆ RegisterDimensions() [3/5]. Int_t TTreeFormula::RegisterDimensions ; (; Int_t ; code, . TBranchElement * ; branch . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 555 of file TTreeFormula.cxx. ◆ RegisterDimensions() [4/5]. Int_t TTreeFormula::RegisterDimensions ; (; Int_t ; code, . TFormLeafInfo * ; info, . TFormLeafInfo * ; maininfo, . bool ; useCollectionObject . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 450 of file TTreeFormula.cxx. ◆ RegisterDimensions() [5/5]. Int_t TTreeFormula::Regi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:47201,variab,variables,47201,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variables']
Modifiability,"yout of a layer ;  CLayerDataLayerData holds the data of one layer ;  CMeanVariance;  CNetNeural net ;  CSettingsSettings for the training of the neural net ;  CSteepestSteepest Gradient Descent algorithm (SGD) ;  CTBatchTBatch ;  CTBatchIteratorTBatchIterator ;  CTCpuThe TCpu architecture class ;  ►CTCpuBufferTCpuBuffer ;  CTDestructor;  CTCpuMatrixThe TCpuMatrix class ;  CTCudaThe TCuda architecture class ;  ►CTCudaDeviceBufferTCudaDeviceBuffer ;  CTDestructor;  CTCudaDeviceReferenceTCudaDeviceReference ;  ►CTCudaHostBufferTCudaHostBuffer ;  CTDestructor;  CTCudaMatrixTCudaMatrix Class ;  CTDataLoaderTDataLoader ;  CTDataLoader< AData, TReference< AReal > >;  CTDeepNetGeneric Deep Neural Network class ;  CTDenseLayerGeneric layer class ;  CTDeviceTDevice ;  CTDLGradientDescent;  CTGradientDescent;  CTLayerGeneric layer class ;  CTNetGeneric neural network class ;  CTReferenceThe reference architecture class ;  CTReshapeLayer;  CTSharedLayerLayer class width shared weight and bias layers ;  CTTensorBatchTTensorBatch ;  CTTensorBatchIteratorTTensorBatchIterator ;  CTTensorDataLoaderTTensorDataLoader ;  CTTensorDataLoader< AData, TReference< AReal > >;  CVGeneralLayerGeneric General Layer class ;  ►NExperimental;  CClassification;  CClassificationResult;  ►NkNN;  CEvent;  CModulekNN;  CNodeThis file contains binary tree and global function template that searches tree for k-nearest neigbors ;  CAbsoluteDeviationLossFunctionAbsolute Deviation Loss Function ;  CAbsoluteDeviationLossFunctionBDTAbsolute Deviation BDT Loss Function ;  CAbsValue;  CBDTEventWrapper;  CBinarySearchTreeA simple Binary search tree including a volume search method ;  CBinarySearchTreeNodeNode for the BinarySearch or Decision Trees ;  CBinaryTreeBase class for BinarySearch and Decision Trees ;  CCCPrunerA helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) ;  ►CCCTreeWrapper;  CCCTreeNode;  CClassificationClass to pe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:78672,layers,layers,78672,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,1,['layers'],['layers']
Modifiability,"yout=DENSE|100|RELU,BNORM,DENSE|100|RELU,BNORM,DENSE|100|RELU,BNORM,DENSE|100|RELU,DENSE|1|LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.9,Repetitions=1,ConvergenceSteps=5,BatchSize=100,TestRepetitions=1,MaxEpochs=10,WeightDecay=1e-4,Regularization=None,Optimizer=ADAM,DropConfig=0.0+0.0+0.0+0.:Architecture=CPU""; : The following options are set:; : - By User:; : <none>; : - Default:; : Boost_num: ""0"" [Number of times the classifier will be boosted]; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=None:WeightInitialization=XAVIER:Layout=DENSE|100|RELU,BNORM,DENSE|100|RELU,BNORM,DENSE|100|RELU,BNORM,DENSE|100|RELU,DENSE|1|LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.9,Repetitions=1,ConvergenceSteps=5,BatchSize=100,TestRepetitions=1,MaxEpochs=10,WeightDecay=1e-4,Regularization=None,Optimizer=ADAM,DropConfig=0.0+0.0+0.0+0.:Architecture=CPU""; : The following options are set:; : - By User:; : V: ""True"" [Verbose output (short form of ""VerbosityLevel"" below - overrides the latter one)]; : VarTransform: ""None"" [List of variable transformations performed before training, e.g., ""D_Background,P_Signal,G,N_AllClasses"" for: ""Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)""]; : H: ""False"" [Print method-specific help message]; : Layout: ""DENSE|100|RELU,BNORM,DENSE|100|RELU,BNORM,DENSE|100|RELU,BNORM,DENSE|100|RELU,DENSE|1|LINEAR"" [Layout of the network.]; : ErrorStrategy: ""CROSSENTROPY"" [Loss function: Mean squared error (regression) or cross entropy (binary classification).]; : WeightInitialization: ""XAVIER"" [Weight initialization strategy]; : Architecture: ""CPU"" [Which architecture to perform the training on.]; : TrainingStrategy: ""LearningRate=1e-3,Momentum=0.9,Repetitions=1,ConvergenceSteps=5,BatchSize=100,TestRepetitions=1,MaxEpochs=10,WeightDecay=1e-4,Regularization=None,Optimizer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:2777,variab,variable,2777,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['variab'],['variable']
Modifiability,"ype () const;  ; TString GetTypeName ();  Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"". ;  ; TClass * IsA () const override;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; Int_t Size () const;  Get size of basic typedef'ed type. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataType.html:2177,inherit,inherited,2177,doc/master/classTDataType.html,https://root.cern,https://root.cern/doc/master/classTDataType.html,1,['inherit'],['inherited']
Modifiability,"ype = -1); create the search tree from the events in a TTree; using ALL the variables specified included in the Event. void NormalizeTree(vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator , vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator , UInt_t ). void NormalizeTree(); Normalisation of tree. void Clear(TMVA::Node* n = 0); clear nodes. Double_t SearchVolume(TMVA::Volume* , vector<const TMVA::BinarySearchTreeNode*>* events = 0); search the whole tree and add up all weigths of events that; lie within the given voluem. Double_t SearchVolume(TMVA::Node* , TMVA::Volume* , Int_t , vector<const TMVA::BinarySearchTreeNode*>* events); recursively walk through the daughter nodes and add up all weigths of events that; lie within the given volume. Bool_t InVolume(const vector<Float_t>& , TMVA::Volume* ) const; test if the data points are in the given volume. void CalcStatistics(TMVA::Node* n = 0); calculate basic statistics (mean, rms for each variable). Int_t SearchVolumeWithMaxLimit(TMVA::Volume* , vector<const TMVA::BinarySearchTreeNode*>* events = 0, Int_t = -1); recursively walk through the daughter nodes and add up all weigths of events that; lie within the given volume a maximum number of events can be given. Node * CreateNode(UInt_t ) const; { return new BinarySearchTreeNode(); }. BinaryTree* CreateTree() const; { return new BinarySearchTree(); }. const char* ClassName() const; { return ""BinarySearchTree""; }. void SetPeriode(Int_t p); set the periode (number of variables). { fPeriod = p; }. UInt_t GetPeriode( void ); return periode (number of variables). { return fPeriod; }. Float_t Mean(TMVA::Types::ESBType sb, UInt_t var); access to mean for signal and background for each variable. { return fMeans[sb==Types::kSignal?0:1][var]; }. Float_t RMS(TMVA::Types::ESBType sb, UInt_t var); access to RMS for signal and background for each variable. { return fRMS[sb==Types::kSignal?0:1][va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__BinarySearchTree.html:7136,variab,variable,7136,root/html528/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html528/TMVA__BinarySearchTree.html,2,['variab'],['variable']
Modifiability,"ype is ""Fisher"" or ""Mahalanobis"". ;  ; void GetCov_BetweenClass (void);  the matrix of covariance 'between class' reflects the dispersion of the events of a class relative to the global center of gravity of all the class hence the separation between classes ;  ; void GetCov_Full (void);  compute full covariance matrix from sum of within and between matrices ;  ; void GetCov_WithinClass (void);  the matrix of covariance 'within class' reflects the dispersion of the events relative to the center of gravity of their own class ;  ; void GetDiscrimPower (void);  computation of discrimination power indicator for each variable small values of ""fWith"" indicates little compactness of sig & of backgd big values of ""fBetw"" indicates large separation between sig & backgd ;  ; void GetFisherCoeff (void);  Fisher = Sum { [coeff]*[variables] }. ;  ; void GetMean (void);  compute mean values of variables in each sample, and the overall means ;  ; void Init (void);  default initialization called by all constructors ;  ; void InitMatrices (void);  initialization method; creates global matrices and vectors ;  ; void ProcessOptions ();  process user options ;  . Private Attributes; TMatrixD * fBetw;  between-class matrix ;  ; TMatrixD * fCov;  full covariance matrix ;  ; std::vector< Double_t > * fDiscrimPow;  discriminating power ;  ; Double_t fF0;  offset ;  ; std::vector< Double_t > * fFisherCoeff;  Fisher coefficients. ;  ; EFisherMethod fFisherMethod;  Fisher or Mahalanobis. ;  ; TMatrixD * fMeanMatx;  ; Double_t fSumOfWeightsB;  sum-of-weights for background training events ;  ; Double_t fSumOfWeightsS;  sum-of-weights for signal training events ;  ; TString fTheMethod;  Fisher or Mahalanobis. ;  ; TMatrixD * fWith;  within-class matrix ;  . Additional Inherited Members;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:30416,variab,variables,30416,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,1,['variab'],['variables']
Modifiability,"ype);; 384 } else if (*leaftype == 'f') {; 385 leaf = new TLeafF16(this, leafname, leaftype);; 386 } else if (*leaftype == 'L') {; 387 leaf = new TLeafL(this, leafname, leaftype);; 388 } else if (*leaftype == 'l') {; 389 leaf = new TLeafL(this, leafname, leaftype);; 390 leaf->SetUnsigned();; 391 } else if (*leaftype == 'D') {; 392 leaf = new TLeafD(this, leafname, leaftype);; 393 } else if (*leaftype == 'd') {; 394 leaf = new TLeafD32(this, leafname, leaftype);; 395 } else if (*leaftype == 'G') {; 396 leaf = new TLeafG(this, leafname, leaftype);; 397 } else if (*leaftype == 'g') {; 398 leaf = new TLeafG(this, leafname, leaftype);; 399 leaf->SetUnsigned();; 400 }; 401 if (!leaf) {; 402 Error(""TLeaf"", ""Illegal data type for %s/%s"", name, leaflist);; 403 delete[] leaftype;; 404 delete [] leafname;; 405 MakeZombie();; 406 return;; 407 }; 408 if (leaf->IsZombie()) {; 409 delete leaf;; 410 leaf = nullptr;; 411 auto msg = ""Illegal leaf: %s/%s. If this is a variable size C array it's possible that the branch holding the size is not available."";; 412 Error(""TBranch"", msg, name, leaflist);; 413 delete [] leafname;; 414 delete[] leaftype;; 415 MakeZombie();; 416 return;; 417 }; 418 leaf->SetBranch(this);; 419 leaf->SetAddress((char*) (fAddress + offset));; 420 leaf->SetOffset(offset);; 421 if (leaf->GetLeafCount()) {; 422 // -- Leaf is a varying length array, we need an offset array.; 423 fEntryOffsetLen = 1000;; 424 }; 425 if (leaf->InheritsFrom(TLeafC::Class())) {; 426 // -- Leaf is a character string, we need an offset array.; 427 fEntryOffsetLen = 1000;; 428 }; 429 ++fNleaves;; 430 fLeaves.Add(leaf);; 431 fTree->GetListOfLeaves()->Add(leaf);; 432 if (*pos == 0) {; 433 // -- We reached the end of the leaf specification.; 434 break;; 435 }; 436 nameBegin = pos + 1;; 437 offset += leaf->GetLenType() * leaf->GetLen();; 438 }; 439 }; 440 delete[] leafname;; 441 leafname = nullptr;; 442 delete[] leaftype;; 443 leaftype = nullptr;; 444 ; 445}; 446 ; 447///////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:14848,variab,variable,14848,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ype_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeights(); voidUseSumOfWeightSquare(). private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&operator=(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&); ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&). Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; boolfIsExtendedflag to indicate if is extended (when false is a Multinomial lieklihood), default is true; unsigned intfNEffPointsnumber of effective points used in the fit; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new PoissonLikelihoodFCN(fData,fFunc,fWeight,fIsExtended); }. unsigned int NFitPoints() const; effective points used in the fit. { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th likelihood element and its gradient. void Gradient(const double* x, double* g) const; evaluate gradient. bool IsWeighted() const; { return (fWeight != 0); }. void UseSumOfWeights(); Use the weights in evaluating the likelihood. void UseSumOfWeightSquare(); Use sum of the weight squared in evaluating the likelihood; (this is needed for calculating the errors). doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:3225,extend,extended,3225,root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,1,['extend'],['extended']
Modifiability,"ypedef Int_t(* TStreamerInfoActions::TStreamerInfoVecPtrLoopAction_t) (TBuffer &buf, void *iter, const void *end, const TConfiguration *conf). Definition at line 71 of file TStreamerInfoActions.h. Enumeration Type Documentation. ◆ ESelectLooper. enum TStreamerInfoActions::ESelectLooper. EnumeratorkVectorLooper ; kVectorPtrLooper ; kAssociativeLooper ; kGenericLooper . Definition at line 1697 of file TStreamerInfoActions.cxx. Function Documentation. ◆ GenericReadAction(). Int_t TStreamerInfoActions::GenericReadAction ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). Definition at line 191 of file TStreamerInfoActions.cxx. ◆ GenericWriteAction(). Int_t TStreamerInfoActions::GenericWriteAction ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). Definition at line 198 of file TStreamerInfoActions.cxx. ◆ HandleReferencedTObject(). void TStreamerInfoActions::HandleReferencedTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). Definition at line 214 of file TStreamerInfoActions.cxx. ◆ IsDefaultVector(). bool TStreamerInfoActions::IsDefaultVector ; (; TVirtualCollectionProxy & ; proxy). Definition at line 47 of file TStreamerInfoActions.cxx. ◆ PopDataCache(). Int_t TStreamerInfoActions::PopDataCache ; (; TBuffer & ; b, . void * ; , . const TConfiguration * ;  . ). Definition at line 1534 of file TStreamerInfoActions.cxx. ◆ PopDataCacheGenericCollection(). Int_t TStreamerInfoActions::PopDataCacheGenericCollection ; (; TBuffer & ; b, . void * ; , . const void * ; , . const TLoopConfiguration * ; , . const TConfiguration * ;  . ). Definition at line 1546 of file TStreamerInfoActions.cxx. ◆ PopDataCacheVectorPtr(). Int_t TStreamerInfoActions::PopDataCacheVectorPtr ; (; TBuffer & ; b, . void * ; , . const void * ; , . const TConfiguration * ;  . ). Definition at line 1540 of file TStreamerInfoActions.cxx. ◆ PushDataCache(). Int_t TStreamerInfoActions::PushDataCache ; (; TBuffer & ; b, . void *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:9122,config,config,9122,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"ypename... T> ; void ExecuteMethod (Int_t, const T &... params);  ; void ExecuteMethod (Long64_t param);  Apply slot-method to the fReceiver object with single argument value. ;  ; void ExecuteMethod (Long_t param);  Apply slot-method to the fReceiver object with single argument value. ;  ; void ExecuteMethod (Longptr_t *params, Int_t nparam=-1);  Apply slot-method to the fReceiver object with variable number of argument values. ;  ; const char * GetClassName () const;  ; const char * GetName () const override;  Returns name of connection (aka name of slot) ;  ; void * GetReceiver () const;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  List TQConnection full method name and list all signals connected to this connection. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualQConnection; void SetArgs (const Longptr_t *argArray, Int_t nargs=-1);  Sets an array of arguments passed as a pointer type and size. ;  ; template<typename... T> ; void SetArgs (const T &... args);  Unpacks the template parameter type and sets arguments of integral and array (scalar) type. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQConnection.html:2536,inherit,inherited,2536,doc/master/classTQConnection.html,https://root.cern,https://root.cern/doc/master/classTQConnection.html,1,['inherit'],['inherited']
Modifiability,"ypes defined (in range named rangeName if rangeName!=nullptr) ;  ; Int_t getIndex () const;  Retrieve the current index. Use getCurrentIndex() for more clarity. ;  ; const char * getLabel () const;  Retrieve current label. Use getCurrentLabel() for more clarity. ;  ; virtual bool isValid (const RooCatType &value) const;  Check if given state is defined for this object. ;  ; const RooCatType * defineType (const char *label);  ; const RooCatType * defineType (const char *label, int index);  ; const RooCatType * defineTypeUnchecked (const char *label, value_type index);  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsCategory.h>. Inheritance diagram for RooAbsCategory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ value_type. using RooAbsCategory::value_type = int. The type used to denote a specific category state. ; Definition at line 36 of file RooAbsCategory.h. Constructor & Destructor Documentation. ◆ RooAbsCategory() [1/3]. RooAbsCategory::RooAbsCategory ; (; ). Definition at line 76 of file RooAbsCategory.cxx. ◆ RooAbsCategory() [2/3]. RooAbsCategory::RooAbsCategory ; (; const char * ; name, . const char * ; title . ). Constructor. ; Definition at line 82 of file RooAbsCategory.cxx. ◆ Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategory.html:45183,inherit,inherited,45183,doc/master/classRooAbsCategory.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategory.html,2,['inherit'],['inherited']
Modifiability,"ypes::EMVA theMethod, TString methodTitle,; 2359 const char *theOption); 2360{; 2361 uint64_t x = 0;; 2362 uint64_t y = 0;; 2363 ; 2364 // getting number of variables and variable names from loader; 2365 const int nbits = loader->GetDataSetInfo().GetNVariables();; 2366 std::vector<TString> varNames = loader->GetDataSetInfo().GetListOfVariables();; 2367 ; 2368 if (nbits > 60) {; 2369 Log() << kERROR << ""Number of combinations is too large , is 2^"" << nbits << Endl;; 2370 return nullptr;; 2371 }; 2372 long int range = sum(nbits);; 2373 // std::cout<<range<<std::endl;; 2374 // vector to save importances; 2375 std::vector<Double_t> importances(nbits);; 2376 for (int i = 0; i < nbits; i++); 2377 importances[i] = 0;; 2378 ; 2379 Double_t SROC, SSROC; // computed ROC value; 2380 ; 2381 x = range;; 2382 ; 2383 std::bitset<VIBITS> xbitset(x);; 2384 if (x == 0); 2385 Log() << kFATAL << ""Error: need at least one variable.""; // data loader need at least one variable; 2386 ; 2387 // creating loader for seed; 2388 TMVA::DataLoader *seedloader = new TMVA::DataLoader(xbitset.to_string());; 2389 ; 2390 // adding variables from seed; 2391 for (int index = 0; index < nbits; index++) {; 2392 if (xbitset[index]); 2393 seedloader->AddVariable(varNames[index], 'F');; 2394 }; 2395 ; 2396 // Loading Dataset; 2397 DataLoaderCopy(seedloader, loader);; 2398 ; 2399 // Booking Seed; 2400 BookMethod(seedloader, theMethod, methodTitle, theOption);; 2401 ; 2402 // Train/Test/Evaluation; 2403 TrainAllMethods();; 2404 TestAllMethods();; 2405 EvaluateAllMethods();; 2406 ; 2407 // getting ROC; 2408 SROC = GetROCIntegral(xbitset.to_string(), methodTitle);; 2409 ; 2410 // cleaning information to process sub-seeds; 2411 TMVA::MethodBase *smethod = dynamic_cast<TMVA::MethodBase *>(fMethodsMap[xbitset.to_string().c_str()][0][0]);; 2412 TMVA::ResultsClassification *sresults = (TMVA::ResultsClassification *)smethod->Data()->GetResults(; 2413 smethod->GetMethodName(), Types::kTesting, Types::kClassification);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:99644,variab,variable,99644,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ypes; enum  EQuadType_e { ;   kQT_Undef; , kQT_FreeQuad; , kQT_RectangleXY; , kQT_RectangleXZ; , ;   kQT_RectangleYZ; , kQT_RectangleXYFixedDim; , kQT_RectangleXYFixedZ; , kQT_RectangleXZFixedY; , ;   kQT_RectangleYZFixedX; , kQT_RectangleXYFixedDimZ; , kQT_RectangleXZFixedDimY; , kQT_RectangleYZFixedDimX; , ;   kQT_Rectangle_End; , kQT_LineXYFixedZ; , kQT_LineXZFixedY; , kQT_Line_End; , ;   kQT_HexagonXY; , kQT_HexagonYX; , kQT_Hexagon_End. };  ;  Public Types inherited from TEveDigitSet; typedef void(* Callback_foo) (TEveDigitSet *, Int_t, TObject *);  ; enum  ERenderMode_e { kRM_AsIs; , kRM_Line; , kRM_Fill; };  ; typedef TString(* TooltipCB_foo) (TEveDigitSet *, Int_t);  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveQuadSet.html:1666,inherit,inherited,1666,doc/master/classTEveQuadSet.html,https://root.cern,https://root.cern/doc/master/classTEveQuadSet.html,3,['inherit'],['inherited']
Modifiability,"ypesAreCountedtrue if variable types have been counted already; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; TODO --> adapt to variable,target,spectator selection; default transformation output; --> only indicate that transformation occurred. void UpdateNorm(Int_t ivar, Double_t x); TODO --> adapt to variable,target,spectator selection; update min and max of a given variable (target) and a given transformation method. void AttachXMLTo(void* parent); create XML description the transformation (write out info of selected variables). void ReadFromXML(void* trfnode); Read the input variables from the XML node. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); getinput and setoutput equivalent. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ). const Event* Transform(const TMVA::Event *const , Int_t cls) const. const Event*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableTransformBase.html:9712,adapt,adapt,9712,root/html534/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableTransformBase.html,3,"['adapt', 'variab']","['adapt', 'variable', 'variables']"
Modifiability,"ype ; treetype = Types::kMaxTreeType . ). number of signal events (used to compute significance) ; Definition at line 402 of file DataLoader.cxx. ◆ AddCut() [1/2]. void TMVA::DataLoader::AddCut ; (; const TCut & ; cut, . const TString & ; className = """" . ). Definition at line 594 of file DataLoader.cxx. ◆ AddCut() [2/2]. void TMVA::DataLoader::AddCut ; (; const TString & ; cut, . const TString & ; className = """" . ). Definition at line 588 of file DataLoader.cxx. ◆ AddDataSet() [1/2]. TMVA::DataSetInfo & TMVA::DataLoader::AddDataSet ; (; const TString & ; dsiName). Definition at line 126 of file DataLoader.cxx. ◆ AddDataSet() [2/2]. TMVA::DataSetInfo & TMVA::DataLoader::AddDataSet ; (; DataSetInfo & ; dsi). Definition at line 119 of file DataLoader.cxx. ◆ AddEvent(). void TMVA::DataLoader::AddEvent ; (; const TString & ; className, . Types::ETreeType ; tt, . const std::vector< Double_t > & ; event, . Double_t ; weight . ). add event vector event : the order of values is: variables + targets + spectators ; Definition at line 277 of file DataLoader.cxx. ◆ AddRegressionTarget(). void TMVA::DataLoader::AddRegressionTarget ; (; const TString & ; expression, . const TString & ; title = """", . const TString & ; unit = """", . Double_t ; min = 0, . Double_t ; max = 0 . ). inline . Definition at line 132 of file DataLoader.h. ◆ AddRegressionTree(). void TMVA::DataLoader::AddRegressionTree ; (; TTree * ; tree, . Double_t ; weight = 1.0, . Types::ETreeType ; treetype = Types::kMaxTreeType . ). inline . Definition at line 103 of file DataLoader.h. ◆ AddSignalTestEvent(). void TMVA::DataLoader::AddSignalTestEvent ; (; const std::vector< Double_t > & ; event, . Double_t ; weight = 1.0 . ). add signal testing event ; Definition at line 236 of file DataLoader.cxx. ◆ AddSignalTrainingEvent(). void TMVA::DataLoader::AddSignalTrainingEvent ; (; const std::vector< Double_t > & ; event, . Double_t ; weight = 1.0 . ). add signal training event ; Definition at line 228 of file DataLoader.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader.html:23977,variab,variables,23977,doc/master/classTMVA_1_1DataLoader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader.html,1,['variab'],['variables']
Modifiability,"ys PDF could not be found to have the desired confidence level +/- the accuracy (see SetKeysConfidenceAccuracy()), the interval determination algorithm will have to terminate with an unsatisfactory confidence level when the bottom and top of the cutoff search range are very close to being equal. ; This scenario comes into play when there seems to be an error in the accuracy of the Keys PDF integration, so the search range continues to shrink without converging to a cutoff value that will give an acceptable confidence level. To choose how small to allow the search range to be before terminating, set the fraction delta such that the search will terminate when topCutoff (a) and bottomCutoff (b) satisfy this condition:; std::abs(a - b) < std::abs(delta * (a + b)/2) ; Definition at line 155 of file MCMCCalculator.h. ◆ SetLeftSideTailFraction(). void MCMCCalculator::SetLeftSideTailFraction ; (; double ; a). virtual . Set the left side tail fraction. ; This will automatically configure the MCMCInterval to find a tail-fraction interval. Note: that ‘a’ must be in the range 0 <= a <= 1 or the user will be notified of the error ; Definition at line 123 of file MCMCCalculator.cxx. ◆ SetModel(). void MCMCCalculator::SetModel ; (; const ModelConfig & ; ). overridevirtual . Set the Model. ; Implements RooStats::IntervalCalculator.; Definition at line 81 of file MCMCCalculator.cxx. ◆ SetNuisanceParameters(). virtual void RooStats::MCMCCalculator::SetNuisanceParameters ; (; const RooArgSet & ; set). inlinevirtual . specify the nuisance parameters (eg. the rest of the parameters) ; Definition at line 71 of file MCMCCalculator.h. ◆ SetNumBins(). virtual void RooStats::MCMCCalculator::SetNumBins ; (; Int_t ; numBins). inlinevirtual . set the number of bins to create for each axis when constructing the interval ; Definition at line 101 of file MCMCCalculator.h. ◆ SetNumBurnInSteps(). virtual void RooStats::MCMCCalculator::SetNumBurnInSteps ; (; Int_t ; numBurnInSteps). inlinevirtual . se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:24120,config,configure,24120,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,1,['config'],['configure']
Modifiability,"ys mytracks,pions and muons may be written separately. ; Definition at line 32 of file TRef.h. Public Member Functions;  TRef ();  ;  TRef (const TRef &ref);  TRef copy ctor. ;  ;  TRef (TObject *obj);  Create a ref to obj. ;  ; virtual ~TRef ();  ; TObject * GetObject () const;  Return a pointer to the referenced object. ;  ; TProcessID * GetPID () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const;  ; TRef & operator= (const TRef &ref);  TRef assignment operator. ;  ; void operator= (TObject *obj);  Assign object to reference. ;  ; virtual void SetAction (const char *name);  Store the exec number (in the ROOT list of Execs) into the fBits of this TRef. ;  ; virtual void SetAction (TObject *parent);  Find the action to be executed in the dictionary of the parent class and store the corresponding exec number into fBits. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TRef. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRef.html:11904,inherit,inherited,11904,doc/master/classTRef.html,https://root.cern,https://root.cern/doc/master/classTRef.html,1,['inherit'],['inherited']
Modifiability,"ysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TSlave * fSlave;  ; TProofProgressStatus * fStatus;  ; TString fWrkFQDN;  . Friends; class TPacketizer;  ; class TPacketizerAdaptive;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html:8524,inherit,inherited,8524,doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html,https://root.cern,https://root.cern/doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html,1,['inherit'],['inherited']
Modifiability,"ysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFileStager; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TString GetPathName (TObject *o);  Return the path name contained in object 'o' allowing for TUrl, TObjString or TFileInfo. ;  ; static TFileStager * Open (const char *stager);  Open a stager, after having loaded the relevant plug-in. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetFileStager.html:10355,inherit,inherited,10355,doc/master/classTNetFileStager.html,https://root.cern,https://root.cern/doc/master/classTNetFileStager.html,1,['inherit'],['inherited']
Modifiability,"ysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TXMLSetup;  TXMLSetup ()=default;  ;  TXMLSetup (const char *opt);  creates TXMLSetup object getting values from string ;  ;  TXMLSetup (const TXMLSetup &src);  copy constructor of TXMLSetup class ;  ; virtual ~TXMLSetup ()=default;  ; Int_t GetNextRefCounter ();  ; TString GetSetupAsString ();  return setup values as string ;  ; EXMLLayout GetXmlLayout () const;  ; Bool_t IsStoreStreamerInfos () const;  ; Bool_t IsUseDtd () const;  ; Bool_t IsUseNamespaces () const;  ; TXMLSetup & operator= (const TXMLSetup &rhs);  assign operator ;  ; void PrintSetup ();  show setup values ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const char * XmlClassNameSpaceRef (const TClass *cl);  produce string which used as reference in class namespace definition ;  ; const char * XmlConvertClassName (const char *name);  convert class name to exclude any special symbols like ':', '<' '>' ',' and spaces ;  ; const char * XmlGetElementName (const TStreamerElement *el);  return converted name for TStreamerElement ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  counter of created keys, used for keys id ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:25529,inherit,inherited,25529,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['inherit'],['inherited']
Modifiability,"ysis of the state at the minimum are provided.; 5.1.2 fval(), edm(), nfcn(); The method double FunctionMinimum::fval() returns the function value at the minimum, the method double FunctionMinimum::edm() returns the expected vertical distance to the minimum EDM and unsigned int FunctionMinimum::nfcn() returns the total number of function calls during the minimization.; 5.2 MnContours; [api:contours]; 5.2.1 MnContours(const FCNBase&, const FunctionMinimum&); Construct an MnContours object from the user’s FCN and a valid FunctionMinimum. Additional constructors for user specific MnStrategy settings are provided.; 5.2.2 operator(); The method MnContours::operator()(unsigned int parx, unsigned int pary, unsigned int npoints = 20) const calculates one function contour of \(\mbox{FCN}\) with respect to parameters \(\mbox{parx}\) and \(\mbox{pary}\). The return value is a std::vector\(<\)std::pair\(<\)double,double\(>\) \(>\) of (x,y) points. \(\mbox{FCN}\) minimized always with respect to all other \(\mbox{n - 2}\) variable parameters (if any). M will try to find \(\mbox{npoints}\) points on the contour (default 20). To calculate more than one contour, the user needs to set the error definition [howto:errordef] in its \(\mbox{FCN}\) to the appropriate value for the desired confidence level and call the method MnContours::operator() for each contour.; 5.2.3 contour(…); MnContours::contour(unsigned int parx, unsigned int pary, unsigned int npoints = 20) causes a \(\mbox{CONTOURS}\) error analysis and returns the result in form of ContoursError. As a by-product ContoursError keeps the MinosError information of parameters \(\mbox{parx}\) and \(\mbox{pary}\). The result ContoursError can be easily printed using std::cout.; 5.3 MnEigen; [api:eigen] MnEigen calculates and the eigenvalues of the user covariance matrix MnUserCovariance.; 5.3.1 MnEigen(); MnEigen is instantiated via default constructor.; 5.3.2 operator(); operator()(const MnUserCovariance&) const will perform the cal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:44372,variab,variable,44372,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['variab'],['variable']
Modifiability,"ystem.cxx:254; TSystem::RemoveTimervirtual TTimer * RemoveTimer(TTimer *t)Remove timer from list of system timers.Definition TSystem.cxx:481; TSystem::GetDirNamevirtual TString GetDirName(const char *pathname)Return the directory name in pathname.Definition TSystem.cxx:1032; TSystem::GetFPEMaskvirtual Int_t GetFPEMask()Return the bitmap of conditions that trigger a floating point exception.Definition TSystem.cxx:632; TSystem::Unlinkvirtual int Unlink(const char *name)Unlink, i.e.Definition TSystem.cxx:1381; TSystem::StackTracevirtual void StackTrace()Print a stack trace.Definition TSystem.cxx:734; TSystem::GetUserInfovirtual UserGroup_t * GetUserInfo(Int_t uid)Returns all user info in the UserGroup_t structure.Definition TSystem.cxx:1601; TSystem::ResetSignalsvirtual void ResetSignals()Reset signals handlers to previous behaviour.Definition TSystem.cxx:584; TSystem::fBuildNodeTString fBuildNodeDefinition TSystem.h:306; TSystem::TempDirectoryvirtual const char * TempDirectory() constReturn a user configured or systemwide directory to create temporary files in.Definition TSystem.cxx:1482; TSystem::GetFlagsOptvirtual const char * GetFlagsOpt() constReturn the optimization flags.Definition TSystem.cxx:3935; TSystem::ConsistentWithvirtual Bool_t ConsistentWith(const char *path, void *dirptr=nullptr)Check consistency of this helper with the one required by 'path' or 'dirptr'.Definition TSystem.cxx:804; TSystem::DynamicPathNamechar * DynamicPathName(const char *lib, Bool_t quiet=kFALSE)Find a dynamic library called lib using the system search paths.Definition TSystem.cxx:2020; TTimeBasic time type with millisecond precision.Definition TTime.h:27; TTimerHandles synchronous and a-synchronous timer events.Definition TTimer.h:51; TTimer::GetAbsTimeTTime GetAbsTime() constDefinition TTimer.h:78; TTimer::TurnOnvirtual void TurnOn()Add the timer to the system timer list.Definition TTimer.cxx:243; TTimer::IsAsyncBool_t IsAsync() constDefinition TTimer.h:81; TTimer::Resetvoid Reset(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:194795,config,configured,194795,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['config'],['configured']
Modifiability,"ystem.cxx:254; TSystem::RemoveTimervirtual TTimer * RemoveTimer(TTimer *t)Remove timer from list of system timers.Definition TSystem.cxx:481; TSystem::GetDirNamevirtual TString GetDirName(const char *pathname)Return the directory name in pathname.Definition TSystem.cxx:1032; TSystem::GetFPEMaskvirtual Int_t GetFPEMask()Return the bitmap of conditions that trigger a floating point exception.Definition TSystem.cxx:632; TSystem::Unlinkvirtual int Unlink(const char *name)Unlink, i.e.Definition TSystem.cxx:1381; TSystem::StackTracevirtual void StackTrace()Print a stack trace.Definition TSystem.cxx:734; TSystem::GetUserInfovirtual UserGroup_t * GetUserInfo(Int_t uid)Returns all user info in the UserGroup_t structure.Definition TSystem.cxx:1601; TSystem::ResetSignalsvirtual void ResetSignals()Reset signals handlers to previous behaviour.Definition TSystem.cxx:584; TSystem::fBuildNodeTString fBuildNodeDefinition TSystem.h:306; TSystem::TempDirectoryvirtual const char * TempDirectory() constReturn a user configured or systemwide directory to create temporary files in.Definition TSystem.cxx:1482; TSystem::GetFlagsOptvirtual const char * GetFlagsOpt() constReturn the optimization flags.Definition TSystem.cxx:3935; TSystem::ConsistentWithvirtual Bool_t ConsistentWith(const char *path, void *dirptr=nullptr)Check consistency of this helper with the one required by 'path' or 'dirptr'.Definition TSystem.cxx:804; TSystem::DynamicPathNamechar * DynamicPathName(const char *lib, Bool_t quiet=kFALSE)Find a dynamic library called lib using the system search paths.Definition TSystem.cxx:2020; TTimeBasic time type with millisecond precision.Definition TTime.h:27; TTimerHandles synchronous and a-synchronous timer events.Definition TTimer.h:51; TVirtualMutexThis class implements a mutex interface.Definition TVirtualMutex.h:32; bool; int; nconst Int_t nDefinition legend1.C:16; CpuInfo_tDefinition TSystem.h:163; CpuInfo_t::~CpuInfo_tvirtual ~CpuInfo_t()Definition TSystem.h:173; CpuInfo_t::fIdle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:63703,config,configured,63703,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['config'],['configured']
Modifiability,"ystem::GetGroupInfo(Int_t /*gid*/); 1626{; 1627 AbstractMethod(""GetGroupInfo"");; 1628 return nullptr;; 1629}; 1630 ; 1631////////////////////////////////////////////////////////////////////////////////; 1632/// Returns all group info in the UserGroup_t structure. The only active; 1633/// fields in the UserGroup_t structure for this call are:; 1634/// - fGid and fGroup; 1635/// If group = 0, returns current user's group. The returned structure; 1636/// must be deleted by the user. In case of error 0 is returned.; 1637 ; 1638UserGroup_t *TSystem::GetGroupInfo(const char * /*group*/); 1639{; 1640 AbstractMethod(""GetGroupInfo"");; 1641 return nullptr;; 1642}; 1643 ; 1644//---- environment manipulation ------------------------------------------------; 1645 ; 1646////////////////////////////////////////////////////////////////////////////////; 1647/// Set environment variable.; 1648 ; 1649void TSystem::Setenv(const char *, const char *); 1650{; 1651 AbstractMethod(""Setenv"");; 1652}; 1653 ; 1654////////////////////////////////////////////////////////////////////////////////; 1655/// Unset environment variable.; 1656 ; 1657void TSystem::Unsetenv(const char *name); 1658{; 1659 Setenv(name, """");; 1660}; 1661 ; 1662////////////////////////////////////////////////////////////////////////////////; 1663/// Get environment variable.; 1664 ; 1665const char *TSystem::Getenv(const char *); 1666{; 1667 AbstractMethod(""Getenv"");; 1668 return nullptr;; 1669}; 1670 ; 1671//---- System Logging ----------------------------------------------------------; 1672 ; 1673////////////////////////////////////////////////////////////////////////////////; 1674/// Open connection to system log daemon. For the use of the options and; 1675/// facility see the Unix openlog man page.; 1676 ; 1677void TSystem::Openlog(const char *, Int_t, ELogFacility); 1678{; 1679 AbstractMethod(""Openlog"");; 1680}; 1681 ; 1682////////////////////////////////////////////////////////////////////////////////; 1683/// Send mess",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:52898,variab,variable,52898,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ytesSent ();  Get total number of bytes sent via all sockets. ;  ; static void NetError (const char *where, Int_t error);  Print error string depending on error code. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSSLSocket ();  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void WrapWithSSL ();  Wraps the socket with OpenSSL. ;  . Private Attributes; SSL * fSSL;  ; SSL_CTX * fSSLCtx;  . Static Private Attributes; static char fgSSLCAFile [] =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSSLSocket.html:15691,inherit,inherited,15691,doc/master/classTSSLSocket.html,https://root.cern,https://root.cern/doc/master/classTSSLSocket.html,1,['inherit'],['inherited']
Modifiability,"yword. Return """" if not found. ; Definition at line 638 of file TFITS.cxx. ◆ GetRecord(). struct TFITSHDU::HDURecord * TFITSHDU::GetRecord ; (; const char * ; keyword). Get record by keyword. ; Definition at line 625 of file TFITS.cxx. ◆ GetRecordNumber(). Int_t TFITSHDU::GetRecordNumber ; (; ); const. inline . Definition at line 111 of file TFITS.h. ◆ GetTabNColumns(). Int_t TFITSHDU::GetTabNColumns ; (; ); const. inline . Definition at line 124 of file TFITS.h. ◆ GetTabNRows(). Int_t TFITSHDU::GetTabNRows ; (; ); const. inline . Definition at line 125 of file TFITS.h. ◆ GetTabRealVectorCell() [1/2]. TVectorD * TFITSHDU::GetTabRealVectorCell ; (; Int_t ; rownum, . const char * ; colname . ). Get a real vector embedded in a cell given by (row>=0, column name) ; Definition at line 1544 of file TFITS.cxx. ◆ GetTabRealVectorCell() [2/2]. TVectorD * TFITSHDU::GetTabRealVectorCell ; (; Int_t ; rownum, . Int_t ; colnum . ). Get a real array (with fixed or variable-length) embedded in a cell given by (row>=0, column>=0) ; Definition at line 1513 of file TFITS.cxx. ◆ GetTabRealVectorCells() [1/2]. TObjArray * TFITSHDU::GetTabRealVectorCells ; (; const char * ; colname). Get a collection of real vectors embedded in cells along a given column from a table HDU by name. ; Definition at line 1493 of file TFITS.cxx. ◆ GetTabRealVectorCells() [2/2]. TObjArray * TFITSHDU::GetTabRealVectorCells ; (; Int_t ; colnum). Get a collection of real vectors embedded in cells along a given column from a table HDU. colnum >= 0. ; Definition at line 1454 of file TFITS.cxx. ◆ GetTabRealVectorColumn() [1/2]. TVectorD * TFITSHDU::GetTabRealVectorColumn ; (; const char * ; colname). Get a real number-typed column from a table HDU given its name. ; Definition at line 1368 of file TFITS.cxx. ◆ GetTabRealVectorColumn() [2/2]. TVectorD * TFITSHDU::GetTabRealVectorColumn ; (; Int_t ; colnum). Get a real number-typed column from a table HDU given its column index (>=0). ; Definition at line 1329 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFITSHDU.html:21571,variab,variable-length,21571,doc/master/classTFITSHDU.html,https://root.cern,https://root.cern/doc/master/classTFITSHDU.html,1,['variab'],['variable-length']
Modifiability,"y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The merge() function adds two data set column-wise; cout << endl << "">> merge d2(y) with d1(x,c) to form d1(x,c,y)"" << endl;; static_cast<RooDataSet&>(*d1).merge(&static_cast<RooDataSet&>(*d2));; d1->Print(""v"");; ; // The append() function adds two datasets row-wise; cout << endl << "">> append data points of d3 to d1"" << endl;; static_cast<RooDataSet&>(*d1).append(static_cast<RooDataSet&>(*d3));; d1->Print(""v"");; ; // O p e r a t i o n s o n b i n n e d d a t a s e t s; // ---------------------------------------------------------; ; // A binned dataset can be constructed empty, from an unbinned dataset, or; // from a ROOT native histogram (TH1,2,3); ; cout << "">> construct dh (binned) from d(unbinned) but only take the x and y dimensions,"" << endl; << "">> the category 'c' will be projected in the filling process"" << endl;; ; // The binning of real variables (like x,y) is done using their fit range; // 'get/setRange()' and number of specified fit bins 'get/setBins()'.; // Category dimensions of binned datasets get one bin per defined category state; x.setBins(10);; y.setBins(10);; RooDataHist dh(""dh"", ""binned version of d"", RooArgSet(x, y), d);; dh.Print(""v"");; ; RooPlot *yframe = y.frame(Bins(10), Title(""Operations on binned datasets""));; dh.plotOn(yframe); // plot projection of 2D binned data on y; ; // Examine the statistics of a binned dataset; cout << "">> number of bins in dh : "" << dh.numEntries() << endl;; cout << "">> sum of weights in dh : "" << dh.sum(false) << endl;; cout << "">> integral over histogram: "" << dh.sum(true) << endl; // accounts for bin volume; ; // Locate a bin from a set of coordinates and retrieve its properties; x = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf402__datahandling_8C.html:3894,variab,variables,3894,doc/master/rf402__datahandling_8C.html,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html,1,['variab'],['variables']
Modifiability,"y _realSet;  List of reals to track. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChangeTracker.html:56331,inherit,inherited,56331,doc/master/classRooChangeTracker.html,https://root.cern,https://root.cern/doc/master/classRooChangeTracker.html,1,['inherit'],['inherited']
Modifiability,"y sigma;  ; RooRealProxy ssf;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooResolutionModel; RooFormulaVar * _basis = nullptr;  Basis function convolved with this resolution model. ;  ; Int_t _basisCode;  Identifier code for selected basis function. ;  ; bool _ownBasis;  Flag indicating ownership of _basis. ;  ; RooTemplateProxy< RooAbsRealLValue > x;  Dependent/convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inheri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGExpModel.html:74165,inherit,inherited,74165,doc/master/classRooGExpModel.html,https://root.cern,https://root.cern/doc/master/classRooGExpModel.html,1,['inherit'],['inherited']
Modifiability,"z; TVectorDfNomegaInvstores a critical diagonal matrix as a vector; Int_tfNxdimensions of the vectors in the general QP formulation; Int_tfNxlo; Int_tfNxupdimensions of the upper and lower bound vectors; TVectorDfRhsright-hand side of the system; TVectorDfXloIndex; TVectorDfXupIndexindex matrices for the upper and lower bounds on x and Cx. Class Charts. Inheritance Chart:. TObject. ←; TQpLinSolverBase. ←. TQpLinSolverDens. TQpLinSolverSparse. Function documentation; TQpLinSolverBase(); Default constructor. TQpLinSolverBase(TQpProbBase* factory, TQpDataBase* data); Constructor. TQpLinSolverBase(const TQpLinSolverBase& another); Copy constructor. void Factor(TQpDataBase* prob, TQpVar* vars); Sets up the matrix for the main linear system in ""augmented system"" form. The; actual factorization is performed by a routine specific to either the sparse; or dense case. void ComputeDiagonals(TVectorD& dd, TVectorD& omega, TVectorD& t, TVectorD& lambda, TVectorD& u, TVectorD& pi, TVectorD& v, TVectorD& gamma, TVectorD& w, TVectorD& phi); Computes the diagonal matrices in the augmented system from the current set of variables. void Solve(TQpDataBase* prob, TQpVar* vars, TQpResidual* resids, TQpVar* step); Solves the system for a given set of residuals. Assembles the right-hand side appropriate; to the matrix factored in factor, solves the system using the factorization produced there,; partitions the solution vector into step components, then recovers the step components; eliminated during the block elimination that produced the augmented system form . void SolveXYZS(TVectorD& stepx, TVectorD& stepy, TVectorD& stepz, TVectorD& steps, TVectorD& ztemp, TQpDataBase* data); Assemble right-hand side of augmented system and call SolveCompressed to solve it. void JoinRHS(TVectorD& rhs, TVectorD& rhs1, TVectorD& rhs2, TVectorD& rhs3); Assembles a single vector object from three given vectors .; rhs_out (output) final joined vector; rhs1_in (input) first part of rhs; rhs2_in (input) middl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpLinSolverBase.html:7920,variab,variables,7920,root/html602/TQpLinSolverBase.html,https://root.cern,https://root.cern/root/html602/TQpLinSolverBase.html,2,['variab'],['variables']
Modifiability,"zation argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooDataHist::ErrorType _etype;  Error type store in associated RooDataHist. ;  ; FuncMode _funcMode;  Function, P.d.f. or extended p.d.f? ;  ;  Protected Attributes inherited from RooAbsOptTestStatistic; RooArgSet _cachedNodes;  ! List of nodes that are cached as constant expressions ;  ; RooAbsData * _dataClone = nullptr;  Pointer to internal clone if input data. ;  ; RooAbsReal * _funcClone = nullptr;  Pointer to internal clone of input function. ;  ; RooArgSet * _funcCloneSet = nullptr;  Set owning all components of internal clone of input function. ;  ; RooArgSet * _funcObsSet = nullptr;  List of observables in the pdf expression. ;  ; double _integrateBinsPrecision {-1.};  ; RooArgSet * _normSet = nullptr;  Pointer to set with observables used for normalization. ;  ; bool _optimized = false;  ! ;  ; RooAbsData * _origData = nullptr;  Original data. ;  ; RooAbsReal * _origFunc = nullptr;  Original function. ;  ; bool _ownData = false;  Do we own the dataset. ;  ; RooArgSet * _projDeps = nullptr;  Set of projected observable. ;  ; bool _sealed = false;  Is test statistic sealed – i.e. no access to data. ;  ; TString _sealNotice;  User-defined notice shown when reading a sealed likelihood. ;  ; bool _skipZeroWeights = false;  ! W",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:59787,inherit,inherited,59787,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"ze () const;  Returns the current file size. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read specified byte range from remote file via HTTP. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; void setCACheck (Bool_t check);  Enable or disable certificate authority check. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteBuffer (const char *buffer, Int_t bufferLength);  Write a buffer to the file. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; virtual TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:1832,inherit,inherited,1832,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,1,['inherit'],['inherited']
Modifiability,"ze (along X, Y and Z axis) 3-D histograms using input arrays of type float. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type float and size nbinsx+1 ; [in]nbinsynumber of bins ; [in]ybinsarray of low-edges for each bin. This is an array of type float and size nbinsy+1 ; [in]nbinsznumber of bins ; [in]zbinsarray of low-edges for each bin. This is an array of type float and size nbinsz+1 . Definition at line 142 of file TH3.cxx. ◆ TH3() [4/5]. TH3::TH3 ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins, . Int_t ; nbinsz, . const Double_t * ; zbins . ). protected . Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type double. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type double and size nbinsx+1 ; [in]nbinsynumber of bins ; [in]ybinsarray of low-edges for each bin. This is an array of type double and size nbinsy+1 ; [in]nbinsznumber of bins ; [in]zbinsarray of low-edges for each bin. This is an array of type double and size nbinsz+1 . Definition at line 179 of file TH3.cxx. ◆ TH3() [5/5]. TH3::TH3 ; (; const TH3 & ; ). privatedelete . ◆ ~TH3(). TH3::~TH3 ; (; ). override . Destructor. ; Definition at line 200 of file TH3.cxx. Member Function Documentation. ◆ AddBinContent() [1/4]. void TH3::AddBinContent ; (; Int_t ; bin). overridevirtual . Increment bin content by 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:61407,variab,variable,61407,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['variab'],['variable']
Modifiability,"ze = 0) const; Int_tWriteLock(); Int_tWriteUnLock(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TRWLock&operator=(const TRWLock&); TRWLock(const TRWLock&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TConditionfLockFreerwlock condition variable; TMutexfMutexrwlock mutex; Int_tfReadersnumber of readers; Int_tfWritersnumber of writers. Class Charts. Inheritance Chart:. TObject. ←; TRWLock. Function documentation; TRWLock(); Create reader/write lock. Int_t ReadLock(); Obtain a reader lock. Returns always 0. Int_t ReadUnLock(); Unlock reader lock. Returns -1 if thread was not locked,; 0 if everything ok. Int_t WriteLock(); Obtain a writer lock. Returns always 0. Int_t WriteUnLock(); Unlock writer lock. Returns -1 if thread was not locked,; 0 if everything ok. TRWLock(const TRWLock& ). TRWLock& operator=(const TRWLock& ). virtual ~TRWLock(); { }. » Author: Fons Rademakers 04/01/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-06-02 16:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRWLock.html:5814,variab,variable,5814,root/html604/TRWLock.html,https://root.cern,https://root.cern/root/html604/TRWLock.html,1,['variab'],['variable']
Modifiability,"ze = 0) const; Int_tWriteLock(); Int_tWriteUnLock(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TRWLock&operator=(const TRWLock&); TRWLock(const TRWLock&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TConditionfLockFreerwlock condition variable; TMutexfMutexrwlock mutex; Int_tfReadersnumber of readers; Int_tfWritersnumber of writers. Class Charts. Inheritance Chart:. TObject. ←; TRWLock. Function documentation; TRWLock(); Create reader/write lock. Int_t ReadLock(); Obtain a reader lock. Returns always 0. Int_t ReadUnLock(); Unlock reader lock. Returns -1 if thread was not locked,; 0 if everything ok. Int_t WriteLock(); Obtain a writer lock. Returns always 0. Int_t WriteUnLock(); Unlock writer lock. Returns -1 if thread was not locked,; 0 if everything ok. TRWLock(const TRWLock& ). TRWLock& operator=(const TRWLock& ). virtual ~TRWLock(); { }. » Author: Fons Rademakers 04/01/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRWLock.html:5814,variab,variable,5814,root/html602/TRWLock.html,https://root.cern,https://root.cern/root/html602/TRWLock.html,1,['variab'],['variable']
Modifiability,"ze like in TH2D. ; Definition at line 125 of file TProfile2D.cxx. ◆ TProfile2D() [4/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup, . Option_t * ; option = """" . ). Create a 2-D Profile with variable bins in X and fix bins in Y. ; Definition at line 135 of file TProfile2D.cxx. ◆ TProfile2D() [5/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; nbinsy, . const Double_t * ; ybins, . Option_t * ; option = """" . ). Create a 2-D Profile with fix bins in X and variable bins in Y. ; Definition at line 144 of file TProfile2D.cxx. ◆ TProfile2D() [6/7]. TProfile2D::TProfile2D ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins, . Option_t * ; option = """" . ). Create a 2-D Profile with variable bins in X and variable bins in Y. ; Definition at line 153 of file TProfile2D.cxx. ◆ TProfile2D() [7/7]. TProfile2D::TProfile2D ; (; const TProfile2D & ; profile). Copy constructor. ; Definition at line 206 of file TProfile2D.cxx. ◆ ~TProfile2D(). TProfile2D::~TProfile2D ; (; ). override . Default destructor for Profile2D histograms. ; Definition at line 98 of file TProfile2D.cxx. Member Function Documentation. ◆ Add() [1/3]. Bool_t TProfile2D::Add ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1 . ). overridevirtual . Replace contents of this profile2D by the addition of h1 and h2. ; this = c1*h1 + c2*h2 ; Reimplemented from TH1.; Definition at line 249 of file TProfile2D.cxx. ◆ Add() [2/3]. Bool_t TProfile2D::Add ; (; const TH1 * ; h1, . Double_t ; c1 = 1 . ). overridevirtual . Performs the operation: this = this + c1*h1 . ; Reimplemented from TH1.; Definition at line 230 of file TProfile2D.cxx. ◆ Add() [3/3]. Bool_t TProfile2D::Add ; (; TF1 * ; h1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:70301,variab,variable,70301,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,2,['variab'],['variable']
Modifiability,"ze points and copy iend first points. ;  ; TString SaveArray (std::ostream &out, const char *suffix, Int_t frameNumber, Double_t *arr);  Save array as C++ code Returns name of created array. ;  ; void SaveHistogramAndFunctions (std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option);  Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes. ;  ; Double_t ** ShrinkAndCopy (Int_t size, Int_t iend);  if size*2 <= fMaxSize allocate new arrays of size points, copy points [0,oend). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fEXhigh {nullptr};  [fNpoints] array of X high errors ;  ; Double_t * fEXlow {nullptr};  [fNpoints] array of X low errors ;  ; Double_t * fEYhigh {nullptr};  [fNpoints] array of Y high errors ;  ; Double_t * fEYlow {nullptr};  [fNpoints] array of Y low errors ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors.html:33326,inherit,inherited,33326,doc/master/classTGraphAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors.html,1,['inherit'],['inherited']
Modifiability,"ze(); ++i) {; 673 output[i] = getLog(pdfValues[i], this);; 674 }; 675}; 676 ; 677////////////////////////////////////////////////////////////////////////////////; 678/// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); 679/// of this PDF for the given number of observed events.; 680///; 681/// For successful operation, the PDF implementation must indicate that; 682/// it is extendable by overloading `canBeExtended()`, and must; 683/// implement the `expectedEvents()` function.; 684///; 685/// \param[in] sumEntries The number of observed events.; 686/// \param[in] nset The normalization set when asking the pdf for the expected; 687/// number of events.; 688/// \param[in] observedSumW2 The number of observed events when weighting with; 689/// squared weights. If non-zero, the weight-squared error; 690/// correction is applied to the extended term.; 691/// \param[in] doOffset Offset the extended term by a counterterm where the; 692/// expected number of events equals the observed number of events.; 693/// This constant shift results in a term closer to zero that is; 694/// approximately chi-square distributed. It is useful to do this; 695/// also when summing multiple NLL terms to avoid numeric precision; 696/// loss that happens if you sum multiple terms of different orders; 697/// of magnitude.; 698///; 699/// The weight-squared error correction works as follows:; 700/// adjust poisson such that; 701/// estimate of \f$N_\mathrm{expect}\f$ stays at the same value, but has a different variance, rescale; 702/// both the observed and expected count of the Poisson with a factor \f$ \sum w_{i} / \sum w_{i}^2 \f$; 703/// (the effective weight of the Poisson term),; 704/// i.e., change \f$\mathrm{Poisson}(N_\mathrm{observed} = \sum w_{i} | N_\mathrm{expect} )\f$; 705/// to \f$ \mathrm{Poisson}(\sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 | N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 ) \f$,; 706/// weighte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:26529,extend,extended,26529,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"ze); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t); - O : [the letter 'o', not a zero] a boolean (Bool_t); * If the address points to a single numerical variable, the leaflist is optional:; int value;; tree->Branch(branchname, &value);; * If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable (even between CINT and compiled code on the platform); TTree (i.e. you will not be able to read it back on a platform with a different; padding strategy). ==> Case B. TBranch *branch = tree->Branch(branchname, &p_object, bufsize, splitlevel); TBranch *branch = tree->Branch(branchname, className, &p_object, bufsize, splitlevel); * p_object is a pointer to an object.; * If className is not specified, Branch uses the type of p_object to determine the; type of the object.; * If className is used to specify explicitly the o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:3042,variab,variable,3042,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,12,['variab'],['variable']
Modifiability,"ze, Int_t splitlevel)Same as TTree::Branch but automatic detection of the class name.Definition TTree.cxx:1635; TTree::SetEventListvirtual void SetEventList(TEventList *list)This function transfroms the given TEventList into a TEntryList The new TEntryList is owned by the TT...Definition TTree.cxx:9069; TTree::MoveReadCachevoid MoveReadCache(TFile *src, TDirectory *dir)Move a cache from a file to the current file in dir.Definition TTree.cxx:6983; TTree::fAutoFlushLong64_t fAutoFlushAuto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced.Definition TTree.h:101; TTree::fUpdateInt_t fUpdateUpdate frequency for EntryLoop.Definition TTree.h:93; TTree::ResetAfterMergevirtual void ResetAfterMerge(TFileMergeInfo *)Resets the state of this TTree after a merge (keep the customization but forget the data).Definition TTree.cxx:8034; TTree::GetEntriesvirtual Long64_t GetEntries() constDefinition TTree.h:463; TTree::SetEstimatevirtual void SetEstimate(Long64_t nentries=1000000)Set number of entries to estimate variable limits.Definition TTree.cxx:9110; TTree::fTimerIntervalInt_t fTimerIntervalTimer interval in milliseconds.Definition TTree.h:91; TTree::fDebugInt_t fDebug! Debug levelDefinition TTree.h:111; TTree::SetCacheSizeAuxInt_t SetCacheSizeAux(bool autocache=true, Long64_t cacheSize=0)Set the size of the file cache and create it if possible.Definition TTree.cxx:8711; TTree::AutoSavevirtual Long64_t AutoSave(Option_t *option="""")AutoSave tree header every fAutoSave bytes.Definition TTree.cxx:1500; TTree::GetEntryNumbervirtual Long64_t GetEntryNumber(Long64_t entry) constReturn entry number corresponding to entry.Definition TTree.cxx:5865; TTree::CloneTreevirtual TTree * CloneTree(Long64_t nentries=-1, Option_t *option="""")Create a clone of this tree and copy nentries.Definition TTree.cxx:3139; TTree::fFileNumberInt_t fFileNumber! current file number (if file extensions)Definition TTree.h:116; TTree::GetLeafvirtual TLeaf * GetLeaf(const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:449477,variab,variable,449477,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ze, const T &Value);  ;  RVecN (std::initializer_list< T > IL);  ;  RVecN (T *p, size_t n);  ;  ~RVecN ();  ; reference at (size_type pos);  ; const_reference at (size_type pos) const;  ; value_type at (size_type pos, value_type fallback);  No exception thrown. The user specifies the desired value in case the RVecN is shorter than pos. ;  ; value_type at (size_type pos, value_type fallback) const;  No exception thrown. The user specifies the desired value in case the RVecN is shorter than pos. ;  ; template<typename U , unsigned M, typename = std::enable_if<std::is_convertible<T, U>::value>> ;  operator RVecN< U, M > () const;  ; RVecN & operator= (const RVecN &RHS);  ; RVecN & operator= (Detail::VecOps::RVecImpl< T > &&RHS);  ; RVecN & operator= (RVecN &&RHS);  ; RVecN & operator= (std::initializer_list< T > IL);  ; template<typename V , unsigned M, typename = std::enable_if<std::is_convertible<V, bool>::value>> ; RVecN operator[] (const RVecN< V, M > &conds) const;  ; reference operator[] (size_type idx);  ; const_reference operator[] (size_type idx) const;  ;  Public Member Functions inherited from ROOT::Detail::VecOps::RVecImpl< T >;  RVecImpl (const RVecImpl &)=delete;  ;  ~RVecImpl ();  ; template<typename in_iter , typename = typename std::enable_if<std::is_convertible< typename std::iterator_traits<in_iter>::iterator_category, std::input_iterator_tag>::value>::type> ; void append (in_iter in_start, in_iter in_end);  Add the specified range to the end of the SmallVector. ;  ; void append (size_type NumInputs, const T &Elt);  Append NumInputs copies of Elt to the end. ;  ; void append (std::initializer_list< T > IL);  ; template<typename in_iter , typename = typename std::enable_if<std::is_convertible< typename std::iterator_traits<in_iter>::iterator_category, std::input_iterator_tag>::value>::type> ; void assign (in_iter in_start, in_iter in_end);  ; void assign (size_type NumElts, const T &Elt);  ; void assign (std::initializer_list< T > IL);  ; void clear (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVecN.html:3221,inherit,inherited,3221,doc/master/classROOT_1_1VecOps_1_1RVecN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVecN.html,1,['inherit'],['inherited']
Modifiability,"ze=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualViewer3D * Viewer3D (TVirtualPad *pad=nullptr, Option_t *type="""");  Create a Viewer 3D of specified type. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualViewer3D.h>. Inheritance diagram for TVirtualViewer3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualViewer3D.html:21230,inherit,inherited,21230,doc/master/classTVirtualViewer3D.html,https://root.cern,https://root.cern/doc/master/classTVirtualViewer3D.html,1,['inherit'],['inherited']
Modifiability,"ze=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Bool_t fHasKink;  ; Bool_t fHasV0;  ; Bool_t fIsRec;  ; Int_t fLabel;  ; Int_t fNClus;  ; Int_t fNHits;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveVSDStructs.h>. Inheritance diagram for TEveMCRecCrossRef:. This browser is not able to show SVG: try Firefox, Chrome, Safari, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveMCRecCrossRef.html:9028,inherit,inherited,9028,doc/master/classTEveMCRecCrossRef.html,https://root.cern,https://root.cern/doc/master/classTEveMCRecCrossRef.html,1,['inherit'],['inherited']
Modifiability,"ze=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual void ProgressNotifier (TString, TString);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static MethodCuts * DynamicCast (IMethod *method);  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TMVA::IFitterTar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:25228,inherit,inherited,25228,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,5,['inherit'],['inherited']
Modifiability,"zed configuration, a null pointer is returned.; 3281 ; 3282RooNumIntConfig* RooAbsReal::specialIntegratorConfig() const; 3283{; 3284 return _specIntegratorConfig.get();; 3285}; 3286 ; 3287 ; 3288////////////////////////////////////////////////////////////////////////////////; 3289/// Returns the specialized integrator configuration for _this_ RooAbsReal.; 3290/// If this object has no specialized configuration, a null pointer is returned,; 3291/// unless createOnTheFly is true in which case a clone of the default integrator; 3292/// configuration is created, installed as specialized configuration, and returned; 3293 ; 3294RooNumIntConfig* RooAbsReal::specialIntegratorConfig(bool createOnTheFly); 3295{; 3296 if (!_specIntegratorConfig && createOnTheFly) {; 3297 _specIntegratorConfig = std::make_unique<RooNumIntConfig>(*defaultIntegratorConfig()) ;; 3298 }; 3299 return _specIntegratorConfig.get();; 3300}; 3301 ; 3302 ; 3303 ; 3304////////////////////////////////////////////////////////////////////////////////; 3305/// Return the numeric integration configuration used for this object. If; 3306/// a specialized configuration was associated with this object, that configuration; 3307/// is returned, otherwise the default configuration for all RooAbsReals is returned; 3308 ; 3309const RooNumIntConfig* RooAbsReal::getIntegratorConfig() const; 3310{; 3311 const RooNumIntConfig* config = specialIntegratorConfig() ;; 3312 if (config) return config ;; 3313 return defaultIntegratorConfig() ;; 3314}; 3315 ; 3316 ; 3317////////////////////////////////////////////////////////////////////////////////; 3318/// Return the numeric integration configuration used for this object. If; 3319/// a specialized configuration was associated with this object, that configuration; 3320/// is returned, otherwise the default configuration for all RooAbsReals is returned; 3321 ; 3322RooNumIntConfig* RooAbsReal::getIntegratorConfig(); 3323{; 3324 RooNumIntConfig* config = specialIntegratorConfig() ;; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:142651,config,configuration,142651,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"zed; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); Redefine x and y axis parameters with variable bin sizes. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1. void SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); Redefine x, y and z axis parameters. The X, Y and Z axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); Redefine x, y and z axis parameters with variable bin sizes. The X, Y and Z axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1,; zBins is supposed to be of length nz+1. void SetDirectory(TDirectory* dir); By default when an histogram is created, it is added to the list; of histogram objects in the current directory in memory.; Remove reference to this histogram from current directory and add; reference to new directory dir. dir can be 0 in which case the; histogram does not belong to any directory. Note that the directory is not a real property of the histogram and; it will not be copied when the histogram is copied or cloned.; If the user wants to have the copied (cloned) histogram in the same; directory, he needs to set again the d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1.html:126114,variab,variable,126114,root/html604/TH1.html,https://root.cern,https://root.cern/root/html604/TH1.html,1,['variab'],['variable']
Modifiability,"zed; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); Redefine x and y axis parameters with variable bin sizes. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1. void SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); Redefine x, y and z axis parameters. The X, Y and Z axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); Redefine x, y and z axis parameters with variable bin sizes. The X, Y and Z axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1,; zBins is supposed to be of length nz+1. void SetDirectory(TDirectory* dir); By default when an histogram is created, it is added to the list; of histogram objects in the current directory in memory.; Remove reference to this histogram from current directory and add; reference to new directory dir. dir can be 0 in which case the; histogram does not belong to any directory. void SetError(const Double_t* error); Replace bin errors by values in array error. void SetName(const char* name); Change the name of this histogram. void SetNameTitle(const char* name, const char* title); Change the name and title of this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:125986,variab,variable,125986,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,1,['variab'],['variable']
Modifiability,"zenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TClonesArray(); Default Constructor. TClonesArray(const char *classname, Int_t s, Bool_t); Create an array of clone objects of classname. The class must inherit from; TObject. If the class defines its own operator delete(), make sure that; it looks like this:. void MyClass::operator delete(void *vp); {; if ((Long_t) vp != TObject::GetDtorOnly()); ::operator delete(vp); // delete space; else; TObject::SetDtorOnly(0);; }. The second argument s indicates an approximate number of objects; that will be entered in the array. If more than s objects are entered,; the array will be automatically expanded. The third argument is not used anymore and only there for backward; compatibility reasons. TClonesArray(const TClass *cl, Int_t s, Bool_t); Create an array of clone objects of class cl. The class must inherit from; TObject. If the class defines an own operator delete(), make sure that; it looks like this:. void MyClass::operator delete(void *vp); {; if ((Long_t) vp != TObject::GetDtorOnly()); ::operator delete(vp); // delete space; else; TObject::SetDtorOnly(0);; }. The second argument, s, indicates an approximate number of objects; that will be entered in the array. If more than s objects are entered,; the array will be automatically expanded. The third argument is not used anymore and only there for backward; compatibility reasons. TClonesArray(const TClonesArray& tc); Copy ctor. TClonesArray& operator=(const TClonesArray& tc); Assignment operator. ~TClonesArray(); Delete a clones array. void BypassStreamer(Bool_t bypass = kTRUE); When the kBypassStreamer bit is set, the automatically; generated Streamer can call directly TClass::WriteBuffer.; Bypassing the Streamer improves the performance when writing/reading; the objects in the TClonesArray. However there is a drawback:; When a TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClonesArray.html:12053,inherit,inherit,12053,root/html526/TClonesArray.html,https://root.cern,https://root.cern/root/html526/TClonesArray.html,1,['inherit'],['inherit']
Modifiability,"zeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:31030,inherit,inheritance,31030,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,9,['inherit'],['inheritance']
Modifiability,"zer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; virtual int CovMatrixStatus () const;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:6629,variab,variable,6629,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,1,['variab'],['variable']
Modifiability,"zer object used for fitting; map<unsigned int,pair<double,double> >fMinosErrorsmap contains the two Minos errors; unsigned intfNCallsnumber of function calls; unsigned intfNFreenumber of fit free parameters (total parameters are in size of parameter vector); unsigned intfNdfnumber of degree of freedom; boolfNormalizedflag for indicating is errors are normalized; shared_ptr<ROOT::Math::IMultiGenFunction>fObjFunc! objective function used for fitting; vector<string>fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<pair<double,double> >fParamBoundsparameter bounds; vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(const FitConfig & fconfig). Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done). FitResult(const FitResult & rhs). Copy constructor. virtual ~FitResult(). Destructor. void FillResult(const shared_ptr<ROOT::Math::Minimizer>& min, const ROOT::Fit::FitConfig& fconfig, const shared_ptr<ROOT::Fit::FitResult::IModelFunction>& f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Fill the fit result from a Minimizer instance after fitting; Run also Minos if requested from the configuration. const std::string & MinimizerType() const. Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created. minimization quantities ; minimizer type. { return fMinimType; }. bool IsValid() const. True if fit successful, otherwise false.; A fit is considered successful if the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__FitResult.html:5183,config,config,5183,root/html604/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__FitResult.html,1,['config'],['config']
Modifiability,"zer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 309 of file TMinuitMinimizer.cxx. ◆ SetFunction(). void TMinuitMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 192 of file TMinuitMinimizer.cxx. ◆ SetLimitedVariable(). bool TMinuitMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 259 of file TMinuitMinimizer.cxx. ◆ SetLowerLimitedVariable(). bool TMinuitMinimizer::SetLowerLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower . ). overridevirtual . set lower limit variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 275 of file TMinuitMinimizer.cxx. ◆ SetUpperLimitedVariable(). bool TMinuitMinimizer::SetUpperLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; upper . ). overridevirtual . set upper limit variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 282 of file TMinuitMinimizer.cxx. ◆ SetVariable(). bool TMinuitMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set free variable ; Implements ROOT::Math::Minimizer.; Definition at line 243 of file TMinuitMinimizer.cxx. ◆ SetVariableLimits(). bool TMinuitMinimizer::SetVariableLimits ; (; unsigned int ; ivar, . double ; lower, . double ; upper . ). overridevirtual . set the limits of an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 37",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:23867,variab,variable,23867,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,"zer.; Definition at line 121 of file BasicMinimizer.h. ◆ NFree(). unsigned int ROOT::Math::BasicMinimizer::NFree ; (; ); const. overridevirtual . number of free variables (real dimension of the problem) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 330 of file BasicMinimizer.cxx. ◆ NPar(). virtual unsigned int ROOT::Math::BasicMinimizer::NPar ; (; ); const. inlinevirtual . total number of parameter defined ; Definition at line 127 of file BasicMinimizer.h. ◆ ObjFunction(). const ROOT::Math::IMultiGenFunction * ROOT::Math::BasicMinimizer::ObjFunction ; (; ); const. inline . return pointer to used objective function ; Definition at line 130 of file BasicMinimizer.h. ◆ PrintResult(). void ROOT::Math::BasicMinimizer::PrintResult ; (; ); const. print result of minimization ; Definition at line 313 of file BasicMinimizer.cxx. ◆ ReleaseVariable(). bool ROOT::Math::BasicMinimizer::ReleaseVariable ; (; unsigned int ; ivar). overridevirtual . release an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 189 of file BasicMinimizer.cxx. ◆ SetFinalValues(). void ROOT::Math::BasicMinimizer::SetFinalValues ; (; const double * ; x, . const MinimTransformFunction * ; func = nullptr . ). protected . Definition at line 300 of file BasicMinimizer.cxx. ◆ SetFixedVariable(). bool ROOT::Math::BasicMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 116 of file BasicMinimizer.cxx. ◆ SetFunction(). void ROOT::Math::BasicMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Reimplemented in ROOT::Math::GSLMinimizer, and ROOT::Math::GSLNLSMinimizer.; Definition at line 240 of file BasicMinimizer.cxx. ◆ SetLimitedVariable(). bool ROOT::Math::BasicMinimize",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:15546,variab,variable,15546,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,1,['variab'],['variable']
Modifiability,"zer.cxx. ◆ SetHessianFunction(). void ROOT::Minuit2::Minuit2Minimizer::SetHessianFunction ; (; std::function< bool(std::span< const double >, double *)> ; hfunc). overridevirtual . set the function implementing Hessian computation ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 424 of file Minuit2Minimizer.cxx. ◆ SetLimitedVariable(). bool ROOT::Minuit2::Minuit2Minimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 241 of file Minuit2Minimizer.cxx. ◆ SetLowerLimitedVariable(). bool ROOT::Minuit2::Minuit2Minimizer::SetLowerLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower . ). overridevirtual . set lower limit variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 221 of file Minuit2Minimizer.cxx. ◆ SetMinimizer(). virtual void ROOT::Minuit2::Minuit2Minimizer::SetMinimizer ; (; ROOT::Minuit2::ModularFunctionMinimizer * ; m). inlineprotectedvirtual . Definition at line 283 of file Minuit2Minimizer.h. ◆ SetMinimizerType(). void ROOT::Minuit2::Minuit2Minimizer::SetMinimizerType ; (; ROOT::Minuit2::EMinimizerType ; type). protected . Definition at line 116 of file Minuit2Minimizer.cxx. ◆ SetStorageLevel(). void ROOT::Minuit2::Minuit2Minimizer::SetStorageLevel ; (; int ; level). set storage level = 1 : store all iteration states (default) = 0 : store only first and last state to save memory ; Definition at line 1332 of file Minuit2Minimizer.cxx. ◆ SetTraceObject(). void ROOT::Minuit2::Minuit2Minimizer::SetTraceObject ; (; MnTraceObject & ; obj). set an object to trace operation for each iteration The object must be a (or inherit from) ROOT::Minuit2::MnTraceObject and implement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:25980,variab,variable,25980,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variable']
Modifiability,"zer.h. ◆ NDim(). unsigned int TFumiliMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 100 of file TFumiliMinimizer.h. ◆ NFree(). unsigned int TFumiliMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 104 of file TFumiliMinimizer.h. ◆ ProvidesError(). bool TFumiliMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 107 of file TFumiliMinimizer.h. ◆ SetFixedVariable(). bool TFumiliMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 433 of file TFumiliMinimizer.cxx. ◆ SetVariable(). bool TFumiliMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set free variable ; Implements ROOT::Math::Minimizer.; Definition at line 415 of file TFumiliMinimizer.cxx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumiliMinimizer.html:16074,variab,variable,16074,doc/master/classTFumiliMinimizer.html,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html,1,['variab'],['variable']
Modifiability,"zero errors (empty bins);; 3971/// - the full range of the histogram is used;; 3972/// - the default Minimizer with its default configuration is used (see below Minimizer Configuration) except for linear function;; 3973/// - for linear functions (`polN`, `chenbyshev` or formula expressions combined using operator `++`) a linear minimization is used.; 3974/// - only the status of the fit is returned;; 3975/// - the fit is performed in Multithread whenever is enabled in ROOT;; 3976/// - only the last fitted function is saved in the histogram;; 3977/// - the histogram is drawn after fitting overalyed with the resulting fitting function; 3978///; 3979/// \anchor HFitMinimizer; 3980/// ### Minimizer Configuration; 3981///; 3982/// The Fit is perfomed using the default Minimizer, defined in the `ROOT::Math::MinimizerOptions` class.; 3983/// It is possible to change the default minimizer and its configuration parameters by calling these static functions before fitting (before calling `TH1::Fit`):; 3984/// - `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(minimizerName, minimizerAgorithm)` for changing the minmizer and/or the corresponding algorithm.; 3985/// For example `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLMultiMin"",""BFGS"");` will set the usage of the BFGS algorithm of the GSL multi-dimensional minimization; 3986/// The current defaults are (""Minuit"",""Migrad"").; 3987/// See the documentation of the `ROOT::Math::MinimizerOptions` for the available minimizers in ROOT and their corresponding algorithms.; 3988/// - `ROOT::Math::MinimizerOptions::SetDefaultTolerance` for setting a different tolerance value for the minimization.; 3989/// - `ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCalls` for setting the maximum number of function calls.; 3990/// - `ROOT::Math::MinimizerOptions::SetDefaultPrintLevel` for changing the minimizer print level from level=0 (minimal printing) to level=3 maximum printing; 3991///; 3992/// Other options are possible dependi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:160654,config,configuration,160654,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['config'],['configuration']
Modifiability,"zilla Firefox. ;  ; static bool ProduceImages (const std::string &fname, const std::vector< std::string > &jsons, const std::vector< int > &widths, const std::vector< int > &heights, const char *batch_file=nullptr);  Produce image file(s) using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  ; static bool ProduceImages (const std::vector< std::string > &fnames, const std::vector< std::string > &jsons, const std::vector< int > &widths, const std::vector< int > &heights, const char *batch_file=nullptr);  Produce image file(s) using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  ; static std::vector< std::string > ProduceImagesNames (const std::string &fname, unsigned nfiles=1);  Produce vector of file names for specified file pattern Depending from supported file forma. ;  . Static Protected Member Functions; static bool CheckIfCanProduceImages (RWebDisplayArgs &args);  Checks if configured browser can be used for image production. ;  ; static std::unique_ptr< Creator > & FindCreator (const std::string &name, const std::string &libname="""");  Search for specific browser creator If not found, try to add one. ;  ; static std::map< std::string, std::unique_ptr< Creator > > & GetMap ();  Static holder of registered creators of web displays. ;  . Private Attributes; std::string fContent;  !< URL used to launch display ;  ; std::string fUrl;  . #include <ROOT/RWebDisplayHandle.hxx>. Inheritance diagram for ROOT::RWebDisplayHandle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RWebDisplayHandle(). ROOT::RWebDisplayHandle::RWebDisplayHandle ; (; const std::string & ; url). inline . constructor ; Definition at line 92 of file RWebDisplayHandle.hxx. ◆ ~RWebDisplayHandle(). virtual ROOT::RWebDisplayHandle::~RWebDisplayHandle ; (; ). virtualdefault . requ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebDisplayHandle.html:3377,config,configured,3377,doc/master/classROOT_1_1RWebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebDisplayHandle.html,1,['config'],['configured']
Modifiability,"zing number of jumps in Eval cases; d.) variables, parameters and constants are mapped - using fOperOfssets0; Eval procedure use direct acces to data (only one corresponding case statement in eval procedure). pdata[operand={Var,Par,Const}][offset]; pdata[fOperOffsets0[i]][fOperOffset1[i+1]]; 2.) The fastest evaluation function is choosen at the end; a.) fOptimal := pointer to the fastest function for given evaluation string; switch(GetActionOptimized(0)){; case kData : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive0; break;}; case kUnary : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive1; break;}; case kBinary : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive2; break;}; case kThree : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive3; break;}; case kFDM : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive4; break;}; }; b.) ex. fOptimal = ::EvalPrimitive0 - if it return only variable, constant or parameter; = ::EvalParameter1 - if only one unary operation; = ::EvalPrimitive2 - if only one binary operation. Double_t EvalPrimitive(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive0(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive1(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive2(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive3(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive4(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalParFast(const Double_t* x, const Double_t* params); Evaluate this formula*-*-*-*-*-*-; *-* =====================; -; *-* The current value of variables x,y,z,t is passed through the pointer x.; *-* The parameters used will be the ones in the array params if params is given; *-* otherwise parameters will be taken from t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:31184,variab,variable,31184,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,3,['variab'],['variable']
Modifiability,"zontal () const;  ; bool IsOption (CandleOption opt) const;  Return true is this option is activated in fOption. ;  ; Bool_t IsVertical () const;  ; Bool_t IsViolinScaled () const;  Returns true if violin plot should be scaled. ;  ; virtual void Paint (Option_t *option="""");  Paint one candle with its current attributes. ;  ; int ParseOption (char *optin);  Parsing of the option-string. ;  ; void SetAxisPosition (const Double_t candlePos);  ; void SetCandleWidth (const Double_t width);  ; void SetHistogram (TH1D *proj);  ; void SetHistoWidth (const Double_t width);  ; void SetLog (int x, int y, int z);  ; virtual void SetMean (Double_t mean);  ; virtual void SetMedian (Double_t median);  ; void SetOption (CandleOption opt);  ; virtual void SetQ1 (Double_t q1);  ; virtual void SetQ2 (Double_t q2);  ; virtual void SetQ3 (Double_t q3);  ; void Streamer (TBuffer &) override;  Stream an object of class TCandle. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCandle.html:3225,inherit,inherited,3225,doc/master/classTCandle.html,https://root.cern,https://root.cern/doc/master/classTCandle.html,1,['inherit'],['inherited']
Modifiability,"{ ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveGeoNode.h>. Inheritance diagram for TEveGeoNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveGeoNode() [1/2]. TEveGeoNode::TEveGeoNode ; (; const TEveGeoNode & ; ). private . ◆ TEveGeoNode() [2/2]. TEveGeoNode::TEveGeoNode ; (; TGeoNode * ; node). Constructor. ; Definition at line 69 of file TEveGeoNode.cxx. Member Function Documentation. ◆ AddStamp(). void TEveGeoNode::AddStamp ; (; UChar_t ; bits). overridevirtual . Override from TEveElement. ; Process visibility changes and forward them to fNode. ; Reimplemented from TEveElement.; Reimplemented in TEveGeoTopNode.; Definition at line 164 of file TEveGeoNode.cxx. ◆ CanEditElement(). Bool_t TEveGeoNode::CanEditElement ; (; ); const. inlineoverridevirtual . Reimplemented ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoNode.html:30504,inherit,inherited,30504,doc/master/classTEveGeoNode.html,https://root.cern,https://root.cern/doc/master/classTEveGeoNode.html,2,['inherit'],['inherited']
Modifiability,"{ ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:42403,inherit,inherited,42403,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,2,['inherit'],['inherited']
Modifiability,"{ kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TWebSnapshot () override;  destructor ;  ; Int_t GetKind () const;  ; const char * GetObjectID () const;  ; TObject * GetSnapshot () const;  ; TClass * IsA () const override;  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (void *ptr, const std::string &suffix="""");  Use pointer to assign object id - TString::Hash. ;  ; void SetOption (const std::string &opt);  ; void SetSnapshot (Int_t kind, TObject *snapshot, Bool_t owner=kFALSE);  SetUse pointer to assign object id - TString::Hash. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSnapshot.html:1940,inherit,inherited,1940,doc/master/classTWebSnapshot.html,https://root.cern,https://root.cern/doc/master/classTWebSnapshot.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveArrow.h>. Inheritance diagram for TEveArrow:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveArrow.html:31911,inherit,inherited,31911,doc/master/classTEveArrow.html,https://root.cern,https://root.cern/doc/master/classTEveArrow.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveBox.h>. Inheritance diagram for TEveBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:36795,inherit,inherited,36795,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveProjectionAxes.h>. Inheritance diagram for TEveProjectionAxes:. This browser is not able to show SVG: try Firefox, Chro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionAxes.html:35214,inherit,inherited,35214,doc/master/classTEveProjectionAxes.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionAxes.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveShape.h>. Inheritance diagram for TEveShape:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveShape.html:35649,inherit,inherited,35649,doc/master/classTEveShape.html,https://root.cern,https://root.cern/doc/master/classTEveShape.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveText.h>. Inheritance diagram for TEveText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveText.html:32175,inherit,inherited,32175,doc/master/classTEveText.html,https://root.cern,https://root.cern/doc/master/classTEveText.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveTriangleSet.h>. Inheritance diagram for TEveTriangleSet:. This browser is not able to show SVG: try Firefox, Chrome, Sa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTriangleSet.html:35229,inherit,inherited,35229,doc/master/classTEveTriangleSet.html,https://root.cern,https://root.cern/doc/master/classTEveTriangleSet.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  ; virtual void SetDepthLocal (Float_t d);  Base-class implementation – just sets fDepth. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveCompound; Short_t fCompoundOpen;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:33250,inherit,inherited,33250,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  ; virtual void SetDepthLocal (Float_t d);  Base-class implementation – just sets fDepth. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementListProjected.html:32504,inherit,inherited,32504,doc/master/classTEveElementListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveElementListProjected.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveScalableStraightLineSet.html:42697,inherit,inherited,42697,doc/master/classTEveScalableStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classTEveScalableStraightLineSet.html,2,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveParamList.html:34779,inherit,inherited,34779,doc/master/classTEveParamList.html,https://root.cern,https://root.cern/doc/master/classTEveParamList.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveCaloData.h>. Inheritance diagram for TEveCaloData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ vCellGeom_ci. typedef std::vector<CellGeom_t>::const_iterator TEveCaloData::vCellGeom_ci. Definition at line 151 of file TEveCaloData.h. ◆ vCellGeom_i. typedef std::vector<CellGeom_t>::iterator TEveCaloData::vCellGeom_i. Definition at line 150 of file TEveCaloData.h. ◆ vCellGeom_t. typedef std::vector<CellGeom_t> TEveCaloData::vCellGeom_t. Definition at line 149 of file TEveCaloData.h. ◆ vCellId_i. typedef std::vector<CellId_t>::iterator TEveCaloData::vCellId_i. Definition at line 147 of file TEveCaloData.h. ◆ vCellId_t. ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloData.html:32875,inherit,inherited,32875,doc/master/classTEveCaloData.html,https://root.cern,https://root.cern/doc/master/classTEveCaloData.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveCaloData.h>. Inheritance diagram for TEveCaloDataHist:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveCaloDataHist() [1/2]. TEveCaloDataHist::TEveCaloDataHist ; (; const TEveCaloDataHist & ; ). private . ◆ TEveCaloDataHist() [2/2]. TEveCaloDataHist::TEveCaloDataHist ; (; ). Constructor. ; Definition at line 739 of file TEveCaloData.cxx. ◆ ~TEveCaloDataHist(). TEveCaloDataHist::~TEveCaloDataHist ; (; ). override . Destructor. ; Definition at line 751 of file TEveCaloData.cxx. Member Function Documentation. ◆ AddHistogram(). Int_t TEveCaloDataHist::AddHistogram ; (; TH2F * ; hist). Add new slice to calo towe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloDataHist.html:33442,inherit,inherited,33442,doc/master/classTEveCaloDataHist.html,https://root.cern,https://root.cern/doc/master/classTEveCaloDataHist.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveCompound.h>. Inheritance diagram for TEveCompound:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveCompound() [1/2]. TEveCompound::TEveCompound ; (; const TEveCompound & ; ). private . ◆ TEveCompound() [2/2]. TEveCompound::TEveCompound ; (; const char * ; n = ""TEveCompound"", . const char * ; t = """", . Bool_t ; doColor = kTRUE, . Bool_t ; doTransparency = kFALSE . ). Constructor. ; Definition at line 24 of file TEveCompound.cxx. ◆ ~TEveCompound(). TEveCompound::~TEveCompound ; (; ). inlineoverride . Definition at line 35 of file TEveCompound.h. Member Function Documentation. ◆ AddElement(). void TEveCompound",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompound.html:33005,inherit,inherited,33005,doc/master/classTEveCompound.html,https://root.cern,https://root.cern/doc/master/classTEveCompound.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveElement.h>. Inheritance diagram for TEveElementList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveElementList() [1/2]. TEveElementList::TEveElementList ; (; const char * ; n = ""TEveElementList"", . const char * ; t = """", . Bool_t ; doColor = kFALSE, . Bool_t ; doTransparency = kFALSE . ). Constructor. ; Definition at line 2089 of file TEveElement.cxx. ◆ TEveElementList() [2/2]. TEveElementList::TEveElementList ; (; const TEveElementList & ; e). Copy constructor. ; Definition at line 2109 of file TEveElement.cxx. ◆ ~TEveElementList(). TEveElementList::~TEveElementList ; (; ). inlineoverride . Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementList.html:32249,inherit,inherited,32249,doc/master/classTEveElementList.html,https://root.cern,https://root.cern/doc/master/classTEveElementList.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveEventManager.h>. Inheritance diagram for TEveEventManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveEventManager(). TEveEventManager::TEveEventManager ; (; const char * ; n = ""TEveEventManager"", . const char * ; t = """" . ). Constructor. ; Definition at line 26 of file TEveEventManager.cxx. ◆ ~TEveEventManager(). TEveEventManager::~TEveEventManager ; (; ). inlineoverride . Definition at line 26 of file TEveEventManager.h. Member Function Documentation. ◆ AddNewEventCommand(). void TEveEventManager::AddNewEventCommand ; (; const TString & ; cmd). virtual . Register a command to be executed on each new ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveEventManager.html:33142,inherit,inherited,33142,doc/master/classTEveEventManager.html,https://root.cern,https://root.cern/doc/master/classTEveEventManager.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEvePlot3D.h>. Inheritance diagram for TEvePlot3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEvePlot3D() [1/2]. TEvePlot3D::TEvePlot3D ; (; const TEvePlot3D & ; ). private . ◆ TEvePlot3D() [2/2]. TEvePlot3D::TEvePlot3D ; (; const char * ; n = ""TEvePlot3D"", . const char * ; t = """" . ). Constructor. ; Definition at line 25 of file TEvePlot3D.cxx. ◆ ~TEvePlot3D(). TEvePlot3D::~TEvePlot3D ; (; ). inlineoverride . Definition at line 36 of file TEvePlot3D.h. Member Function Documentation. ◆ Class(). static TClass * TEvePlot3D::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePlot3D.html:33026,inherit,inherited,33026,doc/master/classTEvePlot3D.html,https://root.cern,https://root.cern/doc/master/classTEvePlot3D.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEvePointSet.h>. Inheritance diagram for TEvePointSetArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEvePointSetArray() [1/2]. TEvePointSetArray::TEvePointSetArray ; (; const TEvePointSetArray & ; ). private . ◆ TEvePointSetArray() [2/2]. TEvePointSetArray::TEvePointSetArray ; (; const char * ; name = ""TEvePointSetArray"", . const char * ; title = """" . ). Constructor. ; Definition at line 437 of file TEvePointSet.cxx. ◆ ~TEvePointSetArray(). TEvePointSetArray::~TEvePointSetArray ; (; ). override . Destructor: deletes the fBins array. ; Actual removal of elements done by TEveElement. ; Definition at line 455 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetArray.html:35064,inherit,inherited,35064,doc/master/classTEvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveSceneInfo.h>. Inheritance diagram for TEveSceneInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveSceneInfo() [1/2]. TEveSceneInfo::TEveSceneInfo ; (; const TEveSceneInfo & ; ). private . ◆ TEveSceneInfo() [2/2]. TEveSceneInfo::TEveSceneInfo ; (; TEveViewer * ; viewer, . TEveScene * ; scene, . TGLSceneInfo * ; sinfo . ). Constructor. ; Definition at line 28 of file TEveSceneInfo.cxx. ◆ ~TEveSceneInfo(). TEveSceneInfo::~TEveSceneInfo ; (; ). inlineoverride . Definition at line 37 of file TEveSceneInfo.h. Member Function Documentation. ◆ AcceptElement(). Bool_t TEveSceneInfo::AcceptElement ; (; TEveElement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSceneInfo.html:30183,inherit,inherited,30183,doc/master/classTEveSceneInfo.html,https://root.cern,https://root.cern/doc/master/classTEveSceneInfo.html,1,['inherit'],['inherited']
Modifiability,"{ nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSceneList.html:31812,inherit,inherited,31812,doc/master/classTEveSceneList.html,https://root.cern,https://root.cern/doc/master/classTEveSceneList.html,1,['inherit'],['inherited']
Modifiability,"{ return -1; }; 103 Double_t GetmuTransform ( TTree *) { return -1; }; 104 Double_t GetEfficiency ( const TString&, Types::ETreeType, Double_t& );; 105 Double_t GetTrainingEfficiency(const TString& );; 106 ; 107 // rarity distributions (signal or background (default) is uniform in [0,1]); 108 Double_t GetRarity( Double_t, Types::ESBType ) const { return 0; }; 109 ; 110 // accessors for Minuit; 111 Double_t ComputeEstimator( std::vector<Double_t> & );; 112 ; 113 Double_t EstimatorFunction( std::vector<Double_t> & );; 114 Double_t EstimatorFunction( Int_t ievt1, Int_t ievt2 );; 115 ; 116 void SetTestSignalEfficiency( Double_t effS ) { fTestSignalEff = effS; }; 117 ; 118 // retrieve cut values for given signal efficiency; 119 void PrintCuts( Double_t effS ) const;; 120 Double_t GetCuts ( Double_t effS, std::vector<Double_t>& cutMin, std::vector<Double_t>& cutMax ) const;; 121 Double_t GetCuts ( Double_t effS, Double_t* cutMin, Double_t* cutMax ) const;; 122 ; 123 // ranking of input variables (not available for cuts); 124 const Ranking* CreateRanking() { return nullptr; }; 125 ; 126 void DeclareOptions();; 127 void ProcessOptions();; 128 ; 129 // maximum |cut| value; 130 static const Double_t fgMaxAbsCutVal;; 131 ; 132 // no check of options at this place; 133 void CheckSetup() {}; 134 ; 135 protected:; 136 ; 137 // make ROOT-independent C++ class for classifier response (classifier-specific implementation); 138 void MakeClassSpecific( std::ostream&, const TString& ) const;; 139 ; 140 // get help message text; 141 void GetHelpMessage() const;; 142 ; 143 private:; 144 ; 145 // optimisation method; 146 enum EFitMethodType { kUseMonteCarlo = 0,; 147 kUseGeneticAlgorithm,; 148 kUseSimulatedAnnealing,; 149 kUseMinuit,; 150 kUseEventScan,; 151 kUseMonteCarloEvents };; 152 ; 153 // efficiency calculation method; 154 // - kUseEventSelection: computes efficiencies from given data sample; 155 // - kUsePDFs : creates smoothed PDFs from data samples, and; 156 // uses this to compu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:4745,variab,variables,4745,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,1,['variab'],['variables']
Modifiability,"{ return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance mat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:8610,variab,variable,8610,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,10,['variab'],"['variable', 'variables']"
Modifiability,"{""atan"",""vecCore::math::ATan""},; 980 {""atan2"",""vecCore::math::ATan2""}, {""sqrt"",""vecCore::math::Sqrt""},; 981 {""ceil"",""vecCore::math::Ceil""}, {""floor"",""vecCore::math::Floor""}, {""pow"",""vecCore::math::Pow""},; 982 {""cbrt"",""vecCore::math::Cbrt""},{""abs"",""vecCore::math::Abs""},; 983 {""min"",""vecCore::math::Min""},{""max"",""vecCore::math::Max""},{""sign"",""vecCore::math::Sign"" }; 984 //{""sq"",""TMath::Sq""}, {""binomial"",""TMath::Binomial""} // this last two functions will not work in vectorized mode; 985 };; 986 // replace in the data member maps fFunctionsShortcuts; 987 for (auto fun : vecFunShortcuts) {; 988 fFunctionsShortcuts[fun.first] = fun.second;; 989 }; 990#endif; 991 // do nothing in case Veccore is not enabled; 992}; 993 ; 994 ; 995////////////////////////////////////////////////////////////////////////////////; 996/// Handling polN; 997/// If before 'pol' exist any name, this name will be treated as variable used in polynomial; 998/// eg.; 999/// varpol2(5) will be replaced with: [5] + [6]*var + [7]*var^2; 1000/// Empty name is treated like variable x.; 1001 ; 1002void TFormula::HandlePolN(TString &formula); 1003{; 1004 Int_t polPos = formula.Index(""pol"");; 1005 while (polPos != kNPOS && !IsAParameterName(formula, polPos)) {; 1006 ; 1007 Bool_t defaultVariable = false;; 1008 TString variable;; 1009 Int_t openingBracketPos = formula.Index('(', polPos);; 1010 Bool_t defaultCounter = openingBracketPos == kNPOS;; 1011 Bool_t defaultDegree = true;; 1012 Int_t degree, counter;; 1013 TString sdegree;; 1014 if (!defaultCounter) {; 1015 // verify first of opening parenthesis belongs to pol expression; 1016 // character between 'pol' and '(' must all be digits; 1017 sdegree = formula(polPos + 3, openingBracketPos - polPos - 3);; 1018 if (!sdegree.IsDigit()); 1019 defaultCounter = true;; 1020 }; 1021 if (!defaultCounter) {; 1022 degree = sdegree.Atoi();; 1023 counter = TString(formula(openingBracketPos + 1, formula.Index(')', polPos) - openingBracketPos)).Atoi();; 1024 } else {; 1025 In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:36742,variab,variable,36742,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"{(S(x) + B(x))} dx; \]. where \( S(x) \) and \( B(x) \) are the signal and background distributions, respectively. The separation is zero for identical signal and background MVA shapes, and it is one for disjunctive shapes.; The average, \( \int x \mu (S(x)) dx \), of the signal \( \mu_{transform} \). The \( \mu_{transform} \) of an MVA denotes the transformation that yields a uniform background distribution. In this way, the signal distributions \( S(x) \) can be directly compared among the various MVAs. The stronger \( S(x) \) peaks towards one, the better is the discrimination of the MVA. The \( \mu_{transform} \) is documented here.; The MVA standard output also prints the linear correlation coefficients between signal and background, which can be useful to eliminate variables that exhibit too strong correlations. . Definition at line 111 of file MethodBase.h. Public Types; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBase.html:2151,inherit,inherited,2151,doc/master/classTMVA_1_1MethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBase.html,1,['inherit'],['inherited']
Modifiability,"{0};  width along x of TPaveLabels in per cent of pad ;  ; TList ** fLinks {nullptr};  ![fNclasses] for each class, the list of referenced(ing) classes ;  ; Int_t fNclasses {0};  current number of classes ;  ; Int_t * fNdata {nullptr};  [fNclasses] Number of data members per class ;  ; std::vector< Int_t > fNsons;  ! internal variable, used during painting ;  ; std::vector< Int_t > fNtsons;  ! internal variable, used during painting ;  ; TString ** fOptions {nullptr};  ![fNclasses] List of options per class ;  ; Int_t * fParents {nullptr};  [fNclasses] parent number of classes (permanent) ;  ; Int_t fShowCod {0};  if 1 show classes referenced by implementation ;  ; Int_t fShowHas {0};  if 1 show ""has a"" relationship ;  ; Int_t fShowMul {0};  if 1 show multiple inheritance ;  ; Int_t fShowRef {0};  if 1 show classes relationship other than inheritance ;  ; TString fSourceDir;  Concatenated source directories. ;  ; Float_t fYoffset {0};  offset at top of picture in per cent of pad ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TClassTree.h>. Inheritance diagram for TClassTree:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTree.html:19307,inherit,inherited,19307,doc/master/classTClassTree.html,https://root.cern,https://root.cern/doc/master/classTClassTree.html,1,['inherit'],['inherited']
Modifiability,"{; 48 fNvar = 0;; 49 fArgs = nullptr;; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Create an Ntuple.; 54///; 55/// The parameter varlist describes the list of the ntuple variables; 56/// separated by a colon:; 57///; 58/// Example: `x:y:z:energy`; 59///; 60/// For each variable in the list a separate branch is created.; 61///; 62/// NOTE:; 63/// - Use TTree to create branches with variables of different data types.; 64/// - Use TTree when the number of branches is large (> 100).; 65 ; 66TNtuple::TNtuple(const char *name, const char *title, const char *varlist, Int_t bufsize); 67 :TTree(name,title); 68{; 69 Int_t i;; 70 fNvar = 0;; 71 fArgs = nullptr;; 72 ; 73// Count number of variables (separated by :); 74 Int_t nch = strlen(varlist);; 75 if (nch == 0) return;; 76 char *vars = new char[nch+1];; 77 strlcpy(vars,varlist,nch+1);; 78 Int_t *pvars = new Int_t[nch+1];; 79 fNvar = 1;; 80 pvars[0] = 0;; 81 for (i=1;i<nch;i++) {; 82 if (vars[i] == ':') {; 83 pvars[fNvar] = i+1;; 84 vars[i] = 0;; 85 fNvar++;; 86 }; 87 }; 88 fArgs = new Float_t[fNvar];; 89 ; 90// Create one branch for each variable; 91 for (i=0;i<fNvar;i++) {; 92 Int_t pv = pvars[i];; 93 TTree::Branch(&vars[pv],&fArgs[i],&vars[pv],bufsize);; 94 }; 95 ; 96 delete [] vars;; 97 delete [] pvars;; 98}; 99 ; 100////////////////////////////////////////////////////////////////////////////////; 101/// Default destructor for an Ntuple.; 102 ; 103TNtuple::~TNtuple(); 104{; 105 delete [] fArgs;; 106 fArgs = nullptr;; 107}; 108 ; 109////////////////////////////////////////////////////////////////////////////////; 110/// Create a clone of this tree and copy nentries.; 111///; 112/// By default copy all entries.; 113/// Note that only active branches are copied.; 114/// The compression level of the cloned tree is set to the destination file's; 115/// compression level.; 116///; 117/// See TTree::CloneTree for more details.; 118 ; 119TTree* TNtuple::CloneTree(Long64_t n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:2129,variab,variables,2129,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"{; ROOT::RDataFrame d(10000);; int i(0);; d.Define(""b1"", [&i]() { return i; }); .Define(""b2"",; [&i]() {; float j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; int df007_snapshot(); {; // We prepare an input tree to run on; auto fileName = ""df007_snapshot.root"";; auto outFileName = ""df007_snapshot_output.root"";; auto outFileNameAllColumns = ""df007_snapshot_output_allColumns.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame; ROOT::RDataFrame d(treeName, fileName);; ; // ## Select entries; // We now select some entries in the dataset; auto d_cut = d.Filter(""b1 % 2 == 0"");; // ## Enrich the dataset; // Build some temporary columns: we'll write them out; auto d2 = d_cut.Define(""b1_square"", ""b1 * b1""); .Define(""b2_vector"",; [](float b2) {; std::vector<float> v;; for (int i = 0; i < 3; i++); v.push_back(b2 * i);; return v;; },; {""b2""});; ; // ## Write it to disk in ROOT format; // We now write to disk a new dataset with one of the variables originally; // present in the tree and the new variables.; // The user can explicitly specify the types of the columns as template; // arguments of the Snapshot method, otherwise they will be automatically; // inferred.; d2.Snapshot(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector""});; ; // Open the new file and list the columns of the tree; TFile f1(outFileName);; auto t = f1.Get<TTree>(treeName);; std::cout << ""These are the columns b1, b1_square and b2_vector:"" << std::endl;; for (auto branch : *t->GetListOfBranches()) {; std::cout << ""Branch: "" << branch->GetName() << std::endl;; }; f1.Close();; ; // We are not forced to write the full set of column names. We can also; // specify a regular expression for that. In case nothing is specified, all; // columns are persistified.; d2.Snapshot(treeName, outFileNameAllColumns);; ; // Open the new file and list the columns of the tree; TFile f2(outFileNameAllColumns);; t = f2.Get<TTree>(tree",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df007__snapshot_8C.html:1531,variab,variables,1531,doc/master/df007__snapshot_8C.html,https://root.cern,https://root.cern/doc/master/df007__snapshot_8C.html,2,['variab'],['variables']
Modifiability,"{; for (Int_t i1; i1 < min(3,2); i1++) {; use the value of (fMatrix[i0][i1] - fMatrix[i0][i1]); }; }. Retrieving the result of Draw. By default the temporary histogram created is called ""htemp"", but only in; the one dimensional Draw(""e1"") it contains the TTree's data points. For; a two dimensional Draw, the data is filled into a TGraph which is named; ""Graph"". They can be retrieved by calling; TH1F *htemp = (TH1F*)gPad->GetPrimitive(""htemp""); // 1D; TGraph *graph = (TGraph*)gPad->GetPrimitive(""Graph""); // 2D. For a three and four dimensional Draw the TPloyMarker3D is unnamed, and; cannot be retrieved. gPad always contains a TH1 derived object called ""htemp"" which allows to; access the axes:; TGraph *graph = (TGraph*)gPad->GetPrimitive(""Graph""); // 2D; TH2F *htemp = (TH2F*)gPad->GetPrimitive(""htemp""); // empty, but has axes; TAxis *xaxis = htemp->GetXaxis();. Saving the result of Draw to an histogram. If varexp0 contains >>hnew (following the variable(s) name(s),; the new histogram created is called hnew and it is kept in the current; directory (and also the current pad). This works for all dimensions.; Example:; tree.Draw(""sqrt(x)>>hsqrt"",""y>0""); will draw sqrt(x) and save the histogram as ""hsqrt"" in the current; directory. To retrieve it do:; TH1F *hsqrt = (TH1F*)gDirectory->Get(""hsqrt"");. The binning information is taken from the environment variables. Hist.Binning.?D.?. In addition, the name of the histogram can be followed by up to 9; numbers between '(' and ')', where the numbers describe the; following:. 1 - bins in x-direction; 2 - lower limit in x-direction; 3 - upper limit in x-direction; 4-6 same for y-direction; 7-9 same for z-direction. When a new binning is used the new value will become the default.; Values can be skipped.; Example:; tree.Draw(""sqrt(x)>>hsqrt(500,10,20)""); // plot sqrt(x) between 10 and 20 using 500 bins; tree.Draw(""sqrt(x):sin(y)>>hsqrt(100,10,60,50,.1,.5)""); // plot sqrt(x) against sin(y); // 100 bins in x-direction; lower limit on x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:68876,variab,variable,68876,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,1,['variab'],['variable']
Modifiability,"{kTRUE};  Deny-destroy count. ;  ; Char_t fDestructing {kNone};  ; Short_t fImpliedSelected {0};  ; Color_t * fMainColorPtr {nullptr};  ; std::unique_ptr< REveTrans > fMainTrans;  ; Char_t fMainTransparency {0};  ; REveElement * fMother {nullptr};  ; std::string fName;  ; Bool_t fPickable {false};  ; std::unique_ptr< REveRenderData > fRenderData;  Externally assigned and controlled user data. ;  ; Bool_t fRnrChildren {kTRUE};  ; Bool_t fRnrSelf {kTRUE};  ; REveScene * fScene {nullptr};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from ROOT::Experimental::REveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Private Member Functions;  REveTrackList (const REveTrackList &)=delete;  ; REveTrackList & operator= (const REveTrackList &)=delete;  . Additional Inherited Members;  Public Types inherited from ROOT::Experimental::REveElement; typedef std::list< REveAunt * > AuntList_t;  ; enum  EChangeBits { ;   kCBColorSelection = BIT(0); , kCBTransBBox = BIT(1); , kCBObjProps = BIT(2); , kCBVisibility = BIT(3); , ;   kCBElementAdded = BIT(4). };  ; typedef std::list< REveElement * > List_t;  ; typedef std::set< REveElement * > Set_t;  ;  Public Types inherited from ROOT::Experimental::REveProjectable; typedef std::list< REveProjected * > ProjList_t;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrackList.html:22144,inherit,inherited,22144,doc/master/classROOT_1_1Experimental_1_1REveTrackList.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrackList.html,1,['inherit'],['inherited']
Modifiability,"{});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with give",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:16309,config,configuration,16309,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['config'],['configuration']
Modifiability,"| (nc == NULL) || (cnonce == NULL); 8243 || (qop == NULL) || (response == NULL)) {; 8244 return 0;; 8245 }; 8246 ; 8247 /* NOTE(lsm): due to a bug in MSIE, we do not compare the URI */; 8248 if (strlen(response) != 32) {; 8249 return 0;; 8250 }; 8251 ; 8252 mg_md5(ha2, method, "":"", uri, NULL);; 8253 mg_md5(expected_response,; 8254 ha1,; 8255 "":"",; 8256 nonce,; 8257 "":"",; 8258 nc,; 8259 "":"",; 8260 cnonce,; 8261 "":"",; 8262 qop,; 8263 "":"",; 8264 ha2,; 8265 NULL);; 8266 ; 8267 return mg_strcasecmp(response, expected_response) == 0;; 8268}; 8269 ; 8270 ; 8271#if !defined(NO_FILESYSTEMS); 8272/* Use the global passwords file, if specified by auth_gpass option,; 8273 * or search for .htpasswd in the requested directory. */; 8274static void; 8275open_auth_file(struct mg_connection *conn,; 8276 const char *path,; 8277 struct mg_file *filep); 8278{; 8279 if ((conn != NULL) && (conn->dom_ctx != NULL)) {; 8280 char name[UTF8_PATH_MAX];; 8281 const char *p, *e,; 8282 *gpass = conn->dom_ctx->config[GLOBAL_PASSWORDS_FILE];; 8283 int truncated;; 8284 ; 8285 if (gpass != NULL) {; 8286 /* Use global passwords file */; 8287 if (!mg_fopen(conn, gpass, MG_FOPEN_MODE_READ, filep)) {; 8288#if defined(DEBUG); 8289 /* Use mg_cry_internal here, since gpass has been; 8290 * configured. */; 8291 mg_cry_internal(conn, ""fopen(%s): %s"", gpass, strerror(ERRNO));; 8292#endif; 8293 }; 8294 /* Important: using local struct mg_file to test path for; 8295 * is_directory flag. If filep is used, mg_stat() makes it; 8296 * appear as if auth file was opened.; 8297 * TODO(mid): Check if this is still required after rewriting; 8298 * mg_stat */; 8299 } else if (mg_stat(conn, path, &filep->stat); 8300 && filep->stat.is_directory) {; 8301 mg_snprintf(conn,; 8302 &truncated,; 8303 name,; 8304 sizeof(name),; 8305 ""%s/%s"",; 8306 path,; 8307 PASSWORDS_FILE_NAME);; 8308 ; 8309 if (truncated || !mg_fopen(conn, name, MG_FOPEN_MODE_READ, filep)) {; 8310#if defined(DEBUG); 8311 /* Don't use mg_cry_internal here, but onl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:238893,config,config,238893,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['config'],"['config', 'configured']"
Modifiability,"| (nc == NULL) || (cnonce == NULL); 8244 || (qop == NULL) || (response == NULL)) {; 8245 return 0;; 8246 }; 8247 ; 8248 /* NOTE(lsm): due to a bug in MSIE, we do not compare the URI */; 8249 if (strlen(response) != 32) {; 8250 return 0;; 8251 }; 8252 ; 8253 mg_md5(ha2, method, "":"", uri, NULL);; 8254 mg_md5(expected_response,; 8255 ha1,; 8256 "":"",; 8257 nonce,; 8258 "":"",; 8259 nc,; 8260 "":"",; 8261 cnonce,; 8262 "":"",; 8263 qop,; 8264 "":"",; 8265 ha2,; 8266 NULL);; 8267 ; 8268 return mg_strcasecmp(response, expected_response) == 0;; 8269}; 8270 ; 8271 ; 8272#if !defined(NO_FILESYSTEMS); 8273/* Use the global passwords file, if specified by auth_gpass option,; 8274 * or search for .htpasswd in the requested directory. */; 8275static void; 8276open_auth_file(struct mg_connection *conn,; 8277 const char *path,; 8278 struct mg_file *filep); 8279{; 8280 if ((conn != NULL) && (conn->dom_ctx != NULL)) {; 8281 char name[UTF8_PATH_MAX];; 8282 const char *p, *e,; 8283 *gpass = conn->dom_ctx->config[GLOBAL_PASSWORDS_FILE];; 8284 int truncated;; 8285 ; 8286 if (gpass != NULL) {; 8287 /* Use global passwords file */; 8288 if (!mg_fopen(conn, gpass, MG_FOPEN_MODE_READ, filep)) {; 8289#if defined(DEBUG); 8290 /* Use mg_cry_internal here, since gpass has been; 8291 * configured. */; 8292 mg_cry_internal(conn, ""fopen(%s): %s"", gpass, strerror(ERRNO));; 8293#endif; 8294 }; 8295 /* Important: using local struct mg_file to test path for; 8296 * is_directory flag. If filep is used, mg_stat() makes it; 8297 * appear as if auth file was opened.; 8298 * TODO(mid): Check if this is still required after rewriting; 8299 * mg_stat */; 8300 } else if (mg_stat(conn, path, &filep->stat); 8301 && filep->stat.is_directory) {; 8302 mg_snprintf(conn,; 8303 &truncated,; 8304 name,; 8305 sizeof(name),; 8306 ""%s/%s"",; 8307 path,; 8308 PASSWORDS_FILE_NAME);; 8309 ; 8310 if (truncated || !mg_fopen(conn, name, MG_FOPEN_MODE_READ, filep)) {; 8311#if defined(DEBUG); 8312 /* Don't use mg_cry_internal here, but onl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:238925,config,config,238925,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],"['config', 'configured']"
Modifiability,"|10,LINEAR"");; 151 TString trainingStrategyString(""TrainingStrategy=Optimizer=ADAM,LearningRate=1e-3,""; 152 ""TestRepetitions=1,ConvergenceSteps=10,BatchSize=100,MaxEpochs=20"");; 153 TString nnOptions(""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=N:""; 154 ""WeightInitialization=XAVIERUNIFORM:Architecture=GPU"");; 155 nnOptions.Append("":"");; 156 nnOptions.Append(layoutString);; 157 nnOptions.Append("":"");; 158 nnOptions.Append(trainingStrategyString);; 159 factory->BookMethod(dataloader, TMVA::Types::kDL, ""DL_GPU"", nnOptions);; 160 }; 161 ; 162 ; 163 // Train MVAs using the set of training events; 164 factory->TrainAllMethods();; 165 ; 166 // Evaluate all MVAs using the set of test events; 167 factory->TestAllMethods();; 168 ; 169 // Evaluate and compare performance of all configured MVAs; 170 factory->EvaluateAllMethods();; 171 ; 172 // --------------------------------------------------------------; 173 ; 174 // Save the output; 175 outputFile->Close();; 176 ; 177 std::cout << ""==> Wrote root file: "" << outputFile->GetName() << std::endl;; 178 std::cout << ""==> TMVAMulticlass is done!"" << std::endl;; 179 ; 180 delete factory;; 181 delete dataloader;; 182 ; 183 // Launch the GUI for the root macros; 184 if (!gROOT->IsBatch()) TMVAMultiClassGui( outfileName );; 185 ; 186 ; 187}; 188 ; 189int main( int argc, char** argv ); 190{; 191 // Select methods (don't look at this code - not of interest); 192 TString methodList;; 193 for (int i=1; i<argc; i++) {; 194 TString regMethod(argv[i]);; 195 if(regMethod==""-b"" || regMethod==""--batch"") continue;; 196 if (!methodList.IsNull()) methodList += TString("","");; 197 methodList += regMethod;; 198 }; 199 TMVAMulticlass(methodList);; 200 return 0;; 201}; 202 ; DataLoader.h; mainint main()Definition Prototype.cxx:12; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; TFile.h; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C_source.html:6882,config,configured,6882,doc/master/TMVAMulticlass_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C_source.html,1,['config'],['configured']
Modifiability,"|; Protected Attributes |; List of all members ; TASPaletteEditor Class ReferenceGraphics » 2D Graphics » libAfterImage interface. ; This is a GUI window to edit a color palette. ; It is called by a pull down menu item of TASImage. ; Definition at line 39 of file TASPaletteEditor.h. Classes; class  LimitLine;  ; class  PaintPalette;  . Public Member Functions;  TASPaletteEditor (TAttImage *attImage, UInt_t w, UInt_t h);  Palette editor constructor. ;  ;  ~TASPaletteEditor () override;  Palette editor destructor. Deletes all frames and their layout hints. ;  ; void CloseWindow () override;  Close editor. ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t param1, Longptr_t param2) override;  Process all editor mouse events. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateRange ();  Updates the range of the palette. ;  ;  Public Member Functions inherited from TPaletteEditor;  TPaletteEditor (TAttImage *attImage, UInt_t w, UInt_t h);  Constructor. ;  ; virtual ~TPaletteEditor ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPaletteEditor.html:1209,inherit,inherited,1209,doc/master/classTASPaletteEditor.html,https://root.cern,https://root.cern/doc/master/classTASPaletteEditor.html,1,['inherit'],['inherited']
Modifiability,"|; Protected Attributes |; List of all members ; TLine Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Use the TLine constructor to create a simple line. ; TLine(Double_t x1,Double_t y1,Double_t x2,Double_t y2); x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; y2Option_t Option_t TPoint TPoint const char y2Definition TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; TLine::TLineTLine()Definition TLine.h:38; double; x1, y1, x2, y2 are the coordinates of the first and the second point.; Example:; root[] l = new TLine(0.2,0.2,0.8,0.3); root[] l->Draw(); Drawth1 Draw(); lTLine lDefinition textangle.C:4. Definition at line 22 of file TLine.h. Public Types; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TLine ();  ;  TLine (const TLine &line);  Line copy constructor. ;  ;  TLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Line normal constructor. ;  ;  ~TLine () override=default;  ; void Copy (TObject &line) const override;  Copy this line to line. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine.html:1193,inherit,inherited,1193,doc/master/classTLine.html,https://root.cern,https://root.cern/doc/master/classTLine.html,1,['inherit'],['inherited']
Modifiability,"|; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RFrame Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Holds an area where drawing on user coordinate-system can be performed. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-09-26 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 38 of file RFrame.hxx. Classes; class  RUserRanges;  ; class  RZoomRequest;  . Public Member Functions;  RFrame (TRootIOCtor *);  ; void GetClientRanges (unsigned connid, RUserRanges &ranges);  Return ranges configured for the client. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const char *csstype);  ; virtual ~RDrawable ();  ; void ClearStyle ();  ; const std::string & GetCssClass () const;  ; const char * GetCssType () const;  ; const std::string & GetId () const;  ; void SetCssClass (const std::string &cl);  ; void SetId (const std::string &id);  ; virtual void UseStyle (const std::shared_ptr< RStyle > &style);  . Public Attributes; RAttrBorder border {this, ""border""};  ! frame border attributes ;  ; RAttrValue< bool > drawAxes {this, ""drawAxes"", false};  ! draw axes by frame ;  ; RAttrFill fill {this, ""fill""};  ! frame fill attributes ;  ; RAttrValue< bool > gridX {this, ""gridX"", false};  ! show grid for X axis ;  ; RAttrValue< bool > gridY {this, ""gridY"", false};  ! show grid for Y axis ;  ; RAttrMargins margins {this, ""margins""};  ! frame margins relative to pad ;  ; RAttrValue< bool > swapX {this, ""swapX"", false};  ! swap position of X axis ;  ; RAttrValue< bool > swapY {this, ""swapY"", false};  ! swap position of Y axis ;  ; RAttrValue< int > ticksX {this, ""ticksX"", 1};  ! X ticks drawing: 0 - off, 1 - normal, 2 - both sides, 3 - both sides with labels ;  ; RAttrValue< int > ti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFrame.html:1026,inherit,inherited,1026,doc/master/classROOT_1_1Experimental_1_1RFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFrame.html,1,['inherit'],['inherited']
Modifiability,"|; Public Member Functions |; Static Public Member Functions |; List of all members ; TThreadImp Class Referenceabstract. . Definition at line 31 of file TThreadImp.h. Public Member Functions;  TThreadImp ();  ; virtual ~TThreadImp ();  ; virtual Int_t CancelPoint ()=0;  ; virtual Int_t CleanUp (void **main)=0;  ; virtual Int_t CleanUpPop (void **main, Int_t exe)=0;  ; virtual Int_t CleanUpPush (void **main, void *free, void *arg)=0;  ; virtual Int_t Exit (void *ret)=0;  ; TClass * IsA () const override;  ; virtual Int_t Join (TThread *th, void **ret)=0;  ; virtual Int_t Kill (TThread *th)=0;  ; virtual Int_t Run (TThread *th, const int affinity=-1)=0;  ; virtual Long_t SelfId ()=0;  ; virtual Int_t SetCancelAsynchronous ()=0;  ; virtual Int_t SetCancelDeferred ()=0;  ; virtual Int_t SetCancelOff ()=0;  ; virtual Int_t SetCancelOn ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadImp.html:1156,inherit,inherited,1156,doc/master/classTThreadImp.html,https://root.cern,https://root.cern/doc/master/classTThreadImp.html,1,['inherit'],['inherited']
Modifiability,"|; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TASPluginGS Class ReferenceGraphics » 2D Graphics » libAfterImage interface. ; Allows to read PS/EPS/PDF files via GhostScript. ; Definition at line 25 of file TASPluginGS.h. Public Member Functions;  TASPluginGS (const char *ext);  ctor ;  ;  ~TASPluginGS () override;  dtor ;  ; ASImage * File2ASImage (const char *filename) override;  read PS/EPS/PDF file and convert it to ASImage ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TASImagePlugin;  TASImagePlugin (const char *ext);  ;  ~TASImagePlugin () override;  ; virtual Bool_t ASImage2File (ASImage *);  ; unsigned char * ReadFile (const char *, UInt_t &, UInt_t &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WriteFile (const char *, unsigned char *, UInt_t, UInt_t) override;  ;  Public Member Functions inherited from TImagePlugin;  TImagePlugin (const char *ext);  ;  ~TImagePlugin () override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPluginGS.html:911,inherit,inherited,911,doc/master/classTASPluginGS.html,https://root.cern,https://root.cern/doc/master/classTASPluginGS.html,2,['inherit'],['inherited']
Modifiability,"|; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TH2 Class Reference. ; Service class for 2-D histogram classes. . TH2C a 2-D histogram with one byte per cell (char). Maximum bin content = 127; TH2S a 2-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; TH2I a 2-D histogram with four bytes per cell (32 bit integer). Maximum bin content = INT_MAX (*); TH2L a 2-D histogram with eight bytes per cell (64 bit integer). Maximum bin content = LLONG_MAX (**); TH2F a 2-D histogram with four bytes per cell (float). Maximum precision 7 digits, maximum integer bin content = +/-16777216 (***); TH2D a 2-D histogram with eight bytes per cell (double). Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (****). (*) INT_MAX = 2147483647 is the maximum value for a variable of type int.; (**) LLONG_MAX = 9223372036854775807 is the maximum value for a variable of type long64.; (***) 2^24 = 16777216 is the maximum integer that can be properly represented by a float32 with 23-bit mantissa.; (****) 2^53 = 9007199254740992 is the maximum integer that can be properly represented by a double64 with 52-bit mantissa. ; Definition at line 30 of file TH2.h. Public Member Functions;  ~TH2 () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w. ;  ; virtual void AddBinContent (Int_t binx, Int_t biny);  Increment 2D bin content by 1. ;  ; virtual void AddBinContent (Int_t binx, Int_t biny, Double_t w);  Increment 2D bin content by a weight w. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:1151,variab,variable,1151,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability,"|; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveVSD Class Reference. . Definition at line 25 of file REveVSD.hxx. Public Member Functions;  REveVSD (const char *name=""REveVSD"", const char *title="""");  Constructor. ;  ;  ~REveVSD () override;  Destructor. ;  ;  ClassDefOverride (REveVSD, 1);  ; virtual void CreateBranches ();  Create internal VSD branches. ;  ; virtual void CreateTrees ();  Create internal trees. ;  ; virtual void DeleteTrees ();  Delete internal trees. ;  ; virtual void LoadTrees ();  Load internal trees from directory. ;  ; virtual void SetBranchAddresses ();  Set branche addresses of internal trees. ;  ; virtual void SetDirectory (TDirectory *dir);  Set directory in which the trees are (or will be) created. ;  ; virtual void WriteTrees ();  Does nothing here ... reimplemented in sub-classes. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveVSD.html:1141,inherit,inherited,1141,doc/master/classROOT_1_1Experimental_1_1REveVSD.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveVSD.html,1,['inherit'],['inherited']
Modifiability,"} \); Since the weights are constants in the likelihood we can use \(\log{N_\mathrm{expect}}\) instead of \(\log{W_\mathrm{expect}}\).; See also RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset), which takes a dataset to extract \(N_\mathrm{observed}\) and the normalization set. ; Definition at line 725 of file RooAbsPdf.cxx. ◆ extendedTerm() [3/3]. double RooAbsPdf::extendedTerm ; (; RooAbsData const & ; data, . bool ; weightSquared, . bool ; doOffset = false . ); const. Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ; This function is a wrapper around RooAbsPdf::extendedTerm(double, RooArgSet const *, double, bool) const, where the number of observed events and observables to be used as the normalization set for the pdf is extracted from a RooAbsData.; For successful operation, the PDF implementation must indicate that it is extendable by overloading canBeExtended(), and must implement the expectedEvents() function.; Parameters. [in]dataThe RooAbsData to retrieve the set of observables and number of expected events. ; [in]weightSquaredIf set to true, the extended term will be scaled by the ratio of squared event weights over event weights: \( \sum w_{i}^2 / \sum w_{i} \). Intended to be used by fits with the SumW2Error() option that can be passed to RooAbsPdf::fitTo() (see the documentation of said function to learn more about the interpretation of fits with squared weights). ; [in]doOffsetSee RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const. . Definition at line 793 of file RooAbsPdf.cxx. ◆ extendMode(). virtual ExtendMode RooAbsPdf::extendMode ; (; ); const. inlinevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented in RooAddModel, Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:102609,extend,extendable,102609,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['extend'],['extendable']
Modifiability,"} else {; 1164 ; 1165 TClass *oldClass = config->fOldClass;; 1166 ; 1167 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1168 if (!oldProxy) {; 1169 // Missing information, broken file ... give up; 1170 return;; 1171 }; 1172 ; 1173 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)addr );; 1174 Int_t nobjects;; 1175 buf.ReadInt(nobjects);; 1176 void* env = oldProxy->Allocate(nobjects,true);; 1177 ; 1178 if (nobjects || vers < 7 ) {; 1179 // coverity[dereference] since this is a member streaming action by definition the collection contains objects.; 1180 TStreamerInfo *subinfo = (TStreamerInfo*)oldProxy->GetValueClass()->GetStreamerInfo( 0 );; 1181 ; 1182 subinfo->ReadBufferSTL(buf, oldProxy, nobjects, /* offset */ 0, /* v7 */ kFALSE);; 1183 }; 1184 oldProxy->Commit(env);; 1185 }; 1186 }; 1187 ; 1188 INLINE_TEMPLATE_ARGS void ReadArraySTLMemberWiseSameClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers); 1189 {; 1190 // Collection was saved member-wise; 1191 ; 1192 TConfigSTL *config = (TConfigSTL*)conf;; 1193 vers &= ~( TBufferFile::kStreamedMemberWise );; 1194 ; 1195 if( vers >= 8 ) {; 1196 ; 1197 TClass *oldClass = config->fOldClass;; 1198 ; 1199 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1200 if (!oldProxy) {; 1201 // Missing information, broken file ... give up; 1202 return;; 1203 }; 1204 TClass *valueClass = oldProxy->GetValueClass();; 1205 Version_t vClVersion = buf.ReadVersionForMemberWise( valueClass );; 1206 ; 1207 TActionSequence *actions = oldProxy->GetReadMemberWiseActions( vClVersion );; 1208 ; 1209 int objectSize = oldClass->Size();; 1210 char *obj = (char*)addr;; 1211 char *endobj = obj + conf->fLength*objectSize;; 1212 ; 1213 for(; obj<endobj; obj+=objectSize) {; 1214 Int_t nobjects;; 1215 buf.ReadInt(nobjects);; 1216 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)obj );; 1217 void* alternative = oldProxy->Allocate(nobj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:49400,config,config,49400,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"}""); hcorr.GetXaxis().SetBinLabel(3, ""c_{HDD}""); hcorr.GetXaxis().SetBinLabel(2, ""c_{Hl^{(3)}}""); hcorr.GetXaxis().SetBinLabel(1, ""c_{Hq^{(3)}}""); hcorr.GetYaxis().SetTitleOffset(1.4); hcorr.Draw(""colz text""); ; c1.SaveAs(""rf712_lagrangianmorphfit.png""); [#0] PROGRESS:InputArguments -- initializing physics inputs from file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials/roofit/input_histos_rf_lagrangianmorph.root with object name(s) 'pTV'; [#0] PROGRESS:Caching -- creating cache from getCache function for 0x85555e0; [#0] PROGRESS:Caching -- current storage has size 10; [#0] PROGRESS:ObjectHandling -- observable: pTV; [#0] PROGRESS:ObjectHandling -- binWidth: binWidth_pTV; [#1] INFO:DataHandling -- RooDataHist::adjustBinning(pseudo_dh): fit range of variable pTV expanded to nearest bin boundaries: [10,600] --> [0,600]; [#0] PROGRESS:Caching -- creating cache from getCache function for 0x915c650; [#0] PROGRESS:Caching -- current storage has size 10; [#0] PROGRESS:ObjectHandling -- observable: pTV; [#0] PROGRESS:ObjectHandling -- binWidth: binWidth_pTV; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(wrap_pdf_over_wrap_pdf_Int[pTV]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_wrap_pdf_over_wrap_pdf_Int[pTV]_pseudo_dh) Summation contains a RooNLLVar, using its error level; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0 cHl3=0 cHq3=-0.0202918; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.0376648, denominator=wrap_pdf_Int[pTV]=10358.6; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.0376648, deno",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html:5363,variab,variable,5363,doc/master/rf712__lagrangianmorphfit_8py.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html,1,['variab'],['variable']
Modifiability,"}. double DoDerivative(double x) const; {; return -cos(x);; }. };; 13.7.2 Multi-dimensional Function Interfaces; The most generic case of a multidimensional function has similar approach. Some examples will be shown next. It is important to notice, that one dimensional functions can be also implemented through the interfaces that will be presented here. Nevertheless, the user needs to implement those following the indications of the previous chapter, for algorithm working exclusivly on one-dimensional functions. For algorithms working on both one-dimensional and multi-dimensional functions they should instead use this interface. ROOT::Math::IBaseFunctionMultiDim: This interface provides the double operator() (const double*) that takes an array of doubles with all the values for the different dimensions. In this case, the user has to provide the functionality for two different functions: double DoEval(const double*) and unsigned int NDim(). The first ones evaluates the function given the array that represents the multiple variables. The second returns the number of dimensions of the function.; Example of implementing a basic multi-dimensional function:. #include ""Math/IFunction.h"". class MyFunction: public ROOT::Math::IBaseFunctionMultiDim; {; public:; double DoEval(const double* x) const; {; return x[0] + sin(x[1]);; }. unsigned int NDim() const; {; return 2;; }. ROOT::Math::IBaseFunctionMultiDim* Clone() const; {; return new MyFunction();; }. };. ROOT::Math::IGradientFunctionMultiDim: This interface offers the same functionality as the base function plus the calculation of the derivative. It only adds the double Derivative(double* x, uint ivar) method for the user to implement. This method must implement the derivative of the function with respect to the variable indicated with the second parameter. Example of implementing a multi-dimensional gradient function; #include ""Math/IFunction.h"". class MyGradientFunction: public ROOT::Math::IGradientFunctionMultiDim; {; p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:689920,variab,variables,689920,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['variab'],['variables']
Modifiability,"}; 1289 return kTRUE;; 1290}; 1291 ; 1292////////////////////////////////////////////////////////////////////////////////; 1293/// Set parent in key buffer.; 1294 ; 1295void TKey::SetParent(const TObject *parent); 1296{; 1297 if (fBufferRef) fBufferRef->SetParent((TObject*)parent);; 1298}; 1299 ; 1300////////////////////////////////////////////////////////////////////////////////; 1301/// Reset the key as it had not been 'filled' yet.; 1302 ; 1303void TKey::Reset(); 1304{; 1305 fPidOffset = 0;; 1306 fNbytes = 0;; 1307 fBuffer = 0;; 1308 fObjlen = 0;; 1309 fCycle = 0;; 1310 fSeekPdir = 0;; 1311 fSeekKey = 0;; 1312 fLeft = 0;; 1313 fDatime = (UInt_t)0;; 1314 ; 1315 // fBufferRef and fKeylen intentionally not reset/changed; 1316 ; 1317 keyAbsNumber++; SetUniqueID(keyAbsNumber);; 1318}; 1319 ; 1320////////////////////////////////////////////////////////////////////////////////; 1321/// Return the size in bytes of the key header structure.; 1322///; 1323/// An explanation about the nbytes (Int_t nbytes) variable used in the; 1324/// function. The size of fSeekKey and fSeekPdir is 8 instead of 4 if version is; 1325/// greater than 1000.; 1326/// | Component | Sizeof |; 1327/// |-------------------|------------|; 1328/// | fNbytes | 4 |; 1329/// | sizeof(Version_t) | 2 |; 1330/// | fObjlen | 4 |; 1331/// | fDatime | 4 |; 1332/// | fKeylen | 2 |; 1333/// | fCycle | 2 |; 1334/// | fSeekKey | 4 or 8 |; 1335/// | fSeekPdir | 4 or 8 |; 1336/// | **FIXED TOTAL** | 26 or 34 |; 1337/// | fClassName | 1+ bytes |; 1338/// | fName | 1+ bytes |; 1339/// | fTitle | 1+ bytes |; 1340/// | **TOTAL** | 29+ or 37+ |; 1341 ; 1342Int_t TKey::Sizeof() const; 1343{; 1344 Int_t nbytes = 22; if (fVersion > 1000) nbytes += 8;; 1345 nbytes += fDatime.Sizeof();; 1346 if (TestBit(kIsDirectoryFile)) {; 1347 nbytes += 11; // strlen(""TDirectory"")+1; 1348 } else {; 1349 nbytes += fClassName.Sizeof();; 1350 }; 1351 nbytes += fName.Sizeof();; 1352 nbytes += fTitle.Sizeof();; 1353 return nbytes;; 1354}; 1355",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:46825,variab,variable,46825,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['variab'],['variable']
Modifiability,"}; 2647 return (TClass*)this;; 2648 }; 2649}; 2650 ; 2651////////////////////////////////////////////////////////////////////////////////; 2652/// Return pointer to the base class ""classname"". Returns 0 in case; 2653/// ""classname"" is not a base class. Takes care of multiple inheritance.; 2654 ; 2655TClass *TClass::GetBaseClass(const char *classname); 2656{; 2657 // check if class name itself is equal to classname; 2658 if (strcmp(GetName(), classname) == 0) return this;; 2659 ; 2660 if (!HasDataMemberInfo()) return nullptr;; 2661 ; 2662 // Make sure we deal with possible aliases, we could also have normalized; 2663 // the name.; 2664 TClass *search = TClass::GetClass(classname,kTRUE,kTRUE);; 2665 ; 2666 if (search) return GetBaseClass(search);; 2667 else return nullptr;; 2668}; 2669 ; 2670////////////////////////////////////////////////////////////////////////////////; 2671/// Return pointer to the base class ""cl"". Returns 0 in case ""cl""; 2672/// is not a base class. Takes care of multiple inheritance.; 2673 ; 2674TClass *TClass::GetBaseClass(const TClass *cl); 2675{; 2676 // check if class name itself is equal to classname; 2677 if (cl == this) return this;; 2678 ; 2679 if (!HasDataMemberInfo()) return nullptr;; 2680 ; 2681 TObjLink *lnk = GetListOfBases() ? fBase.load()->FirstLink() : nullptr;; 2682 ; 2683 // otherwise look at inheritance tree; 2684 while (lnk) {; 2685 TClass *c, *c1;; 2686 TBaseClass *base = (TBaseClass*) lnk->GetObject();; 2687 c = base->GetClassPointer();; 2688 if (c) {; 2689 if (cl == c) return c;; 2690 c1 = c->GetBaseClass(cl);; 2691 if (c1) return c1;; 2692 }; 2693 lnk = lnk->Next();; 2694 }; 2695 return nullptr;; 2696}; 2697 ; 2698////////////////////////////////////////////////////////////////////////////////; 2699/// Return data member offset to the base class ""cl"".; 2700/// - Returns -1 in case ""cl"" is not a base class.; 2701/// - Returns -2 if cl is a base class, but we can't find the offset; 2702/// because it's virtual.; 2703/// Take",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:100369,inherit,inheritance,100369,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"}; 2714 return (TClass*)this;; 2715 }; 2716}; 2717 ; 2718////////////////////////////////////////////////////////////////////////////////; 2719/// Return pointer to the base class ""classname"". Returns 0 in case; 2720/// ""classname"" is not a base class. Takes care of multiple inheritance.; 2721 ; 2722TClass *TClass::GetBaseClass(const char *classname); 2723{; 2724 // check if class name itself is equal to classname; 2725 if (strcmp(GetName(), classname) == 0) return this;; 2726 ; 2727 if (!HasDataMemberInfo()) return nullptr;; 2728 ; 2729 // Make sure we deal with possible aliases, we could also have normalized; 2730 // the name.; 2731 TClass *search = TClass::GetClass(classname,kTRUE,kTRUE);; 2732 ; 2733 if (search) return GetBaseClass(search);; 2734 else return nullptr;; 2735}; 2736 ; 2737////////////////////////////////////////////////////////////////////////////////; 2738/// Return pointer to the base class ""cl"". Returns 0 in case ""cl""; 2739/// is not a base class. Takes care of multiple inheritance.; 2740 ; 2741TClass *TClass::GetBaseClass(const TClass *cl); 2742{; 2743 // check if class name itself is equal to classname; 2744 if (cl == this) return this;; 2745 ; 2746 if (!HasDataMemberInfo()) return nullptr;; 2747 ; 2748 TObjLink *lnk = GetListOfBases() ? fBase.load()->FirstLink() : nullptr;; 2749 ; 2750 // otherwise look at inheritance tree; 2751 while (lnk) {; 2752 TClass *c, *c1;; 2753 TBaseClass *base = (TBaseClass*) lnk->GetObject();; 2754 c = base->GetClassPointer();; 2755 if (c) {; 2756 if (cl == c) return c;; 2757 c1 = c->GetBaseClass(cl);; 2758 if (c1) return c1;; 2759 }; 2760 lnk = lnk->Next();; 2761 }; 2762 return nullptr;; 2763}; 2764 ; 2765////////////////////////////////////////////////////////////////////////////////; 2766/// Return data member offset to the base class ""cl"".; 2767/// - Returns -1 in case ""cl"" is not a base class.; 2768/// - Returns -2 if cl is a base class, but we can't find the offset; 2769/// because it's virtual.; 2770/// Take",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:103120,inherit,inheritance,103120,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"};  ! array with TSQLClassColumnInfo, used later for TSQLClassInfo ;  ; TObjArray fColumns;  ! collection of columns ;  ; TSQLFile * fFile {nullptr};  ! ;  ; TSQLClassInfo * fInfo {nullptr};  ! ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSQLStructure.h>. Inheritance diagram for TSQLTableData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSQLTableData(). TSQLTableData::TSQLTableData ; (; TSQLFile * ; f = nullptr, . TSQLClassInfo * ; info = nullptr . ). normal constructor ; Definition at line 180 of file TSQLStructure.cxx. ◆ ~TSQLTableData(). TSQLTableData::~TSQLTableData ; (; ). override . destructor ; Definition at line 190 of file TSQLStructure.cxx. M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLTableData.html:10098,inherit,inherited,10098,doc/master/classTSQLTableData.html,https://root.cern,https://root.cern/doc/master/classTSQLTableData.html,1,['inherit'],['inherited']
Modifiability,"};  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  VariableNormalizeTransform (DataSetInfo &dsi);  constructor ;  ; virtual ~VariableNormalizeTransform (void);  ; virtual void AttachXMLTo (void *parent);  create XML description of Normalize transformation ;  ; void BuildTransformationFromVarInfo (const std::vector< TMVA::VariableInfo > &var);  this method is only used when building a normalization transformation from old text files in this case regression didn't exist and there were no targets ;  ; std::vector< TString > * GetTransformationStrings (Int_t cls) const;  creates string with variable transformations applied ;  ; void Initialize ();  initialization of the normalization transformation ;  ; virtual const Event * InverseTransform (const Event *const, Int_t cls) const;  apply the inverse transformation ;  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName, Int_t part, UInt_t trCounter, Int_t cls);  creates a normalizing function TODO include target-transformation into makefunction ;  ; Bool_t PrepareTransformation (const std::vector< Event * > &);  prepare transformation ;  ; virtual void PrintTransformation (std::ostream &o);  prints the transformation ranges ;  ; virtual void ReadFromXML (void *trfnode);  Read the transformation matrices from the xml node. ;  ; void ReadTransformationFromStream (std::istream &, const TString &);  Read the variable ranges from an input stream. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html:2036,variab,variable,2036,doc/master/classTMVA_1_1VariableNormalizeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html,1,['variab'],['variable']
Modifiability,"};  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooLegendre; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpHarmonic.html:51616,inherit,inherited,51616,doc/master/classRooSpHarmonic.html,https://root.cern,https://root.cern/doc/master/classRooSpHarmonic.html,2,['inherit'],['inherited']
Modifiability,"};; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawListOfPolyMarkers3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 30068 2009-09-08 15:19:38Z ganis $ » Last generated: 2010-10-05 21:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofDrawListOfPolyMarkers3D.html:7563,variab,variable,7563,root/html528/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html528/TProofDrawListOfPolyMarkers3D.html,1,['variab'],['variable']
Modifiability,"}\) until the criterion: ; \[; \alpha < \frac{R(T) - R(t)}{|\sim T_t| - 1}; \]. is true for all nodes t in \( T \), or (ii) the algorithm finds the sequence of critical points \( \alpha_k < \alpha_{k+1} ... < \alpha_K \) such that \( T_K = root(T_{max}) \) and then selects the optimally-pruned subtree, defined to be the subtree with the best quality index for the validation sample. ; Definition at line 62 of file CostComplexityPruneTool.h. Public Member Functions;  CostComplexityPruneTool (SeparationBase *qualityIndex=nullptr);  the constructor for the cost complexity pruning ;  ; virtual ~CostComplexityPruneTool ();  the destructor for the cost complexity pruning ;  ; virtual PruningInfo * CalculatePruningInfo (DecisionTree *dt, const IPruneTool::EventSample *testEvents=nullptr, Bool_t isAutomatic=kFALSE);  the routine that basically ""steers"" the pruning process. ;  ;  Public Member Functions inherited from TMVA::IPruneTool;  IPruneTool ();  ; virtual ~IPruneTool ();  ; Double_t GetPruneStrength () const;  ; Bool_t IsAutomatic () const;  ; void SetAutomatic ();  ; void SetPruneStrength (Double_t alpha);  . Private Member Functions; void InitTreePruningMetaData (DecisionTreeNode *n);  initialise ""meta data"" for the pruning, like the ""costcomplexity"", the critical alpha, the minimal alpha down the tree, etc... for each node!! ;  ; MsgLogger & Log () const;  output stream to save logging information ;  ; void Optimize (DecisionTree *dt, Double_t weights);  after the critical \( \alpha \) values (at which the corresponding nodes would be pruned away) had been established in the ""InitMetaData"" we need now: automatic pruning: ;  . Private Attributes; MsgLogger * fLogger;  ; Int_t fOptimalK;  ! the optimal index of the prune sequence ;  ; std::vector< DecisionTreeNode * > fPruneSequence;  ! map of weakest links (i.e., branches to prune) -> pruning index ;  ; std::vector< Double_t > fPruneStrengthList;  ! map of alpha -> pruning index ;  ; std::vector< Double_t > fQualityI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CostComplexityPruneTool.html:1916,inherit,inherited,1916,doc/master/classTMVA_1_1CostComplexityPruneTool.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CostComplexityPruneTool.html,1,['inherit'],['inherited']
Modifiability,"}\) uses the error matrix to predict the values of all parameters at the various sub-minima which it will have to find in the course of the calculation, and in the limit that the problem is nearly linear, the predictions of \(\mbox{MINOS}\) will be nearly exact, requiring very few iterations. On the other hand, when the problem is very non-linear (i.e., \(\mbox{FCN}\) is far from a quadratic function of its parameters), is precisely the situation when \(\mbox{MINOS}\) is needed in order to indicate the correct parameter errors.; 2.5.4 \(\mbox{CONTOURS}\) plotting; M offers a procedure for finding \(\mbox{FCN}\) \(\mbox{CONTOURS}\) (provided via the class MnContours, see [api:contours]).; The contour calculated by MnContours::operator() is dynamic, in the sense that it represents the minimum of \(\mbox{FCN}\) with respect to all the other \(\mbox{npar - 2}\) parameters (if any). In statistical terms, this means that MnContours takes account of the correlations between the two parameters being plotted, and all the other variable parameters, using a procedure analogous to that of \(\mbox{MINOS}\). (If this feature is not wanted, then the other parameters must be fixed before calling \(\mbox{CONTOURS}\).) MnContours provides the actual coordinates of the points around the contour, suitable for plotting with a graphics routine or by hand (using MnPlot, see [api:plot]). The points are given in counter-clockwise order around the contour. Only one contour is calculated per command, and the level is \(\displaystyle F_{\mathrm{min}} + \mbox{up}\). where \(\mbox{up}\) is the return value of FCNBase::up() specified by the user (usually 1.0 by default). The number of points to be calculated is chosen by the user (default is 20). As a by-product, \(\mbox{CONTOURS}\) provides the \(\mbox{MINOS}\) errors of the two parameters in question, since these are just the extreme points of the contour (use the MnContours::contour(…) method in order to get the points of the contour and the on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:25580,variab,variable,25580,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['variab'],['variable']
Modifiability,"}lot\) for signal one observes that error bars are the largest in the \(x\) regions where the background is the largest. Figure 4 ; The \(\hbox {$_s$}{\cal P}lots\) (signal on top, background on bottom) obtained for \({\cal F}\) are represented as dots with error bars. They are obtained from a fit using only information from \({m_{\rm ES}}\) and \(\Delta E\); The results above can be obtained by running the tutorial TestSPlot.C ; Definition at line 21 of file TSPlot.h. Public Member Functions;  TSPlot ();  default constructor (used by I/O only) ;  ;  TSPlot (Int_t nx, Int_t ny, Int_t ne, Int_t ns, TTree *tree);  Normal TSPlot constructor. ;  ;  ~TSPlot () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  To browse the histograms. ;  ; void FillSWeightsHists (Int_t nbins=50);  The order of histograms in the array: ;  ; void FillXvarHists (Int_t nbins=100);  Fills the histograms of x variables (not weighted) with nbins. ;  ; void FillYpdfHists (Int_t nbins=100);  Fills the histograms of pdf-s of y variables with binning nbins. ;  ; void FillYvarHists (Int_t nbins=100);  Fill the histograms of y variables. ;  ; Int_t GetNevents ();  ; Int_t GetNspecies ();  ; void GetSWeights (Double_t *weights);  Returns the matrix of sweights. ;  ; void GetSWeights (TMatrixD &weights);  Returns the matrix of sweights. ;  ; TH1D * GetSWeightsHist (Int_t ixvar, Int_t ispecies, Int_t iyexcl=-1);  Returns the histogram of a variable, weighted with sWeights. ;  ; TObjArray * GetSWeightsHists ();  Returns an array of all histograms of variables, weighted with sWeights. ;  ; TString * GetTreeExpression ();  ; TString * GetTreeName ();  ; TString * GetTreeSelection ();  ; TH1D * GetXvarHist (Int_t ixvar);  Returns the histogram of variable ixvar. ;  ; TObjArray * GetXvarHists ();  Returns the array of histograms of x variables (not weighted). ;  ; TH1D * GetYpdfHist (Int_t iyvar, Int_t ispecies);  Returns the histogram of the pdf of variable iyvar for species #ispecies, binning",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:11922,variab,variables,11922,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,1,['variab'],['variables']
Modifiability,"}{\tau} ln(R_L^{-1}(i) -1); \]. to avoid the occurrence of heavy peaks at \( R_L = 0.1 \) .; Decorrelated (or ""diagonalized"") Likelihood; The biggest drawback of the Likelihood approach is that it assumes that the discriminant variables are uncorrelated. If it were the case, it can be proven that the discrimination obtained by the above likelihood ratio is optimal, ie, no other method can beat it. However, in most practical applications of MVAs correlations are present. ; Linear correlations, measured from the training sample, can be taken into account in a straightforward manner through the square-root of the covariance matrix. The square-root of a matrix \( C \) is the matrix \( C′ \) that multiplied with itself yields \( C \): \( C \)= \( C′C′ \). We compute the square-root matrix (SQM) by means of diagonalising ( \( D \)) the covariance matrix:. \[; D = S^TCS \Rightarrow C' = S \sqrt{DS^T}; \]. and the linear transformation of the linearly correlated into the uncorrelated variables space is then given by multiplying the measured variable tuple by the inverse of the SQM. Note that these transformations are performed for both signal and background separately, since the correlation pattern is not the same in the two samples.; The above diagonalisation is complete for linearly correlated, Gaussian distributed variables only. In real-world examples this is not often the case, so that only little additional information may be recovered by the diagonalisation procedure. In these cases, non-linear methods must be applied. ; Definition at line 61 of file MethodLikelihood.h. Public Member Functions;  MethodLikelihood (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  standard constructor ;  ;  MethodLikelihood (DataSetInfo &theData, const TString &theWeightFile);  construct likelihood references from file ;  ; virtual ~MethodLikelihood ();  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  write weights to XM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:2433,variab,variables,2433,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,2,['variab'],"['variable', 'variables']"
Modifiability,"~; 511/// Otherwise, when RecursiveRemove is called (by ~TObject or example) for this; 512/// type of object, the transversal of THashList and THashTable containers will; 513/// will have to be done without call Hash (and hence be linear rather than; 514/// logarithmic complexity). You will also see warnings like; 515/// ~~~; 516/// Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; 517/// ~~~; 518///; 519 ; 520ULong_t TObject::Hash() const; 521{; 522 //return (ULong_t) this >> 2;; 523 const void *ptr = this;; 524 return TString::Hash(&ptr, sizeof(void*));; 525}; 526 ; 527////////////////////////////////////////////////////////////////////////////////; 528/// Returns kTRUE if object inherits from class ""classname"".; 529 ; 530Bool_t TObject::InheritsFrom(const char *classname) const; 531{; 532 return IsA()->InheritsFrom(classname);; 533}; 534 ; 535////////////////////////////////////////////////////////////////////////////////; 536/// Returns kTRUE if object inherits from TClass cl.; 537 ; 538Bool_t TObject::InheritsFrom(const TClass *cl) const; 539{; 540 return IsA()->InheritsFrom(cl);; 541}; 542 ; 543////////////////////////////////////////////////////////////////////////////////; 544/// Dump contents of this object in a graphics canvas.; 545/// Same action as Dump but in a graphical form.; 546/// In addition pointers to other objects can be followed.; 547///; 548/// The following picture is the Inspect of a histogram object:; 549/// \image html base_inspect.png; 550 ; 551void TObject::Inspect() const; 552{; 553 gGuiFactory->CreateInspectorImp(this, 400, 200);; 554}; 555 ; 556////////////////////////////////////////////////////////////////////////////////; 557/// Returns kTRUE in case object contains browsable objects (like containers; 558/// or lists of other objects).; 559 ; 560Bool_t TObject::IsFolder() const; 561{; 562 retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:18892,inherit,inherits,18892,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ();  ; void AddRange (TParallelCoordRange *range);  Add a range to the current selection on the axis. ;  ; void DeleteVariable ();  Delete variables. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes the distance from the axis. ;  ; void Draw (Option_t *option="""") override;  Draw the axis. ;  ; bool Eval (Long64_t evtidx, TParallelCoordSelect *select);  Check if the entry is within the range(s) of ""select"". ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetBarHisto ();  ; bool GetBoxPlot ();  ; Double_t GetCurrentAverage () const;  ; Double_t GetCurrentMax () const;  ; Double_t GetCurrentMin () const;  ; Int_t GetEntryWeight (Long64_t evtidx);  Get the entry weight: The weight of an entry for a given variable is the bin content of the histogram bin the entry is going through. ;  ; void GetEntryXY (Long64_t n, Double_t &x, Double_t &y);  Get the position of the variable on the graph for the n'th entry. ;  ; Int_t GetHistBinning () const;  ; Double_t GetHistHeight ();  ; Int_t GetHistLineWidth ();  ; TH1F * GetHistogram ();  Create or recreate the histogram. ;  ; Int_t GetId ();  ; bool GetLogScale () const;  ; void GetMinMaxMean ();  Get mean, min and max of those variable. ;  ; Int_t GetNbins ();  ; Long64_t GetNentries () const;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  Returns info about this axis. ;  ; TParallelCoord * GetParallel ();  ; void GetQuantiles ();  Get the box plot values (quantiles). ;  ; TList * GetRanges ();  ; Double_t GetValuefromXY (Double_t x, Double_t y);  Get the value corresponding to the position. ;  ; Double_t * GetValues ();  ; bool GetVert ();  ; Double_t GetX ();  ; void GetXYfromValue (Double_t value, Double_t &x, Double_t &y);  Get a position corresponding to the value on the axis. ;  ; Double_t GetY ();  ; void Init ();  Initialise the TParallelVar variables. ;  ; TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:2958,variab,variable,2958,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,1,['variab'],['variable']
Modifiability,"~VirtualIntegrator ();  destructor: no operation ;  . Protected Attributes; int fNum;  Number of points used in the estimation of the integral. ;  ; double * fW;  Weights of the points used. ;  ; double * fX;  Abscisa of the points used. ;  ;  Protected Attributes inherited from ROOT::Math::GaussIntegrator; double fEpsAbs;  Absolute error. ;  ; double fEpsRel;  Relative error. ;  ; const IGenFunction * fFunction;  Pointer to function used. ;  ; double fLastError;  Error from the last estimation. ;  ; double fLastResult;  Result from the last estimation. ;  ; bool fUsedOnce;  Bool value to check if the function was at least called once. ;  . Private Member Functions; void CalcGaussLegendreSamplingPoints ();  Type: unsafe but fast interface filling the arrays x and w (static method) ;  ; double DoIntegral (double a, double b, const IGenFunction *func) override;  Integration surrogate method. ;  . Additional Inherited Members;  Static Protected Attributes inherited from ROOT::Math::GaussIntegrator; static bool fgAbsValue = false;  AbsValue used for the calculation of the integral. ;  . #include <Math/GaussLegendreIntegrator.h>. Inheritance diagram for ROOT::Math::GaussLegendreIntegrator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GaussLegendreIntegrator(). ROOT::Math::GaussLegendreIntegrator::GaussLegendreIntegrator ; (; int ; num = 10, . double ; eps = 1e-12 . ). Basic constructor of GaussLegendreIntegrator. ; @param num Number of desired points to calculate the integration. @param eps Desired relative error. ; Definition at line 23 of file GaussLegendreIntegrator.cxx. ◆ ~GaussLegendreIntegrator(). ROOT::Math::GaussLegendreIntegrator::~GaussLegendreIntegrator ; (; ). override . Default Destructor. ; Definition at line 34 of file GaussLegendreIntegrator.cxx. Member Function Documentation. ◆ CalcGaussLegendreSamplingPoints(). void ROOT::Math::GaussLegendreIntegrator::CalcGauss",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html:4342,inherit,inherited,4342,doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,1,['inherit'],['inherited']
Modifiability,"~~~; 167 ; 168Note that to scale fonts to the same size as the old True Type package a; 169scale factor of `0.93376068` is apply to the text size before drawing.; 170 ; 171The text size of any class inheriting from `TAttText` can; 172be changed using the method `SetTextSize` and retrieved using the; 173method `GetTextSize`.; 174 ; 175\anchor ATTTEXT5; 176## Text Font and Precision; 177 ; 178The text font code is combination of the font number and the precision.; 179~~~ {.cpp}; 180 Text font code = 10*fontnumber + precision; 181~~~; 182Font numbers must be between 1 and 14.; 183 ; 184The precision can be:; 185 ; 186 - `precision = 0` fast hardware fonts (steps in the size); 187 - `precision = 1` scalable and rotatable hardware fonts (see below); 188 - `precision = 2` scalable and rotatable hardware fonts; 189 - `precision = 3` scalable and rotatable hardware fonts. Text size; 190 is given in pixels.; 191 ; 192The text font and precision of any class inheriting from `TAttText` can; 193be changed using the method `SetTextFont` and retrieved using the; 194method `GetTextFont`.; 195 ; 196\anchor ATTTEXT51; 197### Font quality and speed; 198 ; 199When precision 0 is used, only the original non-scaled X11 system fonts are; 200used. The fonts have a minimum (4) and maximum (37) size in pixels. These; 201fonts are fast and are of good quality. Their size varies with large steps; 202and they cannot be rotated.; 203Precision 1 and 2 fonts have a different behaviour depending if the; 204True Type Fonts (TTF) are used or not. If TTF are used, you always get very good; 205quality scalable and rotatable fonts.; 206These days TTF fonts are rendered fast enough and can be used in all cases.; 207 ; 208\anchor ATTTEXT52; 209### How to use True Type Fonts; 210 ; 211TTF fonts are used by default. They can be deactivated via the following line; 212in the `.rootrc` file:; 213 ; 214~~~ {.cpp}; 215 Unix.*.Root.UseTTFonts: false; 216~~~; 217 ; 218\anchor ATTTEXT53; 219### List of the current",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8cxx_source.html:6333,inherit,inheriting,6333,doc/master/TAttText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttText_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"~~~; 4314///; 4315/// works for 1D, 2D, etc. histograms; 4316/// c2 is an optional argument that gives a relative weight between the two; 4317/// histograms, and dc2 is the error on this weight. This is useful, for example,; 4318/// when forming an asymmetry between two histograms from 2 different data sets that; 4319/// need to be normalized to each other in some way. The function calculates; 4320/// the errors assuming Poisson statistics on h1 and h2 (that is, dh = sqrt(h)).; 4321///; 4322/// example: assuming 'h1' and 'h2' are already filled; 4323///; 4324/// ~~~ {.cpp}; 4325/// h3 = h1->GetAsymmetry(h2); 4326/// ~~~; 4327///; 4328/// then 'h3' is created and filled with the asymmetry between 'h1' and 'h2';; 4329/// h1 and h2 are left intact.; 4330///; 4331/// Note that it is the user's responsibility to manage the created histogram.; 4332/// The name of the returned histogram will be `Asymmetry_nameOfh1-nameOfh2`; 4333///; 4334/// code proposed by Jason Seely (seely@mit.edu) and adapted by R.Brun; 4335///; 4336/// clone the histograms so top and bottom will have the; 4337/// correct dimensions:; 4338/// Sumw2 just makes sure the errors will be computed properly; 4339/// when we form sums and ratios below.; 4340 ; 4341TH1 *TH1::GetAsymmetry(TH1* h2, Double_t c2, Double_t dc2); 4342{; 4343 TH1 *h1 = this;; 4344 TString name = TString::Format(""Asymmetry_%s-%s"",h1->GetName(),h2->GetName() );; 4345 TH1 *asym = (TH1*)Clone(name);; 4346 ; 4347 // set also the title; 4348 TString title = TString::Format(""(%s - %s)/(%s+%s)"",h1->GetName(),h2->GetName(),h1->GetName(),h2->GetName() );; 4349 asym->SetTitle(title);; 4350 ; 4351 asym->Sumw2();; 4352 Bool_t addStatus = TH1::AddDirectoryStatus();; 4353 TH1::AddDirectory(kFALSE);; 4354 TH1 *top = (TH1*)asym->Clone();; 4355 TH1 *bottom = (TH1*)asym->Clone();; 4356 TH1::AddDirectory(addStatus);; 4357 ; 4358 // form the top and bottom of the asymmetry, and then divide:; 4359 top->Add(h1,h2,1,-c2);; 4360 bottom->Add(h1,h2,1,c2);; 436",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:179299,adapt,adapted,179299,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['adapt'],['adapted']
Modifiability,"~~~{.cpp}; 302auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; 303~~~~; 304 ; 305This creates a function of variable x with 2 parameters. The parameters must be initialized via:; 306 ; 307~~~~{.cpp}; 308 fa->SetParameter(0,value_first_parameter);; 309 fa->SetParameter(1,value_second_parameter);; 310~~~~; 311 ; 312 ; 313Parameters may be given a name:; 314 ; 315~~~~{.cpp}; 316 fa->SetParName(0,""Constant"");; 317~~~~; 318 ; 319* Example b:; 320 ; 321~~~~{.cpp}; 322 auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; 323~~~~; 324 ; 325 ; 326``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``.; 327 ; 328#### Case 2: inline expression using TMath functions with parameters; 329 ; 330Begin_Macro(source); 331{; 332 auto fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; 333 fb2->SetParameters(0.2,1.3);; 334 fb2->Draw();; 335}; 336End_Macro; 337 ; 338\anchor F3; 339### 3 - A lambda expression with variables and parameters; 340 ; 341\since **6.00/00:**; 342TF1 supports using lambda expressions in the formula. This allows, by using a full C++ syntax the full power of lambda; 343functions and still maintain the capability of storing the function in a file which cannot be done with; 344function pointer or lambda written not as expression, but as code (see items below).; 345 ; 346Example on how using lambda to define a sum of two functions.; 347Note that is necessary to provide the number of parameters; 348 ; 349~~~~{.cpp}; 350TF1 f1(""f1"",""sin(x)"",0,10);; 351TF1 f2(""f2"",""cos(x)"",0,10);; 352TF1 fsum(""f1"",""[&](double *x, double *p){ return p[0]*f1(x) + p[1]*f2(x); }"",0,10,2);; 353~~~~; 354 ; 355\anchor F4; 356### 4 - A general C function with parameters; 357 ; 358Consider the macro myfunc.C below:; 359 ; 360~~~~{.cpp}; 361 // Macro myfunc.C; 362 Double_t myfunction(Double_t *x, Double_t *par); 363 {; 364 Float_t xx =x[0];; 365 Double_t f = TMath::Abs(par[0]*s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:10136,variab,variables,10136,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variables']
Modifiability," ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TTreeCloner;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBranch; using BulkObj = ROOT::Experimental::Internal::TBulkBranchRead;  ; using CacheInfo_t = ROOT::Internal::TBranchCacheInfo;  ; enum  EStatusBits { ;   kDoNotProcess = ::kDoNotProcess; , kIsClone = ::kIsClone; , kBranchObject = ::kBranchObject; , kBranchAny = ::kBranchAny; , ;   kAutoDelete = (1ULL << ( 15 )); , kDoNotUseBufferMap = (1ULL << ( 22 )). };  TBranch status bits. More...;  ; typedef void(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchClones.html:26121,inherit,inherited,26121,doc/master/classTBranchClones.html,https://root.cern,https://root.cern/doc/master/classTBranchClones.html,1,['inherit'],['inherited']
Modifiability," . ). inline . Add a collection of arguments to this collection by calling add() for each element in the source collection. ; Definition at line 151 of file RooAbsCollection.h. ◆ add() [3/3]. template<typename Iterator_t , typename value_type = typename std::remove_pointer<typename std::iterator_traits<Iterator_t>::value_type>, typename = std::enable_if<std::is_convertible<const value_type*, const RooAbsArg*>::value>> . bool RooAbsCollection::add ; (; Iterator_t ; beginIt, . Iterator_t ; endIt, . bool ; silent = false . ). inline . Definition at line 140 of file RooAbsCollection.h. ◆ addClone() [1/2]. RooAbsArg * RooAbsCollection::addClone ; (; const RooAbsArg & ; var, . bool ; silent = false . ). virtual . Add a clone of the specified argument to list. ; Returns a pointer to the clone if successful, or else zero if a variable of the same name is already in the list or the list does not own its variables (in this case, try add() instead.) Calling addClone() on an empty list forces it to take ownership of all its subsequent variables. ; Reimplemented in RooCollectionProxy< RooArgList >, RooCollectionProxy< RooArgSet >, RooCollectionProxy< RooArgList >, and RooCollectionProxy< RooArgSet >.; Definition at line 409 of file RooAbsCollection.cxx. ◆ addClone() [2/2]. void RooAbsCollection::addClone ; (; const RooAbsCollection & ; list, . bool ; silent = false . ). virtual . Add a collection of arguments to this collection by calling addOwned() for each element in the source collection. ; Reimplemented in RooCollectionProxy< RooArgList >, and RooCollectionProxy< RooArgSet >.; Definition at line 524 of file RooAbsCollection.cxx. ◆ addOwned() [1/4]. bool RooAbsCollection::addOwned ; (; const RooAbsCollection & ; list, . bool ; silent = false . ). virtual . for each element in the source collection. ; The input list can't be an owning collection itself, otherwise the arguments would be owned by two collections.; If you want to transfer arguments from one owning collection to a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:29546,variab,variables,29546,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,1,['variab'],['variables']
Modifiability," . ). inline . Add a collection of arguments to this collection by calling add() for each element in the source collection. ; Definition at line 151 of file RooAbsCollection.h. ◆ add() [3/3]. template<typename Iterator_t , typename value_type = typename std::remove_pointer<typename std::iterator_traits<Iterator_t>::value_type>, typename = std::enable_if<std::is_convertible<const value_type*, const RooAbsArg*>::value>> . bool RooAbsCollection::add ; (; Iterator_t ; beginIt, . Iterator_t ; endIt, . bool ; silent = false . ). inline . Definition at line 140 of file RooAbsCollection.h. ◆ addClone() [1/2]. RooAbsArg * RooAbsCollection::addClone ; (; const RooAbsArg & ; var, . bool ; silent = false . ). virtual . Add a clone of the specified argument to list. ; Returns a pointer to the clone if successful, or else zero if a variable of the same name is already in the list or the list does not own its variables (in this case, try add() instead.) Calling addClone() on an empty list forces it to take ownership of all its subsequent variables. ; Reimplemented in RooCollectionProxy< RooArgList >, RooCollectionProxy< RooArgSet >, RooCollectionProxy< RooArgList >, and RooCollectionProxy< RooArgSet >.; Definition at line 416 of file RooAbsCollection.cxx. ◆ addClone() [2/2]. void RooAbsCollection::addClone ; (; const RooAbsCollection & ; list, . bool ; silent = false . ). virtual . Add a collection of arguments to this collection by calling addOwned() for each element in the source collection. ; Reimplemented in RooCollectionProxy< RooArgList >, and RooCollectionProxy< RooArgSet >.; Definition at line 531 of file RooAbsCollection.cxx. ◆ addOwned() [1/4]. bool RooAbsCollection::addOwned ; (; const RooAbsCollection & ; list, . bool ; silent = false . ). virtual . for each element in the source collection. ; The input list can't be an owning collection itself, otherwise the arguments would be owned by two collections.; If you want to transfer arguments from one owning collection to a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCollection.html:28962,variab,variables,28962,doc/master/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/master/classRooAbsCollection.html,1,['variab'],['variables']
Modifiability," . ); const. protectedvirtual . Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ), where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1 as function of the frames variable. ; The asymmetry category 'asymCat' must have exactly 2 (or 3) states defined with index values +1,-1 (and 0); The plot range and the number of plot bins is determined by the parameters of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()); The optional cut string expression can be used to select the events to be plotted. The cut specification may refer to any variable contained in the data set; The drawOptions are passed to the TH1::Draw() method ; Definition at line 1963 of file RooAbsData.cxx. ◆ plotEffOn(). RooPlot * RooAbsData::plotEffOn ; (; RooPlot * ; frame, . const RooAbsCategoryLValue & ; effCat, . PlotOpt ; o . ); const. protectedvirtual . Create and fill a histogram with the efficiency N[1] / ( N[1] + N[0] ), where N(1/0) is the number of data points with effCat=1 and effCat=0 as function of the frames variable. ; The efficiency category 'effCat' must have exactly 2 +1 and 0.; The plot range and the number of plot bins is determined by the parameters of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()); The optional cut string expression can be used to select the events to be plotted. The cut specification may refer to any variable contained in the data set; The drawOptions are passed to the TH1::Draw() method ; Definition at line 2056 of file RooAbsData.cxx. ◆ plotOn() [1/3]. RooAbsData::plotOn ; (; RooPlot * ; frame, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ); const. virtual . See alsoRooPlot* plotOn(RooPlot* frame, const RooLinkedList& cmdList) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:54274,variab,variable,54274,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variable']
Modifiability," . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGX11; Bool_t AllocColor (Colormap cmap, RXColor *color);  Allocate color in colormap. ;  ; XColor_t & GetColor (Int_t cid);  Return reference to internal color structure associated to color index cid. ;  ; void * GetGC (Int_t which) const;  Return desired Graphics Context (""which"" maps directly on gGCList[]). ;  ; void QueryColors (Colormap cmap, RXColor *colors, Int_t ncolors);  Returns the current RGB value for the pixel in the XColor structure. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGX11; ULong_t fBlackPixel;  Value of black pixel in colormap. ;  ; Int_t fBlueDiv;  Blue value divider. ;  ; Int_t fBlueShift;  Bits to left shift blue. ;  ; Float_t fCharacterUpX;  Character Up vector along X. ;  ; Float_t fCharacterUpY;  Character Up vector along Y",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11TTF.html:48003,inherit,inherited,48003,doc/master/classTGX11TTF.html,https://root.cern,https://root.cern/doc/master/classTGX11TTF.html,2,['inherit'],['inherited']
Modifiability," . Definition at line 32 of file TMultiLayerPerceptron.h. ◆ ELearningMethod. enum TMultiLayerPerceptron::ELearningMethod. EnumeratorkStochastic ; kBatch ; kSteepestDescent ; kRibierePolak ; kFletcherReeves ; kBFGS . Definition at line 30 of file TMultiLayerPerceptron.h. Constructor & Destructor Documentation. ◆ TMultiLayerPerceptron() [1/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; ). Default constructor. ; Definition at line 264 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [2/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . TTree * ; data = nullptr, . const char * ; training = ""Entry$%2==0"", . const char * ; test = """", . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ; Hidden layers are just described by the number of neurons. The layers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are two cuts (see TTreeFormula) defining events to be used during the neural net training and testing.; Example: ""Entry$%2"", ""(Entry$+1)%2"".; Both the TTree and the cut can be defined in the constructor, or later with the suited setter method. ; Definition at line 446 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [3/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . const char * ; weight, . TTree * ; data = nullptr, . const char * ; training = ""Entry$%2==0"", . const char * ; test = """", . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:29509,layers,layers,29509,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['layers'],['layers']
Modifiability," . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::PDEFoamEventDensity Class ReferenceTMVA. ; This is a concrete implementation of PDEFoam. ; Density(...) estimates the event (weight) density at a given phase-space point using range-searching. ; Definition at line 42 of file PDEFoamEventDensity.h. Public Member Functions;  PDEFoamEventDensity ();  ;  PDEFoamEventDensity (const PDEFoamEventDensity &);  Copy constructor. ;  ;  PDEFoamEventDensity (std::vector< Double_t > box);  User constructor. ;  ; virtual ~PDEFoamEventDensity ();  ; virtual Double_t Density (std::vector< Double_t > &Xarg, Double_t &event_density);  This function is needed during the foam buildup. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::PDEFoamDensityBase;  PDEFoamDensityBase ();  ;  PDEFoamDensityBase (const PDEFoamDensityBase &);  Copy constructor. ;  ;  PDEFoamDensityBase (std::vector< Double_t > box);  User constructor. ;  ; virtual ~PDEFoamDensityBase ();  destructor ;  ; void FillBinarySearchTree (const Event *ev);  This method inserts the given event 'ev' it into the binary search tree. ;  ; const std::vector< Double_t > & GetBox () const;  ; void SetBox (std::vector< Double_t > box);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamEventDensity.html:1071,inherit,inherited,1071,doc/master/classTMVA_1_1PDEFoamEventDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamEventDensity.html,1,['inherit'],['inherited']
Modifiability," . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGTableHeaderFrame Class ReferenceGUI » Low level GUI widgets. ; TGTableHeaderFrame implements a frame used to display TGTableHeaders in a TGTable. ; Internal use in TGTable only. ; Definition at line 36 of file TGTableContainer.h. Public Member Functions;  TGTableHeaderFrame (const TGWindow *p, TGTable *table=nullptr, UInt_t w=1, UInt_t h=1, EHeaderType type=kColumnHeader, UInt_t option=0);  TGTableHeaderFrame constructor. ;  ;  ~TGTableHeaderFrame () override;  ; virtual void DrawRegion (Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw a region of container in viewport. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableHeaderFrame.html:1037,inherit,inherited,1037,doc/master/classTGTableHeaderFrame.html,https://root.cern,https://root.cern/doc/master/classTGTableHeaderFrame.html,1,['inherit'],['inherited']
Modifiability," . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; TDocMethodWrapper Class Referenceabstract. . Definition at line 37 of file TDocParser.h. Public Types; enum  { kDocumented = 14; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual TMethod * GetMethod () const =0;  ; virtual Int_t GetOverloadIdx () const =0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocMethodWrapper.html:1124,inherit,inherited,1124,doc/master/classTDocMethodWrapper.html,https://root.cern,https://root.cern/doc/master/classTDocMethodWrapper.html,1,['inherit'],['inherited']
Modifiability," . Private Member Functions; void addPoint (Axis_t binCenter, double y, double yscale, double exlow, double exhigh, double eylow, double eyhigh);  . Private Attributes; double _entries = 0.0;  Number of entries in histogram. ;  ; double _nominalBinWidth = 1.0;  Average bin width. ;  ; double _nSigma = 1.0;  Number of 'sigmas' error bars represent. ;  ; std::vector< double > _originalWeights;  The original bin weights that were passed to the RooHist::addBin functions before scaling and bin width correction. ;  ; double _rawEntries = 0.0;  Number of entries in source dataset. ;  . Friends; class RooPlot;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:40367,inherit,inherited,40367,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,1,['inherit'],['inherited']
Modifiability," . Private Member Functions;  TRootContextMenu (const TRootContextMenu &);  ; void CreateMenu (TObject *object);  Create the context menu depending on the selected object. ;  ; TRootContextMenu & operator= (const TRootContextMenu &);  . Private Attributes; TRootDialog * fDialog;  dialog prompting for command line arguments ;  ; TList * fTrash;  list of objects to be deleted before refilling menu ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGPopupMenu; static FontStruct_t GetDefaultFontStruct ();  Return the default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:29930,inherit,inherited,29930,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,1,['inherit'],['inherited']
Modifiability," . Protected Attributes; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; TString fNameBuffer;  ;  Protected Attributes inherited from TSQLResult; Int_t fRowCount;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSQLResult;  TSQLResult ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TODBCResult.h>. Inheritance diagram for TODBCResult:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TODBCResult(). TODBCResult::TODBCResult ; (; SQLHSTMT ; stmt). Constructor. ; Definition at line 21 of file TODBCResult.cxx. ◆ ~TODBCResult(). TODBCResult::~TODBCResult ; (; ). virtual . Cleanup ODBC query result. ; Definition at line 37 of file TODBCResult.cxx. Member Function Documentation. ◆ Class(). static TClass * TODBCResult::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TODBCResult::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TODBCResult::Class_Version ; (; ). inlinestaticc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTODBCResult.html:10516,inherit,inherited,10516,doc/master/classTODBCResult.html,https://root.cern,https://root.cern/doc/master/classTODBCResult.html,3,['inherit'],['inherited']
Modifiability," . Protected Attributes; TString _convVarName;  Name of convolution variable. ;  ; RooRealVar * _cvModel {nullptr};  Convolution variable in resModel event. ;  ; RooRealVar * _cvOut {nullptr};  Convolution variable in output event. ;  ; RooRealVar * _cvPdf {nullptr};  Convolution variable in PDFxTruth event. ;  ; std::unique_ptr< RooArgSet > _modelCloneSet;  Owner of resModel clone. ;  ; std::unique_ptr< RooAbsGenContext > _modelGen;  Resolution model generator context. ;  ; std::unique_ptr< RooArgSet > _modelVars;  Holder of resModel event. ;  ; std::unique_ptr< RooArgSet > _modelVarsOwned;  Owning version of modelVars ;. ;  ; std::unique_ptr< RooArgSet > _pdfCloneSet;  Owner of PDF clone. ;  ; std::unique_ptr< RooAbsGenContext > _pdfGen;  Physics model generator context. ;  ; std::unique_ptr< RooArgSet > _pdfVars;  Holder of PDF x truth event. ;  ; std::unique_ptr< RooArgSet > _pdfVarsOwned;  Owning version of pdfVars ;. ;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00fffff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvGenContext.html:16430,inherit,inherited,16430,doc/master/classRooConvGenContext.html,https://root.cern,https://root.cern/doc/master/classRooConvGenContext.html,2,"['extend', 'inherit']","['extended', 'inherited']"
Modifiability," . Protected Member Functions; double evaluate () const override;  Transfer contents to std::vector for use below. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStepFunction.html:49143,parameteriz,parameterized,49143,doc/master/classRooStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooStepFunction.html,1,['parameteriz'],['parameterized']
Modifiability," . Static Private Member Functions; static bool isTagged (Option *ptr);  ; static Option * tag (Option *ptr);  ; static Option * untag (Option *ptr);  . Private Attributes; Option * next_;  ; Option * prev_;  . #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/core/dictgen/res/OptionParser.h>; Constructor & Destructor Documentation. ◆ Option() [1/3]. ROOT::option::Option::Option ; (; ). inline . Creates a new Option that is a one-element linked list and has NULL desc, name, arg and namelen. ; Definition at line 766 of file OptionParser.h. ◆ Option() [2/3]. ROOT::option::Option::Option ; (; const Descriptor * ; desc_, . const char * ; name_, . const char * ; arg_ . ). inline . Creates a new Option that is a one-element linked list and has the given values for desc, name and arg. ; If name_ points at a character other than '-' it will be assumed to refer to a short option and namelen will be set to 1. Otherwise the length will extend to the first '=' character or the string's 0-terminator. ; Definition at line 781 of file OptionParser.h. ◆ Option() [3/3]. ROOT::option::Option::Option ; (; const Option & ; orig). inline . Makes *this a copy of orig except for the linked list pointers. ; After this operation *this will be a one-element linked list. ; Definition at line 803 of file OptionParser.h. Member Function Documentation. ◆ append(). void ROOT::option::Option::append ; (; Option * ; new_last). inline . Makes new_last the new last() by chaining it into the list after last(). ; It doesn't matter which element you call append() on. The new element will always be appended to last().; Attentionnew_last must not yet be part of a list, or that list will become corrupted, because this method does not unchain new_last from an existing list. ; Definition at line 710 of file OptionParser.h. ◆ count(). int ROOT::option::Option::count ; (; ). inline . Returns the number of times this Option (or others with the same Descriptor::index) o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1option_1_1Option.html:5142,extend,extend,5142,doc/v632/classROOT_1_1option_1_1Option.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1option_1_1Option.html,1,['extend'],['extend']
Modifiability," . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoTrap; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoArb8; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetPlaneNormal (Double_t *p1, Double_t *p2, Double_t *p3, Double_t *norm);  ; static Bool_t InsidePolygon (Double_t x, Double_t y, Double_t *pts);  ; static Bool_t IsSamePoint (const Double_t *p1, const Double_t *p2);  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGtra.html:18351,inherit,inherited,18351,doc/master/classTGeoGtra.html,https://root.cern,https://root.cern/doc/master/classTGeoGtra.html,4,['inherit'],['inherited']
Modifiability," . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fCut {0.};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoRegionCut.html:10185,inherit,inherited,10185,doc/master/classTGeoRegionCut.html,https://root.cern,https://root.cern/doc/master/classTGeoRegionCut.html,1,['inherit'],['inherited']
Modifiability," . Static Public Member Functions; static vecgeom::cxx::Transformation3D * Convert (TGeoMatrix const *const geomatrix);  Convert a TGeoMatrix to a TRansformation3D. ;  ; static vecgeom::cxx::VUnplacedVolume * Convert (TGeoShape const *const shape);  Convert a TGeo shape to VUnplacedVolume, then creates a VPlacedVolume. ;  ; static TGeoVGShape * Create (TGeoShape *shape);  Factory creating TGeoVGShape from a Root shape. ;  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVGShape.html:14750,inherit,inherited,14750,doc/master/classTGeoVGShape.html,https://root.cern,https://root.cern/doc/master/classTGeoVGShape.html,2,['inherit'],['inherited']
Modifiability," ; ). private . compute full covariance matrix from sum of within and between matrices ; Definition at line 440 of file MethodFisher.cxx. ◆ GetCov_WithinClass(). void TMVA::MethodFisher::GetCov_WithinClass ; (; void ; ). private . the matrix of covariance 'within class' reflects the dispersion of the events relative to the center of gravity of their own class ; Definition at line 351 of file MethodFisher.cxx. ◆ GetDiscrimPower(). void TMVA::MethodFisher::GetDiscrimPower ; (; void ; ). private . computation of discrimination power indicator for each variable small values of ""fWith"" indicates little compactness of sig & of backgd big values of ""fBetw"" indicates large separation between sig & backgd ; we want signal & backgd classes as compact and separated as possible the discriminating power is then defined as the ration ""fBetw/fWith"" ; Definition at line 528 of file MethodFisher.cxx. ◆ GetFisherCoeff(). void TMVA::MethodFisher::GetFisherCoeff ; (; void ; ). private . Fisher = Sum { [coeff]*[variables] }. ; let Xs be the array of the mean values of variables for signal evts let Xb be the array of the mean values of variables for backgd evts let InvWith be the inverse matrix of the 'within class' correlation matrix; then the array of Fisher coefficients is [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith ; Definition at line 457 of file MethodFisher.cxx. ◆ GetFisherMethod(). EFisherMethod TMVA::MethodFisher::GetFisherMethod ; (; void ; ). inline . Definition at line 87 of file MethodFisher.h. ◆ GetHelpMessage(). void TMVA::MethodFisher::GetHelpMessage ; (; ); const. protectedvirtual . get help message text ; typical length of text line: ""|--------------------------------------------------------------|"" ; Implements TMVA::IMethod.; Definition at line 702 of file MethodFisher.cxx. ◆ GetMean(). void TMVA::MethodFisher::GetMean ; (; void ; ). private . compute mean values of variables in each sample, and the overall means ; Definition at line 302 of file MethodFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:36221,variab,variables,36221,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,1,['variab'],['variables']
Modifiability, ; ). virtual . Reimplemented from TMVA::MethodBase. ◆ StreamerNVirtual(). void TMVA::MethodCuts::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 238 of file MethodCuts.h. ◆ TestClassification(). void TMVA::MethodCuts::TestClassification ; (; ). virtual . nothing to test ; Reimplemented from TMVA::MethodBase.; Definition at line 827 of file MethodCuts.cxx. ◆ Train(). void TMVA::MethodCuts::Train ; (; void ; ). virtual . training method: here the cuts are optimised for the training sample ; Implements TMVA::MethodBase.; Definition at line 578 of file MethodCuts.cxx. ◆ WriteMonitoringHistosToFile(). void TMVA::MethodCuts::WriteMonitoringHistosToFile ; (; void ; ); const. virtual . write histograms and PDFs to file for monitoring purposes ; Reimplemented from TMVA::MethodBase.; Definition at line 1411 of file MethodCuts.cxx. Member Data Documentation. ◆ fAllVarsI. TString* TMVA::MethodCuts::fAllVarsI. private . what to do with variables ; Definition at line 188 of file MethodCuts.h. ◆ fBinaryTreeB. BinarySearchTree* TMVA::MethodCuts::fBinaryTreeB. private . Definition at line 181 of file MethodCuts.h. ◆ fBinaryTreeS. BinarySearchTree* TMVA::MethodCuts::fBinaryTreeS. private . Definition at line 180 of file MethodCuts.h. ◆ fCutMax. Double_t** TMVA::MethodCuts::fCutMax. private . maximum requirement ; Definition at line 185 of file MethodCuts.h. ◆ fCutMin. Double_t** TMVA::MethodCuts::fCutMin. private . minimum requirement ; Definition at line 184 of file MethodCuts.h. ◆ fCutRange. std::vector<Interval*> TMVA::MethodCuts::fCutRange. private . allowed ranges for cut optimisation ; Definition at line 177 of file MethodCuts.h. ◆ fCutRangeMax. Double_t* TMVA::MethodCuts::fCutRangeMax. private . maximum of allowed cut range ; Definition at line 176 of file MethodCuts.h. ◆ fCutRangeMin. Double_t* TMVA::MethodCuts::fCutRangeMin. private . minimum of allowed cut range ; Definition at line 175 of file MethodCuts.h. ◆ fEffBvsSLocal. TH1* ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:48160,variab,variables,48160,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['variab'],['variables']
Modifiability," ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizer::TFileNode Class Reference. . Definition at line 93 of file TPacketizer.cxx. Public Member Functions;  TFileNode (const char *name);  ;  ~TFileNode () override;  ; void Add (TDSetElement *elem);  ; Int_t Compare (const TObject *other) const override;  Compare abstract method. ;  ; void DecSlaveCnt (const char *slave);  ; const char * GetName () const override;  Returns name of object. ;  ; TFileStat * GetNextActive ();  ; TFileStat * GetNextUnAlloc ();  ; Int_t GetNumberOfActiveFiles () const;  ; Int_t GetSlaveCnt () const;  ; void IncMySlaveCnt ();  ; void IncSlaveCnt (const char *slave);  ; Bool_t IsSortable () const override;  ; void Print (Option_t *) const override;  This method must be overridden when a class wants to print itself. ;  ; void RemoveActive (TFileStat *file);  ; void Reset ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html:1071,inherit,inherited,1071,doc/master/classTPacketizer_1_1TFileNode.html,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileNode.html,1,['inherit'],['inherited']
Modifiability," ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; TGeoExtension Class ReferenceabstractThe Geometry Package » Geometry classes. ; ABC for user objects attached to TGeoVolume or TGeoNode. ; Provides interface for getting a reference (grab) and releasing the extension object (release), allowing for derived classes to implement reference counted sharing. The user who should attach extensions to logical volumes or nodes BEFORE applying misalignment information so that these will be available to all copies. ; Definition at line 17 of file TGeoExtension.h. Public Member Functions; virtual TGeoExtension * Grab ()=0;  ; TClass * IsA () const override;  ; virtual void Release () const =0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoExtension.html:1065,inherit,inherited,1065,doc/master/classTGeoExtension.html,https://root.cern,https://root.cern/doc/master/classTGeoExtension.html,1,['inherit'],['inherited']
Modifiability," ; Bool_t CreateDIB (TGLContext &ctx) const;  Create DIB section to read GL buffer into. ;  ; TGWin32GLManager & operator= (const TGWin32GLManager &);  . Private Attributes; TGWin32GLImpl * fPimpl;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGWin32GL.h>. Inheritance diagram for TGWin32GLManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGWin32GLManager() [1/2]. TGWin32GLManager::TGWin32GLManager ; (; ). Definition at line 229 of file TGWin32GL.cxx. ◆ ~TGWin32GLManager(). TGWin32GLManager::~TGWin32GLManager ; (; ). override . Definition at line 238 of file TGWin32GL.cxx. ◆ TGWin32GLManager() [2/2]. TGWin32GLManager::TGWin32GLManager ; (; const TGWin32GLManager & ; ). private . Member Function Documentation. ◆ AttachOffScreenDevice(). Bool_t TGWin32GLManager::AttachOffScreenDevice ; (; Int_t ; ctxInd, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32GLManager.html:12965,inherit,inherited,12965,doc/master/classTGWin32GLManager.html,https://root.cern,https://root.cern/doc/master/classTGWin32GLManager.html,2,['inherit'],['inherited']
Modifiability," ; Bool_t InheritsFrom (const char *cl) const override;  Return kTRUE if this class inherits from a class with name ""classname"". ;  ; Bool_t InheritsFrom (const TClass *cl) const override;  Return kTRUE if this class inherits from class cl. ;  ; void InterpretedShowMembers (void *obj, TMemberInspector &insp, Bool_t isTransient);  Do a ShowMembers() traversal of all members and base classes' members using the reflection information from the interpreter. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsFolder (void *obj) const;  Return kTRUE if the class has elements. ;  ; Bool_t IsForeign () const;  Return kTRUE is the class is Foreign (the class does not have a Streamer method). ;  ; Bool_t IsLoaded () const;  Return true if the shared library of this class is currently in the a process's memory. ;  ; Bool_t IsStartingWithTObject () const;  Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ;  ; Bool_t IsSyntheticPair () const;  ; Bool_t IsTObject () const;  Return kTRUE is the class inherits from TObject. ;  ; Bool_t IsVersioned () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void MakeCustomMenuList ();  Makes a customizable version of the popup menu list, i.e. ;  ; Bool_t MatchLegacyCheckSum (UInt_t checksum) const;  Return true if the checksum passed as argument is one of the checksum value produced by the older checksum calculation algorithm. ;  ; void Move (void *arenaFrom, void *arenaTo) const;  Register the fact that an object was moved from the memory location 'arenaFrom' to the memory location 'arenaTo'. ;  ; void * New (ENewType defConstructor=kClassNew, Bool_t quiet=kFALSE) const;  Return a pointer to a newly allocated object of this class. ;  ; void * New (void *arena, ENewType defConstructor=kClassNew) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQClass.html:17315,inherit,inherits,17315,doc/master/classTQClass.html,https://root.cern,https://root.cern/doc/master/classTQClass.html,1,['inherit'],['inherits']
Modifiability," ; Double_t GetLinDP (int i) const;  ; const std::vector< Double_t > & GetLinImportance () const;  ; Double_t GetLinImportance (int i) const;  ; const std::vector< Double_t > & GetLinNorm () const;  ; Double_t GetLinNorm (int i) const;  ; Double_t GetLinQuantile () const;  ; const MethodBase * GetMethodBase () const;  Get a pointer to the original MethodRuleFit. ;  ; const MethodRuleFit * GetMethodRuleFit () const;  Get a pointer to the original MethodRuleFit. ;  ; UInt_t GetNLinear () const;  ; UInt_t GetNRules () const;  ; Double_t GetOffset () const;  ; const RuleFit * GetRuleFit () const;  ; const TMVA::Event * GetRuleMapEvent (UInt_t evtidx) const;  ; Double_t GetRuleMinDist () const;  ; Double_t GetRulePBB (int i) const;  ; Double_t GetRulePBS (int i) const;  ; Double_t GetRulePSB (int i) const;  ; Double_t GetRulePSS (int i) const;  ; Double_t GetRulePTag (int i) const;  ; std::vector< TMVA::Rule * > & GetRules ();  ; Rule * GetRules (int i);  ; const std::vector< TMVA::Rule * > & GetRulesConst () const;  ; const Rule * GetRulesConst (int i) const;  ; UInt_t GetRulesNCuts (int i) const;  ; const Event * GetTrainingEvent (UInt_t i) const;  get the training event from the rule fitter ;  ; const std::vector< const TMVA::Event * > * GetTrainingEvents () const;  get list of training events from the rule fitter ;  ; const std::vector< Double_t > & GetVarImportance () const;  ; Double_t GetVarImportance (int i) const;  ; void Initialize (const RuleFit *rf);  Initializes all member variables with default values. ;  ; Bool_t IsLinTermOK (int i) const;  ; Bool_t IsRuleMapOK () const;  ; void MakeLinearTerms ();  Make the linear terms as in eq 25, ref 2 For this the b and (1-b) quantiles are needed. ;  ; void MakeModel ();  create model ;  ; void MakeRuleMap (const std::vector< const TMVA::Event * > *events=nullptr, UInt_t ifirst=0, UInt_t ilast=0);  Makes rule map for all events. ;  ; void MakeRules (const std::vector< const TMVA::DecisionTree * > &forest);  Makes rule",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html:5594,variab,variables,5594,doc/master/classTMVA_1_1RuleEnsemble.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html,1,['variab'],['variables']
Modifiability," ; Double_t fTxy;  ; Double_t fTxz;  ; Double_t fTyz;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPara.html:20223,inherit,inherited,20223,doc/master/classTGeoPara.html,https://root.cern,https://root.cern/doc/master/classTGeoPara.html,1,['inherit'],['inherited']
Modifiability," ; Double_t fVz;  ; Float_t fWeight;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TParticle.h>. Inheritance diagram for TParticle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TParticle() [1/4]. TParticle::TParticle ; (; ). reference to the particle record in PDG database ; default constructor ; Definition at line 63 of file TParticle.cxx. ◆ TParticle() [2/4]. TParticle::TParticle ; (; Int_t ; pdg, . Int_t ; status, . Int_t ; mother1, . Int_t ; mother2, . Int_t ; daughter1, . Int_t ; daughter2, . Double_t ; px, . Double_t ; py, . Double_t ; pz, . Double_t ; etot, . Double_t ; vx, . Double_t ; vy, . Double_t ; vz, . Double_t ; time . ). constructor ; Definition at line 77 of file TParticle.cxx. ◆ TParticle() [3/4]. TParticle::TParticle ; (; Int_t ; pdg, . Int_t ; status, . Int_t ; mother1, . Int_t ; m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticle.html:16409,inherit,inherited,16409,doc/master/classTParticle.html,https://root.cern,https://root.cern/doc/master/classTParticle.html,2,['inherit'],['inherited']
Modifiability," ; Float16_t fMinimum;  Minimum value if leaf range is specified. ;  ; Float16_t ** fPointer;  ! Address of pointer to data buffer! ;  ; Float16_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafF16.html:15034,inherit,inherited,15034,doc/master/classTLeafF16.html,https://root.cern,https://root.cern/doc/master/classTLeafF16.html,1,['inherit'],['inherited']
Modifiability," ; Float_t * fP {nullptr};  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from TEvePointSelectorConsumer; ETreeVarType_e fSourceCS;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TEveProjected; Float_t fDepth;  ; TEveProjectionManager * fManager;  ; TEveProjectable * fProjectable;  ;  Static Protected Attributes inherited from TEveLine; static Bool_t fgDefaultSmooth = kFALSE;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TEveLine.h>. Inheritance diagram for TEveLineProjected:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveLineProjected() [1/2]. TEveLineProjected::TEveLineProjected ; (; const TEveLineProjected & ; ). private . ◆ TEveLineProjected() [2/2]. TEveLineProjected::TEveLineProjected ; (; ). Default constructor. ; Definition at line 324 of file TEveLine.cxx. ◆ ~TEveLineProjected(). TEveLineProjected::~TEveLineProjected ; (; ). inlineoverride . Definition at line 95 of file TEveLine.h. Member Function Documentation. ◆ Class(). static TClass * TEveLineProjected::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveLineProjected::Class_Name ; (; ). static .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:51572,inherit,inherited,51572,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,3,['inherit'],['inherited']
Modifiability," ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:30192,inherit,inherited,30192,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,9,['inherit'],['inherited']
Modifiability," ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a node. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; GVizAgnode_t * GetGVNode ();  ; TClass * IsA () const override;  ; void Layout ();  Layout this node in the GraphViz space. ;  ; void Paint (Option_t *option="""") override;  Paint this node with its current attributes. ;  ; void SaveAttributes (std::ostream &);  Save attributes as a C++ statement(s) on output stream out called by TGraphStruct::SavePrimitive. ;  ; void SavePrimitive (std::ostream &, Option_t *) override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void SetGVNode (GVizAgnode_t *gvn);  ; void SetTextAngle (Float_t) override;  Set the text angle. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphNode.html:1740,inherit,inherited,1740,doc/master/classTGraphNode.html,https://root.cern,https://root.cern/doc/master/classTGraphNode.html,1,['inherit'],['inherited']
Modifiability," ; Int_t ReadDirectory ();  Read the directory of the ZIP archive. ;  ; Int_t ReadEndHeader (Long64_t pos);  Read the end header of the ZIP archive including the archive comment at the current file position. ;  ; Int_t ReadMemberHeader (TZIPMember *member);  Read the member header of the ZIP archive. ;  ; Long64_t ReadZip64EndLocator (Long64_t pos);  Read Zip64 end of central directory locator. ;  ; Int_t ReadZip64EndRecord (Long64_t pos);  Read Zip64 end of central directory record. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fComment;  Archive comment. ;  ; Long64_t fDirOffset;  Central directory offset (from the beginning of the archive) ;  ; Long64_t fDirPos;  Central directory position. ;  ; Long64_t fDirSize;  Central directory size. ;  ;  Protected Attributes inherited from TArchiveFile; TString fArchiveName;  Archive file name. ;  ; TArchiveMember * fCurMember;  Current archive member. ;  ; TFile * fFile;  File stream used to access the archive. ;  ; Int_t fMemberIndex;  Index of sub-file in archive. ;  ; TString fMemberName;  Sub-file name. ;  ; TObjArray * fMembers;  Members in this archive. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTZIPFile.html:17698,inherit,inherited,17698,doc/master/classTZIPFile.html,https://root.cern,https://root.cern/doc/master/classTZIPFile.html,1,['inherit'],['inherited']
Modifiability," ; Int_t SetDataSetTreeName (const char *dataset, const char *treename) override;  Set/Change the name of the default tree. ;  ; void ShowCache (Bool_t all=kFALSE) override;  List contents of file cache. ;  ; void ShowData () override;  List contents of the data directory in the sandbox. ;  ; void ShowDataSetCache (const char *dataset=0) override;  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSets (const char *uri="""", const char *=0) override;  Shows datasets in locations that match the uri By default shows the user's datasets and global ones. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t VerifyDataSet (const char *uri, const char *=0) override;  Verify if all files in the specified dataset are available. ;  ;  Public Member Functions inherited from TProof;  TProof (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Create a PROOF environment. ;  ;  ~TProof () override;  Clean up PROOF environment. ;  ; Int_t ActivateWorker (const char *ord, Bool_t save=kTRUE);  Make sure that the worker identified by the ordinal number 'ord' is in the active list. ;  ; void AddChain (TChain *chain);  Add chain to data set. ;  ; Int_t AddDynamicPath (const char *libpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'libpath' to the lib path search. ;  ; void AddFeedback (const char *name);  Add object to feedback list. ;  ; Int_t AddIncludePath (const char *incpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'incpath' to the inc path search. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects that might be needed during the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:5620,inherit,inherited,5620,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['inherit'],['inherited']
Modifiability," ; Int_t fGreenDiv;  Green value divider. ;  ; Int_t fGreenShift;  Bits to left shift green. ;  ; Bool_t fHasTTFonts;  True when TrueType fonts are used. ;  ; Bool_t fHasXft;  True when XftFonts are used. ;  ; Int_t fRedDiv;  Red value divider, -1 if no TrueColor visual. ;  ; Int_t fRedShift;  Bits to left shift red, -1 if no TrueColor visual. ;  ; Drawable fRootWin;  Root window used as parent of all windows. ;  ; Int_t fScreenNumber;  Screen number. ;  ; Int_t fTextAlign;  Text alignment (set in SetTextAlign) ;  ; Int_t fTextAlignH;  Text Alignment Horizontal. ;  ; Int_t fTextAlignV;  Text Alignment Vertical. ;  ; Float_t fTextMagnitude;  Text Magnitude. ;  ; Drawable fVisRootWin;  Root window with fVisual to be used to create GC's and XImages. ;  ; RVisual * fVisual;  Pointer to visual used by all windows. ;  ; ULong_t fWhitePixel;  Value of white pixel in colormap. ;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . #include <TGX11TTF.h>. Inheritance diagram for TGX11TTF:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAlign. enum TGX11TTF::EAlign. private . EnumeratorkNone ; kTLeft ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11TTF.html:50145,inherit,inherited,50145,doc/master/classTGX11TTF.html,https://root.cern,https://root.cern/doc/master/classTGX11TTF.html,3,['inherit'],['inherited']
Modifiability," ; Int_t fGreenDiv;  Green value divider. ;  ; Int_t fGreenShift;  Bits to left shift green. ;  ; Bool_t fHasTTFonts;  True when TrueType fonts are used. ;  ; Bool_t fHasXft;  True when XftFonts are used. ;  ; Int_t fRedDiv;  Red value divider, -1 if no TrueColor visual. ;  ; Int_t fRedShift;  Bits to left shift red, -1 if no TrueColor visual. ;  ; Drawable fRootWin;  Root window used as parent of all windows. ;  ; Int_t fScreenNumber;  Screen number. ;  ; Int_t fTextAlign;  Text alignment (set in SetTextAlign) ;  ; Int_t fTextAlignH;  Text Alignment Horizontal. ;  ; Int_t fTextAlignV;  Text Alignment Vertical. ;  ; Float_t fTextMagnitude;  Text Magnitude. ;  ; Drawable fVisRootWin;  Root window with fVisual to be used to create GC's and XImages. ;  ; RVisual * fVisual;  Pointer to visual used by all windows. ;  ; ULong_t fWhitePixel;  Value of white pixel in colormap. ;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions; void ClearPixmap (Drawable *pix);  Clear the pixmap pix. ;  ; void CloseWindow1 ();  Delete current window. ;  ; void CollectImageColors (ULong_t pixel, ULong_t *&orgcolors, Int_t &ncolors, Int_t &maxcolors);  Collect in orgcolors a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11.html:48036,inherit,inherited,48036,doc/master/classTGX11.html,https://root.cern,https://root.cern/doc/master/classTGX11.html,3,['inherit'],['inherited']
Modifiability," ; Int_t fProgressBarStringLength;  . Static Private Attributes; static const TString fgClassName = ""Timer"";  used for output ;  ; static const Int_t fgNbins = 16;  number of bins in progress bar ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/Timer.h>. Inheritance diagram for TMVA::Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Timer() [1/2]. TMVA::Timer::Timer ; (; const char * ; prefix = """", . Bool_t ; colourfulOutput = kTRUE . ). constructor ; Definition at line 85 of file Timer.cxx. ◆ Timer() [2/2]. TMVA::Timer::Timer ; (; Int_t ; ncounts, . const char * ; prefix = """", . Bool_t ; colourfulOutput = kTRUE . ). standard constructor: ncounts gives the total number of counts that the loop will iterate through. ; At each call of the timer, the current number of counts is provided by the user, so that the timer can obtain the due time from linearly interpolating the spent time. ; Definition at line 96 of file Timer.cxx. ◆ ~Timer(). TMVA::Timer::~Timer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Timer.html:13209,inherit,inherited,13209,doc/master/classTMVA_1_1Timer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Timer.html,2,['inherit'],['inherited']
Modifiability, ; Option_t * GetOption () const override;  Returns the object option stored in the list. ;  ; TClass * IsA () const override;  ; TObject * Next () override;  Return next object in the list. Returns 0 when no more objects in list. ;  ; Bool_t operator!= (const TIterator &aIter) const override;  This operator compares two TIterator objects. ;  ; Bool_t operator!= (const TListIter &aIter) const;  This operator compares two TListIter objects. ;  ; TObject * operator* () const override;  Return current object or nullptr. ;  ; TIterator & operator= (const TIterator &rhs) override;  Overridden assignment operator. ;  ; TListIter & operator= (const TListIter &rhs);  Overloaded assignment operator. ;  ; void Reset () override;  Reset list iterator. ;  ; void SetOption (Option_t *option);  Sets the object option stored in the list. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TIterator; virtual ~TIterator ();  ; TObject * operator() ();  ; Bool_t operator== (const TIterator &other) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TIterator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  . Protected Member Functions;  TListIter ();  ;  Protected Member Functions inherited from TIterator;  TIterator ();  ;  TIterator (const TIterator &);  . Protected Attributes; TObjLinkPtr_t fCurCursor;  ; TObjLinkPtr_t fCursor;  ; Bool_t fDirection;  ; const TList * fList;  ; Bool_t fStarted;  . #include <TList.h>. Inheritance diagram for TListIter:. This brows,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListIter.html:1879,inherit,inherited,1879,doc/master/classTListIter.html,https://root.cern,https://root.cern/doc/master/classTListIter.html,1,['inherit'],['inherited']
Modifiability," ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ROOT::Experimental::REveSecondarySelectable;  REveSecondarySelectable ()=default;  ; virtual ~REveSecondarySelectable ();  ; Bool_t GetAlwaysSecSelect () const;  ; SelectionSet_t & RefHighlightedSet ();  ; SelectionSet_t & RefSelectedSet ();  ; void SetAlwaysSecSelect (Bool_t f);  . Protected Attributes; Bool_t fDepthTest;  ; Line_t * fLastLine {nullptr};  ! ;  ; REveChunkManager fLinePlex;  ; REveChunkManager fMarkerPlex;  ; Bool_t fOwnLinesIds;  ; Bool_t fOwnMarkersIds;  ; Bool_t fRnrLines;  ; Bool_t fRnrMarkers;  ;  Protected Attributes inherited from ROOT::Experimental::REveElement; AuntList_t fAunts;  ; Bool_t fCanEditMainColor {kFALSE};  ; Bool_t fCanEditMainTrans {kFALSE};  ; Bool_t fCanEditMainTransparency {kFALSE};  ; UChar_t fChangeBits {0};  ; TClass * fChildClass {nullptr};  ; List_t fChildren;  ; REveCompound * fCompound {nullptr};  ; UChar_t fCSCBits {0};  ; Color_t fDefaultColor {kPink};  ; Int_t fDenyDestroy {0};  ; Bool_t fDestroyOnZeroRefCnt {kTRUE};  Deny-destroy count. ;  ; Char_t fDestructing {kNone};  ; Short_t fImpliedSelected {0};  ; Color_t * fMainColorPtr {nullptr};  ; std::unique_ptr< REveTrans > fMainTrans;  ; Char_t fMainTransparency {0};  ; REveElement * fMother {nullptr};  ; std::string fName;  ; Bool_t fPickable {false};  ; std::unique_ptr< REveRenderData > fRenderData;  Externally assigned and controlled user data. ;  ; Bool_t fRnrChildren {kTRUE};  ; Bool_t fRnrSelf {kTRUE};  ; REveScene * fScene {nullptr};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as mode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html:19294,inherit,inherited,19294,doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,1,['inherit'],['inherited']
Modifiability," ; TFormLeafInfo * fNext;  follow this to grab the inside information ;  ; Longptr_t fOffset;  ! Offset of the data pointed inside the class fClass ;  . Protected Attributes; Int_t fMultiplicity;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFormLeafInfo.h>. Inheritance diagram for TFormLeafInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFormLeafInfo() [1/2]. TFormLeafInfo::TFormLeafInfo ; (; TClass * ; classptr = nullptr, . Longptr_t ; offset =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormLeafInfo.html:15202,inherit,inherited,15202,doc/master/classTFormLeafInfo.html,https://root.cern,https://root.cern/doc/master/classTFormLeafInfo.html,1,['inherit'],['inherited']
Modifiability," ; TGCheckButton * fOverwriteDSet;  ; TGCheckButton * fOverwriteFiles;  ; TGTextButton * fRemoveButton;  ; TList * fSkippedFiles;  ; TGTextButton * fUploadButton;  ; Bool_t fUploading;  ; TSessionViewer * fViewer;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUploadDataSetDlg.html:30248,inherit,inherited,30248,doc/master/classTUploadDataSetDlg.html,https://root.cern,https://root.cern/doc/master/classTUploadDataSetDlg.html,1,['inherit'],['inherited']
Modifiability," ; TGToolTip * fTip;  associated tooltip ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Additional Inherited Members;  Public Types inherited from TGTextEntry; enum  EEchoMode { kNormal; , kNoEcho; , kPassword; };  ; enum  EInsertMode { kInsert; , kReplace; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:34789,inherit,inherited,34789,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,1,['inherit'],['inherited']
Modifiability," ; TGToolTip * fTip;  associated tooltip ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static TString * fgClipboardText = 0;  application clipboard text ;  ; static const TGFont * fgDefaultFont = 0;  ; static const TGGC * fgDefaultGC = 0;  ; static const TGGC * fgDefaultSelectedBackgroundGC = 0;  ; static const TGGC * fgDefaultSelectedGC = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEntry.html:39543,inherit,inherited,39543,doc/master/classTGTextEntry.html,https://root.cern,https://root.cern/doc/master/classTGTextEntry.html,1,['inherit'],['inherited']
Modifiability," ; TGVertical3DLine * fVertical1;  toolbar vertical separator ;  ; TGLayoutHints * fVertical1Layout;  layout hints for separator ;  ; TGVertical3DLine * fVertical2;  toolbar vertical separator ;  ; TGLayoutHints * fVertical2Layout;  layout hints for separator ;  ; TGPopupMenu * fViewMenu;  view menu ;  ; TGPopupMenu * fViewWithMenu;  view with... cascade submenu ;  . Friends; class TRootContainer;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootCanvas.html:35016,inherit,inherited,35016,doc/master/classTRootCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootCanvas.html,1,['inherit'],['inherited']
Modifiability," ; TH1D * Projection (Int_t xDim, Option_t *option="""") const;  Forwards to THnBase::Projection(). ;  ; TH2D * Projection (Int_t yDim, Int_t xDim, Option_t *option="""") const;  Forwards to THnBase::Projection(). ;  ; THnSparse * Rebin (const Int_t *group) const;  ; THnSparse * Rebin (Int_t group) const;  ; void Reset (Option_t *option="""") override;  Clear the histogram. ;  ; void SetBinContent (const Int_t *idx, Double_t v);  Forwards to THnBase::SetBinContent(). ;  ; void SetBinContent (Long64_t bin, Double_t v) override;  Set content of bin with index ""bin"" to ""v"". ;  ; void SetBinError2 (Long64_t bin, Double_t e2) override;  Set error of bin with index ""bin"" to ""e"", enable errors if needed. ;  ; void SetFilledBins (Long64_t nbins) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Sumw2 () override;  Enable calculation of errors. ;  ;  Public Member Functions inherited from THnBase;  ~THnBase () override;  Destruct a THnBase. ;  ; void Add (const TH1 *hist, Double_t c=1.);  Fill the THnBase with the bins of hist that have content or error != 0. ;  ; void Add (const THnBase *h, Double_t c=1.);  Add contents of h scaled by c to this histogram: this = this + c * h Note that if h has Sumw2 set, Sumw2 is automatically called for this if not already set. ;  ; void AddBinContent (const Int_t *x, Double_t v=1.);  ; void Browse (TBrowser *b) override;  Browse a THnSparse: create an entry (ROOT::THnSparseBrowsable) for each dimension. ;  ; void CalculateErrors (Bool_t calc=kTRUE);  Calculate errors (or not if ""calc"" == kFALSE) ;  ; Double_t ComputeIntegral ();  Compute integral (normalized cumulative sum of bins) w/o under/overflows The result is stored in fIntegral and used by the GetRandom functions. ;  ; void Divide (const THnBase *h);  Divide this histogram by h this = this/(h) Note that if h has Sumw2 set, Sumw2 is automatically called for this if not already set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparse.html:8189,inherit,inherited,8189,doc/master/classTHnSparse.html,https://root.cern,https://root.cern/doc/master/classTHnSparse.html,1,['inherit'],['inherited']
Modifiability," ; THnBase * RebinBase (Int_t group) const;  Combine the content of ""group"" neighboring bins into a new bin and return the resulting THnBase. ;  ; void ResetBase (Option_t *option="""");  Clear the histogram. ;  ; void UpdateXStat (const Double_t *x, Double_t w=1.);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from THnBase; static THnBase * CreateHnAny (const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THn / THnSparse object from a histogram deriving from TH1. ;  ; static THnBase * CreateHnAny (const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THnSparse (if ""sparse"") or THn from ""hn"", possibly converting THn <-> THnSparse. ;  ;  Protected Attributes inherited from THnBase; TObjArray fAxes;  Axes of the histogram. ;  ; TObjArray fBrowsables;  ! Browser-helpers for each axis ;  ; Double_t fEntries;  Number of entries, spread over chunks. ;  ; std::vector< Double_t > fIntegral;  ! vector with bin weight sums ;  ; enum THnBase:: { ... }  fIntegralStatus;  ! status of integral ;  ; Int_t fNdimensions;  Number of dimensions. ;  ; Double_t fTsumw;  Total sum of weights. ;  ; Double_t fTsumw2;  Total sum of weights squared; -1 if no errors are calculated. ;  ; TArrayD fTsumwx;  Total sum of weight*X for each dimension. ;  ; TArrayD fTsumwx2;  Total sum of weight*X*X for each dimension. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <THnSparse.h>. Inheritance diagram for THnSparseT< CONT >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THnSparseT() [1/2]. template<class CONT > . THnSparseT< CONT >::THnSparseT ; (; ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparseT.html:25176,inherit,inherited,25176,doc/master/classTHnSparseT.html,https://root.cern,https://root.cern/doc/master/classTHnSparseT.html,1,['inherit'],['inherited']
Modifiability," ; TProfile * fProfile_queryresult_IO;  ; TLegend * fProfLegend_evt;  ; TLegend * fProfLegend_mb;  ; TProof * fProof;  ; TPBReadType * fReadType;  ; Bool_t fReleaseCache;  ; Int_t fStart;  ; Int_t fStep;  ; Int_t fStop;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TProofBenchRun; TString fParList;  ; TProof * fProof;  ; TString fSelName;  ; TString fSelOption;  . #include <TProofBenchRunDataRead.h>. Inheritance diagram for TProofBenchRunDataRead:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofBenchRunDataRead(). TProofBenchRunDataRead::TProofBenchRunDataRead ; (; TProofBenchDataSet * ; pbds, . TPBReadType * ; readtype = 0, . TDirectory * ; dirproofbench = 0, . TProof * ; proof = 0, . TProofNodes * ; nodes = 0, . Long64_t ; nevents = -1, . Int_t ; ntries = 2, . Int_t ; start = 1, . Int_t ; stop = -1, . Int_t ; step = 1, . Int_t ; debug = 0 . ). Definition at line 58 of file TProofBenchRunDataRead.cxx. ◆ ~TProofBenchRunDataRead(). TProofBenchRunDataRead::~TProofBenchRunDataRead ; (; ). override . Destructor. ; Definition at line 98 of file TProofBenchRunDataRead.cxx. Member Function Documentation. ◆ BuildHistos(). void TProofBenchRunDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBenchRunDataRead.html:13605,inherit,inherited,13605,doc/master/classTProofBenchRunDataRead.html,https://root.cern,https://root.cern/doc/master/classTProofBenchRunDataRead.html,2,['inherit'],['inherited']
Modifiability," ; TString fSubBranchPrefix;  Prefix (e.g. if the branch name is ""A."" the prefix is ""A"". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TTreeReaderGenerator.h>. Inheritance diagram for ROOT::Internal::TBranchDescriptor:. This browser is not able to show S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html:10225,inherit,inherited,10225,doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,2,['inherit'],['inherited']
Modifiability," ; TString fTitle;  . Private Attributes; Int_t fBins;  ; Int_t fColor = 1;  ; bool fIsWeighted = false;  ; Int_t fMarkerType = 20;  ; std::vector< double > fSampleWeights;  ; std::vector< double > fSamplingDistr;  ; TString fVarName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/SamplingDistPlot.h>. Inheritance diagram for RooStats::SamplingDistPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SamplingDistPlot() [1/2]. SamplingDistPlot::SamplingDistPlot ; (; Int_t ; nbins = 100). Constructors for SamplingDistribution. ; SamplingDistPlot default constructor with bin size. ; Definition at line 45 of file SamplingDistPlot.cxx. ◆ SamplingDistPlot() [2/2]. SamplingDistPlot::SamplingDistPlot ; (; Int_t ; nbins, . double ; min, . double ; max . ). SamplingDistPlot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html:17285,inherit,inherited,17285,doc/master/classRooStats_1_1SamplingDistPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html,1,['inherit'],['inherited']
Modifiability, ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::MethodANNBase; TActivation * fActivation;  ; std::vector< TH1 * > fEpochMonHistB;  ; std::vector< TH1 * > fEpochMonHistS;  ; std::vector< TH1 * > fEpochMonHistW;  ; EEstimator fEstimator;  ; TH1F * fEstimatorHistTest;  ; TH1F * fEstimatorHistTrain;  ; TString fEstimatorS;  ; TActivation * fIdentity;  ; TNeuronInput * fInputCalculator;  ; TMatrixD fInvHessian;  zjh ;  ; Int_t fNcycles;  number of epochs to train ;  ; TString fNeuronInputType;  name of neuron input calculator class ;  ; TString fNeuronType;  name of neuron activation function class ;  ; TActivation * fOutput;  ; Int_t fRandomSeed;  random seed for initial synapse weights ;  ; std::vector< Int_t > fRegulatorIdx;  ; std::vector< Double_t > fRegulators;  ; TRandom3 * frgen;  ; TObjArray * fSynapses;  ; bool fUseRegulator;  zjh ;  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TMVA::ConvergenceTest; Float_t fCurrent,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html:37097,inherit,inherited,37097,doc/master/classTMVA_1_1MethodMLP.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html,1,['inherit'],['inherited']
Modifiability," ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TEveProjected; Float_t fDepth;  ; TEveProjectionManager * fManager;  ; TEveProjectable * fProjectable;  . #include <TEveCompound.h>. Inheritance diagram for TEveCompoundProjected:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveCompoundProjected() [1/2]. TEveCompoundProjected::TEveCompoundProjected ; (; const TEveCompoundProjected & ; ). private . ◆ TEveCompoundProjected() [2/2]. TEveCompoundProjected::TEveCompoundProjected ; (; ). Constructor. ; Definition at line 170 of file TEveCompound.cxx. ◆ ~TEveCompoundProjected(). TEveCompoundProjected::~TEveCompoundProjected ; (; ). inlineoverride . Definition at line 69 of file TEveCompound.h. Member Function Documentation. ◆ Class(). static TClass * TEveCompoundProjected::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveCompoundProjected::Class_N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:35056,inherit,inherited,35056,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,3,['inherit'],['inherited']
Modifiability," ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TEveProjected; Float_t fDepth;  ; TEveProjectionManager * fManager;  ; TEveProjectable * fProjectable;  . #include <TEveElement.h>. Inheritance diagram for TEveElementListProjected:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveElementListProjected() [1/2]. TEveElementListProjected::TEveElementListProjected ; (; const TEveElementListProjected & ; ). private . ◆ TEveElementListProjected() [2/2]. TEveElementListProjected::TEveElementListProjected ; (; ). Constructor. ; Definition at line 2157 of file TEveElement.cxx. ◆ ~TEveElementListProjected(). TEveElementListProjected::~TEveElementListProjected ; (; ). inlineoverride . Definition at line 488 of file TEveElement.h. Member Function Documentation. ◆ Class(). static TClass * TEveElementListProjected::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementListProjected.html:34233,inherit,inherited,34233,doc/master/classTEveElementListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveElementListProjected.html,3,['inherit'],['inherited']
Modifiability," ; UInt_t fNcols;  number of columns ;  ; UInt_t fNrows;  number of rows ;  ; Int_t fSep;  interval between frames ;  . Protected Member Functions; void CheckSanity ();  Sanity check various values. ;  ; void FindRowColSizes ();  Find the sizes of rows and columns needed to satisfy children's layout policies. ;  ; void FindRowColSizesHomogeneous ();  If the table is homogeneous make sure all col/rows are same size as biggest col/row. ;  ; void FindRowColSizesInit ();  Initialize values needed to determine the size of rows and columns. ;  ; void FindRowColSizesMultiplyAttached ();  Checks any children which span multiple col/rows. ;  ; void FindRowColSizesSinglyAttached ();  Determine the size of rows/cols needed for singly attached children. ;  ; void SetRowColSizes ();  This gets the new sizes needed to fit the table to the parent frame. ;  ; void SetRowColSizesInit ();  Initialize rows/cols. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void SetRowColResize (UInt_t real_size, UInt_t nthings, TableData_t *thing, Bool_t homogeneous);  If main frame is bigger or smaller than all children, expand/shrink to fill. ;  . Protected Attributes; TableData_t * fCol;  info about each column ;  ; Bool_t fHomogeneous;  all cols/rows same size ;  ; TList * fList;  list of frames to arrange ;  ; TGCompositeFrame * fMain;  container frame ;  ; TableData_t * fRow;  info about each row ;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . Private Member Functions;  TGTableLayout (const TGTableLayout &)=delete;  ; TGTableLayout & operator= (const TGTableLayout &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x0800",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableLayout.html:11654,inherit,inherited,11654,doc/master/classTGTableLayout.html,https://root.cern,https://root.cern/doc/master/classTGTableLayout.html,1,['inherit'],['inherited']
Modifiability," ; UInt_t fW;  width ;  ; Int_t fX;  x position ;  ; Int_t fY;  y position ;  . Private Member Functions;  TGRectMap (const TGRectMap &)=delete;  ; TGRectMap & operator= (const TGRectMap &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGSplitFrame.h>. Inheritance diagram for TGRectMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGRectMap() [1/2]. TGRectMap::TGRectMap ; (; const TGRectMap & ; ). privatedelete . ◆ TGRectMap() [2/2]. TGRectMap::TGRectMap ; (; Int_t ; rx, . Int_t ; ry, . UInt_t ; rw, . UInt_t ; rh . ). inline . Definition at line 35 of file TGSplitFrame.h. ◆ ~TGRectMap(). TGRectMap::~TGRectMap ; (; ). inlineoverride . Definition at line 37 of file TGSplitFrame.h. Member Function Documentation. ◆ Class(). static TClass * TGRectMap::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGRectMap::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRectMap.html:9864,inherit,inherited,9864,doc/master/classTGRectMap.html,https://root.cern,https://root.cern/doc/master/classTGRectMap.html,2,['inherit'],['inherited']
Modifiability," ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from RooPlotable; double _normValue = 0.0;  ; TString _yAxisLabel;  ; double _ymax = 0.0;  ; double _ymin = 0.0;  . Static Private Member Functions; static constexpr double relativeXEpsilon ();  The distance between two points x1 and x2 relative to the full plot range below which two points are considered identical. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCurve.h>. Inheritance diagram for RooCurve:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ WingMode. enum RooCurve::WingMode. EnumeratorNoWings ; Straight ; Extended . Definition at line 39 of file RooCurve.h. Constructor & Destructor Documentation. ◆ RooCurve() [1/4]. RooCurve::RooCurve ; (; ). Default constructor. ; Definition at line 84 of file RooCurve.cxx. ◆ RooCurve() [2/4]. RooCurve::RooCurve ; (; const RooAbsReal & ; f, . RooAbsRealLValue & ; x, . double ; xlo, . double ; xhi, . Int_t ; xbins, . double ; scaleFactor = 1, . const RooArgSet * ; normVars = nullptr, . double ; prec = 1e-3, . double ; resolution = 1e-3, . bool ; shiftToZero = false, . WingMode ; wmode = Extended, . Int_t ; nEvalError = -1, . Int_t ; doEEVal = false, . double ; eeVal = 0.0, . bool ; showProg = false . ). Create a 1-dim curve of the value of the specified re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:39713,inherit,inherited,39713,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,1,['inherit'],['inherited']
Modifiability," ; bool _relParam;  ; RooListProxy _x;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParamHistFunc.html:56281,inherit,inherited,56281,doc/master/classRooParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooParamHistFunc.html,1,['inherit'],['inherited']
Modifiability," ; bool update (bool isValid);  ; void updateErrors ();  ; void updateFitConfig ();  ; bool updateMinimizerOptions (bool canDifferentMinim=true);  . Private Attributes; RooMinimizer::Config _cfg;  ; ROOT::Fit::FitConfig _config;  fitter configuration (options and parameter settings) ;  ; TStopwatch _cumulTimer;  ; std::unique_ptr< TMatrixDSym > _extV;  ; std::unique_ptr< RooAbsMinimizerFcn > _fcn;  ; std::unique_ptr< ROOT::Math::Minimizer > _minimizer;  ! pointer to used minimizer ;  ; bool _profileStart = false;  ; std::unique_ptr< FitResult > _result;  ! pointer to the object containing the result of the fit ;  ; int _status = -99;  ; std::vector< std::pair< std::string, int > > _statusHistory;  ; TStopwatch _timer;  . Friends; class RooAbsMinimizerFcn;  ; class RooFit::TestStatistics::LikelihoodGradientJob;  ; class RooMinimizerFcn;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooMinimizer.h>. Inheritance diagram for RooMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ PrintLevel. enum RooMinimizer::PrintLevel. EnumeratorNone ; Reduced ; Normal ; ExtraForProblem ; Maximum . Definition at line 137 of file RooMinimizer.h. ◆ Strategy. enum RooMinimizer::Strategy. EnumeratorSpeed ; Balance ; Robustness . Definition at line 136 of file RooMinimizer.h. Constructor & Destructor Documentation. ◆ RooMinimizer(). RooMinimizer::RooMinimizer ; (; RooAbsReal & ; function, . Config const & ; cfg = {} . ). explicit . Construct MINUIT interface to given function. ; Function can be anything, but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2 (implemented by RooChi2Var). Other ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMinimizer.html:15530,inherit,inherited,15530,doc/master/classRooMinimizer.html,https://root.cern,https://root.cern/doc/master/classRooMinimizer.html,2,['inherit'],['inherited']
Modifiability," ; class  TBasket;  Manages buffers for branches of a Tree. More...;  ; class  TBasketSQL;  Implement TBasket for a SQL backend. More...;  ; class  TBranch;  A TTree is a list of TBranches. More...;  ; class  TBranchClones;  A Branch for the case of an array of clone objects. More...;  ; class  TBranchElement;  A Branch for the case of an object. More...;  ; class  TBranchObject;  A Branch for the case of an object. More...;  ; class  TBranchRef;  A branch containing and managing a TRefTable for TRef autoloading. More...;  ; class  TBranchSTL;  A Branch handling STL collection of pointers (vectors, lists, queues, sets and multisets) while storing them in split mode. More...;  ; class  TBufferSQL;  Implement TBuffer for a SQL backend. More...;  ; class  TChain;  A chain is a collection of files containing TTree objects. More...;  ; class  TChainElement;  A TChainElement describes a component of a TChain. More...;  ; class  TCollectionMethodBrowsable;  TCollectionMethodBrowsable extends TCollectionPropertyBrowsable by showing all methods of the collection itself. More...;  ; class  TCollectionPropertyBrowsable;  A tiny browser helper object (and its generator) for adding a virtual (as in ""not actually part of the class"", not in C++ virtual) ""@size()"" method to a collection. More...;  ; class  TCut;  A specialized string object used for TTree selections. More...;  ; class  TEntryList;  A List of entry numbers in a TTree or TChain. More...;  ; class  TEntryListArray;  A list of entries and subentries in a TTree or TChain. More...;  ; class  TEntryListBlock;  Used by TEntryList to store the entry numbers. More...;  ; class  TEntryListFromFile;  Manages entry lists from different files, when they are not loaded in memory at the same time. More...;  ; class  TEventList;   Legacy Code TEventList is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, usi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tree.html:2235,extend,extends,2235,doc/master/group__tree.html,https://root.cern,https://root.cern/doc/master/group__tree.html,1,['extend'],['extends']
Modifiability," ; const TGPicture * fPic;  icon picture ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiFrame;  ; class TGMdiTitleBar;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiTitleIcon.html:24843,inherit,inherited,24843,doc/master/classTGMdiTitleIcon.html,https://root.cern,https://root.cern/doc/master/classTGMdiTitleIcon.html,1,['inherit'],['inherited']
Modifiability," ; const TGPicture * fPic;  icon picture ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGIcon (const TGIcon &)=delete;  ; TGIcon & operator= (const TGIcon &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIcon.html:24033,inherit,inherited,24033,doc/master/classTGIcon.html,https://root.cern,https://root.cern/doc/master/classTGIcon.html,1,['inherit'],['inherited']
Modifiability," ; definedCols, . const ColumnNames_t & ; dataSourceColumns . ). Definition at line 611 of file RDFInterfaceUtils.cxx. ◆ GetAddress() [1/2]. ULong64_t ROOT::Internal::RDF::GetAddress ; (; std::vector< std::string > & ; p). inline . Definition at line 30 of file PyROOTHelpers.hxx. ◆ GetAddress() [2/2]. ULong64_t ROOT::Internal::RDF::GetAddress ; (; TTree & ; p). inline . Definition at line 34 of file PyROOTHelpers.hxx. ◆ GetBranchNames(). ColumnNames_t ROOT::Internal::RDF::GetBranchNames ; (; TTree & ; t, . bool ; allowDuplicates = true . ). Get all the branches names, including the ones of the friend trees. ; Definition at line 342 of file RLoopManager.cxx. ◆ GetBranchOrLeafTypeName(). std::string ROOT::Internal::RDF::GetBranchOrLeafTypeName ; (; TTree & ; t, . const std::string & ; colName . ). Return the typename of object colName stored in t, if any. ; Return an empty string if colName is not in t. Supported cases:; leaves corresponding to single values, variable- and fixed-length arrays, with following syntax:; ""leafname"", as long as TTree::GetLeaf resolves it; ""b1.b2...leafname"", as long as TTree::GetLeaf(""b1.b2...."", ""leafname"") resolves it. TBranchElements, as long as TTree::GetBranch resolves their names . Definition at line 172 of file RDFUtils.cxx. ◆ GetColumnReader(). template<typename T > . RDFDetail::RColumnReaderBase * ROOT::Internal::RDF::GetColumnReader ; (; unsigned int ; slot, . RColumnReaderBase * ; defineOrVariationReader, . RLoopManager & ; lm, . TTreeReader * ; r, . const std::string & ; colName . ). Definition at line 44 of file ColumnReaderUtils.hxx. ◆ GetColumnReaders() [1/2]. template<typename... ColTypes> . std::array< RDFDetail::RColumnReaderBase *, sizeof...(ColTypes)> ROOT::Internal::RDF::GetColumnReaders ; (; unsigned int ; slot, . TTreeReader * ; r, . TypeList< ColTypes... > ; , . const RColumnReadersInfo & ; colInfo, . const std::string & ; variationName = ""nominal"" . ). Create a group of column readers, one per type in the parameter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1RDF.html:30490,variab,variable,30490,doc/master/namespaceROOT_1_1Internal_1_1RDF.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1RDF.html,1,['variab'],['variable']
Modifiability," ; elist = 0 . ). virtual . Process a dataset which is stored on the master with name 'dsetname'. ; The syntax for dsetname is name[#[dir/]objname], e.g. ""mydset"" analysis of the first tree in the top dir of the dataset named ""mydset"" ""mydset#T"" analysis tree ""T"" in the top dir of the dataset named ""mydset"" ""mydset#adir/T"" analysis tree ""T"" in the dir ""adir"" of the dataset named ""mydset"" ""mydset#adir/"" analysis of the first tree in the dir ""adir"" of the dataset named ""mydset"" The component 'name' in its more general form contains also the group and user name following ""/<group>/<user>/<dsname>"". Each of these components can contain one or more wildcards '*', in which case all the datasets matching the expression are added together as a global dataset (wildcard support has been added in version 5.27/02). The last argument 'elist' specifies an entry- or event-list to be used as event selection. It is also possible (starting w/ version 5.27/02) to run on multiple datasets at once in a more flexible way that the one provided by wildcarding. There are three possibilities: 1) specifying the dataset names separated by the OR operator '|', e.g. dsetname = ""<dset1>|<dset2>|<dset3>|..."" in this case the datasets are a seen as a global unique dataset 2) specifying the dataset names separated by a ',' or a ' ', e.g. dsetname = ""<dset1>,<dset2> <dset3>,..."" in this case the datasets are processed one after the other and the selector is notified when switching dataset via a bit in the current processed element. 3) giving the path of a textfile where the dataset names are specified on one or multiple lines; the lines found are joined as in 1), unless the filepath is followed by a ',' (i.e. p->Process(""datasets.txt,"",...) with the dataset names listed in 'datasets.txt') in which case they are treated as in 2); the file is open in raw mode with TFile::Open and therefore it cane be remote, e.g. on a Web server. Each <dsetj> has the format specified above for the single dataset process",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:122742,flexible,flexible,122742,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['flexible'],['flexible']
Modifiability," ; end . ). inline . add variables . Return number of variables successfully added ; Definition at line 146 of file Minimizer.h. ◆ SetVariableStepSize(). bool ROOT::Math::Minimizer::SetVariableStepSize ; (; unsigned int ; ivar, . double ; value . ). virtual . set the step size of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 62 of file Minimizer.cxx. ◆ SetVariableUpperLimit(). bool ROOT::Math::Minimizer::SetVariableUpperLimit ; (; unsigned int ; ivar, . double ; upper . ). virtual . set the upper-limit of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 78 of file Minimizer.cxx. ◆ SetVariableValue(). bool ROOT::Math::Minimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; value . ). virtual . set the value of an already existing variable ; Reimplemented in TFumiliMinimizer, ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 53 of file Minimizer.cxx. ◆ SetVariableValues(). virtual bool ROOT::Math::Minimizer::SetVariableValues ; (; const double * ; x). inlinevirtual . set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ; Reimplemented in ROOT::Minuit2::Minuit2Minimizer, and ROOT::Math::BasicMinimizer.; Definition at line 187 of file Minimizer.h. ◆ Status(). int ROOT::Math::Minimizer::Status ; (; ); const. inline . status code of minimizer ; Definition at line 310 of file Minimizer.h. ◆ Strategy(). int ROOT::Math::Minimizer::Strategy ; (; ); const. inline . strategy ; Definition at line 307 of file Minimizer.h. ◆ Tolerance(). double ROOT::Math::Minimizer::Tolerance ; (; ); const. inline . absolute tolerance ; Definition at line 300 of file Minimizer.h. ◆ VariableIndex(). int ROOT::Math::Minimizer::VariableIndex ; (; const std::string & ; name); const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:34553,variab,variable,34553,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variable']
Modifiability," ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:59332,config,configuration,59332,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['config'],['configuration']
Modifiability," ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferText.html:32092,inherit,inherited,32092,doc/master/classTBufferText.html,https://root.cern,https://root.cern/doc/master/classTBufferText.html,4,['inherit'],['inherited']
Modifiability," ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Static Protected Attributes inherited from TBufferText; static const char * fgDoubleFmt = ""%.14e"";  ! printf argument for doubles, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ; static const char * fgFloatFmt = ""%e"";  ! printf argument for floats, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TBufferSQL2.h>. Inheritance diagram for TBufferSQL2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBufferSQL2() [1/3]. TBufferSQL2::TBufferSQL2 ; (; const TBufferSQL2 & ; ). protecteddelete . ◆ TBufferSQL2() [2/3]. TBufferSQL2::TBufferSQL2 ; (; ). p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL2.html:46517,inherit,inherited,46517,doc/master/classTBufferSQL2.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL2.html,4,['inherit'],['inherited']
Modifiability," ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Static Public Member Functions inherited from RooProjectedPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:66709,inherit,inherited,66709,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['inherit'],['inherited']
Modifiability," ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Protected Member Functions; void DoSetMinimOptions (const GSLSimAnParams &params);  Set the Minimizer options from the simulated annealing parameters. ;  ; void DoSetSimAnParameters (const MinimizerOptions &opt);  set minimizer option parameters from stored ROOT::Math::MinimizerOptions (fOpt) ;  ;  Protected Member Functions inherited from ROOT::Math::BasicMinimizer; bool CheckDimension () const;  ; bool CheckObjFunction () const;  ; MinimTransformFunction * CreateTransformation (std::vector< double > &startValues, const ROOT::Math::IMultiGradFunction *func=nullptr);  ; void SetFinalValues (const double *x, const MinimTransformFunction *func=nullptr);  ; void SetMinValue (double val);  . Private Attributes; ROOT::Math::GSLSimAnnealing fSolver;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . #include <Math/GSLSimAnMinimizer.h>. Inheritance diagram for ROOT::Math::GSLSimAnMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLSimAnMinimizer(). ROOT::Math::GSLSimAnMinimizer::GSLSimAnMinimizer ; (; int ; type = 0). Default constructor. ; Definition at line 33 of file GSLSimAnMinimizer.cxx. ◆ ~GSLSimAnMinimizer(). ROOT::Math::GSLSimAnMinimizer::~GSLSimAnMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 52 of file GSLSimAnMinimizer.cxx. Member Function Documentation. ◆ DoSetMinimOptions(). void ROOT::Math::GSLSimAnMinimizer::DoSetMinimOptions ; (; const GSLSimAnParams & ; params). protected . Set the Minimizer options from the simulated annealing parameters. ; Definition at line 148 of file GSLSimAnMinimiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html:12571,inherit,inherited,12571,doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,1,['inherit'],['inherited']
Modifiability," ; jobName, . Types::EMVA ; methodType, . const TString & ; methodTitle, . DataSetInfo & ; dsi, . const TString & ; theOption = """" . ). standard constructor ; Definition at line 237 of file MethodBase.cxx. ◆ MethodBase() [2/2]. TMVA::MethodBase::MethodBase ; (; Types::EMVA ; methodType, . DataSetInfo & ; dsi, . const TString & ; weightFile . ). constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ; Definition at line 303 of file MethodBase.cxx. ◆ ~MethodBase(). TMVA::MethodBase::~MethodBase ; (; void ; ). virtual . destructor ; Definition at line 364 of file MethodBase.cxx. Member Function Documentation. ◆ AddClassesXMLTo(). void TMVA::MethodBase::AddClassesXMLTo ; (; void * ; parent); const. private . write class info to XML ; Definition at line 1801 of file MethodBase.cxx. ◆ AddClassifierOutput(). void TMVA::MethodBase::AddClassifierOutput ; (; Types::ETreeType ; type). privatevirtual . prepare tree branch with the method's discriminating variable ; Definition at line 869 of file MethodBase.cxx. ◆ AddClassifierOutputProb(). void TMVA::MethodBase::AddClassifierOutputProb ; (; Types::ETreeType ; type). privatevirtual . prepare tree branch with the method's discriminating variable ; Definition at line 951 of file MethodBase.cxx. ◆ AddInfoItem(). void TMVA::MethodBase::AddInfoItem ; (; void * ; gi, . const TString & ; name, . const TString & ; value . ); const. private . xml writing ; Definition at line 1306 of file MethodBase.cxx. ◆ AddMulticlassOutput(). void TMVA::MethodBase::AddMulticlassOutput ; (; Types::ETreeType ; type). privatevirtual . prepare tree branch with the method's discriminating variable ; Definition at line 794 of file MethodBase.cxx. ◆ AddOutput(). void TMVA::MethodBase::AddOutput ; (; Types::ETreeType ; type, . Types::EAnalysisType ; analysisType . ). Definition at line 1315 of file MethodBase.cxx. ◆ AddRegressionOutput(). void TMVA::MethodBase::AddRegressionOutput ; (; Types::ETreeType ; type). privat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBase.html:35382,variab,variable,35382,doc/master/classTMVA_1_1MethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBase.html,1,['variab'],['variable']
Modifiability," ; source, . bool ; valueOnly = false, . bool ; setValDirty = true . ). overrideprotectedvirtual . Copy cache of another RooAbsArg to our cache. ; Reimplemented from RooAbsReal.; Reimplemented in RooRealVar.; Definition at line 394 of file RooAbsRealLValue.cxx. ◆ createHistogram() [1/11]. TH1F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const char * ; yAxisLabel . ); const. Create an empty 1D-histogram with appropriate scale and labels for this variable. ; This method uses the default plot range which can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which can be changed with setPlotBins(). The caller takes ownership of the returned object and is responsible for deleting it. ; Definition at line 687 of file RooAbsRealLValue.cxx. ◆ createHistogram() [2/11]. TH1F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const char * ; yAxisLabel, . const RooAbsBinning & ; bins . ); const. Create an empty 1D-histogram with appropriate scale and labels for this variable. ; Definition at line 727 of file RooAbsRealLValue.cxx. ◆ createHistogram() [3/11]. TH1F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const char * ; yAxisLabel, . double ; xlo, . double ; xhi, . Int_t ; nBins . ); const. Create an empty 1D-histogram with appropriate scale and labels for this variable. ; This method uses the default plot range which can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which can be changed with setPlotBins(). The caller takes ownership of the returned object and is responsible for deleting it. ; Definition at line 714 of file RooAbsRealLValue.cxx. ◆ createHistogram() [4/11]. TH2F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const RooAbsRealLValue & ; yvar, . const char * ; zAxisLabel, . const RooAbsBinning ** ; bins . ); const. Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ; Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsRealLValue.html:70157,variab,variable,70157,doc/master/classRooAbsRealLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsRealLValue.html,1,['variab'],['variable']
Modifiability," ; start, . const void * ; end, . const TLoopConfiguration * ; loopconf, . const TConfiguration * ; conf . ). inline . Definition at line 1630 of file TStreamerInfoActions.cxx. ◆ UseCacheVectorPtrLoop(). Int_t TStreamerInfoActions::UseCacheVectorPtrLoop ; (; TBuffer & ; b, . void * ; start, . const void * ; end, . const TConfiguration * ; conf . ). inline . Definition at line 1604 of file TStreamerInfoActions.cxx. ◆ WriteBasicType(). template<typename T > . Int_t TStreamerInfoActions::WriteBasicType ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 251 of file TStreamerInfoActions.cxx. ◆ WriteLoopInvalid(). Int_t TStreamerInfoActions::WriteLoopInvalid ; (; TBuffer & ; , . void * ; , . const void * ; , . const TConfiguration * ; config . ). Definition at line 1691 of file TStreamerInfoActions.cxx. ◆ WriteSTLp(). template<bool kIsTextT> . Int_t TStreamerInfoActions::WriteSTLp ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ; Definition at line 345 of file TStreamerInfoActions.cxx. ◆ WriteStreamerLoop(). template<bool kIsTextT> . Int_t TStreamerInfoActions::WriteStreamerLoop ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ; Definition at line 505 of file TStreamerInfoActions.cxx. ◆ WriteTextBaseClass(). Int_t TStreamerInfoActions::WriteTextBaseClass ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 275 of file TStreamerInfoActions.cxx. ◆ WriteTextStreamer(). Int_t TStreamerInfoActions::WriteTextStreamer ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 283 of file TStreamerInfoActions.cxx. ◆ WriteTextTNamed(). I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:18648,config,config,18648,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability," ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGPictureButton * fButton [5];  MDI picture buttons. ;  ; TGLayoutHints * fCloseHint;  Layout hints. ;  ; TGLayoutHints * fDefaultHint;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiButtons.html:24583,inherit,inherited,24583,doc/master/classTGMdiButtons.html,https://root.cern,https://root.cern/doc/master/classTGMdiButtons.html,2,['inherit'],['inherited']
Modifiability," ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoSphere (const TGeoSphere &)=delete;  ; TGeoSphere & operator= (const TGeoSphere &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fNseg;  ; Int_t fNz;  ; Double_t fPhi1;  ; Double_t fPhi2;  ; Double_t fRmax;  ; Double_t fRmin;  ; Double_t fTheta1;  ; Double_t fTheta2;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSphere.html:20006,inherit,inherited,20006,doc/master/classTGeoSphere.html,https://root.cern,https://root.cern/doc/master/classTGeoSphere.html,1,['inherit'],['inherited']
Modifiability," ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Types; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrame.html:21193,inherit,inherited,21193,doc/master/classTGFrame.html,https://root.cern,https://root.cern/doc/master/classTGFrame.html,1,['inherit'],['inherited']
Modifiability," ; static bool ProduceImages (const std::string &fname, const std::vector< std::string > &jsons, const std::vector< int > &widths, const std::vector< int > &heights, const char *batch_file=nullptr);  Produce image file(s) using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  ; static bool ProduceImages (const std::vector< std::string > &fnames, const std::vector< std::string > &jsons, const std::vector< int > &widths, const std::vector< int > &heights, const char *batch_file=nullptr);  Produce image file(s) using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  ; static std::vector< std::string > ProduceImagesNames (const std::string &fname, unsigned nfiles=1);  Produce vector of file names for specified file pattern Depending from supported file forma. ;  ;  Static Protected Member Functions inherited from ROOT::RWebDisplayHandle; static bool CheckIfCanProduceImages (RWebDisplayArgs &args);  Checks if configured browser can be used for image production. ;  ; static std::unique_ptr< Creator > & FindCreator (const std::string &name, const std::string &libname="""");  Search for specific browser creator If not found, try to add one. ;  ; static std::map< std::string, std::unique_ptr< Creator > > & GetMap ();  Static holder of registered creators of web displays. ;  . Inheritance diagram for ROOT::RWebBrowserHandle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ browser_process_id. typedef pid_t ROOT::RWebBrowserHandle::browser_process_id. private . Definition at line 110 of file RWebDisplayHandle.cxx. Constructor & Destructor Documentation. ◆ RWebBrowserHandle() [1/2]. ROOT::RWebBrowserHandle::RWebBrowserHandle ; (; const std::string & ; url, . const std::string & ; tmpdir, . const std::string & ; tmpfile, . const std::string & ; dump . ). inline . Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebBrowserHandle.html:3693,inherit,inherited,3693,doc/master/classROOT_1_1RWebBrowserHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebBrowserHandle.html,2,"['config', 'inherit']","['configured', 'inherited']"
Modifiability," ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBukinPdf.h>. Inheritance diagram for RooBukinPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooBukinPdf() [1/3]. RooBukinPdf::RooBukinPdf ; (; ). inline . Definition at line 32 of file RooBukinPdf.h. ◆ RooBukinPdf() [2/3]. RooBukinPdf::RooBukinPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _x, . RooAbsReal & ; _Xp, . RooAbsReal & ; _sigp, . RooAbsReal & ; _xi, . RooAbsReal & ; _rho1, . RooAbsReal & ; _rho2 . ). Construct a Bukin PDF. ; Parameters. nameThe name of the PDF for RooFit's bookkeeping. ; titleThe title for e.g. plotting it. ; _xThe variable. ; _XpThe peak position. ; _sigpThe peak width as FWHM divided by 2*sqrt(2*log(2))=2.35 ; _xiPeak asymmetry. Use values around 0. ; _rho1Left tail. Use slightly negative starting values. ; _rho2Right tail. Use slightly positive starting values. . Definition at line 49 of file RooBukinPdf.cxx. ◆ RooBukinPdf() [3/3]. RooBukinPdf::RooBukinPdf ; (; const RooBukinPdf & ; other, . const char * ; name = nullptr . ). Copy a Bukin PDF. ; Definition at line 71 of file RooBukinPdf.cxx. Member Function Documentation. ◆ canComputeBatchWithCuda(). bool RooBukinPdf::canComputeBatchWithCuda ; (; ); const. inlineoverrideprotectedvirtual . Reimplemented from RooAbsArg.; Definition at line 51 of file RooBukinPdf.h. ◆ Class(). static TClass * RooBukinPdf::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooBukinPdf::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooBukinPdf::Class_Version ; (; )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBukinPdf.html:74112,variab,variable,74112,doc/master/classRooBukinPdf.html,https://root.cern,https://root.cern/doc/master/classRooBukinPdf.html,1,['variab'],['variable']
Modifiability," ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Copy (TObject &hnew) const override;  Copy axis3d. ;  ; void InitSet ();  Initialization. ;  ; Bool_t SwitchZoom ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TAxis fAxis [3];  ; TString fOption;  ; TAxis * fSelected;  ; Bool_t fStickyZoom;  ; Bool_t fZoomMode;  The selected axis to play with. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static const char * fgRulerName = ""axis3druler"";  . Private Member Functions; Int_t AxisChoice (Option_t *axis) const;  Return the axis index by its name. ;  ; void Build ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 ));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis3D.html:16422,inherit,inherited,16422,doc/master/classTAxis3D.html,https://root.cern,https://root.cern/doc/master/classTAxis3D.html,1,['inherit'],['inherited']
Modifiability," ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetMaxTransferSize (Long64_t maxsz);  Set max transfer size. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLog.html:13803,inherit,inherited,13803,doc/master/classTProofLog.html,https://root.cern,https://root.cern/doc/master/classTProofLog.html,1,['inherit'],['inherited']
Modifiability," ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGMimeTypes (const TGMimeTypes &gmt);  Copy constructor. ;  ; TGMime * Find (const char *filename);  Given a filename find the matching mime type object. ;  ; TGMimeTypes & operator= (const TGMimeTypes &gmt);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fChanged;  true if file has changed ;  ; TGClient * fClient;  client to which mime types belong (display server) ;  ; TString fFilename;  file name of mime type file ;  ; TOrdCollection * fList;  list of mime types ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMimeTypes.html:9937,inherit,inherited,9937,doc/master/classTGMimeTypes.html,https://root.cern,https://root.cern/doc/master/classTGMimeTypes.html,1,['inherit'],['inherited']
Modifiability," ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  Flag indicating that classes compiled OK. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::map< TString, ClassRelInfo > _c2fmap;  ; bool _compiledOK;  ; std::map< TString, ExtraHeader > _ehmap;  ; std::map< TString, ClassFiles > _fmap;  ; RooWorkspace * _wspace;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooWorkspace.h>. Inheritance diagram for RooWorkspace::CodeRepo:. This browser is not able to show SVG: try Firefox, Chrome, Safar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html:9847,inherit,inherited,9847,doc/master/classRooWorkspace_1_1CodeRepo.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html,1,['inherit'],['inherited']
Modifiability," ; static const char * DeclFileName ();  . Protected Attributes; double fZ {0};  Z position of text. ;  ;  Protected Attributes inherited from TLatex; const Char_t * fError {nullptr};  ! error code ;  ; Double_t fFactorPos;  ! Relative position of subscripts and superscripts ;  ; Double_t fFactorSize;  ! Relative size of subscripts and superscripts ;  ; Bool_t fItalic;  ! Currently inside italic operator ;  ; Int_t fLimitFactorSize;  lower bound for subscripts/superscripts size ;  ; Double_t fOriginSize;  Font size of the starting font. ;  ; Bool_t fShow;  ! is true during the second pass (Painting) ;  ; std::vector< TLatexFormSize > fTabSize;  ! array of values for the different zones ;  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TLatex; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:26628,inherit,inherited,26628,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,2,['inherit'],['inherited']
Modifiability," ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ;  ; Int_t MapOptions (const Int_t *kind);  transfers the r2r_kind parameters to fftw type ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; void * fKind;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TVirtualFFT; static TString fgDefault = """";  ; static TVirtualFFT * fgFFT = nullptr;  . #include <TFFTReal.h>. Inheritance diagram for TFFTReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFFTReal() [1/3]. TFFTR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTReal.html:14632,inherit,inherited,14632,doc/master/classTFFTReal.html,https://root.cern,https://root.cern/doc/master/classTFFTReal.html,1,['inherit'],['inherited']
Modifiability," ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Public Attributes; float fEtaSize {0};  ; Double_t fPhi;  ; float fPhiSize {0};  ; Double_t fPt;  ; TRefArray fTracks;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TParticle; Double_t fCalcMass;  ; Int_t fDaughter [2];  ; Double_t fE;  ; Int_t fMother [2];  ; TPartic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classJet.html:15121,inherit,inherited,15121,doc/master/classJet.html,https://root.cern,https://root.cern/doc/master/classJet.html,1,['inherit'],['inherited']
Modifiability," ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate one event. ;  ; void initGenerator (const RooArgSet &theEvent) override;  Perform one-time initialization of the generator context. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::unique_ptr< RooAbsReal > _acceptRejectFunc;  Projection function to be passed to accept/reject sampler. ;  ; double _area {0.};  ; RooArgSet _cloneSet;  Clone of all nodes of input p.d.f. ;  ; Int_t _code;  Internal generation code. ;  ; RooArgSet _directVars;  ; std::unique_ptr< RooAbsNumGenerator > _generator;  MC sampling generation engine. ;  ; double _maxProb {0.};  ; std::unique_ptr< RooRealVar > _maxVar;  Variable holding maximum value of p.d.f. ;  ; double _norm {0.};  Maximum probability, p.d.f area and normalization. ;  ; RooArgSet _otherVars;  List of observables generated internally, randomly, and by accept/reject sampling. ;  ; RooAbsPdf * _pdfClone = nullptr;  Clone of input p.d.f. ;  ; RooArgSet _uniformVars;  ; Int_t _updateFMaxPerEvent;  If true, maximum p.d.f value needs to be recalculated for each event. ;  ;  Protected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenContext.html:14688,inherit,inherited,14688,doc/master/classRooGenContext.html,https://root.cern,https://root.cern/doc/master/classRooGenContext.html,1,['inherit'],['inherited']
Modifiability," ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooConvGenContext (const RooConvGenContext &other);  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString _convVarName;  Name of convolution variable. ;  ; RooRealVar * _cvModel {nullptr};  Convolution variable in resModel event. ;  ; RooRealVar * _cvOut {nullptr};  Convolution variable in output event. ;  ; RooRealVar * _cvPdf {nullptr};  Convolution variable in PDFxTruth event. ;  ; std::unique_ptr< RooArgSet > _modelCloneSet;  Owner of resModel clone. ;  ; std::unique_ptr< RooAbsGenContext > _modelGen;  Resolution model generator context. ;  ; std::unique_ptr< RooArgSet > _modelVars;  Holder of resModel event. ;  ; std::unique_ptr< RooArgSet > _modelVarsOwned;  Owning version of modelVars ;. ;  ; std::unique_ptr< RooArgSet > _pdfCloneSet;  Owner of PDF clone. ;  ; std::unique_ptr< RooAbsGenContext > _pdfGen;  Physics model generator context. ;  ; std::unique_ptr< RooArgSet > _pdfVars;  Holder of PDF x truth event. ;  ; std::unique_ptr< RooArgSet > _pdfVarsOwned;  Owning version of pdfVars ;. ;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvGenContext.html:15534,variab,variable,15534,doc/master/classRooConvGenContext.html,https://root.cern,https://root.cern/doc/master/classRooConvGenContext.html,1,['variab'],['variable']
Modifiability," ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TMVA::PyMethodBase; static PyObject * fGlobalNS = NULL;  ; static PyObject * fMain = NULL;  ; static PyObject * fModulePickle = NULL;  ; static PyObject * fPickleDumps = NULL;  ; static PyObject * fPickleLoads = NULL;  . #include <TMVA/MethodPyGTB.h>. Inheritance diagram for TMVA::MethodPyGTB:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MethodPyGTB() [1/2]. MethodPyGTB::MethodPyGTB ; (; const TString & ; jobName, . const TString & ; methodTitle, . DataSetInfo & ; theData, . const TString & ; theOption = """" . ). Definition at line 63 of file MethodPyGTB.cxx. ◆ MethodPyGTB() [2/2]. MethodPyGTB::MethodPyGTB ; (; DataSetInfo & ; dsi, . const TString & ; theWeightFile . ). Definition at line 86 of file MethodPyGTB.cxx. ◆ ~MethodPyGTB(). MethodPyGTB::~MethodPyGTB ; (; void ; ). Definition at line 107 of file MethodPyGTB.cxx. Member Function Documentation. ◆ AddWeightsXMLTo(). virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyGTB.html:29814,inherit,inherited,29814,doc/master/classTMVA_1_1MethodPyGTB.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyGTB.html,3,['inherit'],['inherited']
Modifiability," ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TMVA::PyMethodBase; static PyObject * fGlobalNS = NULL;  ; static PyObject * fMain = NULL;  ; static PyObject * fModulePickle = NULL;  ; static PyObject * fPickleDumps = NULL;  ; static PyObject * fPickleLoads = NULL;  . #include <TMVA/MethodPyRandomForest.h>. Inheritance diagram for TMVA::MethodPyRandomForest:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MethodPyRandomForest() [1/2]. MethodPyRandomForest::MethodPyRandomForest ; (; const TString & ; jobName, . const TString & ; methodTitle, . DataSetInfo & ; theData, . const TString & ; theOption = """" . ). Definition at line 61 of file MethodPyRandomForest.cxx. ◆ MethodPyRandomForest() [2/2]. MethodPyRandomForest::MethodPyRandomForest ; (; DataSetInfo & ; dsi, . const TString & ; theWeightFile . ). Definition at line 85 of file MethodPyRandomForest.cxx. ◆ ~MethodPyRandomForest(). MethodPyRandomForest::~MethodPyRandomForest ; (; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyRandomForest.html:29913,inherit,inherited,29913,doc/master/classTMVA_1_1MethodPyRandomForest.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyRandomForest.html,3,['inherit'],['inherited']
Modifiability," ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSQLRow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CopyFieldValue (Int_t field);  Extracts field value from statement. ;  ;  Protected Member Functions inherited from TSQLRow;  TSQLRow ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char ** fBuffer {nullptr};  ; Int_t fFieldCount {0};  ; SQLHSTMT fHstmt;  ; ULong_t * fLengths {nullptr};  . Private Member Functions;  TODBCRow (const TODBCRow &)=delete;  ; TODBCRow & operator= (const TODBCRow &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTODBCRow.html:9850,inherit,inherited,9850,doc/master/classTODBCRow.html,https://root.cern,https://root.cern/doc/master/classTODBCRow.html,2,['inherit'],['inherited']
Modifiability," ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fDefXSize;  scene volume ;  ; Double_t fDefYSize;  ; Bool_t fDollyToZoom;  ; Bool_t fEnableRotate;  ; EType fType;  ; TGLBoundingBox fVolume;  ; Double_t fZoom;  x, y size of scene from camera view ;  ; Double_t fZoomDefault;  ; Double_t fZoomMax;  ; Double_t fZoomMin;  . Static Private Attributes; static UInt_t fgZoomDeltaSens = 500;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGLCamera; void UpdateCache () const;  largest box diagonal seen in OfInterest() - used when bootstrapping interest box ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGLCamera; Bool_t fCacheDirty;  ; TGLMatrix fCamBase;  ; TGLMatrix fCamTrans;  ; TGLVector3 * fCenter;  ; TGLMatrix fClipM;  modelView matrix (cached) ;  ; TGLVector3 fDefCenter;  ; Double_t fDollyDefault;  last applied far-clip ;  ; Double_t fDollyDistance;  ; TGLVector3 fExtCenter;  ; Bool_t fExternalCenter;  ; Double_t fFarClip;  last applied near-clip ;  ; TGLVector3 fFDCenter;  ; Bool_t fFixDefCenter;  ; TGLPlane fFrustumPlanes [kPlanesPerFrustum];  object space clip matrix (cached) ;  ; TGLBoundingBox fInterestBox;  viewport (GL coords - origin bottom left) ;  ; Double_t fLargestSeen;  the interest box - created in UpdateInterest() ;  ; TGLMatrix fLastNoPickProjM;  timestamp ;  ; TGLMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLOrthoCamera.html:19210,inherit,inherited,19210,doc/master/classTGLOrthoCamera.html,https://root.cern,https://root.cern/doc/master/classTGLOrthoCamera.html,3,['inherit'],['inherited']
Modifiability," ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooAddGenContext (const RooAddGenContext &other);  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Randomly choose one of the component contexts to generate this event, with a probability proportional to its coefficient. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context. ;  ; void updateThresholds ();  Update the cumulative threshold table from the current coefficient values. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< double > _coefThresh;  [_nComp] Array of coefficient thresholds ;  ; std::vector< std::unique_ptr< RooAbsGenContext > > _gcList;  List of component generator contexts. ;  ; bool _isModel;  Are we generating from a RooAddPdf or a RooAddModel. ;  ; Int_t _nComp;  Number of PDF components. ;  ; AddCacheElem * _pcache = nullptr;  ! RooAddPdf cache element ;  ; RooAbsPdf * _pdf;  Pointer to cloned p.d.f. ;  ; std::unique_ptr< RooArgSet > _pdfSet;  Set owned all nodes of internal clone of p.d.f. ;  ; std::unique_ptr< RooArgSet > _vars;  ;  Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddGenContext.html:14983,inherit,inherited,14983,doc/master/classRooAddGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAddGenContext.html,1,['inherit'],['inherited']
Modifiability," ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEllipse.html:29820,inherit,inherited,29820,doc/master/classRooEllipse.html,https://root.cern,https://root.cern/doc/master/classRooEllipse.html,1,['inherit'],['inherited']
Modifiability," ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; enum  EBits { kBitIsScopedEnum = (1ULL << ( 14 )); };  . Private Attributes; TClass * fClass = nullptr;  Interpreter information, owned by TEnum. ;  ; THashList fConstantList;  ; ClassInfo_t * fInfo = nullptr;  ; std::string fQualName;  Owning class. ;  ; EDataType fUnderlyingType = kInt_t;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TEnum.h>. Inheritance diagram for TEnum:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EBits. enum TEnum::EBits. private . EnumeratorkBitIsScopedEnum The enum is an enum class. . Definition at line 42 of file TEnum.h. ◆ ESearchAction. enum TEnum::ESearchAction. EnumeratorkNone ; kAutoload ; kInterpLookup ; kALoadAndInterpLookup . Definition at line 48 of file TEnum.h. Constructor & Destructor Documentation. ◆ TEnum() [1/3]. TEnum::TEnum ; (; ). inline . Definition at line 54 of file TEnum.h. ◆ TEnum() [2/3]. TEnum::TEnum ; (; const char * ; name, . DeclId_t ; declid, . TClass * ; cls . ). Constructor for TEnum class. ; It takes the name of the TEnum type, interpreter info and surrounding class the enum it is not globalat namespace scope. Constant List is owner if enum not on global scope (thus constants not in TROOT::GetListOfGlobals).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTEnum.html:14531,inherit,inherited,14531,doc/v632/classTEnum.html,https://root.cern,https://root.cern/doc/v632/classTEnum.html,2,['inherit'],['inherited']
Modifiability," ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TFile * fFile;  currently open file fCurrent points to the currently open list ;  ; TObjArray * fFileNames;  ! points to the fFiles data member of the corresponding chain ;  ; TString fListFileName;  from this string names of all files can be found ;  ; TString fListName;  name of the list ;  ; Long64_t * fListOffset;  [fNFiles] numbers of entries in ind. lists ;  ; Int_t fNFiles;  total number of files ;  ;  Protected Attributes inherited from TEntryList; TObjArray * fBlocks;  blocks with indices of passing events (TEntryListBlocks) ;  ; TEntryList * fCurrent;  ! currently filled entry list ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this tree ;  ; Long64_t fEntriesToProcess;  used on proof to set the number of entries to process in a packet ;  ; TString fFileName;  name of the file, where the tree is ;  ; Long64_t fLastIndexQueried;  ! used to optimize GetEntry() function from a loop ;  ; Long64_t fLastIndexReturned;  ! used to optimize GetEntry() function from a loop ;  ; TList * fLists;  a list of underlying entry lists for each tree of a chain ;  ; Long64_t fN;  number of entries in the list ;  ; Int_t fNBlocks;  number of TEntryListBlocks ;  ; bool fReapply;  If true, TTree::Draw will 'reapply' the original cut. ;  ; bool fShift;  ! true when some sub-lists don't correspond to trees (when the entry list is used as input in TChain) ;  ; ULong_t fStringHash;  ! Hash value of a string of treename and filename ;  ; TString fTreeName;  name of the tree ;  ; Int_t fTreeNumber;  ! the index of the tree in the chain (used when the entry list is used as input (TTree::SetEntryList()) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static constexpr auto kBigNumber = std::numeric_limits<Long64_t>:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryListFromFile.html:16727,inherit,inherited,16727,doc/master/classTEntryListFromFile.html,https://root.cern,https://root.cern/doc/master/classTEntryListFromFile.html,1,['inherit'],['inherited']
Modifiability," ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TBufferSQL (const TBufferSQL &);  ; void operator= (const TBufferSQL &);  . Private Attributes; std::vector< Int_t > * fColumnVec {nullptr};  ; TString * fInsertQuery {nullptr};  ; std::vector< Int_t >::const_iterator fIter;  ; TSQLRow ** fRowPtr {nullptr};  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL.html:33844,inherit,inherited,33844,doc/master/classTBufferSQL.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL.html,2,['inherit'],['inherited']
Modifiability," ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Window_t fKey;  ; Window_t fValue;  . Friends; class TRecorderReplaying;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecWinPair:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecWinPair(). TRecWinPair::TRecWinPair ; (; Window_t ; key, . Window_t ; value . ). inline . Definition at line 259 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecWinPair::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecWinPair::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecWinPair::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 261 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecWinPair::DeclFileName ; (; ). inline",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecWinPair.html:9966,inherit,inherited,9966,doc/master/classTRecWinPair.html,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html,2,['inherit'],['inherited']
Modifiability," ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void aggregateSummaryOutput (TList *chunkList);  ; void registerSummaryOutput (const RooArgSet &allVars, const RooArgSet &varsWithError=RooArgSet(), const RooArgSet &varsWithAsymError=RooArgSet());  ; void storeDetailedOutput (std::unique_ptr< TNamed > object);  ; void storeSummaryOutput (const RooArgSet &vars);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; RooLinkedList * _detailData = nullptr;  ! ;  ; bool _ownDetailData = true;  ; bool _storeDetails = false;  ; RooDataSet * _summaryData = nullptr;  ! ;  . Friends; class RooStudyManager;  ; class RooStudyPackage;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooAbsStudy.h>. Inheritance diagram for RooAbsStudy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooAbsStudy() [1/3]. RooAbsStudy::RooAbsStudy ; (; ). default . ◆ R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsStudy.html:11588,inherit,inherited,11588,doc/master/classRooAbsStudy.html,https://root.cern,https://root.cern/doc/master/classRooAbsStudy.html,1,['inherit'],['inherited']
Modifiability," ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsGenContext.html:13952,inherit,inherited,13952,doc/master/classRooAbsGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAbsGenContext.html,1,['inherit'],['inherited']
Modifiability," ; static void printMetaArgs (RooArgList const &funcList, RooArgList const &coefList, std::ostream &os);  ; static void setCacheAndTrackHints (RooArgList const &funcList, RooArgSet &trackNodes);  ; static std::string translateImpl (RooFit::Detail::CodeSquashContext &ctx, RooAbsArg const *klass, RooArgList const &funcList, RooArgList const &coefList, bool normalize=false);  . Friends; class RooAddition;  ; class RooAddPdf;  ; class RooRealSumFunc;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; typedef std::map< constRooAbsArg *, std::pair< std::string, std::list< EvalError > > >::const_iterator EvalErrorIter;  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:68298,inherit,inherited,68298,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,4,['inherit'],['inherited']
Modifiability," ; std::mutex fMutex;  ! protect list of engines ;  ; Int_t fSendCnt {0};  ! counter for completed send operations ;  ; Bool_t fSyncMode {kTRUE};  ! is handler runs in synchronous mode (default, no multi-threading) ;  . Friends; class THttpServer;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <THttpWSHandler.h>. Inheritance diagram for THttpWSHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THttpWSHandler(). THttpWSHandler::THttpWSHandler ; (; const char * ; name, . const char * ; title, . Bool_t ; syncmode = kTRUE . ). protected . normal constructor ; Definition at line 74 of file THttpWSHandler.cxx. ◆ ~THttpWSHandler(). THttpWSHandler::~THttpWSHandler ; (; ). virtual . destructor Make sure that all sending threads are stopped correctly ; Definition at line 82 of file THttpWSHandler.cxx. Member Function Documentation. ◆ AllowMTProcess(). virtual Bool_t THttpWSHandler::AllowMTProcess ; (; ); const. inlinevirtual . Allow processing of WS requests in arbitrary thread. ; Reimplemented in ROOT::RWebWindowWSHandler.; Definition at line 85 of file THttpWSHandler.h. ◆ AllowMTSend(). virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpWSHandler.html:16365,inherit,inherited,16365,doc/master/classTHttpWSHandler.html,https://root.cern,https://root.cern/doc/master/classTHttpWSHandler.html,2,['inherit'],['inherited']
Modifiability," ; std::string fName;  ; Bool_t fPickable {false};  ; std::unique_ptr< REveRenderData > fRenderData;  Externally assigned and controlled user data. ;  ; Bool_t fRnrChildren {kTRUE};  ; Bool_t fRnrSelf {kTRUE};  ; REveScene * fScene {nullptr};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from ROOT::Experimental::REveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from ROOT::Experimental::REveSecondarySelectable; Bool_t fAlwaysSecSelect {kFALSE};  ; SelectionSet_t fHighlightedSet;  ; SelectionSet_t fSelectedSet;  . Private Member Functions;  REveStraightLineSet (const REveStraightLineSet &)=delete;  ; REveStraightLineSet & operator= (const REveStraightLineSet &)=delete;  . Additional Inherited Members;  Public Types inherited from ROOT::Experimental::REveElement; typedef std::list< REveAunt * > AuntList_t;  ; enum  EChangeBits { ;   kCBColorSelection = BIT(0); , kCBTransBBox = BIT(1); , kCBObjProps = BIT(2); , kCBVisibility = BIT(3); , ;   kCBElementAdded = BIT(4). };  ; typedef std::list< REveElement * > List_t;  ; typedef std::set< REveElement * > Set_t;  ;  Public Types inherited from ROOT::Experimental::REveProjectable; typedef std::list< REveProjected * > ProjList_t;  ;  Public Types inherited from ROOT::Experimental::REveSecondarySelectable; typedef std::set< Int_t > SelectionSet_t;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html:20869,inherit,inherited,20869,doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,2,['inherit'],['inherited']
Modifiability," ; std::unique_ptr< RooDataHist > _hist;  Histogram. ;  ; RooAbsPdf * _pdf;  Pointer to cloned p.d.f. ;  ; RooArgSet _pdfSet;  Set owned all nodes of internal clone of p.d.f. ;  ; std::unique_ptr< RooArgSet > _vars;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinnedGenContext.html:15608,inherit,inherited,15608,doc/master/classRooBinnedGenContext.html,https://root.cern,https://root.cern/doc/master/classRooBinnedGenContext.html,1,['inherit'],['inherited']
Modifiability," ; t = """" . ). Constructor. ; Definition at line 51 of file TEveJetCone.cxx. ◆ ~TEveJetCone(). TEveJetCone::~TEveJetCone ; (; ). inlineoverride . Definition at line 49 of file TEveJetCone.h. Member Function Documentation. ◆ AddCone(). Int_t TEveJetCone::AddCone ; (; Float_t ; eta, . Float_t ; phi, . Float_t ; cone_r, . Float_t ; length = 0 . ). Add jet cone. ; parameters are :; (eta,phi) : of the center/leading particle; cone_r : cone radius in eta-phi space; length : length of the cone; if cylinder is set and length is adapted to cylinder.; if length is given, it will be used as scalar factor. if cylinder is not set, length is used as length of the cone Return 0 on success. . Definition at line 92 of file TEveJetCone.cxx. ◆ AddEllipticCone(). Int_t TEveJetCone::AddEllipticCone ; (; Float_t ; eta, . Float_t ; phi, . Float_t ; reta, . Float_t ; rphi, . Float_t ; length = 0 . ). Add jet cone. ; parameters are :; (eta,phi) : of the center/leading particle; (reta, rphi) : radius of cone in eta-phi space; length : length of the cone; if cylinder is set and length is adapted to cylinder.; if length is given, it will be used as scalar factor. if cylinder is not set, length is used as length of the cone Returns 0 on success. . Definition at line 108 of file TEveJetCone.cxx. ◆ CalcBaseVec() [1/2]. TEveVector TEveJetCone::CalcBaseVec ; (; Float_t ; alpha); const. protected . Returns point on the base of the cone with internal angle alpha: alpha = 0 -> max eta, alpha = pi/2 -> max phi, ... ; Definition at line 166 of file TEveJetCone.cxx. ◆ CalcBaseVec() [2/2]. TEveVector TEveJetCone::CalcBaseVec ; (; Float_t ; eta, . Float_t ; phi . ); const. protected . Returns point on the base of the cone with given eta and phi. ; Definition at line 135 of file TEveJetCone.cxx. ◆ CalcEtaPhiVec(). TEveVector TEveJetCone::CalcEtaPhiVec ; (; Float_t ; eta, . Float_t ; phi . ); const. protected . Fill TEveVector with eta and phi, magnitude 1. ; Definition at line 125 of file TEveJetCone.cxx. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveJetCone.html:41135,adapt,adapted,41135,doc/master/classTEveJetCone.html,https://root.cern,https://root.cern/doc/master/classTEveJetCone.html,1,['adapt'],['adapted']
Modifiability," ; typedef bool(* ExistingTypeCheck_t) (const std::string &tname, std::string &result);  . Public Member Functions;  TClingLookupHelper (cling::Interpreter &interpreter, TNormalizedCtxt &normCtxt, ExistingTypeCheck_t existingTypeCheck, AutoParse_t autoParse, bool *shuttingDownPtr, const int *pgDebug=nullptr);  ; virtual ~TClingLookupHelper ();  ; bool ExistingTypeCheck (const std::string &tname, std::string &result) override;  Helper routine to ry hard to avoid looking up in the Cling database as this could enduce an unwanted autoparsing. ;  ; void GetPartiallyDesugaredName (std::string &nameLong) override;  ; bool GetPartiallyDesugaredNameWithScopeHandling (const std::string &tname, std::string &result, bool dropstd=true) override;  We assume that we have a simple type: [const] typename[*&][const]. ;  ; bool IsAlreadyPartiallyDesugaredName (const std::string &nondef, const std::string &nameLong) override;  ; bool IsDeclaredScope (const std::string &base, bool &isInlined) override;  ; void ShuttingDownSignal () override;  ;  Public Member Functions inherited from TClassEdit::TInterpreterLookupHelper;  TInterpreterLookupHelper ();  ; virtual ~TInterpreterLookupHelper ();  . Private Member Functions; bool WantDiags () const;  . Private Attributes; AutoParse_t fAutoParse;  ; ExistingTypeCheck_t fExistingTypeCheck;  ; cling::Interpreter * fInterpreter;  ; bool * fInterpreterIsShuttingDownPtr;  ; TNormalizedCtxt * fNormalizedCtxt;  ; const int * fPDebug;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/clingutils/res/TClingUtils.h>. Inheritance diagram for ROOT::TMetaUtils::TClingLookupHelper:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ AutoParse_t. typedef bool(* ROOT::TMetaUtils::TClingLookupHelper::AutoParse_t) (const char *name). Definition at line 163 of file TClingUtils.h. ◆ ExistingTypeCheck_t. typedef bool(* ROOT::TMetaUtils::TClingLooku",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TMetaUtils_1_1TClingLookupHelper.html:1510,inherit,inherited,1510,doc/master/classROOT_1_1TMetaUtils_1_1TClingLookupHelper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TMetaUtils_1_1TClingLookupHelper.html,1,['inherit'],['inherited']
Modifiability," ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t);  RuleFit can handle classification with 2 classes. ;  ; virtual TClass * IsA () const;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  read rules from an std::istream ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  read rules from XML node ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Train (void);  ; Bool_t UseBoost () const;  ; void WriteMonitoringHistosToFile (void) const;  write special monitoring histograms to file (here ntuple) ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; virtual void DeclareCompatibilityOptions ();  options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .xml weight file at hand ;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void Exi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodRuleFit.html:2719,inherit,inherited,2719,doc/master/classTMVA_1_1MethodRuleFit.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodRuleFit.html,1,['inherit'],['inherited']
Modifiability," ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:26688,inherit,inherited,26688,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['inherit'],['inherited']
Modifiability," ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual int Unlink (const char *name);  Unlink, i.e. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDCacheSystem.html:19598,inherit,inherited,19598,doc/master/classTDCacheSystem.html,https://root.cern,https://root.cern/doc/master/classTDCacheSystem.html,2,['inherit'],['inherited']
Modifiability," ; virtual Int_t AddObject (const TBuffer3D &buffer, Bool_t *addChildren=nullptr)=0;  ; virtual Int_t AddObject (UInt_t physicalID, const TBuffer3D &buffer, Bool_t *addChildren=nullptr)=0;  ; virtual void BeginScene ()=0;  ; virtual Bool_t BuildingScene () const =0;  ; virtual Bool_t CanLoopOnPrimitives () const;  ; virtual void CloseComposite ()=0;  ; virtual void DrawViewer ();  ; virtual void EndScene ()=0;  ; TClass * IsA () const override;  ; virtual void ObjectPaint (TObject *, Option_t *="""");  ; virtual Bool_t OpenComposite (const TBuffer3D &buffer, Bool_t *addChildren=nullptr)=0;  ; virtual void PadPaint (TVirtualPad *);  ; virtual Bool_t PreferLocalFrame () const =0;  ; virtual void PrintObjects ();  ; virtual void ResetCameras ();  ; virtual void ResetCamerasAfterNextUpdate ();  ; virtual TObject * SelectObject (Int_t, Int_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualViewer3D.html:12828,inherit,inherited,12828,doc/master/classTVirtualViewer3D.html,https://root.cern,https://root.cern/doc/master/classTVirtualViewer3D.html,1,['inherit'],['inherited']
Modifiability," ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetupFrameMarkup (IconBarCreator_foo creator, UInt_t top_frame_height=14, UInt_t mini_bar_height=4, Bool_t allow_top_collapse=kTRUE);  Set properties of the EVE frame. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html:23720,inherit,inherited,23720,doc/master/classTEveCompositeFrameInMainFrame.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html,6,['inherit'],['inherited']
Modifiability," ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPerfStats; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TVirtualPerfStats *& CurrentPerfStats ();  Return the current ROOT perf stats if any. ;  ; static const char * DeclFileName ();  ; static const char * EventType (EEventType type);  Return the name of the event type. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; BasketInfo & GetBasketInfo (size_t bi, size_t basketNumber);  Return the BasketInfo corresponding to the given branch and basket. ;  ; BasketInfo & GetBasketInfo (TBranch *b, size_t basketNumber);  Return the BasketInfo corresponding to the given branch and basket. ;  ; void SetFile (TFile *newfile) override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< std::vector< BasketInfo > > ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePerfStats.html:16467,inherit,inherited,16467,doc/master/classTTreePerfStats.html,https://root.cern,https://root.cern/doc/master/classTTreePerfStats.html,1,['inherit'],['inherited']
Modifiability," ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticle.html:13943,inherit,inherited,13943,doc/master/classTParticle.html,https://root.cern,https://root.cern/doc/master/classTParticle.html,2,['inherit'],['inherited']
Modifiability," ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TParticle; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classJet.html:13489,inherit,inherited,13489,doc/master/classJet.html,https://root.cern,https://root.cern/doc/master/classJet.html,2,['inherit'],['inherited']
Modifiability," ; virtual std::vector< Double_t > GetMvaValues (Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the current Data type ;  ; const TString & GetOriginalVarName (Int_t ivar) const;  ; const TString & GetWeightFileDir () const;  ; Bool_t HasTrainingTree () const;  ; Bool_t Help () const;  ; Bool_t IgnoreEventsWithNegWeightsInTraining () const;  ; Bool_t IsConstructedFromWeightFile () const;  ; Bool_t IsNormalised () const;  ; virtual void MakeClassSpecific (std::ostream &, const TString &="""") const;  ; virtual void MakeClassSpecificHeader (std::ostream &, const TString &="""") const;  ; void NoErrorCalc (Double_t *const err, Double_t *const errUpper);  ; void SetNormalised (Bool_t norm);  ; void SetWeightFileDir (TString fileDir);  set directory of weight file ;  ; void SetWeightFileName (TString);  set the weight file name (depreciated) ;  ; void Statistics (Types::ETreeType treeType, const TString &theVarName, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &);  calculates rms,mean, xmin, xmax of the event variable this can be either done for the variables as they are or for normalised variables (in the range of 0-1) if ""norm"" is set to kTRUE ;  ; Bool_t TxtWeightsOnly () const;  ; Bool_t Verbose () const;  ;  Protected Member Functions inherited from TMVA::IMethod; virtual void GetHelpMessage () const =0;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCompositeBase.html:25347,variab,variable,25347,doc/master/classTMVA_1_1MethodCompositeBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCompositeBase.html,12,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability," ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:6889,inherit,inheritance,6889,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,13,['inherit'],['inheritance']
Modifiability," ; virtual void CancelDimension (Int_t virt_dim);  Cancel a dimension. ;  ; virtual void EnableMultiVarDims ();  Set the manager as handling a formula with multiple variable dimensions. ;  ; virtual void UpdateUsedSize (Int_t &virt_dim, Int_t vsize);  Reload the array sizes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TTreeFormulaManager (const TTreeFormulaManager &)=delete;  ; TTreeFormulaManager & operator= (const TTreeFormulaManager &)=delete;  . Private Attributes; Int_t fCumulUsedSizes [kMAXFORMDIM+1];  Accumulated size of lower dimensions as seen for this entry. ;  ; TArrayI * fCumulUsedVarDims;  fCumulUsedSizes(1) for multi variable dimensions case ;  ; TObjArray fFormulas;  ; Int_t fMultiplicity;  Indicator of the variability of the formula. ;  ; bool fMultiVarDim;  True if one of the variable has 2 variable size dimensions. ;  ; Int_t fNdata;  ! Last value calculated by GetNdata ;  ; bool fNeedSync;  ; Int_t fUsedSizes [kMAXFORMDIM+1];  Actual size of the dimensions as seen for this entry. ;  ; TArrayI * fVarDims [kMAXFORMDIM+1];  List of variable sizes dimensions. ;  ; Int_t fVirtUsedSizes [kMAXFORMDIM+1];  Virtual size of lower dimensions as seen for this formula. ;  . Friends; class TTreeFormula;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormulaManager.html:10927,variab,variable,10927,doc/master/classTTreeFormulaManager.html,https://root.cern,https://root.cern/doc/master/classTTreeFormulaManager.html,2,['variab'],['variable']
Modifiability," ; virtual void CountVariableTypes (UInt_t &nvars, UInt_t &ntgts, UInt_t &nspcts) const;  count variables, targets and spectators ;  ; virtual Bool_t GetInput (const Event *event, std::vector< Float_t > &input, std::vector< Char_t > &mask, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; TString GetShortName () const;  ; Types::EVariableTransform GetVariableTransform () const;  ; Bool_t IsCreated () const;  ; Bool_t IsEnabled () const;  ; Bool_t IsNormalised () const;  ; MsgLogger & Log () const;  ; virtual void SelectInput (const TString &inputVariables, Bool_t putIntoVariables=kFALSE);  select the variables/targets/spectators which serve as input to the transformation ;  ; void SetEnabled (Bool_t e);  ; void SetNormalise (Bool_t n);  ; virtual void SetOutput (Event *event, std::vector< Float_t > &output, std::vector< Char_t > &mask, const Event *oldEvent=nullptr, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; void SetOutputDataSetInfo (DataSetInfo *outputDsi);  ; void SetTMVAVersion (TMVAVersion_t v);  ; void SetUseSignalTransform (Bool_t e=kTRUE);  ; const std::vector< TMVA::VariableInfo > & Spectators () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const std::vector< TMVA::VariableInfo > & Targets () const;  ; void ToggleInputSortOrder (Bool_t sortOrder);  ; Bool_t UseSignalTransform () const;  ; const std::vector< TMVA::VariableInfo > & Variables () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html:2990,variab,variables,2990,doc/master/classTMVA_1_1VariableDecorrTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html,6,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability," ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionServerFrame.html:13022,inherit,inherited,13022,doc/master/classTSessionServerFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionServerFrame.html,1,['inherit'],['inherited']
Modifiability," ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTContextMenu.html:5567,inherit,inherited,5567,doc/master/classTContextMenu.html,https://root.cern,https://root.cern/doc/master/classTContextMenu.html,2,['inherit'],['inherited']
Modifiability," ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathText.html:18879,inherit,inherited,18879,doc/master/classTMathText.html,https://root.cern,https://root.cern/doc/master/classTMathText.html,2,['inherit'],['inherited']
Modifiability," ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathTextRenderer.html:15870,inherit,inherited,15870,doc/master/classTMathTextRenderer.html,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html,2,['inherit'],['inherited']
Modifiability," ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t cold",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:22132,inherit,inherited,22132,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,4,['inherit'],['inherited']
Modifiability," ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t TestTreeQuality (DecisionTree *dt);  Test the tree quality.. in terms of Misclassification. ;  ; void Train (void);  BDT training. ;  ; void WriteMonitoringHistosToFile (void) const;  Here we could write some histograms created during the processing to the output file. ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () const;  ; const Event * GetEvent (const TMVA::Event *ev) const;  ; const Event * GetEvent (Long64_t ievt) const;  ; const Event * GetEvent (Long64_t ievt, Types::ETreeType type) const;  ; const std::vector< TMVA::Event * > & GetEventCollection (Types::ETreeType type);  returns the event collection (i.e. ;  ; TFile * GetFile () const;  ; const TString",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:8190,inherit,inherited,8190,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,1,['inherit'],['inherited']
Modifiability," ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void ClearVisibleVolumes ();  Clear the list of visible volumes reset the kVisOnScreen bit for volumes previously in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void DefineColors () const;  Define 100 colors with increasing light intensities for each basic color (1-7) Register these colors at indexes starting with 1000. ;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const;  Convert a local vector according view rotation matrix. ;  . Private Attributes; Double_t fBombR;  ; Double_t fBombX;  ; Double_t fBombY;  ; Double_t fBombZ;  ; TBuffer3D * fBuffer;  ; Double_t fCheckedBox [6];  ; TGeoNode * fCheckedNode;  ; TGeoChecker * fChecker;  ; TGeoShape * fClippingShape;  ; Int_t fExplodedView;  ; TGeoManager * fGeoManager;  ; TGeoHMatrix * fGlobal;  ; Bool_t fIsEditable;  ; Bool_t fIsPaintingShape;  ; Bool_t fIsRaytracing;  ; TGeoVolume * fLastVolume;  ; Double_t fMat [9];  ; Int_t fNsegments;  ; Int_t fNVisNodes;  ; TGeoOverlap * fOverlap;  ; Bool_t fPaintingOverlaps;  ; TGeoIter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPainter.html:17672,inherit,inherited,17672,doc/master/classTGeoPainter.html,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html,1,['inherit'],['inherited']
Modifiability," ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEventIter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TEventIter * Create (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Create and instance of the appropriate iterator. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Long64_t fCurrent;  ; Long64_t fNum;  . Additional Inherited Members;  Public Types inherited from TEventIter; enum  EIterType { kData = 15; };  ;  Public Types inheri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterUnit.html:9254,inherit,inherited,9254,doc/master/classTEventIterUnit.html,https://root.cern,https://root.cern/doc/master/classTEventIterUnit.html,1,['inherit'],['inherited']
Modifiability," ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEventIter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TEventIter * Create (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Create and instance of the appropriate iterator. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void PreProcessEvent (Long64_t ent) override;  Actions to be done just before processing entry 'entry'. ;  ;  Protected Member Functions inherited from TEventI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterTree.html:9500,inherit,inherited,9500,doc/master/classTEventIterTree.html,https://root.cern,https://root.cern/doc/master/classTEventIterTree.html,1,['inherit'],['inherited']
Modifiability," ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEventIter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TEventIter * Create (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Create and instance of the appropriate iterator. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void PreProcessEvent (Long64_t) override;  To be executed before by TProofPlayer calling TSelector::Process. ;  ;  Protected Member Functions inherited from TE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterObj.html:9299,inherit,inherited,9299,doc/master/classTEventIterObj.html,https://root.cern,https://root.cern/doc/master/classTEventIterObj.html,1,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArchiveFile * Open (const char *url, TFile *file);  Return proper archive file handler depending on passed url. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Protected Member Functions; static Bool_t ParseUrl (const char *url, TString &archive, TString &member, TString &type);  Try to determine if url contains an anchor specifying an archive member. ;  . Protected Attributes; TString fArchiveName;  Archive file name. ;  ; TArchiveMember * fCurMember;  Current archive member. ;  ; TFile * fFile;  File stream used to access the archive. ;  ; Int_t fMemberIndex;  Index of sub-file in archive. ;  ; TString fMemberName;  Sub-file name. ;  ; TObjArray * fMembers;  Members in this archive. ;  . Private Member Functions;  TArchiveFile (const TArchiveFile &)=delete;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArchiveFile.html:9454,inherit,inherited,9454,doc/master/classTArchiveFile.html,https://root.cern,https://root.cern/doc/master/classTArchiveFile.html,1,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TOutputListSelectorDataMap * FindInList (TCollection *coll);  Find a TOutputListSelectorDataMap in a collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TCollection * fMap;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTOutputListSelectorDataMap.html:9136,inherit,inherited,9136,doc/master/classTOutputListSelectorDataMap.html,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html,1,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TControlBarButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TList * fButtons {nullptr};  list of buttons ;  ; TControlBarImp * fControlBarImp {nullptr};  system specific implementation ;  ; Int_t fNoroc {1};  number of rows or columns ;  ; Int_t fOrientation {0};  orientation ;  ;  Protected Attributes inherited from TControlBarButton; TString f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTControlBar.html:15232,inherit,inherited,15232,doc/master/classTControlBar.html,https://root.cern,https://root.cern/doc/master/classTControlBar.html,3,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; IMethod * BookMVA (Types::EMVA method, const TString &weightfile);  books MVA method from weightfile ;  ; void DeclareOptions ();  declaration of configuration options ;  ; void DecodeVarNames (const std::string &varNames);  decodes ""name1:name2:..."" form ;  ; void DecodeVarNames (c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:17166,inherit,inherited,17166,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,3,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void BuildKDEPDF ();  creates high-binned reference histogram to be used instead of the PDF for speed reasons ;  ; void BuildSplinePDF ();  build the PDF from the original histograms ;  ; void CheckHist () const;  sanity check: compare PDF with original histogram ;  ; void FillHistT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDF.html:13799,inherit,inherited,13799,doc/master/classTMVA_1_1PDF.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDF.html,3,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; enum  DataAssignType { kUndefined = 0; , kAssignTrees; , kAssignEvents; };  . Private Member Functions; DataSetInfo & DefaultDataSetInfo ();  default creation ;  ; void SetInputTreesFromEventAssignTrees ();  assign event-wise local trees to data set ;  . Private Attributes; Types::EAnalysisTyp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader.html:17500,inherit,inherited,17500,doc/master/classTMVA_1_1DataLoader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader.html,3,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fMakeFoldDataSet;  ; UInt_t fNumFolds;  ; std::vector< std::vector< TMVA::Event * > > fTestEvents;  ; std::vector< std::vector< TMVA::Event * > > fTrainEvents;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CvSplit.html:11428,inherit,inherited,11428,doc/master/classTMVA_1_1CvSplit.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CvSplit.html,3,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void DeclareOptions ()=0;  ; MsgLogger & Log () const;  message logger ;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1FitterBase.html:11776,inherit,inherited,11776,doc/master/classTMVA_1_1FitterBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1FitterBase.html,3,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  Envelope (const TString &name, DataLoader *dataloader=nullptr, TFile *file=nullptr, const TString options="""");  Constructor for the initialization of Envelopes, differents Envelopes may needs differents constructors then this is a generic one protected. ;  ; DataInputHandler & Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Envelope.html:12859,inherit,inherited,12859,doc/master/classTMVA_1_1Envelope.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Envelope.html,3,['inherit'],['inherited']
Modifiability," ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; std::map< TString, MVector * > fMethodsMap;  . Private Member Functions; MethodBase * BookMethodWeightfile (DataLoader *dataloader, TMVA::Types::EMVA methodType, const TString &weightfile);  Adds an already constructed method to be managed by this factory. ;  ; TH1F * EvaluateImportanceAll",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Factory.html:16320,inherit,inherited,16320,doc/master/classTMVA_1_1Factory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Factory.html,3,['inherit'],['inherited']
Modifiability," ; virtual void binNumbers (double const *x, int *bins, std::size_t n, int coef=1) const =0;  Compute the bin indices for multiple values of x. ;  ; virtual double binWidth (Int_t bin) const =0;  ; virtual RooAbsBinning * clone (const char *name=nullptr) const =0;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual double highBound () const =0;  ; virtual RooAbsReal * highBoundFunc () const;  Return pointer to RooAbsReal parameterized upper bound, if any. ;  ; virtual void insertHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon insertion into a RooAbsRealLValue. ;  ; TClass * IsA () const override;  ; virtual bool isParameterized () const;  Interface function. ;  ; virtual bool isShareable () const;  If true (default), the range definition can be shared across clones of a RooRealVar. ;  ; virtual bool isUniform () const;  ; virtual double lowBound () const =0;  ; virtual RooAbsReal * lowBoundFunc () const;  Return pointer to RooAbsReal parameterized lower bound, if any. ;  ; Int_t numBins () const;  Return number of bins. ;  ; virtual Int_t numBoundaries () const =0;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print binning arguments (the RooAbsReal objects represening the variable bin boundaries for parameterized binning implementations. ;  ; void printClassName (std::ostream &os) const override;  Print binning class name. ;  ; void printName (std::ostream &os) const override;  Print binning name. ;  ; void printTitle (std::ostream &os) const override;  Print binning title. ;  ; void printValue (std::ostream &os) const override;  Print binning value, i.e the bin boundary positions. ;  ; virtual void removeHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon removal from a RooAbsRealLValue. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsBinning.html:1992,parameteriz,parameterized,1992,doc/master/classRooAbsBinning.html,https://root.cern,https://root.cern/doc/master/classRooAbsBinning.html,1,['parameteriz'],['parameterized']
Modifiability," ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Member Functions; void installFormulaOrThrow (const std::string &formulaa);  Check that the formula compiles, and also fulfills the assumptions. ;  ; std::string processFormula (std::string origFormula) const;  Process given formula by replacing all ordinal and name references by x[i], where i matches the position of the argument in _origList. ;  ; std::string reconstructFormula (std::string internalRepr) const;  From the internal representation, construct a formula by replacing all index place holders with the names of the variables that are being used to evaluate it. ;  ; RooArgList usedVariables () const;  Analyse internal formula to find out which variables are actually in use. ;  . Private Attributes; std::vector< bool > _isCategory;  ! Whether an element of the _origList is a category. ;  ; RooArgList _origList;  ! Original list of dependents ;  ; std::unique_ptr< TFormula > _tFormula;  ! The formula used to compute values ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormula.html:14049,variab,variables,14049,doc/master/classRooFormula.html,https://root.cern,https://root.cern/doc/master/classRooFormula.html,1,['variab'],['variables']
Modifiability," ; void FilterZonal (const Double_t *source, Double_t *destVector);  This function transforms the source spectrum. ;  ; TClass * IsA () const override;  ; void SetDirection (Int_t direction);  This function sets the direction of the transform: ;  ; void SetEnhanceCoeff (Double_t enhanceCoeff);  This function sets the enhancement coefficient: ;  ; void SetFilterCoeff (Double_t filterCoeff);  This function sets the filter coefficient: ;  ; void SetRegion (Int_t xmin, Int_t xmax);  This function sets the filtering or enhancement region: ;  ; void SetTransformType (Int_t transType, Int_t degree);  This function sets the following parameters for transform: ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Transform (const Double_t *source, Double_t *destVector);  This function transforms the source spectrum. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:4233,inherit,inherited,4233,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['inherit'],['inherited']
Modifiability," ; void MakeZombie ();  . Protected Attributes; GContext_t fContext;  graphics context handle ;  ; GCValues_t fValues = {};  graphics context values + mask ;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Friends; class TGGCPool;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGGC.h>. Inheritance diagram for TGGC:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGGC() [1/3]. TGGC::TGGC ; (; GCValues_t * ; values, . Bool_t ; calledByGCPool . ). protected . Create a graphics context (only called via TGGCPool::GetGC()). ; Definition at line 38 of file TGGC.cxx. ◆ TGGC() [2/3]. TGGC::TGGC ; (; GCValues_t * ; values = nullptr). Create a graphics context, registers GC in GCPool. ; Definition at line 62 of file TGGC.cxx. ◆ TGGC() [3/3]. TGGC::TGGC ; (; const TGGC & ; g). Copy a graphics context. ; Definition at line 84 of file TGGC.cxx. ◆ ~TGGC(). TGGC::~TGGC ; (; ). override . Delete graphics context. ; Definition at line 103 of file TGGC.cxx. Member Function Documentation. ◆ Class(). static TClass * TGGC::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGC.html:13761,inherit,inherited,13761,doc/master/classTGGC.html,https://root.cern,https://root.cern/doc/master/classTGGC.html,2,['inherit'],['inherited']
Modifiability," ; void ReleaseParameter (Int_t ipar) override;  Releases parameter #ipar. ;  ; virtual void SetBasisFunctions (TObjArray *functions);  set the basis functions in case the fitting function is not set directly The TLinearFitter will manage and delete the functions contained in the list ;  ; virtual void SetDim (Int_t n);  set the number of dimensions ;  ; void SetFitMethod (const char *) override;  ; virtual void SetFormula (const char *formula);  Additive parts should be separated by ""++"". ;  ; virtual void SetFormula (TFormula *function);  Set the fitting function. ;  ; Int_t SetParameter (Int_t, const char *, Double_t, Double_t, Double_t, Double_t) override;  ; virtual void StoreData (Bool_t store);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t UpdateMatrix ();  Update the design matrix after the formula has been changed. ;  ;  Public Member Functions inherited from TVirtualFitter;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual FCNFunc_t GetFCN ();  ; virtual Foption_t GetFitOption () const;  ; TMethodCall * GetMethodCall () const;  ; virtual TObject * GetObjectFit () const;  ; virtual TObject * GetUserFunc () const;  ; virtual Int_t GetXfirst () const;  ; virtual Int_t GetXlast () const;  ; virtual Int_t GetYfirst () const;  ; virtual Int_t GetYlast () const;  ; virtual Int_t GetZfirst () const;  ; virtual Int_t GetZlast () const;  ; TClass * IsA () const override;  ; virtual Double_t * SetCache (Int_t npoints, Int_t psize);  Initialize the cache array npoints is the number of points to be stored (or already stored) in the cache psize is the number of elements per point. ;  ; virtual void SetFCN (void(*fcn)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t));  To set the address of the minimization objective function called by the native compiler (see function below when called by CI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearFitter.html:14137,inherit,inherited,14137,doc/master/classTLinearFitter.html,https://root.cern,https://root.cern/doc/master/classTLinearFitter.html,1,['inherit'],['inherited']
Modifiability," ; void RemoveUnknownWindowHandler (TGUnknownWindowHandler *h);  Remove handler for unknown (i.e. unregistered) windows. ;  ; void ResetWaitFor (TGWindow *w);  reset waiting ;  ; void SetEditDisabled (Bool_t on=kTRUE);  If on is kTRUE editting/guibuilding is forbidden. ;  ; void SetRoot (TGWindow *root=nullptr);  Sets the current root (i.e. ;  ; void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; void SetStyle (UInt_t newstyle);  ; void SetWaitForWindow (Window_t wid);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnregisterPopup (TGWindow *w);  Remove a popup menu from the list of popups. ;  ; void UnregisterWindow (TGWindow *w);  Remove a TGWindow from the list of windows. ;  ; void WaitFor (TGWindow *w);  Wait for window to be destroyed. ;  ; void WaitForUnmap (TGWindow *w);  Wait for window to be unmapped. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGClient.html:5526,inherit,inherited,5526,doc/master/classTGClient.html,https://root.cern,https://root.cern/doc/master/classTGClient.html,1,['inherit'],['inherited']
Modifiability," ; void RotateZ (Double_t angle) override;  Rotate about Z axis with angle expressed in degrees. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDx (Double_t dx) override;  ; void SetDy (Double_t dy) override;  ; void SetDz (Double_t dz) override;  ; void SetRotation (const TGeoRotation &other);  Copy the rotation from another one. ;  ; void SetRotation (const TGeoRotation *rot);  Assign a foreign rotation to the combi. The rotation is NOT owned by this. ;  ; void SetTranslation (const TGeoTranslation &tr);  copy the translation component ;  ; void SetTranslation (Double_t *vect);  set the translation component ;  ; void SetTranslation (Double_t dx, Double_t dy, Double_t dz);  set the translation component ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMatrix;  TGeoMatrix ();  dummy constructor ;  ;  TGeoMatrix (const char *name);  Constructor. ;  ;  ~TGeoMatrix () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  Get total size in bytes of this. ;  ; void GetHomogenousMatrix (Double_t *hmat) const;  The homogenous matrix associated with the transformation is used for piling up's and visualization. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; TClass * IsA () const override;  ; Bool_t IsCombi () const;  ; Bool_t IsGeneral () const;  ; Bool_t IsIdentity () const;  ; Bool_t IsOwned () const;  ; Bool_t IsReflection () const;  ; Bool_t IsRegistered () const;  ; Bool_t IsRotAboutZ () const;  Returns true if no rotation or the rotation is about Z axis. ;  ; Bool_t IsRotation () const;  ; Bool_t IsScale () const;  ; Bool_t IsShared () const;  ; Bool_t IsTranslation () const;  ; virtual void LocalToMaster (const Double_t *local, Double_t *master) const;  convert a point by ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCombiTrans.html:3812,inherit,inherited,3812,doc/master/classTGeoCombiTrans.html,https://root.cern,https://root.cern/doc/master/classTGeoCombiTrans.html,1,['inherit'],['inherited']
Modifiability," ; void SetClearColor (Color_t col);  Set background method. ;  ; void SetClipAutoUpdate (Bool_t x);  ; void SetCurrentCamera (ECameraType camera);  Set current active camera - 'cameraType' one of: kCameraPerspX, kCameraPerspY, kCameraPerspZ, kCameraOrthoXOY, kCameraOrthoXOZ, kCameraOrthoZOY, kCameraOrthoXnOY, kCameraOrthoXnOZ, kCameraOrthoZnOY. ;  ; void SetDrawCameraCenter (Bool_t x);  Draw camera look at and rotation point. ;  ; virtual void SetEventHandler (TGEventHandler *handler);  Set the event-handler. ;  ; void SetFader (Float_t x);  ; virtual void SetGedEditor (TGedEditor *ed);  ; void SetGuideState (Int_t axesType, Bool_t axesDepthTest, Bool_t referenceOn, const Double_t *referencePos);  Set the state of guides (axes & reference markers) from arguments. ;  ; void SetIgnoreSizesOnUpdate (Bool_t v);  ; void SetLineScale (Float_t s);  ; void SetMaxSceneDrawTimeHQ (Float_t t);  ; void SetMaxSceneDrawTimeLQ (Float_t t);  ; void SetOrthoCamera (ECameraType camera, Double_t zoom, Double_t dolly, Double_t center[3], Double_t hRotate, Double_t vRotate);  Set an orthographic camera to supplied configuration - note this does not need to be the current camera - though you will not see the effect if it is not. ;  ; void SetPerspectiveCamera (ECameraType camera, Double_t fov, Double_t dolly, Double_t center[3], Double_t hRotate, Double_t vRotate);  Set a perspective camera to supplied configuration - note this does not need to be the current camera - though you will not see the effect if it is not. ;  ; void SetPictureFileName (const TString &f);  ; void SetPointScale (Float_t s);  ; void SetResetCamerasOnUpdate (Bool_t v);  ; void SetSmartRefresh (Bool_t smart_ref);  ; void SetSmoothLines (Bool_t s);  ; void SetSmoothPoints (Bool_t s);  ; void SetStereo (Bool_t stereo, Bool_t quad_buf=kTRUE);  Enable stereo rendering. ;  ; void SetStereoEyeOffsetFac (Float_t f);  ; void SetStereoFrustumAsymFac (Float_t f);  ; void SetStereoZeroParallax (Float_t f);  ; void Streamer (TB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEmbeddedViewer.html:10854,config,configuration,10854,doc/master/classTGLEmbeddedViewer.html,https://root.cern,https://root.cern/doc/master/classTGLEmbeddedViewer.html,3,['config'],['configuration']
Modifiability," ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1 = 0;  Full phi range flag. ;  ; Double_t fC2 = 0;  Sine of phi1. ;  ; Double_t fCdphi = 0;  Sine of (phi1+phi2)/2. ;  ; Double_t fCm = 0;  Sine of phi1+dphi. ;  ; Double_t fDphi = 0;  ; Bool_t fFullPhi = false;  ; Int_t fNz = 0;  ; Double_t fPhi1 = 0;  ; Double_t * fRmax = nullptr;  ; Double_t * fRmin = nullptr;  ; Double_t fS1 = 0;  Cosine of phi1. ;  ; Double_t fS2 = 0;  Cosine of phi1+dphi. ;  ; Double_t fSm = 0;  Cosine of (phi1+phi2)/2. ;  ; Double_t * fZ = nullptr;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPcon.html:20774,inherit,inherited,20774,doc/master/classTGeoPcon.html,https://root.cern,https://root.cern/doc/master/classTGeoPcon.html,3,['inherit'],['inherited']
Modifiability," ; void SetSampleMin (UInt_t ivar, Float_t xmin);  set the minimum of variable ivar from the training sample that pass/end up in this node, if traininfo defined ;  ; void SetSelector (Short_t i);  set index of variable used for discrimination at this node ;  ; void SetSeparationGain (Float_t sep);  set the separation, or information gained BY this node's selection, if traininfo defined ;  ; void SetSeparationIndex (Float_t sep);  set the chosen index, measure of ""purity"" (separation between S and B) AT this node, if traininfo defined ;  ; void SetSubTreeR (Double_t r);  set the resubstitution estimate, R(T_t), of the tree rooted at this node, if traininfo defined ;  ; void SetSumTarget (Float_t t);  set sum target, if traininfo defined ;  ; void SetSumTarget2 (Float_t t2);  set sum target 2, if traininfo defined ;  ; void SetTerminal (Bool_t s=kTRUE);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Node;  Node ();  ;  Node (const Node &n);  copy constructor, make sure you don't just copy the pointer to the node, but that the parents/daughters are initialized to 0 (and set by the copy constructors of the derived classes ;  ;  Node (Node *p, char pos);  constructor of a daughter node as a daughter of 'p' ;  ; virtual ~Node ();  node destructor ;  ; void * AddXMLTo (void *parent) const;  add attributes to XML ;  ; Int_t CountMeAndAllDaughters () const;  recursively go through the part of the tree below this node and count all daughters ;  ; int GetCount ();  returns the global number of instantiated nodes ;  ; UInt_t GetDepth () const;  ; virtual TMVA::BinaryTree * GetParentTree () const;  ; char GetPos () const;  ; void ReadXML (void *node, UInt_t tmva_Version_Code=262657);  read attributes from XML ;  ; void SetDepth (UInt_t d);  ; virtual void SetParentTree (TMVA::BinaryTree *t);  ; void SetPos (char s);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html:11222,inherit,inherited,11222,doc/master/classTMVA_1_1DecisionTreeNode.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html,1,['inherit'],['inherited']
Modifiability," ; void SetTitleH (Float_t h=0);  ; void SetTitleOffset (Float_t offset=1, Option_t *axis=""X"");  Specify a parameter offset to control the distance between the axis and the axis title. ;  ; void SetTitlePS (const char *pstitle);  Define a string to be used in the %Title of the Postscript files. ;  ; void SetTitleSize (Float_t size=0.02, Option_t *axis=""X"");  ; void SetTitleStyle (Style_t style=1001);  ; void SetTitleTextColor (Color_t color=1);  ; void SetTitleW (Float_t w=0);  ; void SetTitleX (Float_t x=0);  ; void SetTitleXOffset (Float_t offset=1);  ; void SetTitleXSize (Float_t size=0.02);  ; void SetTitleY (Float_t y=0.985);  ; void SetTitleYOffset (Float_t offset=1);  ; void SetTitleYSize (Float_t size=0.02);  ; void SetViolinScaled (Bool_t on=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void ToggleEditor ();  ; void ToggleEventStatus ();  ; void ToggleToolBar ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:19399,inherit,inherited,19399,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,1,['inherit'],['inherited']
Modifiability," ; void SetUrl (const char *url);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, UInt_t &input) const;  ; const char * GetWindowName () const;  ; void GetWMPosition (Int_t &x, Int_t &y) const;  ; void GetWMSize (UInt_t &w, UInt_t &h) const;  ; void GetWMSizeHi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressLog.html:2936,inherit,inherited,2936,doc/master/classTProofProgressLog.html,https://root.cern,https://root.cern/doc/master/classTProofProgressLog.html,1,['inherit'],['inherited']
Modifiability," ; void StampTransBBox ();  ; void StampVisibility ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestCSCBits (UChar_t f) const;  ; virtual void UnHighlighted ();  Virtual function called when both fHighlighted is false and fImpliedHighlighted is 0. ;  ; virtual void UnSelected ();  Virtual function called when both fSelected is false and fImpliedSelected is 0. ;  ; void VizDB_Apply (const char *tag);  Set visual parameters for this object for given tag. ;  ; void VizDB_Insert (const char *tag, Bool_t replace=kTRUE, Bool_t update=kTRUE);  Create a replica of element and insert it into VizDB with given tag. ;  ; void VizDB_Reapply ();  Reset visual parameters for this object from VizDB. ;  ; void VizDB_UpdateModel (Bool_t update=kTRUE);  Copy visual parameters from this element to viz-db model. ;  ; virtual void WriteVizParams (std::ostream &out, const TString &var);  Write-out visual parameters for this object. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoNode.html:18008,inherit,inherited,18008,doc/master/classTEveGeoNode.html,https://root.cern,https://root.cern/doc/master/classTEveGeoNode.html,2,['inherit'],['inherited']
Modifiability, ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCategory; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  A buffer for reading values from trees. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given am,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMappedCategory.html:33664,inherit,inherited,33664,doc/master/classRooMappedCategory.html,https://root.cern,https://root.cern/doc/master/classRooMappedCategory.html,10,['inherit'],['inherited']
Modifiability," ; void WriteHtmlHeader (std::ostream &out, const char *titleNoSpecial, const char *dir, TClass *cls, const char *header);  Write HTML header. ;  ; void WriteLocation (std::ostream &out, TModuleDocInfo *module, const char *classname=0);  make a link to the description ;  ; void WriteModuleLinks (std::ostream &out);  Create a div containing links to all topmost modules. ;  ; void WriteModuleLinks (std::ostream &out, TModuleDocInfo *super);  Create a div containing links to all modules. ;  ; virtual void WriteSearch (std::ostream &out);  Write a search link or a search box, based on THtml::GetSearchStemURL() and THtml::GetSearchEngine(). ;  ; void WriteTopLinks (std::ostream &out, TModuleDocInfo *module, const char *classname=0, Bool_t withLocation=kTRUE);  Write the first part of the links shown ontop of each doc page; one <div> has to be closed by caller so additional items can still be added. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TClass * fCurrentClass;  ; TList * fCurrentClassesTypedefs;  ; Int_t fHierarchyLines;  ; TDocParser * fParser;  ;  Protected Attributes inherited from TDocOutput; THtml * fHtml;  . Friends; class TDocParser;  . Additional Inherited Members;  Public Types inherited from TDocOutput; enum  EFileType { kSource; , kInclude; , kTree; , kDoc; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocOutput.html:18195,inherit,inherited,18195,doc/master/classTClassDocOutput.html,https://root.cern,https://root.cern/doc/master/classTClassDocOutput.html,1,['inherit'],['inherited']
Modifiability," ; void WriteHtmlHeader (std::ostream &out, const char *titleNoSpecial, const char *dir, TClass *cls, const char *header);  Write HTML header. ;  ; void WriteLocation (std::ostream &out, TModuleDocInfo *module, const char *classname=0);  make a link to the description ;  ; void WriteModuleLinks (std::ostream &out);  Create a div containing links to all topmost modules. ;  ; void WriteModuleLinks (std::ostream &out, TModuleDocInfo *super);  Create a div containing links to all modules. ;  ; virtual void WriteSearch (std::ostream &out);  Write a search link or a search box, based on THtml::GetSearchStemURL() and THtml::GetSearchEngine(). ;  ; void WriteTopLinks (std::ostream &out, TModuleDocInfo *module, const char *classname=0, Bool_t withLocation=kTRUE);  Write the first part of the links shown ontop of each doc page; one <div> has to be closed by caller so additional items can still be added. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; THtml * fHtml;  . #include <TDocOutput.h>. Inheritance diagram for TDocOutput:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EFileType. enum TDocOutput::EFileType. EnumeratorkSource ; kInclude ; kTree ; kDoc . Definition at line 65 of file TDocOutput.h. ◆ EGraphvizTool. enum TDocOutput::EGraphvizTool. protected . EnumeratorkDot ; kNeato ; kFdp ; kCirco . Definition at line 39 of file TDocOutput.h. Constructor & Destructor Documentation. ◆ TDocOutput(). TDocOutput::TDocOutput ; (; THtml & ; html). Definition at line 255 of file TDocOutput.cxx. ◆ ~TDocOutput(). TDocOutput::~TDocOutput ; (; ). override . Definition at line 260 of file TDocOutput.cxx. Member Function Documentation. ◆ AddLink(). void TDocOutput::AddLink ; (; TSubString & ; str, . TString & ; link",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocOutput.html:15358,inherit,inherited,15358,doc/master/classTDocOutput.html,https://root.cern,https://root.cern/doc/master/classTDocOutput.html,1,['inherit'],['inherited']
Modifiability," ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< TCut > fCategoryCuts;  ; std::vector< UInt_t > fCategorySpecIdx;  ; std::vector< IMethod * > fMethods;  ; std::vector< std::vector< UInt_t > > fVarMaps;  ; std::vector< TString > fVars;  ;  Protected Attributes inherited from TMVA::MethodCompositeBase; MethodBase * fCurrentMethod;  ; UInt_t fCurrentMethodIdx;  ; std::vector< IMethod * > fMethods;  vector of all classifiers ;  ; std::vector< Double_t > fMethodWeight;  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void DeclareOptions ();  options for this method ;  ; void Init ();  initialize the method ;  ; void InitCircularTree (const DataSetInfo &dsi);  initialize the circular tree ;  ; Bool_t PassesCut (const Event *ev, UInt_t methodIdx);  ; void ProcessOptions ();  process ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html:28035,inherit,inherited,28035,doc/master/classTMVA_1_1MethodCategory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html,4,['inherit'],['inherited']
Modifiability," ; void WriteShort (Short_t s) override;  ; void WriteStdString (const std::string *s) override;  Write std::string to TBuffer. ;  ; virtual void WriteStdString (const std::string *s)=0;  ; virtual void WriteStdString (std::string &s);  ; void WriteString (const char *s) override;  Write string to I/O buffer. ;  ; void WriteTString (const TString &s) override;  Write TString to TBuffer. ;  ; void WriteUChar (UChar_t c) override;  ; void WriteUInt (UInt_t i) override;  ; void WriteULong (ULong_t l) override;  ; void WriteULong64 (ULong64_t l) override;  ; void WriteUShort (UShort_t s) override;  ; UInt_t WriteVersion (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer. ;  ; UInt_t WriteVersionMemberWise (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer after setting the kStreamedMemberWise bit in the version number. ;  ;  Public Member Functions inherited from TBufferIO;  ~TBufferIO () override;  destructor ;  ; Bool_t CheckObject (const TObject *obj) override;  Check if the specified object is already in the buffer. ;  ; Bool_t CheckObject (const void *obj, const TClass *ptrClass) override;  Check if the specified object of the specified class is already in the buffer. ;  ; void ForceWriteInfo (TVirtualStreamerInfo *info, Bool_t force) override;  force writing the TStreamerInfo to the file ;  ; void ForceWriteInfoClones (TClonesArray *a) override;  Make sure TStreamerInfo is not optimized, otherwise it will not be possible to support schema evolution in read mode. ;  ; Int_t GetBufferDisplacement () const override;  ; TProcessID * GetLastProcessID (TRefTable *reftable) const override;  Return the last TProcessID in the file. ;  ; Int_t GetMapCount () const override;  ; void GetMappedObject (UInt_t tag, void *&ptr, TClass *&ClassPtr) const override;  Retrieve the object stored in the buffer's object map at 'tag' Set ptr and ClassPtr respectively to the address of the object and a pointer to its TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferFile.html:19331,inherit,inherited,19331,doc/master/classTBufferFile.html,https://root.cern,https://root.cern/doc/master/classTBufferFile.html,1,['inherit'],['inherited']
Modifiability," ; void WriteShort (Short_t s) override;  ; void WriteStdString (const std::string *s) override;  Write std::string to TBuffer. ;  ; virtual void WriteStdString (const std::string *s)=0;  ; virtual void WriteStdString (std::string &s);  ; void WriteString (const char *s) override;  Write string to I/O buffer. ;  ; void WriteTString (const TString &s) override;  Write TString to TBuffer. ;  ; void WriteUChar (UChar_t c) override;  ; void WriteUInt (UInt_t i) override;  ; void WriteULong (ULong_t l) override;  ; void WriteULong64 (ULong64_t l) override;  ; void WriteUShort (UShort_t s) override;  ; UInt_t WriteVersion (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer. ;  ; UInt_t WriteVersionMemberWise (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer after setting the kStreamedMemberWise bit in the version number. ;  ;  Public Member Functions inherited from TBufferIO;  ~TBufferIO () override;  destructor ;  ; Bool_t CheckObject (const TObject *obj) override;  Check if the specified object is already in the buffer. ;  ; Bool_t CheckObject (const void *obj, const TClass *ptrClass) override;  Check if the specified object of the specified class is already in the buffer. ;  ; void ForceWriteInfoClones (TClonesArray *a) override;  Make sure TStreamerInfo is not optimized, otherwise it will not be possible to support schema evolution in read mode. ;  ; Int_t GetBufferDisplacement () const override;  ; TProcessID * GetLastProcessID (TRefTable *reftable) const override;  Return the last TProcessID in the file. ;  ; Int_t GetMapCount () const override;  ; void GetMappedObject (UInt_t tag, void *&ptr, TClass *&ClassPtr) const override;  Retrieve the object stored in the buffer's object map at 'tag' Set ptr and ClassPtr respectively to the address of the object and a pointer to its TClass. ;  ; UShort_t GetPidOffset () const override;  ; UInt_t GetTRefExecId () override;  Return the exec id stored in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMessage.html:19917,inherit,inherited,19917,doc/master/classTMessage.html,https://root.cern,https://root.cern/doc/master/classTMessage.html,1,['inherit'],['inherited']
Modifiability," ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; double eval_carry = 0;  ; std::shared_ptr< RooAbsL > likelihood_;  ; RooArgSet vars_obs_;  list of observables ;  ; RooSetProxy vars_proxy_;  sets up client-server connections ;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html:55236,inherit,inherited,55236,doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,3,['inherit'],['inherited']
Modifiability," ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy A;  ; RooRealProxy B;  ; RooRealProxy C;  ; RooRealProxy dm;  ; RooRealProxy dm0;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDstD0BG.html:68027,config,configuration,68027,doc/master/classRooDstD0BG.html,https://root.cern,https://root.cern/doc/master/classRooDstD0BG.html,1,['config'],['configuration']
Modifiability," ; xmax, . Bool_t ; useFFT = true . ). Constructor from the two function pointer and the convolution range. ; Definition at line 153 of file TF1Convolution.cxx. ◆ TF1Convolution() [4/6]. TF1Convolution::TF1Convolution ; (; TString ; formula, . Double_t ; xmin = 1., . Double_t ; xmax = 0., . Bool_t ; useFFT = true . ). Constructor from a formula expression as f1 * f2 where f1 and f2 are two functions known to ROOT. ; Definition at line 169 of file TF1Convolution.cxx. ◆ TF1Convolution() [5/6]. TF1Convolution::TF1Convolution ; (; TString ; formula1, . TString ; formula2, . Double_t ; xmin = 1., . Double_t ; xmax = 0., . Bool_t ; useFFT = true . ). Constructor from 2 function names where f1 and f2 are two functions known to ROOT. ; If the function names are not known to ROOT, tries to interpret them as TFormula. ; Definition at line 209 of file TF1Convolution.cxx. ◆ TF1Convolution() [6/6]. TF1Convolution::TF1Convolution ; (; const TF1Convolution & ; conv). Copy constructor (necessary to hold unique_ptr as member variable). ; Definition at line 241 of file TF1Convolution.cxx. ◆ ~TF1Convolution(). TF1Convolution::~TF1Convolution ; (; ). inlineoverride . Definition at line 56 of file TF1Convolution.h. Member Function Documentation. ◆ Class(). static TClass * TF1Convolution::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TF1Convolution::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TF1Convolution::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 80 of file TF1Convolution.h. ◆ Copy(). void TF1Convolution::Copy ; (; TObject & ; object); const. overridevirtual . Copy this to obj. ; Implements TF1AbsComposition.; Definition at line 504 of file TF1Convolution.cxx. ◆ DeclFileName(). static const char * TF1Convolution::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1Convolution.html:16390,variab,variable,16390,doc/master/classTF1Convolution.html,https://root.cern,https://root.cern/doc/master/classTF1Convolution.html,1,['variab'],['variable']
Modifiability," ; xup, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup . ). protected . Constructor for fix bin size 2-D histograms. ; Creates the main histogram structure.; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz, the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins along the X axis ; [in]xlowlow edge of the X axis first bin ; [in]xupupper edge of the X axis last bin (not included in last bin) ; [in]nbinsynumber of bins along the Y axis ; [in]ylowlow edge of the Y axis first bin ; [in]yupupper edge of the Y axis last bin (not included in last bin) . Definition at line 97 of file TH2.cxx. ◆ TH2() [3/7]. TH2::TH2 ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup . ). protected . Constructor for variable bin size (along X axis) 2-D histograms using an input array of type double. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;stringy;stringz the histogram title is set to stringt, the x axis title to stringx, the y axis title to stringy, etc. ; [in]nbinsxnumber of bins ; [in]xbinsarray of low-edges for each bin. This is an array of type double and size nbinsx+1 ; [in]nbinsynumber of bins along the Y axis ; [in]ylowlow edge of the Y axis first bin ; [in]yupupper edge of the Y axis last bin (not included in last bin) . Definition at line 126 of file TH2.cxx. ◆ TH2() [4/7]. TH2::TH2 ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; nbinsy, . const Double_t * ; ybins . ). protected . Constructor for Double_t variable bin size (along Y axis) 2-D histograms. ; Parameters. [in]namename of histogram (avoid blanks) ; [in]titlehistogram title. If title is of the form stringt;stringx;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:58217,variab,variable,58217,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability," ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static TGedEditor * fgFrameCreator = 0;  ;  Static Protected Attributes inherited from TVirtualPadEditor; static TString fgEditorName = """";  ; static TVirtualPadEditor * fgPadEditor = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGedEditor (const TGedEditor &)=delete;  ; TGedEditor & operator= (const TGedEditor &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedEditor.html:36788,inherit,inherited,36788,doc/master/classTGedEditor.html,https://root.cern,https://root.cern/doc/master/classTGedEditor.html,5,['inherit'],['inherited']
Modifiability," ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCtub.html:24996,inherit,inherited,24996,doc/master/classTGeoCtub.html,https://root.cern,https://root.cern/doc/master/classTGeoCtub.html,2,['inherit'],['inherited']
Modifiability," ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static const char * fgRulerName = ""axis3druler"";  . Private Member Functions; Int_t AxisChoice (Option_t *axis) const;  Return the axis index by its name. ;  ; void Build ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TAxis3D.h>. Inheritance diagram for TAxis3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TAxis3D() [1/3]. TAxis3D::TAxis3D ; (; ). Normal constructor. ; Definition at line 109 of file TAxis3D.cxx. ◆ TAxis3D() [2/3]. TAxis3D::TAxis3D ; (; Option_t * ; option). Normal constructor. ; Definition at line 120 of file TAxis3D.cxx. ◆ TAxis3D() [3/3]. TAxis3D::TAxis3D ; (; const TAxis3D & ; axis). Copy constructor. ; Definition at line 131 of file TAxis3D.cxx. ◆ ~TAxis3D(). TAxis3D::~TAxis3D ; (; ). inlineoverride . Definition at line 53 of file TAxis3D.h. Member Function Documentation. ◆ AxisChoice(). Int_t TAxis3D::AxisChoice ; (; Option_t * ; axis); const. private . Return the axis index by its name. ; Definition at line 543 of file TAxis3D.cxx. ◆ Browse(). void TAxis3D::Browse ; (; TBrowser * ; b). overridevirtual . Add all 3 axes to the TB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis3D.html:17374,inherit,inherited,17374,doc/master/classTAxis3D.html,https://root.cern,https://root.cern/doc/master/classTAxis3D.html,1,['inherit'],['inherited']
Modifiability," ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttAxis; Color_t fAxisColor;  Color of the line axis. ;  ; Color_t fLabelColor;  Color of labels. ;  ; Style_t fLabelFont;  Font for labels. ;  ; Float_t fLabelOffset;  Offset of labels. ;  ; Float_t fLabelSize;  Size of labels. ;  ; Int_t fNdivisions;  Number of divisions(10000*n3 + 100*n2 + n1) ;  ; Float_t fTickLength;  Length of tick marks. ;  ; Color_t fTitleColor;  Color of axis title. ;  ; Style_t fTitleFont;  Font for axis title. ;  ; Float_t fTitleOffset;  Offset of axis title. ;  ; Float_t fTitleSize;  Size of axis title. ;  . #include <TAxis.h>. Inheritance diagram for TAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. private . TAxis extra status bits (stored in fBits2) . EnumeratorkAlphanumeric Axis is alphanumeric. . kCanExtend Axis can be extended. . kNotAlpha Axis is forced to be not alphanumeric. . Definition at line 48 of file TAxis.h. ◆ EStatusBits. enum TAxis::EStatusBits. TAxis status bits. . EnumeratorkDecimals ; kTickPlus ; kTickMinus ; kAxisRange ; kCenterTitle ; kCenterLabels Bit 13 is used by TObject. . kRotateTitle ; kPalette ; kNoExponent ; kLabelsHori ; kLabelsVert ; kLabelsDown ; kLabelsUp ; kIsInteger ; kMoreLogLabels . Definition at line 61 of file TAxis.h. Constructor & Destructor Documentation. ◆ TAxis() [1/4]. TAxis::TAxis ; (; ). Default constructor. ; Definition at line 50 of file TAxis.cxx. ◆ TAxis() [2/4]. TAxis::TAxis ; (; Int_t ; nbins, . Double_t ; xmin, . Double_t ; xmax . ). Axis constructor for axis with fix bin size. ; Definition at line 67 of file TAxis.cxx. ◆ TAxis() [3/4]. TAxis::TAxis ; (; Int_t ; nbins, . const Double_t * ; xbins . ). Axis constructor for variable bin size. ; Definition at line 78 of file TAxis.cxx. ◆ TAxis() [4/4]. TAxis::TAxis ; (; const TAxis & ; axis). Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis.html:22712,extend,extended,22712,doc/master/classTAxis.html,https://root.cern,https://root.cern/doc/master/classTAxis.html,1,['extend'],['extended']
Modifiability," ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Static Protected Member Functions; static void FixBounds (Double_t &min, Double_t &max);  Avoid boundaries to be equal. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; Bool_t fMarkEnds;  lines marking where stretch zones begin ;  ; Int_t fMove;  1: move min value 2: move max value 3: move min and max value 0: don't move any value ;  ; Double_t fPos;  logical position between fVmin and fVmax ;  ; Int_t fPre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleSlider.html:25800,inherit,inherited,25800,doc/master/classTGDoubleSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleSlider.html,1,['inherit'],['inherited']
Modifiability," ;  Protected Member Functions inherited from TImage;  TImage ();  ;  TImage (const char *file);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t InitVisual ();  Static function to initialize the ASVisual. ;  . Protected Attributes; Bool_t fEditable;  ! kTRUE image can be resized, moved by resizing/moving gPad ;  ; ASImage * fGrayImage;  ! gray image ;  ; ASImage * fImage;  ! pointer to image structure of original image ;  ; Bool_t fIsGray;  ! kTRUE if image is gray ;  ; Double_t fMaxValue;  ! max value in image ;  ; Double_t fMinValue;  ! min value in image ;  ; Int_t fPaintMode;  ! 1 - fast mode, 0 - low memory slow mode ;  ; TASImage * fScaledImage;  ! temporary scaled and zoomed image produced from original image ;  ; UInt_t fZoomHeight;  ! hight of zoomed image in image pixels ;  ; UInt_t fZoomOffX;  ! X - offset for zooming in image pixels ;  ; UInt_t fZoomOffY;  ! Y - offset for zooming im image pixels ;  ; Int_t fZoomUpdate;  ! kZoom - new zooming required, kZoomOps - other ops in action, kNoZoom - no zooming or ops ;  ; UInt_t fZoomWidth;  ! width of zoomed image in image pixels ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttImage; Bool_t fConstRatio {kFALSE};  keep aspect ratio of image on the screen ;  ; UInt_t fImageCompression {0};  compression [0 .. 100] 0: no compression ;  ; EImageQuality fImageQuality {kImgDefault};  OPTION={GetMethod=""GetImageQuality"";SetMethod=""SetImageQuality"";Items=(kImgDefault=""Default"",kImgPoor=""Poor"",kImgFast=""Fast"",kImgGood=""Good"",kImgBest=""Best"")} ;  ; TImagePalette fPalette;  color palette for value -> color conversion ;  ; TPaletteEditor * fPaletteEditor {nullptr};  ! GUI to edit the color palette ;  ; Bool_t fPaletteEnabled {kFALSE}",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImage.html:28111,inherit,inherited,28111,doc/master/classTASImage.html,https://root.cern,https://root.cern/doc/master/classTASImage.html,2,['inherit'],['inherited']
Modifiability," ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAnimateCnt = -1;  ! counter used in Animate() method ;  ; TTimer * fAnimateTimer = nullptr;  ! timer to implement animation ;  ; TH1 * fFrame = nullptr;  TH1 object used for the pad range. ;  ; Int_t fNsteps = 0;  Number of time steps. ;  ; Int_t fSleepTime = 0;  Time (msec) to wait between time steps. ;  ; TObjArray * fSteps = nullptr;  Array of TLists for each time step. ;  ; Double_t fXmax = 0.;  Maximum for X axis. ;  ; Double_t fXmin = 0.;  Minimum for X axis. ;  ; Double_t fYmax = 0.;  Maximum for Y axis. ;  ; Double_t fYmin = 0.;  Minimum for Y axis. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGraphTime.h>. Inheritance diagram for TGraphTime:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraphTime() [1/3]. TGraphTime::TGraphTime ; (; ). default constructor. ; Definition at line 33 of file TGraphTime.cxx. ◆ TGraphTime() [2/3]. TGraphTim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphTime.html:12129,inherit,inherited,12129,doc/master/classTGraphTime.html,https://root.cern,https://root.cern/doc/master/classTGraphTime.html,1,['inherit'],['inherited']
Modifiability," ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool _useStandardParametrization = false;  ; RooRealProxy k;  the shape parameter, exp(sigma) ;  ; RooRealProxy m0;  the median, exp(mu) ;  ; RooRealProxy x;  the variable ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:68705,config,configuration,68705,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,1,['config'],['configuration']
Modifiability," ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Static Protected Member Functions; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ; static const TGGC & GetDefaultSelectedBackgroundGC ();  Return graphics context for highlighted frame background. ;  ; static const TGGC & GetDefaultSelectedGC ();  Return selection graphics context in use. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; TGText * fClipText;  clipboard text buffer ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextView.html:33194,inherit,inherited,33194,doc/master/classTGTextView.html,https://root.cern,https://root.cern/doc/master/classTGTextView.html,1,['inherit'],['inherited']
Modifiability," ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; static int UnixMakedir (const char *name);  Make a Unix file system directory. ;  ; static Long64_t UnixNow ();  Get current",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:31409,inherit,inherited,31409,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['inherit'],['inherited']
Modifiability," ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; static int UnixMakedir (const char *name);  Make a Unix file system directory. ;  ; static Long6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMacOSXSystem.html:33214,inherit,inherited,33214,doc/master/classTMacOSXSystem.html,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html,1,['inherit'],['inherited']
Modifiability," ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindCPAsymVar.h>. Inheritance diagram for RooUnblindCPAsymVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindCPAsymVar() [1/4]. RooUnblindCPAsymVar::RooUnblindCPAsymVar ; (; ). Default constructor. ; Definition at line 40 of file RooUnblindCPAsymVar.cxx. ◆ RooUnblindCPAsymVar() [2/4]. RooUnblindCPAsymVar::RooUnblindCPAsymVar ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . RooAbsReal & ; cpasym . ). Constructor from a given RooAbsReal (to hold the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindCPAsymVar.html:61644,inherit,inherited,61644,doc/master/classRooUnblindCPAsymVar.html,https://root.cern,https://root.cern/doc/master/classRooUnblindCPAsymVar.html,2,['inherit'],['inherited']
Modifiability," ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindOffset.h>. Inheritance diagram for RooUnblindOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindOffset() [1/4]. RooUnblindOffset::RooUnblindOffset ; (; ). default . ◆ RooUnblindOffset() [2/4]. RooUnblindOffset::RooUnblindOffset ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . double ; scale, . RooAbsReal & ; blindValue . ). Constructor from a given RooAbsReal (to hold the blind value) and a set of blinding parameters. ; Definition at line 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindOffset.html:61545,inherit,inherited,61545,doc/master/classRooUnblindOffset.html,https://root.cern,https://root.cern/doc/master/classRooUnblindOffset.html,2,['inherit'],['inherited']
Modifiability," ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindPrecision.h>. Inheritance diagram for RooUnblindPrecision:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindPrecision() [1/4]. RooUnblindPrecision::RooUnblindPrecision ; (; ). default . ◆ RooUnblindPrecision() [2/4]. RooUnblindPrecision::RooUnblindPrecision ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . double ; centralValue, . double ; scale, . RooAbsReal & ; blindValue, . bool ; sin2betaMode = false . ). Constructor from a given RooAbsReal (t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindPrecision.html:61670,inherit,inherited,61670,doc/master/classRooUnblindPrecision.html,https://root.cern,https://root.cern/doc/master/classRooUnblindPrecision.html,2,['inherit'],['inherited']
Modifiability," ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindUniform.h>. Inheritance diagram for RooUnblindUniform:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindUniform() [1/3]. RooUnblindUniform::RooUnblindUniform ; (; ). default . ◆ RooUnblindUniform() [2/3]. RooUnblindUniform::RooUnblindUniform ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . double ; scale, . RooAbsReal & ; blindValue . ). Constructor from a given RooAbsReal (to hold the blinded value) and a set of blinding parameters. ; Parameters",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindUniform.html:61367,inherit,inherited,61367,doc/master/classRooUnblindUniform.html,https://root.cern,https://root.cern/doc/master/classRooUnblindUniform.html,2,['inherit'],['inherited']
Modifiability," ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  . Static Public Member Functions; static double GetDerivPrecision ();  get precision value used for calculating the derivative step-size ;  ; static void SetDerivPrecision (double eps);  precision value used for calculating the derivative step-size h = eps * |x|. ;  . Private Member Functions; double DoDerivative (const double *x, unsigned int icoord) const override;  ; double DoEval (const double *x) const override;  . Private Attributes; unsigned int fDim;  ; const IMultiGenFunction * fFunc;  ; unsigned int fNCalls;  ; bool fOwner;  . Static Private Attributes; static double fgEps = 0.001;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IGradientFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ; typedef IGradientFunctionMultiDimTempl< T > BaseGrad;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . #include <Math/MultiNumGradFunction.h>. Inheritance diagram for ROOT::Math::MultiNumGradFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MultiNumGradFunction() [1/2]. ROOT::Math::MultiNumGradFunction::MultiNumGradFunction ; (; const IMultiGenFunction & ; f). inline . Constructor from a IMultiGenFunction interface. ; Definition at line 57 of file MultiNumGradFunction.h. ◆ MultiNumGradFunction() [2/2]. template<class FuncType > . ROOT::Math::MultiNumGradFunction::MultiNumGradFunction ; (; FuncType ; f, . int ; n . ). inline . Constructor from a generic function (pointer or reference) and number of dimension implementing operator () (double * x) ; Definition at line 70 of file MultiNumGradFunction.h. ◆ ~Mult",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiNumGradFunction.html:3257,inherit,inherited,3257,doc/master/classROOT_1_1Math_1_1MultiNumGradFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiNumGradFunction.html,2,['inherit'],['inherited']
Modifiability," ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  . Private Member Functions; double DoEvalPar (const double *x, const double *p) const override;  evaluate the function given values and parameters (requested interface) ;  . Private Attributes; unsigned int fDim;  ; FuncPtr fFunc;  ; std::vector< double > fParams;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< double >; typedef IBaseFunctionMultiDimTempl< double > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . #include <Math/WrappedParamFunction.h>. Inheritance diagram for ROOT::Math::WrappedParamFunction< FuncPtr >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ WrappedParamFunction() [1/2]. template<typename FuncPtr = FreeParamMultiFunctionPtr> . ROOT::Math::WrappedParamFunction< FuncPtr >::WrappedParamFunction ; (; FuncPtr ; func, . unsigned int ; dim = 1, . unsigned int ; npar = 0, . double * ; par = nullptr . ). inline . Constructor a wrapped function from a pointer to a callable object, the function dimension and number of parameters which are set to zero by default. ; Definition at line 52 of file WrappedParamFunction.h. ◆ WrappedParamFunction() [2/2]. template<typename FuncPtr = FreeParamMultiFunctionPtr> . template<class Iterator >",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html:2929,inherit,inherited,2929,doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html,2,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  . #include <RooRealVar.h>. Inheritance diagram for RooRealVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ SharedPropertiesMap. using RooRealVar::SharedPropertiesMap = std::map<RooSharedProperties::UUID,std::weak_ptr<RooRealVarSharedProperties> >. protected . Definition at line 165 of file RooRealVar.h. Constructor & Destructor Documentation. ◆ RooRealVar() [1/5]. RooRealVar::RooRealVar ; (; ). Default constructor. ; Definition at line 111 of file RooRealVar.cxx. ◆ RooRealVar() [2/5]. RooRealVar::RooRealVar ; (; const char * ; name, . const char * ; title, . double ; value, . const char * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:72655,inherit,inherited,72655,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from RooAbsCachedReal; using CacheElem = FuncCacheElem;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooNumRunningInt; std::string _binningName;  Name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumCdf.html:59684,inherit,inherited,59684,doc/master/classRooNumCdf.html,https://root.cern,https://root.cern/doc/master/classRooNumCdf.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from RooAbsCachedReal; using CacheElem = FuncCacheElem;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:61726,inherit,inherited,61726,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,2,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from RooResolutionModel; RooFormulaVar * _basis = nullptr;  Basis function convolved with this resolution model. ;  ; Int_t _basisCode;  Identifier code for selected basis function. ;  ; bool _ownBasis;  Flag indicating ownership of _basis. ;  ; RooTemplateProxy< RooAbsRealLValue > x;  Dependent/convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:71903,inherit,inherited,71903,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:61313,inherit,inherited,61313,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,9,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that crea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvCoefVar.html:51795,inherit,inherited,51795,doc/master/classRooConvCoefVar.html,https://root.cern,https://root.cern/doc/master/classRooConvCoefVar.html,5,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooLegendre; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpHarmonic.html:51256,inherit,inherited,51256,doc/master/classRooSpHarmonic.html,https://root.cern,https://root.cern/doc/master/classRooSpHarmonic.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/HistFactory/ParamHistFunc.h>. Inheritance diagram for ParamHistFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [leg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:61820,inherit,inherited,61820,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStringVar.html:35682,inherit,inherited,35682,doc/master/classRooStringVar.html,https://root.cern,https://root.cern/doc/master/classRooStringVar.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsCategory; static const decltype(_stateNames) ::value_type & invalidCategory ();  A category state to signify an invalid category. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsCategory; value_type _currentIndex {std::numeric_limits<int>::min()};  Current category state. ;  ; std::vector< std::string ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:49093,inherit,inherited,49093,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,3,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsCategory; static const decltype(_stateNames) ::value_type & invalidCategory ();  A category state to signify an invalid category. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMappedCategory.html:43975,inherit,inherited,43975,doc/master/classRooMappedCategory.html,https://root.cern,https://root.cern/doc/master/classRooMappedCategory.html,4,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include <RooAbsHiddenReal.h>. Inheritance diagram for RooAbsHiddenReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsHiddenReal.html:59988,inherit,inherited,59988,doc/master/classRooAbsHiddenReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsHiddenReal.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities rema",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCrystalBall.html:70818,inherit,inherited,70818,doc/master/classRooCrystalBall.html,https://root.cern,https://root.cern/doc/master/classRooCrystalBall.html,3,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstVar.html:56165,inherit,inherited,56165,doc/master/classRooConstVar.html,https://root.cern,https://root.cern/doc/master/classRooConstVar.html,7,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooResolutionModel; RooFormulaVar * _basis = nullptr;  Basis function convolved with this resolution model. ;  ; Int_t _basisCode;  Iden",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTruthModel.html:70752,inherit,inherited,70752,doc/master/classRooTruthModel.html,https://root.cern,https://root.cern/doc/master/classRooTruthModel.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindCPAsymVar.html:60766,inherit,inherited,60766,doc/master/classRooUnblindCPAsymVar.html,https://root.cern,https://root.cern/doc/master/classRooUnblindCPAsymVar.html,4,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBreitWigner.html:71834,inherit,inherited,71834,doc/master/classRooBreitWigner.html,https://root.cern,https://root.cern/doc/master/classRooBreitWigner.html,41,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Binding.html:58933,inherit,inherited,58933,doc/master/classRooCFunction1Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Binding.html,35,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include <RooRealIntegral.h>. Inheritance diagram for RooRealIntegral:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ IntOperMode. enum RooRealIntegral::IntOperMode. protected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:62803,inherit,inherited,62803,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Off",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:77385,inherit,inherited,77385,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability," ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verbose",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedReal.html:60743,inherit,inherited,60743,doc/master/classRooAbsCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedReal.html,1,['inherit'],['inherited']
Modifiability," ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachDataSet (const RooAbsData &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; void attachDataStore (const RooAbsDataStore &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; const std::set< std::string > & attributes () const;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained TObjects We implement comparison by name, resulting in alphabetical sorting by object name. ;  ; std::size_t dataToken () const;  Returns the token for retrieving results in the BatchMode. For internal use only. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:32664,variab,variable,32664,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,6,['variab'],"['variable', 'variables']"
Modifiability," ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachDataSet (const RooAbsData &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; void attachDataStore (const RooAbsDataStore &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; const std::set< std::string > & attributes () const;  ; virtual bool canComputeBatchWithCuda () const;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained TObjects We implement comparison by name, resulting in alphabetical sorting by object name. ;  ; std::size_t dataToken () const;  Returns the token for retrieving results in the BatchMode. For internal use only. ;  ; Int_t defaultPri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:19738,variab,variable,19738,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,8,['variab'],"['variable', 'variables']"
Modifiability," ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachDataSet (const RooAbsData &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; void attachDataStore (const RooAbsDataStore &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; const std::set< std::string > & attributes () const;  ; virtual bool canComputeBatchWithCuda () const;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained TObjects We implement comparison by name, resulting in alphabetical sorting by object name. ;  ; virtual std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const;  ; std::si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:29698,variab,variable,29698,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,2,['variab'],"['variable', 'variables']"
Modifiability," ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachDataSet (const RooAbsData &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; void attachDataStore (const RooAbsDataStore &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; const std::set< std::string > & attributes () const;  ; virtual bool canComputeBatchWithCuda () const;  ; virtual bool checkObservables (const RooArgSet *nset) const;  Overloadable function in which derived classes can implement consistency checks of the variables. ;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained TObjects We implement comparison by name, resulting in alphabetical ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:30753,variab,variable,30753,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,212,['variab'],"['variable', 'variables']"
Modifiability," ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachDataSet (const RooAbsData &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; void attachDataStore (const RooAbsDataStore &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; const std::set< std::string > & attributes () const;  ; virtual bool canComputeBatchWithCuda () const;  ; virtual bool checkObservables (const RooArgSet *nset) const;  Overloadable function in which derived classes can implement consistency checks of the variables. ;  ; virtual TObject * clone (const char *newname=nullptr) const =0;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:21157,variab,variable,21157,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,24,['variab'],"['variable', 'variables']"
Modifiability," ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachDataSet (const RooAbsData &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; void attachDataStore (const RooAbsDataStore &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; const std::set< std::string > & attributes () const;  ; virtual bool checkObservables (const RooArgSet *nset) const;  Overloadable function in which derived classes can implement consistency checks of the variables. ;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained TObjects We implement comparison by name, resulting in alphabetical sorting by object name. ;  ; std::size_t dataToken",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:33906,variab,variable,33906,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,52,['variab'],"['variable', 'variables']"
Modifiability," ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollection &set);  Bind this node to objects in set. ;  ; void attachDataSet (const RooAbsData &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; void attachDataStore (const RooAbsDataStore &set);  Replace server nodes with names matching the dataset variable names with those data set variables, making this PDF directly dependent on the dataset. ;  ; const std::set< std::string > & attributes () const;  ; virtual bool checkObservables (const RooArgSet *nset) const;  Overloadable function in which derived classes can implement consistency checks of the variables. ;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained TObjects We implement comparison by name, resulting in alphabetical sorting by object name. ;  ; virtual std::unique_p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyVar.html:18746,variab,variable,18746,doc/master/classRooPolyVar.html,https://root.cern,https://root.cern/doc/master/classRooPolyVar.html,4,['variab'],"['variable', 'variables']"
Modifiability," ;  Static Public Member Functions inherited from TEveRefCnt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Color_t fBackColor;  ; UChar_t fBackRGBA [4];  ; Bool_t fDrawBack;  ; Color_t fFrameColor;  ; Bool_t fFrameFill;  ; Float_t * fFramePoints;  ; UChar_t fFrameRGBA [4];  ; Int_t fFrameSize;  ; EFrameType_e fFrameType;  ; Float_t fFrameWidth;  ;  Protected Attributes inherited from TEveRefBackPtr; RefMap_t fBackRefs;  ;  Protected Attributes inherited from TEveRefCnt; Int_t fRefCount;  . Private Member Functions;  TEveFrameBox (const TEveFrameBox &);  ; TEveFrameBox & operator= (const TEveFrameBox &);  . Friends; class TEveFrameBoxGL;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Types inherited from TEveRefBackPtr; typedef RefMap_t::iterator RefMap_i;  ; typedef std::map< TEveElement *, Int_t > RefMap_t;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveFrameBox.h>. Inheritance diagram for TEveFrameBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EFrameType_e. enum TEveFrameBox::EFrameType_e. EnumeratorkFT_None ; kFT_Quad ; kFT_Box . Definition at line 23 of file TEveFrameBox.h. Constructor & Destructor Documentation. ◆ TEveFrameBox() [1/2]. TEveFrameBox::TEveFrameBox ; (; const TEveFrameBox & ; ). private . ◆ TEveFrameBox() [2/2]. TEveFrameBox::TEveFrameBox ; (; ). Definition at line 25 of file TEveFrameBox.cxx. ◆ ~TEveFrameBox(). TEveFrameBox::~TEveFrameBox ; (; ). override . Destructor. ; Definition at line 45 of file TEveFrameBox.cxx. Member Function Documentation. ◆ Class(). static T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveFrameBox.html:13903,inherit,inherited,13903,doc/master/classTEveFrameBox.html,https://root.cern,https://root.cern/doc/master/classTEveFrameBox.html,3,['inherit'],['inherited']
Modifiability," ;  Static Public Member Functions inherited from TMutexImp; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; enum  EStatusBits { kIsRecursive = (1ULL << ( 14 )); };  . Private Attributes; CRITICAL_SECTION fCritSect;  . Friends; class TWin32Condition;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWin32Mutex.h>. Inheritance diagram for TWin32Mutex:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Mutex.html:9689,inherit,inherited,9689,doc/master/classTWin32Mutex.html,https://root.cern,https://root.cern/doc/master/classTWin32Mutex.html,1,['inherit'],['inherited']
Modifiability," ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for TXMLEntity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TXMLEntity() [1/2]. TXMLEntity::TXMLEntity ; (; ). inline . is system (file) ; Definition at line 165 of file TXMLEngine.cxx. ◆ TXMLEntity() [2/2]. TXMLEntity::TXMLEntity ; (; const TString & ; name, . const TString & ; value, . Bool_t ; sys . ). inline . Definition at line 166 of file TXMLEngine.cxx. Member Function Documentation. ◆ IsSystem(). Bool_t TXMLEntity::IsSystem ; (; ); const. inline . Definition at line 167 of file TXMLEngine.cxx. Member Data Documentation. ◆ fSystem. Bool_t TXMLEntity::fSystem. private . Definition at line 163 of file TXMLEngine.cxx. io/xml/src/TXMLEngine.cxx. TXMLEntity. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:48 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEntity.html:10717,inherit,inherited,10717,doc/master/classTXMLEntity.html,https://root.cern,https://root.cern/doc/master/classTXMLEntity.html,1,['inherit'],['inherited']
Modifiability," ;  TGondzioSolver (const TGondzioSolver &another);  Copy constructor. ;  ;  TGondzioSolver (TQpProbBase *of, TQpDataBase *prob, Int_t verbose=0);  Constructor. ;  ;  ~TGondzioSolver () override;  Deconstructor. ;  ; void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t status_code, Int_t level) override;  Print information about the optimization process and monitor the convergence status of thye algorithm. ;  ; TClass * IsA () const override;  ; TGondzioSolver & operator= (const TGondzioSolver &source);  Assignment operator. ;  ; virtual void Reset_parameters ();  ; Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resid) override;  Solve the quadratic programming problem as formulated through prob, store the final solution in iterate->fX . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQpSolverBase;  TQpSolverBase ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGondzioSolver.html:1542,inherit,inherited,1542,doc/master/classTGondzioSolver.html,https://root.cern,https://root.cern/doc/master/classTGondzioSolver.html,1,['inherit'],['inherited']
Modifiability," ;  TObjArrayIter (const TObjArrayIter &iter);  Copy ctor. ;  ;  ~TObjArrayIter ();  ; const TCollection * GetCollection () const override;  ; TClass * IsA () const override;  ; TObject * Next () override;  Return next object in array. Returns 0 when no more objects in array. ;  ; Bool_t operator!= (const TIterator &aIter) const override;  This operator compares two TIterator objects. ;  ; Bool_t operator!= (const TObjArrayIter &aIter) const;  This operator compares two TObjArrayIter objects. ;  ; TObject * operator* () const override;  Return current object or nullptr. ;  ; TIterator & operator= (const TIterator &rhs) override;  Overridden assignment operator. ;  ; TObjArrayIter & operator= (const TObjArrayIter &rhs);  Overloaded assignment operator. ;  ; void Reset () override;  Reset array iterator. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TIterator; virtual ~TIterator ();  ; virtual Option_t * GetOption () const;  ; TObject * operator() ();  ; Bool_t operator== (const TIterator &other) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TIterator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TObjArrayIter ();  . Private Attributes; const TObjArray * fArray;  ; Int_t fCurCursor;  ; Int_t fCursor;  ; Bool_t fDirection;  . Additional Inherited Members;  Protected Member Functions inherited from TIterator;  TIterator ();  ;  TIterator (const TIterator &);  . #include <TObjArray.h>. Inheritance diagram for TObjArrayIter:. This browser is not able to show SVG: try Firefox, Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjArrayIter.html:1725,inherit,inherited,1725,doc/master/classTObjArrayIter.html,https://root.cern,https://root.cern/doc/master/classTObjArrayIter.html,1,['inherit'],['inherited']
Modifiability," Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TCanvas * MakeDefCanvas ();  Static function to build a default canvas. ;  ; static Bool_t SaveAll (const std::vector< TPad * > &={}, const char *filename="""", Option_t *option="""");  Save provided pads/canvases into the image file(s) Filename can include printf argument for image number - like ""image%03d.png"". ;  ; static void SetFolder (Bool_t isfolder=kTRUE);  If isfolder=kTRUE, the canvas can be browsed like a folder by default a canvas is not browsable. ;  ; static Bool_t SupportAlpha ();  Static function returning ""true"" if transparency is supported. ;  ;  Static Public Member Functions inherited from TPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:46079,inherit,inherited,46079,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,2,['inherit'],['inherited']
Modifiability," Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPad.html:38430,inherit,inherited,38430,doc/master/classTPad.html,https://root.cern,https://root.cern/doc/master/classTPad.html,1,['inherit'],['inherited']
