quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability," where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2203,test,testing,2203,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],"['testing', 'tests']"
Testability,"   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_E",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2063,test,testing,2063,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['test'],['testing']
Testability,"![CHT_Fluid_Solid](https://github.com/su2code/SU2/assets/38651601/5c025e63-bc14-4148-9625-67d77c6990c7). Was able to run a case with fluid and two solids with contact resistance between the solid domains. By setting a non-zero contact resistance between the solid domains there appears a temperature discontinuity between the solids, but by setting the contact resistance value to zero on the fluid-to-solid interfaces, the temperature trends are continuous. ; Further testing still required on more complicated cases, but the core functionality seems to work so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953:469,test,testing,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953,1,['test'],['testing']
Testability,""" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter; config_cfd.SOLUTION_FLOW_FILENAME = current_solution_ini; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; config_cfd.RESIDUAL_REDUCTION = float(adap_res[iSiz]); config_cfd.EXT_ITER = int(adap_ext_iter[iSiz]); ; config_cfd.WRT_BINARY_RESTART = ""NO""; config_cfd.READ_BINARY_RESTART = ""NO""; ; SU2_CFD(config_cfd); ; if not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : SU2_CFD Failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10823,log,log,10823,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['log'],['log']
Testability,"""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9626,test,testfile,9626,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testfile']
Testability,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:49,log,logging,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909,3,"['log', 'test']","['log', 'logging', 'test']"
Testability,"# Failing Regression tests (91 of'em); The Euler Wall BC (comp. & incomp. affected) is used in many Testcases. All failing tests are listed. ; Box checkked -> values adapted to newer ones. ; tiny delta = all delta_vals below 0.1; ; medium delta = one delta val larger than 0.1 but all below 1.0; ; big delta = one delta_val larger than 1.0. I use this post for me to keep track of what I already fixed on what is left to do. ## serial_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medium delta; - [x] oneram6, big delta, restart; - [x] fixedcl_naca0012, tiny delta; - [x] polar_naca0012, tiny delta; - [x] bluntbody, medium delta; - [x] inc_euler_naca0012, tiny delta; - [x] inc_nozzle, medium delta; - [x] inc_lam_bend, tiny delta; - [x] contadj_naca0012, big delta, cont.Adj. There is some issue with all the cont.adj. cases in the boundary formulation; - [x] contadj_oneram6, big delta, cont.Adj., great diff to develop; - [x] contadj_wedge, big delta, cont.Adj.; - [x] contadj_fixedcl_naca0012, big delta (no computed vals), cont.Adj.; - [x] harmonic_balance, tiny delta; - [x] sine_gust, tiny delta; - [x] aeroelastic, tiny delta; - [x] edge_VW, tiny delta, NICFD; - [x] edge_PPR, tiny delta, NICFD; - [x] uniform_flow, tiny delta; - [x] channel_2D, tiny delta; - [x] channel_3D, tiny delta; - [x] pipe, tiny delta; - [x] rotating_cylinders, medium delta; - [x] supersonic_vortex_shedding, big delta; - [x] fsi2d, tiny delta; - [x] stat_fsi; - [x] stat_fsi_restart; - [x] dyn_fsi; - [x] airfoil_fsi_rbf, big delta (no computed vals); - [x] contadj_euler_py; - [x] shape_opt_euler_py, big delta; - [x] opt_multiobj_py, medium delta; - [x] opt_multiobjcombo_py, medium delta; - [x] opt_multiobj1surf_py, medium delta; - [x] opt_2surf1obj_py, tiny delta; - [x] pywrapper_naca0012, tiny delta; - [x] pywrapper_aeroelastic, tiny delta; - [x] pywrapper_fsi2d, tiny delta. ## parallel_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524639197:21,test,tests,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524639197,3,"['Test', 'test']","['Testcases', 'tests']"
Testability,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:536,Test,TestCases,536,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"### Code Verification. I used a case similar to the one detailed in references [1] and [2], with a circular cylinder in high Re flow. It's a circular cylinder with a von-Karman vortex street. There's a couple reasons to not expect exact replication of their results. They used higher-order numerics (5th/3rd), a longer grid in the spanwise direction, structured overset grids, and an SST variant of DES. Here's a figure from reference [2]:. ![travinresults](https://user-images.githubusercontent.com/13340225/42509822-bc677aea-8412-11e8-8285-6e51895258b4.png); ; And here's the results of my rough test:. ![roe_dissipation](https://user-images.githubusercontent.com/13340225/42510382-54f3b516-8414-11e8-9be4-07aafdd2468a.png). As you can see, the central/upwind blending function is doing what it's supposed to do. It's going to 0 in regions with both high vorticity and a fine grid, but goes to 1 in the near-wall RANS regions and in the outer region of the flow. There are a few artifacts around the cylinder, where the grid is fine but the eddy viscosity is still low. I'm talking about the few spots you see around the cylinder. There is a relatively high vorticity there, and the grid is fine, so the values make sense. It's hard to tell if this is due to imperfections in the grid, imperfections in the code implementation, or imperfections in the NTS model itself. ### References. 1. A. Travin, M. Shur, M. Strelets, P. Spalart, Detached-Eddy Simulations Past a Circular Cylinder, Flow Turbul. Combust. 63 (1999) 293–313. doi:10.1023/A:1009901401183.; 2. A. Travin, M.L.Shur, M.K. Strelets, P.R. Spalart, M.L. Shur, Physical and numerical upgrades in the detached-eddy simulation of complex turbulent flows, Adv. LES Complex Flows Proc. Euromech Colloq. 412. (2002) 239–254. doi:10.1007/0-306-48383-1_16.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403806479:598,test,test,598,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403806479,1,['test'],['test']
Testability,"### Easter Egg - Mixed Precision; The work proposed above should have the solver run at the speed dictated by the available memory bandwidth (for implicit applications).; Keeping CSysMatrix in single precision, and solving the linear systems also in single precision, should therefore provide a good speedup (probably around 1.5 extra speedup).; Since all the flux computations would still be done in double precision no loss of accuracy would be incurred. However some stability can be lost on meshes with very high aspect ratios, therefore there would be a compile-time switch for this mode and the default would be all doubles (hence the Easter egg designation). This should be relatively easy to do cleanly since the relevant classes are already templated and have ""mixing-type logic"" for when they are used with AD. Except for central schemes, currently we would not gain much by doing it as residual loops are compute-bound and the linear solvers do not use that much time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-549037701:782,log,logic,782,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-549037701,1,['log'],['logic']
Testability,"% (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Lo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:9079,Log,Log,9079,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['Log'],['Log']
Testability,"'; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very sim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4009,test,tests,4009,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"(I don't usually build the python wrapper locally); On Ubuntu 18 (GCC 7.5) I can confirm the same problem linking the python wrapper library with default meson options.; However, passing -fPIC in CXXFLAGS and LDFLAGS solves the issue, clang-10 does not have this fPIC problem, and looking around I found other reports of this issue being particular to GCC (https://github.com/xoreaxeaxeax/rosenbridge/issues/1). Maybe in your case the environment variables are not making it to the compiler wrapper? (it looks like you are using a cluster and they can be funny...) Try giving a wrong value to CXXFLAGS (e.g. fPIK), meson should fail when it tests the compiler. So in summary I don't think we should change the defaults of the build system, but I'll ask other devs if they've had the same problem.; I'll change the tittle to make it easier for folks with the same issue to find this.; Please do let us know what solution you find, we may at least add a warning to ours doc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714:641,test,tests,641,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714,1,['test'],['tests']
Testability,"); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter; config_cfd.SOLUTION_FLOW_FILENAME = current_solution_ini; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; config_cfd.RESIDUAL_REDUCTION = float(adap_res[iSiz]); config_cfd.EXT_ITER = int(adap_ext_iter[iSiz]); ; config_cfd.WRT_BINARY_RESTART = ""NO""; config_cfd.READ_BINARY_RESTART = ""NO""; ; SU2_CFD(config_cfd); ; if not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : SU2_CFD Failed.\n""; ; ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10883,log,log,10883,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['log'],['log']
Testability,**All tests pass for both python 2.7 and python 3.2**; See [travis tests](https://travis-ci.org/gbaty/SU2/builds/123336107) that include both py2 and py3. Sorry again for my mistakes and thanks again for your work on docs and your answers. ; I don't know how i missed regression test link only two comments above :(,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210503165:6,test,tests,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210503165,3,['test'],"['test', 'tests']"
Testability,"**Disclaimer**; The performance numbers that follow are based on simple implementations of the methods, I do not claim any of my implementations or choice of methods to be optimal. If you know better speak up.; The data is from the case used to benchmark #753 (see #716), it is by no means an extensive collection of different grid types. I will share code and data with anyone who wants to repeat the tests on the condition they post detailed results. With that out of the way :) ... ### Green-Gauss Gradients. This is the plain edge-loop version of the code with boundary contributions omitted for simplicity:; ```C++; void computeGradients(size_t nEdge,; size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:245,benchmark,benchmark,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,4,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,", unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves min",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3060,test,test,3060,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['test']
Testability,"- Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?. `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`; - Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. ; - Sidenote: It is actually quite nice that build and run are in separate logs",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547502029:38,log,logs,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547502029,2,['log'],['logs']
Testability,"-------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------. [image]https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png; SU2_DEF: output when deforming with all markers included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid.; No surface deformation (scaling, rotation, or translation). ----------------------- Volumetric grid deformation ---------------------; Performing a translation of the volumetric grid.; Translational displacement: (1, 0, 0). ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 0.716938 seconds on 1 core. as far as I can tell the regression test failure is the same as for the current develop branch; I'll update this pull request whenever that is resolved. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/187#issuecomment-131578218.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:3272,test,test,3272,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,2,['test'],['test']
Testability,"--; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://user-images.githubusercontent.com/50565314/180910576-f6ebcaca-eafe-47bf-8e97-e5ea90033991.png); ![image](https://user-images.githubusercontent.com/50565314/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). Now I'm testing on effect of the numerical schemes and other options like CONV_NUM_METHOD_FLOW, MUSCL_TURB, CFL, and CFL_ADAPT.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824:3438,test,testing,3438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824,1,['test'],['testing']
Testability,"... well ... let me quickly stop the air strike on your position :D; somehow it managed to exactly fail the streamwise periodic stuff (as they were added more recently then it makes sense); I did not check check the release management 👍 so thanks for the info. > There was zero chance of breaking any testcases with those changes. I thought that as well, but I wouldn't be the first time I thought that and was proven otherwise ... :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1249#issuecomment-811453771:301,test,testcases,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811453771,1,['test'],['testcases']
Testability,".; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1582,test,testing,1582,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability,".; Thank you for all your support and work in this.; But I do have one query, is anytime the SU2 team worked on averaging mean; flow data (or even perturbations) to avoid huge memory issues with large; LES dumped files in SU2? I mean we are doing averaging but for a large; number of files locally offline is challenging so we are wondering if you; have anything like that during the simulation SU2 can dump averaged mean; flow for a number of iterations?; Please advise if any work or anything closer worked upon which we can use; or take it from there.; Thank you in advance for your help!. On Wed, May 27, 2020 at 8:32 PM Eduardo Molina <notifications@github.com>; wrote:. > Hi Monika,; >; > We are in the V&V process of a new wall model LES implementation. Also, I; > took the opportunity to start fixing the RANS wall function since it will; > share the same code structure with the WMLES part, i.e. replace the wall; > shear stress in the NS fluxes.; >; > We didn’t extensively test the RANS wall functions, only very limited test; > cases. It will be great if you could run your own cases using the following; > branch:; >; > https://github.com/su2code/SU2/tree/feature_WallModelLES <; > https://github.com/su2code/SU2/tree/feature_WallModelLES>; >; > Please let me know if you need additional help and looking forward to hear; > from you.; >; > Best,; >; > Eduardo; >; >; >; > > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > >; > >; > > Sure Juan! I would like to. Because I was running on RANS but I am; > working; > > on LES to make this wall functions work which is not working either.; > > Please let us know how we can support and work to get this working for; > LES; > > simulation (wall models in SU2).; > >; > > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <; > notifications@github.com>; > > wrote:; > >; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina; > (copied); > > > co-advised a short project last year ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-648243104:1071,test,test,1071,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-648243104,2,['test'],['test']
Testability,"/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in advance!. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:3638,test,test,3638,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,4,['test'],['test']
Testability,"2-440f-11e5-8681-b68318da0ce7.png). SU2_DEF output when only ""airfoil"" marker included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history; # Residual tolerance target = 4.14044e-11; # Initial residual norm = 15.8102; 0 1; 50 2.17385e-06; 100 1.08998e-10; # FGMRES final (true) residual:; # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. ![image](https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png); SU2_DEF: output when deforming with all markers included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid.; No surface deformation (scaling, rotation, or translation). ----------------------- Volumetric grid deformation ---------------------; Performing a translation of the volumetric grid.; Translational displacement: (1, 0, 0). ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 0.716938 seconds on 1 core.; ```. as far as I can tell the regression test failure is the same as for the current develop branch; I'll update this pull request whenever that is resolved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-131578218:2039,test,test,2039,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-131578218,1,['test'],['test']
Testability,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2217,log,log,2217,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,2,['log'],['log']
Testability,"8372309 fixed the `MPI_Allgatherv` function used in a non-MPI build. Before, it ignored the displacement (which is 1 for the index arrays). This was revealed by experiments with the CI pipeline in #1292. Now the tests succeed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-850382531:212,test,tests,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-850382531,1,['test'],['tests']
Testability,": 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Common/src/adt_structure.cpp | 11 +-; Common/src/blas_structure.cpp | 27 ++--; Common/src/fem_geometry_structure.cpp | 2 +-; Common/src/geometry_structure.cpp | 131 ++++++++++++++-----; Common/src/matrix_structure.cpp | 14 +-; Common/src/wall_model.cpp | 4 +-; SU2_CFD/src/output_structure.cpp | 2 +-; SU2_IDE/Xcode/SU2_CFD.xcodeproj/project.pbxproj | 166 ++++++++++++------------; SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj | 144 ++++++++++++++++----; SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.pbxproj | 130 +++++++++++--------; SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.pbxproj | 74 ++++++++++-; SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj | 124 ++++++++++++++++--; SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj | 62 +++++----; TestCases/parallel_regression.py | 26 ++--; TestCases/parallel_regression_AD.py | 4 +-; TestCases/serial_regression.py | 24 ++--; TestCases/serial_regression_AD.py | 2 +-; 19 files changed, 659 insertions(+), 292 deletions(-); Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:2736,Test,TestCases,2736,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,4,['Test'],['TestCases']
Testability,"; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3288,test,testing,3288,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:274,test,test,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505,1,['test'],['test']
Testability,"> * From the history output it seems that the maximum CFL value is not being reached, even for small CFL values the update seems to stop one step before max. There was a small factor applied to keep it above and below the CFL min and max (1.001, 0.999), respectively. But I have removed that, since it is not necessary. Btw, I have added the ability to print the min/max time step, and min/max/avg CFL to the screen by adding MIN_DELTA_TIME, MAX_DELTA_TIME, MIN_CFL, MAX_CFL, AVG_CFL to the SCREEN_OUTPUT. > * I still see some residual oscillations with high CFL values (100-1000), I think the issue is that despite the oscillations the linear solver still converges fine, and so the reduction never kicks in. There are reduction checks for both the linear and nonlinear residuals, but they likely still need some tuning (the factors were just empirical from my tests). I am also finding in my tests that if I am having trouble with a particular RANS case, sometimes it is most effective to turn off the adaption and go for a fixed CFL of 250, 500, or even 1000, if stable (don't forget you may need NUM_METHOD_GRAD_RECON= LEAST_SQUARES for that to be stable).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-541376224:862,test,tests,862,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-541376224,2,['test'],['tests']
Testability,"> * Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?; > ; > `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`. I don't think so. Maybe they'll add that in the future. > * Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. 20 concurrent jobs. There is no limitation in the time-per-month for public repositories. Every job has 2 cores, 7GB of memory and 14GB of disk space. Source:; https://help.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#usage-limits; https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions#supported-virtual-environments-and-hardware-resources",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547509688:40,log,logs,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547509688,1,['log'],['logs']
Testability,"> * the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. The badge is for the develop branch. But the tests never ran so far for that branch, thats why there is no badge yet. > * My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. I am gonna remove the build_action repo. I created that because I thought it would be needed. But its not anymore. Good point about the files. Actually forgot to add them to the repo :+1: The nice thing is the only thing executed in the container is a bash script that you can run also without docker, in case you need to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547363908:213,test,tests,213,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547363908,2,['test'],"['test', 'tests']"
Testability,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:596,test,tested,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555,4,['test'],['tested']
Testability,"> ; > ; > @TobiKattmann any idea about what may be happening with the unsteady cht tutorial?. Oh man I am so sorry, It was already failing in #1290 that was merged 3 days ago by me. So it is not your problem @Nicola-Fonzi . . Let me explain how that happened (not to justify that or anything): I wanted to move the unsteady CHT case to the tutorial.py file because it is, in fact, a tutorial. As I didn't have a PR open that time I put that into #1226 because it fit into the PR-scope. The PR was not worked on ever since so I now thought I just squeeze it into #1290 to have that covered.; The testcase was not failing in #1226 so I cherry-picked that into #1290 and obviously didn't check if it still works. Code Factor was always giving me red-crosses for all the commits so I didn't pay much attention to that :( 👎 . I apologize again and will fix that asap and see what is going on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859532720:595,test,testcase,595,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859532720,1,['test'],['testcase']
Testability,"> ; > ; > Found a bug where I get a deadlock for a big case while writing. Have to look into it to see whether its a problem on our cluster or in the code. If someone could test the vtu/vtm output on a big case (> 32 cores), that would be also very helpful. I don't have these problems. I ran the coupled_cht/incomp_2d case on 32 and 56 cores (28 cores/node) without any issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845#issuecomment-576555730:173,test,test,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-576555730,1,['test'],['test']
Testability,"> ; > ; > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere. With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741601970:60,test,testcase,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601970,3,['test'],"['test', 'testcase']"
Testability,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:41,Test,Testcases,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843,6,['Test'],"['Testcase', 'Testcases']"
Testability,"> ; > ; > Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; > We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms.; > ; > Is the aligned_alloc from stdlib OK for Win64?. `std::aligned_alloc` is C++17 addition but MSVC does not have it (https://developercommunity.visualstudio.com/solutions/473365/view.html), it didn't work with MinGW as well. Have a look at https://github.com/boostorg/align, in `detail` folder. On windows, the aligned memory has to be freed by `_aligned_free` instead of `free` due to old runtime implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-554401239:213,test,test,213,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554401239,1,['test'],['test']
Testability,"> ; > ; > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;). I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576:47,test,testcase,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576,4,['test'],"['testcase', 'testcases', 'tests']"
Testability,"> ; > ; > When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?. 👍 Yep, I guess this `Complex code` without any further detail of codeFactor is a bug or sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222#issuecomment-792577785:19,test,tests,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792577785,2,['test'],"['test', 'tests']"
Testability,"> > > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > > Thank you in advance!; > > ; > > ; > > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:279,test,testing,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,2,['test'],"['test', 'testing']"
Testability,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:1099,benchmark,benchmark,1099,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,1,['benchmark'],['benchmark']
Testability,"> > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > Thank you in advance!; > ; > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > ; > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer. If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!. I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it. . If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days. I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920:265,test,testing,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920,4,['test'],"['test', 'test-case', 'testing']"
Testability,"> > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.; > ; > With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?. should we add a testcase to the SU2/TestCases/incomp_navierstokes repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220:54,test,testcase,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220,5,"['Test', 'test']","['TestCases', 'test', 'testcase']"
Testability,"> > Hi, I can build this new feature and run simulation with; > > VISCOSITY_MODEL= COOLPROP CONDUCTIVITY_MODEL= CONSTANT_COOLPROP; > > But the building process on github failed.; > > I need your help :); > > Thank you.; > ; > I suggest to click on 'Details' next to each of the regression tests and see why it fails. I saw that there are at least 2 different errors, one was for instance 'coolprop.h' not found. You are right, I am trying to solve these errors one by one. Thank you for your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1312476704:289,test,tests,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1312476704,1,['test'],['tests']
Testability,"> > I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?; > ; > That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements: https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development; > ; > The domain is just a rectangle so pretty simple to set up.; > ; > You could also use the V&V test that we have, but it is a variable density jet: https://su2code.github.io/vandv/SANDIA_jet/. I did some tests on a supersonic jet, since I already had the files, but it's a quite complex case so it's not that good to verify the implementation. I will look into the simpler cases you mentioned !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092,13,"['Test', 'test']","['TestCases', 'test', 'testcase', 'tests']"
Testability,"> > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;); > ; > I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :). Seems to be like that here as well:; After e95cdfa, only `transonic_stator` in `hybrid_regression_AD.py` failed.; After 475c697, only `discadj_incomp_turb_NACA0012_sa` in `hybrid_regression_AD.py` failed.; After b704f9e no test in `hybrid_regression_AD.py` failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081:41,test,testcase,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081,5,['test'],"['test', 'testcase', 'testcases', 'tests']"
Testability,"> @Cristopher-Morales What's going on with the multizone test setup?. I have updated the multizone restart file, I will update the residuals of this test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956#issuecomment-1459990724:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956#issuecomment-1459990724,2,['test'],['test']
Testability,"> @Cristopher-Morales can you check if bounded scalar works for you for this setup with compressible flow? I activated it and it seems to work fine for the small testcase that you sent. It is much better than scalar upwind. ![species_transport](https://github.com/su2code/SU2/assets/98025159/23a52867-3467-443d-b935-01c9aa34d30c); Hi, yes it works much better, specially if we refine the mesh towards the walls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2067695749:162,test,testcase,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2067695749,1,['test'],['testcase']
Testability,"> @Cristopher-Morales you can change the file .github/workflows/regression.yml to point to your branch with updated restarts (look for -c develop in that file). I thought I had commented this but maybe I forgot to press comment xD. Hi Pedro, I have updated the restart test cases. Please let me know if something else is missing. Thank you so much in advance!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796#issuecomment-1317329239:269,test,test,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796#issuecomment-1317329239,1,['test'],['test']
Testability,"> @EvertBunschoten That's great, thanks!; > ; > Can you first make sure that the regression tests run again? Now, all existing flamelet regression tests fail. The regression tests for flamelet now complete nominally again",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1623821187:92,test,tests,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1623821187,3,['test'],['tests']
Testability,> @EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it. Do you have time to wrap it up and add a simple regression test?. I just added a test case and tutorial under the TestCases and Tutorials repo under the same branch name. I'm also writing a short tutorial on the SU2 website repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145:172,test,test,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145,5,"['Test', 'test']","['TestCases', 'test']"
Testability,"> @PENGYAN777 great thanks for the fixes. What more do you need to do on this PR? From the SU2 side we just need you to add a regression test. You will need to change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI) and then add a test to parallel_regression.py; > ; > **NOTE** If you need to add a new mesh file, do not commit the mesh in the code repo, instead open a PR to the TestCases repo with the mesh. I think there are **two more things** I can do, to improve this new feature. 1. Now this new feature can only work for inviscid flow since the viscosity and conductivity are still obtained from Sutherland model or other default models. My next step is to let SU2 get viscosity and conductivity from CoolProp then this new feature can also apply for viscous flow. 2. For subcritical flow, it is possible for flow to enter two-phase region while CoolProp need distribution of phases to compute speed of sound. Since SU2 does not have two-phase flow solver, I plan to let SU2 choose Peng-Robinson model for subcritical flow and CoolProp for supercritical mode. Do you have any suggestion?. Once I finish these two functions and get approved from you, then I will add the regression test as you advised. Thank you for your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621:137,test,test,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"> @alecappiello Any news from your side?. Sorry for my late reply. Unfortunately, I don't have great news. ; I've done some tests locally, but I couldn't find a reason why the Aachen test case should behave differently. . I have tried restarting the calculation by means of feature_asan from:; - Aachen restart files obtained with better convergence of SU2_CFD; - Aachen restart files obtained with a setup of the CFD calculation similar to the Jones turbine, that is, same turbulence model, spacial fourier disable for the giles bc.; In both cases I still get a big jump in the residuals, although smaller in the second case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2100690327:124,test,tests,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2100690327,2,['test'],"['test', 'tests']"
Testability,"> @alecappiello The Aachen turbine case is in the `feature_asan` branch since [046de67](https://github.com/su2code/SU2/pull/2246/commits/046de6798bad6ffc7205993df7fa253730cd8f9f), could it be that you tested with an older version of the branch?. Hi @jblueh, I double-checked and you're right. Sorry for that. I'm installing the right one now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2064504194:201,test,tested,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2064504194,1,['test'],['tested']
Testability,"> @alecappiello develop is updated with a fix for the thread sanitizer issue, it should fix your CI pipeline once you merge it into your branch. Thanks a lot! I've just done it and tsan tests are indeed not failing anymore!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-2003325587:186,test,tests,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-2003325587,1,['test'],['tests']
Testability,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764812340:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340,1,['test'],['tests']
Testability,"> @bigfooted reports that the Aachen turbine case in current develop is not deterministic (see [here](https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066) and [here](https://github.com/su2code/SU2/actions/runs/8658658261/attempts/1)), that could be an issue, too. If it is due to memory issues, the changes in this PR might fix this. I'm not sure about what is the cause of this poorly deterministic behaviour. I can imagine that the convergence level of the restart plays a role. I'll be running some tests with better converged restart files and let you guys know",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2064540001:515,test,tests,515,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2064540001,1,['test'],['tests']
Testability,"> @danielmayer where does the python script for FADO go? here or in the Testcases repository?. Good question. I think the purpose of the TestCases repo is to separate large files that don't change much from the code base. Since those scripts are small, I would lean towards putting them in the SU2 repo. Another option is to add them as a new test case to FADO, but that adds another layer of complexity. What do you think? What does @pcarruscag think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2018796774:72,Test,Testcases,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2018796774,3,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"> @jayantmukho You can modify the routine CFlowOutput::WriteVolume_Output() in order to disable the writing of the files. Yes, I thought that would be the easiest place to make the change. But unfortunately, this gets ignored when the `CSingleZoneDriver` runs `SetResult_Files` and forces the output with the `force_writing` option. `StopCalc` passed into this function for `force_writing` and that is basically always true at this point in the case of steady RANS since the `CFluidIteration` has just finished running `Solve()`. An easy way to fix this would be to add `force_writing` to the input of `WriteVolume_Output`. I can preserve the behavior in the `COutput::WriteVolume_Output` but add some logic for the fixed CL mode in the `CFlowOutput::WriteVolume_Output`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540650002:702,log,logic,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540650002,1,['log'],['logic']
Testability,"> @jblueh are the tsan tests using a special version of CoDi?; > ; > ```; > Note: switching to 'refs/pull/2158/merge'.; > ; > You are in 'detached HEAD' state. You can look around, make experimental; > M	externals/codi; > ```; > ; > Does it need some kind of update?. No, CoDi should be fine. Tsan does not need a special version of CoDi and the correct commit is checked out a couple of lines below the quoted ones. Tsan is failing in other PRs, too. There seems to be a general issue with tsan and github runners, I am looking into it right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999529180:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999529180,1,['test'],['tests']
Testability,"> @kursatyurt Hello, thank you so much for the lead.; > ; > Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). To learn the basics, it's a good idea, but for large-scale projects, I prefer using existing libraries if possible.; Those libraries generally exploit state-of-the-art solution like mixed-precision computing. A gaming GPU is not way faster than a good CPU in double precision, but way faster in single precision, most of them have 64:1 ratio, however server class GPU have 2:1 ratio. Also when available they use vendor libraries like cuBLAS or hipBLAS. It is always nice to have you only care about connection and somebody else handle the solver as performant as possible. In future probably they will provide more and more solvers and it will be automagically works. It is kind of light-weight too, not a huge dependency like Trilinos or PETSc. ; > ; > I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay.; > ; > Again, thank you for the lead!. I can test on various GPUs (P100/V100/A100 and 4070Mobile) on single node multi-gpu etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409:1629,test,test,1629,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409,2,['test'],['test']
Testability,"> @pcarruscag , kindly change the name of restart_flow.dat to solution_flow.dat for Inviscid supersonic flow past a ramp in a channel #122 pull request (merged) case. That's why regression failed this time (could not find restart file solution_flow.dat). Or perhaps I can change the restart file name to restart_flow.dat itself for passing the regression test (may not be a good practice)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1501031509:355,test,test,355,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1501031509,1,['test'],['test']
Testability,> @suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now. Thanks @WallyMaier. Now serial and parallel regression test work smoothly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-958192673:27,Test,TestCases,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958192673,2,"['Test', 'test']","['TestCases', 'test']"
Testability,> @suargi Just a service note on the hybrid_regression_AD.py reg tests that fail: They seem to sometimes fail due to mood swings or idk. So if you Re-run them in the `Checks` tab above or merge the latest develop they might not fail on you. Thank you @TobiKattmann. I will keep it in mind!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908181718:65,test,tests,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181718,1,['test'],['tests']
Testability,"> @sun5k @rois1995 we now have 2 PR's on the same subject. This one is already reviewed, and I am not keen on wasting work (mine and others). The way I see it this PR followed the way we encourage for contributions to SU2, draft PR, etc, and thus it should be integrated. So, @sun5k can you finish the little things missing here? That way PR #1788 can then build on top of this. Oh, @rois1995 has significant progress in the LM model. I didn't know about this progress because I missed the SU2 conference in 2022. Now, I'm making the V&V and tutorial cases in my [repository](https://github.com/sun5k/su2code.github.io/blob/master/_vandv/LM_transition.md). So, at least tomorrow, I will PR to V&V, Tutorials, and TestCases. After PR of the V&V, Tutorials, and TestCases, I thought almost done about this PR #1751. Is there anything else I should do with this PR #1751?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001:713,Test,TestCases,713,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001,2,['Test'],['TestCases']
Testability,"> @sun5k please take care of the two comments above from my last review, and add regressions for your 2 tutorials (see what is done in TestCases/tutorials.py. Then I think we can merge this PR!. I'm seeing TestCases/tutorials.py. I have some questions about the code.; In the tutorials.py in transition flat plate for the BC model. . tutorial_trans_flatplate = TestCase('transitional_flatplate_tutorial'); tutorial_trans_flatplate.cfg_dir = ""../Tutorials/compressible_flow/Transitional_Flat_Plate""; tutorial_trans_flatplate.cfg_file = ""transitional_BC_model_ConfigFile.cfg""; tutorial_trans_flatplate.test_iter = 0; tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952] #last 4 columns; tutorial_trans_flatplate.su2_exec = ""mpirun -np 2 SU2_CFD""; tutorial_trans_flatplate.timeout = 1600; tutorial_trans_flatplate.tol = 0.00001; tutorial_trans_flatplate.no_restart = True; test_list.append(tutorial_trans_flatplate). I guess, ; ""tutorial_trans_flatplate.test_iter"" is a number of iterations,; ""tutorial_trans_flatplate.su2_exec"" is the command for SU2_CFD,; ""tutorial_trans_flatplate.timeout"" is the maximum program running time, ; ""tutorial_trans_flatplate.tol"" is a tolerance for convergence criteria,; ""tutorial_trans_flatplate.no_restart"" is a restart option. . I can't understand this whole sentence.; ""tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952]"". Could you explain what's meaning?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1294467724:135,Test,TestCases,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1294467724,3,['Test'],"['TestCase', 'TestCases']"
Testability,"> And #include <array> worked for me. Didn't think too much of it, but I also don't have a PC or; >Linux readily available to test on another OS. I assumed it's a clang thing. As far as I can tell, the only place were the #include <array> statement is found is in CConfig.hpp. And that include file is not included directly in adt_structure.hpp, so it seems logical that you get this warning. However, it compiles just fine on Linux, so maybe that is done implicitly? Anyway, it does not hurt to add the #include <array> statement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/981#issuecomment-627125934:126,test,test,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/981#issuecomment-627125934,2,"['log', 'test']","['logical', 'test']"
Testability,"> Aside from my last two comments, and the possibility I broke the code :), this looks ready. Is this missing anything, or is it ready to merge?. Thank you so much @pcarruscag for your feedback. there is one thing left, it is about the residuals of the test case (species2_primitiveVenturi_mixingmodel.cfg) that I added in the previous pull request, they have changed exceeding in some outputs the tolerance 0.00001 with respect to the values stored in the parallel_regression.py, however the test case converges very well, so could it be possible to modify the values stored in that test case in order to not have this discrepancy between values stored and computed? Thank you so much in advance!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520:253,test,test,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520,6,['test'],['test']
Testability,"> Below you can find a transitional test case using B-C model implemented in SU2:; > https://su2code.github.io/tutorials/Transitional_Flat_Plate/. Samet, nice to meet you! Thank you for your suggestion! I have learned this model in current SU2 version. B-C model can provide quite good results in many teatcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446631804:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446631804,2,['test'],['test']
Testability,"> Check if you need to update the config template or any doc on the website. It would also be good to modify an existing test case to exercise this feature. Thank you so much for your comment. Yes, I will update the website with this additional feature. I will modify one of the existing test cases in this pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485:121,test,test,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485,2,['test'],['test']
Testability,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:848,test,testcases,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['test'],['testcases']
Testability,"> Does anyone know why we get this random failures from travis?; > ; > > No output has been received in the last 20m0s, this potentially indicates a stalled build or something wrong with the build itself.; > ; > It does not seem to be related with a particular test case... Unfortunately that happens a lot lately. Haven't figured out what the reason is. I assume its something with MPI on the virtual machines in Travis. Hard to debug though, I can test a different MPI version maybe...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-543570100:261,test,test,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-543570100,2,['test'],['test']
Testability,"> Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5478,test,testing,5478,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],['testing']
Testability,"> For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. I had a look at the following part of the output:. Setting the multigrid structure.; +-------------------------------------------+; | MG Level| CVs|Aggl. Rate| CFL|; +-------------------------------------------+; | 0| 14165| 1/1.00| 2.5|; | 1| 3892| 1/3.64| 1.96566|; | 2| 1031| 1/3.77| 1.51755|; | 3| 276| 1/3.74| 1.17777|; | 4| 70| 1/3.94| 0.889704|; | 5| 19| 1/3.68| 0.695288|. So I think that MGLEVEL=6 is too high, it makes the coarsest mesh have too few points. We should choose e.g. MGLEVEL=4 for testing. The `turb_SA_RAE2822.cfg` with MGLEVEL=4, MGCYCLE=FULLMG_CYCLE runs without error with `mpirun -n 2`. With `mpirun -n 3`, I get an error sometimes. I think this is related to the third issue / #1430 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198:603,test,testing,603,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198,1,['test'],['testing']
Testability,"> Great! I did not run flamelet + CHT in a full optimization loop, yet. My next step is to validate gradients and add a regression test for the adjoint of flamelet + CHT.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033:131,test,test,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033,1,['test'],['test']
Testability,"> Here is a smaller [testcase](https://drive.google.com/open?id=1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a). It is an existing SU2 test case converted while adding MIXED elements. @MicK7 : does this test work for you? We could consider replacing the existing SU2 mesh with your CGNS mesh for that regression test (that way we keep overhead down by not adding a new test, but get more CGNS coverage).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526380290:21,test,testcase,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526380290,5,['test'],"['test', 'testcase']"
Testability,"> Hi @TobiKattmann; > ; > Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week.; > ; > > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to ma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:203,test,tested,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,1,['test'],['tested']
Testability,"> Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > ; > Thank you in advance!. Hi @rois1995 Of course! ; However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed.; Which configuration file would you want?. By any chance, are you implementing or developing a transition model? ; Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061:261,test,testing,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061,1,['test'],['testing']
Testability,"> Hi Ale, can you add the mesh (from the workshop I presume) to the Testcases repo with a restart file and then use that to run a coupled iterations for regression testing? We may need to wait for the turbo outputs PR. Hi Pedro, I'm adding them now. ; Yes, configs and mesh are from the tutorial, although I slightly amended the config to make it work with develop (just one config input commented), so that we don't need to wait for that PR. In fact, I added the folder to develop. For the regresstion testing (sorry for the silly question, I'm a bit of a novice), is it enough to run the single test case or should I do the proper regression test with provided python script?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463:68,Test,Testcases,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463,5,"['Test', 'test']","['Testcases', 'test', 'testing']"
Testability,"> Hi, I can build this new feature and run simulation with; > ; > VISCOSITY_MODEL= COOLPROP CONDUCTIVITY_MODEL= CONSTANT_COOLPROP; > ; > But the building process on github failed.; > ; > I need your help :); > ; > Thank you. I suggest to click on 'Details' next to each of the regression tests and see why it fails. I saw that there are at least 2 different errors, one was for instance 'coolprop.h' not found.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1312462930:288,test,tests,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1312462930,1,['test'],['tests']
Testability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). According to the configure file(line 2726), try 'make install-strip' after 'make'. ; The exe will be smaller than before after adding the strip option.; The following link may help. Just have a look at faq 6.3.; https://www.cygwin.com/faq.html; Good luck.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519762878:235,log,log,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519762878,3,['log'],['log']
Testability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). The fllowing link may help us; https://stackoverflow.com/questions/1042773/gcc-c-hello-world-program-exe-is-500kb-big-when-compiled-on-windows-how",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519737756:235,log,log,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519737756,3,['log'],['log']
Testability,"> I can't understand this whole sentence. ""tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952]"". This is the line with the nr of iterations, residuals, etc. If you run the case, you will see them printed to the screen. The values in *.test_vals should match with the values on the screen that you get at iteration number *.test_iter; The test values are read from the end to the beginning, so if the array contains only one value, this should be the last value that is reported by SU2. In the example that you give for the tutorial_trans_flatplate, there are 4 values, which should match the last 4 values printed by SU2. By the way, you can run python serial_regression.py or any of the other regression tests on your local machine to see what it does, although for some cases you might see a difference in residuals due to differences with the version compiled for github/docker. If you want to run the regression test exactly in the same environment as on github, you need to use docker.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1294520123:368,test,test,368,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1294520123,3,['test'],"['test', 'tests']"
Testability,"> I do not have a good grasp on the performance of each scheme. I fear that may be a much time-intensive task, particularly since these all are implicit at the moment. I'm thinking just run this test case out to convergence for each scheme then comparing convergence histories. That way if any don't converge, we know we're not grandfathering in broken cases/schemes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1381005993:195,test,test,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1381005993,1,['test'],['test']
Testability,> I do not know why a regression test from hybrid_regression_AD.py has failed. But it has nothing to do with this pull request. Therefore I think we can merge it. Yep sometimes certain cases of hybrid-reg-ad fail ... sometimes they don't :) ; That is why they are not a hard requirement for a merge. Usually I take a look nonetheless to not overlook sth.; So feel free to merge 👍,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1070787684:33,test,test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1070787684,1,['test'],['test']
Testability,"> I just found a heap buffer overflow in the interface code, mentioning it here in case it is related [#2246 (comment)](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720). I ran your test case with the fixes from #2246 and the address sanitizer, it still shows the behaviour that you describe and the address sanitizer did not detect anything else. So it's probably not related to the aforementioned overflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683:198,test,test,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683,1,['test'],['test']
Testability,> I wonder why the 'chore' label was removed by @talbring as I would categorize this PR as such?. First of all: the topic should be a little bit more descriptive if it should be listed in the change log. Second: there was already a `no_changelog`. Having both makes no sense and actually I don't know what the release drafter is doing then :D,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555443890:199,log,log,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555443890,1,['log'],['log']
Testability,"> I'd prefer to have DIRECT_TEMPERATURE_ROBIN_HEATFLUX as the default and ""hide"" the rest as developer's options for the moment. Ok, makes sense if the results differ and need some more testing to not add it to the config_template. . > you're very welcome to have a look over it! :-). I'll do my very best 👴",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577167743:186,test,testing,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577167743,1,['test'],['testing']
Testability,"> I'll be running some tests with better converged restart files and let you guys know. @alecappiello As the restart files were not obtained with the changes in this branch, maybe they are no longer consistent and need to be updated?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2064585720:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2064585720,1,['test'],['tests']
Testability,"> I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?. That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements:; https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development. The domain is just a rectangle so pretty simple to set up. You could also use the V&V test that we have, but it is a variable density jet:; https://su2code.github.io/vandv/SANDIA_jet/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505,11,"['Test', 'test']","['TestCases', 'test', 'testcase']"
Testability,"> I've also wondered about whether the Jacobians (even dF/dU) should be evaluate at the reconstructed state (as currently done) or at the un-reconstructed... This can be easily tested in #1022 (the reconstruction is inside the numerics). @pcarruscag coming back to this, is the plan with #1022 to exclusively use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe implementations available? I was thinking of merging feature_simd_numerics into this branch, and was wondering if I'd need to implement the reconstruction Jacobian for both Roe implementations or if I should just stick to CNumericsSIMD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050#issuecomment-699080843:177,test,tested,177,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699080843,1,['test'],['tested']
Testability,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-581945210:85,test,test,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210,14,['test'],"['test', 'tests']"
Testability,"> If the mesh is not moving, why are you rotating the search coordinates?. I'm so sorry for the belated response! I was trying to debug and test the new feature and to give a proper pull-request.; As for the question:; Because we are using rotating frame for rotor. In rotating frame we consider the rotating effect by adding source terms in governing equations so that the mesh movement is spared. But when we transfer data between rotor and stator for unsteady simulation, the rotor side has to be rotated to match the reality. The rotor is actually rotating, so as the flow phenomena, like rotor wakes passing through the interface. Otherwise, we will see non-rotating wakes in the stator frame of reference. Every time step, the matching grid points between two sides need to be updated as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669:140,test,test,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669,1,['test'],['test']
Testability,"> If this is too large for either of the above it should go into V&V, I guess that is how it was used for the paper?. I suggest we add this to the regression tests, put the mesh in the testcases repo, and add additional scripts and results to the V&V and create a V&V page pointing to the paper and showing some main results.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2067695366:158,test,tests,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2067695366,2,['test'],"['testcases', 'tests']"
Testability,"> If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Ok!. ; > Out of curiosity, do you use the windowing feature to discard a few initial time steps?. No not directly. The idea and motivation was, that I didn't want to wait until the transient phase of the flow field is computed. So I use a precomputed restart file, which serves as a better ""inital guess"" than freestream values. Then, so the idea, the transient phase is skipped for the first design, and it is at least shortened for other designs. This way, we safe CPU time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627769844:33,test,test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627769844,1,['test'],['test']
Testability,"> Interesting that only one of the tests fails - to be honest I was expecting all the turbomachinery tests to fail, does this solve the heap overflow?. Hi all, I've just tried to run the Aachen parallel regression test locally (code from SU2 [feature_asan](https://github.com/su2code/SU2/tree/feature_asan), restart files from SU2/TestCases) and I get a pretty different outcome than the PR here. residuals I get locally:; | 9| -15.378838| -15.209087| -15.081009| -13.857694| -12.724170| -10.052202|. residuals I see as a result of the regression test:; | 9| -9.511426| -8.866578| -9.325615| -7.546349| -7.420281| -4.042154|. Also, [feature_asan](https://github.com/su2code/SU2/tree/feature_asan) doesn't have any Aachen_turbine folder among the testcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2056744532:35,test,tests,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2056744532,6,"['Test', 'test']","['TestCases', 'test', 'testcases', 'tests']"
Testability,"> Is anything else needed here @jblueh ?. Let's merge if the tests still pass, I can add further changes in another PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2351#issuecomment-2372062403:61,test,tests,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/2351#issuecomment-2372062403,1,['test'],['tests']
Testability,> Is it ready to merge?. From my side yes :) Can you though make sure the reg test run and report here in the PR correctly. I am not really what happened there. I started a re-run of all the jobs so if that runs like usual feel free to merge :+1:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1070582529:78,test,test,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1070582529,1,['test'],['test']
Testability,"> Is this testable somehow? Maybe a filediff regression that produces the example file?. Yes, when @danielmayer has merged the PR where we can compare output files, we can compare an existing inlet.dat with the newly created example_inlet.dat. I'll put that on the to-do list (I'll create an issue).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1999#issuecomment-1495786303:10,test,testable,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1999#issuecomment-1495786303,1,['test'],['testable']
Testability,"> It looks fine for me, I am wondering why the Aachen turbo test case fails with this update. I reran the regression and it passed, so it looks like some regression tests are not very deterministic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066:60,test,test,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066,2,['test'],"['test', 'tests']"
Testability,"> Just one comment: I see that you have made some changes so that everything compiles now with meson on Windows, Mac, and Linux. Is it possible to add these as compilation tests to our regression workflow now for Mac and Windows, so we at least catch any build errors on those platforms? This would be a nice feature we do not have yet (and has caused some issues in the past). We could do that. But I don't think that it adds enough value and just increases regression test runtime. I would say for now it is enough that it runs when there is a push to develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-553524933:172,test,tests,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-553524933,2,['test'],"['test', 'tests']"
Testability,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:213,test,testcases,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421,1,['test'],['testcases']
Testability,> LGTM! Thanks for doing this!; > ; > Could you possibly post a before and after of a basic test case?. before and after for the residuals? Or for the solution?. Here are the residuals for the serial regression of the axisymmetric viscous cone: . ![image](https://user-images.githubusercontent.com/44848904/142783736-0769b2e3-cce5-4c45-83b8-b25961cd1a66.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-974716725:92,test,test,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-974716725,1,['test'],['test']
Testability,"> LGTM, I think what is proposed in #770 could help prevent this kind of bugs. Probably it could help as one could painlessly add special entries to such a bit field that will remove the `||`'s from the code, even for minor examples like this. I'll leave this as draft for a while because I'd like to test some more compressible stuff in terms of reference values, non-dimensionalization and so on. It's a good opportunity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-567479668:301,test,test,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-567479668,1,['test'],['test']
Testability,"> Line 78 TURBO_PERF_KIND: invalid option name. Check current SU2 options in config_template.cfg. I am not so familiar with the turbomachinery implementation so I hope somebody else will chime in, but this option was deprecated. Maybe have a look at the testcases/turbomachinery folder that we have, there might be a testcase that matches what you would like to do, maybe transonic_stator_2D?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204#issuecomment-1912805019:254,test,testcases,254,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204#issuecomment-1912805019,2,['test'],"['testcase', 'testcases']"
Testability,> Modify one of the testcases to exercise this please (even if we don't have a way to check it is doing the right thing). I'll update the documentation as well,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262:20,test,testcases,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262,1,['test'],['testcases']
Testability,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Just followed the pastix instructions from the testcase directory. compilation stops at 443/1058 saying error Cannot use PaStiX with forward mode AD. Picture:; ![image](https://user-images.githubusercontent.com/24353606/128684248-2aae9693-806b-421c-9c13-b2fedbcbe5f1.png). So what am I missing? Also is PasTiX necessary for me to run/use all solvers needed for tutorials/test cases?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863:142,Test,TestCases,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863,3,"['Test', 'test']","['TestCases', 'test', 'testcase']"
Testability,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Thanks for the clarification! I use Mpi4 for most of my programs so that's why I built it that way. I followed this guide for pastix: https://solverstack.gitlabpages.inria.fr/pastix/md_docs_doxygen_chapters_Pastix_Runtime.html. So I build pastix 6.X.X. I will check the test cases directory though for the instructions. Also how does changing openmpi change c++ command line option ? . Thanks 😊,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291:142,Test,TestCases,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"> Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run. Thank you! I am in the middle of doing it. Hopefully, there are not that many issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788:94,Test,Testing,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"> No problem :) the hybrid parallel should be fixed (it was a parallel section inside another).; > Have you had a chance to look into the other issue I think I saw? Namely the structural velocity being transferred is not updated once per outer iteration, but rather once per time step which makes it lag (that is what it looks but I might be wrong, I explained it better on my Feb 7 comment). Thanks for the fix for the hybrid parallel reg test! The dynamic fsi test cases were the only remaining ones which was expected, this has been updated now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852:440,test,test,440,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852,2,['test'],['test']
Testability,"> Only thing not addressed yet is the symmetry BC for the turbulence models (we prob need to add something similar). TobiKattmann : do you have time to look at that as part of this PR? Or shall we do that separately?. The implementation for the turbulence models is correct as is. No flux is considered for the convective and viscous fluxes by inserting the symmetry conditions directly in the FV derivation. Convective fluxes vanish as velocity*normal=0, viscous fluxes vanish by grad(transported scalar)*n=0 on the symmetry faces of the boundary. Above I denoted that as ""direct flux"" approach. ; (I will attach an updated pdf here later). Although the ""reflected state"" approach is a more proactive approach and might be beneficial for convergence. Could be worth a shot if somebody really has an issue here, for now I leave it as is. **NEXT STEP** I will update the Regression test values at the failing cases. For cases with a restart (either primal or adjoint computations) I will update the restart_file and upload these in a seperate Testcases branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-468263411:881,test,test,881,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-468263411,2,"['Test', 'test']","['Testcases', 'test']"
Testability,"> Please modify the existing CoolProp test case to use the models, or add a new one. I add a new config file to include the CoolProp viscosity and conductivity model. I use the same mesh, so no new mesh is required.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620,1,['test'],['test']
Testability,"> Putting changes to the non-NEMO solvers in this PR is s.th. we could do as the normal-vector and gradient changes should be equal but it would delay the whole PR and a lot of Reg-tests would have changes. They are exactly the same type of solver, we should not have two types of symmetry.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168#issuecomment-765027438:181,test,tests,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-765027438,1,['test'],['tests']
Testability,"> Regressions for other SST options, and an update of the documentation, including the warning we talked about. Which other SST options do you mean? or do you mean V2003m compressible/incompressible and serial/parallel?; for sustaining and uq we already have regression tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1117310587:270,test,tests,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1117310587,1,['test'],['tests']
Testability,"> So I am closing this for now. It will be announced when this model becomes available. Hello, vdweide. Thank you for your attention and this contribution. Did you ever try some testcases? I am a beginner SU2 user. Can you maybe give us a configure file about S-K transition flat plate using LM model? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446515213:178,test,testcases,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446515213,1,['test'],['testcases']
Testability,"> Thank you Yes we plan on contributing more, this commit was more of a test run just to understand the process. I added Dr Yair Mor Yossef and myself as Authors, per your request. However I do not see a button anywhere that says merge pull request (even before changing Authors.md). It should be below this message,You should see the list of 'things that need to be green': Changes Approved, Conversations resolved, and then Checks passed. At the moment I am writing this, the checks are still running. Below the Checks you should see the button ""Squash and Merge"". Once all checks have passed, you can press that button.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665,1,['test'],['test']
Testability,"> Thank you for the detective work @yiren6 👍 We may need to consider changing the extension for OSX or create a symbolic link during the installation process. @patelha57 can you try the solution that yieren6 found?; > ; > As for the crash, I realize now that you are using the branch from PR #1300, it looks like that memory leak was fixed by @aa-g here [b2ddd96](https://github.com/su2code/SU2/commit/b2ddd9666b76b80ce5ce485b58dc5f97a27420b8) (at least that line 558 changed). When using code from a pull request you can have a look at the regression tests #1300 (bottom of the page) to get an idea if some issues might still be work in progress. Hey Pedro! Yup, we worked side-by-side to figure this issue out, we're actually labmates (small world!). I can also confirm that `pysu2` & `pysu2ad` are imported without errors on my OSX laptop. My environment is:. - Homebrew package manager; - GCC GNU compiler 11.2.0; - Python 3.9.12; - OpenMPI 4.1.3; - mpi4py 3.1.3; - swig 4.0.2. To summarize, the main change was to add `name_suffix: 'so'` option to `/SU2_PY/pySU2/meson.build`. This forces the output of `_pysu2.so` & `_pysu2ad.so` instead of OSX default of `_pysu2.dylib` & `_pysu2ad.dylib` for shared libraries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1107649598:552,test,tests,552,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1107649598,1,['test'],['tests']
Testability,"> Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible. But this check will allow users to use external dependencies just fine, as long as they happen to use an external 0.61.1?. ... I am not entirely sure I understand the issue here. You want to make it *easier* for users by downloading the dependencies, so you make it harder if they went and got their own dependencies? If someone has gone to the effort of getting their own dependencies instead of using your documented meson.py, it would seem like that inherently means they are the 1% of use cases and you could probably just leave them to it. Is the issue rather that only Meson 0.61.1 has been tested to work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338:814,test,tested,814,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338,2,['test'],['tested']
Testability,"> Thanks for the fast reply! I changed the hardcoded 2 (just as a remark: the hardcoded values also appear in the calculations), added myself as an author and inserted some lines for throwing an error if the issue in #1565 occurs. I did not know exactly where to put it best.; > ; > Concerning a regression test: I strongly support the idea of introducing an axisymmetric regression test. However, I was using a testcase from @bigfooted , and I never set up such a test case on my own. There do not seem to be any axisymmetric pipe setups in the Testcases folder so far. @bigfooted , could we maybe use your mesh for the jet flow test case and, if necessary, switch to a standard flow setup?. Yes, you can use that mesh. It can be used for pipe flow setup and jets with coflows, so we can reuse it in different testcases as well if needed. But any simple rectangular mesh is fine, so a mesh from the existing testcases as @pcarruscag mentions would also work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956:307,test,test,307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956,15,"['Test', 'test']","['Testcases', 'test', 'testcase', 'testcases']"
Testability,"> Thanks for the suggestion and I am preparing for a test. As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition. @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; > ; > ```; > for (auto iDim = 0u; iDim < nDim; iDim++){; > delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; > }; > ```. Hi Shihe,. I checked the implementation and I think it is correctly done. You do need the absolute value (i.e., delta has a unit of [m] or equivalent) to keep the correct dimension of nu_t based on a Smagorinsky-type SGS model. You may find the appendix of this paper useful for your understanding of delta_omg: [https://doi.org/10.1007/s00162-011-0240-z](https://doi.org/10.1007/s00162-011-0240-z). Also note that delta_omg does not always outperforms its peers - vorticity may not be aligned to the rotation axis of a local vortex (e.g., in rotating reference frame, in attached boundary layer, to name a few), in which case the physical meaning of delta_omg becomes vague. See also my work for a brief review of DES-type methods and some applications: [https://doi.org/10.1115/1.4052019](https://doi.org/10.1115/1.4052019)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976,2,['test'],['test']
Testability,"> Thanks. Is it possible to target only some paths for formatting? I'm concerned about making life too difficult for developers, and we cannot break lines in some files because we parse them to generate some python code. Having only some paths we would then include more files over time until we cover everything. @pcarruscag ; The hook options of pre-commit hooks are [here](https://pre-commit.com/index.html#pre-commit-configyaml---hooks) . As far as I understand yes it is possible with the `files` option (AFAIK it is a regex pattern) another option is excluding some directories now I only exclude the `external` directory. . I look at the regression test the values seem okay but the test fails is this due to wrappers? If you tell me which directories should be omitted, I would adjust it quickly. In general, we can also disable column limit/wrapping from `clang-format` but it is probably not the best option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335:656,test,test,656,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335,2,['test'],['test']
Testability,"> That seems to have confused git, maybe because of line endings on some testcases or something. you prob mean that some files a ""rewritten"" completely. Hm seems to happen whenever a file ends on WRT_CONV_FREQ and does not have the default value.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743480026:73,test,testcases,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743480026,1,['test'],['testcases']
Testability,"> That would be a nice addition! Can you also add a testcase (this flat plate testcase) for each of the cases, and add the cfg + regression tests to this repository? Maybe do the regression test on one of the coarsest meshes. Best would be to have set it up with a restart file that is completely converged. Hi @bigfooted. . I made regression test on ""parallel_regression.py"". Should I make extra regression test on ""hybrid_regression.py"" and ""serial_regression.py""?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2089942823:52,test,testcase,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2089942823,6,['test'],"['test', 'testcase', 'tests']"
Testability,"> The change log entries are categorized depending on the labels feature, fix, chore for new features, bug fixes and maintenance. If you don't want your PR listed, add the label no_changelog.; So remember to always add a label to your PR (maybe we will automate that soon)!. That describes it pretty well in my opinion. . I'll close this issue in a day or so... maybe someone had the same question and didn't read the PR description yet as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/822#issuecomment-555021114:13,log,log,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/822#issuecomment-555021114,1,['log'],['log']
Testability,"> The computed values of `discadj_arina2k` in `hybrid_regression_AD` are suspiciously close to the expected values in `parallel_regression_AD`. Could the reference values be wrong? If I test with `-Denable-mixedprec=false` locally, the same holds true for `discadj_fea`. I just saw that `discadj_arina2k` was addressed in #1311, so I suppose that its reference values are indeed outdated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-874694144:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-874694144,1,['test'],['test']
Testability,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:6,log,logic,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637,4,"['log', 'test']","['logic', 'test', 'tests']"
Testability,"> The message will look like this:; > ; > ```; > The FFD box 'BLADE_BOX' is not properly defined. The first 4 points must be listed counter; > clockwise, such that applying the right-hand rule results in a vector into the box.; > This is according to the VTK hexahedron ordering:; > 7 +----+ 6 ; > /| /| ; > 4 +----+5| ; > |3+--|-+ 2 ; > |/ |/ ; > 0 +----+ 1 ; > The CCW convention also applies in 2D, where only the bottom face is specified.; > ```. Thank you Pedro. ; However, for the diffuser scenario, I set up the FFD Box applying the right-hand rule to both surfaces (point the third component to the inside FFD box volume from each surface):. ![Screenshot (162)](https://github.com/su2code/SU2/assets/96534491/c50d22e2-f1af-4285-97aa-9a800f0a3ac3). It worked perfectly and mesh is deforming but it is the opposite for the second sets of points compared to what you've done. I don't know if this can help you.; Feel free to attach the updated version of SU2, I'll be happy to test it (I'm currently running it on Ubuntu).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020:982,test,test,982,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020,1,['test'],['test']
Testability,> The test would go in UnitTests; How can the unit tests be compiled and run locally?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1140281575:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1140281575,2,['test'],"['test', 'tests']"
Testability,"> There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases. Earlier, I was defining the mesh movement for the static zone as:. ` GRID_MOVEMENT= NONE `. since it was stationary. However, after checking the test cases, I found that the stator zones should also be defined as moving as. ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0 ; ```. even though the mesh stays stationary. In that case, the unphysical flow results I presented earlier vanished. Earlier, I tried the cylinder test case with the inner zone having . ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ```. and the outer zone having; ` GRID_MOVEMENT= NONE `. where the simulation gave physically viable results. I guess the zone interface may not accurately work if the `GRID_MOVEMENT` options of the neighbouring zones do not match while one of the zones has a non-zero movement. However, I have not simulated any other test cases. Also, the sliding_interface/rotating_cylinders test case diverges with the given .cfg files. At around the 775th time step, I received the following error message:. `SU2 has diverged (Residual > 10^20 detected). `. However, it works just fine if the simulations are done in subsonic flow (e.g. `MACH_NUMBER= 0.1`) while keeping the rest of the configuration the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181:27,test,testcases,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181,6,['test'],"['test', 'testcases']"
Testability,"> Wait for the regression tests to pass, and if they pass you can merge this PR. Thank you. But I think I do not have the right to merge this PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806#issuecomment-1311980332:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806#issuecomment-1311980332,1,['test'],['tests']
Testability,"> Yes but it would be kind of you to check if a feature of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:279,test,test,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,1,['test'],['test']
Testability,"> Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField, ; the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have ; real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance ; exceeding 1e-1. Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-897754020:50,test,tested,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-897754020,1,['test'],['tested']
Testability,"> You do -Denable-tests=true and then you get `test_driver_*` executables. Thanks, I added a working example, but it obviously needs some work.; @danielmayer it just reads a local lookup table and interpolates a value.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1141499248:18,test,tests,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1141499248,1,['test'],['tests']
Testability,"> as described in the turbulence models page. @pcarruscag I am unaware of this page (not the [website](https://su2code.github.io/docs_v7/Theory/#turbulence-modeling), not a [su2code team](https://github.com/orgs/su2code/teams) :shrug: ). Can you tell me where to find it. > By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly... @sametcaka just the `Schubauer Klebanoff` Testcase is failing for serial and parallel regression and [tutorials](https://su2code.github.io/tutorials/Transitional_Flat_Plate/) which you can lookup via the checks-tab above. It would be a matter of updating the regression test values for this very case (so no big deal) if the results for the updated code are what you expect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162:305,test,tests,305,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162,3,"['Test', 'test']","['Testcase', 'test', 'tests']"
Testability,"> hi @BerkeCan97, thank you for your correction and for helping with the verification part. Indeed, that term seems really wrong, thus I expect that your correction would improve the results. However, the link that you have provided for the corrected version is broken, can you fix it please?; > ; > Regarding the test-cases, we were trying to run the NACA0021 at 60deg AoA, but with relatively poor results. Maybe we should start with the flatplate and the mixing layer proposed originally in the implementation of the DDES formulation coupled to the SA model in https://www.researchgate.net/profile/Cleber-Spode-2/publication/318143234_Hybrid_RANSLES_Calculations_in_SU2/links/59c07bfba6fdcca8e56fe3c3/Hybrid-RANS-LES-Calculations-in-SU2.pdf (or any other test-case in the paper you proposed, but I am not able to read that). Fixed it! I think we can start with flat plate and maybe BFS. It might take a week or so for me to get anything done though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447186748:314,test,test-cases,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447186748,2,['test'],"['test-case', 'test-cases']"
Testability,"> make the SST model exactly the SST2003m model according to the NASA website. Does it make sense to change the existing SST model rather than just adding the 2003m-version alongside of the 1994-version? Maybe rename to `SST-1994` and `SST-2003m`, that makes it transparent. One could even keep `SST` while adding a warning that `SST` will be deprecated in the future and that `SST-1994` is the equivalent successor. The upside of doing it like that is that it wouldn't interfere that much with peoples cases (only little cfg change necessary to produce the same results) and it would be much less work for you to change all the regression tests. And although the 2003-version is supposed to be an update to the 1994 version, I would bet there are people who prefer the 1994 version by choice. After all, when the Ancients first implemented SU2 they chose 1994 despite the 2003 version being around for 10 years already. I would be ok with switching to 2003m completely but I dont see really see the benefit as it means more work for everybody (right?).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539:640,test,tests,640,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539,1,['test'],['tests']
Testability,"> question: the chat we had about including gamma in the numerics, so we don't need an overload function, will be included in this PR? I think it should. Yeah, that's in the works. I wanted to get the rest of this up in the mean time. It should be a matter of doing a couple of Get/Set and some testing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117#issuecomment-736747294:295,test,testing,295,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117#issuecomment-736747294,1,['test'],['testing']
Testability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:744,test,test,744,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,2,['test'],['test']
Testability,"?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for bu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2011,test,test,2011,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['test']
Testability,"@ALL we are aiming to complete this work (see Tom's comment on the 20th of May) **within 3 months**.; In so doing we will also **discontinue the legacy build system** (pending some testing on machines without internet connection). So, if you have branches with large changes to existing files, bring them to develop ASAP to minimize conflicts.; If you have new files, the conflicts will be less severe (just include paths probably). I will try to script this file movement and subsequent meson updates, so that in the worst case folks can do the same modifications on their branches automatically and then merge the also modified develop.; But, because we also **want to put clangformat in place**, I REALLY encourage you to merge your work into develop soon!; It is the perfect time to give your code to the world and also to give code reviews to your fellow SU2'ers. I'll come back with updates and reminders. P.S. 3 months, tick-tock tick-tock :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-733803863:181,test,testing,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-733803863,1,['test'],['testing']
Testability,"@AmauryBilocq Initial tests do show that Giles BC is giving errors however, the Riemann is working just fine. Unfortunately, I do not have access to my workstation these days and cannot deep-dive into the problem. Possibly, next week I will be able to give you a more detailed view of the problem. @pcarruscag If you are able to find some leads in the meantime do let me know. Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575:22,test,tests,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575,1,['test'],['tests']
Testability,"@AmauryBilocq Thanks for your post. Can you please check that you are actually not running out of memory, as that can also raise such errors? Second, if Giles BC is the issue I think you will still be able to run the case with Riemann which is a bit simpler than Giles. Can you also test that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015:283,test,test,283,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015,2,['test'],['test']
Testability,"@BeckettZhou I think that's a good idea. Just to make sure I understand the BANC model: for cases that have large mesh sizes, we provide configuration files, and visualization of the results (comparisons to higher fidelity data and/or to other solvers). If someone would like to run the case for themselves, they would contact the custodian and the custodian is obligated to provide the meshes. The next step would be to start the github repo. @economon Is it possible to start the repo under the su2code umbrella? Is that something you could start and people can start compiling validation test cases, and their results?. Cheers, ; Jayant",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-425961143:591,test,test,591,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-425961143,1,['test'],['test']
Testability,@ChristianBauerEng Thanks for the opening the PR. In order for the reg tests to run you need to fix the compiler warnings first as we dont allow for any additional warnings (in the primal-only builds at least). You might want to add `--warnlevel=3` to the meson build command to have those on your machine.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548#issuecomment-1047003088:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548#issuecomment-1047003088,1,['test'],['tests']
Testability,@Corentinthomee can you add a testcase? otherwise please update AUTHORS.md so we can merge,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-2267597275:30,test,testcase,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-2267597275,1,['test'],['testcase']
Testability,"@Cristopher-Morales Can you check if this fixes the issue for you? This works for the testcase that you gave me (2D compressible channel flow).; There is still a (compared to develop) very small local change in pressure but I think this is because at the inlet, the radial velocity is not zero and close to the wall the radial velocity component is not negligible, this is I think why the pressure locally is still not completely homogeneous.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2059974281:86,test,testcase,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2059974281,1,['test'],['testcase']
Testability,@Cristopher-Morales Can you check what is happening with the failed species regression test? Is this the original regression test from the previous PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690#issuecomment-1173421621:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690#issuecomment-1173421621,2,['test'],['test']
Testability,@Cristopher-Morales What's going on with the multizone test setup?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956#issuecomment-1459799712:55,test,test,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956#issuecomment-1459799712,1,['test'],['test']
Testability,"@Cristopher-Morales any things left for this PR? If PASSIVE_SCALAR is changed to SPECIES_TRANSPORT, and if you have confirmed that the nondimensionalization works correctly, then from my side it will be good to go. You can put a tutorial and regression test for the adjoint optimization in the next PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762#issuecomment-1264289112:253,test,test,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762#issuecomment-1264289112,1,['test'],['test']
Testability,@Cristopher-Morales can you check if bounded scalar works for you for this setup with compressible flow? I activated it and it seems to work fine for the small testcase that you sent. It is much better than scalar upwind.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2067688789:160,test,testcase,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2067688789,1,['test'],['testcase']
Testability,@DoctorRobertT this is now merged in develop. Please check out the testcase in Testcases/species_transport/multizone and let us know of any other missing functionality. Thanks!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818#issuecomment-1322560896:67,test,testcase,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818#issuecomment-1322560896,2,"['Test', 'test']","['Testcases', 'testcase']"
Testability,"@EduardoMolina : Nice results! Thanks for the comments. You are seeing more warnings bc I did in fact change the tolerance that controls the warning. But, note that this tolerance only controls when to print the warnings, so the matches should have still be the same (nearest neighbor after transformation). . The reason is that the new implementation assumes a 1-to-1 matching of the nodes and surface elements on either side of the periodic face. To be consistent, the points/faces on either side should match exactly so that they can be summed into a complete dual control volume (this assumption is made in the implementation and the partial residuals are summed as such). Nice catch on the fem_solver check. I will add that to the conditional. Thanks for the review @rsanfer. I will submit the final version shortly and if the tests pass, I would propose we merge this one first, if alright with @pcarruscag (the reason being that I would likely need your help to update the implementation for templating in the end anyway :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-485930910:832,test,tests,832,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-485930910,1,['test'],['tests']
Testability,"@EduardoMolina ; I ran the [channel_2D](https://github.com/su2code/SU2/files/3346960/channel_2D.zip) and the; [supersonic_vortex_shedding](https://github.com/su2code/SU2/files/3346962/supersonic_vortex_shedding.zip) testcases with a tighter tolerance on the linear solver to make sure the differences were not due to some change in number of iterations.; Some differences do accumulate over time but they are very small, for the channel_2D the final density field differs by 1e-6 at most (which is the output precision).; For the supersonic vortex shedding differences are greater, 2e-4 on average and up to 0.01 maximum, but the case is also larger and runs for longer. If I restart the case for a 6th time-step (from the same restart files) the initial residuals are the same.; I will update the other two cases when #700 gets merged as they changed there too.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-507391680:216,test,testcases,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-507391680,1,['test'],['testcases']
Testability,"@EvertBunschoten @danielmayer @Cristopher-Morales We should now work towards getting this polished and merged into develop without adding additional functionality or changing the regression test. If you make any changes, make sure that it does not change the regression tests by running them locally on your machine first. We have a bunch of regression tests now, you can download the testcases branch, and use the feature_new_flamelet branch for testing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1447805407:190,test,test,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1447805407,5,['test'],"['test', 'testcases', 'testing', 'tests']"
Testability,"@EvertBunschoten Thank you for not leaving us with all these alarming red crosses in the regression tests too long :-); This week I will work on a small pywrapper addition to deal with initial conditions, then we can get rid of the flame-specific initialization. That will reduce the PR by a couple of hundred lines and even add functionality. But I'll create a separate PR for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424:100,test,tests,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424,1,['test'],['tests']
Testability,"@EvertBunschoten That's great, thanks! . Can you first make sure that the regression tests run again? Now, all existing flamelet regression tests fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1605005417:85,test,tests,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1605005417,2,['test'],['tests']
Testability,@EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it.; Do you have time to wrap it up and add a simple regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071:171,test,test,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071,2,['test'],['test']
Testability,"@EvertBunschoten there was a bug that I noticed this week. When we get the enclosing triangle of the lookup point, we sometimes fail to get a proper intersection using set_intersection. We can then take one of the adjacent triangles instead. I only noticed it for one very specific lookup table and setup, so it is a pretty rare occurrence. ; [edit] this was for a 2D case, that I tested.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1636876314:381,test,tested,381,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1636876314,1,['test'],['tested']
Testability,"@EvertBunschoten, are there any known TO-DO's for this PR besides updating the regression test?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1697#issuecomment-1321244193:90,test,test,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/1697#issuecomment-1321244193,1,['test'],['test']
Testability,@FlorianDm @economon and everyone else. I have merged Florian's derivation with my earlier derivation. I have added the gradients with respect to viscosity. @jtneedels is running some tests on it currently. I can push those changes to this branch so everyone can look over them...what do you all think?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727636668:184,test,tests,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727636668,1,['test'],['tests']
Testability,"@JSmith36 , I am wondering why the direct differentiation test case fails. Do you have any idea what the reason could be ? My guess would be something in the grid movement has changed that causes that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-318407413:58,test,test,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-318407413,1,['test'],['test']
Testability,"@JedrzejMosiezny . The reason why the mesh and config files are split into separate repos is the following: ideally we want to have the test cases being closely coupled to the current version of the code as config options change quite frequently. However, the mesh files are simply too big to have them in the main repo (it takes too much time to check them out etc.). So a compromise was to still leave the config files in the main repo in order for them to stay up-to-date. We thought that the information [here](https://github.com/su2code/SU2/wiki/Test-Cases) would be quite clear for the user on how to merge config and mesh files. Following this instructions should avoid having to search for the mesh files manually. Let us know if you think different. @economon could you add Jędrzej to the dev team here on github ? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355152833:136,test,test,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355152833,3,"['Test', 'test']","['Test-Cases', 'test']"
Testability,"@LaSerpe thank you for your comments.; @rsanfer please accept the PR I made for the TestCases repo first, that way I can uncomment the test instructions when I push the changes Giulio requested.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-423931446:84,Test,TestCases,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-423931446,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:404,test,tested,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,3,['test'],"['tested', 'testing']"
Testability,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:243,log,log,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303,7,['log'],['log']
Testability,"@TobiKattmann , thanks for the regression test. The unsteady grid motion simulations work with the updates to the ALE formulation. The rotating frame is solved as a steady problem with an added source term, an initial implementation of which has been implemented for the incompressible solver but that is still a work in progress and probably outside the scope of this PR as it stands, so I've added an error catch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527542828:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527542828,1,['test'],['test']
Testability,"@TobiKattmann : nice catch, thanks for the effort to debug this one. I have also been seeing this in the regressions. . @rsanfer or @arubino : do you have a case that you used for testing the new instance index, possibly with multiple zones including harmonic balance?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568#issuecomment-416806343:180,test,testing,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/568#issuecomment-416806343,1,['test'],['testing']
Testability,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:48,test,testcase,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152,5,['test'],"['test', 'testcase']"
Testability,"@TobiKattmann @pcarruscag: I tried to follow all of your proposals in the new branch `fix_turb_fixed_values`. I removed the multigrid stuff from the NACA 0012 SST_SUST and fixed_values cfg, but not of the pure SST one. And I added verification of LINSOL_RESIDUAL and RMS_DENSITY to all the three tests. We can open a new PR or merge this in an existing one. Would you like to also remove the adjoint stuff from the cfgs? And right now the fixed_values test does not start from a restart solution, could that be a problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-802803608:296,test,tests,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-802803608,2,['test'],"['test', 'tests']"
Testability,"@TobiKattmann I tried to keep the option where the default value was not used.; ```python; import os. rootDir = ""."". old = ""WRT_CON_FREQ""; new = ""SCREEN_WRT_FREQ_INNER""; default = 1. for dirName, subdirList, fileList in os.walk(rootDir):; ; for fileName in fileList:; if not "".cfg"" in fileName:; continue. with open(os.path.join(rootDir,dirName,fileName),""r"") as f:; lines = f.readlines(). newLines = []; i = 0;; while i < len(lines)-1:; if lines[i+1].startswith(old):; if not lines[i].startswith(""%"") or len(lines[i]) < 5:; newLines.append(lines[i]). val = lines[i+1].split(""="")[1]; ; if int(val) != default:; newLines.append(new+""=""+val); i += 1; else:; newLines.append(lines[i]); #end; i += 1; #end. if not lines[-1].startswith(old):; newLines.append(lines[-1]). with open(os.path.join(rootDir,dirName,fileName),""w"") as f:; f.writelines(newLines); #end; #end; ```. That seems to have confused git, maybe because of line endings on some testcases or something.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743453197:939,test,testcases,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743453197,1,['test'],['testcases']
Testability,@TobiKattmann Just test whether it works and gives the same results. The regression test should be added still with the old driver. I will adapt it accordingly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527185086:19,test,test,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527185086,2,['test'],['test']
Testability,@TobiKattmann Thanks for sharing! I will be testing this part of the code with our test case soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927571088:44,test,testing,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927571088,2,['test'],"['test', 'testing']"
Testability,"@TobiKattmann please put at least a couple of the failing cases under the microscope, see if the convergence rate is the same starting from scratch, if the converged results are the same with wildly different number of cores and so on.; I know it is a pain but we have been tricked by small changes in the past, and for things related with parallelization 2 core regressions can easily give false positives.; I will run some independent tests myself and look into airfoil_fsi_rbf and discadj_fsi_airfoil for you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524663117:437,test,tests,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524663117,1,['test'],['tests']
Testability,"@TobiKattmann you can select the commits for which you want to see changes, if that is not good enough I give you (or anyone else) license to revert my changes here, they'll be carried over to #821 so no problems there :); I did not merge test your PR by the way, this cleanup you started is needed (and it will get done come hell or high water). ""Squash and merge"" and you are done.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555052921:239,test,test,239,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555052921,1,['test'],['test']
Testability,@WallyMaier @CatarinaGarbacz just checked with the testcases Wally provided. All of them pass,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343#issuecomment-892095823:51,test,testcases,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343#issuecomment-892095823,1,['test'],['testcases']
Testability,"@WallyMaier @jtneedels @pcarruscag Following @CatarinaGarbacz suggestion, I have decided to do a PR directly to develop. It's missing some regression tests which have SYM_MARKER. I was expecting the thermalbath to be different, but it's strange for the flatplate not to pass since I only intended to modify the symmetry BC related to NEMO. Will check on that this afternoon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168#issuecomment-763603592:150,test,tests,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-763603592,1,['test'],['tests']
Testability,@WallyMaier can you check Kato-Launder and vorticity and add a regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1117433791:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1117433791,1,['test'],['test']
Testability,"@WallyMaier, @pcarruscag I will double check the 2003m model and run a couple of cases. At this moment (for this PR) we can add a regression test for 2003m for the flat plate. I can add some more testcases later for the tutorials and V&V in separate PRs (I have some additional cases with measurements like the Stanford diffuser from Eaton, the 90 degree bend from Sudo and the axisymmetric jet from Hussein).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1105128696:141,test,test,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1105128696,2,['test'],"['test', 'testcases']"
Testability,@aeroamit I think the code should be performing. I think running your tests on the axisymmetric branch would helpful to get the effort pushed in :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152,1,['test'],['tests']
Testability,"@alecappiello The Aachen turbine case is in the `feature_asan` branch since [046de67](https://github.com/su2code/SU2/pull/2246/commits/046de6798bad6ffc7205993df7fa253730cd8f9f), could it be that you tested with an older version of the branch?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2061389038:199,test,tested,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2061389038,1,['test'],['tested']
Testability,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764777223:30,test,tests,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223,1,['test'],['tests']
Testability,"@arubino sorry about that, I mistakenly thought I was only changing files that effected an old test that had already been commented out on the develop branch - I'm going to go ahead and revert the files now so that things will pass. ; In order to make things run smoothly, do you mind also commenting out the failing test during your pull request? That way I can re-activate it during my pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-288219239:95,test,test,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-288219239,2,['test'],['test']
Testability,"@auzbaig I put a fix for this in #824, please test it with your cases, if you use harmonic balance test that too as the fix should affect it as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/831#issuecomment-570058167:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/831#issuecomment-570058167,2,['test'],['test']
Testability,@bakakouhai I tested this on my machine and in my OpenMPI version (4.0.4) they still exist. Therefore I can currently can not reproduce this myself and I would like to use you as a guinea pig. I made the fixes to MeDiPack in the branch bugfix/mpi4_0. Could you please checkout this branch and try if it works now? ; ```; cd <SU2 dir>/externals/medi; git fetch; git checkout bugfix/mpi4_0; ```. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785697793:14,test,tested,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785697793,1,['test'],['tested']
Testability,"@bakakouhai Thank you for testing this, I will merge the branch into the master now. > Do I have to run git commands again to be back on default branch?; You just changed the branch of MeDiPack. SU2 is still on the default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785746062:26,test,testing,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785746062,1,['test'],['testing']
Testability,@bigfooted please open a PR to add the testcases @tollennaert mentioned you have.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-750520217:39,test,testcases,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-750520217,1,['test'],['testcases']
Testability,"@bigfooted thanks for adding a reg test :+1: I guess you forgot to push the .cfg here to the code and the mesh (+table?) to the Testcases repo :) You would do me a great favor by adding every residual, linear solver output and all relevant Objective Functions which are special this combustion simulation, to the screen output and therefore to the reg test to make any changes more obvious",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-951356684:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-951356684,3,"['Test', 'test']","['Testcases', 'test']"
Testability,@bmunguia yes. I am actually using Eduardo's work and I branched off from Eduardo's WMLES branch. So what you are suggesting is probably the root casue here. Do you know if there is any quick way to test this?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099#issuecomment-719069221:199,test,test,199,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719069221,1,['test'],['test']
Testability,"@bmunguia: Great! Is this work planned to be updated in the develop branch at some point? Since you have put in the effort to get it updated, it would be great to get it under regression testing to protect it once you are happy with the changes. Just let us know if there's anything we can do to help coordinate. Sounds like you might already be discussing w/ @MarcoFossati",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-505164187:187,test,testing,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-505164187,1,['test'],['testing']
Testability,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-750490818:878,log,log,878,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818,1,['log'],['log']
Testability,"@clarkpede ; Thank you for catching this. I think a messed up something here while I was merging my implementation to the current version! Please be aware that the papers of Travin et al. and Strelets et al. also have some typographical errors, see the papers of:. Zhixiang Xiao, Jian Liu, Jingbo Huang, and Song Fu. ""Numerical Dissipation Effects on Massive Separation Around Tandem Cylinders"", AIAA Journal, Vol. 50, No. 5 (2012), pp. 1119-1136. ; https://arc.aiaa.org/doi/abs/10.2514/1.J051299 ; Mockett, ""A Comprehensive Study of Detached Eddy Simulation"" PhD Thesis. Regarding the DDES test cases, I agree that Travis will not handle any meaningful 3D test case. Do you have any suggestion? By now, all I can do is to test it outside. . Best,. Eduardo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388169276:499,Mock,Mockett,499,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388169276,4,"['Mock', 'test']","['Mockett', 'test']"
Testability,"@clarkpede @EduardoMolina : yep, the issue is that the periodic and MPI communications are tangled up together in the current implementation. The main issue occurs when there are periodic points that are also ghost nodes. . Ideally the periodic and MPI would be separated, and the periodic communications would happen first so that all periodic BCs are synchronized before trying to send across partitions. Right now, the comms are mixed, so sometimes, we send old data at periodic points to their matching pair, which then gets updated in a later MPI comm. Therefore, the second call you have added to the MPI resends the periodic update to with the correct data that was updated with MPI in the first call. I hope this is clear.. Anyway, please go with this change as you have it. All of the MPI and periodic comms will be replaced with a cleaner/separated version right after v6.2.0 (you can see what I am working on in feature_mpi_periodic). I will likely need some help testing that soon :).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463711280:975,test,testing,975,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463711280,2,['test'],['testing']
Testability,"@clarkpede Great, thanks for the details. I see your point. In general, vortex shedding cases are indeed challenging to match with the experiments, but that's what makes them interesting at the end. For a start, I am aiming to obtain comparable behaviours with both the compressible and the incompressible unsteady solvers under similar settings, rather than matching with experiments; mostly as an acceptance test as well. I am now working with standard SST turbulence model, but if you could share some simple meshes/cfg files to have a first go with hybrid RANS/LES, I would really appreciate it. > Good catch. I just pushed a commit that adds SetMaxLength calculations in all the instances I could find where the geometry updates. Thanks for the fix!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-404097397:410,test,test,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-404097397,2,['test'],['test']
Testability,@clarkpede Thanks for the fix. It is working as expected. I don't think any 'complex' test is required to test this. It is reading the inlet file name and linking it to all the desired folders. That's all that's required. Maybe you can open a pull request into develop for this.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-628674077:86,test,test,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-628674077,2,['test'],['test']
Testability,"@clarkpede We could add use that feature probably. But we have to check that essentially for all available solvers, so maybe it makes more sense to put it to the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-581957725:173,test,tests,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581957725,1,['test'],['tests']
Testability,@clarkpede Yep you are right :+1: I like this PR. Removing code by still keeping the same functionality. As soon as the regression tests pass we can merge it in. Do you think you can submit the other PR some time next week ? So that we have it for the 6.2.0 release ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-461109183:131,test,tests,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-461109183,1,['test'],['tests']
Testability,"@cvencro & @talbring, Ok Testcase added using the old driver for serial and parallel regression. Residuals are identical for both drivers new & old (which should resolve your question @rsanfer, right?). In the Testcase .cfg the new driver options are commented out such that switching is a matter of (un)commenting lines. I put up a PR for the Testcase here https://github.com/su2code/TestCases/pull/36 and if the regression tests pass I would merge the Testcase PR and revert the .travis.yml. Update: su2code/Testcases is merged. So once my comment above concerning rotating frame is addressed this could be merged from my point of view.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527351447:25,Test,Testcase,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527351447,7,"['Test', 'test']","['TestCases', 'Testcase', 'Testcases', 'tests']"
Testability,"@cvencro, @TobiKattmann You probably have test case ready to go. Would you mind writing a small tutorial? Because at the moment we have no unsteady cases there ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-524348109:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-524348109,1,['test'],['test']
Testability,@danielmayer @Cristopher-Morales @EvertBunschoten ; All functionality is in place and we have a nice coverage with the current regression tests. I have removed the [WIP] and 'draft' label.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1466248356:138,test,tests,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1466248356,1,['test'],['tests']
Testability,"@danielmayer @EvertBunschoten @Cristopher-Morales I ran the scripts that we have for the species transport validation (from @TobiKattmann). Primal restart, adjoint restart and the comparison between adjoint and finite difference gradients all seem to work fine for the current PR. I will add some additional regression tests this week to make sure we do not break anything while polishing the code (specifically adding an axisymmetric case and a CHT case).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1356751936:319,test,tests,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1356751936,1,['test'],['tests']
Testability,"@danielmayer @EvertBunschoten looks like axisymmetric cases are working for flamelets, as well as conjugate heat transfer. I think all functionality is now in place. I still have to add a regression test for axisymmetry.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1443912686:199,test,test,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1443912686,1,['test'],['test']
Testability,"@danielmayer @mheimgartner @bigfooted @EvertBunschoten please note that `CScalarSolver`, `CScalarVariable` and `scalar_sources/convection/diffusion` were renamed to (basically just extended by *Legacy) `CScalarLegacySolver`, `CScalarLegacyVariable` and `scalarLegacy_sources/convection/diffusion`. So all files that you are used to do now have the `Legacy` addition in their names as I introduced the same/similar files in #1330. The 'new' ones are really new in the sense that they form the general base for scalar transport and I will create a `CSpecies*` family of files to incorporate the species transport. So right now both concepts are present in the same branch but the Legacy will be subsequently removed/replaced by the new stuff. . In any case: merge with the upstream feature_flamelet on github regularly. Add Testcases so that these subsequent merges do not introduce any problems I am unable to see otherwise. And if you want to push a commit here please get in touch shortly with me first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391:822,Test,Testcases,822,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391,1,['Test'],['Testcases']
Testability,"@danielmayer @pcarruscag There is still one testcase that is failing, the cht_ad case. But when I run the regression test on the cluster, on my own machine or on my own machine inside a docker, they all pass. It only fails on github. Don't know what's going on here...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1573704890:44,test,testcase,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1573704890,2,['test'],"['test', 'testcase']"
Testability,@danielmayer where does the python script for FADO go? here or in the Testcases repository?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2002610677:70,Test,Testcases,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2002610677,1,['Test'],['Testcases']
Testability,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-606535236:658,benchmark,benchmark,658,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236,1,['benchmark'],['benchmark']
Testability,@economon : thanks. pr #260 pass travis tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-208809286:40,test,tests,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-208809286,1,['test'],['tests']
Testability,@economon ; I had a look at the only test case that was still failing - looks that everything is alright. This is the pressure delta after 200 iterations:. ![schubauer](https://user-images.githubusercontent.com/22639394/39260962-411efb7a-48bb-11e8-89ed-7a5e0df3ca42.png). So it seems that it's still a transition model regression test and didn't turn into something else :smiley: I will change the values in a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514#issuecomment-384324818:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/514#issuecomment-384324818,2,['test'],['test']
Testability,"@economon Dr. Alonso emailed me saying that ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."" That matches my experience with a few tests I ran.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492#issuecomment-355796132:220,test,tests,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/492#issuecomment-355796132,1,['test'],['tests']
Testability,@economon I have personally installed SU2 software (from versions 3 to 6) in our cluster without problems. I think the issues could be because of lack of C11 features. I tried to run a sample code with aligned_alloc and I had problems with both Intel and GCC compilers. I'll test this again. I think I'll have to install gcc myself. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620724039:275,test,test,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620724039,1,['test'],['test']
Testability,"@economon I need to fix and test a few things before I push the branch to an internal branch. But I should be able to finish by the end of the next week. If you're looking to improve the C++ inlet profile specification I started, then I'd like to get some feedback on the overall design. There are several different ways to handle this, and I chose what I thought was most logical. I want to make sure that my design choices match your use cases and SU2's design. Should I post a summary here, or would you prefer that I email you?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-366493237:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-366493237,4,"['log', 'test']","['logical', 'test']"
Testability,"@economon I tested a couple of simpler problems at subsonic speeds, including the ONERA M6 case at M=0.8395. There's occasionally a difference of one iteration out of about 20. Usually the current develop branch is the one that requires more iterations, but not always. I included a snapshot from my tests on the ONERA M6 case at CFL=30. ![convergence_comparison](https://user-images.githubusercontent.com/13340225/48648855-6c97af80-e9b6-11e8-863a-56dfdf0903c8.png). I don't have a good supersonic, viscous test problem, but I suspect the differences in convergence won't be huge there either. This sign change affects a single term out of many and a single component of a 4x4 or 5x5 Jacobian. My take is that the differences are there, but they are very small. I wouldn't have noticed the problem myself if I hadn't been refactoring the code to enable some changes on our end.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439538677:12,test,tested,12,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439538677,6,['test'],"['test', 'tested', 'tests']"
Testability,"@economon I was envisioning something similar to the TestCases folder. With v&v cases grouped according to what they are testing. Something along the lines of: . 1) Inviscid Simulations: ; a) 2D Inviscid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:53,Test,TestCases,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,3,"['Test', 'test']","['TestCases', 'testing']"
Testability,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-621842313:41,mock,mocking,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313,13,"['Mock', 'mock', 'test']","['Mocking', 'mocking', 'mockist', 'mocksArentStubs', 'testing', 'testing-on-toilet-dont-overuse-mocks', 'tests']"
Testability,"@economon No, this looks good to me. It is merge-ready, from my perspective. I chatted with @talbring, and in a future PR we would like to add a simple set of classes to use with unit tests. For example, I've created a ""one-point geometry"" class for use in some of my tests. But I think that we should keep the PRs as incremental as possible. PSA: If anyone else wants to review this PR, they are welcome to. It is no longer a WIP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-620382001:184,test,tests,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620382001,4,['test'],['tests']
Testability,@economon Thanks for separating the mesh reader! I think having the possibility to implement analytic meshes can be really beneficial for future testing.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-520774819:145,test,testing,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-520774819,1,['test'],['testing']
Testability,@economon There is nothing new in v4 as you have noticed. Some parallelization issue in CGNS library are being investigated and I hope it can be fixed in 4.1 to get CGNS parallel writing in SU2 at some point. Thus no new feature to take advantage from. I think that CGNS multizone was desactivated for the 7.0 release but could be reenabled since the issue was on the ParaView parallel writer. It would be helpful for turbomachinery cases but will require an additional test. ( [This one](https://drive.google.com/drive/folders/1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a) is still available but may need an update ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/884#issuecomment-588153738:470,test,test,470,https://su2code.github.io,https://github.com/su2code/SU2/pull/884#issuecomment-588153738,1,['test'],['test']
Testability,@economon can we merge this one soon? It would make reviewing the output changes easier (which already contain this branch).; You and @MicK7 could still update testcases before the release.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526541234:160,test,testcases,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526541234,1,['test'],['testcases']
Testability,"@economon for the regression test of this PR travis in failing in the TestCases repository, I guess for time limit. Do they have different time limits?. I would propose to merge that PR https://github.com/su2code/TestCases/pull/17) so that we can close this one once the reg test is passing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-339132520:29,test,test,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-339132520,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"@economon it does work with python 2.7, I have not tried multiple versions of python 3, just 3.7. The failure occurs with the python script and does not get to the point where it starts executing SU2_DEG. The minimum example to reproduce the error is:. ```; from mesh_deformation import mesh_deformation as su2Deform; su2Deform( ""testing.cfg"" ); ```; using [testing.cfg](https://github.com/su2code/SU2/files/2635991/testing.txt), but with a txt extension.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/620#issuecomment-443434414:330,test,testing,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/620#issuecomment-443434414,3,['test'],['testing']
Testability,"@economon should we have one file per logical group with all the required includes, so that elsewhere you can still write ""#include numerics"" instead of having to include all one by one?. @clarkpede that would require passing a ""matrix"" of CConfigs like we do for numerics and so on right? Which would mean making things virtual and so the inlines would not be inline anymore (I think). I like the idea of breaking up the blob... but.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501213869:38,log,logical,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501213869,1,['log'],['logical']
Testability,"@economon to your question above:; > Thanks again, @davetaflin !; > ; > Just a couple of comments/questions first in the review. Also, when users use SU2_SOL to generate solution files (instead of during runtime with your new implementation), will the older serial implementation still behave as expected for writing Tecplot files?. SU2_SOL still calls COutput::SetBaselineResult_Files, which, for TECPLOT_BINARY output, calls SetTecplotBinary_DomainMesh and SetTecplotBinary_DomainSolution. These are unchanged here, and in my testing, continue to output mesh and solution .szplt files (changed by Scott Imlay to .szplt from .plt).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/656#issuecomment-469378927:528,test,testing,528,https://su2code.github.io,https://github.com/su2code/SU2/pull/656#issuecomment-469378927,1,['test'],['testing']
Testability,"@economon, I expect to run into problems for grids containing around 250 million DOFs, depending a bit on how many variables you store in the restart file. We can definitely do this test with a dummy grid. As you added this to the RPSVV group, let's close this issue here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500965914:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500965914,1,['test'],['test']
Testability,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-599337194:1396,test,tests,1396,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194,1,['test'],['tests']
Testability,"@economon, yeah it is ready. The regression is a file diff that has 10k lines (only 100kB though), is it ok to have the reference file in the code repo or should I move it to testcases?; No that script is not in the PR, I can try to put a minimal version together.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-437582019:175,test,testcases,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-437582019,1,['test'],['testcases']
Testability,"@erangit That agrees with my setup; the computational interconnect is rdma and the file systems are a mix of NFS and FUSE (issue on both). I have run additional benchmarks to ensure that MPI-IO is functional, it is. I ran NPB3.4 BT-IO and encountered no issues (utilizes MPI_File_open etc; link: https://www.nas.nasa.gov/publications/npb.html).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624645764:161,benchmark,benchmarks,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624645764,1,['benchmark'],['benchmarks']
Testability,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:510,test,test,510,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008,2,['test'],['test']
Testability,"@fpalacios : there were two main issues with the regressions. Both are time out problems if Travis waits for over 10 minutes without any console output. The first was that we need to flush the output for Python 3 for each regression test, otherwise there is too long between cases and sometimes it fails. The second is that sometimes it takes too long to download the test cases, so I have added the keywords 'travis_wait 90' in the call to the entire python script in .travis.yml in order to extend the 10 minute restriction to 90 min. We still need to reduce the time for the tests overall, but it seems to be stable for the time being.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-381217217:233,test,test,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-381217217,3,['test'],"['test', 'tests']"
Testability,"@fredericodpc if you find a way I'd be interested to hear how you did it! In my testing, it seems to work for 2D but not 3D.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846597057:80,test,testing,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846597057,1,['test'],['testing']
Testability,"@hlkline That's a good point about the regression tests ensuring that the v&v results will be unlikely to change. If we have the same residuals for all the test cases, it isn't a stretch to say that the final results of the v&v cases will stay the same. But sometimes the test values for the regression tests are changed during development and then we lose the guarantee. . From the viewpoint of being rigorous, I agree with the suggestion to run the v&v cases before a major release like 7.0 and also with @erangit on keeping track of the last version that they were run for. I am unsure about holding the people who add the test cases responsible for re-running them. Circumstances change, and access to resources change. That may make it hard for people to run the v&v cases. . I also think it is a good idea to have the effort be collaborative so people can add cases. My concern is about size limits that github has on repositories. Some of the mesh files are going to be massive, especially given that we want to perform grid convergence studies. We will soon be over the size limit. I am not sure about how to get around that. Suggestions would be great!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423291806:50,test,tests,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423291806,5,['test'],"['test', 'tests']"
Testability,"@hlkline the regression tests are now failing, but I checked the develop and that is also also failing. I guess this is due to the recent updates of the TestCases repository. Do you have any suggestion (I saw you pushed some changes in the testcase repo)? Maybe I can comment the failing testcase before your PR? I tried to modify the regression script according to #385, but there are some files missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-288101658:24,test,tests,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-288101658,4,"['Test', 'test']","['TestCases', 'testcase', 'tests']"
Testability,"@jaspe55 : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design. Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456240798:298,Test,TestCases,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456240798,1,['Test'],['TestCases']
Testability,"@jaspe55 : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447209397:202,Test,TestCases,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447209397,4,['Test'],['TestCases']
Testability,@javsu : can you try the change in the develop branch directly? It was working for me there with the config in the test cases repo (other than changing EXT_ITER -> ITER). You can also be more aggressive with the CFL in that config.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633126402:115,test,test,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633126402,1,['test'],['test']
Testability,"@jayantmukho : I am seeing two possible reasons for the test failure.. . 1. There are changes noted to some of the autotools files that I don't normally expect. Did you run the ./bootstrap script locally in order to update the Python script install list? If not you may want to try again, since we should see minimal changes recorded in the commit. 2. The logs report that externals/codi changed, but I don't think anything should be modified from there. Can you please revert any changes in that directory?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-417523118:56,test,test,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-417523118,2,"['log', 'test']","['logs', 'test']"
Testability,"@jayantmukho If the upload size limit on Github is an issue, and I suspect it likely will be for these large 3D meshes, we can follow the BANC model -- the researchers who conducted the corresponding V&V cases are named custodians of these test case with explicit understanding that data will be shared upon request. This way, the data resides with a particular SU2 dev group or groups and need not be uploaded. However, I think the config files and all other info necessary for other users to replicate the test cases must be uploaded. Best,; Beckett",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423295060:240,test,test,240,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423295060,2,['test'],['test']
Testability,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607975492:142,test,test,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492,2,['test'],['test']
Testability,"@jayantmukho, can we merge in this one or do you prefer to wait until the data for CHT test case has been confirmed?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435574030:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435574030,1,['test'],['test']
Testability,"@jayantmukho, is it possible to plot the wall distance for both cases as well as the difference in wall distance? Furthermore, what is the grid you used for this test case? Do you expect large differences in the wall distances between both formulations?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-436165257:162,test,test,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-436165257,1,['test'],['test']
Testability,"@jblueh are the tsan tests using a special version of CoDi?; ```; Note: switching to 'refs/pull/2158/merge'. You are in 'detached HEAD' state. You can look around, make experimental; M	externals/codi; ```; Does it need some kind of update?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999358487:21,test,tests,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999358487,1,['test'],['tests']
Testability,"@jhowison : thanks for the extra effort to clean things up. It is very important to have community involvement, and it's a very nice contribution! Nice to see you and @arubino work together on this too. We'll merge once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-342591090:224,test,tests,224,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-342591090,1,['test'],['tests']
Testability,"@joshkellyjak The memory access violation described [here](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720) does not occur unconditionally, it depends on the test case. The iterations of the inner loop for `jSpan == 0` and `jSpan == nSpanDonor - 1` (that we removed in the fix) only have an effect if the if-conditions in the loop body evaluate to `true`. I checked this for the serial test cases in the test file's ""turbomachinery"" section. - `aachen_turbine_restart`: iterations both with `jSpan == 0` and `jSpan == nSpanDonor - 1` have an effect, the latter trigger the memory access violations; - `jones_turbocharger_restart`: some iterations with `jSpan == 0` have an effect, but iterations for larger `jSpan` usually overwrite the results; also, the case `jSpan == 0` does not trigger the memory access violation; - `axial_stage2D`: the problematic code is not executed by this test case; - `transonic_stator_restart`: the problematic code is not executed by this test case. I think these observations point to why only the Aachen test case had address sanitizer findings, and why only the results of the Aachen test case were affected by the attempted fix. The other test cases basically ""do not care"" whether we do the extra iterations. @alecappiello Regarding your earlier question about the restart file. Restart files are to some extent specific to the version of SU2 they were obtained with, in the sense that newer versions of SU2 can behave differently if they use an old restart file. I was wondering if this is the case here, too. If the memory access violation had manifested itself in the restart file, a version of SU2 with the memory access violation fixed could give different results. The observations above point to why only the Aachen test case is affected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507,9,['test'],['test']
Testability,"@jtneedels the testcases currently failing are my fault, they will be fixed in a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1162#issuecomment-759607026:15,test,testcases,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162#issuecomment-759607026,1,['test'],['testcases']
Testability,"@maxaehle as far as I see there are no further comments from pedro or me, so if you merge develop + pass the reg test feel free to merge this. (of course if you also have no further plans with this PR); Thanks again for this contribution!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435#issuecomment-976418121:113,test,test,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-976418121,1,['test'],['test']
Testability,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:78,test,tests,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022,3,['test'],"['test', 'test-builds', 'tests']"
Testability,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:93,Test,Testcases,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447,4,"['Test', 'test']","['Testcases', 'test', 'tested']"
Testability,"@oleburghardt @talbring This PR fixes the multicore heat-flux-sensitivitiy issues. Tested with the tutorial made by ole. Good job. I added a commit that fixes the error-message if you want to have tecplot-binary output but compiled using the --disable-tecio flag. It caused a compile time error ... it is behind a preprocessor statement #ifndef HAVE_TECIO, so this thing is only seen when using the --disable-tecio flag.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-541239861:83,Test,Tested,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-541239861,1,['Test'],['Tested']
Testability,"@oleburghardt I figured why `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` was being executed, but as the FSI problem is multi-zone adjoint, it is required that `config->GetMultizone_Problem() = true` even when we are not using the driver `CDiscAdjMultizoneDriver`. . There is, of course, the possibility to set a specific boolean for these test cases in particular, but I think that would over-complicate the code. Else, it should be possible to extend the index based to the rest of the features required (geometry and structural solvers), which would be my preferred option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542204060:373,test,test,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542204060,1,['test'],['test']
Testability,"@pcarruscag , @HahsFilip . Do the hybrid tests need an update? Do any of you have any idea about why they are failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1815584974:41,test,tests,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1815584974,1,['test'],['tests']
Testability,"@pcarruscag ,; I have modified the **cfg** file and it passed the test with ```mpirun -n 2 SU2_DEF naca0012.cfg```.; I also modified **AUTHORS.md** and **parallel_regression.py**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2124#issuecomment-1703569096:66,test,test,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/2124#issuecomment-1703569096,1,['test'],['test']
Testability,@pcarruscag . Fell free to check and merge. I will refactor screen outputs later in the logging implementation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559:88,log,logging,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559,1,['log'],['logging']
Testability,"@pcarruscag . Of course I can make the test case available. Could you give me your email address, such that I can send you a link?; The typical size of the matrices is problem dependent. You can profile the gemm calls by adding the -DPROFILE flag to the compiler options. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462245462:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462245462,1,['test'],['test']
Testability,"@pcarruscag ; Hi, I have opened a PR #2124 and add a **cst** test case to **TestCases/deformation/**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123#issuecomment-1703393986:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123#issuecomment-1703393986,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:505,test,test,505,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919,2,['test'],['test']
Testability,"@pcarruscag @WallyMaier ; I think I've adressed most of what you spotted in the latest commits. Thanks for taking so much care - you already helped me a lot getting everything ready to enter the main version, especially concerning the just-for-development adaptions that I had forgotten about. @TobiKattmann ; I sneaked in another commit for primal CHT that _might_ help with your issue. I'm still running tests that might confirm my guesswork. (Though you can already try it by setting `CHT_ROBIN= NO` which will then just directly apply heat fluxes.) I'm coming back to this once I'm sure about it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-538411667:406,test,tests,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-538411667,1,['test'],['tests']
Testability,@pcarruscag @aeroamit I do not have a good test case. But am currently looking for one. Let me know if y'all find a good.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500227831:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500227831,1,['test'],['test']
Testability,"@pcarruscag @martin-g I'm not sure how the regressions should run using the AARCH64 tests. I made some changes, but everything is still passing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698#issuecomment-1175704815:84,test,tests,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698#issuecomment-1175704815,1,['test'],['tests']
Testability,@pcarruscag All of the things look reasonable. The long-term goal would be to really have a generic interface for the linear solvers (at least that was my goal) so that we don't have to distinguish between mesh deformation and flow solution anymore inside of the CSysSolve class. Rather we pass objects for the solver and preconditioner and other options to the constructor. We can merge this in as soon as the tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-474871738:411,test,tests,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-474871738,1,['test'],['tests']
Testability,@pcarruscag Any idea what this formatting test is and why it is not running?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2371#issuecomment-2449763159:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2371#issuecomment-2449763159,1,['test'],['test']
Testability,"@pcarruscag Both Akima and Linear capabilities are working totally as expected. No seg faults or any other kind of errors. I have to carry out some regression tests and post processing now to confirm everything is working fine. I am so greatly thankful for your help. I have converted this pull request from Draft to Open. Tests are failing with MPI issues, if you can help me with that it will be great. Although I am running on MPI on my CentOS system on 4 cores it works fine. I would be adding comments with all the methods explaining their purpose plus leveling my branch with most recent develop. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-586033819:159,test,tests,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-586033819,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"@pcarruscag Coming back to our discussion a while ago, it should do MPI now (at least for my testcases it does). I'll clean it up and probably remove Eigen completely.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217#issuecomment-863186117:93,test,testcases,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217#issuecomment-863186117,1,['test'],['testcases']
Testability,@pcarruscag I can change one of the existing testcases to have a validation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662:45,test,testcases,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662,1,['test'],['testcases']
Testability,@pcarruscag I guess the last to changes were in the equivalent area computation routine so they shouldn't alter the result of 'discadj_incomp_cylinder' in hybrid_regression_AD? Why does it fail?. In the flamelet PR I am currently fixing all regression tests and conflicts and I noticed in one of the recent runs that hybrid_regression_AD failed for a case which I couldn't explain at all. Rerunning the regression tests without any code modification solved that problem... so there seems to be some non-deterministic behavior maybe. @jblueh have you noticed such behaviour over at #1294 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956:252,test,tests,252,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956,2,['test'],['tests']
Testability,@pcarruscag I have a small file with two zones here: https://github.com/MicK7/TestcaseStage37; It is the classical NASA stage 37 (https://www.turbostream-cfd.com/case-studies/nasa-stage-37-stall-inception) but the file is 149 Mo. Do you think the size would not be too big to have it as a testcase ?; Sorry for replying on a closed PR ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1083628547:289,test,testcase,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1083628547,1,['test'],['testcase']
Testability,@pcarruscag I would not call that an avoidable bug considering the fact that the regression test passed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518274692:92,test,test,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518274692,1,['test'],['test']
Testability,"@pcarruscag In this PR, I have a problem with running the regression tests, because it can not find my branch, as can be seen in the figure below:; ![image](https://github.com/su2code/SU2/assets/115089238/cd327674-5ba1-463e-814c-6219f9fda4e2); I believe it might be related to the fact that I'm creating a PR from a created fork of the SU2 repository, instead of just having an own branch in the su2code/SU2 repository. So, the branch I'm in is located in sjhbtue/SU2. Could this indeed be the problem or do you think I can still solve it in a different way? Thanks in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2100#issuecomment-1665575888:69,test,tests,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/2100#issuecomment-1665575888,1,['test'],['tests']
Testability,@pcarruscag Of course! I already looked at `channel ` and `oneram6` case more detailed also with up to 28 cores. Computed from freestream conditions to convergence I found that the difference in convergence is only a handful of iterations. I will post some residual comparisons for one or two cases. I also want to look a bit more detailed at supersonic wedge and at least one incompressible case. ; And all the cases with big deltas and the filediff cases need special treatment (and a more in depth look) anyway...; Thanks for testing your cases as well! Helps a lot,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524819658:529,test,testing,529,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524819658,1,['test'],['testing']
Testability,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-589673332:244,test,test,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332,1,['test'],['test']
Testability,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:92,Test,TestCases,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864,2,"['Test', 'test']","['TestCases', 'test']"
Testability,@pcarruscag The PR is ready for review!; There are two regression tests which always fail - https://github.com/su2code/SU2/runs/7019382870?check_suite_focus=true; `polar_naca0012` in `serial_regression.py` and `parallel_regression.py`. The computed values are different in each run :-/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1164226451:66,test,tests,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1164226451,1,['test'],['tests']
Testability,"@pcarruscag The aarch64 related changes are almost done!. There are few tests which fail with this error, e.g. serial_regression.py:; ```; ==================== Start Test: turb_naca0012_3c ====================; /github/workspace/tests/TestCases/rans_uq/naca0012; turb_naca0012_3c: FAILED; Output for the failed case; execution command: SU2_CFD turb_NACA0012_uq_3c.cfg.autotest > turb_NACA0012_uq_3c.cfg.log 2>&1; ERROR: The code was not able to get to the ""Begin solver"" section.; ERROR: The iteration number 10 could not be found.; CPU architecture=aarch64; test_iter=10; test_vals (stored): -5.584300, 0.931352, 0.248990, -0.109405; sim_vals (computed): ; delta_vals: ; test duration: 0.00 min; ==================== End Test: turb_naca0012_3c ====================. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 26 SST_OPTIONS: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean FFD_ITERATIONS?. ------------------------------ Error Exit -------------------------------; ```. Any idea what could be the reason this to fail only on ARM64 ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1138415499:72,test,tests,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1138415499,7,"['Test', 'log', 'test']","['Test', 'TestCases', 'log', 'test', 'tests']"
Testability,@pcarruscag The build passes now after updating the regression tests expectations!. Should I continue working on this PR for the ARM64 part or should we merge it (without the new `regressions-arm64.yml`) and do the rest in another PR ?. Also what is your opinion on the change for the `warnlevel` ? Without it it is not possible to compile HDF5,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1131615310:63,test,tests,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1131615310,1,['test'],['tests']
Testability,"@pcarruscag Wait, why did you merge this when the last commit made so many regression tests fail? I guess you did you not wait until they were finished? Not cool though and I hope this was not intentional; From what I've seen it is not super obvious how the tests are linked (especially the parallel_AD ones) but the commit is not that big so I only really suspect the removed enum entries of all ....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1249#issuecomment-811434977:86,test,tests,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811434977,2,['test'],['tests']
Testability,"@pcarruscag Yes, completely forgot about this. I can probably bring the functionality back in without using or waiting for #774 to make the regression test pass. I'll talk to @rsanfer next week to split the config files into the new multi-zone format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-538361577:151,test,test,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-538361577,1,['test'],['test']
Testability,"@pcarruscag done, it's merged in already so you can uncomment your test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-423941651:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-423941651,1,['test'],['test']
Testability,"@pcarruscag thanks for the comments. I have fixed most of them I think. . In general, I think the PR is ready to be reviewed. I will think of a decent test case and add it soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-655174580:151,test,test,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-655174580,1,['test'],['test']
Testability,"@pcarruscag, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). . For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459952137:560,test,test,560,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459952137,2,['test'],['test']
Testability,"@pcarruscag, everything looks to be working as it should. As soon as the last regression test goes through (it failed due to a connection time out), it can be merged in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603#issuecomment-435128510:89,test,test,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/603#issuecomment-435128510,1,['test'],['test']
Testability,"@pcarruscag, sorry for the delay I had to get my life together a bit after the conference :). I think I have the correct changes, I have changed the tests and removed unused lines. Filip",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1793386585:149,test,tests,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1793386585,1,['test'],['tests']
Testability,"@pcarruscag: I'm in the process of creating a test case for the 3D gust. To do so, I created a CFD mesh for a simple, rectangular 3m wing with a NACA0012 profile. The mesh has a size of 13.7 Mb and a restart solution is 16.3 Mb plus 5.5 Mb (.csv and .dat). Do you think that is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126,2,['test'],['test']
Testability,"@pcarruscag: the approach to use different gradient methods for the convective and viscous terms is relatively common across codes. If it is a computational cost concern, this can be addressed by fusing the kernels. . However, the bigger issue at hand is the other comment that is made in the article about the choice between LSQ and WLSQ/GG for 2nd-order upwind reconstructions: while less accurate, the former is much more robust, while the latter two usually require limiters just to obtain a stable solution on stretched RANS-type meshes, even for flows where we do not expect shocks/discontinuities. The problem with always requiring a limiter is that they stall convergence due to chatter, which apart from the obvious problems, also causes issues for the adjoint. I think everyone has experienced this. Hence the compromise to use both gradients as I note above, which is also stated on p. 9 of Anderson and Bonhaus ""An Implicit Upwind Algorithm for Computing Turbulent Flows on Unstructured Grids."" In that paper they mention an additional interesting point that, in their numerical tests, LSQ outperforms WLSQ/GG for reconstructing nonlinear data at interfaces on highly-stretched meshes. Note the WLSQ/GG gradients are used for the viscous terms, which is important for accuracy. This type of approach is still applied in FUN3D. . If there are any accuracy concerns, we can also address those via our typical verification tools. I agree that we should continue along the path of looking at grid quality issues and how they impact the numerics (potentially adding some grid-based corrections / limiting), but I think the proposed approach in this PR will serve us well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532883592:1091,test,tests,1091,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532883592,1,['test'],['tests']
Testability,"@petebachant: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327308587:216,Test,TestCases,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327308587,1,['Test'],['TestCases']
Testability,"@rsanfer , I deleted CFEAFSIBoundVariable and kept its data in CFEABoundVariable because:; - It would require two vertex maps to be build, one for vertices another for interfaces.; - It would be less efficient memory wise, the vertex map is size O(N) the number of vertices is O(N^(2/3)) in the worst case, which means eventually having two maps is worse.; - Most FSI cases have a large interface and small fixed boundaries, allocating FSI tractions for the latter is not so bad. I also removed CDiscAdjMeshVariable, as it was empty, and kept only its ""Bound"" counterpart. With this vertex allocation / mapping strategy we always need to instantiate the ""Bound"" version of the class so if the intermediates are empty they can be omitted. Please review the changes and if you have some more thorough tests run them or send them over to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-526546118:799,test,tests,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-526546118,1,['test'],['tests']
Testability,"@rsanfer I'm using a test case from Ref [1], which doesn't exactly match the test case matching the figure I gave from Ref [2]. In Ref [1], they ran a whole ensemble of tests at various resolutions, corrections, and inflow/initial conditions. Some of the tests involved laminar separation, while others involved turbulent separation. I did not pick one of the Re = 50,000 cases because those cases involve laminar separation. Travin *et. al.* used a special nonuniform initial condition to promote laminar separation, which I viewed as overly complicated for the purposes of these tests. Instead, I picked a turbulent separation case at Re = 1.4 x 10^5 (roughly matching TS1 from Ref [1]). If you want more details/grids/cfg files, I can certainly provide them. Yes, I used the unsteady compressible solver. But I'm unsure if the circular cylinder case provides a good test case for the unsteady incompressible solver. I did very little with this test case in terms of a proper validation. The references I listed went to great lengths to ensure that the numerical results were consistent with experiments. It seems like a challenging test case. There were a lot of improvements I should have made if I were also trying to get consistent results. For example, my spanwise length was too short, and I didn't look into the impact of the rotation correction for the SA model. I skipped these improvements in the interest of time, since I wasn't aiming for validation, but rather a simple acceptance test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403850762:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403850762,18,['test'],"['test', 'tests']"
Testability,"@rsanfer testcase is in. I used the Knowles material model, I don't think there was a regression for it.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-497805949:9,test,testcase,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-497805949,1,['test'],['testcase']
Testability,"@snow54 I think the solution file for your testcase will have to be updated, can you have a look please to make sure the discrete adjoint still works?; This should also fix the problems you had with the Venkatakrishnan limiter.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899099971:43,test,testcase,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899099971,1,['test'],['testcase']
Testability,@suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-958158548:25,Test,TestCases,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958158548,1,['Test'],['TestCases']
Testability,@suargi Just a service note on the hybrid_regression_AD.py reg tests that fail: They seem to sometimes fail due to mood swings or idk. So if you Re-run them in the `Checks` tab above or merge the latest develop they might not fail on you,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-907513414:63,test,tests,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-907513414,1,['test'],['tests']
Testability,"@sun5k please take care of the two comments above from my last review, and add regressions for your 2 tutorials (see what is done in TestCases/tutorials.py. Then I think we can merge this PR!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1293016206:133,Test,TestCases,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1293016206,1,['Test'],['TestCases']
Testability,"@talbring ; Really sorry for troubling you again. I followed your suggestions to install singularity (3.3.0) and use the su2.sif you shared with me. I run `mpirun -n 24 su2.sif SU2_CFD inv_NACA0012.cfg`. It failed to work. see the log file. ; [su2.sif.log](https://github.com/su2code/SU2/files/3424842/su2.sif.log). The reason should be the OpenMPI version. But I also have installed openmpi-4.0.1 and add ; ```; export PATH=$PATH:$HOME/openmpi/bin; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openmpi/lib; ```; to my `.bashrc` file. But when I run `mpirun --version`, the output is; ```; mpirun (Open MPI) 1.10.2. Report bugs to http://www.open-mpi.org/community/help/; ```. The OS on my computer is ubuntu 16.04. Could you give me some suggestions to solve this problem ? I google for this but failed to find a good way. Best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514460795:231,log,log,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514460795,3,['log'],['log']
Testability,"@talbring @economon Thanks to you both!!. I could realise most of your remarks. To summarize the leftovers:. 1. Concerning the intersecting code with your heat extension to the incompressible solver - should we already find common function names or do we align them once they will be merged?; 1. Concerning the numerics class CSourceHeating: I think I will remove it for now, as I don't have any use or test case for it anyway.; 1. I will wait for your agreement on the FEM solver, if that's alright.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505#issuecomment-372674121:403,test,test,403,https://su2code.github.io,https://github.com/su2code/SU2/pull/505#issuecomment-372674121,1,['test'],['test']
Testability,"@talbring I agree with your assessment of Boost. I think it's a heavyweight solution to a lightweight use-case. We could always include just the unit-testing header (they offer a header-only version), but ""people may want to use more and more features of boost,"" as you point out. If we as developers want to add Boost as a formal dependency for SU2, then that seems like a fine route. But I have the feeling that many developers do not want to add a Boost dependency. Honestly, Boost UTF doesn't offer anything that we can't get from Google Test. Catch2 is definitely the simplest and easiest of the unit-testing frameworks I listed. The only sticking point is that it requires c++03, and that the full-feature version requires C++11.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500393344:150,test,testing,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500393344,5,"['Test', 'test']","['Test', 'testing']"
Testability,"@talbring Last I heard, @EduardoMolina was going to run a test on this branch to check it. Aside from that, there's nothing left to complete on my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577#issuecomment-423204225:58,test,test,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/577#issuecomment-423204225,1,['test'],['test']
Testability,"@talbring Sorry for not being more specific. The config file is actually into; `TestCases/optimization_rans/pitching_oneram6/turb_ONERAM6.cfg`. If this configs are actually not supposed to be there, I could make a pull request removing them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300515238:80,Test,TestCases,80,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300515238,1,['Test'],['TestCases']
Testability,@talbring Tested win64 and win64-mpi and ran the QuickStart for both. In GitBash win64 worked right away and for win64-mpi I had to install the msmpi stuff as described on the [website](https://su2code.github.io/docs_v7/Build-SU2-Windows/ ). linux64 works on our system but for linux64-mpi there are some missing libraries or so which are required ..,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557060097:10,Test,Tested,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557060097,1,['Test'],['Tested']
Testability,"@talbring That was a good point about placement. I was able to move this implementation to a function called `FixedCL_Convergence()` in the euler solver class. It also allowed me to make it a little more robust. Since it still requires information about the convergence that is calculated in the integration container, the method has to be called `CFluidIteration::Iterate()`. I included the details of the implementation in the Constant CL tutorial on the website. That is in a pull request for the website. Consequently, that [pull request ](https://github.com/su2code/su2code.github.io/pull/16) needs to be approved first so that the regression test for this one can pass. This is because of a change in options in the Fixed CL mode.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-534420006:648,test,test,648,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-534420006,1,['test'],['test']
Testability,"@talbring any way to bypass codefactor when the errors are not due to the changes introduced in the PR?. Edit: Nevermind, it's passing now, you should be able to merge after the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983#issuecomment-660351424:178,test,tests,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-660351424,1,['test'],['tests']
Testability,"@talbring, is it easy to add such a test to configure? I have no idea how to do this to be honest?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419802820:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419802820,1,['test'],['test']
Testability,"@talbring: thanks for adding the regressions. One iteration is perfect just to check they're running, if they have the originals still being tested in the TestCases. I think the idea of having the written tutorials/documentation for the test cases in the main repository is a very good one, for several reasons. In particular, it will make it easier for people to add documentation, and we could eventually even test for its existence in Travis or make it a strict requirement for PRs in the future. My only concern at the moment is making sure that they look ""nice"" when viewed and that the links are easy to update/follow. We should probably add a title at the top of each tutorial markdown file now (above the first image), since the titles from the wiki page are missing. The image files should be moved from the website repo (su2code.github.io/github_wiki/) to these Tutorials folders. Another idea is to put a top-level ""Tutorials"" markdown file that will be linked from the wiki at the root Tutorials/ directory so that one only has to update the links to new tutorials in that file in the main repo, rather than always updating both the main repo and manually updating the wiki too. Any other ideas for making this seamless and user-friendly are most welcome! Let me know if you need any help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355216605:141,test,tested,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355216605,7,"['Test', 'test']","['TestCases', 'test', 'tested']"
Testability,"@talbring: thanks for sharing the failing test case for the incompressible problem. This all seems to be working for me now. Can you please take a look when you have a chance to make sure it is ok for you now too? Otherwise, I think this PR is almost ready once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264104142:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264104142,2,['test'],"['test', 'tests']"
Testability,"@thw1021 Like I already said in the comment in the other issue https://github.com/su2code/SU2/issues/738#issuecomment-513870126 : No one can give you support when running OpenMPI in a docker container since it is not officially supported. The only suggestion I have is to use singularity. If you want to test it, install it and you can download su2.sif I created here: https://drive.google.com/open?id=1SaZDloevjj8rFDG2x3Lh05nhTuKHakDK",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514085935:304,test,test,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514085935,1,['test'],['test']
Testability,"@vdweide : I have not hit this issues yet, although I have not been paying too close of attention to the file size (although I have used some large ones). We can make a quick test of this with free stream through a very large cube mesh. . This also goes hand in hand with large mesh support, in my mind, since you won't care about the restart files if you can't get your large mesh loaded :). We can add this to the list for the RPSVV group.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500946690:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500946690,1,['test'],['test']
Testability,"@vdweide I've attached the SU2 output and the valgrind output running on 2 processes, i.e.: `mpirun -n 2 --use-hwthread-cpus valgrind /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`; [su2_out_2.txt](https://github.com/su2code/SU2/files/5776324/su2_out_2.txt); [valgrind_out_2.txt](https://github.com/su2code/SU2/files/5776325/valgrind_out_2.txt). I also tried with 30 processes but valgrind gave up after stating that there were too many errors. Sorry, I'm not so familiar with what to look out for. I'm guessing that something showing in the leak summary is a bad thing? Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755334566:166,test,test,166,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755334566,1,['test'],['test']
Testability,"@vdweide ok I think I safeguarded the required areas, if you could test this it would be great as I do not have these libraries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603#issuecomment-435066556:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/603#issuecomment-435066556,1,['test'],['test']
Testability,"@vdweide, I hacked the configuration scripts to clone Eigen into externals and added the required search paths and flags in configure.ac. I also put an include in blas_structure just to test and looks ok.; I suggest we both work on this branch (feature_test_eigen) and create a PR once we have a ""demo"" working.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460055024:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460055024,1,['test'],['test']
Testability,"@vdweide, of relevance to performance I used -O3 -march=native -DNDEBUG. That last one disables the assertions the container class performs to detect out of bounds accesses.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524534304:100,assert,assertions,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524534304,1,['assert'],['assertions']
Testability,"A `grep -R CustomBoundaryTemperature .` and `grep -R CustomBoundaryHeatFlux .` doesn't seem to show anything done for the incompressible solver, and also doesn't appear to be an option here at least:; https://github.com/su2code/SU2/blob/db21a33291a6ac17cdf85c61625c3b87441149c6/SU2_CFD/src/solvers/CIncNSSolver.cpp#L350-L372. However, I _might_ have missed a spot here:. https://github.com/su2code/SU2/blob/db21a33291a6ac17cdf85c61625c3b87441149c6/Common/src/geometry/CMultiGridGeometry.cpp#L960-L994. but my _guess_ is that it's fine since values from here are re-nondimensionalized from the above commits. Please let me know if not however - I am not familiar with the specifics of multigrid and its implementation. Note that the commits above presume that values specified in `CustomBoundaryTemperature` and `CustomBoundaryHeatFlux` in `CGeometry` are dimensional, regardless if SU2 is in nondimensional mode. It might make more sense to have these be nondimensional and just ensure that incoming default values from a `MARKER_ISOTHERMAL` and `MARKER_HEATFLUX` are nondimensionalized appropriately, but in my opinion it is more straightforward to have users set dimensional temperatures and heat fluxes. However, then it would also make sense to return dimensional heat fluxes and temperatures as well for Python custom walls which I am not sure is currently how it is done. Apologies for the long explanation, but curious to hear your input on this. I will look into why one of the regression tests failed and get back to you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078#issuecomment-1633160181:1497,test,tests,1497,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078#issuecomment-1633160181,1,['test'],['tests']
Testability,"A good way to test this is to mirror the grid and run the full geometry. I guess the kink in the Cf will disappear for JST. That means that the symmetry boundary condition treatment can be improved, because you want to reproduce the solution for the full geometry exactly when using a symmetry plane.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742023920:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742023920,1,['test'],['test']
Testability,"A little gradient validation using the added Testcase (comp euler, 150 timesteps, pitching airfoil, FFD points as DV, Efficiency obj function). . ![gradient](https://user-images.githubusercontent.com/31306376/65078088-96d24900-d99c-11e9-9fef-1fd1a73dd759.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-532394741:45,Test,Testcase,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-532394741,1,['Test'],['Testcase']
Testability,A regression test is now added in the TestCases repo. Can we please merge the TestCase PR [#62](https://github.com/su2code/TestCases/pull/62) first? Then we can uncomment the new test in parallel_regression_AD.py to include it in the checks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997,5,"['Test', 'test']","['TestCase', 'TestCases', 'test']"
Testability,"A similar issue was mentioned during the conference (Van-Albada behaving better), having done some testing recently my opinion is the following:; - Contrary to Venkatakrishnan, the Van-Albada limiter is always ""active"" even in relatively smooth regions.; - Node-based limiters take the minimum value over neighbors, whereas edge-based limiters use two limiter values per edge. Therefore Van-Albada is more conservative and also more differentiable (no min function).; One could experiment with:; - Computing the minimum value over neighbors using a differentiable function.; - Trying the edge-based approach with the Venkatakrishnan-type limiter functions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/917#issuecomment-643830700:99,test,testing,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-643830700,1,['test'],['testing']
Testability,About the jacobian I could not find a situation where it made a difference (I tried a lot) so I commented it out. The residual itself does matter however. I added a test case which uses the same mesh as the NICFD nozzle tutorial. It is an axisymmetric transonic air nozzle without a shock. Pretty much any change to the axisymmetric flow or turbulence residuals would break it. i created a pull request on the test cases repo develop branch https://github.com/su2code/TestCases/pull/59 but then I just went ahead and merged it into develop since there is no review policy,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1195#issuecomment-779895711:165,test,test,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779895711,3,"['Test', 'test']","['TestCases', 'test']"
Testability,About the new CodeFactor issues: I aligned the x86_64 and aarch64 testVals so it is easier (for the naked eye) to compare the differences. But now CodeFactor complains about the extra spaces before the `=`. Should I remove the extra spaces or this could be configured to silent it somewhere ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539:66,test,testVals,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539,1,['test'],['testVals']
Testability,"Access the solution files? I'm not sure if that is possible, the runners are not persisted after the tests. But updating the results based on the test logs is fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1540286746:101,test,tests,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1540286746,3,"['log', 'test']","['logs', 'test', 'tests']"
Testability,"According to the MPI standard the macro MPI_VERSION should be defined. However, even if it is not defined, the MPI_Ibarrier will not be called. This is exactly what you want. I'll push these changes shortly and see if the regression tests go through.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419898440:233,test,tests,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419898440,1,['test'],['tests']
Testability,Added the following system calls during the update/build phase to the serial and parallel regression python scripts in order to force testing of the develop branch:. $ git fetch; $ git checkout develop; $ git pull origin develop,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/75#issuecomment-59000470:134,test,testing,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/75#issuecomment-59000470,1,['test'],['testing']
Testability,Adding some additional residual convergence plots sampled from our test cases. Still some work to do to integrate #724 and clean up regressions. ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072901-fa737f00-e523-11e9-9369-92bbea23f1bb.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072920-03645080-e524-11e9-858a-dc7c310a673b.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072950-1414c680-e524-11e9-80eb-0c4b4a5c0aa7.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-537630224:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-537630224,1,['test'],['test']
Testability,"After a correction to the regression tests, this is now ready for review.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-287489570:37,test,tests,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-287489570,1,['test'],['tests']
Testability,"After a meeting with @TobiKattmann, I have decided to change NEMO BC_EULER_WALL to match the one in CEulerSolver.cpp, where the velocity vector and gradients are corrected. Euler boundary condition is now called inside the symmetry plane boundary condition, before performing the residual correction; This way, I believe I am assuring for all the vector quantities to be parallel to the symmetry plane and guaranteeing the condition of symmetry according to _Jiri Blazek's - ""Computational fluid dynamics: principles and applications""_ . However, calling Euler function does not appear to substantially change the the solution substantially in the test I have made so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018:648,test,test,648,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018,1,['test'],['test']
Testability,"After choosing final default values and updating test case results, we will add some documentation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2230259172:49,test,test,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2230259172,1,['test'],['test']
Testability,"After hibernating on this over the winter, I finally had some time to put some work into this. I am in the process of running a number of cases. So far I have results for 2 RANS cases with mesh convergence studies. These can be seen at https://github.com/su2code/VandV . The repo contains the relevant meshes and configuration files for each mesh level. It might not be necessary to have the different config files since the only changes between them are CFL numbers and mesh filenames. We can discuss this. . The folder for each case also has a README.md file that presents the test case and some of the relevant results. This displays the information nicely in the repository page, and is a decent mock up of how it would look, if we decide to put it on the website. . I just wanted to share this to get initial reactions to how I have set the repo up. I haven't included any discussion about the actual results either, but that is something that can be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-470729235:579,test,test,579,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-470729235,2,"['mock', 'test']","['mock', 'test']"
Testability,"After looking for testcases to modify, I think it is better to have the modified testcase in addition to, and not besides, the original one. Other users might want to build their cfg file on top of the original testcase cfg file, and could be surprised by the additional feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-801285967:18,test,testcases,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-801285967,3,['test'],"['testcase', 'testcases']"
Testability,After some testing I can report the following:. - With Jacobian contributions disabled convergence is greatly increased and on-par with the isothermal/heat flux configurations; - After around 12800 timesteps the solution diverges and SU2 crashes.; - For some reason the global flowfield is drastically different between convective and isothermal/adiabatic cases. As the convective case is somewhere between adiabatic and isothermal conditions this should not be the case. Here you can see a comparison of pressure between convective case (top) and isothermal case (bottom). The only difference is the type of boundary of the conical walls.; ![Comparison](https://github.com/su2code/SU2/assets/42602495/068a78c8-f469-4c6f-b80a-b594a5b79190). The same comparison by temperature:; ![Temperature](https://github.com/su2code/SU2/assets/42602495/022682f8-89a7-4a41-a004-1cfff96e6f70). I'm a bit lost as to what's happaning here...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476,1,['test'],['testing']
Testability,"Agreed that it is a bit different... . I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher with a more performant linear solver, then it could be worth the effort to try other options. If the CFL must remain low for stability, then perhaps we should look at the quality of the Jacobians we construct to see if we can improve, or even try exact Jacobians with AD if we can afford it. A more advanced CFL ramping strategy could also be helpful here to get us closer to a solution before trying to aggressively converge. Just some options to try - it is an important topic and it would be good to isolate the primary restriction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460811699:352,test,test,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460811699,1,['test'],['test']
Testability,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:215,test,testing,215,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,1,['test'],['testing']
Testability,"Agreed that the style needs some attention. I am open to ideas about this. You may have noticed that I integrated Codacy recently to test it out: https://www.codacy.com. We have the style guide, but honestly, it's not getting much attention. We should automate checks or have scripts that automatically enforce style constraints. Vera++ sounds interesting in this regard. A little while back, @rsanfer and I had been working on indentation issues with the uncrustify tool. Should we open this as an issue and get some input? Find volunteers to look into these things?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323636235:133,test,test,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323636235,2,['test'],['test']
Testability,"Agreed, but unfortunately, I think we need to modify how we currently have the test cases set up, because we have a chicken & egg problem. Both of these pull requests require changes to the configs that live in the other repo. Those need to be modified first for the tests to pass, but it seems unsustainable to require commits to separate repos to test the pull requests (this makes this very valuable feature tough to use). We might want to move the configs back into the SU2 repo so that folks can update their tests with their code commits. This way, we will see the green light and accept. On Jul 29, 2015, at 3:31 PM, Brendan Tracey <notifications@github.com<mailto:notifications@github.com>> wrote:. In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/185#issuecomment-126116253.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116991:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116991,4,['test'],"['test', 'tests']"
Testability,"Agreed, it's already big as it is, so merging this PR with the 3D table is going to be a mess. Besides we need to add a ton of tests still",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1327916072:127,test,tests,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1327916072,1,['test'],['tests']
Testability,"Agreed, this sounds great. Thanks for working on this! Just let us know if we can be of any help while you're making progress. We'll try to get those Python regression tests into Travis CI asap...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195838454:168,test,tests,168,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195838454,1,['test'],['tests']
Testability,"Ah got it, I have no explanation for that. But the fact that you need CFL of 1 for the fluid tells me the flow conditions are challenging.; Also Poisson ratio of 0.37 on the structural side makes it harder to converge, you can try compiling SU2 with PaStiX which guarantees you can solve the structural problem (instructions are in TestCases/pastix_support/). It is not possible to do that in SU2, however, to some extent, dual-time methods are already a form of subcycling, in each inner iteration you are advancing in pseudo-time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-840652006:332,Test,TestCases,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840652006,1,['Test'],['TestCases']
Testability,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:435,test,tests,435,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['test'],['tests']
Testability,"Ah! Cool, sure open a new PR @maxaehle.; What adjoint stuff? file names and so on?; I think removing irrelevant options would be make the tests clearer, there are lots with Roe and JST options specified and vice versa which probably confuses new users.; I'm not so sure about removing all defaults thought... On one hand it would serve as regression for the default values set by CConfig, on the other it hides the tuning parameters of some methods... but then again those are more or less documented now.; :shrug:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589:138,test,tests,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589,2,['test'],['tests']
Testability,"Ah! Ok!. Thank you, again. Kind regards,. Jairo. > On Feb 1, 2019, at 13:02, Thomas D. Economon <notifications@github.com> wrote:; > ; > Was just waiting for the tests to finish. Merging now. Thanks again for the effort; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-459772171>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180l_JvmEVR9mvZNTQjygJa9GdV-CJks5vJGUggaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459809638:162,test,tests,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459809638,1,['test'],['tests']
Testability,"Ah, I wasn't aware of the corrected version. Thanks for pointing out my mistake. The corrected version does make more sense, and the main changes seem to be:. + Changing the location of the sqrt in the definition of `Lturb`; + Changing `ch3` from 0.5 to 2.0; + Clarifying that S and Omega should have a factor of sqrt(2). As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. We know that they got a nice range of values for the blending constant on their tests with DDES. The cases I can see where they explicitly show the results of the blending function are:. + Circular cylinder at Re = 50,000 (Travin _et al._ 2002); + Tandem cylinders at Re = 166,000 (Xiao _et al._ 2012); + NACA0021 airfoil in deep stall (Mockett 2009). The tricky thing is that the value of the blending constant is determined by the flow solution, which is determined by the solver. So the values we obtain will be dependent both on the version of DDES used and the nature of the code. We can't expect to match any of these papers exactly. We could also use a simpler flow, such as fully developed channel flow or a flat plate boundary layer. The tradeoff would be simplicity for ease of comparison.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388189377:418,Mock,Mockett,418,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388189377,4,"['Mock', 'test']","['Mockett', 'tests']"
Testability,"Ah, that fixed the issue then. The HB regression test passes now. We can; merge it in. On Sat, Jan 7, 2017 at 1:01 PM, Tim Albring <notifications@github.com>; wrote:. > There was an error in the division operator :) can you try it again ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/351#issuecomment-271109937>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenIK6GKLPFfL18m-Y1b3AoOtTMC0A4ks5rP_0-gaJpZM4Lck3G>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271122793:49,test,test,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271122793,1,['test'],['test']
Testability,"Ah, yes, I see the problem. You're probably right. Have the configs (and test results) in the SU2 repository, and keep the meshes in the test repository. . Thanks for the explanation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126117513:73,test,test,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126117513,2,['test'],['test']
Testability,"Alex, Heather,. Thanks for commenting and straightening this out. Since this is a frequently asked question, I have added a new section in the documentation on how to use the test cases, which will hopefully clear things up more in the future: https://github.com/su2code/SU2/wiki/Test-Cases. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-171108493:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-171108493,3,"['Test', 'test']","['Test-Cases', 'test']"
Testability,"All done @economon , I also added a quick start type example, so if anyone wants to try this just go into TestCases/fea_topology/quick_start and call topology_optimization.py",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-441436869:106,Test,TestCases,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-441436869,1,['Test'],['TestCases']
Testability,"All good from my side. The tests are passing and I managed to compile (and cross check) the regression test cases for the discrete adjoint FEA and FSI both in my workstation at Imperial and even running in WSL (which I find amazing that SU2 runs in there). In this latest case, I used the openSUSE Leap 42.3 app for windows and the (pretty old) gcc 4.8.5 compilers shipped along. It worked. From my side, this is ready to go. I'll remove the block straight away. . Thanks, Tim and Max, for the efforts!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-354459150:27,test,tests,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-354459150,2,['test'],"['test', 'tests']"
Testability,"All regression test values are corrected and for restarted/adjoint cases (euler/oneram6, disc_adj_heat, disc_adj_euler/arina2k) the solution_flow.dat was replaced. The respective Testcases branch is here https://github.com/su2code/Testcases/tree/bugfix_BC-sym-plane . From my side this PR could be merged (after merging the Testcases branch and reverting .travis.yml).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-469173101:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-469173101,4,"['Test', 'test']","['Testcases', 'test']"
Testability,"All testcases run for only a few steps, not entirely to convergence, the purpose is really just to detect change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241:4,test,testcases,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241,1,['test'],['testcases']
Testability,"All tests are now passing, except CodeFactor. But I guess that was there even before I implemented anything. @bigfooted : Thanks for your commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1799#issuecomment-1295381693:4,test,tests,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1799#issuecomment-1295381693,1,['test'],['tests']
Testability,All the regression and unit tests are passing now!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1942905083:28,test,tests,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1942905083,1,['test'],['tests']
Testability,"All, . Regarding the steady test cases, Embraer folks published a paper of their efforts to validate SU2 using the DPW and HLPW geometries (https://doi.org/10.2514/6.2018-2845 <https://doi.org/10.2514/6.2018-2845>) in the last AVIATION. I think that they will be happy to contribute with the meshes and config files. . Also, I can contribute with some unsteady cases. I think that the Backward Facing Step and the Tandem Cylinder test cases are a good start. Best,. Eduardo; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/581#issuecomment-423207120>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCdByjE1ogiSKp7fIos58GcRe-Rdlks5uc6e0gaJpZM4Ww0V4>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423260699:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423260699,2,['test'],['test']
Testability,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:454,test,test,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,6,['test'],['test']
Testability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:331,test,test,331,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,6,['test'],"['test', 'testing']"
Testability,"All,. Regarding the wall function specification, if we are going to settle on a standard way that could work for both the FV and DG-FEM solvers, it might be good to think about some modifiers that can later allow for a generality of approaches. We can make a distinction between wall functions and wall models, but this is subject to discussion…in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:690,test,tested,690,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,2,['test'],['tested']
Testability,"All,. Thanks for getting this going. My two cents:. 1. Indeed, while these V&V cases and the TestCases directory / repo are not identical, there is some overlap…some of the TestCases are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://git",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:93,Test,TestCases,93,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"All,. The following page has performance comparisons between eigen and mkl (and others):. http://eigen.tuxfamily.org/index.php?title=Benchmark. They are dated 2011, so they are a bit old, but if the quoted performance is real, I would say it is a no-brainer to switch to eigen. If the performance tests (for at least simple things like daxpy and gemm) could be repeated to verify the numbers, that would help us make a final decision. Best,. Juan. On Feb 2, 2019, at 1:58 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. @pcarruscag<https://github.com/pcarruscag>, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon<https://github.com/economon> put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag<https://github.com/pcarruscag> (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459952137>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxCgydwy1nS3qPJvyCMJXLXWNMSFsks5vJWEkgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459986613:133,Benchmark,Benchmark,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459986613,7,"['Benchmark', 'test']","['Benchmark', 'test', 'tests']"
Testability,"Alright everyone, this PR is now ready to get merged from my point of view. If there are further concerns regarding particular Testcases please let me know. @pcarruscag did you check airfoil_fsi_rbf and discadj_fsi_airfoil? If yes, your (dis-)approval for this PR would be appreciated (of course from everyone else as well). . I would like to get this integrated before #790 and I would recommend @economon not to start changing reg-test values before this is merged. The code still fixes the initial Issue #735",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-536618994:127,Test,Testcases,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-536618994,2,"['Test', 'test']","['Testcases', 'test']"
Testability,Alright let's close this one. We can test it again when OpDiLib supports the Intel compiler.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1273#issuecomment-832191063:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273#issuecomment-832191063,1,['test'],['test']
Testability,"Alright, Heat-Transfer BC is good to go. Code factor does its usual thing with Complex code but the rest is green. ; Was a bit more than I anticipated but now there is a compressible version as well alongside the incompressible. . An incompressible Testcase was added which briefly explains expected results in the extreme ends of heat transfer coefficient values. What's is left to do for me is to update and merge su2code/su2code.github.io/pull/26 ,In there i will drop a comment or two that advertises the HeatTransfer bc. Thanks @oleburghardt for kicking this off, @pedro for the review and advise and @bigfooted for some chats behind the scenes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244:249,Test,Testcase,249,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244,1,['Test'],['Testcase']
Testability,"Alright, let's do the following, for now please exclude:; Common/include/CConfig.hpp; Common/include/option_structure.hpp; Common/src/CConfig.cpp; externals; legacy; SU2_CFD <- This one will cause conflicts for many branches so we should do it in steps; subprojects; TestCases (or if you can target only the .cfg in this directory it is also fine). Please wait for #1903 and #1951 to be merged.; Add yourself to AUTHORS.md and thank you for automating the formatting.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1465073454:267,Test,TestCases,267,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1465073454,1,['Test'],['TestCases']
Testability,"Alright, so my above hunch was correct: that there was an assumption of dictionary key order. I switched that variable over to an ordered bunch and I believe all the tests are passing, despite one of them timing out. After addressing that, the entire repo (including the wrapper) should now be compatible with both Python 2 and Python 3, and is setup to be tested with both.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-340193114:166,test,tests,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-340193114,2,['test'],"['tested', 'tests']"
Testability,"Alright, the su2code/Testcases repo is already merged, .travis.yml is reverted. If there are no further request than this can be merged from my standpoint. ; Big thanks to @cvencro for the collaboration :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-534026640:21,Test,Testcases,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-534026640,1,['Test'],['Testcases']
Testability,"Alright. There's a thorny part of this merge that needs to be resolved. I would like the decisions reviewed before I proceed to make any more changes. The differences between revision d1e3a18 and revision e6e6e6b are very small, aside from an extra test file. But revision d1e3a18 fails the regression tests and revision e6e6e6b passes the regression tests. Specifically, it's only the CHT incompressible case that's failing. The test results show:. test_vals (stored): 0.000000, 0.000000, -7.685301, -12947.783696; sim_vals (computed): 0.000000, 0.000000, -7.685301, -12947.783678 ; delta_vals: 0.000000, 0.000000, 0.000000, 0.000018. It's only the total heat flux that's different, and it's only off by 1E-7%. I believe that these changes are due to floating-point errors. To check and make sure nothing is going crazy, I ran the test case under both the develop and the PR branches. When I compared the solution files, I couldn't find any points where the solution differed by more than 0.0003%. The differences seem to be very small. The two differences between revision d1e3a18 and revision e6e6e6b can be summarized as follows:. 1. In the `CNumerics::GetViscousIncProjJacs()` calculation on the develop branch, a quantity called `theta` is calculated. `theta` is the magnitude of the `val_normal` parameter, squared. The catch is that `val_normal` is passed as a unit vector (named `UnitNormal` in `CAvgGradInc_Flow::ComputeResidual`). So `theta` should always be equal to one, with some floating point errors. In the failing revision, the value is set explicitly to one. In the passing revision, the magnitude is calculated explicitly. I checked, and the difference between `theta` and 1.0 is always of the order 1E-16 or less.; 2. The second change affects where the area is multiplied into the Jacobian. When the area is multiplied at a later stage, very small differences in the calculated quantities appear. I don't like revision e6e6e6b, and I would like to revert it. The question then is",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-444655022:249,test,test,249,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-444655022,5,['test'],"['test', 'tests']"
Testability,"Also we still strongly suggest to open Draft Pull Request as soon as possible in the development process even if it still far from being ready. This way discussions can start earlier, potential conflicts can be solved together, regression tests run and you are reminded to frequently merge with develop!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582#issuecomment-548250496:239,test,tests,239,https://su2code.github.io,https://github.com/su2code/SU2/issues/582#issuecomment-548250496,1,['test'],['tests']
Testability,"Also works for me now! Thanks for fixing this. ~~Travis failed due to reaching the maximum time for a job. The usual time the serial test take in other PRs is like 45 min, but this one was killed after 1h 9 min. Is there something that could go wrong in the non-mpi case ?~~. ~~I just restarted the tests to see whether it occurs again.~~ . Now it has passed. If it happens again, simply restart the job in Travis ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264239270:133,test,test,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264239270,4,['test'],"['test', 'tests']"
Testability,Also: I see that discrete adjoint cases fail with a segmentation fault. But this does not happen on my local machine if I run the testcase. Not sure what is going on here.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304311840:130,test,testcase,130,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304311840,1,['test'],['testcase']
Testability,"An important, but currently missing, component of our current testing/quality assurance procedures, in my opinion. I would use it. For example, checking the output of the ComputeResidual() functions in each of the numerics classes are obvious candidates for this. I can think of many other ""units"" throughout the code, but this is another open discussion for the scope. @clarkpede could you give a couple of examples for the selection of the units in your use cases?. No experience w/ the other frameworks. As we now include some Boost for Tecio anyway, could be another opportunity to consolidate. As for PRs, this is open for me.. we discussed the +/- of requiring docs and tests in PRs at the developers meeting. There are pros and cons to be sure. Would like to hear what others think too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499209118:62,test,testing,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499209118,2,['test'],"['testing', 'tests']"
Testability,"An update here. I did some digging and saw there was a previous PR #1168, where Fabio looked at this issue and implemented a fix for NEMO about 1.5 years ago. It looks like the results were great, but the PR never got merged in. If I pull the most recent commit and run this test case on it, it looks like it solves the issue. . It sounds like we might be able to address this by merging this branch into current Develop and opening a new PR. @TobiKattmann Thoughts on this approach?; ![image](https://user-images.githubusercontent.com/44848904/167740530-c2e23dc5-a264-4d80-8cf1-66b4396cccc7.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-1123007487:275,test,test,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-1123007487,1,['test'],['test']
Testability,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-594201448:129,test,tested,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448,1,['test'],['tested']
Testability,"And a few other changes in constants. I am absolutely fine with that but I do not have bandwidth to update all the regression tests, re-run validation tests, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142:126,test,tests,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142,2,['test'],['tests']
Testability,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,4,['test'],['test']
Testability,And the addition of a mesh and restart files is done in https://github.com/su2code/TestCases/pull/101,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1651#issuecomment-1141158667:83,Test,TestCases,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1651#issuecomment-1141158667,1,['Test'],['TestCases']
Testability,"And why is your Test repo so large?; Perhaps some data files would be happier living elsewhere?. I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72739420:16,Test,Test,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72739420,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"Antonio,. I have been trying to figure the error message out, but I have been unsuccessful. I've only modified serial_regression.py and parallel_regression.py. Is there a file where turbulent_hb needs to be defined or does the code read the names from the test case repository?. We may want to change structure of HB test case folder since there are now two cases. The turbulent case has a sub-directory in there but the inviscid does not. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-336948272:256,test,test,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-336948272,2,['test'],['test']
Testability,"Antonio,. We will see if this check passes with corrections to .py files, but the mesh file is sitting in a pull request in TestCases repository. I could not add to that repository as part of this pull request. I have a feeling both checks are going to fail unless they can access each other. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-337577313:124,Test,TestCases,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-337577313,1,['Test'],['TestCases']
Testability,"Any ideas on a good test case(s) to ensure the implementation is correct? Maybe the RANS flat plate case at one Re that puts us in the wall-resolved regime, one with y+ ~10, and one with y+ ~ 50? I haven't taken a look at that particular case--just wondering if it might work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307663093:20,test,test,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307663093,1,['test'],['test']
Testability,Any update on a testcase to add to the PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1932317610:16,test,testcase,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1932317610,1,['test'],['testcase']
Testability,"Are the compiler wrappers, mpicc and mpicxx, also installed? When I look in your log file it mentions ; ./configure: line 3362: /usr/bin/mpicxx: No such file or directory",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513849210:81,log,log,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513849210,1,['log'],['log']
Testability,Are there any duplicate files here? Perhaps the regression tests could copy in the files from tutorials before running to avoid having redundant information.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-353223445:59,test,tests,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-353223445,1,['test'],['tests']
Testability,Are you sure you're using the config file that corresponds to the current develop or master ? Because I don't see these options in TestCases/rans/oneram6/turb_oneram6.cfg,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300510899:131,Test,TestCases,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300510899,1,['Test'],['TestCases']
Testability,"As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede : I'm interested in your unit testing set up...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439493827:76,test,test,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439493827,2,['test'],"['test', 'testing']"
Testability,"As a second note: we are aware that even the 70 min. time limit is causing problems for new PRs and other branches that are using Travis CI individually. . One option is to ""parallelize"" the builds by decomposing the current regression scripts into more scripts with fewer tests each. However, this only addresses part of the problem, as the compilation step is taking the most time and is currently done within each script. We could consider compiling with lower optimization, etc., to get the cost down, but I am open to ideas on this front too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459#issuecomment-339748432:273,test,tests,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/459#issuecomment-339748432,1,['test'],['tests']
Testability,"As for the question I raised, Dr. Alonso mentioned the problem in an email he sent me. He said, ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."". That matches my experience with a few tests I ran. After playing around a little, it seems like adaptivity for hexahedra was only partially finished. Many sections of the are implemented, but there seem to be both bugs and unfinished implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487#issuecomment-355796302:273,test,tests,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/487#issuecomment-355796302,1,['test'],['tests']
Testability,"As it appears that the developer group does not have a Cent8 cluster on which to test, is there a particular set of compiler inputs you would like me to use so that this issue can be resolved?; Reminder, no other code has any issues with our MPI setup, this includes benchmarks, other CFD codes, and mellanox test cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-644788621:81,test,test,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644788621,3,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"As it does not interfere with the rest of the code I guess nothing speaks against merging this.; Couple of things though:; - the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. ; - My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. Speeding up ""time-to-finished-regression-test"" is really cool though. 👍 . 🐳 Take these two whales as a sign of gratitude 🐋",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547358706:529,test,test,529,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547358706,2,['test'],['test']
Testability,"As mentioned previously I would be surprised if the fix implemented in c97610b is the source of the issue as I would expect the other turbomachinery cases to fail as well. Looking at the testcase there would be two things I would try. 1. Converge the solution very tightly, however I expect that this may be difficult, save the converged solution. Restart the solver and run for 1 iteration and compare the results of the two. Inspect the solution and see if there is anything obvious, this may give a hint as to where the problem lay. Maybe also include linear solver information in the output to see if the desired convergence is being achieved in the initial iterations. 2. Furthermore inspect the residuals of the initial converged solution as it approaches the restart point, a jump in residuals could indicate that the solver is not converging smoothly before the termination of the initial solution. I suggest maybe increasing the value of ENTROPY_FIX_COEFF, say 0.1 and see what happens. If you can't converge the solution tightly in point 1, apply the increased entropy fix in point 2 and retry. If you would like @alecappiello once you have tried this we can organise a call to discuss early next week.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2100775569:187,test,testcase,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2100775569,1,['test'],['testcase']
Testability,"As mentioned, these all use the same geometry, and I happy to discuss inclusion of different test cases. Also, I noticed that mutation++ does have a regression case, do we not compile M++ for regression builds?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1380464828:93,test,test,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1380464828,1,['test'],['test']
Testability,"As promised (drag) gradient comparison:; The blue curve represent the current develop branch with the bug. Bugfix and FinDiff are hopefully self-explanatory. The results are taken from my Testcase, so it is really small (10 timesteps), i.e. for a longer running case the gradient deviates a lot more.; Let me know if you want some other comparisons :). ![image](https://user-images.githubusercontent.com/31306376/42903371-ea872c84-8ad1-11e8-83cc-79eee425f7ca.png). ![image](https://user-images.githubusercontent.com/31306376/42903349-db15c2e2-8ad1-11e8-87c9-ac8fac4b07be.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554#issuecomment-406049839:188,Test,Testcase,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/554#issuecomment-406049839,1,['Test'],['Testcase']
Testability,"As requested, here's an example of a unit test that I made. For context: There's a couple of different modes for the Roe-low-dissipation convective blending. If one of the ""DUCROS"" modes is selected, then the Ducros sensor values are used. Otherwise, they're ignored. Before commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,4,['test'],['test']
Testability,"As stated in #1384 some hybrid parallel AD regression tests failed.; The regression test `visc_cone` has also failed with `ERROR: The code was not able to get to the ""Begin solver"" section.` for both serial_regression.py and parallel_regression.py.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-957314740:54,test,tests,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-957314740,2,['test'],"['test', 'tests']"
Testability,As there were 256 WRT_CON_FREQ in the Testcases i removed that using:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/WRT_CON_FREQ/d' {} \+`; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/Writing convergence history frequency/d' {} \+`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743413892:38,Test,Testcases,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743413892,1,['Test'],['Testcases']
Testability,At first glance this looks like a valid solution to me - if you want to open a pull request we can compare the regression test run to see if the performance changes (and of course if any regression tests break).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252#issuecomment-208087862:122,test,test,122,https://su2code.github.io,https://github.com/su2code/SU2/issues/252#issuecomment-208087862,2,['test'],"['test', 'tests']"
Testability,"At the moment I am having trouble with a test case, thus it is still not ready to merge. I'll try to fix it as soon as possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1311715717:41,test,test,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1311715717,1,['test'],['test']
Testability,"At this stage, I'd like to add only the functionality of reading and interpolating a lookuptable, without immediately implementing a combustion solver that uses it. ; I'd like to add a small verification test, would this be implemented in the MMS?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1128197949:204,test,test,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1128197949,1,['test'],['test']
Testability,"Awesome! Thanks for testing, I can only imagine the hassle of setting this up on Windows.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1055#issuecomment-669277905:20,test,testing,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055#issuecomment-669277905,1,['test'],['testing']
Testability,"Awesome, close to 1.5 was what I saw on the skylake architecture too (albeit the consumer version).; Thanks for testing again, without the DNDEBUG flag every access to CVariable is an if statement basically. That flag is now set by default when building with meson.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524806934:112,test,testing,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524806934,1,['test'],['testing']
Testability,"Axisymmetric fixes in progress by Wally / Florian. Will repeat the test (axisymmetric) once fixes are done, I am closing it for now....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-736684085:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736684085,1,['test'],['test']
Testability,"Below is a new testcase, laminar flow around a cylinder. In the line figure I show the normal velocity on the axis y=0, with the solid red line the results from develop. The dashed line is with only the new Green-Gauss correction. It always leads to an improvement. These 2 results were obtained with an undisturbed grid. I then distort the grid a bit (as seen in the contour plot) and rerun the GG correction and I get the green line. Still an improvement, but a bit more bumps on the line.; I then correct the edge normals as done in CPhysicalGeometry. I then get the jagged line shown.; The correction using the residuals in BC_Sym_Plane seems to be ill-defined because the final converged solution depends on the initial solution [so I do not show tests with it here, I kept the original bc_sym_plane]. ; ![Screenshot_cylinder](https://github.com/su2code/SU2/assets/7050568/a16db8e1-78c5-482b-a91a-4b0d59b52f0d)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061:15,test,testcase,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061,2,['test'],"['testcase', 'tests']"
Testability,Below you can find a transitional test case using B-C model implemented in SU2:; https://su2code.github.io/tutorials/Transitional_Flat_Plate/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446518663:34,test,test,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446518663,1,['test'],['test']
Testability,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:1408,test,test,1408,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454,1,['test'],['test']
Testability,"Beyoncé's rule of programming, if you like it put a test on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1555#issuecomment-1059553290:52,test,test,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555#issuecomment-1059553290,1,['test'],['test']
Testability,Both Gupta-Yos and WBE are now capable of running with ionization for the viscous simulations using both explicit and implicit time integration. Initial testing at Mach 10 and Mach 15 by @WallyMaier show promising results for GY.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477:153,test,testing,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477,1,['test'],['testing']
Testability,"Both the unit test and case are running without MPI, `SU2_CFD -t 1 primal.cfg` but with 2 or 4 threads it seemed easier to reproduce.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385695339:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385695339,1,['test'],['test']
Testability,"Bumping this thread... Files are now starting to be divided in several PRs, but we should set a clear policy for this. Seems that the consensus is to carry one class per file, move the inlines to the headers, and create subfolders where possible (i.e., have a more flat hierarchy in the src directory based on logical groups such as numerics, geometry, solvers, etc). We do not have a clear naming convention yet, but if it is one class per file, then an option is simply the class name. Am I capturing the current consensus correctly? Anything I am missing? Naming preferences?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-500945013:310,log,logical,310,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-500945013,2,['log'],['logical']
Testability,By the way please give the PR a more descriptive title that reflects the transition fix and the column names feature.; So that folks know what to expect from the change log.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268#issuecomment-823643419:169,log,log,169,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268#issuecomment-823643419,1,['log'],['log']
Testability,"By the way, I can fork the TestCases repo and commit the grid files etc myself, if it would be much better. Please let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265136741:27,Test,TestCases,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265136741,1,['Test'],['TestCases']
Testability,"By the way, I have another set up updates for you guys to consider that are; beyond the scope of this pull request. Let me know if you are waiting on me; to close the pull request or if you can do that. I put the recommended changes for the structure of config.py file in a gist; https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the; low level config errors validation. I also created a few unit test cases to; allow a controlled build up of regex checks without risk of breaking; previous bug fixes. Let me know. Steve. On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote:. > thanks for the commands; > ; > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com; > ; > > wrote:; > > ; > > so now the file is being committed as deleted... please roll back to this; > > commit; > > spendres@6cbddbe; > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ; > > here are the commands you can use --; > > Reset the index to the desired tree; > > ; > > git reset 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > Move the branch pointer back to the previous HEAD; > > ; > > git reset --soft HEAD@{1}; > > ; > > git commit -m ""Revert to 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ""; > > Update working copy to reflect the new commit; > > ; > > git reset --hard; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69498342:416,test,test,416,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69498342,1,['test'],['test']
Testability,"By the way, you are doing a great job with the HB. And, sorry to comment out your subroutine. I'm using #ifdef CHECK_AD (line 3670, driver structure.cpp). For the time being, I have also commented out the regression test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-260104666:216,test,test,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-260104666,1,['test'],['test']
Testability,"Can someone validate the Conjugate Heat Transfer test case? Perhaps @oleburghardt ? I included the CHT_WALL_INTERFACE in the list of markers that are used for the wall distance computation, but that was not present in the original implementation. I can run the test case, but I don't know what to validate the case against.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435402614:49,test,test,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435402614,2,['test'],['test']
Testability,"Can you modify the default such that nothing changes for the existing test cases? You can then add a new test case to the repository with the modified limits. ; As users get more familiar with this feature, this feature then be gradually introduced into other testcases and tutorials. It is also important to add some documentation to the website.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2229142118:70,test,test,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2229142118,3,['test'],"['test', 'testcases']"
Testability,Can you post a little bit more information? And have a look also at the full log.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019#issuecomment-640538238:77,log,log,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640538238,1,['log'],['log']
Testability,"Certainly - I think that the newer regression tests that diff two files rather than using the values listed in the regression scripts are all inviscid, so I think this should just be a matter of updating the values in the regression scripts, and I can help out over email as well. ; If you haven't already seen it, there are some notes in the wiki as well: https://github.com/su2code/SU2/wiki/Running-Regression-Tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301#issuecomment-241507891:46,test,tests,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/301#issuecomment-241507891,2,"['Test', 'test']","['Tests', 'tests']"
Testability,Changes that are necessary in a follow-up PR:; - [ ] Move regression tests to parallel regression and hybrid reg. Maybe the 4 cases can be split over those.; - [ ] Find similarities between IncNS and NS TauWallWF implementation and make it a common implementation. . Please add to this post other things (I am fine with others editing this),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360#issuecomment-937761007:69,test,tests,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-937761007,1,['test'],['tests']
Testability,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563150217:333,test,tests,333,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217,10,['test'],"['test', 'tests']"
Testability,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-627095055:207,test,tested,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055,8,['test'],"['test', 'tested']"
Testability,"Clark,. Thanks for putting this idea out there. In my experience, unit testing has been an intrinsic part of the the modus operandi in many multi-physics codes at DoE and has been well worth the additional effort. In cases where it makes sense (as described by Clark and in the Stack Exchange discussion) I would advocate for using it moving forward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to writ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:71,test,testing,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,12,['test'],"['testing', 'tests']"
Testability,Closer. It was just a versioning problem with the autotools. Looks like all we need to do now is clean up some old options left in the test case config files causing them to fail.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152448207:135,test,test,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152448207,1,['test'],['test']
Testability,"Codefactor is just complainig about the usual CIncEulerSolver. All other test pass, so I'll merge this and continue in Part III. ; Coming to a repository near you soon. 🎦",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258#issuecomment-824099355:73,test,test,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258#issuecomment-824099355,1,['test'],['test']
Testability,"Commit 1bc9649 reverts my changes to those residuals in `hybrid_regression.py` which were covered by the regression tests already before. (Oddly enough, on my system the residuals of `SU2_CFD -t 2` were different from those computed by the Github pipeline. Maybe this is due to floating-point discrepancies when arithmetic operations are rearranged?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-804683415:116,test,tests,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804683415,1,['test'],['tests']
Testability,"Concerning the Regression tests: ; All failing test have a symmetry plane and are based on the inc-/compressible solver (so far so good). ; They are all based on the comparing the SU2 output, not by a file-diff like some AD cases do with the of_grad.dat file. That makes updating the regression test quite easy :) .; The difference between computed and stored values mostly quite small, apart from cases where a restart is done. I could change the solution_flow.dat where necessary if wanted.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-467130865:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-467130865,3,['test'],"['test', 'tests']"
Testability,"Concerning the Regression tests: @talbring added a check for every testcase whether it exits successfully. Like this, `SU2_CFD -d` passes succesfully when it exits with `EXIT_SUCCESS` (i.e. returns 0). That is the only check, the actual output is not checked.; For quite some reg-tests e.g. with parallel_computation.py the SU2_SOL part silently failed which then causes the particular reg-test to fail. ""Silently"" because the test_values from the successful SU2_CFD match and that was the only criteria until now. Additionally we found a little bug where steady primal multizone restarts wouldn't work. That is fixed as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-582469516:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-582469516,4,['test'],"['test', 'testcase', 'tests']"
Testability,"Could be a data race, thanks for reporting @kursatyurt. Last I ran the thread sanitizer during the CoDiPack 2 update, nothing came up at the time. The failing test is the recently added `pywrapper_CFD_AD_MeshDisp`. I'll look into it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980#issuecomment-1480981399:159,test,test,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980#issuecomment-1480981399,1,['test'],['test']
Testability,"Currently I am not using multigrid. I tried with with 20 cores and 2 threads and it almost results in the same rate of convergence of the simulation with only 20 cores. I also tried going back to a couple of commits, right after the merge of the develop branch and it does not diverge on 40 cores. Starting from that commit I only slightly changed the computation of the stress tensor, which does not involve new mpi communications, thus I don't understand why it should lead to divergence. I will look further into this. EDIT. I encounter non-deterministic convergence running the same testcase on the same machine consecutive times. Sometimes it diverges and other times it goes through all of the iterations. It may be related to Issue #2259. I tried with a combination of 4C10T and 20C2T (C = cores, T = threads).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2338570505:587,test,testcase,587,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2338570505,1,['test'],['testcase']
Testability,"Data\Local\Programs\Python\Python39\python.exe; Build Options: -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'C",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1161,test,testing,1161,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"Dear @IndianaStokes,. First of all, I would like to thank you for the many contributions you are giving to SU2. I have just a question? Did you test this improvement in convergence rate with both JST and Roe 2nd order limiter?. regards . sv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334288538:144,test,test,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334288538,1,['test'],['test']
Testability,"Dear @WenyinWei: presently Mutation is already fully linked to SU2 and is not only something that will allow to deal nicely with chemical reactions, but it presently also used to get all the species/mixture thermochemical properties (including ions and free electrons) and to address thermal non equilibrium (i.e. multiple-temperatures) by incorporating characteristic vibrational and electronic temperatures for various species. We still have not pushed the latest developments in NEMO-TNE2 since we are finalizing some verification and validation test cases and producing appropriate documentation to be added on the SU2 webpage. @srcopela already created a nice substrate for all these features now we are trying to put this up to speed with the latest SU2 versions and capabilities and go beyond that with additional capabilities. Introducing MHD is definitely something on our roadmap, but something that will come after we have completed our merging of TNE2+NEMO and we have one solid feature with thermochemical nonequilibrium.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515662933:549,test,test,549,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515662933,1,['test'],['test']
Testability,"Dear Dr Albring,. I just followed the procedures and included the files to create a test case to SU2_CFD_AD [a coarse mesh, a TargetCp.dat and a config file for an Arina nozzle. The coarse mesh is a 2000 triangles one; which is enough to give us an idea of the shockwave location and the geometry modifications. The next mesh I have would be an ~85000 elements which gives us a good information on the 27th function call]. ; I had some segmentation faults during long jobs: Is there some recommended tuning I can do on OS/HW or SU2 in order to minimize them?. With kind regards,. Jairo. > On Dec 7, 2018, at 09:45, Jairo Paes Cavalcante Filho <jairo.pcfilho@gmail.com> wrote:; > ; > Hello Dr. Albring,; > ; > Yes! Sorry for the delay due some internal presentations and events here.; > I just finished a small model and successfully tested it on openSUSE. I expect to upload it today.; > ; > With kind regards,; > ; > Jairo; > ; >> On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com <mailto:notifications@github.com>> wrote:; >> ; >> Hi Jairo,; >> ; >> what is the status here ? Is it possible to provide a simpler (smaller) case ?; >> ; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >> ; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445429636:84,test,test,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445429636,4,['test'],"['test', 'tested']"
Testability,"Dear Dr Economon and fellows,. Thank you for the remarks.; I have included reference to index INST_0 to the code in the local branch,; and compiled it in a MacOS (El Capitán):; Successfull compilation for Inverse Design Cp & Inverse Design HeatFlux.; External METIS lib caused eight warnings on arguments of abs() function:; Suggestion is to use *llabs*() instead of *abs*(). Please see appended; extract.; I am running a local test now, which uses Inverse Design Cp; and as soon as; it finishes, I will update the remote too, so we can continue the tests. With kind regards,. Jairo. CC libmetis/libmetis_a-mincover.o. *../../../externals/metis/libmetis/parmetis.c:311:15: **warning: **absolute; value*. * function 'abs' given an argument of type 'long long' but has; parameter of*. * type 'int' which may cause truncation of value [-Wabsolute-value]*. mindiff = abs(pwgts[0]-pwgts[1]);. * ^*. *../../../externals/metis/libmetis/parmetis.c:311:15: **note: *use function; 'llabs'. instead. mindiff = abs(pwgts[0]-pwgts[1]);. * ^~~*. llabs. *../../../externals/metis/libmetis/parmetis.c:336:17: **warning: **absolute; value*. * function 'abs' given an argument of type 'long long' but has; parameter of*. * type 'int' which may cause truncation of value [-Wabsolute-value]*. newdiff = abs(pwgts[to]+vwgt[higain] - (pwgts[from]-rinfo[higain].... * ^*. *../../../externals/metis/libmetis/parmetis.c:336:17: **note: *use function; 'llabs'. instead. newdiff = abs(pwgts[to]+vwgt[higain] - (pwgts[from]-rinfo[higain].... * ^~~*. llabs. *../../../externals/metis/libmetis/parmetis.c:540:15: **warning: **absolute; value*. * function 'abs' given an argument of type 'long long' but has; parameter of*. * type 'int' which may cause truncation of value [-Wabsolute-value]*. mindiff = abs(pwgts[0]-pwgts[1]);. * ^*. *../../../externals/metis/libmetis/parmetis.c:540:15: **note: *use function; 'llabs'. instead. mindiff = abs(pwgts[0]-pwgts[1]);. * ^~~*. llabs. *../../../externals/metis/libmetis/parmetis.c:583:17",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-436789848:428,test,test,428,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-436789848,2,['test'],"['test', 'tests']"
Testability,"Dear Dr. Economon, . I just uploaded the mentioned files. I hope everything may be ok now. With kind regards,. Jairo. > On Jan 21, 2019, at 22:31, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design.; > ; > Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-456240798>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180tLXcO2Ht3-J3rmwCWlPKQutyTiUks5vFmoEgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456794388:541,Test,TestCases,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456794388,1,['Test'],['TestCases']
Testability,"Dear Dr. Economon,. I have uploaded a non-empty file (Arina2Kmesh.su2) to the develop branch and I was able to see the updated file in https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k>; Please find a glance of the evidence in the file appended to this note.; I realised that the uploading was effective after I committed it.; So I believe that now things are in the proper places. With kind regards,. Jairo. > On Dec 19, 2018, at 05:15, Thomas D. Economon <notifications@github.com> wrote:; > ; > I have just uploaded an empty file as a placeholder for your mesh, @jaspe55 <https://github.com/jaspe55>. Can you please try to update your local copy of the develop branch from the TestCases repository and then overwrite the empty file with your mesh? You can find the file in TestCases/disc_adj_euler/arina2k/, or view in the browser here:; > ; > https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k>; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-448506828>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180g1pVX8bgD1AMR-pDrH4PM5AKAbcks5u6fWmgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-448831006:162,Test,TestCases,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-448831006,6,['Test'],['TestCases']
Testability,"Dear Dr. Economon,. I just finished the run on AD with the files you have adjusted and it did; converge. I also have successfully run some simple inverse design tests; with a limit on the number of cycles.; Thank you very much for your guidance and help. With kind regards,. Jairo. On Wed, Jan 30, 2019 at 2:13 PM Thomas D. Economon <notifications@github.com>; wrote:. > *@economon* approved this pull request.; >; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; >; > Just one request: I have adjusted the number of iterations for the; > regression test and updated the residual values in the python script. I; > also had to move around some files. Can you please run the case (to; > convergence) and verify that the results are what you expect? Note that the; > config file and target Cp are in the code repository and the mesh and; > solution file are in the testcases repository. If everything looks ok, then; > this is ready to be merged.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459568514:161,test,tests,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459568514,6,['test'],"['test', 'testcases', 'tests']"
Testability,"Dear Dr. Economon,. Thank you again for your guidance.; The git add, git commit and git push commands worked as expected.; The only problem I had was when I tried to upload the mesh file to https://github.com/su2code/TestCases/tree/develop/disc_adj_euler: <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler:> I wanted to upload a folder “arina2k”, whose contents is the mesh file (.su2). I could not just upload the folder name: the system appears to be waiting for an actual file name. When I choose the file name inside that folder , it appears that the system would upload the file within the repository, but 'discarding’ its folder name, so I would have an ‘orphaned’ file there. I tried also to create a file (which would be my folder name), but again, I am prompted with an editor in order to write an actual file, using directly the browser. I believe that there is a simple way to upload a sub-directory/filename, but i could not realize it. With kind regards,. Jairo. > On Dec 14, 2018, at 01:26, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop <https://github.com/su2code/TestCases/tree/develop>. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-447209397>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hTDp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447475363:217,Test,TestCases,217,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447475363,2,['Test'],['TestCases']
Testability,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:939,test,tests,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['test'],['tests']
Testability,"Dear Jyothi,; thanks, I managed to download all files correctly.; I noticed that in your config file you are using the MARKER_FSI_INTERFACE option, which is actually outdated (currently it should read MARKER_ZONE_INTERFACE), so I am assuming that you are not running the latest version of the develop branch.; First, I would suggest you to update SU2 on your local server, as the issue might have been solved in one of the latest updates.; Indeed, I was able to run the test case and the output files look good using the latest version. By the way, I had troubles using the SA turbulence model (a segmentation fault which I have to investigate further, but the case run just fine using the SST model). Let me know if you still get the ""nan"" issue in the output files using the latest version of the develop branch. cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317780215:470,test,test,470,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317780215,1,['test'],['test']
Testability,"Dear SU2 users,. I continued the investigation and managed to track down the source of the problem.; The issues I face with SU2 appear when my wing geometry has several airfoils across the span. I ran several cases with supercritical airfoils and NACA 4 digits airfoils. As soon as the airfoil was changing along the span, SU2 had troubles computing the projected and wetted area of the wing, an attaining a correct solution. To better illustrate the issue, I attached a SU2 .cfg file (dummy.txt) and Gmsh .geo file (dummy_mesh.txt) to this post.; The geometry is the same as in the previous post except that I used 3 different airfoils along the span. That is, I replaced the NASA SC(2)-0712 by the {NASA SC(2)-0714, NASA SC(2)-0712, NASA SC(3)-0712}.; These airfoils are similar, so I expected to recover similar results. However, I observed that:; - SU2 computed the wrong z-projected area : 23.1 m^2 instead of 38 m^2,; - the y+ of the first cell is way too high in certain regions (see attached image, grey zones are the area where y+<1),; - the Cp distribution if not looking good (makes sense with those values of y+), see attached file. I am unsure if the problem appears because Gmsh has trouble in generating this kind of mesh or because SU2 has trouble reading it. Any ideas are welcome. Thank you again,; Adrien. ![cp](https://user-images.githubusercontent.com/39187559/43064280-c076a5e2-8e5e-11e8-84e5-602d1ee27ea2.png); ![y](https://user-images.githubusercontent.com/39187559/43064281-c09a1f86-8e5e-11e8-82b9-4c4fddc7d470.png); [dummy_mesh.txt](https://github.com/su2code/SU2/files/2218394/dummy_mesh.txt); [dummy.txt](https://github.com/su2code/SU2/files/2218395/dummy.txt); [log.txt](https://github.com/su2code/SU2/files/2218411/log.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-406973884:1691,log,log,1691,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-406973884,2,['log'],['log']
Testability,"Dear all, . ; As I mentioned at the dev meeting earlier this week, regarding V&V, I already have joint plans; with Eduardo Molina to look at a number of turbulent benchmark cases using his (E)DDES; implementation (eg. square cylinder, tandem cylinders, massively separated NACA0012/21, etc). ; The next step after that would be to use my FWH implementation to compute farfield noise and compare them to the BANC workshop cases. NASA folks are very open to share the BANC data. ; We will likely be able to obtain the European VALIANT project data too.; I am on a short vacation right now but will start iterating with Eduardo on this next week ; when I am back in the office. . Best,. Beckett",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423286251:163,benchmark,benchmark,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423286251,1,['benchmark'],['benchmark']
Testability,"Dear all, ; I have added a pdf file here that includes some test case results obtained with our BC transition model. These zero pressure gradient and variable pressure gradient flat plate test cases are very popular for model validation. I have also included Eppler E387 airfoil results. I would appreciate if you have any 3-D test case and share it with me.; Looking forward to hear your feedback. ; Sincerely,; Samet. [BC_model_TestCaseResults.pdf](https://github.com/su2code/SU2/files/562425/BC_model_TestCaseResults.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257360833:60,test,test,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257360833,6,['test'],['test']
Testability,"Dear all,. I temporarily removed the test case because there were a couple of fix to do before. If you still think the test case for this feature may be important, I think a separate PR is more appropriate, as there will be the need to discuss about the best way to incorporate it. In the meantime, I included a fix on the outputs that allow to print grid velocities in the output files using the new mesh deformation solver and a small fix on the restart from the python side. Looking forward for your comments!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148#issuecomment-766893504:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148#issuecomment-766893504,2,['test'],['test']
Testability,"Did you expect that your introduced changes fail the regression test for fsi related cases? If so, could you point out what bits are responsible; Edit: ; Well so one part is d949cbe i.e. relaxation applied to velocities as well. but that did not change the dyn fsi adjoint case. That prob are the changes from b7f5b05 in CMeshSolver where LinSysSol is not set to zero anymore (WIthout knowing more of that solver: was that a bug before?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284#issuecomment-845188906:64,test,test,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-845188906,1,['test'],['test']
Testability,Discussion #2213 is about fixes for the address sanitizer detections in the `harmonic_balance` and `hb_rans_preconditioning` test cases (see https://github.com/su2code/SU2/actions/runs/8422887468/job/23065483005?pr=2246).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875:125,test,test,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875,1,['test'],['test']
Testability,"Do you have a particular case that you can share ? Because for me it seems to work, at least for provided test cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-248906088:106,test,test,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-248906088,1,['test'],['test']
Testability,Do you have a testcase that demonstrates this implementation? Can you reproduce and compare to the validation plots published by Xiao He? I think you have shared some similar results with us before.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354#issuecomment-2341330478:14,test,testcase,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354#issuecomment-2341330478,1,['test'],['testcase']
Testability,Do you think a test case for this is necessary?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-800279488:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800279488,1,['test'],['test']
Testability,"Do you understand why two regressions test are failing with a exclamation mark?. > On Mar 26, 2018, at 11:11 AM, Thomas D. Economon <notifications@github.com> wrote:; > ; > Thanks for sorting this out @hlkline <https://github.com/hlkline> and @fpalacios <https://github.com/fpalacios>. Once this and the other PR that I have open for ""memory fixes"" are ready and merged, why don't we put out a small maintenance release, v6.0.1?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#issuecomment-376260268>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkIhOxa7Zm6t9u5OxUuquRym_1gZks5tiS9mgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376544604:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376544604,1,['test'],['test']
Testability,"Documenting the plan discussed in our developers call this morning here:; * Put header and sources together ; * Remove separation between Common/, SU2_CFD/, etc.; * Each major folder becomes a library (geometry/, solvers/, etc.); * Keep some subdirectories in major folders (e.g., solvers/flow/); * Set up include paths in the meson build system to make #include statements clean in the source; * Will prob require removing automake as part of this, which can’t build these libraries in parallel. Still need to finish separating files first. Tasks:; * @talbring - iteration classes; * @jayantmukho - grid adaptation, ADT structure, grid movement; * @pcarruscag - AD structure, folders for fem_\* ; * @economon - fluid model. Somewhat related:; * Run a test to see how many formatting-related conflicts result from running clang-format on and then diffing two fairly different branches (@pcarruscag). Please add anything else I am missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-631567733:752,test,test,752,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-631567733,1,['test'],['test']
Testability,"Does anyone know why we get this random failures from travis?. > No output has been received in the last 20m0s, this potentially indicates a stalled build or something wrong with the build itself. It does not seem to be related with a particular test case...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-543128540:246,test,test,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-543128540,1,['test'],['test']
Testability,Does the code run?; What happens if you use ./meson.py instead of just meson?; What happens if you call the unit test executables directly (they will be in the meson build folder)?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859#issuecomment-1367814260:113,test,test,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859#issuecomment-1367814260,1,['test'],['test']
Testability,Does this support a type of CGNS that we didn't before? If so can you add a small test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1016783113:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016783113,1,['test'],['test']
Testability,"Don't add meshes to the code repo, we have TestCases for that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1765#issuecomment-1255435996:43,Test,TestCases,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1765#issuecomment-1255435996,1,['Test'],['TestCases']
Testability,"Don't mind the failing parallel_regression.py, that is due to https://github.com/su2code/TestCases/pull/91 . The correct residuals will be pushed with https://github.com/su2code/SU2/pull/1530. It is the 3D streamwise periodic case where I changed a wrong NDIME in the mesh. But I guess merging is blocked as parallel_regression.py is required :grimacing:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1532#issuecomment-1027966091:89,Test,TestCases,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532#issuecomment-1027966091,1,['Test'],['TestCases']
Testability,"Dr. Economon, ; As far as I understand, in order to create skin friction lines (or surface streamlines), shear stress components are needed. In the tecplot outputs, I do not have these. So I could not figure out how to do that yet.; Also, I have read many studies abouth the NREL test case, and unfortunately the experimental data does not include skin friction measurements. In addition, the skin friction line plots in these studies seem to have inconsistencies compared to eachother.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-260619381:280,test,test,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-260619381,1,['test'],['test']
Testability,"Dr. Economon,. I have tried to add Schubauer-Klebanoff natural transition case for regression tests as you requested.; In my forked code under develop branch, I have the .cfg file in ""Schubauer_Klebanoff"" folder under ""TestCases/transition"" folder, so the config file directory should be correctly set. However, about a month ago, Dr. Albring moved grid.su2 file somewhere else that I could not locate now, so I am not sure how the regression test code will locate the grid file :) Just in case, I am attaching the grid file that I used for regression test. . Should there be any problem, please let me know.; [grid.zip](https://github.com/su2code/SU2/files/633737/grid.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265131364:94,test,tests,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265131364,4,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,"Dr. Economon,; I have added the necessary files to the develop branch of TestCases repo and created a pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265696471:73,Test,TestCases,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265696471,1,['Test'],['TestCases']
Testability,"Dr. Economon,; It turns out that the latest version of the SU2 prints the outputs that I needed (Cfx Cfy and Cfz). So, I created the surface streamlines, along with pressure coefficient distributions for comparison, and you can find it in the attached document . There are also some results from other studies in the literature in the attached document. ; It seems to me that, the NREL case may not be the best case for validating our model. Comparing the results in the literature, none of the surface streamlines agree well with eachother. In the absence of experimental data, it is difficult to tell which one is more reasonable. I would be happy if you would also comment on these results.; Also, I wonder what the next step is. Is there anything else that you require us to do before merging the model into the master code? I think if the transition model was released officially, the community may apply the transition model to different test cases that we may not heard of or the proprietary ones. . Samet; [BC_Transition_NREL_PhaseVI.pdf](https://github.com/su2code/SU2/files/603139/BC_Transition_NREL_PhaseVI.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-261886757:944,test,test,944,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-261886757,1,['test'],['test']
Testability,"Enabled it for develop again. Otherwise no test runs. Changed settings in travis to not build on pushes, only on PRs. Should save some computational work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709#issuecomment-502061004:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/709#issuecomment-502061004,1,['test'],['test']
Testability,"Every simulation starts from zero. I also tried the third grid level and these are the results after seven runs. ![NonDeterministicRMSk_Level3](https://github.com/user-attachments/assets/52870ba5-5c46-4a27-b741-641a4ab54919). Runs 2, 6 and 7 diverge at different iterations while Run 4 converges to the desired residual value (log(RMS(Res_rho)) < -11.5). Running on 4 cores and 10 threads is a problem in this case? Or has the same problems of using 40 cores?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2340142780:327,log,log,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2340142780,1,['log'],['log']
Testability,Everything is up-to-date. I just need to update the TestCase folder....not sure what that order is...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326#issuecomment-882945414:52,Test,TestCase,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326#issuecomment-882945414,1,['Test'],['TestCase']
Testability,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:33,test,test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473,1,['test'],['test']
Testability,"FYI - if you look at the full regtest log, there are a couple of tests failing silently - looks like on the SOL step such that when it checks the values it's still getting a match, but there is an error output. I checked, and this same problem occurs on the current develop branch, so it is not this PR causing the problem. . Since this fixes an urgent performance issue as far as I'm concerned we can merge this in despite that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/340#issuecomment-264673401:38,log,log,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/340#issuecomment-264673401,2,"['log', 'test']","['log', 'tests']"
Testability,FYI: the new Travis CI regression tests for the Python scripts are now live in the develop branch. Hope this helps with your testing.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-205452587:34,test,tests,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-205452587,2,['test'],"['testing', 'tests']"
Testability,"Fixed at least one failed test, but there are still many print statements left to fix:. ![image](https://user-images.githubusercontent.com/4604869/29169275-3be68e88-7da1-11e7-9d78-4f9a39727257.png). Hopefully this can be fixed up and merged before a bunch of new Python 3 incompatible code is added!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321530610:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321530610,1,['test'],['test']
Testability,"Folks,. I replaced the matrix multiplication in the DG solver (gemm in terms of BLAS) with the functionality provided by Eigen. It was very easy and it gives a very readable code. . I ran a couple of tests and, unfortunately, the preliminary conclusion is that you only get good performance if you let Eigen use an optimized BLAS implementation. In my case I used MKL. Compared to directly calling the MKL, there is an overhead of around 10 percent, which is still acceptable. However, if you do not use MKL and let Eigen do the matrix multiplication itself, the performance drops a factor of 7 for the test I carried out, which is a representative 3D test case. This factor is observed for both for the Intel and GNU compiler. It is still a factor 2 faster than my naive implementation though. So it looks like, at least for the DG solver, it is an absolute necessity to use an optimized BLAS implementation, unless there are some magic options in Eigen to make the gemm functionality faster. Using an optimized BLAS implementation in combination with Eigen is fine when doubles are used, i.e. when the solver is run in analysis mode. However, for the discrete adjoint solver the situation is a bit more complicated and we may have to come up with something better than just let Eigen handle the matrix multiplications. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462075284:200,test,tests,200,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462075284,3,['test'],"['test', 'tests']"
Testability,"Folks,. This is indeed a very important capability for many different applications: from interpolation of solutions from coarser grids to finer grids, to querying an unsteady solution, to implementing numerical error estimates…and many others. It is important that the search / interpolation routines work when interpolating between grids where some points in the target grid may fall outside of the source grid and, therefore some notion of distance to the wall is needed. Fortunately, Edwin van der Weide had worked on an interpolation library that @sravya91 (who received her PhD yesterday at our graduation ceremony and is now working at NVIDIA) used in her work. Jayant Mukhopadhaya and Brian Munguia have also been testing/improving the library. Perhaps everyone can comment on current status and we can create a small task force to see what still needs to be done and who can do what?. Best,. Juan. On Jun 17, 2019, at 10:36 AM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I'm going to jump on this too. Is anyone working on solution interpolation (from one mesh to another)? @sravya91<https://github.com/sravya91>, are you still working on this? Did PR #672<https://github.com/su2code/SU2/pull/672> introduce any capabilities to address interpolation? This seems to be a common request from SU2 users: [1]<https://www.cfd-online.com/Forums/su2/213321-su2-solution-interpolation.html> [2]<https://www.cfd-online.com/Forums/su2/215920-use-coarse-grid-flow-solution-initial-solution-fine-grid.html>. I've used some pretty rough python scripts to do solution interpolation in the past, and it would be nice to have some SU2 C++ code that could perform the same task. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/466?email_source=notifications&email_token=AA5FFRGCPYI5KNVQZ7GB5F3P27DQZA5CNFSM4EB5RB6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-502783107:721,test,testing,721,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-502783107,1,['test'],['testing']
Testability,"Following my proposal in the last comment:. I disabled travis to run on develop, instead I set it master. BUT: in addition I set up a cron job in travis, so that at least once every week develop is tested. What do you say ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709#issuecomment-502038526:198,test,tested,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/709#issuecomment-502038526,1,['test'],['tested']
Testability,"For clarification: you mean removing a Testcase from the active regression tests to get faster turnaround from travis, the Testcase-files can stay probably.; The person who put it in place most likely had some feature which (s)he wanted to test. The path can give the purpose of the case away, but not necessarily as it is purely the files. If you (or someone else) have a Testcase in mind which can go out or can be modified I would be thankful. Choosing myself is rather arbitrary. Just as an additional idea: I removed README.md from the gitignore list of the Testcases in a branch and my plan is to shortly explain what the cases are intended to test specifically [Link](https://github.com/su2code/SU2/tree/feature_periodic_streamwise/TestCases/incomp_navierstokes/streamwise_periodic) (Note: The Readme there is not done at all, but it shows the idea kinda)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515505274:39,Test,Testcase,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515505274,8,"['Test', 'test']","['TestCases', 'Testcase', 'Testcase-files', 'Testcases', 'test', 'tests']"
Testability,"For my part, this is ready to be merged in once su2code/TestCases#34 goes through. Only the transonic stator restart case is failing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670#issuecomment-511499499:56,Test,TestCases,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/670#issuecomment-511499499,1,['Test'],['TestCases']
Testability,"For some reason there are now unit tests failing in the CGeometry_Test (assertions: 11 passed, 4 failed). Not sure why this now happens.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1154438104:35,test,tests,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1154438104,2,"['assert', 'test']","['assertions', 'tests']"
Testability,"For the V&V, I had a look at the turbulent flat plate case.I think we should create a couple of python scripts to run the cases and produce the figures from the result automatically. It should then be easy to create different figures, comparing SA and SST, SST1994 vs SST2003, etc. . Maybe somebody already has some scripts to produce the V&V figures? . We can split the flat plate V&V into compressible/incompressible and SA/SST. When this looks good, we can modify the regression test results.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1084341767:482,test,test,482,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1084341767,1,['test'],['test']
Testability,"For the g++ compiler the following compiler flags are pretty good.; -g -Wall -Wextra -Wno-unused-parameter -Wno-empty-body. As @economon said, do this both in sequential and parallel mode. BTW, when the regression tests go through this PR can be merged in as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/598#issuecomment-430136086:214,test,tests,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/598#issuecomment-430136086,1,['test'],['tests']
Testability,"For the time being, lets use Gitter to communicate! Its free and you can simply log in with your github account. https://gitter.im/su2code/community",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515048317:80,log,log,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515048317,2,['log'],['log']
Testability,"For what it's worth, it's very easy to dynamically link files to SU2, for instance if you want to add custom boundary conditions or source terms. Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. If this is all you want, you can do that without any additional libraries. This is more or less the same way as e.g. ANSYS Fluent does it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-679950110:357,test,testcases,357,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679950110,1,['test'],['testcases']
Testability,"Found a bug where I get a deadlock for a big case while writing. Have to look into it to see whether its a problem on our cluster or in the code. If someone could test the vtu/vtm output on a big case (> 32 cores), that would be also very helpful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845#issuecomment-576388025:163,test,test,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-576388025,1,['test'],['test']
Testability,"From a quick skim it looks like it's failing due to small differences in residual values, which is not unexpected here.; Those can be updated in the regression test scripts in SU2/TestCases/ in order to pass the tests, otherwise LGTM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/612#issuecomment-440467191:160,test,test,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/612#issuecomment-440467191,3,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,From my perspective this is finished. As mentioned above I will add a testcase with Mean-flow+SST+2Species for 2 inlets over at #1388 once this is merged.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427#issuecomment-965125694:70,test,testcase,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427#issuecomment-965125694,1,['test'],['testcase']
Testability,"Giulio,. Great work. I think this is a fantastic general contribution to the code. Now that you know the test case results, can you please verify again that everything is working as you expect, and update the regression test residual values here on this pull request? Once everything looks good, we'll merge it in. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/243#issuecomment-189917000:105,test,test,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/243#issuecomment-189917000,2,['test'],['test']
Testability,"Good Morning,. I'm from Chair of Thermal Engineering of Poznań University of Technology.; In August 2017 my colleague and I attended SU2 Summer School in; Kaiserslautern and met the Sci-Comp team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:513,Test,Test,513,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,7,"['Test', 'test']","['Test', 'TestCases', 'test']"
Testability,"Good to know, thank you for testing it.; I'll close this issue once the PR is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-849763505:28,test,testing,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-849763505,1,['test'],['testing']
Testability,"Great idea! Below are some links to databases that I know of. I'd be happy to contribute. . (Some) CFD companies run very large regression tests that can take a long time to complete. Typically, you do not put validation test cases in a regression test (and run it up to convergence) because it will just take too long. A regression test should be <30s or so. ; At a certain point there *will* be validation test cases that will take a couple of weeks to run. If you want to make sure that the validation tests are up-to-date and will run with the current version, create a regression test for it: create a coarse mesh setup for it and run it for only 10 iterations and check the residuals. ; Having said that, it will be nice if there is a general 'run' script that will run all subcases of a single validation case to construct the entire validation and validate the final results with the known/stored solutions.; -nijso. ercoftac database:; http://cfd.mace.manchester.ac.uk/ercoftac/index.html; nparc database:; https://www.grc.nasa.gov/WWW/wind/valid/archive.html; cfl3d V&V database:; https://cfl3d.larc.nasa.gov/Cfl3dv6/cfl3dv6_testcases.html; V&V database for turbulence models:; https://turbmodels.larc.nasa.gov/; drag prediction workshop:; https://aiaa-dpw.larc.nasa.gov/; some cfd-online V&V links: ; https://www.cfd-online.com/Wiki/Validation_and_test_cases; https://www.cfd-online.com/Links/refs.html#validation; reacting flow database:; https://www.sandia.gov/TNF/abstract.html",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426239437:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426239437,7,['test'],"['test', 'tests']"
Testability,"Great to see this, and thanks for all of the effort. Your preparation really showed at the developers meeting. Is it possible for you to also share your multi zone CHT example from the dev meeting slides in this branch? I would like to do a few tests with a concrete case to try it out.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585#issuecomment-424220665:245,test,tests,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/585#issuecomment-424220665,1,['test'],['tests']
Testability,"Great! Assuming they pass the tests, please go ahead and merge in #350 and then this (#351).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271141410:30,test,tests,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271141410,1,['test'],['tests']
Testability,"Great!; As an FYI, we are planning on adding regression scripts which cover more of the python code features, so there may be a delay while we get those implemented and running prior to merging your pull request. ; For the existing regression tests, you can run those on your own machine using the scripts within the TestCases/ folder. (There is also more information on the wiki). It will also be helpful to refer to our developer docs in the wiki: https://github.com/su2code/SU2/wiki/Developer-Docs",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195812062:243,test,tests,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195812062,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Great!; Thank you very much.; With kind regards,. Jairo. On Thu, Nov 1, 2018 at 5:10 PM Thomas D. Economon <notifications@github.com>; wrote:. > No problem at all. I think the issue was that others had merged the; > changes into develop here from the web interface and those changes needed; > to be pulled down into your local copy before you could push the changes to; > .travis.yml up.; >; > I have just made the change, and I see the tests are now running! We'll; > get back with a review soon.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-435170261>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180sQoMHXa2p4ICO_ef6f3QXOmhII_ks5uq1U_gaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435250485:437,test,tests,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435250485,1,['test'],['tests']
Testability,"Great, thanks @MicK7. It is a bit big to have as a regression test just for this, but we can certainly use it to test the 1 or 2 lines we need to change to enable multizone cgns, are you planing to make those changes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1083674187:62,test,test,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1083674187,2,['test'],['test']
Testability,"Great, we needed this! Do you have a testcase that we can use as a regression test to add to the PR?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889504191:37,test,testcase,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889504191,2,['test'],"['test', 'testcase']"
Testability,"Great. I have seen it stall sometimes, but usually a restart is fine. Btw, as I mentioned in other comments, we now have a total of 70 minutes for our tests in Travis CI. It's not a long term solution, but it will hold us over for some time. We have a bit of a logjam with pull requests right now. We'll merge in some of the smaller ones / bug fixes first, but then I'll get this one merged in the near future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264955471:151,test,tests,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264955471,2,"['log', 'test']","['logjam', 'tests']"
Testability,"Great. Sorry for the delay. Just merged those in under the TestCases repo, so let's rerun the tests here and see if everything passes, ok? I'll restart it now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-267193489:59,Test,TestCases,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-267193489,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,Happy to report that with this branch it is now possible to run a calculation with over 1 billion grid points. I ran freestream through a 1029^3 hexa CGNS grid of a cube as a test.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-523804120:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-523804120,1,['test'],['test']
Testability,"Hard to tell if it solves the issue once and for all since that random behaviour was pretty rare.; After initializing those values to zero I was no longer able to reproduce the issue on my machine. ; By the way, on another branch I have (feature_driver_prototype) this issue was always occurring, after this modification it disappeared in that branch too, so I'm pretty confident we fixed it. As far as I know, among all the reg tests, that random behaviour was affecting only the flat plate case.; Are you aware of any other test I can check that are showing this issue?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/316#issuecomment-253175711:429,test,tests,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/316#issuecomment-253175711,2,['test'],"['test', 'tests']"
Testability,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:156,test,tested,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890,1,['test'],['tested']
Testability,"Have you checked that the solution (post-processed) looks OK, using the parallel script and more then 1 processor? Unfortunately, the fact that the reg tests are passing is not always enough. Just let me know if you can!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267087493:152,test,tests,152,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267087493,1,['test'],['tests']
Testability,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:269,test,test,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,2,['test'],['test']
Testability,"Hello Dr. Albring,. Yes! Sorry for the delay due some internal presentations and events here.; I just finished a small model and successfully tested it on openSUSE. I expect to upload it today. With kind regards,. Jairo. > On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com> wrote:; > ; > Hi Jairo,; > ; > what is the status here ? Is it possible to provide a simpler (smaller) case ?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445209093:142,test,tested,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445209093,2,['test'],['tested']
Testability,"Hello Dr. Economon,; ; At this moment, I am running a case which is lighter but sill not very simple (I am running it on a Mac with four cores, and it will finish by Monday, I suspect). As soon as it successfully completes, I will work on a simpler sample case in order to include it in the test suite, willing God. With kind regards,. Jairo. > On Nov 16, 2018, at 16:12, Thomas D. Economon <notifications@github.com> wrote:; > ; > Thanks, @jaspe55 <https://github.com/jaspe55> ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-439496260>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180nOm5nOlpnYLID7YMRQeFOsAZQJYks5uvw4MgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439506935:291,test,test,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439506935,6,['test'],"['test', 'tests']"
Testability,"Hello Dr. Economon,; I have been busy for some time, and just had chance to submit my transition model here on GitHub. Before starting the NREL case, I decided to check the caradonna_tung test case to see how to set grid movement configurations etc.. Although I have successfully run the case with euler equations, I could not do so with the navier-stokes equations as the case stopped running with error ""Convective scheme not implemented (turbulent)"". This is why I could not solve the NREL test case. If I am missing something, would you please help me on the issue?. Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257389300:188,test,test,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257389300,2,['test'],['test']
Testability,"Hello Eduardo, . Sure! I will run my case and will let you know. ; Thank you for the information! . Monika Chauhan ; Sent from my iPhone. > On 27-May-2020, at 8:32 PM, Eduardo Molina <notifications@github.com> wrote:; > ; > ﻿; > Hi Monika,; > ; > We are in the V&V process of a new wall model LES implementation. Also, I took the opportunity to start fixing the RANS wall function since it will share the same code structure with the WMLES part, i.e. replace the wall shear stress in the NS fluxes. ; > ; > We didn’t extensively test the RANS wall functions, only very limited test cases. It will be great if you could run your own cases using the following branch: ; > ; > https://github.com/su2code/SU2/tree/feature_WallModelLES <https://github.com/su2code/SU2/tree/feature_WallModelLES>; > ; > Please let me know if you need additional help and looking forward to hear from you.; > ; > Best,; > ; > Eduardo; > ; > ; > ; > > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > > ; > > ; > > Sure Juan! I would like to. Because I was running on RANS but I am working; > > on LES to make this wall functions work which is not working either.; > > Please let us know how we can support and work to get this working for LES; > > simulation (wall models in SU2).; > > ; > > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; > > wrote:; > > ; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina (copied); > > > co-advised a short project last year on wall functions which made some; > > > progress but did not finalize an implementation. It may be a better; > > > starting point. Eduardo, can you comment where that code went?; > > >; > > > I am also copying Matt S. who is interested in wall function; > > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > > these working in the baseline state…and then improve them in various ways?; > > >; > > > Best,; > > >; > > > Juan; > > >; > >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635021148:529,test,test,529,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635021148,2,['test'],['test']
Testability,"Hello Pedro,; I am one of the developers of the BC model itself, and I have implemented it to the SU2 back in 2016 which was first available to the users on v5 ""Raven"" . We updated the model based on the suggestions of some experts in the field, and created the BCM version several months ago. I am using the updated version for months on my pc without any issues.; By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685:397,test,tests,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685,1,['test'],['tests']
Testability,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:345,log,log,345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489,1,['log'],['log']
Testability,"Hello Tobi, Charanya,. thanks for the efforts. Your results are highly encouraging! I'd like to run in the following days the ONERA FSI test case on my framework for a triple check. Only think is that I was working on a branch on Ruben Sanchez's fork of the code. Can some pro git user tell me how to pull from the `fix_gridvel` on the main repo? Otherwise @TobiKattmann, you were mentioning about adding few lines to the CEulerSolver.cpp? Can you be more detailed about that? Of course I guess these changes need to be used without forcing the old BC in solver_direct_mean.cpp as Charanya was doing. Best",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-634597641:136,test,test,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634597641,1,['test'],['test']
Testability,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:98,Test,Testcases,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,1,['Test'],['Testcases']
Testability,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-620295725:1111,Assert,Assertion,1111,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725,1,['Assert'],['Assertion']
Testability,"Hello Wally, do you know anyone has a TestCase config of HEAT_EQUATION_FVM? I have not found such one in the TestCases folder.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-526993716:38,Test,TestCase,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-526993716,2,['Test'],"['TestCase', 'TestCases']"
Testability,"Hello all,. As a first step towards developing the pressure based system, I was looking at the Poisson solver currently in the code. Is there any active development going on in Poisson problem. From what I understand it was developed for electric potential problems. ; Is there some documentation or test case?. Cheers,; Akshay.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-345704308:300,test,test,300,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-345704308,1,['test'],['test']
Testability,"Hello all,. My apologies for taking so much time to respond. As much as I would have liked to finish this part of the project nicely, I am afraid I must come to the conclusion that I have taken on too many responsibilities to finish the code andfinalize the pull request. I have attached a pptx to this comment that explains a little more about how the procedures work, the ""allow edits by maintainers"" box is checked. If you have any questions for me I will still be available to answer them, but I am not able to actively work on this anymore. The test cases should be available for @bigfooted, is it possible for you to place them where they are required?. As for the depth that was mentioned in an earlier comment of @TobiKattmann : the depth is an option that can be used as a stopping criterion. For every iteration without problems the recursion depth is increased. This way, it can be used as a measure for how close to the limit you are going to stop, as opposed to stopping after the maximum amount of iterations. [invalidGridPrevention.pptx](https://github.com/su2code/SU2/files/5728453/invalidGridPrevention.pptx)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-749404976:550,test,test,550,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-749404976,1,['test'],['test']
Testability,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:974,log,log,974,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,2,['log'],['log']
Testability,Hello guys!. @ShiheJia Could you please elaborate why do you think it is a bug? Did you tested the code?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-988287976:88,test,tested,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988287976,1,['test'],['tested']
Testability,"Hello guys, I have a proposal to make some numerical tests automatically compared with standard analytical results, requiring the deviation of specific physical variables to be in an allowable range. So that such numerical result bias error could be detected in time accurately after every time the numerical algorithm changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-514969680:53,test,tests,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-514969680,1,['test'],['tests']
Testability,"Hello, I am no expert on this but I guess it might not take any work. See https://www.cfd-online.com/Forums/su2/229392-high-temperature-flow.html and links therein, and TestCases/nicf/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065#issuecomment-670842197:169,Test,TestCases,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065#issuecomment-670842197,1,['Test'],['TestCases']
Testability,"Hello, thank you for posting the patch. I did an initial test yesterday (replaced CParallelFileWriter with this version, and re-compiled (./ninja build install)) and it got hung for >12 hrs on jacobian initialization. I am presently restarting the systems to ensure nothing else is interacting with SU2 prior to attempting the run again. I will let you know how it goes on today's run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-891801906:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891801906,1,['test'],['test']
Testability,"Hello,. I have been debugging the differences between the two versions. I found 5 differences that lead to slightly different results. Two of them have been verified to be an improvement of physical modelling. The other 3 I am still trying to figure out. Could you please run the same tests with MUSCL_FLOW=NO and see if you're still facing this issue?. I see that the MUSCL reconstruction is one of the 3 things that have been modified and not sure if could be the cause of the problem or not. I will keep working on understanding the impact of the other 2 things. When you do this - could you please save the simulation output log of both versions and send those back to me too (in this way I'll have a better feeling of what is happening to the residuals throughout the simulation)? We can just focus on the invbb case to make it simpler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684:285,test,tests,285,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684,4,"['log', 'test']","['log', 'tests']"
Testability,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:101,assert,assertion,101,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,4,['assert'],['assertion']
Testability,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:620,test,test,620,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179,1,['test'],['test']
Testability,"Hello. Can you add a test case about AUSMPLUSUP or AUSMPLUSUP2? I installed SU2 6.2.0 and used it to simulate two-dimensional lid-driven cavity flow. When I set 'CONV_NUM_METHOD_FOLW' to be 'AUSMPLUSUP' or 'AUSMPLUSUP2', it shows 'Error in ''void CSoLver::SetResidual_RMS(CGeometry*, CConfig*):' and 'MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD'. But when I set it to be other schemes like AUSM, ROE or so, it runs. Maybe if there is a test case, I can find where is my mistake. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-522633022:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-522633022,2,['test'],['test']
Testability,"Hello; I'm so glad to see that the su2 meeting has been so productive!; To address Eran's concern, maybe it would be more reasonable to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I’m a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterpro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:317,test,tested,317,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,6,"['log', 'test']","['logistics', 'test', 'tested', 'tests']"
Testability,"Here a fluid-only case that somewhat quickly converges. Contains the mesh, 1 cfg for primal and adjoint and a little bash-script where the path to the SU2 binaries has to be adapted to fit your system. The idea was to first run primal and adjoint with vanilla develop and then the same with the new code. I left the log-files of my run in there as well for a quick look . If there is something else I can do let me know. . [new-per-bc-test.tar.gz](https://github.com/su2code/SU2/files/8408958/new-per-bc-test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188:316,log,log-files,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188,3,"['log', 'test']","['log-files', 'test']"
Testability,Here is a smaller [testcase](https://drive.google.com/open?id=1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a). It is an existing SU2 test case converted while adding MIXED elements.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-515786563:19,test,testcase,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-515786563,2,['test'],"['test', 'testcase']"
Testability,"Here is the patch from the develop branch. As I stated before, this adds the 'increment-progress' logic to the vertex export process; this causes the sub-progress bar to shows the progress of the vertex export for a more accurate experience. Thanks again,. Ethan Alan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72#issuecomment-56592650:98,log,logic,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/72#issuecomment-56592650,2,['log'],['logic']
Testability,"Here's the crash info for the build with debug flags. No difference with/out the wrapper.; [QuickStartLog_Debug.txt](https://github.com/su2code/SU2/files/4583003/QuickStartLog_Debug.txt); I'm currently testing on the QuickStart case. I have 2 different types of machines which exhibit the same behavior. They are both using mellanox interconnects using their hpcx package and openmpi 4.0.2 (another system without mellanox but with openmpi 4.0.2 works fine; though that's also on Cent7 instead of Cent8). For the two types of systems with issues, one set is running with Intel Golds and 92GB/node and the other set is running on AMD EPYCs with 256GB/node. Interesting point; I can check with the OpenMPI folks on what might cause an external library (mellanox libraries) to cause file opening to fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624242391:202,test,testing,202,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624242391,1,['test'],['testing']
Testability,"Hey @EduardoMolina ,; Yes, I guess it would be good if you can test if this actually fixes your validation Testcase. Maybe also adding the case as regression/validation case could be an idea as there is currently none to my knowledge. ; MfG, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515225353:63,test,test,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515225353,2,"['Test', 'test']","['Testcase', 'test']"
Testability,"Hey @maxaehle , if you don't want to make further changes you can hit the merge if you like, once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-810867952:102,test,tests,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-810867952,1,['test'],['tests']
Testability,"Hey @pcarruscag . > What about running the solution you propose only on subfolders. Sure, I would be ok with that. If everyone agrees on this, then it is better to do it in steps than not. And of course If there is good evidence that it messes up peoples merges than we better not do it. > your second command replaces tabs by 4 spaces not 2. oh right, I need to check whether I ran the command with 2 spaces and copied the 4 spaces command over from stack overflow. I changed the command for now. Hmmm...looking at the commit I am rather certain that it is 1tab=2spaces in the commit I did. > I still don't think changing 50k lines in one PR is a good practice. Me neither. It also kindof makes `git blame ` harder to use on those lines. If someone has a nicer way then I am keen to hear that. @economon ; > good to put it into a script like externals/fix_line_endings.sh [...] I think you guys were going to run some tests on branches. I will prepare both over the weekend and commit/report :). Cheers all, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-551070233:919,test,tests,919,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551070233,1,['test'],['tests']
Testability,"Hey @sun5k, I fell in the same trap I am afraid, as I should have replied sooner... As for the work: I started to work on a private version so that I could experiment with the code and Github, because I was not experienced with both. In there I, too, based the implementation of the LM version on the old version of the LM transition of SU2 6.3.0. My original plan was to work on my private version until I understood enough to open a Pull request and continue from there, but you were just a little faster :). So that is why I just continued with my own version. I am now at the point of running tests to compare with the original flatplate simulations. I am getting some promising results, but am still checking whether they are correct. What is your status? Are you still working on this pr? And, if I may ask, what is your main goal with the code? Do you want to use the transition model or are you more focused on the implementation and merging with the main SU2 branch? And lastly, would it be beneficial for us to combine our time, code and results to work on this pr together? :). Thanks in advance!; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1083251414:597,test,tests,597,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1083251414,1,['test'],['tests']
Testability,"Hey Pedro, . we already chatted about this during the meeting. Thanks a lot for fixing the issue I mentioned above. . I gave it a shot to the test cases that I have locally and I also saw the same as you, this (very minor) discrepancies with the previous version, but as we spoke it totally looks like they are just numerics. . I have tested a case with FSI, where any major issue would show up and errors in the physics would rapidly accumulate, and instead the difference remains stable at the same order of magnitude (around the 6th significant figure) so in practice negligible. I'm approving the PR and, if there is no further comments, I will be merging it in next week. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/571#issuecomment-423573353:142,test,test,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/571#issuecomment-423573353,2,['test'],"['test', 'tested']"
Testability,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:696,test,tests,696,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,2,['test'],['tests']
Testability,"Hey Sun5k! . I am a master student on the University of Twente, based in the Netherlands. I am also starting to work on the implementation of the Langtry and Menter model into the current version of SU2 for my master thesis (although I have not set-up my own branch yet). The goal would be to validate and hopefully work on some application to test and verify the results compared to other work done in literature and the latest AIAA transition modeling workshop (https://transitionmodeling.larc.nasa.gov/workshop_i/). . I would love to know what your plans are with this model and on what timeframe you are working. As we are both working on this topic, it might be beneficial to combine our efforts? If you would like to discuss this, you can send me an email at r.roos@student.utwente.nl. Kind regards,; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498:344,test,test,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498,1,['test'],['test']
Testability,"Hey Thomas,; I merged with the develop branch. Now there are not conflicts. But in the parallel regression test the first testcase the contadj_oneram6 failed. Do you think that it´s something related with the feature_MRF?. cheers!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-126657899:107,test,test,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-126657899,2,['test'],"['test', 'testcase']"
Testability,"Hey Tobi, I have tried and succeeded in testing the HEAT_EQUATION_FVM example. One more thing to mention, to run the configSolide.cfg alone, another line needs to be edited. . ```; %EXTRA_HEAT_ZONE_OUTPUT = 2-->; EXTRA_HEAT_ZONE_OUTPUT = 1; ```. And one can directly delete all things concerning iZone=1 in the mesh file and rename iZone=2 to be iZone=1. ![2019-09-04 15-56-09 的屏幕截图](https://user-images.githubusercontent.com/33152225/64236361-d163cc80-cf2c-11e9-9971-2d4e2c01955c.png). Except for that, is anyone familiar with the error: SU2 diverge? Every time when I want to add unsteady options to make an animation, the error tells me the solution diverges. ```; ------------------------------ Begin Solver -----------------------------. Error in ""void CSysSolve::ModGramSchmidt(int, std::vector<std::vector<double> >&, std::vector<CSysVector>&)"": ; -------------------------------------------------------------------------; SU2 has diverged.; ------------------------------ Error Exit -------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527789690:40,test,testing,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527789690,1,['test'],['testing']
Testability,"Hey Tom (@economon) the compilation issue has been solved. Regression test went well. I am waiting for the merge to the develop, so that I can open the branch feature_turboSU2 as discussed yesterday, and add also regression test for the new testcases in the folder turbomachinery. cheers. sv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207#issuecomment-152250702:70,test,test,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/207#issuecomment-152250702,3,['test'],"['test', 'testcases']"
Testability,"Hey Tom, thanks for making these changes! This is an important improvement. . However, I just tested it with an unsteady incompressible case. When I try to convert the solutions with SU2_SOL the size of the tecplot files increases in every time step and there are a lot of NaN in the files. I'll see if I can get more information ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282712262:94,test,tested,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282712262,1,['test'],['tested']
Testability,"Hey Tom,. this was fast ! Thanks for the first step in making the output structure more efficient and flexible. So far it looks good. I'll test it for the adjoint soon. @LaSerpe I think for the beginning these things will be hard-coded. But defining this in the config file is definitely a feature we should discuss.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259400331:139,test,test,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259400331,1,['test'],['test']
Testability,"Hey everyone! Just posting the results from one of the NASA TMR verification test cases I have been running: [the DSMA661](https://turbmodels.larc.nasa.gov/airfoilwakeverif500c.html). Using Least Squares (LSQ) for the gradient reconstruction does affect the results and can be seen from this force convergence plot. Using the same gradient reconstruction (GG) gives more accurate results. The two SU2 runs were done using identical linear solver parameters. The only difference is that for the GG+LSQ case, I specified : `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` and for the GG case, I had to reduce the max CFL down to ~20 for it to get stable. . ![cfl_adap_force_convergence_dsma661_SA](https://user-images.githubusercontent.com/30271435/68785755-7ec12380-05f3-11ea-89e3-4b93edeb9d64.png). But due to the much lower maximum CFL, the GG run takes 40-50x longer to reach the same level of convergence. I'm not sure what else can be done to make adaptive CFL better for the GG or WLSQ cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553494652:77,test,test,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553494652,1,['test'],['test']
Testability,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-625381735:1187,test,test,1187,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735,1,['test'],['test']
Testability,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-633731665:1194,test,test,1194,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665,1,['test'],['test']
Testability,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:648,test,test,648,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['test'],['test']
Testability,"Hey,. Yeah you're right, RegisterVariables was being called for ADJFLOW_SOL. Changing it so that it calls for ADJTURB_SOL throws a seg error (haven't investigated why yet). However, if I keep the RegisterVariables as is (for ADJFLOW_SOL) and instead I change the solver instance inside CDiscAdjFluidIteration::SetDependencies to solver_container[iZone][iInst][MESH_0][ADJFLOW_SOL], and try to get the value for cb1 from there, it does return the correct value. Also, the final sensitivity values become non-zero so AD is definitely doing something now. I assumed I had to use the solver_container with ADJTURB_SOL in SetDependencies since the disc_adj_turb flag inside driver_structure is set to true, and so the solver_container with ADJTURB_SOL is instantiated as a new CDiscAdjSolver during the numerics preprocessing. I guess it's a matter of consistency with the rest of the code though, so maybe my assumption was wrong. I'll test to see if the sensitivity values I'm getting are correct, will let you know.; Thanks so much for your help, hopefully this has been solved for good :); Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498749435:932,test,test,932,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498749435,1,['test'],['test']
Testability,"Hey,; I tried to compile it with the changes from fix_python_3.8 branch. Unfortunately the build failed again at the same point. I have attached the [log file](https://github.com/su2code/SU2/files/4654939/su2_build_NoOpenBlas_2.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631259592:150,log,log,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631259592,2,['log'],['log']
Testability,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1177,test,test,1177,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629,1,['test'],['test']
Testability,"Hi @CatarinaGarbacz . Sorry to piggyback on this, I hope it is okay. I think I have the same issue... I have been trying to get a hyper-sonic flow around the cylinder to converge but unfortunately to no avail. I assumed my setup was incorrect so I tried to look for an already tested case to run. I tried the case with the files uploaded in #1625 but that seems to not converge for me either. I have attached the [residual plot](https://imgur.com/a/ghnWGF4). I am willing to run a few cases on my workstation to help debug this. Kindly let me know which files to use and with which settings toggled/changed. Please let me know if you need any more information from my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1563869449:277,test,tested,277,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1563869449,1,['test'],['tested']
Testability,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-630289600:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600,4,['test'],['test']
Testability,"Hi @EduardoMolina . I will add this in the test repo. It is a standard case used in majority of the papers (relevant).; What are the changes/additions I need to carry out , can you guide me with the procedure of adding the test case in repo. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-455009027:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-455009027,4,['test'],['test']
Testability,Hi @EduardoMolina @aeroamit : I think it is running now. I don't think the tests could execute because the travis file was pointing to a branch in an external fork. I have reverted it to develop.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-460078452:75,test,tests,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-460078452,1,['test'],['tests']
Testability,"Hi @EduardoMolina. I have 1- created a folder and added a .cfg file (TestCases/euler/bluntbody/blunt.cfg) 2- added details in serial as well as parallel_regression.py 3- Added the mesh TestCases/euler/bluntbody/blunt_91.su2 in online repository (merged with develop branch). Now Travis CI is throwing following error- ; Traceback (most recent call last):; File ""serial_regression.py"", line 1403, in <module>; main(); File ""serial_regression.py"", line 129, in main; test_list.append(bluntbody); NameError: global name 'bluntbody' is not defined; The command ""python $TEST_SCRIPT"" exited with 1. (In parallel_regression as well); (I missed out some small changes??). Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-456556642:69,Test,TestCases,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-456556642,2,['Test'],['TestCases']
Testability,Hi @EduardoMolina. Submitted the PR for Testcase (mesh file); Thanks; Amit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-458291038:40,Test,Testcase,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-458291038,1,['Test'],['Testcase']
Testability,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:458,log,logic,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854,4,"['benchmark', 'log']","['benchmark', 'logic']"
Testability,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:673,test,tested,673,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286,2,['test'],['tested']
Testability,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:189,test,tested,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522,1,['test'],['tested']
Testability,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:1014,test,test,1014,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528,1,['test'],['test']
Testability,"Hi @WallyMaier and @pcarruscag ,. I would like to do a test merge on my branch(es) before this gets merged. I just briefly scrolled through the PR but would like to take a closer look. (As close as it can get for +10.000, -10.000 but a lot of that is copied from A to B as already mentioned); I will report tomorrow (tuesday) evening. One thing ahead: I noticed there are quite some files under `Files changed` which have `No changes. ` ...it is also not a mode change (i.e. change in executable permission) ... so what does that mean? At least that is what github shows me in the `Files changed` tab ... in the `jump to file or symbol` list I get some +<some green number>, -<some red number>... so maybe it is just github messing up. Ok, two things ahead: @pcarruscag I guess I would have preferred to have your contributions split into a separate PR like #821 from the beginning as probably the reviews of each PR would be a bit easier",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555043402:55,test,test,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555043402,1,['test'],['test']
Testability,"Hi @WenyinWei ,; This is the idea behind https://github.com/su2code/vandv in the future (as far as I understand it) or now pretty much everything that is in the Testcases folder of SU2. . I am not sure if there is a Testcase currently which would catch the current issue. I think that not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-515070095:161,Test,Testcases,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-515070095,2,['Test'],"['Testcase', 'Testcases']"
Testability,"Hi @WenyinWei, ; using (on Linux) `grep -r HEAT_EQUATION_FVM .` in the `<SU2_root>/Testcases` folder will point you to `./coupled_cht/incompressible/configSolid.cfg:15:SOLVER= HEAT_EQUATION_FVM`. It is a CHT Testcase (i.e. coupled fluid and solid) but by changing `MARKER_CHT_INTERFACE ` in configSolid.cfg to `MARKER_ISOTHERMAL=(PINSD, 350)` for example you should be able to run the configSolid.cfg alone. ; Hope that helps, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527331047:83,Test,Testcases,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527331047,2,['Test'],"['Testcase', 'Testcases']"
Testability,"Hi @YairMO, Hi @emaberman ,. thank you very much for your comments. I haven't found any suggestion in literature to clip to only positive values the cross-diffusion term in the w-equation. I understand that it might be more robust, but it is not the standard implementation of the SST model, which is the first thing that we need to achieve. Only then we can build on top of that to improve the robustness of SU2. Nevertheless, I tried the SWBLI test case and I compared the results across 6 different combinations:. 1- develop branch, no changes; 2- develop branch, changes to Supersonic_inlet profile as suggested in #1851 ; 3- my branch, with original CDkw implementation (should give exactly the same result as develop+modified BC); 3- my branch, with original CDkw implementation and using boundary conditions from TMR; 4- my branch, with original CDkw implementation and using your suggestions for lower limits for k and w.; 5- my branch, allowing negative values of CDkw; 6- my branch, allowing negative values of CDkw and using boundary conditions from TMR; 7- my branch, allowing negative values of CDkw and using your suggestions for lower limits for k and w.; 8- my branch, allowing negative values of CDkw, using boundary conditions from TMR and using your suggestions for lower limits for k and w. When my branch is used, then the changes to the supersonic inlet BC are already in place. I haven't achieved convergence with 1, 2 and 3. More precisely, 1 diverged right away (after 30 iterations), while 2 and 3 gave ""FGMRES - Orthogonalization Failed"" after 900ish iterations. Here you can see the residuals for the different combinations. ![OrigCDkw](https://github.com/user-attachments/assets/18836f37-5fa5-4523-bee2-8f0c420d4080). ![NegCDkw](https://github.com/user-attachments/assets/4ba446a0-f77d-4f06-bcc2-cdd499839f82). Unfortunately I will be busy with the AIAA Conference next week, thus I don't know how much I will be able to work on this. The next test case will be the 2D air",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2252804531:446,test,test,446,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2252804531,1,['test'],['test']
Testability,"Hi @aeroamit ,. It seems you added the grid to your own fork instead of https://github.com/su2code/TestCases/tree/develop. This is the reason travis CI didn't find your grid and is hanging. Please submit a PR also for the test case. Please let me know if you need further help. Happy weekend!. Thanks; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-457849144:99,Test,TestCases,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-457849144,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Hi @aeroamit ,. LGTM! Thanks. Just a mark: I think it is interesting to add the flow past a blunt body on the test repo. What do think? If not, it is ready to merge. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-454542835:110,test,test,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-454542835,1,['test'],['test']
Testability,"Hi @aeroamit . Sure. Please see this link: https://su2code.github.io/docs/Gitting-Started/. Basically, you need to modify the python regression files in order to add your new test case. Also, you need to upload the grid in https://github.com/su2code/TestCases, you can create a branch for that. Lastly, update .travis.yml but don't forget to revert it before merge. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-455422968:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-455422968,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Hi @aeroamit,; Thank you for the detailed testing, the results look quite good, I might give these schemes a try.; By the way, my question on whether these schemes could be merged was not just with code clean-up in mind, if different schemes could be obtained by changing some constants then in theory the discrete adjoint solver could be used to get sensitivities of numerical phenomena with respect to the choice of method.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-453447518:42,test,testing,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-453447518,1,['test'],['testing']
Testability,"Hi @alecappiello, thanks for joining the discussion. > Hi all, I've just tried to run the Aachen parallel regression test locally (code from SU2 [feature_asan](https://github.com/su2code/SU2/tree/feature_asan), restart files from SU2/TestCases) and I get a pretty different outcome than the PR here.; > ; > residuals I get locally: | 9| -15.378838| -15.209087| -15.081009| -13.857694| -12.724170| -10.052202|. If you use your local environment for building and running (as opposed to the containers), that can lead to differences, too (although it's not a good sign if they are large). So I think the question is rather, with the changes in the `feature_asan` branch, do you see reasonable results and/or the familiar residuals in your local environment?. @bigfooted reports that the Aachen turbine case in current develop is not deterministic (see [here](https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066) and [here](https://github.com/su2code/SU2/actions/runs/8658658261/attempts/1)), that could be an issue, too. If it is due to memory issues, the changes in this PR might fix this. > Also, [feature_asan](https://github.com/su2code/SU2/tree/feature_asan) doesn't have any Aachen_turbine folder among the testcases. I see [this Aachen turbine folder](https://github.com/su2code/SU2/tree/feature_asan/TestCases/turbomachinery/Aachen_turbine), is it not the correct one?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2057334634:117,test,test,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2057334634,4,"['Test', 'test']","['TestCases', 'test', 'testcases']"
Testability,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621483859:883,log,logs,883,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859,4,"['log', 'test']","['logs', 'test']"
Testability,"Hi @cvencro , I think it would be good to add that Testcase to the regression tests to 'guard' the code. ; I actually wanted to do that real quick but it guess that with `SINGLEZONE_DRIVER` one cannot access `TIME_ITER`, only `EXT_ITER` with the` .test_iter` variable of the python Testcase class. Not sure if that is addressed in #724 , maybe @rsanfer or @talbring can give a quick info as this is probably affecting all unsteady regression tests. . Concerning the Testcase repo: You can simply open a PR for the develop branch of the Testcase repo, and refer to the corresponding PR here (and vice versa). As far as I know the Testcase repo is not protected, i.e. you can merge without any check. And as it is just one added mesh and no other change you could do it right now from my point of view. Another point: What about the rotating_frame for incompressible flow? If it is untested I would like an error catch in place that this feature can't be used out of the box.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527167827:51,Test,Testcase,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527167827,9,"['Test', 'test']","['Testcase', 'tests']"
Testability,"Hi @dkavolis,; It seems like you know your stuff about build systems and associated best practices, it would be great if you could open a PR with the fixes for this, I'd be happy to test the MKL stuff on the systems I have access to.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/823#issuecomment-558107370:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/823#issuecomment-558107370,1,['test'],['test']
Testability,"Hi @economon ,. I tested a couple of cases - laminar flow over a cylinder and turbulent flat plate and the convergence is greatly enhanced. I have attached a plot of convergence history for the flat plate case. I didn't have much luck with the laminar backward facing step case though. The residuals tends to oscillate around -5.5. I was planning to run the NACA 0012 test case soon. Do you have any cases specifically that you wanted to test? I can run some of them soon.; ![Convergence](https://user-images.githubusercontent.com/28007882/65721666-b9eeae00-e0aa-11e9-97c6-727d743e923b.png). Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-535683971:18,test,tested,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-535683971,3,['test'],"['test', 'tested']"
Testability,"Hi @economon ,. I tried existing Test cases from Repository (NACA0012 etc.). At lower Mach numbers, there is improvement in accuracy over AUSM, HLLC or Roe scheme (especially stagnation region values and there is some more story to it). ; I will try to workout some specific test case for higher Mach number to show the differences.; Also some of these latest schemes are likely to be better in comparison to existing ones/predecessors in most of the situations (incrementally or reasonably). Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-447092111:33,Test,Test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-447092111,2,"['Test', 'test']","['Test', 'test']"
Testability,"Hi @economon ,. Thanks for the effort in implementing this PR that is focus in robustness and convergence. . However, I agree with @pcarruscag that we need to give to the user the ability to choose the gradient method that he/she thinks is appropriate. Although, this PR sounds promising we didn't test in complex geometries, i.e. High Lift PW or Drag PW (please correct me if I am wrong). Moreover, it may well be that in some cases the use of the more robust gradient method is not necessary since the CFL number is small for accuracy reasons, i.e. hybrid RANS/LES simulations like DDES. Thanks again,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532903950:298,test,test,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532903950,1,['test'],['test']
Testability,Hi @economon @EduardoMolina . I have tried two test cases - NACA 0012 airfoil and flow past blunt body. Please see the attached pdf file containing the details. [AUSM_UP_UP2.pdf](https://github.com/su2code/SU2/files/2746891/AUSM_UP_UP2.pdf). Regards; Amit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-453234901:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-453234901,1,['test'],['test']
Testability,"Hi @gbaty,. I started pushing this a bit further and opened up a new PR (#424). Next step is trying to get the wrapper to build against a version of Python 3 and test with that on Travis. Let me know if you have any ideas. I'm struggling a bit with the Makefile generation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323882820:162,test,test,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323882820,1,['test'],['test']
Testability,"Hi @gmandrews: we have been working hard on issues related to the partitioning / memory, and we have a branch that is under testing and nearly complete. Can you please try your case with the branch here, when you have a moment, to see if the performance is any better?. https://github.com/su2code/SU2/tree/fix_partitioning",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/479#issuecomment-347944502:124,test,testing,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/479#issuecomment-347944502,1,['test'],['testing']
Testability,"Hi @hlkline , should we open a separate issue concerning just the test for similar errors?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252892860:66,test,test,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252892860,1,['test'],['test']
Testability,"Hi @jaspe55 - thanks for the first contribution!. Can you please switch the email and branch name in .travis.yml back to su2code-dev@lists.stanford.edu and develop, respectively? That should get the tests running so we can give this a proper review (should be quick given the small change).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434492415:199,test,tests,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434492415,1,['test'],['tests']
Testability,"Hi @jblueh , can we update medipack as well to the latest commit? . (As you know 😉) It solves a minor inconvenience where Macs with case-insensitive filesystems would mark the medipack submodule as unclean because two filenames just differ just in their case [see here](https://github.com/SciCompKL/MediPack/pull/3). Building on my machine was without problems and if the regression test would run here I see no issue. I can also add the commit but didnt want to sneak into your PR without asking ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1096#issuecomment-716442866:383,test,test,383,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096#issuecomment-716442866,1,['test'],['test']
Testability,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630788337:629,log,logic,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337,2,['log'],['logic']
Testability,"Hi @patelha57 , yes I meant those functions. I could not find them because I did a fast ctrl+f search in the files and it did not work because of the renaming. I should have read more carefully. I think it would have been better to keep the old names, as renaming tends to create small issues here and there. However, I see that you fixed that almost everywhere, also in the python test cases. Thank you!; Probably only the fsi_interface and fsi_computation files are missing",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1354484568:382,test,test,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1354484568,1,['test'],['test']
Testability,"Hi @pcarruscag , All. I have done a test case for NACA 0012 airfoil at Mach 0.01 to check the effectiveness of hybrid jacobians (as requested by me earlier).; There are some interesting observations. Check out the attachment.; [Low_Speed_test.pdf](https://github.com/su2code/SU2/files/3303753/Low_Speed_test.pdf); [cfg_files.zip](https://github.com/su2code/SU2/files/3303763/cfg_files.zip); (cases ran on 2 cores); Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-503345696:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-503345696,1,['test'],['test']
Testability,"Hi @pcarruscag , I notice that I get very slightly different residuals for the parallel regression running with 2 cores on my laptop vs in the Github regression test. @WallyMaier said this might be due to difference in partitioning, should I just use the residual values from the Github regression so the test passes, or are there other checks I should run?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-977172205:161,test,test,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-977172205,2,['test'],['test']
Testability,"Hi @pcarruscag , Thank you so much for your comments. I went to some of the test cases that are failing and I noticed that some residuals are very different because they are being compared at 5 - 10 or 20 iterations but if I compare them after 100 iterations they are very similar. I have run the NICFD_nozzle in the tutorial test cases and I got the following results:; ![residuals](https://user-images.githubusercontent.com/98025159/201385162-012ecd14-209d-4d0a-b78d-ba964673fbff.JPG); solid-line: develop; dash-line: proposed BC_INLET; Also I got the same results in both cases:; ![results_NICFD](https://user-images.githubusercontent.com/98025159/201385395-bacd5b87-9ad1-42f6-8837-1420c396e92a.png). I also run the turb_flatplate_sst.cfg test case in the vandv folder and I got the same residuals and the same solution. I read in the pull request of @bigfooted that he experienced the same issues with the test cases with the restart option. So I am not sure if the other test cases are failing for similar reasons. Do you have some insight about this? ; Thank you so much in advance :) .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796#issuecomment-1311924496:76,test,test,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796#issuecomment-1311924496,5,['test'],['test']
Testability,"Hi @pcarruscag ,. Sorry for the late response. . I went through all your implementation and performed some tests. . Although, I didn't see an improvement using the accurate jacobians in the subsonic test cases, as already mentioned here, and even in the transonic OneraM6 case from the repo. This implementation is very clean and in my opinion is a great improvement. . I hope that in other cases, the use of accurate jacobian will have a positive effect in the convergence. The only thing that I would like to bring is that in the future, you open a PR from su2 repo instead from your personal account. It is easier for the reviewers to compile and test. I will wait Travis pass to merge this PR. Thanks again. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-511142563:107,test,tests,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-511142563,3,['test'],"['test', 'tests']"
Testability,"Hi @pcarruscag ,. Yes, I am still tweaking parameters while we are participating on the AIAA-HLPW. But I agree with you that we need to merge asap even if we do an update after the workshop. Let me fix the compilation and add a regression test case. I probably will need your help with the AD part. Thanks.; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1120#issuecomment-781530053:239,test,test,239,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120#issuecomment-781530053,1,['test'],['test']
Testability,"Hi @pcarruscag ; I am also running a couple of test cases, mainly the RANS NASA Hump. Do you think it is a good idea to add since we don't have any test case covering the low Mach Roe implementation? If so, I am happy to add.; Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-507808462:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-507808462,2,['test'],['test']
Testability,"Hi @pcarruscag I think we're at a place in this PR where we can ask for a code review. In particular, I'm wondering if there is a way to reduce the code complexity in the ComputeCollisionDelta() function. Moving this to its own function reduced repeated code (which was called for each GY transport model) but now I've still got some repeated code and cumbersome logic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630:363,log,logic,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630,1,['log'],['logic']
Testability,"Hi @pcarruscag and @joshkellyjak, the parallel and serial regression tests are successful, but the tsan tests keep failing.; Josh suggested it could be related to the submodules, which I managed to update locally. Though I can't find a way to push it to the fork. ; Do you guys have any suggestion?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999175760:69,test,tests,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999175760,2,['test'],['tests']
Testability,"Hi @pcarruscag and @vdweide ,. Thanks for creating a test branch and for bringing this discussion. When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2. ; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. ; I will be happy to help test Eigen and see if it is a good candidate. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460479862:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460479862,4,['test'],['test']
Testability,"Hi @pcarruscag, it sounds strange this error since before opening the PR I ran the same tests on my repository and it compliled correctly. Here you can have a look at it [https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true](https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true) . I will let you know if I find a solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-938505427:88,test,tests,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938505427,1,['test'],['tests']
Testability,"Hi @pcarruscag, thank you for the development. I am testing it right now, I already noticed the struggle to converge the linear system. I lowered the CFL and relaxed the tolerance to 0.1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279:52,test,testing,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279,1,['test'],['testing']
Testability,"Hi @pcarruscag,; thanks for adding the test case. This LGTM, from my side is ready. Let's allow as common practice some 24 h to see if anyone has additional comments, then we can merge it in.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-498316703:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-498316703,1,['test'],['test']
Testability,"Hi @rsanfer and @TobiKattmann , I agree with the more generalised solution for rigid and deforming meshes too and this is excellent timing of #760 to combine the new approach. ; I have FSI cases I can use, but thought it would be a good stepping stone to use fluid-only case to begin with to avoid the coupling terms for this verification. Using dynamic surface movement definitions for the single-zone pitching airfoil test which has previously been used for rigid motion, the primal solutions and gradients from finite differences for both are very similar as expected. Therefore this should be a good reference to check the discrete adjoints for deforming mesh when the adaptations for grid velocities are made using #760.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524565760:420,test,test,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524565760,1,['test'],['test']
Testability,"Hi @rsanfer,; Regarding patterns, larger cases are more likely to have the issue than small ones, I did not test boundary conditions.; I have not tested the forward mode because it differentiates linear solvers and in the past I have found that to be very limiting so I'd rather not go there. The most detailed verification we have is that present by @cvencro at scitech (finite differences). @cvencro do you have any before/after cases where this problem showed?; On the recording of variables, I like the FEM_VARIABLES as a convergence monitor. But for larger sets of variables, e.g. grid nodes, topology, a ""post processing"" recording step makes sense, that increase in memory footprint is why I have not created a PR for FSI shape derivatives yet. I talked about this briefly with @oleburghardt during the annual meeting and the new adjoint driver should have hooks for this type of post processing.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-455994325:108,test,test,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-455994325,2,['test'],"['test', 'tested']"
Testability,"Hi @sun5k ,. I am also working on the implementation of this transition model within SU2. . In order to verify the code, I am running simulations on the E387 profile (taken from DOI:10.1177/0954406217743537) and on the Flat Plate test cases (taken from DOI: 10.2514/1.42362). . While for the E387 profile the results are similar (although not really convincing yet), for the flat plate (NASA 2DZP) the transition occurs right at the leading edge. Could you please share the config files that you have used?. I also noted a couple of inaccuracies within your implementation (by inspection of the ""Files changed"" section), maybe we can have a talk to discuss about it. Thank you in advance.; Best regards,; Andrea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1105521136:230,test,test,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1105521136,1,['test'],['test']
Testability,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-566642727:404,test,test,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727,2,['test'],['test']
Testability,"Hi @usbrem : thanks for making us aware of the issue. If you have some time, would you consider submitting a pull request with these changes, since you can test locally very easily? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046#issuecomment-657104021:156,test,test,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046#issuecomment-657104021,1,['test'],['test']
Testability,"Hi @vdweide,. Thank you for testing this out.; I had a look at the code and I think the overhead may be partly due to the multiplication function being compiled in one library and used in another. Which leaves little chance for some boiler plate code in the Eigen::Map class to be optimized way. If you share the test case and it fits in 16GB of ram I am happy to hack a bit and try to get those 10%.; As for Eigen beating MKL, like I said I never thought that would be the case, but out of curiosity what is the typical size of the matrices in the DG solver?. Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462083402:28,test,testing,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462083402,2,['test'],"['test', 'testing']"
Testability,"Hi Akshay,. Yes this is a simple fix and it could go in quickly on it's own or as part of another PR. I have this fix already modified in the draft PR #833 which is just pending the addition of a test case. I can add that and move to a PR soon if you are happy to wait?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860#issuecomment-582340873:196,test,test,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/860#issuecomment-582340873,2,['test'],['test']
Testability,"Hi Ale, can you add the mesh (from the workshop I presume) to the Testcases repo with a restart file and then use that to run a coupled iterations for regression testing? We may need to wait for the turbo outputs PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1792490251:66,Test,Testcases,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1792490251,2,"['Test', 'test']","['Testcases', 'testing']"
Testability,"Hi All; I’m a bit worried about the logistics related to checking this v&v data base for every new release.; Unlike the tutorials, these cases, by their nature will be large and will require long integrations(the 2D cases might not fall on this category). This means also that significant computational resources will be required for this evaluation (about twice a year for a growing list of cases). Is it practical?; The only way that I think that it might work is that each contributor will be responsible for checking the casesthat he has introduced, before each release. Being a voluntary institution, this can not be enforced (and we do not want to enforce). How about trying to be less demanding:; In each validation case there will be a statement about the last version that it was checked with and the responsible contributor. Each contributor will receive a recommendation to check his cases before a new release, and will be able to do that and update the OK label also after the release.; Less waterproof but might be more workable.; What do you think?; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423273117:36,log,logistics,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423273117,1,['log'],['logistics']
Testability,"Hi Amit, to further the discussion, I am running a sharp cone axisymmetric (or at least testing it). It makes me wonder if the issue only appears where the axis of rotation is perpendicular with a wall. Also, the axisymmetric boundaries havent been formulated for NS sims yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-698126330:88,test,testing,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-698126330,1,['test'],['testing']
Testability,"Hi Amit,; Thank you for testing the feature on those cases, I would never have guessed the convergence rate could be higher with Roe Jacobians. I got curious and played with the case too, I tried reducing the finite difference step and changing linear solvers but it made no difference.; It is especially intriguing that for two of the schemes Roe needs CFL of 0.01 (at which point it would possibly better to use explicit RK) and for the other two schemes of the same family the sky is the limit. I guess one of the conclusions is that it is good to have options.; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-503725906:24,test,testing,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-503725906,1,['test'],['testing']
Testability,"Hi Amit,; That is also my intuition, I guess the only way to know if it is worth the extra cost is by doing.; Do you have a good supersonic case I can use for testing (all my work is subsonic)? Preferably something that converges well without initialization.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499876619:159,test,testing,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499876619,2,['test'],['testing']
Testability,"Hi Antonio, it looks fine to me.; I'll run some extra test I have on my local server just to be sure everything work also for the conservative sliding mesh approach. Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-283721722:54,test,test,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-283721722,1,['test'],['test']
Testability,"Hi Brain. One quick question. I have noticed that you have set ADAP_NORM to 1 (Lp=1) in one example for Euler solution. I am using original PYAMG examples and changing "" remesh_options['Lp'] "" does not alter the adapted mesh. The log file always saying LP=2 . Are you using a different PYAMG version? . Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-650061484:230,log,log,230,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-650061484,1,['log'],['log']
Testability,"Hi Daniel! Thanks again to you and Ben for working on this new feature... it is going to be a nice contribution to the code. The code looks good to me, but there is an issue with the automatic differentiation build. It is an easy fix though: please change your ""double"" declarations to ""su2double"" in the commits. We use ""su2double"" everywhere in the code so that it is straightforward to specialize the variable types at compile time, which is needed by the AD tool. Once the tests pass, we'll pull this in right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-164091519:477,test,tests,477,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-164091519,1,['test'],['tests']
Testability,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:1343,Test,TestCases,1343,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,1,['Test'],['TestCases']
Testability,"Hi Eduardo,; The channel 2D and supersonic vortex shedding cases are failing due to small changes in residuals, the operations in Roe were re-ordered a bit, and these cases run for many iterations, I am guessing it is just due to numerical precision. But I will have a look before updating the residuals.; The rotating cylinders case is the infamous one that appears to be sensitive to minute, and seemingly insignificant, changes as reported in #700, at the reference residuals the case is actually diverged.; Finally there is an AD case using JST that also fails because it is a file diff and we output 15 significant digits to that file. The change is due to the refactoring of central schemes that required changing the order in which variables are registered for pre-accumulation.; I do appreciate you taking the time to review this PR, especially since you are ""first author"" of the low Mach Roe schemes and there are no regressions for them, nevertheless I tested them before and after and it seems I did not break anything.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-506526475:964,test,tested,964,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-506526475,1,['test'],['tested']
Testability,"Hi Edwin,. This a very valuable information. We need to update SU2 . Arne, are you interested in implementing and testing these changes in your pull request?. Otherwise, we can create a new pull request. Thanks!; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-323366526:114,test,testing,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-323366526,1,['test'],['testing']
Testability,"Hi Eran, please see #898, a few of us still keep the old build system up to date, but because it is not under testing it is often broken. If this is critical to you I recommend checking which PR's introduce changes to meson.build files and if so request corresponding changes to the MakeFiles.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598352171:110,test,testing,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598352171,1,['test'],['testing']
Testability,"Hi Florian, I was also working on the same thing (feature_axi). I was unable to find a suitable case to test, and it seems we went about it in different ways. Im happy you got something working! Could you pass along the literature you used to create these terms?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713166220:104,test,test,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713166220,1,['test'],['test']
Testability,"Hi Florian,; You can have a look in CDriver.cpp around line 1850, the logic is mutually exclusive, so if multiple sources are specified the order does not matter, the way things are coded determines which source is used. (I hope somewhere in CConfig we check for conflicting sources).; Note that the first term / second term is per solver, so there is actually a lot of room for different sources. Regarding 2 there are more knowledgeable people about those topics out there than me. Maybe you can join the developers meeting tomorrow at 3pm CET (https://meet.jit.si/SU2_DevMeeting) and you can ask those questions to e.g. @economon or @TobiKattmann",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-721138506:70,log,logic,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721138506,1,['log'],['logic']
Testability,"Hi Francisco,. I'll try to find a solution for this. Unfortunately, we don't have a Mac here to test this, but maybe we can reproduce this error using clang.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-254137783:96,test,test,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-254137783,1,['test'],['test']
Testability,"Hi Giulio,. Yes, those values are correct. I also get similar numbers for the other laminar cylinder test case without the low Mach correction and using the Roe solver. You're right they are weird though, it's because the fluid properties are those of air at 288.15 K so to get the low Reynolds number the density must be very low (correct me if I'm wrong!). Perhaps the fluid properties of honey would be more realistic for this case. Regards,; Daniel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-181641307:101,test,test,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-181641307,1,['test'],['test']
Testability,"Hi Giulio,. thanks a lot for your contribution, it looks very nice. . I just saw your reply to my comment below, I really appreciate if you don't mind giving me a bit more time before merging in. I was working on different developments and have a couple of deadlines coming up so I am a bit behind myself in merging with develop. . I'll try to review this as soon as I can, though. A couple of comments after I skipped through quickly:; - I have seen that in some cases there are a lot of lines that are removed and added just because of changes in the indentation. See, e.g., CIsoparametric::Set_TransferCoeff(CConfig **config, in which I saw two large blocks that have not changes but the indentation goes from spaces to tabs. This has caused some issues in the past, would you mind to take a look at it?; - About the change of name from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE. Can we hold this discussion for the future so we can give it a second thought? I think it may be important to maintain the difference between interfaces with different physics and interfaces that connect the same physics.; - I had here written a question of to what extent is the change in the physical time step iteration affecting the driver and the iteration classes. I completely understand your logic for fluid-fluid problems of transferring information at pseudo-time steps, but as I said in FSI problems this would not be adequate. I also added steady-state FSI into a separate branch, so I will take a look at potential conflicts. Thanks again for this great contribution! I'll get into this and get back to you as soon as possible!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256047684:1287,log,logic,1287,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256047684,1,['log'],['logic']
Testability,Hi Heather!; Residuals in regression tests are ok but something goes wrong during the merge of the solution for the parallel fsi2d test case (could it be related to recent changes in SU2_SOL.cpp?),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-251897883:37,test,tests,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-251897883,2,['test'],"['test', 'tests']"
Testability,"Hi Heather, I created a branch fix_parallelFSIsol to address this issue. I had a very quick look at it and it seems to be fine now. Let me know what you think about it.; https://travis-ci.org/su2code/SU2/jobs/166032087. I can have, however, a better look next week. I agree, we need something to test similar errors but also issues related to output files. . PS; @rsanfer in the develop, from last merge, in SU2_SOL there is the GetnZone method from CConfig. Can that be useful for the multizone FSI as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252423952:296,test,test,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252423952,1,['test'],['test']
Testability,"Hi Heather,. This is a very interesting contribution. Just one question, Does multi objective include multi point optimization? Could you please give us an example of the particular application that you have in mind? . Thanks,; Francisco. > On Feb 9, 2016, at 11:24 AM, Heather Kline notifications@github.com wrote:; > ; > This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:586,test,tests,586,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,1,['test'],['tests']
Testability,"Hi Jayant; Thanks for being so prompt and fast in handling this very important issue.; I’m currently in vacation at Scotland so I’ll be brief and just add few; comments:; a. As you wrote, validation is very different from test cases. Mesh,; configuration and solutions should be optimized for accuracy, experiment; reproduction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familia",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:222,test,test,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['test'],['test']
Testability,"Hi Josef,. This is an important issue that we need to solve, I going to double check; the problem and I'll keep you posted. Thanks for your interest in SU2,; Best,; Francisco. On Mon, Dec 19, 2016 at 5:44 AM, jschuele <notifications@github.com> wrote:. > Fetched developed branch and ran serial_regression.py. Got case FAILED; > with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; > With INTEL compiler on same platform get passed for ls89_sa,; > centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are; > the differences for naca0012_def and most of the brick-tests with intel.; > They converge in significant fewer steps and are marked FAILED.; > Is it worthwhile to investigate the differences between GCC and Intel for; > the brick-cases?; > I'am asking, because I'm gone look to fasten calculations up with; > optimizations in the existing code for single core and perhaps MPI. Far; > goal, but really far, may be using GPUs as well. Currently I have a 15%; > improvement single core for RANS from the Comp&Fluids_129 paper. But of; > course the calculations should not only be faster but correct as well.; > Regards, Josef; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/347>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AEpklloul4VIZDvBs74KUwxxmcGMoBWDks5rJopSgaJpZM4LQvRv>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-270770408:590,test,tests,590,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-270770408,1,['test'],['tests']
Testability,"Hi Josip,. in the current develop/master these features are still included. However, the plan is to remove these. The reason is simply because of maintenance. We have nobody that can spare time to test the current implementation. If you are willing to do this, please let use know. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/348#issuecomment-268010192:197,test,test,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/348#issuecomment-268010192,2,['test'],['test']
Testability,"Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-701523230:50,test,testcase,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-701523230,2,['test'],['testcase']
Testability,"Hi Lorena,. Sorry for the delay getting back to you. You are right, and the TestCases repository is starting to be huge, mainly because of the stuff that GitHub generates to track the files. Easy to maintain/access alternatives are very welcome. Some releases ago, the grids were in another place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your confi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:76,Test,TestCases,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,3,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Hi Monika,. We are in the V&V process of a new wall model LES implementation. Also, I took the opportunity to start fixing the RANS wall function since it will share the same code structure with the WMLES part, i.e. replace the wall shear stress in the NS fluxes. . We didn’t extensively test the RANS wall functions, only very limited test cases. It will be great if you could run your own cases using the following branch: . https://github.com/su2code/SU2/tree/feature_WallModelLES <https://github.com/su2code/SU2/tree/feature_WallModelLES>. Please let me know if you need additional help and looking forward to hear from you. Best,. Eduardo. > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > ; > ; > Sure Juan! I would like to. Because I was running on RANS but I am working; > on LES to make this wall functions work which is not working either.; > Please let us know how we can support and work to get this working for LES; > simulation (wall models in SU2).; > ; > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; > wrote:; > ; > > Monika,; > >; > > There is a chance we could work together on this…Eduardo Molina (copied); > > co-advised a short project last year on wall functions which made some; > > progress but did not finalize an implementation. It may be a better; > > starting point. Eduardo, can you comment where that code went?; > >; > > I am also copying Matt S. who is interested in wall function; > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > these working in the baseline state…and then improve them in various ways?; > >; > > Best,; > >; > > Juan; > >; > >; > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > wrote:; > > >; > > >; > > > Sure, now make sense why it is showing issues, Thank you for the; > > > confirmation!; > > >; > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > > wrote:; > > >; > > > > I gave the wall funct",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635018259:288,test,test,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635018259,2,['test'],['test']
Testability,"Hi Pedro, ; The following two configs are for a sinus motion using an elastic mesh in combination with farfield or rotating frame. ; Previous results: Looking at the CL, there used to be a difference of about 10%.; Current Results: Good agreement with only a small difference. Side note: Although the Naca0009 is a symmetric airfoil, my mesh appears to be not perfectly symmetric, resulting in non-zero lift at alpha=0.0 deg. I didn't look into this any further as the mesh is only a quick test case and symmetry probably not important for our problem. . [NACA0009_elastic.zip](https://github.com/su2code/SU2/files/11123420/NACA0009_elastic.zip); [NACA0009.zip](https://github.com/su2code/SU2/files/11123471/NACA0009.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1492161895:490,test,test,490,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1492161895,1,['test'],['test']
Testability,"Hi Pedro, I added the regresion tests, and mesh and restart to the `Testcases` repo (for which I opened a pull request)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1795006762:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1795006762,2,"['Test', 'test']","['Testcases', 'tests']"
Testability,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:83,log,logic,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705,3,"['log', 'test']","['logic', 'tests']"
Testability,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:379,test,test,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325,2,['test'],['test']
Testability,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:264,log,logic,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992,4,"['log', 'test']","['logic', 'test']"
Testability,"Hi Pedro, thanks for updating the regression test and all the tidy up as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-821894824:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-821894824,1,['test'],['test']
Testability,"Hi Pedro,. Do you know why this PR is failing during Travis? I looked at the test cases and both are unsteady using Roe? ; BTW, I will be happy to review this PR.; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-506519519:77,test,test,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-506519519,1,['test'],['test']
Testability,"Hi Pedro,. I can confirm that everything is now working correctly. I have tested the sensitivities against gradients from finite difference runs and the results match very closely.; I owe you a big thank you for your help with this, not only has my problem been solved but you also helped me learn a great deal about how the code works. Really appreciate it.; If we ever meet one day then drinks are on me :); Cheers,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-500911599:74,test,tested,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-500911599,2,['test'],['tested']
Testability,"Hi Pedro,. SU2 Testcase repo has 3 supersonic TestCases under euler folder (wedge, biparabolic and bluntbody), they all go well without initialization (you may be already aware of these euler cases). But I do not have any specific supersonic case for RANS or Laminar flow problems (some of them ideally be like nozzle flow or SHOCK-BL interaction).; May be need to have a look at NASA CFD site for validation and verification cases. Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500152158:15,Test,Testcase,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500152158,2,['Test'],"['TestCases', 'Testcase']"
Testability,"Hi Pedro,; thanks for cleaning up Joel's code and creating the pull request. The disc_adj_fsi testcase is failing, I believe because of the relaxation. Probably you need to update the value of the test_case config and set the relaxation to 1.0 to recover the previous test. ; About the symmetric matrix class: Joel's implementation was indeed intended to populate the matrix needed for the RBF; the CSysMatrix would not be able to accommodate some terms due to the sparsity. It's well explained in the comments. Also, his implementation was only single-core. I agree that it would be very interesting to have some methods such as the cholesky decomposition available, but I think they would require some reworking (at least for parallelization).; I think this is a very valuable contribution, so it would be good to get more people on board to push it forward.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406847760:94,test,testcase,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406847760,2,['test'],"['test', 'testcase']"
Testability,"Hi Rocco, . My approach to test with both boundary conditions was rather crude. I just pasted back the Euler wall BC that was removed in #740 . You can see what I did if you look at the change to solver_direct_mean.cpp as part of the draft PR #833 . While debugging, it is easy to rebuild the code with true/false if statement as needed to swap between the two boundary conditions. Thanks for the 2D case with no grid motion comparison you’ve run. The two boundary conditions do seem to give the same result in this case and helps narrow down the search. However, I don’t think the differences are restricted only to 3D cases because with either non-zero rigid motion grid movement or deforming mesh, there are still differences in the 2D solution. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563292392:27,test,test,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563292392,1,['test'],['test']
Testability,"Hi Rocco,; I used this mesh `<Testcases>/control_surface/mesh_ONERAM6_inv.su2` and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). Can you shed some light on this?. Will the airfoil emit some vortex-shedding (or other unsteadiness) or will this converge in time to a steady-state solution? I am asking because I would like to see some longer running results until e.g. steady state, cylic shedding or maybe we'll see some chaotic behaviour in lift and drag. The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh . In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔 . Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0..; And `both versions are/were on the develop branches` -> what exactly do you refer to here: config-files, code, mesh. Cheers 🐌 ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559756575:30,Test,Testcases,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559756575,1,['Test'],['Testcases']
Testability,"Hi Ruben,; Thanks for the tip it is passing the test now.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406877331:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406877331,1,['test'],['test']
Testability,"Hi Steve,. I think that all your contributions are very interesting, so please feel free to create a pull request. Only one comment, please be sure that you pull to the develop branch (not the master). We only use the master branch for releasing the code. Thanks again!. Best; Francisco. On Jan 11, 2015, at 7:34 AM, Steven Endres notifications@github.com wrote:. > By the way, I have another set up updates for you guys to consider that are ; > beyond the scope of this pull request. Let me know if you are waiting on me ; > to close the pull request or if you can do that. ; > ; > I put the recommended changes for the structure of config.py file in a gist ; > https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the ; > low level config errors validation. I also created a few unit test cases to ; > allow a controlled build up of regex checks without risk of breaking ; > previous bug fixes. ; > ; > Let me know ; > ; > Steve ; > ; > On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote: ; > ; > > thanks for the commands ; > > ; > > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com ; > > ; > > > wrote: ; > > > ; > > > so now the file is being committed as deleted... please roll back to this ; > > > commit ; > > > spendres@6cbddbe ; > > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > ; > > > here are the commands you can use -- ; > > > Reset the index to the desired tree ; > > > ; > > > git reset 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > Move the branch pointer back to the previous HEAD ; > > > ; > > > git reset --soft HEAD@{1} ; > > > ; > > > git commit -m ""Revert to 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > "" ; > > > Update working copy to reflect the new commit ; > > > ; > > > git reset --hard ; > > > ; > > > — ; > > > Reply to this email directly or vie",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69612161:802,test,test,802,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69612161,1,['test'],['test']
Testability,"Hi Suman,; Regarding your config file: first you have to specify the turbulence model you would like to use (your config reads NONE right now), secondly you have to add the parameters for the computation of turbulent fluxes.; In this latter case I suggest you to have a look at one of the test cases in the ""rans"" folder.; This made your case working on my laptop, if you encounter any other issue don't hesitate to ask me. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/401#issuecomment-308375305:289,test,test,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/401#issuecomment-308375305,1,['test'],['test']
Testability,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1062,test,testcase,1062,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577,3,"['Test', 'test']","['Test-Driven-Development', 'testcase']"
Testability,"Hi Tim and Ole,. First of all thanks for you great support! I noticed that the convergence of the compressible case was more difficult to obtain, compared to the incompressible case. After fixing this convergence I changed the scale factor for the incompressible and compressible case. I tested the scales 1e-6 up to 10 and 5e-6 up to 5, with a step size of 10. In this reply I posted the results of scale = 0.01, which is behaving properly for the compressible case (Scale 1 of compressible and the test cases of incompressible are not working as expected). During these tests I kept an eye on the surface_adjoint files and in contrary as what Ole expected; the compressible gives a more wavy result. However the deviation of the sens_adjoint of incompressible is huge compare to the compressible case. ![image](https://user-images.githubusercontent.com/21182966/28306613-4425789c-6ba0-11e7-8337-41a99e15ebd2.png). So if I am understanding correctly, in order to determine the sensitivity an initial deviation of the control points has to be set to determine the (dx/dC)-term. In which 'x' indicates discrete points and 'C' control points. . ![image](https://latex.codecogs.com/gif.latex?%5Cfrac%7B%5Cpartial%20J%7D%7B%5Cpartial%20%5Cvec%7BC%7D%7D%20%3D%20%5Cfrac%7B%5Cpartial%20%5Cvec%7Bx%7D%7D%7B%5Cpartial%20%5Cvec%7BC%7D%7D%5Ccdot%20%5Cfrac%7B%5Cpartial%20J%7D%7B%5Cpartial%20%5Cvec%7Bx%7D%7D). Tim do you mean with the current step size the step of dC ? Because the step of the discrete point is set on 0.001 (of_grad_cd.vtk). If you mean the control point step, then there should be a parameterization step in between as well in order to know the influence of dC to dx. This should give a difference in sensitivity results, however the sensitivities of the case of scale = 0.01 and of the case scale =1 are exactly the same (for the compressible and incompressible case). The values below are gradients of the file of_grad_cd.vtk from the compressible case. ![image](https://user-images.githubu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:288,test,tested,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,6,['test'],"['test', 'tested', 'tests']"
Testability,"Hi Tim, I just created a branch feature_agglomeration_bugfix.; I'll make some more tests and submit a pull request later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/276#issuecomment-252834092:83,test,tests,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/276#issuecomment-252834092,1,['test'],['tests']
Testability,"Hi Tim, this sounds great, I agree we should get this merged as soon as possible.; I made some extra test and everything looks good to me. So far I didn't see any conflict with what I'm working on right now. ; Lets wait for some other review but on my side I'd say we can go ahead with this PR. ciao!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-262198303:101,test,test,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-262198303,1,['test'],['test']
Testability,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:1284,test,tests,1284,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,2,['test'],['tests']
Testability,"Hi Tim,; thanks, this is really useful. Let's wait until the test cases finish, but I agree, we should get this in sooner than later. The regression test issue is slowing us all down, definitely something to get fixed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480#issuecomment-347835808:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/480#issuecomment-347835808,2,['test'],['test']
Testability,"Hi Tim; Thanks for taking action on this - some folks on the forum had noticed related issues with one of the tutorials, and I agree, that either all the geometric functions should be on that list, or none of them.; From what I can tell, SU2_GEO appears not to use the objective_function option at all. One potential solution would be to get the python scripts to set some default value to objective_function for all the geometric functions. Unfortunately I don't have the time to test that out fully right now, do you have the time to look into that?. The tutorial that was having issues was ""Constrained Optimal Shape Design of a Fixed Wing"".",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352#issuecomment-271168490:481,test,test,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/352#issuecomment-271168490,1,['test'],['test']
Testability,"Hi Tobi, Well the thing is that currently we do not have sst1994 nor sst2003. We can implement both version and make one of them the default but in any case it means that the regression tests have to be recalibrated. And if you want to update 'everything' then we also need to redo the V&V cases and make the plots again - preferably with something in place that will auto-create these plots when something changes in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618:186,test,tests,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618,1,['test'],['tests']
Testability,"Hi Tobi,. Great to see the same dynamic behaviour from both boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynami",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:127,test,tested,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,2,['test'],"['tested', 'tests']"
Testability,"Hi Tobi,. I ran some tests using the latest code in develop, as of Friday 6th December, but swapping between the symmetry plane boundary condition and the previous Euler wall boundary condition. Results are below, where firstly the steady results were very similar as Rocco mentioned. In time-domain, they look to converge to similar values but the difference in transient behaviour can be seen. The solutions were converged by about 8 orders of magnitude at each time step for both cases. I reran the current develop code with symmetry boundary condition forcing all the way to residual stalling as suggested for a few hundred time steps but I think the case was pretty well converged already and there is no difference with increased convergence. ![image](https://user-images.githubusercontent.com/33747655/70387595-e5412380-199e-11ea-96d2-f7ee447a8131.png); ![image](https://user-images.githubusercontent.com/33747655/70387599-effbb880-199e-11ea-81f4-5fd37ae9ebd8.png). Although it is good that the converged behaviour is similar for both boundary conditions, the difference in transient behaviour will have a large effect for coupled unsteady problems. . About the dynamic grid, the reason I spotted this was because the gradient verification against rigid motion with symmetry plane boundary condition was good but not as good as the gradient verification with Euler wall boundary condition (as well as having slightly different inherent sensitivity magnitudes between the two boundary conditions caused by the difference in transient behaviour). Therefore, this is perhaps missing something as I would have expected to see the same level of agreement in the sensitivities for the symmetry plane boundary condition as is seen for the Euler wall. I’ve added the results using both boundary conditions for a pitching airfoil case using efficiency as the objective function and FFD control points as the design variables. The differences are seen at the trailing edge (points 10, 11, 21, 22). ![imag",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562931249:21,test,tests,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562931249,1,['test'],['tests']
Testability,"Hi Tom, ; I just updated residual values, everything looks good to me and the code is working as I expect also in a few more tests I made.; Let me know if you think something needs to be changed in the code (more comments or whatever). cheers,; G",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/243#issuecomment-190123624:125,test,tests,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/243#issuecomment-190123624,1,['test'],['tests']
Testability,"Hi Tom,. I just have the mesh for the LS89 test case in the NICFD folder.; (Apparently, I had to change the extension to attach the file here but just revert it to .su2).; Let me know. Giulio. [mesh_vki_turbine_prepbc.txt](https://github.com/su2code/SU2/files/2871791/mesh_vki_turbine_prepbc.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464328382:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464328382,1,['test'],['test']
Testability,"Hi Tom,; I've consulted with our main TecIO developer, Dave Taflin, and the two of us are having a hard time finding the problem. There are a bunch of compile warnings in TecIO, but none of them look like they would cause the linker error. The actual error seems to be in the link of SU2, not the TecIO library. Could it be something I changed in the config stuff (configure.ac, m4/tecio.m4, or Makefile.am)?; Is it possible to get a more verbose error report for the linker?; Thanks!Scott Imlay; On Sunday, August 19, 2018, 2:44:12 PM PDT, Thomas D. Economon <notifications@github.com> wrote: ; ; ; It looks like our regression tests are failing during the compilation of TecIO on the Travis system (they use pretty standard Ubuntu builds). @ScottImlay: could you please take a look at the build errors when you have some time?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-414463979:629,test,tests,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-414463979,1,['test'],['tests']
Testability,"Hi again,. I am using the the Inviscid Bump in a Channel tutorial as a test case by changing the outlet boundary condition to Marker_Engine_Inflow. However, the boundary condition is still seems unstable even with very low damping values. It seems that the evaluation frequency of the marker's properties is tied to the screen write frequency through the following line:. bool Evaluate_BC = ((((config->GetInnerIter() % (config->GetScreen_Wrt_Freq(2)*40)) == 0)) || (config->GetInnerIter() == 1) || (config->GetDiscrete_Adjoint()));. which makes the minimum evaluation frequency 40. I believe 40 iteration seems to be too high, at least for this case. I have since added a new option to the code to control the evaluation frequency. I been experimenting with the evaluation frequency and the damping factor to get the marker to converge on the Mach Number on some of the cases. I will test this on larger case next week and i can get back to you on how those go as well. Finally, I am a bit of a novice and it is my first time ever using something like git. I have already created a fork of the master branch. Do i just make pull request to submit my changes or is there something else I should do?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274#issuecomment-2102637760:71,test,test,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274#issuecomment-2102637760,2,['test'],['test']
Testability,"Hi again,. Ok great, thank you for your answer! Based on a quick test, branch feature_polytropicGas seems to work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/398#issuecomment-306475609:65,test,test,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/398#issuecomment-306475609,1,['test'],['test']
Testability,"Hi all. May I just add to Edwin comment: some of you have seen the tests that I; made with SUmb (structured mesh code) using the adaptive WF: Results using; the JST scheme were definitely off, while upwind +WF converged reasonably; to wall-resolved results. Naturally this conclusion is strongly coupled; with the specific discretization and implementation so it might not apply; to a SU2 implementation. I suggest to keep working on the Carlson; formulation (due to FUN3D-SU2 similarities mentioned above) and hopefully; extend it to adaptive WF as a second step.; I'll be happy to be on board of his effort.; Best regards,; Eran. On Fri, Jun 9, 2017 at 7:49 AM, Edwin van der Weide <; notifications@github.com> wrote:. > Juan, all,; >; > The adaptive wall function formulation as described in the paper of Medic; > et al. has two serious issues. First, the convergence stalls after three; > orders of magnitude or so and second it only works with an upwind; > discretization of the inviscid fluxes. For some reason JST type of schemes; > gave rather poor results. In order to have a reliable implementation, both; > issues need to be addressed. Unfortunately, we never did.; >; > Edwin; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/399#issuecomment-307294686>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APKNmwNgNVmXDYW_tqtQzvpDvxGe4OeLks5sCM7ugaJpZM4NvG6w>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307303905:67,test,tests,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307303905,1,['test'],['tests']
Testability,"Hi everyone, . I am interested in this problem. Are there any news from your side @sun5k ? . I may try to help in running some test cases or changing the code if needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2244988261:127,test,test,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2244988261,1,['test'],['test']
Testability,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:71,test,test,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781,2,['test'],['test']
Testability,"Hi guys, ; sorry for re-opening this request, I have a brief question for you Daniel.; In the test case you added I see that there are some numbers that look weird to me (the free-stream pressure is 17 Pa and density is 0.00021). Since I modified the HLLC solver, which is used in this particular test case, I'm having troubles in passing this regression tests. Are those values correct? . Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-181467187:94,test,test,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-181467187,3,['test'],"['test', 'tests']"
Testability,"Hi guys, sorry to open up this thread again, but looks like something is going wrong in parallel_regression.py.; Residuals are ok, and that's why travis doesn't throw any error, but I see some errors in logs for parallel execution. Was this expected?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-261960965:203,log,logs,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-261960965,1,['log'],['logs']
Testability,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:763,Test,TestCases,763,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396,1,['Test'],['TestCases']
Testability,"Hi, @cjz667. When I tried lid driven cavity case with default setting and switching ROE to AUSMPLUSUP, I got the following error - Error in “void CSyssolve::ModGramSchmidt(int.........; SU2 has diverged (It ran for 2 iterations). Reduced the CFL to 0.5 (originally 2.0), it runs fine.; But it is going to take more number of iterations.; This issue was noted earlier as well and reason behind that is inconsistent Jacobian (Roe here) with AUSM family of schemes. This restricts the allowable CFL number to a lower values for these scehemes. For low speed flows u may have to use smaller value of CFL with these two schemes. . Dr. Padro (pcarruscage) has done some work in this direction and implemented hybrid Jacobian for some of these schemes (available in develop branch) , which improves this situation and u can try higher CFL. I have also worked out analytical Jacobian and will be pushing in future release. I hope you can go with reasonable CFL for majority of the other cases, where Mach number is not too small.; I have added one Testcase for high speed flow past blunt body in testcase folder /euler/bluntbody, which uses AUSMPLUSUP. Give a try with other cases, I have tried many in RANS, NS, EULER.; Hope this help. . Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-522656848:1040,Test,Testcase,1040,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-522656848,2,"['Test', 'test']","['Testcase', 'testcase']"
Testability,"Hi, I think it is because our vectorization wrapper does not support ARM yet.; This makes the default SIMD array type have only 1 element, so t[1] in that unit test does not exist basically, using t[0] should pass the test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559:160,test,test,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559,2,['test'],['test']
Testability,"Hi, I was about to open a pull request with the same exact implementation. I can help with the review and validation cases.; I am running test for an inviscid supersonic flow past a diamond airfoil and I am about to run some test on the RANS ONERA M6 wing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500021072:138,test,test,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500021072,2,['test'],['test']
Testability,"Hi, Komahan, ; I also noticed this error in fsi_computation.py. And this error was fixed by adding a periodic boundary condition. For example: ; Adding one line in parser part:; `parser.add_option(""--periodic"", dest=""periodic"", default=""False"", help=""Define whether the problem has periodic boundary conditions"", metavar=""PERIODIC""); `; And the Line 109 changes to; ` FluidSolver = pysu2.CFluidDriver(CFD_ConFile, 1, FSI_config['NDIM'], options.periodic, comm)`. However, when I want to run the basic fsi coupling of two-dimensional pitching-plunging NACA 0012 airfoil by using the 'TESTER' CSD Solver 'PitchPlungeAirfoilStructuralTester', another error occurs. If I run by typing:; `fsi_computation.py -f FSICoupler_config.cfg`; This gives the following error:; `***************************** Initializing fluid solver *****************************; ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError(""in method 'new_CFluidDriver', argument 5 of type 'SU2_Comm'"",)); ERROR : You are trying to launch a computation without initializing MPI but the wrapper has been built in parallel. Please add the --parallel option in order to initialize MPI for the wrapper.; `. If I run in parallel by typing:; 'fsi_computation.py -f FSICoupler_config.cfg --parallel'; This works without error but the program stops at Mapping fluid-solid interfaces; `***************************** Mapping fluid-solid interfaces *****************************; Building interpolation matrices...; `. Here I upload the config files and the mesh, hope someone can notice those bugs and help to solve. Best!. [2d_coupled_fsi.zip](https://github.com/su2code/SU2/files/3790605/2d_coupled_fsi.zip); includes:; FSICoupler_config.cfg, NACA0012RANS_FullHexa.su2, StructuralTester_config.cfg, SU2_config.cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/642#issuecomment-548054290:583,TEST,TESTER,583,https://su2code.github.io,https://github.com/su2code/SU2/issues/642#issuecomment-548054290,1,['TEST'],['TESTER']
Testability,"Hi, can you share the testcase? At least the config so we can try to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623634949:22,test,testcase,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623634949,1,['test'],['testcase']
Testability,"Hi, thanks a lot for contributing, this is a very interesting and useful implementation. . Unfortunately something strange has happened with the git diff tool and the merging is not possible... it seems that is trying to update the driver subroutine with an old version of SU2. I'm very sorry about this but, would you be so kind to reimplement the changes in a clean copy of the developer's branch? so... only the relevant changes of your implementation will be added to SU2?. Just to check that nobody if going to break your implementation. In this case, I think it is also important to add a regression test. Could you please add one example that travis can control?. Thanks a lot for your hard work!. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/443#issuecomment-331645981:606,test,test,606,https://su2code.github.io,https://github.com/su2code/SU2/pull/443#issuecomment-331645981,1,['test'],['test']
Testability,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:118,test,test,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024,2,['test'],['test']
Testability,"Hi,. I would like to test your improvements on a couple of different clusters. Could you please rebase once more on the latest commit in the develop branch? That way, we can run the regressions again to make sure everything is ok before merging. Any other volunteers in the community willing to run this request on clusters of their own to help verify that the Python framework functions well on a variety of platforms?. Thanks!; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-223806568:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-223806568,1,['test'],['test']
Testability,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1505,log,log,1505,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105,4,['log'],['log']
Testability,"Hi,. The structure of fsi_computation.py is completely different from the one of parallel_computation(_fsi).py, this one is just a script that, if I am right, will set for you the commands in order to launch SU2_CFD in parallel and SU2_SOL right after. It is based on system calls ( it is like calling mpirun -np xx SU2_CFD SU2conf.cfg and mpirun -np xx SU2_SOL SU2conf.cfg). The fsi_computation.py has to be considered as an executable, and thus has to be launched with the mpirun command for parallel run:. $ mpirun -np XX fsi_computation.py -f FSIConfig.cfg --parallel. You have to specify the FSI configuration file (see examples in TestCase) with -f, and the --parallel option is mandatory (only if SU2 has been built in parallel). XX is the number of procs. Hope this helps,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457#issuecomment-339026305:637,Test,TestCase,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/457#issuecomment-339026305,1,['Test'],['TestCase']
Testability,"Hi,. Unfortunately the logic is quite confuse but I think that part of the code is correct, SU2 just want to use an updated version of the limiter for the turbulence variables. ` if (config->GetSpatialOrder() == SECOND_ORDER_LIMITER) SetSolution_Limiter(geometry, config);; `; and for the flow variables. ` if (limiter_flow) solver_container[FLOW_SOL]->SetPrimitive_Limiter(geometry, config);; `. Another story is if that is really worth it and we should use the values from the previous iteration. Remember that we compute the turbulence variables after updating the flow variables... so... from the theoretical point of view it makes sense to have an updated value for the limiter. However this is not 100% accurate because we are using old gradients to compute the new limiter. Anyway, the spirit is to have a limiter computed using the latest flow variables value and we should probably check that the gradients have been also updated before computing limiters again for the turbulence equation. What I don't really like is Upwind_Residual. ` bool limiter = (config->GetSpatialOrder() == SECOND_ORDER_LIMITER);; `. in this case we are using only the info about limiters or not in the turbulence model... so if, for example, we are using JST for the mean flow equations then the limiter for the flow equations have never been computed and. ```; if (limiter) {; FlowPrimVar_i[iVar] = V_i[iVar] + Limiter_i[iVar]*Project_Grad_i;; FlowPrimVar_j[iVar] = V_j[iVar] + Limiter_j[iVar]*Project_Grad_j;; }. ``` . Is incorrect because Limiter_i has never been computed (if we are lucky maybe we are using a zero value by default... but we need to check). In other words, I think this require a deeper look. @jschuele, could you please think on this and submit a new pull request (I'll close this one). If you don't have time, please let me know and we really appreciate if you could add this situation as an Issue. We'll try to fix this problem as soon as possible. By the way the initial confusion was that ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-320490588:23,log,logic,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-320490588,1,['log'],['logic']
Testability,"Hi,. We have just updated (30min ago) the master branch of the SU2 and TestCases repositories. Could you please try again?. If you are using the develop branch, please remember that you should use the develop branch for the SU2 and TestCases repositories. Otherwise the options don’t match. Pleas let us know if it is working for you now. Best,; Francisco. On Feb 3, 2015, at 12:27 PM, Gil Forsyth notifications@github.com wrote:. > Just compiled today and it seems like the options CFL_ADAPT and CFL_ADAPT_PARAM have been deprecated?; > ; > Running the 2D inviscid cylinder and the euler channel flow example both throw an error; > ; > CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; > CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; > Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?); > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72729435:71,Test,TestCases,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72729435,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"Hi,. for my late answer.; i can't solve the problem yet. here is the meson-log.txt output:; Build started at 2021-04-17T15:34:44.243386; Main binary: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe; Build Options: -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing g",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:75,log,log,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['log'],['log']
Testability,"Hi,. here is the contents of config.log:. ```; This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by SU2 configure 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ ./configure --prefix=/gshare/work/hpascalj/CodeSU2-master --with-CGNS-lib=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib --with-CGNS-include=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = master; uname -m = x86_64; uname -r = 2.6.32-279.el6.x86_64; uname -s = Linux; uname -v = #1 SMP Wed Jun 13 18:24:36 EDT 2012. /usr/bin/uname -p = unknown; /bin/uname -X = unknown. /bin/arch = x86_64; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = unknown; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /gshare/soft/star-ccm+/STAR-View+9.02.007; PATH: /gshare/soft/star-ccm+/STAR-CCM+9.02.007/star/bin; PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:36,log,log,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['log'],['log']
Testability,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:96,log,logic,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867,1,['log'],['logic']
Testability,"Hi,; I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that. For reference I attach my config.log file. [config.log](https://github.com/su2code/SU2/files/3483335/config.log)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519654913:224,log,log,224,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519654913,3,['log'],['log']
Testability,"Hi,; I tried with SA instead of SA_NEG, I get the same behavior. I understand that I don't need to test the develop branch then. I am ok with some c++ dev but I am not an expert. How would you improve the current implementation?. Thanks,; Jean-François",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-990776364:99,test,test,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-990776364,1,['test'],['test']
Testability,"Hi,; I went through this work but it is a bit hard to me to completely follow and continue you guys' idea. If you could help finish this issue, I am really willing to do some tests and give feedbacks ASAP. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280:175,test,tests,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280,2,['test'],['tests']
Testability,"Hi,; after discussing with Ruben all my cases with SU2_CFD passed. The fea_fsi/StatBeam_3d case needs an increase in the thresholds. It is a stiff problem and therefore not that numerical accurate (By the way: Should for stiff problems a QUAD-Precision version of the Gauss-Elimination be added?); I introduced some small changes which sum up to 15% savings for the turb_ONERAM6 case (others not tested) sequentially. Interested in merging them? How to proceed?; Josef",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-279374614:396,test,tested,396,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-279374614,1,['test'],['tested']
Testability,"Hi. I think the best is just to remove reference to the issue. I think comment is explicit enough. I will commit all minor changes in next commit. I am not sure to understand well the problem about regression but I think it was just due to tests regression failing on the specific develop commit I used as base of my branch. . Nevertheless, there is this change that can be important for futur python changes:; https://www.python.org/dev/peps/pep-0237. I have applied this one time in my commit (see comment on pull-request diff displayed above). . My test branch rebased on last develop commit pass all tests so normally travis should confirm that all tests are ok now for this pull request. See you soon if not ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-224623509:240,test,tests,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-224623509,4,['test'],"['test', 'tests']"
Testability,"Hi; I just tested with the parallel script and 20 cpus. It is working fine, writing all the flow_*.dat that I asked. ; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267094648:11,test,tested,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267094648,1,['test'],['tested']
Testability,"Hi; Kind of strange that Travis tests failed. Modifications were performed only in the script; compute_polar.py and the pull request was set following git pull from develop branch.; Could it be that there is a problem with the online develop branch?; How can I check what caused Travis to fail?; Thanks,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376225263:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376225263,1,['test'],['tests']
Testability,Hm why are the regression tests failing ? It looks like is has something to do with the changes in the limiter in a recent commit.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490#issuecomment-355911820:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/490#issuecomment-355911820,1,['test'],['tests']
Testability,"Hm, good question why the builds are not running. It should not depend on the LGTM things or CodeFactor at all, they are independent.; My suggestion would be to quickly resolve the conflicts with origin/develop and push again. I could imagine that this hinders the regression tests to run. I briefly went over the conflicts and they seemed to easy to fix (on the first glance). You also have a merge request into develop and didn't touch the regression.yml so I see no problems on that side. The Regression tests also worked in the past so lets hope the merge origin/develop helps 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856:276,test,tests,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856,2,['test'],['tests']
Testability,"Hmm ok I'm re-running the tests, maybe something went wrong because I merged without merging develop first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-938511465:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938511465,1,['test'],['tests']
Testability,"Hmmm looks like we have an issue with the setup of tutorials.py then, because the merge button should not show up as green with failing regressions.; The code quality tests are not hard requirements but everything else should be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899:167,test,tests,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899,1,['test'],['tests']
Testability,"Hmmm this didn't work because Travis doesn't have a Python 3.7 binary to download, even though it wouldn't be used. Going to require some more thought if this is worth testing for.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-443521982:168,test,testing,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-443521982,1,['test'],['testing']
Testability,"How about making the test cases repo a submodule of SU2, such that when the submodule is updated Travis will be triggered?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459#issuecomment-339751327:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/459#issuecomment-339751327,1,['test'],['test']
Testability,"Hybrid AD tests are a bit flaky ATM :shrug: you can merge things without those tests passing, but if more than 1 fails let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-898887334:10,test,tests,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898887334,2,['test'],['tests']
Testability,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:118,Test,Testcases,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618,2,['Test'],['Testcases']
Testability,"I added the necessary files (the exp. data and the .su2 files) to the TestCases repository, so you can remove them from here. And please rename the folder to ""transition"". Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257647285:70,Test,TestCases,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257647285,1,['Test'],['TestCases']
Testability,"I added the tutorial cases to the regression tests. They only do **one** iteration, just to check that the config options are correct. Everything else should be covered by the other regression tests already.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355153943:45,test,tests,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355153943,2,['test'],['tests']
Testability,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-581889375:13,test,testing,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375,7,['test'],"['test', 'testing', 'tests']"
Testability,"I agree that it is very odd.; Having just run the test, I can confirm that a clean folder with the restart file hangs (30+ min).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-892025673:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-892025673,1,['test'],['test']
Testability,"I agree that this should be fixed, and as you have identified it is a problem separate from the FSI problem so you're doing the right thing (as far as my opinion goes) in terms of making this pull request. ; And you've definitely identified an important problem. . Considering that the deconstructers are used within SetVolume_Deformation() in the current develop branch, it seems like (part of) the problem is that that deconstructor is not doing what we thought it would. Aka, although C++ compilers will allow you to use LinsysSol.~CSysVector(), it may not be actually doing what it looks like - and based on your observations it seems like ~CSysVector() is not being called at all. A destructor like ~CSysVector() is more conventionally called by using a 'delete'. This may change the way that the initialize function is used for that object as well, by replacing it with 'new'. Replacing the current method of initializing/destructing that class with a new/delete pair should not change performance, and if anything improve it due to calling the destructor, since it looks like the constructor and the 'Initialize' methods are currently identical. Did you test via a cout or another way to see if the code within ~CSysVector() was called?. Having the delete within the SetVolume_Deformation() will free up memory during the rest of the calculation, as otherwise that memory will not be freed until the CVolumetricMovement class is deleted at the end of execution (or when something like delete [] grid_movement_container happens). But there may also be advantages to keeping it within the CVolumetricMovement constructor/destructor definition. Anyone else have a thought on this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-147892835:1161,test,test,1161,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-147892835,1,['test'],['test']
Testability,"I agree that we should get this in soon and allow others to give it a try. I have just one more request, Samet: in order to protect your nice contribution to the code, it is best to have at least one of the test cases connected to our regression test system. That way, we will be alerted right away if a future commit affects the correctness of your model. . Can you please add at least one of the cases to the regression suite? This is done by adding the case(s) to the serial_regression.py and parallel_regression.py files. I think that it is fairly straightforward to add one by pattern-matching the existing cases, but please let me know if you have trouble.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-264954289:207,test,test,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-264954289,2,['test'],['test']
Testability,"I agree with @talbring. This one is a burden on both sides (to prepare and review), and it is easy for us to keep putting it off. I would recommend that everyone takes a look at this in the next day or two - at least take a look at the changes that will affect your own work. Once the tests pass, we can be confident that we are preserving what is in the regressions, but we will need a short period of conflict fixing and testing for those with active branches. The majority of the PR is for output features, which should not affect correctness of the solvers, but there are some important changes to the drivers and options that folks should be aware of. Please give these things a pass when you have a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534605572:285,test,tests,285,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534605572,2,['test'],"['testing', 'tests']"
Testability,"I agree with both of you, that OBJECTIVE_FUNCTION should be a bit more descriptive. ; Following the format of other adjoint options (CONV_NUM_METHOD_ADJFLOW, LIMIT_ADJFLOW), how about OBJFUNC_ADJFLOW or FUNCTIONAL_ADJFLOW? . Regarding the format of OPT_OBJECTIVE, what I have working in another branch (which I have been sitting on pending figuring out these types of issues and more testing) is a format like:; OPT_OBJECTIVE = DRAG*0.1; LIFT*2.0; COMBINE_OBJECTIVE = YES; Where the associated adjoint settings are:; OBJECTIVE_FUNCTION = DRAG, LIFT; OBJECTIVE_WEIGHT = 0.1, -2.0. The effect of COMBINE_OBJECTIVE is a flag to switch between treating the objectives separately (each objective and its gradient is evaluated separately and the python scripts loop sequentially over the objectives, or if this option is 'YES' then a 'COMBO' value is output to the history file and the gradient is computed all-at-once (I can explain that more offline if necessary)). At the moment this only works for linear combinations of existing objectives, so the sample objective Francisco listed would be beyond that. . What do you think of this as an option structure for minimizing 0.1*DRAG-2.0*LIFT:; OPT_OBJECTIVE = COMBINATION; ...; OBJFUNC_ADJFLOW = COMBINATION; ..; COMBO_OBJDEF = DRAG, LIFT; COMBO_OBJWEIGHT = 0.1, -2.0; Where this would still be compatible with looping over sequential objectives in the shape optimization (that is really just a fairly small update to the python, and has some benefits depending on how many constraints you have), and both the adjoint and optimization would refer to OBJDEF if 'COMBINATION' is set as the objective.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187280368:384,test,testing,384,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187280368,1,['test'],['testing']
Testability,"I agree, but some do [pick up](https://github.com/su2code/SU2/commits/develop/TestCases/disc_adj_fsi/Airfoil_2d/config.cfg) those changes, just not all of them. Anyway, you'll notice I put an assert for the condition that was causing the problem instead of an ""mpi error"". That is inline with the philosophy that errors/exceptions are to deal with user errors and asserts to help debugging (they are ignored with -DNDEBUG). I can off-course change it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518536145:78,Test,TestCases,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518536145,3,"['Test', 'assert']","['TestCases', 'assert', 'asserts']"
Testability,I already changed it in the branch fix_large_mesh. If the tests of @GomerOfDoom are successful it can be merged into develop.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-626225756:58,test,tests,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-626225756,1,['test'],['tests']
Testability,I also thought about that merging but unfortunately we are already at the time-limit of 90mins with only the normal compilation/regression tests. I will explore more the caching feature. I already did some tests in the meson_build branch on that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709#issuecomment-501659521:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/709#issuecomment-501659521,2,['test'],['tests']
Testability,"I always thought of CSolver, CIteration, etc. as ""strategies"" and CNumerics as ""visitors"", but just because the numerics ""visit"" the edges. I like the separation between solver and numerics, but I think the implementation could be better to avoid the problems @clarkpede mentioned.; We will need the contiguous storage for vectorization, once we have that we should benchmark again to evaluate the overhead of the current numerics structure and the potential gains from vectorization and weight that against whatever loss of readibility we would need to incur.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-514334254:366,benchmark,benchmark,366,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-514334254,1,['benchmark'],['benchmark']
Testability,"I am also experiencing this issue since today merge with develop. I have created a branch to fix this according to the suggestion of @LaSerpe and made few tests. If Travis will pass, I am going to open a PR. Is that OK?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/341#issuecomment-266783530:155,test,tests,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/341#issuecomment-266783530,1,['test'],['tests']
Testability,"I am currently testing an expression parser to define custom fields in the config file. For this I modified the handling of the curly brackets {}. They now declare a ""literal"" interpretation, which means everything inside is considered as one string and will not be split while strings are tokenized when reading the config file. . When you declare the output fields you can then use expressions involving all available fields, e.g. `SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, {sqrt(LIFT)/DRAG**2}`. At the moment only inline expression are possible. But I am considering also to use a file to define more complex functions. The goal is to make that framework more flexibel to that we can use it also to define custom integrals over markers, functions defined on the whole flow field, custom boundary conditions, inlet conditions and so on. . Important to note is that I already differentiated the parser, which means everything that is defined can be used also for the adjoint solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-602276632:15,test,testing,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602276632,1,['test'],['testing']
Testability,"I am having trouble with local regression testing. When running regression tests locally on my computer following instructions in the documentation many tests fail, including ones that seem to pass when attempting to upload. I seem to be missing something.. ; What am I doing wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2180271323:42,test,testing,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2180271323,3,['test'],"['testing', 'tests']"
Testability,"I am more than happy to get any reviews! However, I don't expect that anyone will go through all files and in order to properly test it, we have to slightly push it. . We will give it a couple of days though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534580926:128,test,test,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534580926,1,['test'],['test']
Testability,"I am not entirely sure, but as far as I know SU2 has not been tested on cygwin. So if the setting of the SU2_RUN environment variable does not solve the problem, could you test it without python? You do this using the following command. mpirun -np <# of ranks> <path to SU2 bin directory>/SU2_CFD.exe inv_ONERAM6.cfg. It could be that instead of mpirun you must use mpiexec. That depends on your MPI implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378164049:62,test,tested,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378164049,2,['test'],"['test', 'tested']"
Testability,"I am not sure if a 2D case is a good example / test case for the ROTATING_FRAME option, because the cross product makes only sense in the 3D case. For example, there is no pitch axis, the y-axis actually goes in z-direction and so on... (By the way, I am on vacation the next days. I will be back in office next Monday.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621#issuecomment-1115026525:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621#issuecomment-1115026525,1,['test'],['test']
Testability,"I am not sure whether all is on in this request like it should.; - I did an update of my request with respect to current develop.; - I selected some of my changes and collected once again Timings for turb_oneram with 8k elements, 20 iterations in serial runs.; 1. Use NUMACTL if more than 1 CPU - may save a lot (without 654sec); 2. Original develop branch: 557 sec; 3. Gauss-elimination down to 546, prodblockvector 533, matrixvectorproduct 525, diag_upper in preconditioner 513, transportmodel 509, Changes to CUpwRoe_Flow::ComputeResidual and called funtions 485. Thus in total 72sec, appr. 15% savings.; 4. My - not commited, still in test - version runs in 390 sec.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-323047204:639,test,test,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-323047204,1,['test'],['test']
Testability,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630388452:319,test,test,319,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"I am open to this (we have discussed it for a couple of years), and it would be good to put it into a script like externals/fix_line_endings.sh. Could even be automated later somehow with that on PRs, or can at least run manually to appease CodeFactor. I think you guys were going to run some tests on branches.. please let folks know what you see and what the steps should be",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-550471978:293,test,tests,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550471978,1,['test'],['tests']
Testability,I believe this request is fixed with requested changes and white space removed. I have added a grid file and .cfg file to the respective test case repositories. I am not sure where to add a solution file if this is to become a regression test. Jason,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-335467032:137,test,test,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-335467032,2,['test'],['test']
Testability,"I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HAVNCNA>, or mute the thread<https://github.com/notifications/unsubscribe-au",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1435,log,log,1435,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['log'],['log']
Testability,"I can provide some ideas as to where the change might have occurred. If you look at the git log for the regression tests, you can see every time that someone changed the expected results for a test. Specifically, we can see all the times that the SA regression tests have been changed, which is a necessary (but not sufficient) condition for a significant change in SA results. (It's possible a sneaky change slipped in with a small enough change in residuals so as to not be picked up by the regression tests.). I looked at the following test cases:; + `turb_SA_flatplate`; + `turb_SA_RAE2822`; + `turb_ONERAM6`; + `turb_NACA0012_sa`. I only found one commit where the SA regression test values changed since Feb 18, 2019 (when v6.2.0 was released): fa7ef0a6f0f6a32cd0512f738a1329bdc41ebe00 . That commit was part of PR #657, where a bug in the symmetry boundary condition was fixed. You do have symmetry boundary conditions in your cfg file. Why don't you try re-running the test case with the versions before and after PR #657 was merged?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513324305:92,log,log,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513324305,8,"['log', 'test']","['log', 'test', 'tests']"
Testability,"I can test it on both Centos 7.5 and Ubuntu 18.04, if needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426518081:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426518081,1,['test'],['test']
Testability,"I can test out some aspects as well. This directly impacts my research, so it's a medium-level priority for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548893764:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548893764,1,['test'],['test']
Testability,"I can think of 3 reasons why you get this error. 1) You have hanging nodes in the grid. Theoretically, the DG discretization is perfectly capable of handling this situation. However, the logical to do so has not been implemented yet. 2) These faces are boundary faces, but you forgot to specify boundary conditions for them. 3) In case you are using periodic boundaries, it might be possible that the periodic equivalent is not found. The algorithm to find the periodic donors is tolerance driven and something may go wrong if the periodic faces are not perfectly matching. . If you use periodic boundaries, my guess would be the third reason.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1140#issuecomment-748799921:187,log,logical,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140#issuecomment-748799921,1,['log'],['logical']
Testability,I cannot reproduce the problem with the develop branch and these tests run very very often.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331#issuecomment-894827611:65,test,tests,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331#issuecomment-894827611,1,['test'],['tests']
Testability,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:29,test,testcases,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432,8,['test'],"['testcase', 'testcases', 'tests']"
Testability,"I did few tests (CGNS mesh format), following are the details -; **While trying to use all 8 cores per node (Total 70 nodes, each having 24 GB RAM)-**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; ............ malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; ................; malloc failed for element data; malloc failed for element data; Loading section Connect_TETRA of element type Tetrahedron. **While trying 6 cores in each node**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data. **Finally settled with 4 cores at each node and memory usage at every node is--** . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 4652 aero 30 10 872m 746m 10m R 100 3.1 43:03.38 SU2_CFD ; 4653 aero 30 10 1076m 951m 10m R 100 3.9 43:12.10 SU2_CFD ; 4654 aero 30 10 1162m 1.0g 10m R 100 4.3 43:15.15 SU2_CFD ; 4655 aero 30 10 1458m 1.3g 10m R 100 5.5 43:08.96 SU2_CFD . **With above, memory usage seems to be around 16.8 % of 24 GB RAM**. Hope I am not missing something else (some other usage etc...) and what should be the approximate memory requirement for such mesh sizes (around 60 million or is there a general guideline of memory requirement with mesh size for RANS computation with Implicit solver) ?. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-232018195:10,test,tests,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-232018195,2,['test'],['tests']
Testability,"I did some more testing and can confirm, that also when relaxing the convergence criterion the solution does not change. Therefore I'm positive that I can get good results also with convective BCs. Nevertheless I tried restarting a simulation with convective BC and h=0 from an isothermal simulation and it diverged immediately after the first timestep. The same thing happened when restarting from an adiabatic simulation:. ```; ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; The simulation will run for 2000 time steps.; +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+; | Time_Iter| Inner_Iter| Cur_Time| Time(sec)|Linear_Solve| Max CFL| rms[Rho]| rms[RhoU]| rms[RhoV]| rms[RhoE]| rms[k]| rms[w]| Avg_Press|Avg_Press(NS|Avg_Press(NS|Avg_Press(NS|Avg_Press(NS|HF(NS_Resona|HF(NS_Resona| tavg[HF]|tavg[Avg_Pre|tavg[Avg_Tem|; +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+; | 2000| 0| 5.0000e-08| 4.2625e-02| 3| 1.0000e+02| -2.736211| -0.228378| -0.533349| 2.754171| 0.915535| 7.481489| 3.6909e+05| 0.0000e+00| 1.0000e+05| 1.0000e+05| 1.6909e+05| 4.5645e-11| 9.7518e-12| 0.0000e+00| 0.0000e+00| 0.0000e+00|; | 2000| 5| 5.0000e-08| 1.8793e-02| 9| 1.0000e+02| -6.912682| -4.751492| -4.808573| -1.347847| -4.059524| 4.964360| 3.6910e+05| 0.0000e+00| 1.0000e+05| 1.0000e+05| 1.6910e+05| 1.3436e-12| 1.5626e-12| 0.0000e+00| 0.0000e+00| 0.0000e+00|; | 2000| 10| 5.0000e-08| 1.6455e-02| 9| 1.0000e+02| -8.116638| -6.253576| -6.088205| -2.591315| -6.098708",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1379475347:16,test,testing,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1379475347,1,['test'],['testing']
Testability,"I do have some issues with the continuous adjoint Testcases. Taking for example the euler_wedge. In the primal, results/convergence are really close. The continuous adjoint case (contadj_wedge) however produces pretty different results especially along the Euler walls (will upload an image later). The cont.adj. case converges though. So I guess I am doing missing something which is specific to the continuous adjoint? ; Maybe someone with experience in that field can help me and take a look. @hlkline maybe?. Update: Fixed the problem -> I had to change the call signature of the base implementation of `BC_Euler_Wall `and I changed it for all the primal solvers but not the continuous adjoint solver. Therefore in during integration the empty method of the CSolver was called. I'll additionally add the `override `keyword to the method declaration to avoid that in the future. Thanks to @talbring for pointing me to that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532675551:50,Test,Testcases,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532675551,1,['Test'],['Testcases']
Testability,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593186725:310,test,tests,310,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725,1,['test'],['tests']
Testability,"I do not have a specific test case in mind unfortunately, most cases I have looked at have been Euler/multispecies. If you dont mind running turbulence, you can try looking into some flat plate simulations. Sorry, Im not more help here",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-671899897:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-671899897,1,['test'],['test']
Testability,I do not know why a regression test from hybrid_regression_AD.py has failed. But it has nothing to do with this pull request. Therefore I think we can merge it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1070768533:31,test,test,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1070768533,1,['test'],['test']
Testability,"I don't have a specific preference for either #pragma warning disable 2196 or -DCODI_DisableIntelNoInlineWarning. However, if we do get this type of warning also for SU2, then it is logical to use the same solution for both. @MaxSagebaum, if you do not like the pragma solution, maybe we could have a general flag like -DDisableIntelNoInlineWarning?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1087#issuecomment-706554435:182,log,logical,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087#issuecomment-706554435,1,['log'],['logical']
Testability,"I don't have access to a cluster to test this on. However, I usually will install Anaconda Python (3) in my home directory when I do run on clusters just to have complete control over the entire Python environment. I think for scientific/engineering computing this is generally a better strategy than relying on the system Python. . On another note, any hints on why these tests are failing?. ```; /home/travis/build/su2code/SU2/TestCases/optimization_euler/steady_naca0012; naca0012_geo: FAILED; ```. ```; execution command: SU2_GEO inv_NACA0012_adv.cfg > inv_NACA0012_adv.log; ERROR: The code was not able to get to the ""OBJFUN"" section.; ERROR: The SU2_GEO values could not be found.; ```. ```; /home/travis/build/su2code/SU2/TestCases/rans/naca0012; Error in test_vals!; turb_naca0012_sst_restart_mg: FAILED; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321769609:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321769609,5,"['Test', 'log', 'test']","['TestCases', 'log', 'test', 'tests']"
Testability,"I don't know if this is related, but the output of the stored test vals looks a little bit strange now:. ```; ==================== Start Test: contadj_fixedcl_naca0012 ====================; /home/travis/build/su2code/SU2/TestCases/fixed_cl/naca0012; contadj_fixedcl_naca0012: PASSED; execution command: parallel_computation.py -f inv_NACA0012_ContAdj.cfg.autotest > inv_NACA0012_ContAdj.cfg.log; test_iter=500 ; test_vals (stored): -2.093175,; -6.967350,; 0.249870,; -0.000019,; sim_vals (computed): -2.093175, -6.967350, 0.249870, -0.000019, ; delta_vals: 0.000000, 0.000000, 0.000000, 0.000000, ; test duration: 0.62 min; ==================== End Test: contadj_fixedcl_naca0012 ====================; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321771383:62,test,test,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321771383,6,"['Test', 'log', 'test']","['Test', 'TestCases', 'log', 'test']"
Testability,"I don't know what option that warning is included with, or if the behaviour is different across compiler versions.; I compile with with -Wall -Wextra, nevertheless please check the line I pointed to in your previous PR, I would gladly silence the warning but I don't know how that logic is supposed to work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/854#issuecomment-590808122:281,log,logic,281,https://su2code.github.io,https://github.com/su2code/SU2/pull/854#issuecomment-590808122,1,['log'],['logic']
Testability,"I don't think there are particular feature of Python 3 that are necessary except to be able to use SU2 in python 3 environment (What I would like). ; I'd like to work on porting SU2 to python 3 but as I currently use only basic features of SU2 (getting start tutorial on desktop computer), it is hard to me to check that changes on python code works for all python2.7 version test cases. ; Sure #228 could be very useful for that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195716362:376,test,test,376,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195716362,1,['test'],['test']
Testability,I edited your title not to scare someone reading the change log too much.; I would check (i.e. run to convergence) a few of the failed testcases especially those where CD and CL are not the same.; Small changes to only the residuals should be safe to update.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565:60,log,log,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565,2,"['log', 'test']","['log', 'testcases']"
Testability,"I encountered a similiar ""double free"" message as above when i am evaluating fixed CL RANS simulation.; I have tested three cases to see when does this error occur.; The first case is a RANS simulation for CRM wing. My configure file is opt_crm.txt in the attachment.; In this case, when I set FIXED_CL_MODE= YES, then in the end of the SU2_CFD execution, it will return messages below:. `Writing comma-separated values (CSV) surface files.; Merging coordinates in the Master node.; Merging solution in the Master node.; Writing SU2 native restart file.; Writing the forces breakdown file.; *** Error in `SU2_CFD': double free or corruption (!prev): 0x0000000007dc2aa0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7fbaa7b177e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7fbaa7b1fe0a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7fbaa7b2398c]; SU2_CFD[0x8553d5]; SU2_CFD[0x855c59]; SU2_CFD[0x7583c2]; SU2_CFD[0x75ceb5]; SU2_CFD[0x40759c]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbaa7ac0830]; SU2_CFD[0x735109]; ======= Memory map: ========; 00400000-00d07000 r-xp 00000000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; 00f06000-00f2d000 r--p 00906000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; ......`. But, if i turn off the FIXED_CL_MODE, this error won't occur.; Then i tried an invisid test case, this case is orriginally from the TestCases folder of SU2 (TestCases/euler/naca0012). In this case, SU2 works well for both FIXED_CL_MODE and FIXED_AOA_MODE.; Finally, i tried another tutorial case for NACA0012 (from /TestCases/rans/naca0012), then SU2 has the same problem in FIXED_CL_MODE as in the first case. Furthermore, I have noticed that this bug is related to the compilers. ; 1. Intel C++ 2013 + Mpich2-3.0.4, fixed Cl model works; System: RHEL 5.3; 2. Intel C++ 2017 + Mpich2-3.0.4, fixed Cl model fails; System: Ubuntu 16.04; 3. GCC6.1.0 + Mpich2-3.0.4, fixed Cl model fails; System: RHEL 5.3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383#issuecomment-306425408:111,test,tested,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/383#issuecomment-306425408,1,['test'],['tested']
Testability,"I face the same issue with the new Docker images (based on Ubuntu 20.04).; https://github.com/su2code/SU2/pull/1619; https://github.com/su2code/SU2/runs/6384596072?check_suite_focus=true. Neither the proposed change by @aa-g :. ```diff; diff --git externals/cgns/hdf5/meson.build externals/cgns/hdf5/meson.build; index f85d5ba86d..c7655a6d1e 100644; --- externals/cgns/hdf5/meson.build; +++ externals/cgns/hdf5/meson.build; @@ -25,8 +25,8 @@ hdf5_conf_data.set('version', '1.12.1'); ext_deps = []; ; ; -opt_zlib = dependency('zlib', required: false, static: true); -opt_szip = dependency('szip', required: false, static: true); +opt_zlib = dependency('zlib', required: false, static: false); +opt_szip = dependency('szip', required: false, static: false); ; if opt_zlib.found() and cc.has_header('zlib.h'); if cc.has_function('inflate', dependencies: opt_zlib, prefix: '#include <zlib.h>'); ```. nor the extra compiler/linker flags seems to help me:. ```; LDFLAGS=""-fPIC"" CFLAGS=""-fPIC"" CXXFLAGS=""-fPIC"" ./docker/build/compileSU2.sh -b refs/pull/1619/merge -f ""-Denable-pywrapper=true -Dwith-mpi=disabled -Denable-tests=true --warnlevel=0 --werror""; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692:1114,test,tests,1114,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692,1,['test'],['tests']
Testability,I forgot to mention that MPI-3 functionality is required for these changes. Can we assume that all practical MPI implementations support the MPI-3 standard or should we add a test in configure to check?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-418477655:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-418477655,1,['test'],['test']
Testability,"I found only one testcase for rough walls, in `TestCases/incomp_rans/rough_flatplate/rough_flatplate_incomp.cfg`. It's not contained in the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841130361:17,test,testcase,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841130361,3,"['Test', 'test']","['TestCases', 'testcase', 'tests']"
Testability,"I found parallel execution commands for SU2 test case using mpirun. For example, to run the CFD solver on 8 cores, you might enter: $ mpirun -n 8 SU2_CFD default.cfg. Also noted OpenMP header files and c++ files at **~SU2/Common/include/parallelization/ path.** . OpenMP (shared memory) – Parallel programming on a single node. ; MPI (distributed memory) – Parallel computing running on multiple nodes. SU2 supports both OpenMP and MPI. So, we hope that CUDA C++ can be supported by SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407#issuecomment-947511482:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407#issuecomment-947511482,1,['test'],['test']
Testability,"I found the SWBLI config file. I noticed that it is the NK solver. I would test this case without the NK solver.; Moreover, I've noticed that the entropy fix is very low; how about raising it to 0.2 or using a different flux (JST, AUSMPLUSUP2)? It may sound irrelevant, but it is worth the try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2334419307:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2334419307,1,['test'],['test']
Testability,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630646560:345,test,testcases,345,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560,1,['test'],['testcases']
Testability,"I have a couple of question and suggestions about things I noticed during moving the initialization.; 1. `SU2_DOT` did not call `omp_initialize()`, it does now after moving `omp_initialize()` to the driver constructor. Does it actually run any hybrid AD stuff?; 2. The number of OpenMP threads can be specified for `SU2_CFD` via the `-t` parameter, but for `SU2_DOT` and the python wrapper I saw no way to configure it. Making the number of threads a parameter of the driver constructors and calling `omp_set_num_threads` in the constructor of `CDriverBase` seems like a natural way to enable this for all flavours of SU2. Would that be a nice addition?; 3. I couldn't find any python wrapper tests among the parallel AD and hybrid AD tests. Could any of the serial AD python wrapper tests serve as a basis for a parallel AD or hybrid AD one?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920:693,test,tests,693,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920,3,['test'],['tests']
Testability,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:1556,test,test,1556,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,2,['test'],['test']
Testability,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-626120951:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951,5,['test'],['test']
Testability,I have added pull requests for ramp Test Case and documentation update (limiter portion) at respective places for review. When I should update the parallel_regression.py? Probably after addition of ramp case into develop? I have added one case few years back but not not able to recall the procedure...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500865610:36,Test,Test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500865610,1,['Test'],['Test']
Testability,"I have added the new option NUM_METHOD_GRAD_RECON to specify a separate method for computing the reconstruction gradient. If that option is not present, then no additional memory is allocated and no extra gradient computation occurs. I have also put in simple feedback from the linear solver residual and the nonlinear residual to the nonlinear controller. If the linear system converges less than a half an order of magnitude, then the CFL is lowered. A Cauchy-like criteria checks for stall in the nonlinear residuals and drops the CFL to the minimum floor to kick the solver out of a rut. Both of these use factors that are empirical from my tests. Will probably be improved with time and more testing, but they do seem to improve behavior. @koodlyakshay : I had success with the inc. laminar backward facing step after adding extra iterations to the linear solve. For some cases, this is necessary to get a large speedup. I am seeing good speedup for most of the cases within our TestCases repo. If you have some tough cases not covered by the repo, please give those a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-536145232:645,test,tests,645,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-536145232,5,"['Test', 'test']","['TestCases', 'testing', 'tests']"
Testability,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-560572616:666,benchmark,benchmark,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616,2,['benchmark'],['benchmark']
Testability,"I have created a branch ""fix_large_mesh"" in which I am changing those MPI_Type_indexed calls. I am testing the changes now on our large case. Will let you all know how it goes, and then submit a pull request. As for the node[...]->GetnNeighbor issue, the case I have been working on does not have periodicity, but other cases may. Can you clarify the difference between nNeighbor and nPoint? Also, note that this issue *could* have been caused by an incorrect setting of nNeighbor due to the MPI_Type_indexed bug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622562807:99,test,testing,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622562807,1,['test'],['testing']
Testability,"I have just made a quick test. Because --enable-PY_WRAPPER is not in the form of --key=value (like --prefix=PREFIX or --with-cc=mpicc), it is not automatically included in the argument_dict dictionary and thus not passed to the configure script. That is why a treated this option in the same way as the --enable-mpi option, just to be sure. Any advice on how should I treat this --enable-PY_WRAPPER option without changing the ./preconfigure.py ? Or do we just keep everything like it is ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-240523627:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-240523627,1,['test'],['test']
Testability,"I have just uploaded an empty file as a placeholder for your mesh, @jaspe55. Can you please try to update your local copy of the develop branch from the TestCases repository and then overwrite the empty file with your mesh? You can find the file in TestCases/disc_adj_euler/arina2k/, or view in the browser here:. https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-448506828:153,Test,TestCases,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-448506828,3,['Test'],['TestCases']
Testability,"I have now added defaults to all getkind_solver switches: the first objective here is to pass the regression tests. It still has to be checked if we need to add solver switches, or throw an error if for some reason we end up in the default switch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1451#issuecomment-979788570:109,test,tests,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451#issuecomment-979788570,1,['test'],['tests']
Testability,"I have run some test to verify that the changes here also work ok for unsteady flows with dual time-stepping (even the CFL adaption seems to work pretty well for pseudo time). I also added some checks to make sure CFL adaption is disabled for TIME_STEPPING mode. @EduardoMolina @clarkpede @cvencro: if you have some time, can you please test this branch out with some of your unsteady cases to verify that everything is ok for you as well? Let me know if you see any issues",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-539278925:16,test,test,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-539278925,2,['test'],['test']
Testability,"I have run the CHT regression test to convergence in both cases, and it looks ok to me. I think it is fine to move forward with this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435986302:30,test,test,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435986302,1,['test'],['test']
Testability,"I have started updating the regression tests. ; One thing I would like to do is this: when a test uses RESTART=YES, then the restart file comes from the previous test, which is exactly the same except for RESTART=NO. In this way, restart files will always be up to date. Question is if it is ever important for a regression test to have restart files that are more fully converged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304259180:39,test,tests,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304259180,4,['test'],"['test', 'tests']"
Testability,I have tested it only on a 2D case. So maybe we should wait until we have a working 3D periodic case.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211#issuecomment-158881066:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/211#issuecomment-158881066,1,['test'],['tested']
Testability,"I have tested the adjoint FSI solver, results from matching, conservative, and consistent interpolation all agree. I am attaching only the bare minimum [files](https://github.com/su2code/SU2/files/2475798/testing.zip): meshes, configs, histories and logs. As to avoid uploading large files, I can obviously share the solutions.; To me the original issue is fixed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-429571819:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-429571819,3,"['log', 'test']","['logs', 'tested', 'testing']"
Testability,I have tested the tripping of the cross-diffusion term also in the residuals on a more complicated test case and indeed it improved convergence. Should I remove this change and use the value of cross-diffusion coming from the computation of F! blending function as was before?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284282127:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284282127,2,['test'],"['test', 'tested']"
Testability,"I haven't been able to try this myself but from what I have read in a few resources online, it should return `arm64` on macOS and `aarch64` otherwise for ARM. . Possibly the code could test for both outputs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159#issuecomment-1793765550:185,test,test,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159#issuecomment-1793765550,1,['test'],['test']
Testability,"I haven't fully figured out how the two repositories interact, but if I copy the data from https://github.com/su2code/TestCases/pull/124 into ./TestCases/gust and launch the hybrid_regression.py, the new testcase succeeds.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1551411646:118,Test,TestCases,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1551411646,3,"['Test', 'test']","['TestCases', 'testcase']"
Testability,"I haven't looked at this in awhile but I believe I had it working at the time. The volume of each element is already calculated, except that I believe the absolute value of it is used to avoid negative volume cells. The patch just lets the volume get calculated and reorients the element if the volume is negative. This makes a lot more sense to me than using what seems to be an arbitrary algorithm to determine if the elements should be reoriented. . I came across this when I was writing a 3d mesh generator. It doesn't create elements of the best quality but I made sure that they had a positive volume. SU2 would then reorient some elements on me, which caused even more issues for the meshes I created . . I can probably find the time to look into fixing the conflicts and creating a test case if that's desired.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/182#issuecomment-256731488:790,test,test,790,https://su2code.github.io,https://github.com/su2code/SU2/pull/182#issuecomment-256731488,1,['test'],['test']
Testability,I hope to have fixed all regression testcases over at feature_flamelet so please merge and see whether we can get some ✔️'s here as well,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-898048781:36,test,testcases,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-898048781,1,['test'],['testcases']
Testability,"I just checked and develop has that problem too, I see it from log files in build n 600.2. That's probably something we missed form an older pull request.; Maybe we should start thinking about adding a test to check also those python script (?) just to avoid such issues in the future. Cause right now we are only looking at residuals and we can't check them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-252172548:63,log,log,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-252172548,2,"['log', 'test']","['log', 'test']"
Testability,"I just committed a second round of changes that I would appreciate some feedback on. Compilation is successful with these changes, however, upon testing, I receive the following message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 271 SPECIFIED_SUPERSONIC_INLET_PROFILE: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean SPECIFIED_INLET_PROFILE?; Line 274 SUPERSONIC_INLET_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean INLET_FILENAME?. I had already adjusted CConfig.cpp to include supersonic inlet profile inputs, but apparently I am not implementing everything I need to. I'm unsure where else I would need to make changes. Any suggestions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832:145,test,testing,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832,2,['test'],['testing']
Testability,"I just found [a blog post](https://codingnest.com/the-future-of-catch2/) on the future directions of Catch2. There's a couple of important points for our discussion. The developer plans to adopt a hybrid approach, with:. 1. A stripped-down, header-only version.; 2. A full-feature, typical library (i.e. it must be compiled and linked). This approach is very similar to Boost's setup. Google Test does not offer a header-only version. Additionally, the developer plans to drop C++11 support, and move to C++14. A simpler branch will still support C++03. It's not clear which features are supported in the C++03 variant, and which ones aren't. Google Test is also moving to support only C++11 in their next release, but their current release fully supports pre-C++11. All of this discussion raises the question: Do we want to require C++11 for unit tests?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500411194:392,Test,Test,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500411194,4,"['Test', 'test']","['Test', 'tests']"
Testability,I just noticed that this also means that e.g. SURFACE_STATIC PRESSURE in screen outputs cannot be used for regression tests as the python script needs a delimiter in between values which is not the case with that doubled output.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1336#issuecomment-889916141:118,test,tests,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1336#issuecomment-889916141,1,['test'],['tests']
Testability,"I just tested some boundary conditions on O cylinder case.; And I found this issue occurs at near axis when AXISYMMETRIC = YES regardless of which BC is applied at axis (y=0). For example, this also arises on BC_HeatFlux_Wall with zero heat flux.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-938657587:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-938657587,1,['test'],['tested']
Testability,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-624894422:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422,1,['test'],['tested']
Testability,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:157,log,log,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['log'],['log']
Testability,"I just updated the serial and parallel regression tests. There is one SA test that has a restart file, I will also update that one.; @rois1995 can you have a look at the failed cases for the tutorial.py and vandv.py regression tests? I will have a look at the *_AD.py regressions this Friday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014#issuecomment-1561979306:50,test,tests,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014#issuecomment-1561979306,3,['test'],"['test', 'tests']"
Testability,"I lied and tried to fix it better, I tried it with one of the examples and it does not crash anymore...; Wait for the tests to pass, do git pull to get the changes and try it again please, maybe it will work, maybe it will blow up somewhere else.; You can use more cores without using ""more MPI"" if you enable OpenMP:; https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/; There is a talk explaining how to use it here https://su2foundation.org/su2conference2020/ (hybrid parallel)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219#issuecomment-790984246:118,test,tests,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790984246,1,['test'],['tests']
Testability,"I like this a lot. I often have a hard time reading the free-stream conditions, and this makes it a lot easier to read. Don't think it is as necessary for the solver iterations, but I don't see any detriment to outputting it like that. Would this require changing the regression testing script that reads the output log to diff the numerical values?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591#issuecomment-426812077:279,test,testing,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/591#issuecomment-426812077,2,"['log', 'test']","['log', 'testing']"
Testability,"I looked at the transport equations and implemented the SST2003m model (as far as I can tell); I'm not entirely sure about what happens in CTurbSSTSolver::Postprocessing; what's the difference between:; flownodes->; nodes->; geometry->nodes. I also have to check the implementation of the boundary conditions. When the implementation has been checked, I'll tackle the regression tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557#issuecomment-1059936471:379,test,tests,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1059936471,1,['test'],['tests']
Testability,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754746706:270,log,log,270,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706,1,['log'],['log']
Testability,I made a light test case to reproduce the issue. It's a cylinder in a flowfield. It's only 112k cells. ![mesh](https://user-images.githubusercontent.com/91184648/145433376-ec7d4309-acc6-43d2-a172-39502e823147.png); ![swpeptCylinder](https://user-images.githubusercontent.com/91184648/145433398-97123613-824f-4f81-a143-aaae790ce252.png); ![residual_energy](https://user-images.githubusercontent.com/91184648/145433426-e6fc38f8-8482-47be-bd52-dca747b3e3e4.png). The residuals never converge:; ![residual_convergence](https://user-images.githubusercontent.com/91184648/145432900-0c2d7432-807b-4fe4-b24d-abf01cdc7bc4.png); Here is the archive containing the case:; [cyl.zip](https://github.com/su2code/SU2/files/7686715/cyl.zip),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-990001446:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-990001446,1,['test'],['test']
Testability,"I managed to implement the computation of grad(n*U)*n, but at the moment it is located into CTransLMSolver::PreProcessing. It seems to work with a structured mesh on a flat plate. Currently, I am testing with a 2D profile too. However, being into the PreProcessing of the transition solver, the normals are computed at each iteration, thus it is not computationally efficient if non-deforming meshes are used. I am looking into where to put it such that it is computed just if the mesh is updated (and at the first iteration of course). . Plus, I have added a whole lot of variables to the output, but they will be removed in the final version. They are just used as debug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288:196,test,testing,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288,1,['test'],['testing']
Testability,"I need to modify the test cases. So please, do not merge in this PR yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565#issuecomment-419739985:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/565#issuecomment-419739985,1,['test'],['test']
Testability,"I noticed that the `release_v6.0.0` branch isn't set up with Travis CI. Are there plans to have Travis CI track this branch (v6.0.0), or are the regression tests only happening on other branches?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/507#issuecomment-365301931:156,test,tests,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/507#issuecomment-365301931,1,['test'],['tests']
Testability,"I noticed that the output phase values for WRT_PERFORMANCE= YES are currently off due to the number of output phases not being correctly tracked (we call the SetResultsFiles in the Iteration class most of the time, and the one in the driver with the timing only at the end of the run). @talbring, did you already have something in mind for this? Otherwise, I can think of a cleaner way to handle those performance benchmarks. I think it would be good to start printing that information by default too potentially. A good place might be within the MPI structure, since it is accessible everywhere and we can also hide the timer ifdefs for MPI.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-543913612:414,benchmark,benchmarks,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-543913612,1,['benchmark'],['benchmarks']
Testability,"I pointed the PB solver to the existing vorticity and strain mag. functions and removed the heat.cpp file. If you can make your testcase available, then we can already setup our own regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210#issuecomment-1945911569:128,test,testcase,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210#issuecomment-1945911569,2,['test'],"['testcase', 'tests']"
Testability,I ran your test case 4 times and could not reproduce the problem. The code rewrites the `restart_flow.dat` fine and there were no warnings. I even tried to run modify the `config.cfg` so we run with different number iterations; therer are still no errors. . I have SU2 v7.0.2 running on Manjaro x64 and mpiexec 4.0.2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/906#issuecomment-602097912:11,test,test,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/906#issuecomment-602097912,1,['test'],['test']
Testability,I re-ran the test case with develop and actually didnt receive any error during the pre-processing step. I believe this is indeed an artifact due to Eduardo's WMLES implementation that was adversely affecting the communication pattern in the pre-processing stage. I will close this issue then.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099#issuecomment-719839655:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719839655,1,['test'],['test']
Testability,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:403,test,test,403,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918,1,['test'],['test']
Testability,"I restarted the CI pipeline for 6d9e103. In the first run, there was an additional error that mesh files were missing (??). Now in the second run, the regression tests pass...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895063802:162,test,tests,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895063802,1,['test'],['tests']
Testability,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593162200:823,test,tested,823,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200,1,['test'],['tested']
Testability,"I see that the Onera M6 mesh is a half-wing with a symmetry plane and I'm not sure how the mesh deformation behaves in this case (for example, there should be zero out-of-plane movement). . Personally, I like really simple examples where I know what should happen (symmetric airfoil, subsonic flow, no sweep) and I did all my testing during the last weeks with the NACA0012 3m wing. At the same time, it is closer to how I would model a ""real"" aircraft (aircraft in the center of a spherical farfield) than the Onera M6, which is more wind-tunnel-like. The mesh and everything is there, so it's no additional work for me and I would be happy to contribute this as a new example. What's the main argument in favor of the Onear M6 wing / objection against a new example?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112:326,test,testing,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112,2,['test'],['testing']
Testability,"I see that the test pywrapper_translating_naca0012 fails, maybe because the reference results calculated on my computer deviate slightly?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621#issuecomment-1123375922:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621#issuecomment-1123375922,1,['test'],['test']
Testability,"I simple wrote a program to test the grid, which searches for the boundary elements in the single faces, i.e. faces that are only part of one volume element, of the volume grid. What the error message means is that for 4 triangular surface elements of boundary marker BODY there is no corresponding face of the volume elements that is only part of one volume element. . When I include the faces that are shared by two volume elements, only two boundary elements are not found. So in short, you have two boundary elements in boundary marker BODY that are no part of any volume element and two boundary elements that are shared by two volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494675549:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494675549,2,['test'],['test']
Testability,"I solved the issue with the multizone cgns testcase. Even if Family of BC are not read (it is a feature that can be implemented later), the testcase works perfectly fine. It means that multizone CGNS reading works great but the issue is with the output of multizone case in WriteParaView_... . Indeed when writing multizone, the ParaView writing function did not behave well with the fact that the second zone of the case use MIXED elements and the last zone only use one type of elements and did not reset all the pointer to the previous zone when writing the last zone. SU2 ended up trying to free element that did not belong to the last zone but to the previous one thus a crash.; Since the output structure is under rewriting, this testcase may be a nice add-on to this branch to ensure that the new output structure work correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526814716:43,test,testcase,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526814716,3,['test'],['testcase']
Testability,"I still want to; - [x] make a `ScalarOutput` instead of `Turboutput` section for history and volume and add it to comp/nemo as well (Edit: See 8d87b35 and the two following commits); - [x] add surface species variance as an output quantity (Edit: 048cb3a The impl right now is a bit ugly, but it works as intended); - [x] Ensure that the restarts are working perfectly 8f8952... ; - [x] ... and move the pre-post logic to the species solver exclusively 156d0c5; - [x] Clean the regression test and add suitable README files that explain a bit the purpose of each; - [x] Clean all of my `TK::` comments and make sure none of my notes gets forgotten. all small aspects but hopefully I am finished by the end of the week",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-976586367:413,log,logic,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-976586367,2,"['log', 'test']","['logic', 'test']"
Testability,"I suggest that we add a test to the regressions that will check the file output format - we already have a routine to diff two files in the python scripts, so this should be fairly straightforward. ; My thought here is that this would include very small cases, with just one iteration and/or just running SU2_SOL, to check that the header format hasn't changed in all the output formats. This is something we don't usually check for, especially in paraview output since most of us don't use that. It'll add some overhead for developers when the output content or format is changed (we'll need to update the reference file in the test cases repo), but since this is something likely to cause inconvenience to users (all of a sudden everyone needs to update their tecplot layout, etc), that's not such a bad thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-225968460:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-225968460,2,['test'],['test']
Testability,"I suspect you are correct and they have some problem, I tried building the code without MPI (so using our dummy mpi wrapper) and the unit test passes and valgrind doesn't find anything in the testcase...; This displs problem with a single rank was also a bug we had in our MPI wrapper and you fixed right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058:138,test,test,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058,2,['test'],"['test', 'testcase']"
Testability,"I tested the MKL integration with the discrete adjoint, and everything looks ok, turns out to be only about 5% faster on a per iteration basis (i.e. excluding recording times). I had to grab some work from my other ongoing PR's to run a case with reasonable CFL settings so I am not going to upload files for this test. @economon , @talbring , if you do not mind me moving the files with significant changes on a separate PR, I think this is ready to go.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505018141:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505018141,2,['test'],"['test', 'tested']"
Testability,I tested the branch and second-order dual time stepping restart works without any problems. I will post if the restarts after a few thousand time steps also work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-848037127:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-848037127,1,['test'],['tested']
Testability,"I tested this implementation on the inviscid wedge regression case. Setting the supresonic inlet to have the same conditions as farfield appears to give the correct solution. As noted in a commit above, there are some non-physical points when using this with AUSM with MUSCL turned on, but turning MUSCL off removes these. <img width=""1029"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211228811-b7593a8f-ebd2-4740-8664-bb47f1560164.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1374999159:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1374999159,1,['test'],['tested']
Testability,"I tested this on Ubuntu 18.04 and Centos 7.5. On Ubuntu both options work fine. However, on Centos only the most recent commit (i.e. running ./bootstrap) works. The commit ce9cd2b fails, because the system runs automake 1.13 and therefore it cannot find aclocal-1.15 when running configure. This can be solved by either changing am__api_version in configure to 1.13 (dirty) or running bootstrap. However, I don't know if either option is desired. BTW, this problem will also show up for the master branch, whatever option will be chosen, as for the master branch the configure and Makefile.in's will be in the distribution. In short, the option with bootstrap works fine on the operating systems I tested (and I assume on all Linux and Unix distributions). When configure is present in the distribution, you could run into problems if the system does not have the required version of autotools.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427011685:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427011685,2,['test'],['tested']
Testability,"I think I got the flatplate covered, it should be easy (if the equations have been implemented correctly). The backward facing step and the diffuser I think are the most natural continuation as test cases, what do you think about it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2449997427:194,test,test,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2449997427,1,['test'],['test']
Testability,"I think I have addressed all the comments. Let me know if there is anything that still needs to be fixed.; I have created a PR#69 in the TestCases repository to update FFD box in the mesh file. Please merge it. It is not required for regression but it is required if someone wants to check derivatives are correctly calculated. As I mentioned in the previous [post](https://github.com/su2code/SU2/pull/1329#issuecomment-884793528), there are still some remaining issues shown below. They were there before this PR. I would like to defer them to future PRs once I understand more about how SU2 works. - WeightNF.dat; - VENKATAKRISHNAN limiter; - `Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894934546:137,Test,TestCases,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894934546,1,['Test'],['TestCases']
Testability,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:1502,test,test,1502,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,2,['test'],['test']
Testability,I think I see how the regressions work now. I was thinking the cases were restarted from a converged solution. It looks as though the regression works by comparing the results after a set number of iterations from a non-restart case? That means the values I need to enter into the python script are the residuals and lift/drag coefficients after that number of iterations I set in the regression test?. Jason,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-335937240:396,test,test,396,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-335937240,1,['test'],['test']
Testability,"I think along with this, the testcases/tutorials cfgs will have outdated configs. If we have a new template, I can help with the update.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/772#issuecomment-524913164:29,test,testcases,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/772#issuecomment-524913164,1,['test'],['testcases']
Testability,"I think ideally we would have only the speedy stuff, but that is a very; long term goal (and ideally a community decision).; Medium term they will have to coexist due to:; 1) Features I have not re-implemented like, reconstruction checks,; uncertainty stuff.; 2) ""Boundary numerics"", I need to think of a clever way to use; CNumericsSIMD on boundaries (this should not matter for what you are; working on). With that said, I implemented JST with matrix dissipation and did not; bother making 2 versions of it... So, you choose, nothing would make me happier than seeing people starting; to use that framework. On Fri, 25 Sep 2020, 19:19 Brian Munguía, <notifications@github.com> wrote:. > I've also wondered about whether the Jacobians (even dF/dU) should be; > evaluate at the reconstructed state (as currently done) or at the; > un-reconstructed... This can be easily tested in #1022; > <https://github.com/su2code/SU2/pull/1022> (the reconstruction is inside; > the numerics).; >; > @pcarruscag <https://github.com/pcarruscag> coming back to this, is the; > plan with #1022 <https://github.com/su2code/SU2/pull/1022> to exclusively; > use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe; > implementations available? I was thinking of merging feature_simd_numerics; > into this branch, and was wondering if I'd need to implement the; > reconstruction Jacobian for both Roe implementations or if I should just; > stick to CNumericsSIMD.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1050#issuecomment-699080843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2UIR3VMHBZO2D5X33SHTNMNANCNFSM4O6XOQQQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050#issuecomment-699192561:870,test,tested,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699192561,1,['test'],['tested']
Testability,"I think it is possible, but there may need to be some renaming to deal with the fact that there's already a `TestCases` directory. One benefit of using a submodule is that an exact commit of the test cases repo can be tied to each SU2 commit. Also, I think Travis by default recurses submodules when cloning.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459#issuecomment-339800670:109,Test,TestCases,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/459#issuecomment-339800670,2,"['Test', 'test']","['TestCases', 'test']"
Testability,I think it would be super useful to change some (or all) of the TestCases to include the suggested settings that you have outlined in this PR. Most users wouldn't know how to get the best performance out of the code otherwise.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-540057251:64,Test,TestCases,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-540057251,1,['Test'],['TestCases']
Testability,"I think most of the parallel reg tests are actually launched with the parallel_computation.py script, so it should be OK since they are all green. But maybe I have misunderstood your request...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267086037:33,test,tests,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267086037,1,['test'],['tests']
Testability,"I think no more changes are needed. All of the test cases remain the same since probably the Rotation correction wasn't used. The only major corrections are the following:; - CRot now is set to 2.0 as in TMR; - The computation of $\hat{S}$ is performed before the the Rotation correction is applied, not after.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352#issuecomment-2343820369:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352#issuecomment-2343820369,1,['test'],['test']
Testability,"I think that is what is happening, the logic to use either MACH_MOTION or the farfield velocity as the reference is in CEulerSolver::SetReferenceValues, I think if you have fluid load markers we will assume FSI and not use MACH_MOTION. Give this a try and if it fixes the issue we need more robust logic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1462640745:39,log,logic,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1462640745,2,['log'],['logic']
Testability,"I think that was the first gcc with official full c++11 support, and so it might not be full support...; Try pushing the merge anyway so that github can run the tests, I'll see if something can be done about 4.8.5.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743131278:161,test,tests,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743131278,1,['test'],['tests']
Testability,"I think this is stable enough to be merged, while testing #834 and #843 I think I went through most combinations of solvers/preconditioners and things seem to work fine, the only source of problems was the dot product (it was locking in some conditions) but all seems fine now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-573715803:50,test,testing,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-573715803,1,['test'],['testing']
Testability,"I think this is working now, I'm seeing some non-physical reconstructed points initially for the axi_viscone test case, but these seem to go away after a few hundred iters using Van Albada. The solution looks physical. I'd like to change the regression tests to support these new values, but it would be great if everyone could double-check this before I make that change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-972424036:109,test,test,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-972424036,2,['test'],"['test', 'tests']"
Testability,I think we can reduce the iterations of some of the test cases. That should already save a lot time ... . I'll create a branch for that which we should merge in asap.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347515641:52,test,test,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347515641,1,['test'],['test']
Testability,"I think what Christian thinks, just make the solver go for another spin, making sure that:; - This was not the last iteration already.; - The solver will stop afterwards even if the criteria stops being fulfilled. The logic will be a little bit gnarly... The developer in me would just SU2_MPI::Error if the output frequency is not one :); But that would not be very nice for the users.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1211#issuecomment-797573104:218,log,logic,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1211#issuecomment-797573104,1,['log'],['logic']
Testability,I tried again and the problem still persist. I test the NACA64A010 euler optimization with V4.3.0. ; I attached the Log for adjoint calculation. same thing happened on all of the unsteady cases. there would be some problems with gradient projection code; [log_Adjoint(DRAG).pdf](https://github.com/su2code/SU2/files/517609/log_Adjoint.DRAG.pdf),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-252417783:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-252417783,2,"['Log', 'test']","['Log', 'test']"
Testability,"I tried to solve the problem where sometimes the regression tests stall ... it seems to be a problem of openmpi. Changed it to mpich, but then mpi4py has problems. I reverted it for now. We have to live with that problem for a while unfortunately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-544877793:60,test,tests,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-544877793,1,['test'],['tests']
Testability,I updated the code based on your comments. I have to rerun the validation test case that I have to see if it still matches with the experimental data. I also have to check the compressible vs incompressible implementation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354,1,['test'],['test']
Testability,I updated the restart file in the TestCases directory so I suppose regressions apart from this branch will break until this PR is merged. Sorry,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1366#issuecomment-910441955:34,Test,TestCases,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366#issuecomment-910441955,1,['Test'],['TestCases']
Testability,"I uploaded a first version of the ADT nearest node search to the branch feature_WallDistance. Seems to give the correct results, but I have not done any efficiency tests with a large mesh. If somebody could do that, that would be helpful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-226407264:164,test,tests,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-226407264,1,['test'],['tests']
Testability,"I was aware of that test case. But I did not use it for the verification of sensitivities since I could not manage to set up a working derivative computation (different combination of markers/objective functions were leading to a memory error). However, I could use it to set up a regression test for the comparison of residuals.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075662048:20,test,test,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075662048,2,['test'],['test']
Testability,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:1027,test,test,1027,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415,1,['test'],['test']
Testability,"I was not able to reproduce this behavior. Below is the result I get when using the master branch for both the code and the test cases. . ![image](https://cloud.githubusercontent.com/assets/5167760/7709282/d36254b2-fe10-11e4-8827-f01ec46fbf0f.png). Note that since the config file provided uses a restart it depends on also having the provided restart files, which may have been produced with slightly different settings (ie, lower CFL number), and if you are not using the restart files you should check that the solution has converged. If you have further questions about the settings of SU2, checking convergence, etc please post them to the forum at:; cfd-online.com/Forums/su2/. You will find that in addition to a wider audience who can answer your questions, the answers may also already be posted from users who had similar problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/179#issuecomment-103602179:124,test,test,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/179#issuecomment-103602179,1,['test'],['test']
Testability,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:19,test,tests,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,2,['test'],['tests']
Testability,I will add a cylinder test case to the regression suite in the next day/or two. TestCases/PR#116,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1401946171:22,test,test,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1401946171,2,"['Test', 'test']","['TestCases', 'test']"
Testability,I will add a testcase in a separate PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-2272872224:13,test,testcase,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-2272872224,1,['test'],['testcase']
Testability,"I will caution that the regression test that I added related to this pull has yet to actually run. I don't know why it is running out of time, but it would be good to see it actually pass before merging. I don't know how to force a retry. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-339155498:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-339155498,1,['test'],['test']
Testability,I will get back after some more experiments. Waiting to get some resources to run the tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-231749188:86,test,tests,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-231749188,1,['test'],['tests']
Testability,"I will try and add a new test case as soon as possible, although it might be in October.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352#issuecomment-2367846177:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352#issuecomment-2367846177,1,['test'],['test']
Testability,"I will try to get that updated in the next few days. I think I am pulling from develop branch, but the build keeps failing. I originally was modifying an older version of SU2 on my computer then pasting changes into development branch so I will make sure the changes work with the current develop branch and retry. I am new to github. I will work on regression test after that. I had been testing the NACA 64a010 test case currently used for harmonic balance. The method improves max CFL from about 1.0 to at least 4.0. I have not checked higher numbers. Is it better to add a different case for regression, pitching NACA 0012 for example? . Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/443#issuecomment-331681951:361,test,test,361,https://su2code.github.io,https://github.com/su2code/SU2/pull/443#issuecomment-331681951,3,['test'],"['test', 'testing']"
Testability,I would be fine with either swapping (if it is commented) or reflecting. I would prefer not to have extra checks for boundary logic in a class that operates 99% of the time on internal edges.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1185#issuecomment-774643103:126,log,logic,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185#issuecomment-774643103,1,['log'],['logic']
Testability,I would imagine the error I got will occur with Python 3.6. So just adding SU2deform to the test suite should reproduce the error.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-445503034:92,test,test,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-445503034,1,['test'],['test']
Testability,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:205,Test,Testcases,205,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119,1,['Test'],['Testcases']
Testability,"I would love to change the branch, if I really knew how to. Should I create a new Pull Request?; I am in the process of rerunning my isothermal validation cases with the updated code. As soon as I can get a stable config+mesh, I will send them over to you for a regression test!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56638023:273,test,test,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56638023,1,['test'],['test']
Testability,"I would say it is fundamental to have some cases that start from converged solutions.; IMO all the cases we have that run for 10 iterations are trash from the point of view of testing correctness, they only test that we don't have severe integration bugs.; Even the cases that start from a good restart are NOT covering whether the solver is able to reproduce the correct behavior when starting from scratch...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814:176,test,testing,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814,2,['test'],"['test', 'testing']"
Testability,"I""m not sure what I""m missing here, All the tests have past but no such button seems to exist anywhere.. ; Could this be due to the fact that I'm an Author and not a contributor?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2222187450:44,test,tests,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2222187450,1,['test'],['tests']
Testability,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:31,Test,Testcases,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822,1,['Test'],['Testcases']
Testability,I'll change the scope of this for now to just allowing tests to run with mutation++; The NEMO group can add tests and decide whether to update the version later.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935#issuecomment-1685160303:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935#issuecomment-1685160303,2,['test'],['tests']
Testability,"I'll do some more tests today, but so far it's looking very good !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282973965:18,test,tests,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282973965,1,['test'],['tests']
Testability,I'll give this a test and put in my review Friday morning :+1: :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1705#issuecomment-1197791402:17,test,test,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1705#issuecomment-1197791402,1,['test'],['test']
Testability,"I'll have the summary at the bottom, you guys read papers you know to look for the conclusions.; ## Global speedup (Conclusions); I took the expected speedups for each prototyped area of the code and applied them to the profile I measured for the benchmark case from #716 / #753 (which is not very linear solver intensive).; It is hard to estimate the effect of fusing the convective and viscous edge loops, I assumed the cheaper of the two becomes ""free"" and the other gets a speedup of 1.5 (speedup should be 1.85 accounting for the matrix update optimizations).; I assumed that gradients and limiters are not fused and that minor areas of the code get no speedup, which is not necessarily true as this work would require contiguous storage of geometric properties (geometry->node and geometry->edge) and so some speedup is expected due to that, but in the absence of evidence I prefer to be conservative.; Here are the numbers:; ![image](https://user-images.githubusercontent.com/38071223/66394872-15376f00-e9ce-11e9-80ed-193aea2aae6f.png); The take home number is **1.7**. Cumulative with the 1.4 from contiguous storage, so 2.4 total. Despite most of my posts being focused on SIMD my main motivation is the hybrid parallelization which will allow important algorithmic improvements when running on hundreds of cores, namely the multigrid and additive linear preconditioners will retain their effectiveness at much larger core counts.; I will not hazard an estimate for this. ## Proposed changes (Summary); **Hybrid parallel**; - Gradients (GG) and limiters converted to point loops (embarrassing parallel, no edge colouring needed).; - Residual loops parallelized with edge colouring, if anyone has suggestions regarding algorithms send them my way, so far I only tested greedy colouring on edge groups to preserve spatial locality (this aspect is absolutely fundamental).; - Matrix multiplication, BCSR format is also embarrassing parallel.; - Linear preconditioners, additive decomposition wit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:247,benchmark,benchmark,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['benchmark'],['benchmark']
Testability,"I'll try and find some time to have a look at this today. I think the issue is in the `jSpan == nSpanDonor - 1`. The final value in both the donor and target arrays are 1D values, the values at nSpanDonor - 2 are the values at the shroud. I think the original proposed fix is still needed here as further down you have an array accessing a postion of `kSpan + 1` which iirc resulted in the memory access violation. I think what has happened here is the Aachen case triggers this condition, and results in an error in the calculation of the coefficient for the linear interpolation. When we fixed it, we changed the simulation enough that it throws the residuals off as the computational problem is inherently different. A good test for this would be to extract the values at the interface from the turbomachinery special output with and without this change to see if this is the case. When we were first designing this case @alecappiello had an issue getting the results in one of the zones to agree with experimental results, this could be why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783:727,test,test,727,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783,1,['test'],['test']
Testability,"I'll wait for the regression tests to fail and then update `serial_regression.py` (and hybrid, parallel) for the `rans_uq` tests.; EDIT: Also `stat_fsi` in the hybrid and `poiseuille_profile` in the serial regression tests were affected.; EDIT: And `poiseuille_profile` in parallel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066,3,['test'],['tests']
Testability,"I'll weigh in with a more in depth answer on a second email, but yes I've; found great value in being able to have a good set of unit tests. Particularly when you don't have good acceptance tests (hard in a fast; moving research code), it gives a developer confidence that new changes; aren't being fundamental assumptions in the code. It lets sub module; developers build ""armor"" around those assumptions. It is a bit of a cultural thing. People who want robust bits write more.; Some people wire less. At the bank I once worked at, unit tests were required for every module.; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is uni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:134,test,tests,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,8,['test'],"['tested', 'tests']"
Testability,"I'm currently unable to reproduce the bug(s)... . I tried by apply [diff.txt](https://github.com/su2code/SU2/files/10437018/diff.txt) according to https://github.com/su2code/SU2/issues/1000#issuecomment-633079695 to enable MPICH builds, and then run the following commands in a `ubuntu:22.04` container,; ```bash; apt-get update; apt-get install gcc g++ mpich python3 python3-distutils git pkg-config; ./meson.py build --buildtype=debug -Dwith-mpi=enabled -Denable-tests=true --prefix=$PWD/install; ./ninja -C build install; ```. With the current master 1b08506, or commit 13dae36 before @pcarruscag's fix in #1892, ; several iterations of `install/bin/test_driver [NdFlattener]` consistently print ; ```; Filters: [NdFlattener]; ===============================================================================; All tests passed (45 assertions in 1 test case); ```. With `mpirun -np 2`, I see this output multiple times. Is this correct? In the SU2 test container (`ghcr.io/su2code/su2/test-su2:220614-1237`) with OpenMPI, I get this:; ```; Filters: [NdFlattener]; Filters: [NdFlattener]; ===============================================================================; All tests passed (74 assertions in 1 test case). ===============================================================================; All tests passed (77 assertions in 1 test case); ```. With 13dae36, running the new testcase (with `ITER=11`) like this:; ```bash; root@ed3df1d7769f:/workdir/SU2/TestCases/disc_adj_heat# ../../install/bin/SU2_CFD primal.cfg | grep "" 10|""; ```; consistently outputs ; ```; | 10| -15.998258| -14.557474| -14.812760| -8.956924| -18.202673| -1.040382| 5.7162e+00|; ```; or, with `mpirun -np 2`, the same line multiple times. So maybe I observe a problem with my way of installing mpich on Ubuntu, but no failing unit tests or non-deterministic regression tests. . Are the reported problems restricted to mpich? Could you provide build and run commands with the observed and expected output?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385673898:465,test,tests,465,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385673898,16,"['Test', 'assert', 'test']","['TestCases', 'assertions', 'test', 'test-', 'testcase', 'tests']"
Testability,"I'm doing my tests on a fresh clone from the git.; None of the folders that you menthoned exist after cloning. They are created during; the preconfigure run. The wrong naming does not originate from layers of history in ; the git folder.; And yes, adding no debug flag makes sense.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600837563:13,test,tests,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600837563,1,['test'],['tests']
Testability,"I'm glad to see the doxygen being used again, thanks for setting this up! Was this something needing review, or is it just a test that won't be merged?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/518#issuecomment-375160507:125,test,test,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/518#issuecomment-375160507,1,['test'],['test']
Testability,I'm happy that the strange segmentation fault in the discadj_heat testcase in `serial_regression_AD.py` seems to be gone ;),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847257884:66,test,testcase,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847257884,1,['test'],['testcase']
Testability,"I'm having some trouble getting the regression tests to pass - for some reason there is a result difference in the moving wall tests. I'm not sure how this can be possible, considering I am not changing any values. The convergence seems to be slowed down considerably, but I'm having trouble identifying which function may be causing this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1657243607:47,test,tests,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1657243607,2,['test'],['tests']
Testability,"I'm late to the party here, but just a note to say that the original implementation for the incompressible source terms are indeed from the text that @WallyMaier / @vdweide shared. It was added as part of the work in this paper (https://economon.github.io/docs/AIAA-2018-3111.pdf), but I did not test it much beyond a simple laminar channel case or really attempt to treat turbulence at the time. Thanks for putting in more effort on these terms!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198:296,test,test,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198,2,['test'],['test']
Testability,"I'm not a user myself, just supporting our engineers. To test Windows, however, you may look into AppVeyor, an automated testing service run on Windows free of charge for open source software.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-322434455:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-322434455,2,['test'],"['test', 'testing']"
Testability,"I'm not active in development anymore, but I do remember some of the history. Some of these decisions came from #797 . @economon specifically said (in that issue):. > I removed the term involving the TKE from the viscous stress tensor in the mean flow equations, as this is often ignored in codes (and omitting it gives better results, including the pressure field). I also fixed a bug in the definition of the eddy viscosity, where strain magnitude was being used when it should be the vorticity magnitude. You can see the motivation, regression testing, and explanations on that issue page.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551#issuecomment-1054496510:547,test,testing,547,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1054496510,1,['test'],['testing']
Testability,"I'm not in a hurry, but I would not want to upset the stalebot. Practical consideration regarding storing the CFL, do we have to? In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?; I don't mind outputting the CFL, but it would be nice if we could avoid complexifying the restart logic further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041:363,log,logic,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041,1,['log'],['logic']
Testability,"I'm not sure that is running the SU2 unit tests.; Can you run the test_driver executable directly and check the output?; It will be in the ""build"" directory / UnitTests/test_driver",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859#issuecomment-1367856574:42,test,tests,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859#issuecomment-1367856574,1,['test'],['tests']
Testability,"I'm not very familiar with SU2, could somebody help me with this? Looks like the n0012 case is erroring with SU2_SOL; ```; SU2.EvaluationFailure: Path = /github/workspace/tests/TestCases/polar/naca0012/DIRECT/,; Command = /github/workspace/install/bin/SU2_SOL config_SOL.cfg; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1739#issuecomment-1221366288:171,test,tests,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1739#issuecomment-1221366288,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889557228:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889557228,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"I'm wondering, if a test case for unsteady restart shape optimization would be computationally too expensive for the test system. ; Please let me know you opinion on that. ; Otherwise this request is complete. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627498661:20,test,test,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627498661,2,['test'],['test']
Testability,"I've (finally) managed to go over this pull request. I didn't go into too much detail as I don't want to delay this any more, but in general it all looks great to me. I have run some extra regression tests locally in my computer, and they all seem to be working fine. I also left some comments around, but they are mostly asking for some clarification, no major issues. All cleared from my side. Sorry again for taking way too long, I was so behind myself that I needed to do some merging in my own branches to be able to understand the changes in FSI context... Thanks a lot @LaSerpe for a great work!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258872671:200,test,tests,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258872671,2,['test'],['tests']
Testability,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-594779356:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356,8,['test'],"['test', 'tests']"
Testability,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:10,test,testing,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772,2,['test'],"['testing', 'tests']"
Testability,I've been told that it might be a python-related thing that Tom is looking into. ; For the short term I could make a modification to that test case so that the offending value is left out entirely so that everyone's tests can pass - obviously that doesn't solve the underlying problem but it would let the other branches merge in while we figure out what's going on.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336#issuecomment-263659732:138,test,test,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/336#issuecomment-263659732,2,['test'],"['test', 'tests']"
Testability,I've downloaded the TestCases directory with this command:; git clone git://github.com/su2code/TestCases.git; and still there is no of_grad_cd.dat file in the TestCases/cont_adj_euler/naca0012 folder.; So the problem is still present.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/388#issuecomment-309242408:20,Test,TestCases,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/388#issuecomment-309242408,3,['Test'],['TestCases']
Testability,"I've put a ""WIP"" in the tittle just to make it easier to create the change log for releases (there is the manual step where we need to remove stuff that it not part of the release).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773#issuecomment-775245782:75,log,log,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/773#issuecomment-775245782,1,['log'],['log']
Testability,I've run several tests now and the output looks ok to me as well. Thanks again for the contribution. Merging this in now...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-225182507:17,test,tests,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-225182507,1,['test'],['tests']
Testability,"I've tried reducing the residuals up to -11.5 for the logarithm of the density residual. I've started on the coarsest grid as you saw in the previous plot. I've proceeded on the L2 mesh keeping either the tangential or the first cell spacing constant, using as restart the converged solution on the L1 mesh. The results are essentially the same as with L1 mesh. When using the NK solver straight away the AC branch does not converge, while the BC one easily converged. If I remove the NK solver, both converge. The same has happened on the L3 grid (restart from converged L2 results). . Here you can see the residuals for the L2 grid (either the case, he outcome is the same). ![CommitsComparison_RMSRho_Grid2](https://github.com/user-attachments/assets/479a0145-dd53-456e-a41d-686037011052). No strange behaviors of Mach number and nu_tilde have been seen on converged solutions. On not-converged ones, instead, the problem is right at the symmetry planes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2379576753:54,log,logarithm,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2379576753,1,['log'],['logarithm']
Testability,If someone could also run the regression tests (or at least the HB tests) on a mac that would be even better (maybe you did this already @sravya91?)!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271092271:41,test,tests,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271092271,2,['test'],['tests']
Testability,If there are no major comments I would add a testcase and merge this for the next release (and address any post mortem comments as they appear).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-783228807:45,test,testcase,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-783228807,1,['test'],['testcase']
Testability,If this has no influence on the test values then we should change these cases I would say.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518279551:32,test,test,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518279551,1,['test'],['test']
Testability,"If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Out of curiosity, do you use the windowing feature to discard a few initial time steps?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627509834:31,test,test,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627509834,1,['test'],['test']
Testability,If you could submit the fix and a small testcase to use as regression it would be great.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274#issuecomment-2098592035:40,test,testcase,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274#issuecomment-2098592035,1,['test'],['testcase']
Testability,"If you do some tests in your own fork of SU2 using travis, remember to change the recipients of the notifications in the .travis.yml :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210392182:15,test,tests,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210392182,1,['test'],['tests']
Testability,If you don't provide the files for us to replicate your problem the best I can tell you is to look at TestCases/sliding_interface/supersonic_vortex_shedding,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1594#issuecomment-1088556978:102,Test,TestCases,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/1594#issuecomment-1088556978,1,['Test'],['TestCases']
Testability,"If you look at the testing history, commit 4f5f3ed doesn't pass the regression tests, while commit 8551cac does. Only two tests are failing on 4f5f3ed: `discadj_topol_optim` and `discadj_fsi_airfoil`. The difference between the two commits is a simple change. I changed the `SU2_MPI::Error` routine to give a return status of `EXIT_FAILURE` instead of `0`. Since `0` is conventionally defined as a successful program exit, returning `EXIT_FAILURE` makes more sense than returning `0` when `SU2_MPI::Error` is called. So why did that change cause the regression tests to fail? My suspicion is that these two tests have been exiting with an error for some time, but these regressions were not picked up by Travis since SU2 kept on returning `0` (i.e. success). Changing the exit code of `SU2_MPI::Error` doesn't cause any errors, but it will expose errors that are (sometimes silently) occurring. @pcarruscag I think you added these tests. Any idea why they're failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-462951152:19,test,testing,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-462951152,12,['test'],"['testing', 'tests']"
Testability,"If you type ""git log"", is this the first message you see?; ```; commit 3f9402f499dfba9b5a7f633fda1e452e48722e40; Merge: c0867da 4f9bc2f; Author: Jessie Lauzon <jtlau@users.noreply.github.com>; Date: Fri Mar 6 13:52:14 2020 -0800; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600843376:17,log,log,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600843376,1,['log'],['log']
Testability,Ignore this PR. Just for testing ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/742#issuecomment-514566021:25,test,testing,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/742#issuecomment-514566021,1,['test'],['testing']
Testability,Impressive! Can you share some info on your implementation? What about the CFL values and the computational time?. One more thing: in another PR (if I recall correctly it was the one for the dimensionless limits to SST) you mentioned the VFE2 test-case. Do you have access to shareable CAD files and meshes?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2380723033:243,test,test-case,243,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2380723033,1,['test'],['test-case']
Testability,"In my case I need to build like this:; ```; export CC=mpicc.mpich; export CXX=mpicxx.mpich; export CXXFLAGS=""-march=native -funroll-loops -ffast-math -fno-finite-math-only"". ./meson.py build --optimization=2 --warnlevel=3 -Denable-tests=true --prefix=$PWD/build -Dcustom-mpi=true -Dwith-omp=true; ./ninja -C build install; ```; Maybe building with OpenMP makes a difference.; The unit test output is; ```; ../UnitTests/Common/toolboxes/ndflattener_tests.cpp:78: FAILED:; REQUIRE( nd3[r][0][0] == 0.7 ); with expansion:; 2.0 == 0.7; ```; valgrind does not pick up anything on the unit test, only on the new test case added in #1892 ; The expected output is as shown in hybrid_regression.py (note that the testcases branch is not develop).; When the UB manifests the residuals are not the expected (by varying orders of magnitude depending on the spurious value of wall roughness).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650:231,test,tests,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650,5,['test'],"['test', 'testcases', 'tests']"
Testability,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:111,test,testcase,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312,1,['test'],['testcase']
Testability,"In some parts of the code it looks like the intention was to allow both modes, see; COutput::SetHistoryFile_Header `if (requestedField == field.outputGroup || (requestedField == fieldIdentifier)){`. In principle you ""just"" need to apply that logic to every use of `requestedHistoryFields`. If would be more difficult to make the screen output know about groups, because it uses the names you give to lookup values directly, whereas the history loops over all available values and checks their group against all groups you give it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978:242,log,logic,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978,1,['log'],['logic']
Testability,"In terms of the how to contribute question, we will not accept the pull request unless it is clean and tested, but you can post not-quite-finished pull requests. However, if all you want is the regression tests, you can do that on your own system using the provided *_regression.py scripts. There are also directions on how to use the travis CI tools within your own fork: https://github.com/su2code/SU2/wiki/Running-Regression-Tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210087118:103,test,tested,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210087118,3,"['Test', 'test']","['Tests', 'tested', 'tests']"
Testability,"In that case maybe add the ramp case as a regression test, or maybe @tbellosta can contribute the diamond test as a regression. As a separate effort, it would still be very nice to write up the M6 results for the V&V page, we can host large files in the SU2 foundations google drive. Having some reference results and settings known to work in that case would be very helpful for new folks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500550485:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500550485,2,['test'],['test']
Testability,"In the first instance I would just try to run the new and original Testcase with just the original config. And from what I can see you need to do the 2 steps mentioned above (Remove `MATH_PROBLEM` and use `SU2_CFD_AD` directly for the adjoint test + use the `no_restart = True` option for the reg test). If nothing else (apart from `Math_Problem` and `restart_sol`) was changed then this should work without an extra `*_adj.cfg`. . In a next step (which is then more of a cosmetic, optional nature) you could strip the comments and unnecessary options from the cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076205105:67,Test,Testcase,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076205105,3,"['Test', 'test']","['Testcase', 'test']"
Testability,In the process of the final merge which involves pulling corresponding TestCase and Tutorial branches into their develops as well. (and changing the travis.yml file),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-545203243:71,Test,TestCase,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-545203243,1,['Test'],['TestCase']
Testability,"Indeed the tutorial.py is not a required test.; Anyway, I am happy I did not break anything. Do you think we can merge this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859564174:41,test,test,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859564174,1,['test'],['test']
Testability,"Interesting that only one of the tests fails - to be honest I was expecting all the turbomachinery tests to fail, does this solve the heap overflow?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034646602:33,test,tests,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034646602,2,['test'],['tests']
Testability,Is it possible to use the Onera M6 mesh that we already have in the repo?; Meshes and restart files are kept in this repo https://github.com/su2code/TestCases/pulls,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545931863:149,Test,TestCases,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545931863,1,['Test'],['TestCases']
Testability,Is there a way to resolve the failing test case. I can't see the proposed changes affecting that particular test case but can look into it if needed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2163#issuecomment-1816662783:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/2163#issuecomment-1816662783,2,['test'],['test']
Testability,It can be checked with SU2 Quick Start Test case NACA 0012 airfoil. ; Paraview (.vtu) output for flow and surface is perfectly fine but Tecplot (.szplt) create erroneous data in 3rd dimension for this 2D case.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-770719442:39,Test,Test,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-770719442,1,['Test'],['Test']
Testability,"It is a bit of a cultural thing. People who want robust bits write more.; Some people wire less. At the bank I once worked at, unit tests were required for every module.; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1453,test,testing,1453,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623648419:33,test,tested,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419,2,"['log', 'test']","['log', 'tested']"
Testability,"It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2095,test,testing,2095,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability,"It is now merged indeed. I dit not work in that branch and I did not have the time to test it on several machines...so I suggest you to checkout the develop branch (not the master) and make a clean build. If things are not improved, I'm afraid that you will have to set the paths manually again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349972232:86,test,test,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349972232,1,['test'],['test']
Testability,"It looks like all the tests are finally working. However, the `directdiff_euler_py` output variables are written in the wrong order. It looks like this comes from `SU2/eval/gradients.py`:. ```python; # initialize gradients; func_keys = list(su2io.grad_names_map.keys()); func_keys = ['VARIABLE'] + func_keys; ```. My guess is that there was some assumption that dictionary keys have an inherent order. Now, should the test be doing a diff of the text output, or should it really be checking the numerical values?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-339951861:22,test,tests,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-339951861,2,['test'],"['test', 'tests']"
Testability,It looks like changes have gone through for driver_structure.hpp and driver_structure.cpp. I am not sure how to remove the previous commits that failed. It also appears a .hpp got placed in the src directory that needs to be removed. Preconditioning is called automatically for HB cases in this setup. The current HB regression test may therefore be sufficient. If preconditioning should be an option in the cfg file instead I will leave open to discussion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-332057827:328,test,test,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-332057827,1,['test'],['test']
Testability,It looks like our regression tests are failing during the compilation of TecIO on the Travis system (they use pretty standard Ubuntu builds). @ScottImlay: could you please take a look at the build errors when you have some time?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-414158109:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-414158109,1,['test'],['tests']
Testability,It looks like replacing autotools is fairly straightforward - while I'm at it I'll go ahead and remove the .in and .m4f files from the repo. ; I'll push that up to this branch once I test it on my own system - however I will only have tested this on an ubuntu system so it would be good to double check it on a different OS.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426472369:183,test,test,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426472369,2,['test'],"['test', 'tested']"
Testability,"It looks like the edge mass fluxes are not stored when running compressible RANS simulations, preventing any species convection when using BOUNDED_SCALAR. I'm looking into why this happens. Below is the species solution after 10 iterations for the passive_transport_validation test case for the RANS solver and using BOUNDED_SCALAR. The species values specified at the inlet do not progress downstream using the current settings. ![bounded_scalar_compressible](https://github.com/su2code/SU2/assets/38651601/bd86c5cf-fb6b-4f2b-a270-ef48f80dad10)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2107442714:277,test,test,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2107442714,1,['test'],['test']
Testability,It looks like the regression tests fail because there is an additional `------------------------------ Begin Solver -----------------------------; ` at the end of the output of the python wrapper test cases.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-356044234:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-356044234,2,['test'],"['test', 'tests']"
Testability,It looks like you did hit the right button; the tests are running now in https://github.com/su2code/SU2/pull/310,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/308#issuecomment-250350265:48,test,tests,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/308#issuecomment-250350265,1,['test'],['tests']
Testability,"It looks like your example is only converging a couple orders of magnitude, have you tried running it for more iterations or tweaking the settings?; Have you tested this fix on the cases of the related issues? Does this change improve those results?; Have you tested this strategy for curved Euler (slip) walls, which share the implementation with the symmetry plane boundary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1826984093:158,test,tested,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1826984093,2,['test'],['tested']
Testability,"It looks likes my attempts to align the test cases were a failure...tabs :( . I can go through and update those to make it look nice, if everything else looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271#issuecomment-827800839:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827800839,1,['test'],['test']
Testability,"It looks to me that in order to use Python 3.x on your machine, you need to use the command ""python3"", instead of just ""python."" In other words, on your system, the default ""python"" appears to point to Python 2.7, rather than Python 3.x. An easy way to test this is to just type ""python --version"" at your command prompt. If the result is Python 2.7.x, then try typing ""python3 --version""... If this is indeed the case, then try changing the first line of parallel_computation.py from:; `#!/usr/bin/env python`; to:; `#!/usr/bin/env python3`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624211172:253,test,test,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624211172,1,['test'],['test']
Testability,"It turns out using convective BCs drastically changes the global flow pattern. Here you can see a comparison of pressures between a simulation with isothermal wall (top, 300 K) and convective BC (bottom, 300K, 20). Only the BCs in the conical part on the right side are different. Numerical settings and further BCs are identical.; https://github.com/su2code/SU2/assets/42602495/ba378660-ddd3-417c-a75e-f5ab54542697. Here you can see the difference in temperature.; https://github.com/su2code/SU2/assets/42602495/a6fcd09d-a065-46a5-b04a-60052fe35ed4. The difference means, that in one simulation (isothermal wall, top) I get strong, periodic oscillations, while in the other one (with convection) the oscillations are dampened out almost immediately. Is there a SU2 unit test case for the validation of the convective boundary condition I can run?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1568222231:771,test,test,771,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1568222231,1,['test'],['test']
Testability,It would indeed be good to have better coverage in the tests. I have one or two small cases I will add. @MicK7 : do you have a small mixed-element section case (maybe just a small square and cube)? I only seem to have meshes with sections of a single element type.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-513301555:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-513301555,1,['test'],['tests']
Testability,"It would simply take some reorganizing of the test scripts to make one function per case and maybe renaming the `TestCase` class to `RegressionTestCase` or something. For example, I rewrote one of the tests in `serial_regression.py` here: https://github.com/petebachant/SU2/commit/fe0ee432c67540067046fbebf9889660331a6592. Then I could run this with. $ cd TestCases; $ pytest serial_regression.py. the output from which was:. ```; $ pytest serial_regression.py; ======================= test session starts =======================; platform linux -- Python 3.6.3, pytest-3.2.1, py-1.4.34, pluggy-0.4.0; rootdir: /home/pete/SU2/TestCases, inifile:; collected 1 item. serial_regression.py . ====================== warnings summary =======================; serial_regression.py::TestCase; cannot collect test class 'TestCase' because it has a __init__ constructor. -- Docs: http://doc.pytest.org/en/latest/warnings.html; =============== 1 passed, 1 warnings in 92.18 seconds ==================; ```. `pytest` has a bunch of features to control the print output as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342677051:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342677051,13,"['Test', 'test']","['TestCase', 'TestCases', 'test', 'tests']"
Testability,"It's a bit more involved because we want to support ""offline"" mode. But that's what we do with dependencies that we cannot copy due to license restrictions. With that said Nijso has probably fought enough with unit tests for the rest of the year, so if you want to send a pull request our way you are most welcome :); Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380:215,test,tests,215,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380,1,['test'],['tests']
Testability,"It's not required fo initialization. Ok, if it's not going to work in this way let's start a discussion about a proper way to do this. I will create a new PR for just the initialization example and put it in a regression test. Thanks for the feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230:221,test,test,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230,2,['test'],['test']
Testability,"It's probably a small fix, but better if @WallyMaier or @jtneedels look into this and fix it, since they are more capable of setting up the compressible test case for verification/validation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639#issuecomment-1131558712:153,test,test,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639#issuecomment-1131558712,1,['test'],['test']
Testability,"It's running.; A small problem is that I have to change `ubuntu:19.04` to `ubuntu:18.04` and change `libopenmpi3` to `libopenmpi-dev openmpi-bin` in the definition, or it will fail.; ```; ubuntu@main-3:~/main_shared_volume/build_singularity_image/builid_image$ sudo singularity build su2_tensorforce.sif su2_tensorforce.def ; INFO: Starting build...; Getting image source signatures; Skipping fetch of repeat blob sha256:1eecd0e4c2cd8c1f628b81c53a487aae6c8d4140248a8617313cd73079be09c4; Skipping fetch of repeat blob sha256:fac13afdf65bf403945c8d6bee654a26940c5527a9913bdf8daa54b69a49f550; Skipping fetch of repeat blob sha256:0c6dd534ddf18642a5af19c09c2d9744d0d1aa93680995d430b5257b6eed079d; Skipping fetch of repeat blob sha256:854703cff8700dce5b5ff70e54f5d612ab701405bc200a5b10a0213ca9025e50; Copying config sha256:993d5f573a24af19dd6006bc3e6e113bd0c709797dc48676f4f0b5ed456470cc; 2.42 KiB / 2.42 KiB [======================================================] 0s; Writing manifest to image destination; Storing signatures; singularity image-build: relocation error: /lib/x86_64-linux-gnu/libnss_files.so.2: symbol __libc_readline_unlocked version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; FATAL: While performing build: while running engine: exit status 127; ```. My OS is ubuntu 18.04, and OpenMPI version is 2.1.1. I will take a test to see the reason. Once if finishes, I will let you know. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515383478:1360,test,test,1360,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515383478,1,['test'],['test']
Testability,It's what I feared: all SST tests that have inlet BCs are failing. Can it be set up in such a way that we end up with the same inlet boundary condition?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796#issuecomment-1292541506:28,test,tests,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796#issuecomment-1292541506,1,['test'],['tests']
Testability,"Jayant,. Indeed: we want the regression tests to provide “coverage” of the code. In this case, each of your 5 sims runs a slightly modified version of the turbulence model and therefore requires a different test case. Of course, you only need to run each case for a short time and compare with a pre-recorded reference outcome. Best,. Juan. On Sep 10, 2018, at 11:43 AM, Jayant Mukhopadhaya <notifications@github.com<mailto:notifications@github.com>> wrote:. Looking at some of the other pull requests, it seems like if I add a test case to the repository, I should also add it to the regression tests. For this test case, SU2 has to run 5 different simulations. So I am assuming I should write a regression test for each of the simulations. Just wanted to confirm this before I change the regression scripts. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/570#issuecomment-420018434>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxIcgYYorWkbnwu8K9bGHjWlP_sTSks5uZrLYgaJpZM4WSGPb>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-420020260:40,test,tests,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-420020260,6,['test'],"['test', 'tests']"
Testability,"Just FYI: It is also possible to edit title and label after the PR has been merged. The change-log will take these updates into account. I will do that for a couple of older PRs. Nevertheless, make sure to have a proper title and label already while your PR is open.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-551454825:95,log,log,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-551454825,1,['log'],['log']
Testability,Just finished compiling. Test cases are fine now. I had an up-to-date Test Cases repo but my SU2 repo was behind by a commit. Sorry for the false alarm!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72734433:25,Test,Test,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72734433,2,['Test'],['Test']
Testability,"Just keeping the size of the repo on the small side. But go for it if it is better for the test, please use a binary restart instead of csv.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1548003169:91,test,test,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1548003169,1,['test'],['test']
Testability,Just merged the test. Let's get this merged next once it passes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670#issuecomment-511500047:16,test,test,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/670#issuecomment-511500047,1,['test'],['test']
Testability,"LGTM, thanks for updating the booleans. I think you can still add the test case to the PR right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457485924:70,test,test,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457485924,1,['test'],['test']
Testability,LGTM. Just updated with develop and will merge in if the tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/338#issuecomment-264959170:57,test,tests,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/338#issuecomment-264959170,1,['test'],['tests']
Testability,"Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1022,test,testcase,1022,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['test'],['testcase']
Testability,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:522,Test,TestCases,522,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647,2,"['Test', 'test']","['TestCases', 'test']"
Testability,Let's merge this. Thanks to @dkavolis and @pcarruscag for their contributions. Thanks to @TobiKattmann for testing!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557528663:107,test,testing,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557528663,1,['test'],['testing']
Testability,Let’s try to keep it positive here.. @talbring has an interesting point that the tests should show some sensitivity to major changes like the grid deformation not being specified. Can they be made more sensitive to this?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518454391:81,test,tests,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518454391,1,['test'],['tests']
Testability,"Looking at some of the other pull requests, it seems like if I add a test case to the repository, I should also add it to the regression tests. For this test case, SU2 has to run 5 different simulations. So I am assuming I should write a regression test for each of the simulations. . Just wanted to confirm this before I change the regression scripts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-420018434:69,test,test,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-420018434,4,['test'],"['test', 'tests']"
Testability,"Looks good to me now. If the regression test go through, it can be merged in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576#issuecomment-425256907:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/576#issuecomment-425256907,1,['test'],['test']
Testability,"Looks good to me! I just tested your branch on my system and it works. I'll delete my branch. While we're here, are there additional changes that need to be made for openblas (along the lines of what are mentioned in issue #991), or is that an ArchLinux issue, only?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/998#issuecomment-632818720:25,test,tested,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/998#issuecomment-632818720,1,['test'],['tested']
Testability,"Looks good to me, Daniel. Merging this in. I'll be in touch shortly about test cases. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/221#issuecomment-171112852:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/221#issuecomment-171112852,1,['test'],['test']
Testability,"Looks good to me, seems like the regression tests are OK now (including post pro). Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267006027:44,test,tests,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267006027,1,['test'],['tests']
Testability,"Looks good to me. Thanks for adding the test, Daniel. Merging this in now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-178112129:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-178112129,1,['test'],['test']
Testability,"Looks good, thanks for looking into this @arubino. . I think that it's fine to start a pull request with this branch if you've made the changes you wanted - it'll fix the regression test for now, and until we find a way to test for similar errors we can try to remember to skim through log files even if there's a friendly green check-mark.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252534574:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252534574,3,"['log', 'test']","['log', 'test']"
Testability,"Looks like the commented code was added here (https://github.com/su2code/SU2/commit/b5db893bcc57a67abbbe43ddd5a87753ec61d23b) but never activated. The Matrix* routines are not being used anywhere at the moment. Do you see some value in testing it out? Otherwise, might be best to remove so we aren't carrying around dead code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653#issuecomment-485039016:236,test,testing,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/653#issuecomment-485039016,1,['test'],['testing']
Testability,"Looks like the stator was just the intermittent hybrid AD problem that is being worked on.; As for the nozzle... it did not have an objective function specified, therefore it must have been defaulting to drag, which was zero because MARKER_MONITORING was empty, now you added something to monitor and puff, results changed. So before the case was not testing anything :shrug: you have my blessing to do whatever you want, check if the new adjoints make some sense and update (good samaritan option), or blindly update, or don't modify the case, or delete it, up to you :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574:351,test,testing,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574,1,['test'],['testing']
Testability,"Made some progress on this. The build system now automatically finds the Python directories and library, so the wrapper is now built against both Python 2.7 and 3.6 in the test suite. However, some tests are still failing. Any ideas what might be going wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-326741839:172,test,test,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-326741839,2,['test'],"['test', 'tests']"
Testability,"Made the last of the changes that I wanted too in connection to the comments provided by @economon and @pcarruscag . Just as a review of the things I changed: . 1) Changed the error message; 2) Implemented the UQ methodology for a non-ideal fluid and for both gradient methods (AvgGrad and AvgCorrectedGrad). ; 3) generalized the eigen-decomposition functions for order n matrices. Also made the functions static so that they can be used without the need for an instantiation of the CNumerics class; 4) Improved performance by moving variable declarations to the class constructor for CNumerics; 5) Changed UQ config option names to be more specific. Added an output message for when people use the previous names.; 6) This instigated some changes to the TestCases config files, and to the compute_uncertainty.py script.; 7) Some general code clean up. Let me know if there are any other improvements that I should include.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-434551782:755,Test,TestCases,755,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-434551782,1,['Test'],['TestCases']
Testability,Make sure to copy all files from the test case repository to the TestCases folder. Please reopen this issue if this has not been resolved with that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/388#issuecomment-308374771:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/388#issuecomment-308374771,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Mate... I graduated from the school of ""out of the scope of"" with honors ok... You and I know that is just code for ""I'll leave it for someone else"".; Just cut and past the parts of the implementation that are exactly the same as another scheme into a function instead of copying, and given that other NEMO schemes have Jacobians that is probably something you should look into re-using.; You also clicked the box for having added a testcase but I don't see anything, why don't you add the testcase for the pictures and plots you showed? That is the only way for anything in this code to continue working... It's good work, it went into a paper, make it reproducible.; These are the contribution guidelines https://su2code.github.io/docs_v7/Style-Guide/ they may not always make things easier for authors, but they make it easier for the people coming after them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765:433,test,testcase,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765,4,['test'],['testcase']
Testability,"Maybe instead of adding a new one, we can modify an existing one to check that feature. Or we add a new one and remove an existing one. We have to somehow reduce the number of tests ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515453841:176,test,tests,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515453841,1,['test'],['tests']
Testability,"Merge and push is simpler I think, and with that the reviewers have the option of only seeing the new commits.; Thanks for the changes, we'll merge once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800:157,test,tests,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800,2,['test'],['tests']
Testability,Merging this to allow all tests to run so we can create a release tomorrow (there is a fix in this branch for compilation with gcc 5.3.0 so this should be part of the release). Happy to make post mortem changes if needed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1107#issuecomment-736680160:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-736680160,1,['test'],['tests']
Testability,"Merging. FYI: the time out issues with the regression tests were solved by forcing a flush of the print buffer after each test case result. Python 3 was buffering too long in some cases, leading to time outs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/517#issuecomment-377863784:54,test,tests,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/517#issuecomment-377863784,2,['test'],"['test', 'tests']"
Testability,Modify one of the testcases to exercise this please (even if we don't have a way to check it is doing the right thing).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1080434485:18,test,testcases,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1080434485,1,['test'],['testcases']
Testability,"More likely to be due to compiler differences, yes please take the values from the github tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-977255994:90,test,tests,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-977255994,1,['test'],['tests']
Testability,"More to come on your questions above, but a quick note to say that we're nearly finished with adding new regression tests for the Python scripts in a separate branch. We will merge those in soon, so that you can more effectively test your modifications.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-200952423:116,test,tests,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-200952423,2,['test'],"['test', 'tests']"
Testability,Mpi4 is not compatible with the version of pastix we support.; And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-894776414:138,Test,TestCases,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894776414,1,['Test'],['TestCases']
Testability,"My apologies for the long delay. I did notice this bug after updating to the latest version. Using the following files and the `euler/oneram6/mesh_ONERAM6_inv_ffd.su2` mesh from the test cases: . [run_polar_template.sh.txt](https://github.com/su2code/SU2/files/2160777/run_polar_template.sh.txt); [polarCtrl.in.txt](https://github.com/su2code/SU2/files/2160761/polarCtrl.in.txt); [base_cfg.cfg.txt](https://github.com/su2code/SU2/files/2160762/base_cfg.cfg.txt). With the current version of `compute_polar.py`, if lines 285 on are comment in `base_cfg.cfg` then the script will fail. Adding the fix I describe above solves the issue. Further issues: the moment outputs in lines 458 and 459 are inconsistent with the headers defined in line 332. The ordering of the `z` and `y` moment are reversed. Also, the `x` moment is currently assigned to the `z` moment in the result structure in line 443.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/545#issuecomment-402270185:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/545#issuecomment-402270185,1,['test'],['test']
Testability,"My guess is that the direction of the unit normal and unit tangent are not relevant, because we always use them for things like `(v.n)n` and so the sign cancels. But please go ahead and test with the opposite sign.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1728#issuecomment-1205787055:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/1728#issuecomment-1205787055,1,['test'],['test']
Testability,"My previous post used a linear solver precision of 1E-6. I ran a couple of test cases at near machine precision (a linear solver tolerance of 1E-14) and higher CFL number (CFL=150), with no CFL adaptation. As suggested, I used ILU+FGMRES. I capped the maximum number of linear solver iterations at 200, and did not raise any errors if the linear solver stopped at 200 iterations with less than 1E-14. The linear solver didn't exceed 200 iterations for the RANS equations, but it did for the Navier-Stokes equations. Once again, there doesn't appear to be a huge difference. For the flat-plate, the results were almost identical:. ![flat_plate_improved](https://user-images.githubusercontent.com/13340225/35233993-595fe2d4-ff65-11e7-9fd6-4b98f30b4d75.png). For the NACA 0012 airfoil, the current `develop` branch of the code outperformed this pull request:. ![naca0012_improved](https://user-images.githubusercontent.com/13340225/35233983-4f79b380-ff65-11e7-81f4-4b65964acecc.png). I believe overall convergence was similar because the Navier-Stokes solver, not the turbulence-solver, is the limiting factor when it comes to precision. The linear solver always converged on a turbulence solution with high precision in under 50 linear solver iterations. Meanwhile, the linear solver sometimes failed to find a Navier-Stokes solution within 1E-14 even after 200 iterations. The only way to make the Navier-Stokes solver converge to 1E-14 was to use small time steps (CFL ~= 1) at difficult points in the overall convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-359811658:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-359811658,1,['test'],['test']
Testability,"My proposal the other day seems to have put you in quite the mood...; Do you also get a ton of ""-1 converted to unsigned short""? Or is that just me?; I'll see what I can do about the rest. > I do not have access to a Mac, so I didn't test if on OSX. I tried clang 6 and clang 10, and had to stupefy the code because of the former, should be ok on Mac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023:234,test,test,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023,1,['test'],['test']
Testability,"NSSolver Vorticity error fixed. RANS Solver starts without crashing, results yet to be benchmarked.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210#issuecomment-1954493813:87,benchmark,benchmarked,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210#issuecomment-1954493813,1,['benchmark'],['benchmarked']
Testability,Next work item: **Hybrid parallel limiter and gradient calculation** This will not involve moving any CSolver files.; I may also do some testing on the element colorings on the structural solver.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824#issuecomment-562651461:137,test,testing,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-562651461,1,['test'],['testing']
Testability,"Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069:92,Test,Testing,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"Nice work, indeed! I just tested it on our cluster (BeeGFS filesystem) and I get similar numbers (writing down from 542s to 6s on 256 cores (16 nodes), unfortunately I couldn't do scaling tests so far because more than half of the cluster is down atm). Furthermore I tested it with the Intel compiler (v2017, OpenMPI) and it seems to work fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284096884:26,test,tested,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284096884,3,['test'],"['tested', 'tests']"
Testability,"Nijso this type of change is too fragile I'm not going to approve it... There are initialization actions inside Run itself, it was not designed or tested to do single steps, and there's no chance this is going to work with all the features. Is this required to be able to initialize the solution? Convert this PR to adding the wrapper example and I'll thing about a better way of doing single steps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802:147,test,tested,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802,1,['test'],['tested']
Testability,No need to dig anymore. And nevermind the failing hybrid regression (it looks like those tests were waiting to be merged to become flaky 😠 ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895019157:89,test,tests,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895019157,1,['test'],['tests']
Testability,"No need to squash, the testcases repo is actually a bit messed up ATM because of that (oooops)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773#issuecomment-787051080:23,test,testcases,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/773#issuecomment-787051080,1,['test'],['testcases']
Testability,"No not really, it is a fairly safe thing to change but it only makes sense to do it if the CFL is also increased. I did not make it default at the time because many cases would change over 2 lines of code...; Maybe it can be done now as part of #790? I can help you with the testcase updates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/711#issuecomment-540995151:275,test,testcase,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/711#issuecomment-540995151,1,['test'],['testcase']
Testability,"No problem at all Francisco. As I said in the mail before, I'll update the; subroutine without using complex variables so that we don't have the issues; with AD and still have a working version of HB. On Fri, Nov 11, 2016 at 10:13 PM, Francisco Palacios <; notifications@github.com> wrote:. > By the way, you are doing a great job with the HB. And, sorry to comment; > out your subroutine. I'm using #ifdef CHECK_AD (line 3670, driver; > structure.cpp). For the time being, I have also commented out the; > regression test.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/pull/325#issuecomment-260104666, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIPv43Yc0PSQdW37_iQbnxcUFWwuQks5q9Vj_gaJpZM4KjG5K; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-260167823:518,test,test,518,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-260167823,1,['test'],['test']
Testability,"No problem at all about the notifications. It was a nice reminder for the community, :). As you said, it looks like the tests are passing. Are there other things you would like to add to the implementation, or is the existing pull request ready for review?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210676722:120,test,tests,120,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210676722,1,['test'],['tests']
Testability,"No problem at all. I think the issue was that others had merged the changes into develop here from the web interface and those changes needed to be pulled down into your local copy before you could push the changes to .travis.yml up. I have just made the change, and I see the tests are now running! We'll get back with a review soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435170261:277,test,tests,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435170261,1,['test'],['tests']
Testability,"No problem.; I rebased my test branch on last develop version to run a first pass of test (see [travis page](https://travis-ci.org/gbaty/SU2/builds/135385229)). If there are no syntax error, I will push this rebased version here to allow you to continue tests as you suggest.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-223806983:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-223806983,3,['test'],"['test', 'tests']"
Testability,"No regression tests are affected, so we have no test that uses this model? Can you add a test for this as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352#issuecomment-2347308935:14,test,tests,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352#issuecomment-2347308935,3,['test'],"['test', 'tests']"
Testability,"No worries, glad to hear it works (I admit I did not test).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1075#issuecomment-771542614:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075#issuecomment-771542614,1,['test'],['test']
Testability,"No, I think we're all set. I am going to merge this in. We have two issues that we are going to be clearing up very soon: the ONERA M6 adjoint case that is failing somewhat irregularly, and a reorganization of the test cases/config files to make the regression tests more effective (in particular for pull requests). Thanks for fixing the conflicts!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-127486074:214,test,test,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-127486074,4,['test'],"['test', 'tests']"
Testability,"No, your assumption of calling `swig` manually is not the cause why I've opened this issue (though, admittedly, ""compile SU2 in `$SU2_HOME` first"" – for getting the required libraries done – might sound confusing). Trying to be utterly relevant, I only replicated that part of the compilation process (yes, would-be with `--enable-PY_WRAPPER`) where one can explicitly debug the issue (please, have a look at the environment variables substituted by the `configure` script after `#` or post your `objdump -p _pysu2.so`, and/or `nm -u _pysu2.so` as also from the `config.log`/`Makefile` your `CXX`, `pySU2_CC_FLAGS`, `PY_INCLUDE`, `SO_LINK_FLAGS`, `SWIG_SO_REAL`, `SWIG_WRAP_REAL`, and `pySU2_LD_FLAGS` to compare the correct arguments). The docs had been definitely read before opening the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404905415:570,log,log,570,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404905415,1,['log'],['log']
Testability,"Not sure if it's preferable, but I changed the environment to use the latest available Python 3, rather than 3.6, and the tests still pass with Python 3.7.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-443684684:122,test,tests,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-443684684,1,['test'],['tests']
Testability,"Now that you have running examples it would be extremely important to add them as regressions tests, so that you can ensure that changes coming from develop do not break the code.; Please turn on the GitHub notifications because it seems you have missed quite a few of the comments on your pull requests...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1100897513:94,test,tests,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1100897513,1,['test'],['tests']
Testability,Now the tests are fine. Can I merge?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743107420:8,test,tests,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743107420,1,['test'],['tests']
Testability,Now you need to set the environment variables to pickup mutation in this script https://github.com/su2code/Docker-Builds/blob/master/test/runTests.sh via PR to the Docker-Builds repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935#issuecomment-1444822483:133,test,test,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935#issuecomment-1444822483,1,['test'],['test']
Testability,"No… I can’t. I’m sorry. Great to hear from you. Machine learning is a very valuable research work and I will add it as a feature branch. . Removing code from the main release is a complex task and, as in the past, I have taken tough decisions. Anyway, to maintain a clean code is critical for its growing, it is like trimming a large tree. Basic criteria to maintain forever an implementation on the develop->master branch are: - Clear benefit to the CFD community (more accurate, robust, etc.) - Existing community of users or active developers - Minimal code documentation (at least the options should be in the config file). - Easy to install and use. - The implementation style should be aligned with the SU2 style - Regressions tests. Best,; Francisco. > On Oct 28, 2015, at 11:35 PM, Brendan Tracey notifications@github.com wrote:; > ; > Could you leave in the machine learning section a bit longer?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/208#issuecomment-152095697.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152384158:733,test,tests,733,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152384158,2,['test'],['tests']
Testability,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272,10,['test'],"['test', 'tests']"
Testability,"OK this looks to have solved the merge issues, thanks again @bigfooted @jblueh. Still to do is include the testcase I showed in the developer meetings and update the regression tests due to the bug fix in the mixing plane.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349#issuecomment-2329452107:107,test,testcase,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349#issuecomment-2329452107,2,['test'],"['testcase', 'tests']"
Testability,"OK, I think I did some progress regarding this issue. After you read this, please [Compare](https://github.com/FoamScience/SU2/compare/master...FoamScience:feature_self_reg_classes) the master and the feature branches. ## Design Idea. - We need to register a child class to a map stored in a factory class; obviously, well before construction time.; - The static variables to the rescue: Associate a static variable to the class and call the registration function when initializing the static variable. done!. ## Work Status. > I'm using ""Inviscid Bump in the Channel"" case for testing. 1. I had to make some changes to the building options; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:578,test,testing,578,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957,1,['test'],['testing']
Testability,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-575310823:419,test,testcases,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823,6,['test'],"['testcases', 'tests']"
Testability,"Oh and let's please discuss the plan for modifying the code in one of the developer meetings.; It would be good to start just with the options that are in the code and clean them up to avoid duplication, which would probably give some clues for how to handle new options without duplicating anything.; To do this safely we should have unit tests for each of the source terms (because I doubt we have full coverage in the regressions for all turbulence options).; etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264:340,test,tests,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264,1,['test'],['tests']
Testability,"Oh, and please consider adding a contribution to the V&V page (to also add a regression test for the new model).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1315752478:88,test,test,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1315752478,1,['test'],['test']
Testability,Ok I will now try to run two main test cases I have. But there were no conflicting files after the last commit so I do not think there should be any issue.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743391777:34,test,test,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743391777,1,['test'],['test']
Testability,"Ok one issue out of the way.; After reading your first post again, it is a bit suspicious that the iteration time is ""exactly"" the same, can you post the preprocessing part of the output for:; 16 cores on one node; 16 total cores on 2 nodes (8+8); 8 cores on one node.; If b)==c) you are running identical simulations on each node (i.e. not distributing over nodes).; If a)==b) can you test the scalability with fewer cores (2 on one node Vs 1+1).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593073686:386,test,test,386,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593073686,1,['test'],['test']
Testability,"Ok, I think I managed to add it to the ComputeWallDistance function. I tested it on a 2D cylinder and it works just fine. However, when I use it on a profile with a sharp trailing edge it gives me strange results on the region behind the TE. Cylinder:; ![Normal_x](https://user-images.githubusercontent.com/43813346/221260200-f2699578-8817-4121-84ac-48aa836ab78c.png); ![Normal_y](https://user-images.githubusercontent.com/43813346/221260446-9080adc6-d14f-4e7f-887f-5a25f7077598.png). Profile:; ![Normal_x](https://user-images.githubusercontent.com/43813346/221260869-95104194-2afc-431b-9c67-160ddbabc8c1.png); ![Normal_y](https://user-images.githubusercontent.com/43813346/221260885-9299aeed-5c05-4d43-8540-70913bbaf489.png). I guess it is intrinsic within the computation of the wall distances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1444212265:71,test,tested,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1444212265,1,['test'],['tested']
Testability,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:132,test,test,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788,10,"['Test', 'test']","['Testcases', 'Testcases-test', 'test', 'tests']"
Testability,"Ok, I think the mesh file issue may have been due to the file system. The mesh file issue happened when I ran the simulation across three nodes on the cluster I was using. I tested on a single high memory node instead and the issue went away. It looks like problem solved! . The drag objective also seems to be working. One thing I noticed is that GNORM and OBJFUN values are not being listed in the output for each design as they were in the single point optimization. I'm not sure what that's about, but the drag values are decreasing!. Thanks again for the responses!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912#issuecomment-609554540:174,test,tested,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-609554540,1,['test'],['tested']
Testability,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754686447:78,Test,TestCases,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447,4,"['ASSERT', 'Test', 'log']","['ASSERTION', 'TestCases', 'log']"
Testability,"Ok, I will prepare a test case. I will take the Mach=0.1 case from the tutorial and change it slightly. Now the coupling between fluid and structure occurs after 100 steps, I will just couple them immediately. ; The only issue with #902 I see at the moment is with the file fsi_computation.py. The others are in separate folders so they should not create conflicts...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443,1,['test'],['test']
Testability,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:1037,test,tests,1037,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844,1,['test'],['tests']
Testability,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601077460:46,test,tests,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460,3,"['log', 'test']","['log', 'tests']"
Testability,"Ok, the issue is that the inlet values in SST tend to decay very quickly (as you can find in the literature https://turbmodels.larc.nasa.gov/sst.html) so far as I can tell we are adding the right amount of TKE to the flow and turbulence solver inlets.; However, in the turbulence solver this is destroyed immediately (note that destruction is proportional to TKE) and so TKE at the inlet nodes is not TKE_Inf.; Effectively this means we put too much energy into the flow, which is not matched by the turbulence solver due to the immediate decay, and therefore static temperature appears high, and Mach number low.; E.g. we put 10 + 0.1 into the flow solver inlet, and 0.1 into the turbulence solver, but this 0.1 decays to 0.01 right away. Then, when we compute the temperature for this inlet node we have 10 + 0.1 total energy (which does not decay in the flow solver since it does not have destruction terms) from which we subtract the decayed 0.01 from the turbulence solver and end up with 10.09 instead of 10. I tested this by turning on the SST sustaining terms, which prevent decay below freestream values, and I got the right Mach number. So what we could do is use the TKE from the turbulence solver in the flow solver inlets, instead of the freestream TKE which the turbulence solver is not guaranteed to sustain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508:1017,test,tested,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508,1,['test'],['tested']
Testability,"Ok, the remaining FAILED test I had after the change mentioned above was fea_fsi/StatBeam_3d. I broke down the issue to my changes to Gauss_Elimination in matrix_structure. The major change in terms of a difference is exchanging ; weight = block[..]/block[..]; against; reciproque=1.0f/block[..] ; weight = block[..] * reciproque; which is of course faster as it removes some costly divisions.; I changed algorithms several time and introduced finally quad-precision for my changes (which are now not faster any more, but for sure more accurate than the original one).; The deviations through all my tests are; Res[Displx] +- 0.000049, Res[Disply] +- 0.000133, Res[Displz] 0.000010 and CFEM +- 0.; The threshold for passing is 0.000010 and exceeded for x and y direction.; I am pretty convinced that the threshold should be raised in that test as rounding errors introduce a large difference than the threshold.; Regards, Josef",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276305741:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276305741,3,['test'],"['test', 'tests']"
Testability,"Ok, the tests are passing for this one now after the fix from the other PR. Anything else you would like to add? Otherwise, let's review and merge this next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-378134342:8,test,tests,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-378134342,1,['test'],['tests']
Testability,"Ok. I don't think [these](https://github.com/su2code/SU2/pull/774/commits/e632133eded5edab7ff04f0979334c25c0f44ff8) changes are over-complicated. But I'm fine with changing the index saving procedure everywhere. There'd be just some work to do (we would have to adapt everything for the FEA elasticity solvers and all the variables they need as well)... so it's also a question of time, testing and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542206395:387,test,testing,387,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542206395,1,['test'],['testing']
Testability,"Ok. I will do it as soon as possible. . With kind regards,. Jairo. > On Jan 30, 2019, at 14:13, Thomas D. Economon <notifications@github.com> wrote:; > ; > @economon approved this pull request.; > ; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; > Just one request: I have adjusted the number of iterations for the regression test and updated the residual values in the python script. I also had to move around some files. Can you please run the case (to convergence) and verify that the results are what you expect? Note that the config file and target Cp are in the code repository and the mesh and solution file are in the testcases repository. If everything looks ok, then this is ready to be merged.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459029239:333,test,test,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459029239,2,['test'],"['test', 'testcases']"
Testability,"Ok. Unless there's significant differences in any of the other regression test cases, then this PR looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-598288334:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-598288334,1,['test'],['test']
Testability,Okay good news is the recompelling is good. looking forward to do some tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2326#issuecomment-2236107976:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/2326#issuecomment-2236107976,1,['test'],['tests']
Testability,Okay the regression tests are all finally passing! ; Can you advise on what to do about the CodeQL alerts? Any other comments or suggestions in general?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1378164143:20,test,tests,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1378164143,1,['test'],['tests']
Testability,"Okay, all tests should be passing (except some random new codefactor issues). Main issue with the GY models hanging is disambiguating which matrix of collision integral (omega) values to use, Scalabrin's notation is a bit unclear. Are there other places we need to modify for including electrons? Anything in viscous numerics?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1384746569:10,test,tests,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1384746569,1,['test'],['tests']
Testability,"Okok, I may also try to update gcc. The only issue is that it is on a server so I should do it locally and it may take a bit more time. I will test the merge and then, with more time, update gcc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743139863:143,test,test,143,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743139863,1,['test'],['test']
Testability,"On both questions the answer is yes. Option 1 can be implemented right now but will require the creation of temporary objects. Option 2 can directly forward the data to the blas routines. The tool I am developing is no tool for a specific linear algebra package. The idea is, that the tool parses the header files of the library. The user has then to define which objects are active lvalues and the derivatives for each operation in the library. For small an clear interfaces this is no problem and works already quite good. For large libraries like Eigen I adopted a whitelisting approach. That is, every function needs to be manually whitelisted to trigger the expression generation of the tool. In a prototype way I have also implemented an approach where only the active lvalues need to be defined and the tool looks then for all required functions and other objects that depend on these active objects. Long story short, the tool is designed to handle ""any"" library. It is even possible to mix several libraries together. My current status on this project is, that I am now through with the parsing of the header files and the generation of the expressions. This works quite well for Eigen which is a hardcore testcase, since every possible programming tweak in C++ is used here. The next step is to add the AD part to the expression generation process. I hope that in one or two month this will be finished and I can provide a first beta release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463561018:1215,test,testcase,1215,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463561018,2,['test'],['testcase']
Testability,"On it, I've disabled the Jacobian contributions in my branch. Initial tests look primising, but I'll need a longer-running test to validate it on my case. Will update once the case has finished.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1644093214:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1644093214,2,['test'],"['test', 'tests']"
Testability,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:517,Test,TestCases,517,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686,1,['Test'],['TestCases']
Testability,"Only one regtest fails - it's a slight difference from the reference value on one test, if no one objects I'll update the TestCases repo with updated reference values. (Holding off on that for now so that I don't break others' regtests in the mean time)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336#issuecomment-263457730:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/336#issuecomment-263457730,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:9,test,testcases,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670,2,['test'],['testcases']
Testability,"Our proposed changes implicitly include 2 modifications to current code: ; The first is the modification of the lower limit such that it should be relative to a reference value. The rational for this is that a single given hard coded number cannot be correct for possible all flow regimes. Moreover, even running the same case in dimensional and non dimensional form, will lead to different behaviour of the lower limit. The proposed solution therefore is defining a limit relative to reference values, namely:; k_low_limit = C_k * K_infinity; w_low_limit = C_w * W_infinity. This change will inevitably cause changes to current behaviour (as can be seen in test case results), but we believe it is more correct. . The second, is giving the user control over C_k and C_w and the choice of the default value. As mentioned above, the behaviour of the proposed default value will inevitably be different than the existing one. Even if we choose default values that will lead to similar values to those existing for a certain case this would not be true for other cases. Therefore no default value can be given to reconstruct the current solver behaviour. ; The values suggested as default are not the most correct per se, but rather robust suggestions based on experience and are open to discussion. Optimal default values of different cases, say external and internal flows are expected to be different, this is why we felt it important to allow user control of the lower limit. . We emphasise that the solution used in SU2 of applying a lower limit to turbulence variables in order keep the solution positive is somewhat artificial, and future features we are working on should minimize the need for such a treatment, however, as long as this is the solution implemented, we believe that the proposed change is more correct, leading to more robust behaviour.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2230214740:658,test,test,658,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2230214740,1,['test'],['test']
Testability,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:335,test,tests,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042,1,['test'],['tests']
Testability,"Pedro, ; I cherry-picked your your commit [c2018c8](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) and tested it with my configuration. Looks good so far, I haven't see any issues / problems on my side. Thank you very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1595#issuecomment-1094677121:147,test,tested,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1595#issuecomment-1094677121,1,['test'],['tested']
Testability,Please check and update the regression tests before merging.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2156417920:39,test,tests,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2156417920,1,['test'],['tests']
Testability,"Please give this a more descriptive title, they show up in the change log of each version",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1643#issuecomment-1133774189:70,log,log,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1643#issuecomment-1133774189,1,['log'],['log']
Testability,"Please re-check with latest commit (very small correction for a copy-and-paste-error from yesterday, not sure whether it has had some impact). I've run your test case again and I had a closer look at the interface which in fact looks alright (it's maybe just that thermal conductivities are so different that zones appear to be separated but aren't.. ?). ![temp_profile](https://user-images.githubusercontent.com/22639394/70803014-5889d180-1db3-11ea-8e6b-ef7f95a9466a.png). By the way: You can easily increase the CFL number to 1000 in both zones. You get a fully converged solution after a few hundred iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838#issuecomment-565438939:157,test,test,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565438939,1,['test'],['test']
Testability,"Please try again and let me know, this did not happen locally or in the test machines",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1873#issuecomment-1372524438:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/1873#issuecomment-1372524438,1,['test'],['test']
Testability,"Quick scaling tests show major improvements with the new output for reading and writing of restart files. See attached. . Tim, have you been testing with Intel compilers? I ran into an issue with Intel compilers on one cluster with the restarts, and I want to see if it was an isolated incident. If all looks good, we'll merge in soon. . ![output_performance](https://cloud.githubusercontent.com/assets/4896083/23535771/5d47d730-ff75-11e6-9be0-8e9542093bc1.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-283846632:14,test,tests,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-283846632,2,['test'],"['testing', 'tests']"
Testability,"Quite a lot I think, boundary conditions, numerics, fixing the tests I broke.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1844#issuecomment-1362870397:63,test,tests,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1844#issuecomment-1362870397,1,['test'],['tests']
Testability,RESTART_FILENAME and SOLUTION_FILENAME are the same and this test is run both in serial and parallel_regression.py; That means that whichever test runs first overwrites the restart file used by the other.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2156726074:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2156726074,2,['test'],['test']
Testability,"Reopening after chatting with @oleburghardt . I merged develop (which I hopefully made no mistakes in as there were quite some conflicts).; Left todo is imo (beyond possible further comments, possible failing tests etc): ; - adding a testcase that at best serves as a verification/sanity check (the expected results of course have to be documented for a possible future redo). I'll see what i'll find; - take a second look at the cfg option consolidation for good measure. I would prefer if this PR would not tackle the CFVMScalarSolver thing, but a first WIP-PR into that direction will come to a github repository near you soon ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944:209,test,tests,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944,2,['test'],"['testcase', 'tests']"
Testability,"Request you to please confirm that the ""2 failing checks"" (regression tests) are unrelated to this pull request. The failing checks were for; ""TestCases/fea_fsi/Airfoil_RBF"" and ""TestCases/py_wrapper/disc_adj_fea/flow_load_sens"". Hope we do not have to do anything here in this branch. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1803265185:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1803265185,3,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Residuals changed in testcase transonic_rotor_2D, I do not know why since it uses FGMRES and in that method I only changed the allocation.; I ran the case to convergence and [compared](https://github.com/su2code/SU2/files/2871054/transonic_stator_2D.zip) the output, everything matches so I updated the residuals.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-464221279:21,test,testcase,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-464221279,1,['test'],['testcase']
Testability,"Ruben,. We were just waiting for the new python regression tests before pulling this into develop. Everything looks good now, so I'll go ahead and merge. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/248#issuecomment-204588716:59,test,tests,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/248#issuecomment-204588716,1,['test'],['tests']
Testability,"SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.tx",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3247,test,tested,3247,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['test'],['tested']
Testability,"SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a simple test like this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:1774,Test,Test,1774,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,3,"['Test', 'test']","['Test', 'test']"
Testability,"SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1799,test,testing,1799,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['test'],['testing']
Testability,"Samet,. Great to hear from you again. Thanks for submitting your work! Did you ever have a chance to try the NREL Phase VI wind turbine blade? This could be a good 3D test case, and I believe we have a grid or two lying around... Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257380761:167,test,test,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257380761,1,['test'],['test']
Testability,"See #1197, it should be straightforward regarding the tractions, but the FSI boolean has implications in other areas of the fluid solver. I need help testing as I don't feel like deep diving into the python guts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778601816:150,test,testing,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778601816,1,['test'],['testing']
Testability,"Should we use the branching methodology that we use for the SU2 repository? In the sense that we create a develop branch, create branches for any cases we want to add, submit pull requests that can be reviewed by the rest of the community etc. . I like the idea from @bigfooted, of having some regression testing that can run the simulation for a couple of iterations and check residuals (identical to what we do for the TestCases). This might be redundant to the actual regression tests that are done in SU2, but would be an easy first check on weather a particular validation case needs to be run again. Ideally, this would be run before any major version releases, as we discussed earlier. . I can also start working on creating a section on the website for the results of the validation cases. I'll eventually upload a sample validation case with corresponding results that people can model their efforts on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426808018:305,test,testing,305,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426808018,3,"['Test', 'test']","['TestCases', 'testing', 'tests']"
Testability,"Similar to what @talbring mentions above, my guess is that it is having trouble opening a new file, which results in ierr != MPI_SUCCESS and trying to close the file again here:. https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_CFD/src/output/filewriter/CParallelFileWriter.cpp#L223. Can you try to comment out that line and run it again? That section of code is checking whether there are already files with the same name on the system and deleting them before writing a fresh copy. . Ideally, we would catch that ierr and check the error code from within MPI, since it might be a different issue entirely that is not allowing it to open new files. You can use something like the following to report the error (pseudo code - did not test):. ```; char err_string[MPI_MAX_ERROR_STRING];; int size_err_string, err_class;; MPI_Error_class(ierr, &err_class);; MPI_Error_string(err_class, err_string, &size_err_string);; cout << err_string << endl;; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-644882758:766,test,test,766,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644882758,1,['test'],['test']
Testability,"Since we are already touching the Xcode topic here, has anyone tested the xcode backend in meson (with `--backend=xcode` in the meson call)? Maybe we can remove all this xcode stuff that we have currently in the repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994#issuecomment-631682024:63,test,tested,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631682024,1,['test'],['tested']
Testability,"Since we're trying not to clog Travis, Is there a way to prevent Travis from running the regression tests on every push to a branch that is in the PR process?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762#issuecomment-525853193:100,test,tests,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/762#issuecomment-525853193,1,['test'],['tests']
Testability,"So I have setup Travis to test both Python versions, but I need to learn a little bit more about automake to setup the `pySU2` Makefile properly to build against the active Python environment. Hopefully getting closer...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-323047764:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-323047764,2,['test'],['test']
Testability,"So I tested the convergence on a couple of test cases, to see its behavior. I used the following three different preconditioner/linear solver combinations:. + LU SGS with FGMRES; + ILU with FGMRES; + ILU with BCGSTAB. I looked at three different test cases from the repo: the zero-pressure gradient flat-plate turbulent boundary layer, the NACA 0012 airfoil, and the RAE 2822. In each case, I ran without a restart file. For the flat plate and the NACA 0012, I used adaptive CFL and no multigrid. For the RAE 2822, I used constant CFL and multigrid. I looked at both the number of iterations of the linear solver (the inner iterations) and the overall convergence over time (the outer iterations). Here's some sample results and discussion:. For the flat-plate boundary layer, there was no noticeable difference between the develop branch and the fix:; ![flat_plate_ilu](https://user-images.githubusercontent.com/13340225/35281464-92d4da84-0018-11e8-9460-ae4672be6f44.png). For the NACA 0012, the linear solver converged in a similar number of iterations. Its hard to tell which outperformed the other due to different CFL numbers. The residual in turbulent kinetic energy did lag in the middle, but both cases converged in a similar number of outer iterations.; ![naca0012_ilu](https://user-images.githubusercontent.com/13340225/35281471-9aa05a40-0018-11e8-8abe-e31ddd058679.png). For the RAE 2822, the overall convergence was identical (same number of outer iterations). The linear solvers also converged in a similar number of iterations.; ![rae2822_ilu](https://user-images.githubusercontent.com/13340225/35281495-addf0d7c-0018-11e8-96c0-6599e3cfa5e5.png). ### Conclusion; There doesn't seem to be any large difference in the convergence with or without the fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-358401929:5,test,tested,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-358401929,3,['test'],"['test', 'tested']"
Testability,"So I tested this on 4 mesh levels for a NACA0006 at 2.0 degrees AoA, at low (0.6) and high-ish (0.8) Mach number (Roe scheme).; These are the results for low Mach:; ![image](https://user-images.githubusercontent.com/38071223/61968547-3b08c680-afd0-11e9-8aae-9705a9441a00.png); Very small differences between recomputing a mass flux based on primitives (""Reconstructed"") or storing the flux computed during discretization of convection (""Consistent"").; However, the convergence rate for the latter approach is much worse:; ![image](https://user-images.githubusercontent.com/38071223/61968712-99ce4000-afd0-11e9-9c31-dafd7e26e3fb.png); Which makes sense because we are going from a Gauss-Seidel coupling of flow and turbulence to a half GS, half Jacobi (since the turbulence source terms were still computed with current velocity gradients).; After seeing this I only ran one mesh level (second to finest) at high Mach number and again differences were very small and convergence worse.; Some memory would indeed be saved in the discrete adjoint through the reduction of the number of pre-accumulation input variables, but only 30MB out of almost 9GB for a 2D case without MG. In summary the current approach seems to strike a good balance between accuracy, cost, and simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721#issuecomment-515535554:5,test,tested,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/721#issuecomment-515535554,2,['test'],['tested']
Testability,"So I tried adding the molecular and turbulent diffusion of turbulent kinetic energy in the total energy equation. It did not appear to fix this issue. At this point though, it's unclear exactly what the problem really is. I don't have ""correct"" pressure, turbulent kinetic energy, or total energy fields for the NACA 0012 or RAE 2822 test cases. By ""correct,"" I mean DNS or experimental data. The lack of ""correct"" data makes it hard to tell where the problems may actually be occurring. Is it coming from total energy? Resolved kinetic energy? Turbulent kinetic energy? All we're doing right now is comparing SST to SA, and one code's SST to another code's SST. That makes it hard to figure out what the correct answer really should be. Unless we have a problem that both 1) exhibits this problem, and 2) has high-quality pressure, temperature, total energy, or turbulent kinetic energy fields, then I agree that manufactured solutions is might be the best way to check ""correctness.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-571730661:334,test,test,334,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-571730661,1,['test'],['test']
Testability,"So I want to update the `transonic_stator_2D` test case with a new restart file that matches the new numerics. Since it's a transonic case, the difference in production is significant. But what was the stopping criteria used while generating the restart file in [TestCases/turbomachinery/transonic_stator_2D](https://github.com/su2code/TestCases/tree/develop/turbomachinery/transonic_stator_2D)? Was it the same stopping criteria used in the [non-restart cfg file](https://github.com/su2code/SU2/blob/master/TestCases/turbomachinery/transonic_stator_2D/transonic_stator.cfg)? For that case, the solver stops at 2001 external iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670#issuecomment-501739120:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/670#issuecomment-501739120,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"So I've changed the CHT test case to have a higher tolerance for errors, and I've merged in the changes from PR #570. Everything looks ready to go. On a side note, I've noticed that SU2 has some internal inconsistencies with the viscous/turbulent stresses. Some new options, such as QCR, SST UQ, and wall functions, have been added to the stress tensor definition over the past two years. But there's still some parts of the code, such as `CNSSolver::BC_Isothermal_Wall` and `CSourceIncAxisymmetric_Flow::ComputeResidual` where those changes aren't reflected. The stress tensor is still defined the old way. Is this intentional? Or was it an oversight?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-456790919:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-456790919,1,['test'],['test']
Testability,So does this solve the random behavior of the flat plate test case ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/316#issuecomment-253168845:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/316#issuecomment-253168845,1,['test'],['test']
Testability,So far I run the turb_oneram case with different number of points. There the chances made up to around 15% reduction of CPU time used. Currently I'm changing the MatrixVectorProduct for that case and find another 15% reduction. I will update this branch if there is a chance that that work is not wasted. Line 230: In the nicf/LS89 testcase the MPI and sequential code gives different results. The only reason is that line. I discussed that with Tom in #347,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-320643155:332,test,testcase,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-320643155,1,['test'],['testcase']
Testability,"So you mean I should run the tests to convergence, and compare the results between branches? I wonder why compilation problems could be the culprit, as the tests fail both locally and in the github test. Shouldn't the github test always be compiled the same way?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1659010514:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1659010514,4,['test'],"['test', 'tests']"
Testability,"So, the two boundary conditions currently implemented in this branch are:. Standard SU2 BCs ; $k_{\infty} = (3.0/2.0) * (U_{\infty} * TI_{\infty})^2$; $w_{\infty} = \rho_{\infty} * k_{\infty} / (\mu_{lam,\infty} * ViscRatio)$; $ViscRatio_{default} = 10.0$; $TI_{\infty, default} = 5.0$. NASA TMR BCs for SST1994 and SST 2003 model; $U_{\infty}/L \leq w_{\infty} \leq 10 U_{\infty}/L$; $10^{-5}U_{\infty}^2/Re_{L} \leq k_{\infty} \leq 10^{-1}U_{\infty}^2/Re_{L}$. where ""L is the approximate length of the computational domain,"" and the combination of the two farfield values should yield a freestream turbulent viscosity between $10^{-5}$ and $10^{-2}$ times freestream laminar viscosity, as cited on the NASA TMR page. They give very different values of k and w at the farfield. For example, for a the standard test case of the SWBLI with $ViscRatio = 0.01$ and $TI_{\infty} = 5.0$:. Standard SU2 BCs ; $k_{\infty} = 2574.55$ $m^2/s^2$ and $w_{\infty} = 3e10$ $s^{-1}$. NASA TMR BCs; $k_{\infty} = 0.0013$ $m^2/s^2$ and $w_{\infty} = 1563$ $s^{-1}$. I assume that in the end it doesn't matter since the farfield values drop significantly in the standard version of SST.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2324337003:812,test,test,812,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2324337003,1,['test'],['test']
Testability,"Some additional comments:; - There are a lot of duplicated routines now, because they look the same for compressible/incompressible. These will be eventually moved to the CSolver. We have also plans for modifing the MPI routines in the solvers to make them more generic.; - I cannot make sure that some features that are currently not tested in Travis still work. For example things like Harmonic Balance for incompressible flows (in case it was working before). We should find out whats working and whats not so that we can maybe throw appropriate error messages.; - It might have happened that I accidentally did something wrong during the merge. Maybe I reverted some cosmetic changes that do not affect the solution ... If you see something, let me know. So I request **ALL** of you to have a look at the solver structure. But keep in mind that just looking at the diff might be confusing as it is not showing all changes correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-257236302:335,test,tested,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-257236302,1,['test'],['tested']
Testability,"Some additional ideas on this topic:. #### Using Github projects; - For compilation of branches, I have created a github project: https://github.com/su2code/SU2/projects/7; - In there, you can list your active/old branches by adding a note to the relevant column. Please be so kind to mark the name of the branch in bold using Markdown's format (`** my branch name **`).; - I have added some examples from my own branches. #### Where do I find my branches?; - We have all worked on branches that we no longer remember, but Github has a really nice feature for this.; - Log-in to your Github user account and go to: https://github.com/su2code/SU2/branches/yours; - All the branches in which you have added at least one commit will be listed there. #### Old branches; - We have found a lot of branches that are older than the latest release and have no commits ahead of master (you can see this in your branch list).; - This would mean that normally all of their commits have already gone into a released version of SU2 and they are no longer required.; - I am planning to do some cleaning of very old branches to have a more compact structure, however it would be helpful if all the developers could indicate explicitly which branches can be safely removed to avoid any future issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582#issuecomment-423178409:569,Log,Log-in,569,https://su2code.github.io,https://github.com/su2code/SU2/issues/582#issuecomment-423178409,1,['Log'],['Log-in']
Testability,"Some new questions:. **iteritems** ; iteritems is sometime used to iter on dict. ; In py2, it uses less memory than items due to use of iterators instead of returning list of couple (key, value). In py3, items corresponds more or less to iteritems.; There are 3 solutions to fix it:; 1. use only items (right way in py3, more memory consuming); 2. use viewitems (compatible py2.7, not compatible 2.6, not well known attribute); 3. write a check if py2 ... iteritems, if py3 items; In #260 I used the 1st. **lower case class name conflicting with module name**; In code there is is some **init** codes like. ``` python; from ..util.ordered_bunch import OrderedBunch as ordered_bunch; ```. It seems that such imports are not compatible with new py3 import approach. Even I am not absolutly sure that bug come from that point. In all cases, I would suggest to use OrderedBunch instead of alias ordered_bunch every where. Is there a reason explaining this choice ?; I tried in my branch to remove this alias ... hopping nothing is broken. let's wait travis answer. **travis for py3**; Do you plan to add it ?. **how to contribute**; I decided to create a pull request with flag ""DO NOT MERGE"", I did it for these reasons:; - benefit from travis ci; - make it visible; - ease code review and comment directly on code; But with flag ""do not merge"" because it still remains some questions and bugs to be discussed. Is it the right way or do you prefer just a branch on my fork and ask for pull-request only when branch is very clean and tested ?. thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-209932850:1530,test,tested,1530,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-209932850,1,['test'],['tested']
Testability,"Some of the testcases that show as failed need to be updated, if the update is significant for cases with restart files we need a new restart file to match the previous convergence level.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014#issuecomment-1561784033:12,test,testcases,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014#issuecomment-1561784033,1,['test'],['testcases']
Testability,"Some test cases in `parallel_regression.py` use the command `""SU2_CFD""`, as far as I can see there is nothing parallel for these cases. The only difference to putting them in `serial_regression.py` seems to be that they are run by an MPI build. Is that what is supposed to be tested?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1764#issuecomment-1252309408:5,test,test,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/1764#issuecomment-1252309408,2,['test'],"['test', 'tested']"
Testability,Sorry I missed your previous message @talbring.; I imagine this is because of c++11 (which GCC9 might consider by default?); I will test this and come back to you.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516404815:132,test,test,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516404815,1,['test'],['test']
Testability,Sorry for the confusion. I must have mixed something up yesterday - the test case was crashing directly for SU2_CFD_AD when I set MARKER_MONITORING. But now it is working. So I think we can stick to the regression case and the way I set it up. Thanks again for the reviews!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076156224:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076156224,1,['test'],['test']
Testability,"Sorry for the delay. I am fine with the changes! I dont know if @economon has some comments on the results. But I agree with Samet, that we can also let the community apply this to other test cases!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-264186065:187,test,test,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-264186065,1,['test'],['test']
Testability,"Sorry for the late reply, here are some personal opinions. (1) I have also test the turb flatplate and Onera M6 case (Fig1.Original; Fig2.Submit) in the tutorials. The convengence and results also shows just slightly difference. . (2) This PR is not suitable for the euler wall, for the wall is not always a straight plane and singular points do not statisfy the condition for the normal direction is hard to define. (3) Well, I have noticed the BC_Sym_Plane before, but it is very puzzling to me that only the closed point to the vertex on the sym wall is considered to add additional negative normal flux contribution. Maybe the mesh is unstructured and more than one point out of wall is linked to the vortex. Maybe the closed point is not normal to the wall while it always occurs on the 3D sym plane such as the ONERA M6 wing case. (4) This PR is to add a limitation of the velocity on the sym wall, just like what we do to the turb walls in the CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh). The fix is only available for the SYMMETRY wall and in the implicit iteration, just to avoid uncertainty and potential instability.; `; CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh); : CTurbSolver(geometry, config, true) {; ...... /*--- Initialize lower and upper limits---*/; lowerlimit[0] = 1.0e-10;; upperlimit[0] = 1.0e10;. lowerlimit[1] = 1.0e-4;; upperlimit[1] = 1.0e15;; `; ![untitled](https://github.com/su2code/SU2/assets/58663453/f5b5f543-3476-45d6-9477-94c7deeca9aa); ![untitled](https://github.com/su2code/SU2/assets/58663453/c6ecbdc5-0636-4880-a315-05c8636c27bb)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458,1,['test'],['test']
Testability,Sorry to be a pain but can you keep the PR's separate? If you need a combined branch for testing create a third branch for the time being.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1327733326:89,test,testing,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1327733326,1,['test'],['testing']
Testability,"Sounds good, if the cases are run using the regression I will keep as 7.1.1. I guess this begs the questions of should we be carrying test cases that dont run with the most recent version of the code?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271#issuecomment-827821262:134,test,test,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827821262,1,['test'],['test']
Testability,"Sounds good. I implemented the endian test a little differently than the website you linked, so no worries there, and now with your consent to use the ByteSwap() function, this PR is ready to go. . I will wait for another review.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414157987:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414157987,1,['test'],['test']
Testability,"Sounds good. Initially it would be enough to have some unit tests that would already show how to setup the network, together with documentation / example of the file format. Applications can come after. Some initial comments:; Please move the files to toolboxes/ and ideally use a namespace for the new classes.; Start the class names with C as we do, e.g. CIOMap. Then, how large are the models you've used so far? and how important is performance to this feature? (Just so I know how much to comment on that)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1247824519:60,test,tests,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1247824519,1,['test'],['tests']
Testability,"Status update: Wally ran a Mach 20 cylinder test case with AIR-7 model using SU2_NONEQ and results looked good. I need to check everything works with MPP air-7, and regressions need to be updated. Once confirmed/updated I think we can merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1416402263:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1416402263,1,['test'],['test']
Testability,"Still testing this at scale and expect a couple small changes still, just fyi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-514256159:6,test,testing,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-514256159,1,['test'],['testing']
Testability,"Sure @bigfooted , This is a recent work by Dr. Nishikawa. Actually there are very few unstructured grid limiters in practice, Barth-Jespersen, Venkatakrishnan and its modifications, Michalek-Gooch (most of them are already implemented in SU2). I just saw the details and thought of implementing it. Also to note, it is tailored for vertex centered schemes not cell centered scheme, hence is apt for SU2. In original paper he showed tests with few inviscid cases. Recently He has revealed that it has been implemented in NASA CFD codes. ; Few things - 1- It is certainly less dissipative in comparison to VK 2- Convergence are similar. Rp limiters may take moderate number of more iterations (being less dissipative). 3- Convergence attributes also depends on many other settings - starting CFL, CFL ramping, convective schemes used etc. Sometimes all will stall.; Overall it's encouraging to try and make use of it in more and more cases. I tried it on multiple cases and got converged results (and yes Rp is comparitively less dissipative to Venkat limiter).; I will update the theory part and add the ramp case....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649:432,test,tests,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649,1,['test'],['tests']
Testability,"Symmetry has been improved, if you could re test it would be great. Re-open if you still see the same issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-2282813386:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-2282813386,1,['test'],['test']
Testability,"TO DO: add testcase with 2 symmetry planes (laminar flow around sphere, slice)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-2244583354:11,test,testcase,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-2244583354,1,['test'],['testcase']
Testability,"Test case discadj_fea is failing due to a change of residuals (the derivatives are the same up to the displayed precision), the change in residuals is smaller than that caused by running on 2 cores rather than serial. Further investigation needed nevertheless.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/592#issuecomment-426818152:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/592#issuecomment-426818152,1,['Test'],['Test']
Testability,"Test cases added,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210#issuecomment-1946439715:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210#issuecomment-1946439715,1,['Test'],['Test']
Testability,"TestCases repo is used for large files that are used in regression tests.; Then we have the tutorials repo for tutorial files (mesh + configs) and we also exercise those in regressions.; If this is too large for either of the above it should go into V&V, I guess that is how it was used for the paper?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2018876371:0,Test,TestCases,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2018876371,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Tests are passing, so if there are no further comments I'll merge this one in. I'll further tackle driver generalisation in PRs to come.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638#issuecomment-460218066:0,Test,Tests,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/638#issuecomment-460218066,1,['Test'],['Tests']
Testability,"Tests are passing, so this wasn't covered. I will make sure it's covered via the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/897#issuecomment-594013467:0,Test,Tests,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/897#issuecomment-594013467,1,['Test'],['Tests']
Testability,"Text always moves between the images for some reason ... euler oneram6 14cores; ![sloweuler_oneram6](https://user-images.githubusercontent.com/31306376/65078336-18c27200-d99d-11e9-9d5c-5e38df4f9803.gif). euler channel 14cores; ![sloweuler_channel](https://user-images.githubusercontent.com/31306376/65078374-2a0b7e80-d99d-11e9-8860-23e48399873b.gif); Hi @pcarruscag (and everyone else of course :) ), Here some selected convergence rate comparisons with of this PR with develop. I also compared results all of those case side by side and the differences (I used contour line positions for most of it) are pretty subtle. Most of the times I double checked that I didn't load the same flow.vtk. At shocks it was a bit more visible especially close the wall but one has to really zoom in for it. Concerning lift / drag coefficient which are written on screen the difference was below 1% throughout the cases I looked at. Some cases were tested with different amount of cores with no mentionable deviance in Residuals. inc ns bend 2cores; ![incns_bend](https://user-images.githubusercontent.com/31306376/65078454-50c9b500-d99d-11e9-8be2-4ea1cb397c14.gif). inc euler nozzle 4cores; ![inceuler_nozzle](https://user-images.githubusercontent.com/31306376/65078420-3ee81200-d99d-11e9-83b3-cd8d301a5771.gif). euler wedge 14cores; ![euler_wedge](https://user-images.githubusercontent.com/31306376/65078443-49a2a700-d99d-11e9-9110-03dd278d742f.gif)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532401028:934,test,tested,934,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532401028,1,['test'],['tested']
Testability,"Thank can be just due to compilation differences.; Take those two cases and run them until convergence, e.g. 6 orders drop in residuals, then compare the results and if they converge in a similar number of iterations.; If all looks the same we can update the reference values in the test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1658594626:283,test,test,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1658594626,1,['test'],['test']
Testability,"Thank you ; Yes we plan on contributing more, this commit was more of a test run just to understand the process. ; I added Dr Yair Mor Yossef and myself as Authors, per your request.; However I do not see a button anywhere that says merge pull request (even before changing Authors.md)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221017129:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221017129,1,['test'],['test']
Testability,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,14,['test'],"['test', 'tested']"
Testability,"Thank you @pcarruscag and @kursatyurt for your comments and suggestions! I hope that I understood and applied them as intended, if not, please let me know. This is all new to me and because I'm still learning C++, it took me a few extra commits but now all tests seem to pass :) Have a good weekend!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617:257,test,tests,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617,2,['test'],['tests']
Testability,"Thank you @pcarruscag. I have placed a link to a testcase. I have updated the title, because it looks like it is not a general problem.; By the way, can I visualize the partitions in paraview?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767#issuecomment-1256137341:49,test,testcase,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767#issuecomment-1256137341,1,['test'],['testcase']
Testability,"Thank you @tollennaert, I added a few notes but if you don't have time we can take care of it after this is merged (I understand that your project is finished).; Regarding the testcase, ideally add it to TestCases/deformation (making it a regression, preferably in parallel_regression.py) and if possible use one of the existing grids (this should be easier than having to add a mesh file to the TestCases repo).; Finally it would be great if you could add a little more info on the options and how to use them, either in config_template or in the new testcase you add.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701:176,test,testcase,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701,4,"['Test', 'test']","['TestCases', 'testcase']"
Testability,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:94,log,log,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891,1,['log'],['log']
Testability,"Thank you all for the review and comments. I've added a test case with this pull request for a pitching airfoil. The config is in the main repository and the mesh is added in the TestCases repository with the same branch name. Can both pleased be merged in together? Also about the tutorial request, I'll have a go at writing one in a feature branch of the website repository.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-526666570:56,test,test,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-526666570,2,"['Test', 'test']","['TestCases', 'test']"
Testability,Thank you all.; I will test the installation with the test suite now.; Feel free to close the thread. Cheers,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785797319:23,test,test,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785797319,2,['test'],['test']
Testability,Thank you for adding a regression.; Why do you need both a restart_flow.dat and a solution_flow.dat file in Testcases? We should try to keep that repo small.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1195#issuecomment-779912487:108,Test,Testcases,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779912487,1,['Test'],['Testcases']
Testability,"Thank you for bringing this back. The testcase was passing on #753 alone, so that should not be the problem, I'll have a look.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542148416:38,test,testcase,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542148416,1,['test'],['testcase']
Testability,"Thank you for digging into the code.; This is one of the obscure features in SU2 that the currently active developers have little knowledge about.; I looked around the repo and I think we don't even have an example, do you think you can help setup one?; The function you modified seems to be the right place, it would be great if you could open a PR with the fix and a small testcase (~20k elements) that we can then use to get some test coverage of this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607#issuecomment-1100008161:375,test,testcase,375,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607#issuecomment-1100008161,2,['test'],"['test', 'testcase']"
Testability,Thank you for having a look @MicK7.; Allowing multizone cgns based on the MULTIZONE_MESH option sounds reasonable but I did not want to remove the error without testing. Do you (or @ChristianBauerEng) have a multizone cgns we can use to test this?; I don't think we should add more config options.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073214095:161,test,testing,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073214095,2,['test'],"['test', 'testing']"
Testability,"Thank you for investigating the issue, please open a pull request with the fix.; You have not provided a case to reproduce the issue. So it's difficult for someone else to test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005#issuecomment-1498896405:172,test,test,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005#issuecomment-1498896405,1,['test'],['test']
Testability,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:17,test,testing,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020,1,['test'],['testing']
Testability,"Thank you for rebasing.. indeed, we're in the middle of cleaning up a few things in the regressions at the moment, but I hope we can pull in your Python 3 contributions very soon. We may kick off the tests again here once we get things sorted. Thanks for your patience,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-223123510:200,test,tests,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-223123510,1,['test'],['tests']
Testability,"Thank you for submitting this pull request. ; Please modify this to be based off and merged into the develop branch, rather than the master branch. The travis system will then automatically run the regression tests, and we can proceed from there. . Just a question: what effect does this have in windows 64 bit versions? It looks like this would only effect windows 32 bit, is that correct?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331#issuecomment-261654684:209,test,tests,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/331#issuecomment-261654684,1,['test'],['tests']
Testability,"Thank you for the careful scrutiny. The input in su2 is turbulence intensity, which is defined as u'/U. Instead of changing the 40 turbulence testcases that use turbulence intensity, I suggest we change the one testcase that uses the turbulence intensity percentage 100*u'/U (the T3A flat plate). For what it's worth: openfoam uses turbulence intensity u'/U and ANSYS Fluent uses 100*u'/U, so both notations are used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267#issuecomment-971682682:142,test,testcases,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971682682,2,['test'],"['testcase', 'testcases']"
Testability,"Thank you for the changes.; I would say a test case is always welcome. You can simply modify an existing one, this feature is orthogonal to everything else, and then please add the new options to the config_template (with maybe the nice explanation you have in CConfig).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781,2,['test'],['test']
Testability,"Thank you for the detective work @yiren6 :+1: ; We may need to consider changing the extension for OSX or create a symbolic link during the installation process.; @patelha57 can you try the solution that yieren6 found?. As for the crash, I realize now that you are using the branch from PR #1300, it looks like that memory leak was fixed by @aa-g here https://github.com/su2code/SU2/commit/b2ddd9666b76b80ce5ce485b58dc5f97a27420b8 (at least that line 558 changed).; When using code from a pull request you can have a look at the regression tests https://github.com/su2code/SU2/pull/1300 (bottom of the page) to get an idea if some issues might still be work in progress.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106869636:540,test,tests,540,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106869636,1,['test'],['tests']
Testability,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:105,test,tests,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039,2,['test'],['tests']
Testability,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:119,test,testcases,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807,2,['test'],['testcases']
Testability,"Thank you for the review @rsanfer.; I put the extra comments and ""centralized constants"" in the code.; Everything relating to the incompressible neo-Hookean material has been deleted, let me know if it was too much.; I'll put a testcase together with a healthy mix of elements, probably next week.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-495321715:228,test,testcase,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-495321715,1,['test'],['testcase']
Testability,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:193,test,test,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,6,['test'],"['test', 'testcase', 'testcases']"
Testability,"Thank you for your question.; The geometry files are stored in a separate repository, su2code/Testcases; due to repository memory limitations. The file structure is the same, so; when you check out the test cases repository into the same folder you will; get the necessary files in the right places.; To test whether the installation worked immediately, you can run the; quickstart tutorial which includes the geometry file already. Details on this, and other information you will likely find useful are also; available on the wiki of the github repository:; https://github.com/su2code/SU2/wiki/Download. Cheers,; Heather. On Fri, Jan 8, 2016 at 3:51 PM, alexp1729 notifications@github.com wrote:. > All the TestCases seem broken when I try to run SU2 41 compiled from; > source When I run the serial_regressionpy and parallel_regressionpy; > scripts, I get error messages like; > ; > There is no geometry file (GetnZone))!; > ; > and mesh files like mesh_ONERAM6_turb_hexa_43008su2 appear to be missing; > When I copy one of these from a 40 sample directory (where everything; > worked) and rerun the test case manually by typing something like; > ; > mpirun -n 2 /mit/su2_v41/bin/SU2_CFD config_CFDcfg; > ; > it works Something seems to be missing that generates the mesh files but; > I'm no SU2 expert, I just install it for the real users Thanks for any help; > ; > ```; > Alex; > ```; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/222. ## . Heather Kline; NASA Space Technology Research Fellow; PhD Candidate, Aeronautics & Astronautics, Stanford University; BS Aerospace Engineering, Rensselaer Polytechnic Institute; kline.hl@gmail.com, hlkline@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-170169063:94,Test,Testcases,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-170169063,5,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"Thank you very much @petebachant . Again I rebased this result (your pull request merged) on last develop version to be up to date and have a cleaner git history tree. The result is here : [gbaty/SU2/py2_and_py3_support_rebased_on_develop_20170821](https://github.com/gbaty/SU2/tree/py2_and_py3_support_rebased_on_develop_20170821). We now need to double check all changes. I am afraid to have lost a small part of your work that is why I have created a new branch. All you work is in py2_and_py3_support. Doing a pr on develop allow to see easily all py2 to py3 changes. **This branch is not tested** and done quickly. Do **not** trust it directly, I need to continue to work on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323837479:593,test,tested,593,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323837479,1,['test'],['tested']
Testability,"Thank you, that looks like the build system is doing something weird, unfortunately I don't have a machine with windows to test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-999475401:123,test,test,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-999475401,1,['test'],['test']
Testability,Thanks @TobiKattmann and @WallyMaier for testing!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-894820999:41,test,testing,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-894820999,1,['test'],['testing']
Testability,Thanks @TobiKattmann for that fix and going through the hassle of changing all the reg. test values.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537108499:88,test,test,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537108499,1,['test'],['test']
Testability,"Thanks @TobiKattmann, nice catch! Can you please put a pull request with the required changes? That way I can also do some tests myself and we can move the discussion there. @economon As far as I know, there is no multizone-multiinstance case running as of now. I think @arubino worked on multizone harmonic-balance, but I don't think it has yet been adapted to the new instance index. Am I right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568#issuecomment-416935622:123,test,tests,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/568#issuecomment-416935622,1,['test'],['tests']
Testability,"Thanks @TobiKattmann. Binaries using MPI are now also build and attached to the release. I need some help in testing them, so please if you have 2 mins, download the one appropriate for your machine from the current draft release and try to run them on your machine. If you have done so, let me know the OS and the MPI version (even in case it works!).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557025420:109,test,testing,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557025420,1,['test'],['testing']
Testability,"Thanks @clarkpede . I will merge it. We can talk more about regressions tests in another topic. Best,. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-390437324:72,test,tests,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-390437324,1,['test'],['tests']
Testability,Thanks @clarkpede for setting this up! I will add some tests by myself and see how its gonna work out.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-579140739:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-579140739,1,['test'],['tests']
Testability,"Thanks @clarkpede to take the initiative for this topic. I think unit-tests are a useful thing and we should think about having it in addition to the regression tests. Regarding the framework I am actually a little bit hesitant to use boost. Although we are already using it for tecio, in that case it is used in a part of the code which does not change frequently so it is fine if we are just shipping it. However, if we start introducing it into the actual development process people may want to use more and more features of boost and we will have a hard time maintaining versions, compatbilities and so on. And in my opinion we should keep it as simple and lightweight as possible (one of our biggest strengths is the simple compilation/installation, which actually attracts a lot of users). So in that regard Catch2 looks like a better candidat to me. But I am happy to hear more opinions on that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500226914:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500226914,4,['test'],['tests']
Testability,Thanks @economon .... @aeroamit : Can you please check the values of the blunt body test case? I think the test case you added failed. Best.; Eduardo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-460093192:84,test,test,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-460093192,2,['test'],['test']
Testability,"Thanks @economon for the fix, this is a small one, if there are no further comments I'll get it merged when the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/637#issuecomment-460937949:112,test,tests,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/637#issuecomment-460937949,1,['test'],['tests']
Testability,"Thanks @fpalacios , that would be great. I've merged with develop and fixed some conflicts, the tests are running right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-398427777:96,test,tests,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-398427777,1,['test'],['tests']
Testability,Thanks @jtneedels for doing some testing. I think we saw some issues with the aerodynamic coefficient computations...but the pressure distributions looked good. This looks good to me. Ill leave it to @FlorianDm or @pcarruscag to make any final changes or suggestions. Good work y'all!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-740338383:33,test,testing,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740338383,1,['test'],['testing']
Testability,Thanks @kursatyurt submodules are fixed here https://github.com/su2code/SU2/commit/8b89e857ff72782b0caccc3f63385c03bc67f6f7; If you can do the other fixes and hook up the regression test it would be great,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1843828431:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1843828431,1,['test'],['test']
Testability,Thanks @maxaehle 💐. Not sure how this will interact with scalar solvers (species transport) to come ... but in case someone there wants to work with sliding interfaces then I guess one has to test that a priori,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901:192,test,test,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901,1,['test'],['test']
Testability,"Thanks @pcarruscag , it looks like standard regression tests are passed without any problem, and ARM tests are problematic, as always.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1844115496:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1844115496,2,['test'],['tests']
Testability,Thanks @pcarruscag and @TobiKattmann ! I will add the testcase and some small things in a new PR!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-865654846:54,test,testcase,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-865654846,1,['test'],['testcase']
Testability,"Thanks @pcarruscag for making this PR a lot better. @bigfooted @danielmayer @mheimgartner ; To layout future steps as discussed after this merge: ; 1. Merge these changes into feature_flamelet (and then feature_multicomp). Therefore the `CScalar*` things that are currently present in these branches will be renamed to CLegacyScalar* to not overwrite files. This has the advantage that those branches are kept up-to-date with develop.; 2. Implement a rudimentary (passive) CSpeciesSolver (specifically does not contain multicomponent mixing from #1332 ) and merge that. Finding a good (validation) Testcase would be great here.; 3. Extend the CSpeciesSolver by #1332 mixing models. Either by cutting away all the flamelet specific parts or by porting the additions to a new PR.; 4. Make feature_flamelet switch to the new structure. This is an in-place change as both implementations are then present but just one will be kept. This will shrink the PR size of #1223 by quite a bit . Additionally the heat and radiation solver should be ported into this new structure, but that is independent work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101:598,Test,Testcase,598,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101,1,['Test'],['Testcase']
Testability,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:689,Test,Testcases,689,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083,1,['Test'],['Testcases']
Testability,"Thanks @salvovitale and @talbring. As you know, the main consequence of a better linear solver is that it is possible to increase the CFL number (independently of the spatial discretization). In other words... the benefits are for JST and Roe. By the way, I have found that a fill-in level of 1 is too expensive for 3D problems (great for 2D)... I have reduced the default value from 1 to 0... but feel free to increase the number if you are looking for very large CFL numbers. I think that regression tests are taking too much time and they don't finish on the assigned time... hopefully the change from 1 to 0 fill-in level will resolve the problem, otherwise I'll reduce the time on some of the tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334358362:502,test,tests,502,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334358362,2,['test'],['tests']
Testability,"Thanks @sun5k, the merge conflicts were probably a bit challenging because some files were moved with the other work we were doing on turbulence.; I had a look at the code and it looks like you did a nice job of modernizing the transition implementation :+1: and the verification against Fluent also looks good.; Given that this is an improvement in all directions (better code, feature that works, same amount of code) I encourage you to make the final push so that we can integrate it into develop.; As you see the GitHub tests are failing because of compiler warnings (unused variables and so on, you should be able to see the logs) let me know if you need some help.; Then we need at least one regression test, for example one of the coarser grids in your V&V, and with that we should be able to finish this PR!. After that please consider adding your results to our V&V page https://su2code.github.io/vandv/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757:524,test,tests,524,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757,3,"['log', 'test']","['logs', 'test', 'tests']"
Testability,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621450497:54,log,logs,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497,4,"['log', 'test']","['logs', 'test']"
Testability,"Thanks Francisco for this contribution! Although the FFD Framework is already working quite well, there is still (like always) room for improvement. In fact, I am currently working on using BSplines instead of Bezier curves. I'm going to open a pull request end of this week. But this shouldn't affect this one I hope. Do you have by any chance a simple test case I could use to check this ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330#issuecomment-260475206:354,test,test,354,https://su2code.github.io,https://github.com/su2code/SU2/pull/330#issuecomment-260475206,2,['test'],['test']
Testability,"Thanks Guys,. I have tracked down the problem to the subroutine. void CHBDriver::ComputeHB_Operator() in driver_structure.cpp. if you comment out that subroutine the compilation process works just fine. For the time being, I'm going to comment out that subroutine in the develop branch (and the associated test case) until we have time to find out the issue (I'll create a pull request). HB is an important contribution but, it is also critical to have a code that compiles (AD mode) in a mac platform (which is quite popular in our community). Thanks,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-259849448:306,test,test,306,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-259849448,1,['test'],['test']
Testability,"Thanks Heather,. Could you please take a look at the log_Adjoint.out file generated in the folder DESIGNS/DSN_001/ADJOINT_DRAG/ when you run the single objective-with-multiple-surfaces regression test (in the part whereSU2 specifies the Surface(s) where the force coefficients are evaluated). It seems that the shape optimization python script only copied the first surface to config_CFD.cfg. I found the ""if (n_obj>1):” solution… but, you know better the multi objective implementation. Just let me know if there is another more elegant fix that we can implement. Thanks!; Francisco. > On Mar 25, 2018, at 1:55 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176953697>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > I think that the array of monitored markers is extended to accommodate this situation in config.py (~line 514), and there is a single objective-with-multiple-surfaces regression test; do you have a case you can send me where this wasn't working? Or if you see an issue with that test that I previously missed I wouldn't mind looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#pullrequestreview-106743204>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRva3VNHDjv7H11VnmorjY5pCNlpkks5tiARDgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376016690:196,test,test,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376016690,3,['test'],['test']
Testability,"Thanks Heather,. You are right, there is an uncertainty in the fit that comes from experimental data. I'm going to triple check the number, in particular I'll check the original Sutherland's article, and I'll implement the modification. In particular, I'm very concern about the current difference between SI and US constants... we need to fix that as soon as possible. . Unfortunately, this change is going to affect most of the regression test, I would appreciate some help... I'm not sure anymore about how to update the tests. Thanks,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301#issuecomment-241449304:441,test,test,441,https://su2code.github.io,https://github.com/su2code/SU2/issues/301#issuecomment-241449304,2,['test'],"['test', 'tests']"
Testability,"Thanks Pedro,. If you want I can run this test case also with the Intel performance tools. These usually give some more info what can be improved to obtain better performance. Cheers,. Edwin.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523063269:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523063269,1,['test'],['test']
Testability,Thanks Ruben and all the reviewer for their suggestion/corrections . I did a very last push to fix a minor bug that was causing troubles during the reconstruction of the solution for parallel computation. Waiting for regression tests before merging in...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258884470:228,test,tests,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258884470,1,['test'],['tests']
Testability,"Thanks Ruben, everything looks good to me.; It is a nice clean up and the implementation of the added capabilities is aligned to what we already have, so I don't see any issue with merging this in.; I just had a minor comment but it is just about a coding style preferences.; We can merge this in as soon as the regression tests pass. Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638#issuecomment-459389510:323,test,tests,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/638#issuecomment-459389510,1,['test'],['tests']
Testability,"Thanks Suman,. My suggestion is the following… we have really never performed a detailed test of the CUSP scheme. As far I remember it was a really quick implementation. And it looks to see that you know SU2 and you are ready to contribute … Would it be possible for you to create a pull request with the changes, including a test case? if it is a bug, your change will pay off immediately. Best,; Francisco. > On Jul 12, 2017, at 10:03 PM, SumanVajjala <notifications@github.com> wrote:; > ; > @hlkline <https://github.com/hlkline> Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it.; > ; > Finally, can I now treat that this is a non-issue?; > ; > @fpalacios <https://github.com/fpalacios> @oleburghardt <https://github.com/oleburghardt> @hlkline <https://github.com/hlkline> By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other probable bug I was referring to within SU2 found in CUSP implementation.; > ; > Regards; > Suman; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/405#issuecomment-314971522>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkqESRvP7dcREH5t_PKPioRlkERhks5sNaUSgaJpZM4OKV38>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-315096146:89,test,test,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-315096146,2,['test'],['test']
Testability,"Thanks Tom, actually most of the work was already done in September, lately I've been busy with other stuff and that's why it took so long before this pull request. Regarding the upcoming release of the sliding meshes, before the AIAA, we can surely think about including this one too. ; It still has some limitations, for instance it doesn't work with periodic boundaries, though Antonio and I are working on it in separate branches, but I've tested it for a bunch of different flow configurations and it seems to be quite robust.; Basically, after this pull request the code will be able to carry out computations using an arbitrary number of zones, both Euler/RANS, serial/parallel, using the nearest neighbour approach and the one from Rinaldi. By the way, it doesn't really matter to me if this feature is included in the upcoming release or in the one later, I just would like to have this on the develop so that I don't have to merge and fix conflicts any time the branch gets updated.; So some of the modification I made will be stable and I can move to the next step (the adaptive sliding meshes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389#issuecomment-301007972:444,test,tested,444,https://su2code.github.io,https://github.com/su2code/SU2/pull/389#issuecomment-301007972,1,['test'],['tested']
Testability,"Thanks Tom, what was the problem with the regression test? I'm going to add some other small fixes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-379600546:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-379600546,1,['test'],['test']
Testability,"Thanks a lot Arne,. We will accept the implementation as soon as it pass the regression tests. . And, thanks for the AppVeyor suggestion, we´ll take a look at the software.; If you see any other problem under windows, please do not hesitate to contact us. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-323228322:88,test,tests,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-323228322,1,['test'],['tests']
Testability,"Thanks a lot for your support, @pcarruscag. . I run the other test cases this morning and I noticed there is a very small difference in the sensitivities around the 10th significant figure (in the order of the updates you made on the discrete adjoint airfoil case). Given that the order of magnitude of this difference remains consistent even when extending the simulation, I updated the test values. I leave here the [reference to the previous state](https://github.com/su2code/SU2/commit/654ba3dfc207e25c31da9c09860224ad4044a610) for our records. . If there are no comments against it in the next day or so, I will be merging in this PR next, as it just puts back some functionality that was removed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-543067888:62,test,test,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-543067888,2,['test'],['test']
Testability,"Thanks a lot, @TobiKattmann, for this fix,. I was able to reproduce the error locally as well and the fix makes perfect sense to me. I've only added one small statement:; `config_container[iZone]->SetiInst(INST_0);`; to SU2_SOL in cases with single instance, to enforce that iInst = config->GetiInst() in CBaselineSolver::LoadRestart() receives the correct value. @economon as of now, I think there are no multizone-multiinstance cases available in develop. When that comes through, it would only require an extra loop on iInst and the correct setting of; `config_container[iZone]->SetiInst(iInst);`; in the very same fashion as it is done for harmonic balance (lines 357-380 in SU2_SOL.cpp). Then, inside the LoadRestart routine, the correct container position is read in line 3939 of solver_structure.cpp,; `unsigned short iInst = config->GetiInst();`; and used onwards. . I'll wait until the tests pass for this latest commit and then merge it in by Monday morning if there are no further comments.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572#issuecomment-417633741:895,test,tests,895,https://su2code.github.io,https://github.com/su2code/SU2/pull/572#issuecomment-417633741,1,['test'],['tests']
Testability,"Thanks a lot, Tobi! I did find the file which is the only one has SOLVER=HEAT_EQUATION_FVM before and got an error output in the boundary condition. Your answer told me how to settle the BC error. I will have a try and test it later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527392713:219,test,test,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527392713,1,['test'],['test']
Testability,Thanks already @pcarruscag for the quick suggestions :+1: Let me know if there are more :). 2 linked PR's go with this:; 1. The testases PR needs to be merged before this to make sure the reg tests works (Edit: Done and reg tests work (except hybrid_par_AD...)); 2. The website update (...has more time ;). Otherwise I am happy so far with this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685:128,test,testases,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685,3,['test'],"['testases', 'tests']"
Testability,"Thanks for adding the description, Heather. I think this is a very nice contribution.. we’re working on the regressions and will pull this in once we have everything straightened out (and this branch passes). In the meantime, you got me thinking: the scale, rotate, translate options might be confusing now if a user doesn’t know whether to include the markers or not. Perhaps this is a chance for separating some of the “design” options from “mesh” options. One way I could see us do this is by moving the implementation I had just committed for the “volume” scale, rotate, and translate options over into the SU2_MSH executable, which might be a more logical home for it. However, this would require adding an extra set of config options for reading in a scale/rotate/translate options for SU2_MSH. The nice thing here is that we keep the intent separate, i.e., only design variables are listed with the other design variables while the mesh transformations are elsewhere. A different, possibly simpler way would be to just create separate names for these two types in the list of available options so that there is no ambiguity. Any thoughts?. On Aug 16, 2015, at 9:21 AM, Heather Kline <notifications@github.com<mailto:notifications@github.com>> wrote:. Some illustrative images/output in case my description was hard to understand:; [image]https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png. SU2_DEF output when only ""airfoil"" marker included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:653,log,logical,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,2,['log'],['logical']
Testability,Thanks for adding the tests. Looks good to me! Merging now... Keep up the excellent work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234#issuecomment-179380884:22,test,tests,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/234#issuecomment-179380884,1,['test'],['tests']
Testability,"Thanks for bringing this to our attention. Would you like to submit a pull request with this change? ; It is a little more work on your part [see the developer section of the SU2 github wiki for further instructions], but this way your contribution can be merged in after passing some regression tests, and since this is only a couple of lines to change it is a good way to get used to the pull request system if you haven't used that before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/307#issuecomment-247908956:296,test,tests,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/307#issuecomment-247908956,1,['test'],['tests']
Testability,"Thanks for bringing up this issue. It is interesting... . As Heather mentioned, is there any concern that when writing large files the lack of an endl will cause the buffer to become too large at some point (before the file gets closed and clears the stream automatically)?. Unfortunately, we do not have any regression tests that cover the output files at the moment, so it is difficult to gauge the impact of the changes, although it would be straightforward to add some tests for SU2_CFD and SU2_SOL that diff output files. Have you been able to verify that all CSV, Tecplot/ParaView files, and force breakdown files work appropriately?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223806287:320,test,tests,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223806287,4,['test'],['tests']
Testability,"Thanks for checking that, do you think you can open a PR? Then we can check if it works in our ARM regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159#issuecomment-1799194731:110,test,tests,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159#issuecomment-1799194731,1,['test'],['tests']
Testability,"Thanks for cleaning things up, Salvo. I just fixed up some issues on this pull request due to other activity in develop that was in conflict. I would recommend that you give this new version a try with your own tests when you have a chance. Once the checks pass, we'll merge this into develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207#issuecomment-153229382:211,test,tests,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/207#issuecomment-153229382,1,['test'],['tests']
Testability,"Thanks for digging around on this @clarkpede. I don't expect the original author will be able to chime in, but I would say we can investigate the differences w.r.t. how the tke is included. . I have tested removing it from the total energy definition for some low speed cases while I was debugging, and it had almost no impact. As stated above, we know that including in the mean flow stress tensor does noticeably impact the solution. I have not tried including it in the energy equation. I will reopen this issue, and we can continue the discussion here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548890892:199,test,tested,199,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548890892,1,['test'],['tested']
Testability,"Thanks for finding a way to speed things up.; With regards to the tolerance, it would be preferable to update the test values rather than the tolerance, since especially for changes in the integrated values rather than the residual values, small changes over the small number of iterations could indicate a problem that will grow over time. A very small number of iterations is used in the tests in order to save time for the tests. . Are the changes you quote for the original precision, or for the quad-precision? If the latter, and maybe either way, I would recommend running the case for a larger number of iterations to make sure that there aren't larger differences growing over time that would effect the output, maybe due to some other change in the code that hasn't been identified yet. If you are interested in having your changes included in the code, maybe this discussion should move to a pull request, where folks on the su2 dev team could easily view changes in the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276431901:114,test,test,114,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276431901,3,['test'],"['test', 'tests']"
Testability,"Thanks for finishing up the implementation, @VivaanKhatri! I am looking forward to reviewing this very soon. Do you have a test case to verify things are working? Even just a simple flat plate like in the paper so that we can put it under regression control?. @rsanfer: your comment reminded me about our earlier attempts to fix up the indentation issues on the fix_indentation branch. Do you think this is something we can revive to provide scripts for automatically fixing this issue once and for all? Or do we need to find a different approach?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530#issuecomment-387921905:123,test,test,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/530#issuecomment-387921905,2,['test'],['test']
Testability,"Thanks for fixing this Tim! I compiled on my Mac too and it looks good to; me. I think we can merge it in and remove the flag for HB and include its; regression test. On Fri, Jan 6, 2017 at 5:05 PM, Tim Albring <notifications@github.com>; wrote:. > Forgot to mention it, we checked it already on OSX (we found someone with; > a macbook :)) here and it works. But I would of course appreciate it if; > other people can give it a try!; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/351#issuecomment-270887173>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenIEqrTNWZq2BWLgo_rx7bqiFDkOZCks5rPicRgaJpZM4Lck3G>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-270930783:161,test,test,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-270930783,1,['test'],['test']
Testability,"Thanks for fixing up those conflicts, Daniel. I'm merging this in now, and I'll be in touch directly about getting a test case set up for the new low-Mach correction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-166225640:117,test,test,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-166225640,1,['test'],['test']
Testability,"Thanks for giving it a try but on both machines I get a segfault at roughly the same spot (following the screen output). Unfortunately the stack traces I get are somewhat useless (I literally get `??` on my private machine) and differ between machines so I cannot really say exactly where. At least the the point of failure on both machines is consistent ... that's really weird that the debugger ""bugs out"" here . Tested with your this branch on coupled_cht/incomp_2d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1126#issuecomment-740089364:415,Test,Tested,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126#issuecomment-740089364,1,['Test'],['Tested']
Testability,Thanks for mentioning this. I will deal with this definitely before the release. Maybe I am gonna add a small test case which just reads the config_template.cfg to check whether it is up-to-date.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/772#issuecomment-524737860:110,test,test,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/772#issuecomment-524737860,1,['test'],['test']
Testability,"Thanks for merging Tim, but you did not solve correctly the conflict on parallel_regression.py. We do not test the external FSI coupling for now, so it has to be removed ;). Everything is up to date now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357#issuecomment-272124052:106,test,test,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/357#issuecomment-272124052,1,['test'],['test']
Testability,"Thanks for opening the PR! Is this a work-in-progress? If yes, either use WIP in the title or change it to a draft. . Two other things:. 1. Please add the test case meshes to the develop branch of the TestCase repository, otherwise the regression tests won't find them. I just removed them from the master branch.; 2. Something seems a little bit off here. I don't know why git thinks that a lot the commits are new (although they are already in develop). I guess the reason is that develop has not been merged for a very long time ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1006#issuecomment-635921323:155,test,test,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006#issuecomment-635921323,3,"['Test', 'test']","['TestCase', 'test', 'tests']"
Testability,"Thanks for putting the tests together, David. We'll get this merged asap to ensure that future commits do not break the wrapper. @talbring, when you have a moment, can you please verify that the small changes to preconfigure.py won't hurt anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-239576578:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-239576578,1,['test'],['tests']
Testability,"Thanks for rebases; A couple of notes: ; - the reference to the github issue in the comments may be confusing to others as to which part of that thread is being referenced. To make sure that future developers are aware of import issues, maybe just one line like 'recommended import format compatible with both Python 2.7 and 3', if you feel a comment really is necessary there.; - on the regressions: I know it may seem like small differences, but the fact that they are different with just changes to the python code is very concerning, and in some of the tests the differences are quite large (specifically discadj_euler_py and directidff_euler_py). If they are calling the exact same C++ executables and performing the exact same computations the result should be the same. If this is something going on behind the scenes within the python packages that cannot be avoided, we need to understand what that difference is, and where it is coming from. ; The only explanation I can think of off the top of my head for why the output could be different with only changing python code, is if some function previously imported from a different package is using single-precision instead of double-precision for some arithmetic operation or file io. If what you changed is actually providing GREATER precision that's fantastic, but we need to know for sure either way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-224031436:557,test,tests,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-224031436,1,['test'],['tests']
Testability,"Thanks for reminding me - I am going to switch that now; if my next push passes the tests (in a few minutes, after I test it on my system) I'm fine with merging after that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/342#issuecomment-267195699:84,test,tests,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/342#issuecomment-267195699,2,['test'],"['test', 'tests']"
Testability,"Thanks for spending the time on this, @petebachant. I just fixed a couple of bugs in the python scripts in another PR, but I don't think they will affect this too much. Btw, do you have access to a sizable distributed machine with Python 3+ installed for testing? It would be great to know if this is working in a production environment, while keeping backward compatibility with Python 2+, since it can sometimes be hard to get new Python installations on clusters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321731944:255,test,testing,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321731944,1,['test'],['testing']
Testability,"Thanks for taking a shot at this. Just let us know if you need some help, and I am sure several of us can help with the testing. I can try on multiple systems here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426508949:120,test,testing,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426508949,1,['test'],['testing']
Testability,Thanks for testing :D Now it should work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-520387997:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-520387997,1,['test'],['testing']
Testability,"Thanks for testing 👍 it's only a bit more work, just needs a quick test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073907081:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073907081,4,['test'],"['test', 'testing']"
Testability,"Thanks for testing, part of the NK options is a period where instead of NK we use the normal quasi-Newton approach.; I can't give too much detail on this, but we lack a good startup strategy, ideas from papers on NK approached could be useful even for the normal solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2379637599:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2379637599,1,['test'],['testing']
Testability,"Thanks for testing, we'll put the fix in the new version",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2058#issuecomment-1604941297:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/2058#issuecomment-1604941297,1,['test'],['testing']
Testability,Thanks for testing. Both gradient methods use all the neighboring points. Green Gauss has special treatment for boundary surfaces and it must be particularly less accurate than least squares at these points.; With that said the way we handle intersecting boundaries is very important. For this case https://su2code.github.io/vandv/swbli/ I had to add an Euler wall after the inlet to prevent the kind of issues you are seeing.; My concern is that making things locally first order is just masking the problem with numerical dissipation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419,1,['test'],['testing']
Testability,"Thanks for testing. Yep I'm not an expert either, but hopefully we'll have this tested on 4/5 systems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-890918675:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-890918675,2,['test'],"['tested', 'testing']"
Testability,Thanks for that - I didn't realise that my copy of emacs was doing the replace on saving. I made the edit then reran the above steps. It seems that SU2_BASE now installs fine and SU2_AD only presents the initial error. I assume this means SU2 is up and running? I'll try some test cases to confirm. Thanks for the support!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-333753697:276,test,test,276,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-333753697,1,['test'],['test']
Testability,"Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms. Is the aligned_alloc from stdlib OK for Win64?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-554393825:201,test,test,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554393825,1,['test'],['test']
Testability,"Thanks for the changes, @pcarruscag. I like PRs like this with 797 additions and 3220 deletions maintaining functionality :+1: The incompressible part of the FEA problem was, like some other features in the code, 90% ready but never totally finished, so to avoid confusion in users and developers and ease maintenance I think it's better for it to be removed until someone can take over and finalize the implementation.; Let me know when you've had some time to put that testcase, and we can get this merged in.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-496400629:471,test,testcase,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-496400629,1,['test'],['testcase']
Testability,"Thanks for the clarification!. Best,; Francisco. > On Apr 22, 2017, at 5:01 PM, Heather Kline <notifications@github.com> wrote:; > ; > Thanks; > The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver.; > An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/385#issuecomment-296409557>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpklrJ5WQ8CoWJNAy_FVZ0bbYN000s2ks5rypTpgaJpZM4MgM_e>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409876:670,test,test,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409876,2,['test'],['test']
Testability,"Thanks for the comment. ; SInce the regression tests all pass, I wonder if this is something that turns up in the current develop branch? This pull request didn't modify the SU2_SOL.cpp file. Can you confirm that the problem does not exist in the develop branch?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-252034184:47,test,tests,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-252034184,1,['test'],['tests']
Testability,"Thanks for the comments guys.; I think for preconditioners CSysMatrix already gives default hooks to attach external solvers to, there is a build method and a compute method, and that was the logic I followed for this.; All the operations I do inside the wrapper are solver specific, the only thing that could eventually be abstracted from there is the conversion between our matrix format and the one PaStiX requires (which is a mere re-ordering so the column indices are ordered according to global index in linear partitioning, unfortunately this is enough to warrant a full copy).; My reason not to have gone with PETSc is [this table](https://www.mcs.anl.gov/petsc/documentation/linearsolvertable.html) that shows very little compatibility with the SU2 block sparse matrix format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524942947:192,log,logic,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524942947,1,['log'],['logic']
Testability,"Thanks for the commit tackling the hardcoded allocation. And of course thanks for all the other suggestions and comments, made the code a lot better :bouquet: very much appreciated. Once the reg tests pass I'll merge this in :+1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1051838195:195,test,tests,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1051838195,1,['test'],['tests']
Testability,"Thanks for the contribution, that sounds like it might be a useful change if it improves performance.; Do you have any benchmarks for large cases (where frequent flushes may cause a larger performance penalty), or for cases on a non-NFS cluster? Aka, how long it took to write the large file you mention with or without this change?. I've seen some forum posts recommending using mostly ""\n"" for performance, with occasional ""endl"" to keep that buffer from being to large. It is recommended not to use endl too much with file i/o: ; http://demin.ws/blog/english/2012/04/25/endl-vs-new-line/. However, it looks like that file didn't have an endl at the end - so perhaps if you have the time you could test the performance change if you change just the last ""\n"" to ""endl""?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223457468:119,benchmark,benchmarks,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223457468,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:78,test,testcases,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083,5,"['Test', 'test']","['Testcases', 'test', 'testcases']"
Testability,"Thanks for the fast reply! I changed the hardcoded 2 (just as a remark: the hardcoded values also appear in the calculations), added myself as an author and inserted some lines for throwing an error if the issue in #1565 occurs. I did not know exactly where to put it best. . Concerning a regression test: I strongly support the idea of introducing an axisymmetric regression test. However, I was using a testcase from @bigfooted , and I never set up such a test case on my own. There do not seem to be any axisymmetric pipe setups in the Testcases folder so far. @bigfooted , could we maybe use your mesh for the jet flow test case and, if necessary, switch to a standard flow setup?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075092276:300,test,test,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075092276,6,"['Test', 'test']","['Testcases', 'test', 'testcase']"
Testability,"Thanks for the feedback. . I was not able to find any examples myself either. It looks like this is a feature that has been around for a while, but maybe has gotten lost in some updates. I will work on setting up a small test case for this and the FAN_FACE_MDOT and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640:221,test,test,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640,2,['test'],['test']
Testability,"Thanks for the fix! One more small request... can you please push this to our new 'develop' branch instead? We are switching up our branching strategy to make for a better experience, and will be using the develop branch for staging and testing before pushing code releases to the master. Also, Sean had mentioned that you have done some nice isothermal validations. If you are interested, we would be happy to make a regression test based on one of your test cases (to ensure that these features remain well-tested in SU2). If you provide a config/mesh, we can make the regression test for you very quickly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56557046:237,test,testing,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56557046,5,['test'],"['test', 'tested', 'testing']"
Testability,"Thanks for the fix, Tim. One area that I had to modify a bit was the SetSensitivity() routine that you just modified.. does it all look ok to you in your discrete tests? Most of the ones in the repo were working fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282792870:163,test,tests,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282792870,1,['test'],['tests']
Testability,"Thanks for the fixes, Francisco. I'll be working to fix up the failing tests. I still have the old meshes you mention, so I can add those to the tests that we already have for mesh deformation with the RAE 2822 and ONERA M6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278#issuecomment-222780380:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/278#issuecomment-222780380,2,['test'],['tests']
Testability,"Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?. Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191571633:56,test,tests,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191571633,2,['test'],['tests']
Testability,"Thanks for the note! Indeed, we are aware of this issue, and we are already testing a patch that fixes it. We should be pushing the fix any day to the master, and I’ll note it here/close the thread when that happens. > On Apr 23, 2015, at 5:40 AM, arrow206 notifications@github.com wrote:; > ; > I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/167.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167#issuecomment-95671956:76,test,testing,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/167#issuecomment-95671956,3,['test'],"['test', 'testing']"
Testability,"Thanks for the quick fix, Tim. . Kudos to Ruben and Heather for all of the exciting contributions packed in this pull request: this is the culmination of months of hard work on their sides, and the collaboration has been very fruitful (just count the commits!). The tests are passing now, but I have one small request before we merge everything. If you check out the details of the build in Travis CI, there are many warnings. Can you please clean these up? They are mostly unused variables and the like. Otherwise, things are looking pretty good to me...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234#issuecomment-178807682:266,test,tests,266,https://su2code.github.io,https://github.com/su2code/SU2/pull/234#issuecomment-178807682,1,['test'],['tests']
Testability,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619502763:307,test,testing,307,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763,2,"['log', 'test']","['log', 'testing']"
Testability,Thanks for the review :) Once the tests pass with this tiny commited regression value change for the hybrid case - I'll merge this in,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1601#issuecomment-1095017256:34,test,tests,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1601#issuecomment-1095017256,1,['test'],['tests']
Testability,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:52,test,tests,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258,5,['test'],['tests']
Testability,"Thanks for the reviews guys. At the moment the optimization framework does not support the topology variables, there is a script in SU2_PY for this feature that runs a testcase with hardcoded parameters...; It is not an easy thing to run a tutorial for :/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752#issuecomment-524374294:168,test,testcase,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/752#issuecomment-524374294,1,['test'],['testcase']
Testability,"Thanks for the suggestion and I am preparing for a test.; As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition.; @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; ```; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348:51,test,test,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348,2,['test'],['test']
Testability,"Thanks for the technical exchange, @aeroamit @EduardoMolina, this is nice to see. @aeroamit : do you have any specific cases that use the different schemes you are submitting? Could be good to see the differences and also use them for regression testing (our matrix could prob be better at covering more convective schemes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-447080026:246,test,testing,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-447080026,1,['test'],['testing']
Testability,"Thanks for the update - I'll give it a go and get back to you. Are there any tests I can run to check functionality once complete? . Kind regards,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-332764044:77,test,tests,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-332764044,1,['test'],['tests']
Testability,"Thanks for the update! . If you have a minute, can you please merge this into our new 'develop' branch instead? We are switching up our branching strategy to make for a better experience, and will be using the develop branch for staging and testing before pushing code releases to the master.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33#issuecomment-56557934:241,test,testing,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/33#issuecomment-56557934,1,['test'],['testing']
Testability,"Thanks for the update. I gave the new version a try. Unfortunately one of my machines is acting up and i can't go to the office to fix it so I ran the tests on 3 machines using the 10G ethernet. I saw the warning about a backup strategy for edge coloring, but it ran just fine. The performance for 3 nodes was about 30% faster than 2 nodes (compared to ideal of 50% faster). Whenever my office opens back up, I'll get the 4th machine back online and i can try the 4 node version, which is the one that required 8192 for edge coloring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-615329675:151,test,tests,151,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-615329675,1,['test'],['tests']
Testability,"Thanks for this pull request! LGTM. I have just updated the branch with develop and the tests are passing, however I will wait for @economon to give his opinion as it was originally his implementation. Only a minor comment: there are some files in which white spaces are introduced in blank lines, probably done automatically by the editor (e.g., numerics_direct_mean.cpp and solver_direct_mean.cpp). This is not a problem in itself, but I have experienced this can generate problems with future merges.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530#issuecomment-387719885:88,test,tests,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/530#issuecomment-387719885,1,['test'],['tests']
Testability,"Thanks for your answers. ; Sure I agree not to accept until perfectly clean ;); Unfortunately, I cannot use _regression on all test cases (not enough memory for some test cases) and travis test do not run on my fork because only branch develop is enabled in travis file. ; How do you work on your side to benefit from travis ci without pushing changes to develop branch ?; I can modify travis file locally in a test branch, do you suggest other approaches ?; Thanks a lot",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210380381:127,test,test,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210380381,4,['test'],['test']
Testability,"Thanks for your comments @economon ! I have done some updates with develop, removed warnings, and I think this is good to go once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585#issuecomment-442003606:134,test,tests,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/585#issuecomment-442003606,1,['test'],['tests']
Testability,Thanks for your comments. I checked for a 3D test case (OneraM6) and it works fine.; It seems to be giving error only for one of my particular case where v7.0.6 work but not later version for SURFACE_TECPLOT.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-771503256:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771503256,1,['test'],['test']
Testability,"Thanks for your fast answers. We are definitely going to use SU2 here and I wanted to be sure that it is working correctly. We will look to use its inverse design capability too (provide Cp target) . I have tried the test case on the NACA 0012 but it did not work.; From your CFD forum, it seems it could be related to the scipy library used. I will look more to be sure if I am doing things correctly before making any note. Francois. From: Thomas D. Economon [mailto:notifications@github.com]; Sent: Thursday, April 23, 2015 2:01 PM; To: su2code/SU2; Cc: Fortin, Francois; Subject: Re: [SU2] arrrow206 (#167). Thanks for the note! Indeed, we are aware of this issue, and we are already testing a patch that fixes it. We should be pushing the fix any day to the master, and I’ll note it here/close the thread when that happens. > On Apr 23, 2015, at 5:40 AM, arrow206 <notifications@github.com<mailto:notifications@github.com>> wrote:; > ; > I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/167. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/issues/167#issuecomment-95671956.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167#issuecomment-95679198:217,test,test,217,https://su2code.github.io,https://github.com/su2code/SU2/issues/167#issuecomment-95679198,4,['test'],"['test', 'testing']"
Testability,"Thanks for your feedback! I agree, `OMP_NUM_THREADS` is better than having the number of threads in the constructor. I adapted `disc_adj_flow` and `disc_adj_fea` for MPI and added both to parallel AD and hybrid AD tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978:214,test,tests,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978,2,['test'],['tests']
Testability,"Thanks for your post, it is good to know about this as our regression tests use relatively small sized problems. ; I have looked through some of the past regression test history, the regression tests took a bit more time after adding additional tests, but other than that have been fairly consistent - up or down by a minute or two, which seems to be well within the usual variance. Although the most recent release wasn't that long ago, there have been several changes to the develop branch, so if you continue to see these problems please feel free to open an issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/265#issuecomment-210971310:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/265#issuecomment-210971310,4,['test'],"['test', 'tests']"
Testability,"Thanks for your work, We are really looking forward to accept these changes, could you please take a look at the regression test? Thanks again, ; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-326777655:124,test,test,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-326777655,1,['test'],['test']
Testability,"Thanks very much Tim, Tom and Heather for the help!. There are a couple of warnings more in CFEASolver::SetFEA_Load_Int, I will take care of them. Also, Tom, if you want to go ahead and push the meshes into TestCases/develop, I can include the regression tests before we merge, and we do all at once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234#issuecomment-179178926:207,Test,TestCases,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/234#issuecomment-179178926,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Thanks! I was confused because the source distribution had a TestCases directory with a partial set of files. It might be less confusing if the source distribution didn't have this at all, and all the test files were in the TestCase repository. ```; Alex ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-170710194:61,Test,TestCases,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-170710194,3,"['Test', 'test']","['TestCase', 'TestCases', 'test']"
Testability,"Thanks! I would suggest to fix these issues first, in this branch, ASAP. We can also make sure that is is done before the feature_output PR. ; Summarizing we still have the following problems:. 1. SU2_SOL not working correctly in parallel for unsteady. Just one mesh partition is plotted in time.; 2. SU2_CFD crashes when restarting, due to additional lines in the restart file ; 3. The current reg tests are not able to detect this kind of problems ( we should do something for this). Any suggestion/help to fix the listed issues :) ? Of course, if you prefer, we can merge this in as it is, but still we will have those bugs in the develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267317372:399,test,tests,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267317372,1,['test'],['tests']
Testability,Thanks! Works like it should. Gonna merge that as soon as tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/827#issuecomment-559492360:58,test,tests,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/827#issuecomment-559492360,1,['test'],['tests']
Testability,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:878,Mock,Mockett,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,7,"['Mock', 'test']","['Mockett', 'test', 'tests']"
Testability,"Thanks, @jaspe55 ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439496260:51,test,tests,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439496260,4,['test'],"['test', 'tests']"
Testability,"Thanks, Eran. Just rerunning the tests... otherwise this looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/306#issuecomment-249989661:33,test,tests,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/306#issuecomment-249989661,1,['test'],['tests']
Testability,"Thanks, Giulio and Tim. I'll look into the time out issues with Travis, as I am seeing this in other branches now too. Please let me know when you have a chance to test this. I would like to merge this and the incompressible PRs in as soon as we can.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259759047:164,test,test,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259759047,1,['test'],['test']
Testability,"Thanks, I hope I can run some tests in the next couple of weeks and compare the performance with other implementations, especially MKL, because this gives the fastest results at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460092205:30,test,tests,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460092205,1,['test'],['tests']
Testability,"Thanks, I’ll take a look at that before the weekend,. Best,; Francisco. > On Mar 2, 2016, at 8:03 PM, Thomas D. Economon notifications@github.com wrote:; > ; > Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?; > ; > Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/244#issuecomment-191571633.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191590831:216,test,tests,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191590831,2,['test'],['tests']
Testability,"Thanks, Jason! Can you please add the test-case in the python scripts for the regression test? You can find them in the TestCases folder.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-335889541:38,test,test-case,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-335889541,3,"['Test', 'test']","['TestCases', 'test', 'test-case']"
Testability,"Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423122949:90,log,logistics,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423122949,1,['log'],['logistics']
Testability,"Thanks, Tim. The code changes look ok to my eye, but I don't have a test case handy to run this through. Perhaps you or Salvo have one available to test?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211#issuecomment-158851382:68,test,test,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/211#issuecomment-158851382,2,['test'],['test']
Testability,"Thanks, this is a big deal. I have found several situations in which the volume orientation is not working correctly and I had to reorient the volumes using other software like icemcfd. I think it would be very useful to have at least one small test that was not working before and now is working thanks to this new implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/182#issuecomment-256554580:245,test,test,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/182#issuecomment-256554580,1,['test'],['test']
Testability,"Thanks, this is a very useful contribution. . Yes, please, an example (maybe a NACA0012 in test cases optimization) is required. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406#issuecomment-312933080:91,test,test,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/406#issuecomment-312933080,1,['test'],['test']
Testability,"Thanks, with these build commands, I can reproduce the ""`2.0 == 0.7`"" unit test error in an MPICH environment, when running the test with a single MPI process (`mpirun.mpich -np 1`). For multiple MPI processes, the test passes in my current setup. The error persists when I disable OpenMP. When I use OpenMPI instead of MPICH, the test driver crashes for `-np 1` (""An error occurred in MPI_Win_create ... MPI_ERR_WIN: invalid window"") but probably that is a different issue. After some std::cout debugging, I suspect that the MPICH implementation of [`MPI_Allgatherv`](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) is not working as expected in the case of a single MPI process. . I would expect that if there is only a single MPI process, `MPI_Allgatherv` copies `sendcount*sizeof(scalartype)`=`recvcounts[0]*sizeof(scalartype)` bytes from `(scalartype*)sendbuf` to `(scalartype*)recvbuf+displs[0]`, where `scalartype` is the C type represented by the MPI types `sendtype`=`recvtype`. This is the behaviour I had in mind when writing the NdFlattener code. With [minimal.cpp.txt](https://github.com/su2code/SU2/files/10459977/minimal.cpp.txt) (remove the .txt), OpenMPI gives the following results:; ```bash; $ mpic++ minimal.cpp -o minimal ; $ mpirun -np 1 ./minimal; Rank 0 recvbuf = -42 100 ; $ mpirun -np 2 ./minimal; Rank 0 recvbuf = -42 100 101 ; Rank 1 recvbuf = -42 100 101 ; ```; This is in line with the expected behaviour of `MPI_Allgatherv` described above. For MPICH however, I get:; ```bash; $ mpicxx.mpich minimal.cpp -o minimal; $ mpirun.mpich -np 1 ./minimal; Rank 0 recvbuf = 100 0 ; $ mpirun.mpich -np 2 ./minimal; Rank 0 recvbuf = -42 100 101 ; Rank 1 recvbuf = -42 100 101 ; ```; as if `displs` were ignored for `-np 1`. @pcarruscag Can you confirm this observation? Do you think that my understanding of the expected behaviour of `MPI_Allgatherv` is correct?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397436501:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397436501,4,['test'],['test']
Testability,"Thanks. Running grep on the testcases directory it seems we do not. For fluid applications this was not an issue because the number of iterations is usually small, I am working on some structural stuff right now, I will make sure to use this linear solver once I add some testcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/557#issuecomment-414259961:28,test,testcases,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/557#issuecomment-414259961,2,['test'],['testcases']
Testability,"Thanks; The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver. ; An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409557:532,test,test,532,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409557,2,['test'],['test']
Testability,"Thanks; since the automatic tests are linux, could someone using windows please check this out and independently check its operation, just to make sure nothing unexpected happens?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-261839996:28,test,tests,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-261839996,1,['test'],['tests']
Testability,"That is my fault.; The case was broken, I fixed it in #753 and updated the testcase repo thinking #753 would be merged shortly but merging with #774 is proving more difficult than I thought... If I can't find a solution soon I'll fix it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/801#issuecomment-541311289:75,test,testcase,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/801#issuecomment-541311289,1,['test'],['testcase']
Testability,"That is the process I followed so far. Jayant Mukhopadhaya <notifications@github.com> escreveu no dia quarta,; 2/10/2019 à(s) 16:20:. > The .travis.yml file is currently cloning the feature_input_output branch; > of the TestCases and the Tutorials folders. Should those branches be merged; > with develop in their respective repos? And consequently, should the; > .travis.yml file be changed to point to the develop branches?; >; > I ask because I am going to have to do something similar for #780; > <https://github.com/su2code/SU2/pull/780> and I am not sure what the; > process for doing that would be.; >; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/724?email_source=notifications&email_token=AJCOXN42AZJMAB5I3M7S5GDQMS33HA5CNFSM4H4D5RW2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAFEF6I#issuecomment-537543417>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2S57FMOMAZNXV2ERTQMS33HANCNFSM4H4D5RWQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-537548522:220,Test,TestCases,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-537548522,1,['Test'],['TestCases']
Testability,"That issue appeared in other branches recently too, maybe something was updated in the test environment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1804176446:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1804176446,1,['test'],['test']
Testability,"That looks like what might be missing, open a PR and attach the example you used to test please :+1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123#issuecomment-1703321774:84,test,test,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123#issuecomment-1703321774,1,['test'],['test']
Testability,"That should do.; @economon by the way, what is the right way to add a regression test/example? Do I just add the cfg and appropriate instructions to the scripts, and the mesh and initialization to the Testcases repo? If so does the order matter? Thanks. EDIT: The question above was addressed during the 3rd annual SU2 meeting hackaton session (recording available and recommended!)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-417612980:81,test,test,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-417612980,2,"['Test', 'test']","['Testcases', 'test']"
Testability,That should not affect anyone (apart from making the regression tests faster). So I am merging this in.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/810#issuecomment-549881724:64,test,tests,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/810#issuecomment-549881724,1,['test'],['tests']
Testability,That sounds great. After introducing those fixes I can definitely create a regression test to cover the fullmultigrid feature. Nevertheless there is still the segmentation fault problem when using mpirun. I have to delve into that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908279055:86,test,test,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908279055,1,['test'],['test']
Testability,That sounds very nice! Thanks for this update. . Btw: I fixed the failing regression test in the TestCases repo. There was a whitespace missing in the reference file. That's why the file diff returned an error.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334163260:85,test,test,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334163260,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"That would be a nice addition! Can you also add a testcase (this flat plate testcase) for each of the cases, and add the cfg + regression tests to this repository? Maybe do the regression test on one of the coarsest meshes. Best would be to have set it up with a restart file that is completely converged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2073000650:50,test,testcase,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2073000650,4,['test'],"['test', 'testcase', 'tests']"
Testability,"That's great! At least it gives us some margin to solve this issue. I agree that we should try to reduce the time of the tests. I think that @talbring approach a few months ago of reducing the number of iterations was the correct one; the tests don't need to be physically meaningful, but rather technically representative of the features. The compile time is also something that we should look into - we might need to have a telecom on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382299662:121,test,tests,121,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382299662,2,['test'],['tests']
Testability,"That's great, thanks. I've removed the multiple ffd finite differences test which isn't being used at the moment and will push up the changes shortly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/569#issuecomment-417799776:71,test,test,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/569#issuecomment-417799776,1,['test'],['test']
Testability,"That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit c68cf13, then I changed the stored residuals of unrelated testcases in 9d8f194 and the testcase fails... I'll run clang-format now, let's see what happens ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895022534:37,test,testcase,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895022534,3,['test'],"['testcase', 'testcases']"
Testability,"That's the idea! We should be aiming for many small classes with as few inputs as possible, so that we can easily unit test them. They should have a single responsibility. Many of our legacy classes are doing too many things and can be broken down into smaller classes, especially geometry, for instance. It will take us time to get there, but we're going in the right direction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-520972324:119,test,test,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-520972324,1,['test'],['test']
Testability,"The .travis.yml file is currently cloning the feature_input_output branch of the TestCases and the Tutorials folders. Should those branches be merged with develop in their respective repos? And consequently, should the .travis.yml file be changed to point to the develop branches?. I ask because I am going to have to do something similar for #780 and I am not sure what the process for doing that would be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-537543417:81,Test,TestCases,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-537543417,1,['Test'],['TestCases']
Testability,The Github Actions checks passed after making two changes:. 1) https://github.com/su2code/SU2/pull/1619/commits/efe98fe6070a0cb51f1082a9599363786e4d65ea; I needed to lower the warnlevel due to problems in `externals/cgns/hdf5`.; Maybe the HDF5 files should be updated to a newer version ?! But it is not clear to me which version has been used in https://github.com/su2code/SU2/pull/1500. ; @MicK7 Do you have an idea how to fix this ?. 2) https://github.com/su2code/SU2/pull/1619/commits/26140223e5838a6856c0b3c02163a826256306b1; A workaround recommended at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. 3) The regression tests [fail](https://github.com/su2code/SU2/runs/6387003184?check_suite_focus=true) because the new `test-su2` Docker image is `private`. I will need someone with higher privileges than me to make it public.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000:645,test,tests,645,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000,4,['test'],"['test-', 'tests']"
Testability,"The PR branch for the testcase is from your personal repo, so indeed we need to merge that first. For branches in our repo you can change line 131 in the file .github/workflows/regression.yml to point to a different branch then develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500903524:22,test,testcase,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500903524,1,['test'],['testcase']
Testability,"The PR is approved. Do you see a button saying ""Merge pull request""?; You can use docker containers to run tests locally in a reproducible way, but I always used github to run all the tests for me, so yes open draft PRs as you work on more changes.; You forgot to add yourself to AUTHORS.md.; If you plan to contribute more I'll add you to the SU2 organization and then you can push branches to su2code instead of using your fork.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2220702583:107,test,tests,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2220702583,2,['test'],['tests']
Testability,"The Travis config should probably be updated to use Miniconda, running tests with both a Python 2 and Python 3 environment. Could take some influence from https://github.com/mwaskom/seaborn/blob/master/.travis.yml",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321431468:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321431468,1,['test'],['tests']
Testability,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:166,test,testcase,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089,2,"['Test', 'test']","['TestCases', 'testcase']"
Testability,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:660,test,test,660,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798,2,['test'],['test']
Testability,The branch can be tested by converting an existing testcase cgns file to hdf5.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968:18,test,tested,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968,2,['test'],"['testcase', 'tested']"
Testability,The case is now also failing in #745. Tested it locally and found that the result is compiler dependent. GCC5.4 and GCC9 give different results.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516389102:38,Test,Tested,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516389102,1,['Test'],['Tested']
Testability,"The change in the numerics of the Jacobian calculation changed the results of the regression tests. That was expected, since improvements to the linear solve will change the residuals at each time step. If you look at the values from the tests, you'll see something like:. ```; ERROR: Difference between computed input and test_vals exceeded tolerance. TOL=0.000001; test_iter=50; test_vals (stored): -6.459421, -4.595755, 1.201830, -0.007146, 0.080516; sim_vals (computed): -6.459444, -4.595710, 1.201844, -0.007146, 0.080517; ```. The values using the new numerics are very close, but not within tolerance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-355613118:93,test,tests,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-355613118,2,['test'],['tests']
Testability,"The changes do fix #2241, thread sanitizer builds and tests execute without crashing. The workaround is only needed until a corresponding fix in the github runner is deployed, which will take around a week (https://github.com/actions/runner-images/issues/9491#issuecomment-1999433974). We could merge this now and roll it back later. @pcarruscag",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2242#issuecomment-1999760885:54,test,tests,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/2242#issuecomment-1999760885,1,['test'],['tests']
Testability,"The commits so far address parts of OpDiLib's incorporation into the AD workflow and sort out some additional issues along the lines of the `disc_adj_fsi/Airfoild2d` testcase. They provide a testing environment that is stable with respect to OpDiLib and can already be used for figuring out some of the more SU2 specific issues. However, they require that SU2 is built with a compiler with OMPT support, for example an up-to-date version of `clang++`, hence the failing CI builds.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-788161170:166,test,testcase,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788161170,2,['test'],"['testcase', 'testing']"
Testability,"The computed values of `discadj_arina2k` in `hybrid_regression_AD` are suspiciously close to the expected values in `parallel_regression_AD`. Could the reference values be wrong? If I test with `-Denable-mixedprec=false` locally, the same holds true for `discadj_fea`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-874400653:184,test,test,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-874400653,1,['test'],['test']
Testability,"The config file is a start, but for a thorough investigation a full test case, i.e. including a grid, is preferable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-388726367:68,test,test,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-388726367,1,['test'],['test']
Testability,"The configure looks good to me now. Did you do the test for the viscous ONERA M6? It would be good to know what the speed up is here. Anyway, if you can merge with the latest develop version, it can be merged in as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543#issuecomment-416828129:51,test,test,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/543#issuecomment-416828129,1,['test'],['test']
Testability,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:153,test,test,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,2,['test'],['test']
Testability,"The current version of the HLLC solver (the one in the develop branch) computes the jacobians terms using Roe approach. The implementation I'm testing uses instead the direct formulation. This of course changes a lot the behaviour of the implicit scheme which now seems to be less robust, at least for this test case.; Today I made some tests and what I propose is to modify the config file in order to run a non-dimensional simulation with a CFL = 1.0. Would that be possible?; Tomorrow I will look again for bugs in my branch. Just another small question: I saw that in the for cycle at line 3674 of solver direct mean (of develop branch), in the part regarding the low mach number correction, vel_i_corr and vel_j_corr are declared as 3 element arrays. The code cycle over [iDim+1] for those arrays. Could this bring to a vector overflow in the 3D case?. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182496475:143,test,testing,143,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182496475,3,['test'],"['test', 'testing', 'tests']"
Testability,"The degrees are specified by ""logic"" axis (i j k), i.e. the result depends in the order you specify the corners in FFD_DEFINITION, e.g. your geometry has the span aligned with X, whereas in the first image the span is aligned with Y. Personally I find it confusing too, I just end up swapping things around until I get what I want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626871785:30,log,logic,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626871785,1,['log'],['logic']
Testability,"The developer who worked on it was @frx-wintermute in #1951 ; A lot of those packages are header-only, not compiled libraries, if you use different versions than the ones we use in our regression tests you have no guarantees that the code will work properly, and it seems you are mostly interested in stability.; If you want to make changes to the meson.build script to look for local versions of libraries like cgns, parmetis, etc. see e.g. https://github.com/su2code/SU2/discussions/2064; We also have examples like this:; ```; pastix_dep = dependency('pastix', required: false). if not pastix_dep.found(); pastix_root = get_option('pastix_root')+'/install'; scotch_root = get_option('scotch_root')+'/lib'; pastix_dep = declare_dependency(include_directories: pastix_root,; link_args: [ '-L../'+pastix_root, '-L../'+scotch_root,; '-lpastix', '-lscotch', '-lptscotch', '-lptscotcherr',; '-lm', '-lrt', '-lpthread']); endif; su2_deps += pastix_dep; ```; where we try to use pkg-config and fall back to specifying paths. I recommend using pkg-config whenever possible.; If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871:196,test,tests,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871,1,['test'],['tests']
Testability,"The file diffs are also not correct on other PRs, they do display properly; if you look at particular commits it seems. On Tue, 19 Nov 2019, 10:35 Tim Albring, <notifications@github.com> wrote:. > I wonder why the 'chore' label was removed by @talbring; > <https://github.com/talbring> as I would categorize this PR as such?; >; > First of all: the topic should be a little bit more descriptive if it; > should be listed in the change log. Second: there was already a; > no_changelog. Having both makes no sense and actually I don't know what; > the release drafter is doing then :D; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/818?email_source=notifications&email_token=AJCOXN4ZTAKXP56DWBNEBDLQUO6PJA5CNFSM4JN55UV2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEENWNMQ#issuecomment-555443890>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXNY5DY2TBI7OSLJI4ADQUO6PJANCNFSM4JN55UVQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555477603:435,log,log,435,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555477603,1,['log'],['log']
Testability,"The folks at Travis CI have kindly doubled both our ""hard"" timeout and ""silence"" timeout limits up to 140 min. and 20 min., respectively. We should be safely within limits for some time to come. . That being said, rather than relying on the increases, I would really encourage that we find some better approaches for reducing total test time, as we will continue to add more cases. It is not good for our pace of development that we have to wait over an hour to get the results of the tests. I think that a test time of approx. 10-20 min. would be more ideal so that we can iterate much more quickly. I suspect that attacking our compile time would be most helpful. Any ideas and discussion most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382152114:332,test,test,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382152114,3,['test'],"['test', 'tests']"
Testability,"The following tasks have been finished:; - First issue: Missing initialization in `CTurbSSTSolver()`, fixed in c06e65e; - Second issue: Missing update of `FinestMesh`, fixed in a458251 ; - Third issue: Probably related to #1430, (partially?) fixed in f6f986e . The following optional tasks remain:; - Fourth issue: Missing update of `Convergence_FullMG`, not fixed yet.; - Regression test: E.g. as proposed in https://github.com/su2code/SU2/pull/1362#issuecomment-964163647, not added yet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082:384,test,test,384,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082,1,['test'],['test']
Testability,"The ft2 term was a ""not a very successful"" attempt to allow computation of transitional flow or relaminarization, where a region exists without turbulent diffusion. During the time that passed since the nineties, it was commonly considered ineffective. I think Philipe also agrees with that. That way, though historically it is not correct, I think the basic SA model should be with ft2=0; I appreciate your effort. I put some order and logic in a combination that creates a lot of misunderstanding by many; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-917575455:437,log,logic,437,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-917575455,1,['log'],['logic']
Testability,"The jones_turbocharger_restart case was set to use adaptive CFL coupled with CFL turbulence Reduction thus changes in the results are expected , I ran the case a few thousand steps and the case seems to converge. Therefore I am allowing myself to change test results leaving the configuration setting as is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973:254,test,test,254,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973,1,['test'],['test']
Testability,"The limiters were re-implemented in #834, if anything pops up do let me know.; The current (and previous) implementation just consists of taking the minimum value of the limiter function over all edges connected to a vertex...; For your specific case the limiters are active in the regions with oscillations.; Curiously if you run first order the oscillations do not disappear completely (but they are smaller) so I think you are mostly seeing artifacts of AUSM (or the mesh since the oscillations align with the grid lines).; There are not-so-subtle differences between how AUSM and AUSM+UP combine the left and right states (especially on coarse grids), it could be worth trying to convert AUSM to the general formulation of AUSM+UP(1/2) and SLAU(1/2) we currently have. I can help, but I do not have time to run the tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/917#issuecomment-604495790:819,test,tests,819,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-604495790,1,['test'],['tests']
Testability,"The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; That is my hypothesis anyway, anyone care to run some tests? :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798:4,log,logic,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798,2,"['log', 'test']","['logic', 'tests']"
Testability,"The low Mach number correction scheme was developed with the HLLC solver in mind; which is the only reason HLLC is used in the test case. The correction should work with any full, non-preconditioned Riemann solver, so the test case could use the Roe solver. However, I think there needs to be a well-defined reason for changing the test case. The HLLC solver worked for that test case when it was set up, do you know why the recent changes have caused it to fail?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182094639:127,test,test,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182094639,4,['test'],['test']
Testability,"The merged branch is deleted and then the test action is not able to checkout; ""error: pathspec 'refs/pull/1249/merge' did not match any file(s) known to git.""; Because the regressions work by cloning su2 master and then doing ""git checkout""; There was zero chance of breaking any testcases with those changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1249#issuecomment-811449617:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811449617,2,['test'],"['test', 'testcases']"
Testability,"The most critical part is the unsteady FSI, but that actually takes its time... You think it would be fine to compare the results after just few iterations for a testcase? We could use one of the simulations in the tutorial. Thanks for the interest in the youtube video!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746398712:162,test,testcase,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746398712,1,['test'],['testcase']
Testability,"The output isn't leak-free otherwise. Those were just a couple of the bigger ones that were easy to track down. I think the rest are mainly CoDi/MeDi-related leaks, though. Keep in mind I ran this on feature_adap_sst (the line numbers below are for this branch though) so some of these might be resolved:; - A leak in C2DContainers that Pedro already fixed in #895 so I was gonna leave it alone; - Probably the largest remaining leak is from the calls to `AD::StartExtFunc()`, `AD::SetExtFuncIn()`, and `AD::SetExtFuncOut()` in CSysSolve.cpp during `DirectRun()`. These are all related to CoDi's ExternalFunctionHelper; - Line 537 in adt_structure.cpp (`CADTElemClass::CADTElemClass()`). This seems to be related to various functions in MeDi including `createLinearIndexCounts()`, `AMPI_Allgatherv()` (might be a false positive), and `ADToolImplCommon()`; ```; SU2_MPI::Allgatherv(val_coor.data(), sizeLocal, MPI_DOUBLE, coorPoints.data(),; recvCounts.data(), displs.data(), MPI_DOUBLE, MPI_COMM_WORLD);; ```; - Line 715 in CGeometry.cpp (`CGeometry::PostP2PSends()`). This is only called when val_reverse is false, which is during`SetDependencies()` and `DirectRun()`. These all seem to be related to `ADToolImplCommon()`; ```; SU2_MPI::Isend(&(bufD_P2PSend[offset]), count, MPI_DOUBLE,; dest, tag, MPI_COMM_WORLD, &(req_P2PSend[iMessage]));; ```; I've attached the valgrind log from one of the cores below, in case anyone really wants to parse it; [vg.txt](https://github.com/su2code/SU2/files/4459485/vg.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929#issuecomment-611838976:1376,log,log,1376,https://su2code.github.io,https://github.com/su2code/SU2/pull/929#issuecomment-611838976,1,['log'],['log']
Testability,"The previous commit 4eeb6f9 replaces `std::unordered_set` by `std::set` for the collection of neighbors of a vertex. . For an `unordered_set`, it is not specified in which order the elements show up in the iteration over all neighbors. Through floating-point arithmetics, the order probably influences the residuals in the regression tests; I think few testcases failed because a different order was used. With `unordered_set`, testcases would fail already if another implementation of the standard library is used. In contrast, `set` is sorted by `std::less` by default. `unordered_set` is also used in other places in the code, where it is ok:; - `Point_Map` in `CPhysicalGeometry::DistributeColoring`: only used to sort into `Global2Local`; - `processedMarkers` in `CFlowTractionInterface::ComputeVertexAreas`: not iterated through; - `markerPoints` in `CFEASolver::Set_VertexEliminationSchedule`: not iterated through",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895004707:334,test,tests,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895004707,3,['test'],"['testcases', 'tests']"
Testability,"The primary changes in #652 were related to replacing legacy blocking send/receive calls with non-blocking versions (with the receives accepted in a first-come manner using WaitAny()) for all of the point-to-point communications. At the time, I saw modest time/iteration improvements (10-20%) across the board when testing scalability on a fairly large cluster (Xeon nodes with Infiniband). Can you check if there's anything in your network setup that would render the non-blocking communications ineffective? That would be my best guess since it was the major change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593130929:315,test,testing,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593130929,1,['test'],['testing']
Testability,"The problem is that I am behind more than 1100 commits. I have already created another branch starting from the current develop and I am running the test cases from the paper in the description. I may be able to merge the new branch into this one and then I'll be on par with the develop, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-2197419482:149,test,test,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-2197419482,1,['test'],['test']
Testability,"The problem that caused Travis to fail is related to a broader issue:; There are several configuration parameters that have a default value (like REYNOLDS_LENGTH =1.0 by default). This means that it is legitimate not to include these parameters in the cfg file.; However, the Python environment is oblivious to these defaults values: if a parameter is missing in the cfg file, then it is not a member of the Python list config. I think it is more consistent to set the default values also in the Python environment. I shall be happy to create such a pull request. However, before I do that I'd like to check if this has not been set intentionally, for a logic that escapes me. ; I shall appreciate a comment about that.; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376941826:654,log,logic,654,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376941826,1,['log'],['logic']
Testability,"The regression tests fail on Ubuntu 20.04 aarch64:. ```; ==================================================================; Summary of the parallel tests; python version: 3.8.10 (default, Mar 15 2022, 12:22:08) ; [GCC 9.4.0]; passed - discadj_naca0012; passed - discadj_cylinder3D; passed - discadj_arina2k; passed - ea_naca64206; passed - discadj_rans_naca0012_sa; passed - discadj_rans_naca0012_sst; passed - discadj_incomp_NACA0012; passed - discadj_incomp_cylinder; passed - discadj_incomp_turb_NACA0012_sa; passed - discadj_incomp_turb_NACA0012_sst; passed - discadj_axisymmetric_rans; passed - unsteady_cylinder; passed - unsteady_cylinder_windowed_average_AD; * FAILED - unsteady_cylinder_windowed_average; passed - unsteady_cylinder_DT_1ST; passed - pitchingNACA0012; passed - transonic_stator; * FAILED - discadj_fea; passed - discadj_heat; passed - discadj_fsi; * FAILED - discadj_fsi_airfoil; passed - discadj_cht; passed - da_sp_pinArray_cht_2d_dp_hf; passed - da_sp_pinArray_cht_2d_mf; passed - da_unsteadyCHT_cylinder; passed - discadj_topol_optim; passed - unsteady_NACA0012_restart_adjoint; passed - unsteady_NACA0012_adjoint_only; passed - restart_shape_optimization; * FAILED - dyn_discadj_fsi; * FAILED - grad_smooth_sob; Tests failed; ```. It is the same version of Python and GCC as on the Github Actions hosted runner.; We will need logic to differentiate the expected results on x86_64 and aarch64 :-/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1132634653:15,test,tests,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1132634653,4,"['Test', 'log', 'test']","['Tests', 'logic', 'tests']"
Testability,"The regression tests pass locally at my pc, but not on github. Not sure what is going on here...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1094332912:15,test,tests,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1094332912,1,['test'],['tests']
Testability,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-573929388:326,log,logic,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388,2,"['log', 'test']","['logic', 'test']"
Testability,"The results look very convincing, also nice to see such an improvement in convergence. Could you add the ramp case as a regression test to this PR (you could add them to parallel_regression.py)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1499605613:131,test,test,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1499605613,1,['test'],['test']
Testability,"The single objective/multi surface case was added back in along with a regression test by these previous commits; I do still think it is reasonable to wait until after #497 is merged in so that I can be sure to pass their tests as well, and I will be working on updating the tutorial separately. ; In short, this can be reviewed at any time, and reviewers should expect an additional update if #497 is merged in first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-362947809:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-362947809,2,['test'],"['test', 'tests']"
Testability,"The test case seems to work, I only see small differences in the last digit w.r.t the results I computed on my workstation, which is ok from my side. How can I access the results computed by GitHub?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1539739715:4,test,test,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1539739715,1,['test'],['test']
Testability,The test values are sensitive to compiler versions and options.; Just run the failing cases locally and if the results looks reasonable update the results based on the github tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2180826745:4,test,test,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2180826745,2,['test'],"['test', 'tests']"
Testability,The test would go in UnitTests,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1128772702:4,test,test,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1128772702,1,['test'],['test']
Testability,The testcases contain many comments for OUTPUT_FILES and TABULAR_FORMAT that were outdated descriptions. I have removed all comments for these keywords in the testcases. Actually all testcases need to be stripped from descriptive comments and keywords that are not used or use the default value. This will be a cleanup chore for another PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812:4,test,testcases,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812,3,['test'],['testcases']
Testability,"The unsteady CHT regression is failing, but I cannot understand why. I should not have touched parts of the code that influence that regression test. May I ask you if you have any idea of the reason for this fail?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-858716723:144,test,test,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-858716723,1,['test'],['test']
Testability,"The use of SU2deform in #620 is apparently not part of the test suite, so testing with Python 3.7 doesn't replicate the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-444086237:59,test,test,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-444086237,2,['test'],"['test', 'testing']"
Testability,"The verification you show is for a low-Mach test case. The omitted term in the stress tensor (the isotropic contribution from the turbulent stress) is mostly applicable for flows with strong velocity dilatation. Have you tried the new SST model for a flow with a shock wave? For example, how do the results change for the RAE2822 case?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-546389216:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-546389216,1,['test'],['test']
Testability,The win build failed again but I have just ran the same tests on my forked repository and it builds correctly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-938518710:56,test,tests,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938518710,1,['test'],['tests']
Testability,"There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2044382869:25,test,testcases,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2044382869,2,['test'],['testcases']
Testability,"There are some tricks possible to add the `<<` operator. Not all the code base needs refactoring. We can have both styles for the future as `()` syntax is very powerful thanks to fmtlib. . ```cpp; cout << ""Values at node<< nodeId << "" are "" << val[0] << "" "" << val[1] << "" "" << val[3] << endl;; ```. can be transformed directly to . ```cpp; LOG(""Values at node {} are {}"",nodeId,val);; ```. Equivalently . ```cpp; LOG << fmt::format(""Values at node {} are {}"",nodeId,val); ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098:341,LOG,LOG,341,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098,2,['LOG'],['LOG']
Testability,"There are two causes for the failed test: your branch is currently failing the compute_polar test case, and an unrelated issue involving time-outs that is effected tests for everyone. . You can click the 'details' link to the right of the failed test in section just below the comments, or click on the red x next to any failed test. This takes you to the travis page, where through following through the links you can find which tests failed, and access the test logs. . The tests with exclamation points on the travis page are the ones that are failing due to other issues, and for now I would suggest focusing on the compute_polar test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376704607:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376704607,10,"['log', 'test']","['logs', 'test', 'tests']"
Testability,"There is no conflict because both here and there the files were moved, to SU2_FSI and FSI_tools respectively.; What there is now is a massive amount of duplication, if you and Nicola want to try and fix that, it would be the ideal outcome for SU2. I made the final changes Tom and I had requested on this PR because it did not seem like this was going anywhere... But if you are still working on it, well do what you think is best, I don't have time to figure out how to get rid of the duplication. ""develop"" needs to work as a staging area, if you have a chunk of work that can be merged, without breaking compilation, testcases, or interfering too much with the work of other folks, then it should be merged ASAP to avoid this kind of situation.; For example refactoring this ""FSIInterface.py"" file into direct and adjoint should have possibly been a PR by itself to set the stage for the rest. Anyway, regarding the initial proposed changes this looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902#issuecomment-743422907:620,test,testcases,620,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743422907,1,['test'],['testcases']
Testability,"There is one thing that is not mentioned yet, which is rather important. I assume we are talking RANS here. In that case it does not make sense to ramp up the CFL number to values higher than 50 or so with the current segregated setup of mean flow, turbulence and possibly transition solvers (not even talking about multidisciplinary problems). The segregated character makes it extremely flexible for adding additional models, but it does not work for a full blown Newton solver. In that case you have to switch to a strong coupling between the mean flow and the turbulence solver, which will require a significant change in the data-structures. Also, computing the exact Jacobians for a second order scheme is not trivial and as Tom mentioned, it may be needed to use AD tools for that, which makes it quite costly. Furthermore the memory usage for storing the exact Jacobians is very big. An alternative would be to use a matrix free approach, i.e. use a Frechet derivative for the matrix vector products in the Krylov solver (although you still need a good preconditioner). When a coupled with a turbulence model (especially k-omega type models), this will be extremely sensitive to the epsilon parameter you have to choose. There are ways around this, e.g. using dual numbers and possibly with CoDiPack, but these will increase your computational cost by at least a factor of 4. I think it is definitely worth trying, but seen all the pitfalls you may run into, you may want to test things out first with a test solver before implementing it in SU2 itself. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460908007:1483,test,test,1483,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460908007,2,['test'],['test']
Testability,"There is sth weird going on with the added inlet regression test. And I got to believe that it has to do with the primitive-container-indexing that took place in #1392 because when I revert to commit fe6ba90aab388ed6d9ff77fa3cb03434fe86654c right before that merge took place everything works fine. Maybe I also did a mistake when porting the CSpeciesSolver to that new structure. I am trying to do a verification of the inlet files by using the written example_inlet_file as input which should result in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](un",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:60,test,test,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['test'],['test']
Testability,"There might be a problem here: If I understood correctly once you login to Gritter using your GitHub account, it opens all the git access that you have to all the community that is in the Gritter group.; I have, and probably other people also do, access to GitHub locations (other than SU2) which are not open for the public (like Github of commercial companies). In the Gritter login page, I could see all these locations but could not remove those that are not SU2 related.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515093449:66,log,login,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515093449,2,['log'],['login']
Testability,"These are all fantastic questions. I have exclusively used SLSQP for any optimizations that I have run. So, I can only speak to that optimization algorithm. . > Why do we want the gradient norm to be ~1E-6?. Not sure why this is. I agree with what @economon said. These tuning parameters are to coax out an ideal step size for the optimizer. As you can imagine, the ideal step size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:672,test,testing,672,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,1,['test'],['testing']
Testability,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593144776:372,log,logged,372,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776,2,['log'],['logged']
Testability,They should be due to SU2_SOL not playing nice with the discrete adjoint for a while.; I think @economon put a fix for that in #641?; @clarkpede can you apply the EXIT_FAILURE change to #641? Those tests should pass there.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463602220:198,test,tests,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463602220,1,['test'],['tests']
Testability,This PR finally passed the tests! Can I get some review feedback @economon and/or @talbring? It would be great to have this merged ASAP so no one adds any new code incompatible with Python 3.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-343013631:27,test,tests,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-343013631,2,['test'],['tests']
Testability,"This PR is ready from my point of view. All periodic / turbomachinery meshes and regressions have been updated (thanks @salvovitale), and I can confirm they converge with the new periodic implementation. Only a few other regression tests needed to be updated due to the refactoring of the MPI, but they were very minor. If the tests pass, then I recommend we merge very soon. Any final comments or reviews are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-484730590:232,test,tests,232,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-484730590,2,['test'],['tests']
Testability,"This branch has been rebased on last develop version (commit a24f7c2f334f771f173f93ea24f9d73daec1df21, Date: Tue May 31 17:33:41 2016 -0700). Only a few tests fail due to numerical differences but not on python syntax errors. So I think failures are due to parts not linked to python scripts that is why I keep this pull-request open and ready to merge.; Can someone confirm that ?; Thank you",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-222929738:153,test,tests,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-222929738,1,['test'],['tests']
Testability,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:680,test,test,680,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,2,['test'],['test']
Testability,This can probably be tested with a dummy fixed point iteration...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030109658:21,test,tested,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030109658,1,['test'],['tested']
Testability,This has been fixed. SU2_DEF output should work in ParaView for SU2 v5+ (tested successfully with ParaView v5.4.1).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/161#issuecomment-360066567:73,test,tested,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/161#issuecomment-360066567,1,['test'],['tested']
Testability,"This is a great new development! We would definitely need this for stiffer equations. At the moment most of our combustion models have 'OK' convergence, but this could really improve things! Is it functional for the incompressible flow testcases?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-773925376:236,test,testcases,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773925376,1,['test'],['testcases']
Testability,"This is already possible with the python wrapper, see testcases/py_wrapper/flatPlate_unsteady_CHT_FlatPlate.py; I am against adding any more ""profile files"" to SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032:54,test,testcases,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032,1,['test'],['testcases']
Testability,"This is confusing me a bit. Before I set it up: Do you want me to use the original config (without the _adj), remove the comments and the model and then run SU2_CFD_AD in the regression test?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076187970:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076187970,1,['test'],['test']
Testability,"This is inconsistent with the current implementation. The symmetry boundary condition that is implemented is using the reflection tensor $$\bf{R} = \bf{I} - 2n_f \bigotimes n_f$$ and can be found in CFVMFlowSolverBase.inl in CFVMFlowSolverBase<V, R>::BC_Sym_Plane . https://github.com/su2code/SU2/blob/master/SU2_CFD/include/solvers/CFVMFlowSolverBase.inl. You can also see there the implementation of the symmetry boundary condition for the velocity. You are now basically partially overwriting the weakly imposed boundary condition with a strongly imposed boundary condition. . If you want to see a failing testcase you can try your approach with the 90 degree bend tutorial testcase and you will see that the residuals will stall after 100 iterations. With the current implementation in develop you can see that the symmetry boundary is only weakly imposed and does not fulfill the symmetry condition exactly, but the same is true for the inlet boundary condition.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1827871083:609,test,testcase,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1827871083,2,['test'],['testcase']
Testability,"This is obviously very good work and should make it much simpler to add new outputs etc. My main concern when first reviewing was performance (something no one seems to care about) but from the limited testing I did while merging this and CVariable there seems to be no big impact, I did not time anything though, if you have numbers to share please do.; Nevertheless if you can get away with using unordered_map instead of map it would be better. Possibly part of the reason everyone puts of reviewing this is that it is a major refactoring and yet there are no accompanying notes about the architecture the implementation choices etc. I absolutely guarantee you that is not how professional software is developed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534651933:202,test,testing,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534651933,2,['test'],['testing']
Testability,"This is possible using the Python wrapper. There are no tutorials for this yet, but you can check out PR #488, PR #503. PR #516. There's currently a regression test using unsteady heat-transfer boundary conditions at: https://github.com/su2code/SU2/tree/master/TestCases/py_wrapper/flatPlate_unsteady_CHT . You can use that as an example. Velocity BCs will be very similar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812:160,test,test,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"This is very interesting, since I often find that I am commenting out most of the python regression script when debugging only a couple of tests locally. Can you estimate how much work this would be? Is it just a simple wrapping of what we already have? We would also have to make sure that Travis CI can handle it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342593274:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342593274,2,['test'],['tests']
Testability,This just turned a month old :) If I could have some reviews please :); I'll post test results by the end of the week for the failing regressions.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-573727655:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573727655,1,['test'],['test']
Testability,"This looks good; with repeated and well-checked analytical derivations plus numerical checks, and given the scale and impact (a single line of code, and a slight change to convergence rate), if this was in a pull request I would approve it. ; @juanjosealonso, @pcarruscag the AD information is still worth getting, and sharing the process of how to get it, since I'd guess that would be very useful for checking similar problems in the future - just maybe not as a reason to delay this specific change. I've seen accidental reversions in the past, I think it's something we should all keep an eye out for when reviewing pull requests. @LaSerpe thanks for tracking down the history on the changes. For unit tests: agreed, those would be very useful and I would be interested in seeing them too. ; For short term/ad hoc purposes, another option that hasn't been mentioned in this thread is using a debugger to inspect the values as the code runs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439579886:706,test,tests,706,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439579886,1,['test'],['tests']
Testability,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:320,test,test,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,2,['test'],['test']
Testability,"This problem appears to be solved, tested with current develop branch (hacked configs below).; [configs.zip](https://github.com/su2code/SU2/files/3724204/config.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/713#issuecomment-541622770:35,test,tested,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/713#issuecomment-541622770,1,['test'],['tested']
Testability,"This pull-request is here to allow code-review but i prefer to not merge it for the moment:; - I need to double check code; - test it; - wait for answers in #246 ; - copyright question: how do you manage authoring ? Explicitly in source code, only using git log, in README ? other ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/249#issuecomment-197398647:126,test,test,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/249#issuecomment-197398647,2,"['log', 'test']","['log', 'test']"
Testability,"This sounds like an important thing to fix, and it looks like you've done some serious work to confirm it. ; Would you mind putting your changes into a pull request?. Since the ideal gas version has been around for longer, I would initially suspect that there is another sign flip somewhere else in the code for some reason (which may be hard to find... especially if the code needs some cleanup). Just in case, I suggest running a verification case with both versions, using the ideal gas law as the 'arbitrary' equation of state, and comparing against the built-in ideal gas, under both versions of the code, in order to confirm that the result changes to be the same when the sign is changed as you suggest. Ideally, something that can be compared to results from another code or to experiment to confirm that the sign-corrected version is correct, especially since I'm guessing this will effect a lot of regression tests. Code cleanup is of course always appreciated as well. @salvovitale & @LaSerpe since it looks like you've worked on the real gas version: any comments, and do you have a viscous test case?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-438736476:919,test,tests,919,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-438736476,2,['test'],"['test', 'tests']"
Testability,This was for test purposes only.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/80#issuecomment-57348241:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/80#issuecomment-57348241,1,['test'],['test']
Testability,This was more critical than I originally thought (I just ran into another issue related to it). The fix was a very small one.. I think the tests will pass now. We'll merge this in right away after that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191961667:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191961667,1,['test'],['tests']
Testability,"Tim,. The HB regression test residuals are off and the simulation diverges as of; now. I'll take a closer look at it asap. Let's wait for merging it in until; then. Sravya. On Sat, Jan 7, 2017 at 8:08 AM, Tim Albring <notifications@github.com>; wrote:. > Of someone could also run the regression tests (or at least the HB tests); > on a mac that would be even better (maybe you did this already @sravya91; > <https://github.com/sravya91>?)!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/351#issuecomment-271092271>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenIN8rpValtthhcy38-pFA1YUZa5bUks5rP7iXgaJpZM4Lck3G>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271109435:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271109435,3,['test'],"['test', 'tests']"
Testability,"Tim,; as I saw your commit 4d89f49ef88c0027f4cf2b8d980c9b63a7a80f92, marked ""Removed Free-surface/LevelSet features for now"" I thought the features are out at the moment. Surely, here at our university, we're interested in testing the implementations, and if they turn out promising, I'll assemble a group of programmers/engineers to contribute further. I'd like to point out that marine industry is extremely wide, and that SU2 code _base_ is more promising than other solutions, hence it would be pity not to progress in this direction.; Br, Josip",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/348#issuecomment-268054351:223,test,testing,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/348#issuecomment-268054351,1,['test'],['testing']
Testability,"To add some data I'll put a test where you can see the issue:. This is an inviscid Euler simulation using the Span-Wagner EoS (CoolProp) of a non-ideal MDM nozzle, see https://su2code.github.io/tutorials/NICFD_nozzle using ```GREEN_GAUSS``` for the gradient computation. Convergence can still be achieved but the solution at the inlet corner is completely wrong, while the outlet is ok most likely because characteristics are outgoing as it is supersonic. The artifacts disappear if we disable MUSCL everywhere (1st order solution) or disable it only on boundaries (not ideal solution, but disabling only on corners would still be good enough for now I believe). Using ```WEIGHTED_LEAST_SQUARES``` seems to not present the same issue, in this test case at least, as the stencil ""does not care"" about the boundary states. The boundary conditions are:; - ```MARKER_SYMMETRY``` at centerline; - ```MARKER_EULER``` at wall; - ```MARKER_RIEMANN= (INLET, TOTAL_CONDITIONS_PT, 904388, 542.13, 1.0, 0.0, 0.0)``` at inlet; - ```MARKER_RIEMANN= (OUTLET, STATIC_PRESSURE, 200000.0, 0.0, 0.0, 0.0, 0.0)``` at outlet. I tried both with and without a slope limiter as there are no discontinuities, but it makes no difference on the artifacts:. ```; SLOPE_LIMITER_FLOW= VENKATAKRISHNAN_WANG; VENKAT_LIMITER_COEFF= 0.1; ```. # Complete test case ZIP; [mdm_coolprop_nozzle.zip](https://github.com/su2code/SU2/files/15403732/mdm_coolprop_nozzle.zip). # Inlet pressure zoom; ![Screenshot from 2024-05-22 15-06-36](https://github.com/su2code/SU2/assets/79575547/9ba71127-cb12-4c5f-8e49-3ea9e839b1f4). # Notation: ; - ""1st order"" no MUSCL; - ""2nd order"" MUSCL as implemented in SU2; - ""2nd order (BC 1st order)"" I simply disabled MUSCL on ALL physical boundaries in the upwind residual computations, see code snippet below. # Proof of concept code modification for ""2nd order (BC 1st order)"":; To show that the error lies in MUSCL/gradients at boundaries I added these two lines of code in the upwind gradient computation;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449,4,['test'],['test']
Testability,"To confirm, there seems to be a similar problem in 2D. I did the following test for the test case ""steady_inverse_design"". Ran test case with given mesh and config file.; This gave CP_diff=0.178; Copied ""surface_flow.dat"" -> ""TargetCp.dat"" (they seem to share the same format); Re-ran the test case; This gave identical results apart from the Cp_diff=0.009; Again this should definitely equal zero. I have looked through the source code and found the line that I think equates this value:. PressDiff += Area \* (CpTarget - Cp) \* (CpTarget - Cp); (from SU2_CFD/src/output_structure.cpp line 7529). There seems to be some other problem affecting this though as (CpTarget - Cp) should be zero.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321#issuecomment-254857757:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/321#issuecomment-254857757,4,['test'],['test']
Testability,"To get this PR going, I have reverted the proposed fix c97610b02bc1281eb766847e7ef5ed7ac451dfb9 for now and excluded the Aachen turbine test case from address sanitizer testing. I'll create an issue about this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2100356516:136,test,test,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2100356516,2,['test'],"['test', 'testing']"
Testability,To keep the authorship and traceability of the changes I will merge this with the failing testcases and update them in a separate PR (since we have to do other transition-related fixes).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463:90,test,testcases,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463,1,['test'],['testcases']
Testability,"To prepare for v7, I have now updated most of the tutorials to take advantage of the new features in this PR. I have also completed a sweep through all regression tests using this branch and have verified that the tests are ok. So, from my point of view, this is ready to be merged, other than updating the final residuals for a few tests which are pending. I will keep looking into the LSQ issues, so for now, we should be cautious with that option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-558013706:163,test,tests,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-558013706,3,['test'],['tests']
Testability,"To some extent this is a fix for hybrid parallel AD, because the single zone driver used the version of RegisterInput that pushed indices into that global ""inputValues"" vector, and that would not work with OpenMP.; This PR will not be very big anyway. You can test your testcase here, or in #1260, or in a different PR, and then we test the cross term thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284#issuecomment-839792797:260,test,test,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-839792797,3,['test'],"['test', 'testcase']"
Testability,"To test the solver, I'm forcing **CSolverFactory::GetSolverMeta** in commit a3911b7 to return a new SolverMetaData object specifically suitable for use with EULER solver in MULTIGRID settings. It's a temporary action of course, but it gives us a chance to evaluate the validity of the self-registered solver. **And it works**. At least, ""Diffing"" the history.csv of the Inviscid bump in a channel case (ran with both master and feature branches) results in no differences.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062#issuecomment-669803327:3,test,test,3,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062#issuecomment-669803327,1,['test'],['test']
Testability,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:212,Test,Testcase,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,5,"['Test', 'test']","['Testcase', 'testcase', 'testing']"
Testability,"Tom, I noticed that in under SU2_PY you have a parse_config.py that takes the cpp and hpp files and parses the data and returns it to the python UI. What is the data structure for this, is this like a data dictionary, key, value pair? can you give me the data structure for this so that I can reuse this in the web app. . Also may be provide me sample datastructure so that I can test it out in the weblayer. Having this in a weblayer is good idea, we can deploy this weblayer so that anyone accessing the web app can use this to create this configuration and use it as a starter.. I can implement a bottle application in python and deploy it in heroku and it can be used across. Thanks for your help. Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126140571:380,test,test,380,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126140571,1,['test'],['test']
Testability,"Tom, thank you for improving this one.; This sounds cool, I was really looking for an easy way to customize the output to plot, for instance, the entropy field or the mass flow for turbomachinery applications. ; Is this meant to remain hard-coded or are you planning to introduce new options to specify the output from the config file?. I see reg tests failing due to travis time out (I believe we have 50 minutes for each python script). I also experienced that issue before and I had to turn down a couple of check I wanted to add for sliding meshes. We need to think about reorganising reg test to reduce or shorten them without loosing control on code features.; Otherwise we could consider switching to travis.com but I believe we'll have to pay for that. looks good to me by the way. . Ciao!; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259085483:347,test,tests,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259085483,2,['test'],"['test', 'tests']"
Testability,"Tom,. I fixed the nicf cases for the regression tests. ; By the way, I find that this new approach with the regression test files in the SU2 repository works better, good job!!!. Thanks !!! . Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/189#issuecomment-132565221:48,test,tests,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/189#issuecomment-132565221,2,['test'],"['test', 'tests']"
Testability,"Tom,. Ok. So 3 Gb and 4 sec to write on 72 cores is about 10.6Mb / sec / core. Since not each core has access to a separate I/O node (assume 8 cores / processor), that would give upwards of 80 Mb / sec / node which is quite respectable. The reading seems a bit slower, but it is indeed a major improvement. Later in time we should do some tests for much larger files to make sure we get some level of scalability. Best,. Juan. On Mar 3, 2017, at 10:40 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. Don't know those numbers yet for the aggregate bandwidth with Lustre or how many I/O nodes are available for this cluster. Will have to do a detailed analysis eventually. For reference, this RANS case at 27 million grid points (not cells) results in a 3 GB restart file (binary). I'll take the two orders of magnitude improvement :). Tom. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/379#issuecomment-284035130>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxLewYDD1YDs9b-b3gf61tw7hQLMcks5riF6TgaJpZM4MMhev>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284049783:339,test,tests,339,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284049783,1,['test'],['tests']
Testability,"Tom,. The endian test I got from http://cs-fundamentals.com/tech-interview/c/c-program-to-check-little-and-big-endian-architecture.php. The byte swapping function is mine and I am OK with you adapting it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414104646:17,test,test,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414104646,1,['test'],['test']
Testability,"Tom,. This looks very good in terms of absolute times to read and write input/output. Kudos. The scaling is a bit less exciting, although the mesh seems too small for the large numbers of cores you were using, so one cannot draw conclusions from that (unless you were to run on 32 cores or 16 cores, etc). One interesting thing would be to compute the effective read/write bandwidth…for example, for 72 cores, what was the total (binary) size of the file being read/written? We can compare those bandwidths to the single-stream I/O bandwidth that can be obtained in a single node. Excellent addition…this will be a game changer, particularly for unsteady flow solutions and for time-accurate adjoints. Best,. Juan. On Mar 2, 2017, at 6:23 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Quick scaling tests show major improvements with the new output for reading and writing of restart files. See attached. Tim, have you been testing with Intel compilers? I ran into an issue with Intel compilers on one cluster with the restarts, and I want to see if it was an isolated incident. If all looks good, we'll merge in soon. [output_performance]<https://cloud.githubusercontent.com/assets/4896083/23535771/5d47d730-ff75-11e6-9be0-8e9542093bc1.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/379#issuecomment-283846632>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxIkqhSns_LD5aGGFMQGKgvv-yka5ks5rh3m_gaJpZM4MMhev>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-283850716:844,test,tests,844,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-283850716,2,['test'],"['testing', 'tests']"
Testability,Unfortunately it looks like the serial regression test with Python wrapper is timing out for both versions. Any ideas to speed this up or perhaps request another minute or two?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347509883:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347509883,1,['test'],['test']
Testability,"Unfortunately, I have not been able to recreate this issue on my systems with the simple test case that you shared @yukaiweng. . @talbring or @EduardoMolina, if you have some time, could you give the attached toy problem a try on your machines? I ran for a couple of unsteady iterations and then restarted on the third iteration (successfully for me). I think we're just missing something simple... [ascii_restart_test.zip](https://github.com/su2code/SU2/files/1659029/ascii_restart_test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-360050851:89,test,test,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-360050851,2,['test'],['test']
Testability,"Unfortunately, I wasn't able to get all of them. I fixed a majority of the calls but couldn't find workarounds all of them. There are 8 left in the following files: . `SU2_PY/change_version_number.py`: There's 2 in here. One is a complicated command with `grep` and pipes and the other is a simple `rm -rf`, but it isn't a security risk since there is no user input into that string. `SU2_PY/SU2/util/pyCppTap.py`: This is in the diff_routine and uses `tapenade`. I have no idea what this does so I didn't touch this one. `SU2/opt/server.py`: There are 4 `scp` calls that I didn't know how to replace. `SU2_PY/compute_polar.py`: There's one left in here which is a complicated `cat` call that I couldn't figure a workaround for. . If you have any suggestions for any of these, I can try and implement them. . Otherwise, once these tests pass, its good to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533590086:831,test,tests,831,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533590086,2,['test'],['tests']
Testability,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:27,test,test,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,4,['test'],"['test', 'tests']"
Testability,"Usually when I am testing and changing shape_optimization features, I use the `TestCases/optimization_euler/steady_naca0012` case. It's quick and you can make it faster by specifying a better convergence characteristic (currently it runs until density residual is < -13)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921#issuecomment-607356102:18,test,testing,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-607356102,2,"['Test', 'test']","['TestCases', 'testing']"
Testability,"Verification results [here](https://github.com/su2code/SU2/files/3192519/verif.pdf) along with pictures of the failed testcases, 5/6 new reference residuals are lower than before. Funny story the prism elements do not need negative weights in CVolumetric movement... Only the elasticity solver seems to need this, I tested both with a mesh with mixed elements. I have no explanation for this... the code is the ""same"" in both places.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-493543146:118,test,testcases,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-493543146,2,['test'],"['testcases', 'tested']"
Testability,"Verified on an Apple M2 hardware that `platform.processor()` returns `arm` and `platform.machine()` returns `arm64`. ; I think possibly even outside of the `platform.processor()` vs. `platform.machine()` discussion, the TestCase.py script currently might not be able to handle all the different values returned by MacOS or Windows systems. . One fix could be to check for `AMD64/x86_64` and `arm64/aarch64`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159#issuecomment-1797836583:220,Test,TestCase,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159#issuecomment-1797836583,1,['Test'],['TestCase']
Testability,"Wait for the regression tests to pass, and if they pass you can merge this PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806#issuecomment-1311937473:24,test,tests,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806#issuecomment-1311937473,1,['test'],['tests']
Testability,Was just waiting for the tests to finish. Merging now. Thanks again for the effort,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459772171:25,test,tests,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459772171,1,['test'],['tests']
Testability,"We already require C++11 for some more advanced features, but it is always nice in my opinion to keep backward compatibility when possible. . However, this is not a deal breaker, I don't think, as most developers that want to use and add their own unit tests should have no problem with using C++11. If we can make it an optional dependency, to make sure the basic build still works simply, I think it could be ok.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-503685445:253,test,tests,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-503685445,2,['test'],['tests']
Testability,"We are actually having a group meeting, cloned and compiled in two machines while discussing SU2 with the whole group, and experienced this one-commit-behind issue. This has all been in the context of brainstorming open-science and reproducibility practices for CFD. . We've continued to discuss it and we wonder if this might be avoided by keeping the Tests as a folder in the main SU2 repo, rather than having a separate repo for Tests. . Is there a reason why you decided to have a separate repository for Tests?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72737918:353,Test,Tests,353,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72737918,3,['Test'],['Tests']
Testability,"We are getting closer on this topic, but I am still wondering if we can go further... . I think it would be great if we can eventually do away entirely with the first two levels of the directory structure: the Common/, SU2_CFD/, etc. level as well as the src/, obj/, etc. level below that. Instead, we can have all cpp and hpp alongside each other in the various subdirectories at the root level (or maybe inside a single cpp/ or src/ directory at the root level). . At the moment, a lot of navigation is required to move between files that are logically related due to the module structure and the separate of cpp/hpp files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630640981:545,log,logically,545,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630640981,1,['log'],['logically']
Testability,"We are wondering what the status with the merge request is. Am I supposed to do something more? is it just waiting for an additional review? . Additionally, we have many more proposed modifications, we have worked on, adding robustness to the existing turbulence models. It is expected, many of these changes will effect the test cases behaviour, are there any guidelines how to compile the code to run the full set of tests locally, or should I just open pull requests, and base upon the github test results? ; ; I am sorry if I may be asking the obvious, but I am new to contributing to open code..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152:325,test,test,325,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152,6,['test'],"['test', 'tests']"
Testability,"We have releases every month and the official build system is meson.; If this (or any other) feature is fundamental to you, I kindly suggest that you follow the pull requests, and/or test the develop branch prior to each release to make sure it still works.; -DNDEBUG should be added to the compiler flags (CXXFLAGS) not to the preconfigure options (with meson this is done automatically).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601083184:183,test,test,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601083184,1,['test'],['test']
Testability,"We should also think of a smarter way of setting up the travis system. Running 12 independent jobs, each of them having to compile the whole code multiple times, just to test python is a little bit of an overhead.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-443522164:170,test,test,170,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-443522164,1,['test'],['test']
Testability,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393,1,['test'],['test']
Testability,"We will merge this PR next in order to have enough time for testing and for you to solve conflicts (if you need any help to solve those, please contact me). Even if this PR is merged, please continue to give feedback on the usability. We will still continue to work on that. Refer to the user documentation in order to learn how to adapt your config files. Let me know if you have any questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534522241:60,test,testing,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534522241,2,['test'],['testing']
Testability,"Well it's not supposed to be needed, but something weird is going on.; Blas and Lapack are technically separate things but when I tested this openblas seemed to build both into the same library, perhaps arch linux does things differently (on ubuntu 16 they were separate packages). At any rate, try getting this package https://aur.archlinux.org/packages/openblas-lapack/; If the build still fails, try adding `-Dblas-name=openblas-lapack` to the meson options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632014885:130,test,tested,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632014885,1,['test'],['tested']
Testability,Well thanks for fixing the typo. . It seems we use `OUTPUT_WRT_FREQ` for steady and unsteady simulations. Therefore the testcase cleanup was a bit more involved. For steady cases `WRT_SOL_FREQ` had to be replaced and for unsteady ones `WRT_SOL_FREQ_DUALTIME` to follow the author's intention... and I have the feeling that nearly every testcase had these options in it. . I have to admit I don't understand why 7.0.9 would be awkward 🤔,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743185037:120,test,testcase,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743185037,2,['test'],['testcase']
Testability,"Well, I've noticed the problem, because the unit tests don't pass - cavity and spinning cylinder especially. They exceed the number of iterations, and at the same time there is a result discrepancy. Increasing the number o iterations in serial_regression.py does not help, in fact it makes the delta worse.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1657732568:49,test,tests,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1657732568,1,['test'],['tests']
Testability,"What do you mean by logically related? [Compressible / Incompressible / Turbulent] solver+variable+numerics+output ?; I think having the top level of folders following the class hierarchy is helpful to someone who is trying to follow the code execution for the first time.; Maybe we can have some subdirs for specific physics in /solvers /variables and /output (similar to what I did with /numerics to keep a compromise between the old file structure and the new)?; I would not mind merging Common and SU2_CFD now that there are descriptive sub-directories for geometry, solvers, etc. I'm not sure if linking everything into just one library is a good idea though (e.g. is it going to make the binaries much larger?).; We should perhaps then move the applications to a separate folder ""SU2_APPS"" where we would put CFD, DEF, DOT etc.; I don't mind having hpp's and cpp's together as we have a fair bit of implementation also in header files, I guess most IDE's have filters to separate them if folks prefer to see them that way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630724704:20,log,logically,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630724704,1,['log'],['logically']
Testability,What is the equivalent of DUAL_TIME in the TIME / OUTER / INNER versions we have now? TIME?; (so that we can auto-replace the stuff that is used in the testcases without breaking things too much). With all this deprecation the next version number should probably be 7.1.0 even if I would call these things bug fixes from v6.2 to v7.0.; Going 7.0.8 -> 7.1.0 also saves the awkward 7.0.9 -> 7.1.0 (which would make people wonder if we know how version numbers work).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743153471:152,test,testcases,152,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743153471,1,['test'],['testcases']
Testability,What's high in this case? Is it larger than the maximum residuals you have in the rest of the domain?; BTW you need to change the file .github/workflows/regression.yml to point to your testcases branch.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821#issuecomment-1321273580:185,test,testcases,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821#issuecomment-1321273580,1,['test'],['testcases']
Testability,"When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222#issuecomment-792576044:9,test,tests,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792576044,2,['test'],"['test', 'tests']"
Testability,"Where do the meshes come from or where should I place the new mesh and the restart files? For example, there is no ./TestCases/gust/mesh_NACA0012_inv.su2 in the repository...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545813749:117,Test,TestCases,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545813749,1,['Test'],['TestCases']
Testability,"Why don't I add additional regression cases of multiple objective on a single surface and a single objective on multiple surfaces, I think otherwise the situations you mention are covered (both of those should already work, but may not be covered by regressions, and they can easily be covered by single-iteration tests). ; There is a tutorial page here: ; https://github.com/su2code/SU2/wiki/Multi-Objective-Optimization; Although that's from a while ago I don't think much needs to be changed, except for broken links including images.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-357367522:314,test,tests,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-357367522,1,['test'],['tests']
Testability,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:201,test,tested,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657,1,['test'],['tested']
Testability,"With the pushes from @bigfooted, this is mostly complete. I believe all options are now implemented, except for the rotational correction. What should the plan for V&V/testing be?; I think we need to also address all the regressions....since no SST case should work now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1083993859:168,test,testing,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1083993859,1,['test'],['testing']
Testability,Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459705131:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459705131,1,['test'],['test']
Testability,"Writing a simple unit test is difficult, since SU2 both doesn't have unit tests and wasn't written with unit testing in mind. That being said, I've got a unit test that I'm happy with. Our group has put our own unit-testing framework into our fork of SU2, based off of Boost and automake testing. The unit test I created runs off of that framework. That means it won't run out-of-the-box on the develop branch of SU2. When I run the unit test with no changes to `CNumerics::GetViscousProjJacs`, I get that the residuals and Jacobians match to within 10 times the machine epsilon, aside from the [4][0] value of the Jacobians. There, the relative difference is of the order 1E-6. When I switch the two lines in `CNumerics::GetViscousProjJacs` for ideal gases to be negative, the tests run with no complaints. Ideal gas and generalized variants match to within 10 times machine epsilon. I'm uploading my test file just as an example, in case anyone wants to see what I've tested.; [viscous_ideal_vs_general.zip](https://github.com/su2code/SU2/files/2590517/viscous_ideal_vs_general.zip). As for comparison to some results from another code, I think that's a lot to ask. Getting a good comparison would depend on an understanding of how the ideal gas model, viscosity, numerics, and Jacobians are handled in the external code. Small differences would make the comparison completely invalid. I completely support testing and checking the changes I'm proposing. But comparison with an external code seems to provide a very low return on investment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439491945:22,test,test,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439491945,24,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,2,['test'],['test']
Testability,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:1132,log,log,1132,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,1,['log'],['log']
Testability,"Yeah, I also tried the Roe case which actually gives more strange numbers (1.7 Pa), but by the way these are only tutorials. regarding the Reynolds number, that's correct, lowering density will also lower the Reynolds number. But reducing the Mach number (and thus free-stream speed) is also a way. The thing is that the HLLC solver I'm testing works pretty well for the supersonic wedge (an also for others) but suffers a lot this test case (computation explodes at first iteration). ; Can we think about changing the config file a little bit (perhaps changing the fluid)? Is there a particular reason why the HLLC solver is needed here?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-181892267:337,test,testing,337,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-181892267,2,['test'],"['test', 'testing']"
Testability,"Yeah, sorry. I still plan to add a regression test sometime in the future. But I've been swamped this past month.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921#issuecomment-620730868:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-620730868,1,['test'],['test']
Testability,Yeah... I had not tested discrete adjoint but my spider senses were tingling.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087424994:18,test,tested,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087424994,1,['test'],['tested']
Testability,Yep and as a first check one can of course always re-run the whole testset by clicking `re-run jobs` in the top right corner of the actions tab,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1384#issuecomment-932169245:67,test,testset,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1384#issuecomment-932169245,1,['test'],['testset']
Testability,"Yep, I don't know of any changes to `map` from Python 3.6 to Python 3.7. In light of that, though it may be useful in the future to always test with the latest Python available from Anaconda, I'm going to close this for now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-445541373:139,test,test,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-445541373,1,['test'],['test']
Testability,"Yep, please do the latter. You can find the test case repo here: https://github.com/su2code/TestCases. Note that, by construction, it has the same directory structure as the TestCases/ directory under the SU2 repo. If you submit a pull request there to the develop branch with your new grid(s), we can merge it in right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265649052:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265649052,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"Yep, this is not tested in the regression tests, so it slipped through.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603#issuecomment-434815411:17,test,tested,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/603#issuecomment-434815411,2,['test'],"['tested', 'tests']"
Testability,"Yep, time to get this one in. After updating the statement and the tests pass, let's merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-445302768:67,test,tests,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-445302768,1,['test'],['tests']
Testability,"Yes Tom, we also have a 3D case to test! We will keep you posted on it!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211#issuecomment-159358142:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/211#issuecomment-159358142,1,['test'],['test']
Testability,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626875076:222,log,logic,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076,2,['log'],['logic']
Testability,Yes it depends on the order of the grid points but it will give the correct y-coordinate whenever the previous vertex in the loop is the one adjacent to the y=0 vertex on the marker or if the loop starts at y=0 it works if the next one in the loop which is adjacent on the marker. It seems to be the case for my examples but I don't think it always is. . I don't like it but I can't find a Get which returns the index of the adjacent node on the marker when passing the index of the current vertex or node in the loop. . ` geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor() ` does not return the right one . ` geometry->node[iPoint]->GetPoint(index) ` with some `index` should return the right one but the index where it is stored varies so I need to look into the logic behind that,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-611106724:771,log,logic,771,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611106724,1,['log'],['logic']
Testability,Yes it did but it's unrelated. Surprised this bug here could creep in. For the regression it seems like it is still using the old restart file and not the one I pushed to TestCases master a few hours ago. Not sure what I am missing here,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1366#issuecomment-910525512:171,Test,TestCases,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366#issuecomment-910525512,1,['Test'],['TestCases']
Testability,"Yes there is a discrepancy in the last digit for one the gradient values.; Since the reference file for the gradient values is in the Testcases repository and not the SU2 repository, I created a small pull request there to change the value. See su2code/TestCases/pull/84.; Together the changes lead to the test passing as expected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1437#issuecomment-968062780:134,Test,Testcases,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437#issuecomment-968062780,3,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"Yes, I'd say that the V&V regression tests should definitely start from the converged solutions that were used to produce the results on the V&V website. . But for cases that do not have V&V documentation, the regression tests are imo merely a way to detect and prevent unwanted changes/side-effects (so, what you said). If they need to be more than that, they should be upgraded to a V&V with proper documentation. For the cases that are not VandV I'd rather have a 'start' + 'restart' regression test, with restarts from the 'start' results. In that way the restart files are always generated from the current code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759:37,test,tests,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759,3,['test'],"['test', 'tests']"
Testability,"Yes, after this kind of correction the tests succeed, here and in #1286! (Shifts are handed to `CopyData` and added there, because `recvbuf` is a void pointer). Closing this PR now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292#issuecomment-850379675:39,test,tests,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292#issuecomment-850379675,1,['test'],['tests']
Testability,"Yes, in the testcase described here: https://github.com/su2code/SU2/pull/1362#issuecomment-964163647 I saw in the debugger that halo vertices occur in the loop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430#issuecomment-964531526:12,test,testcase,12,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-964531526,1,['test'],['testcase']
Testability,"Yes, indeed. I'll open a (rather empty) Draft PR soon in order to pressure myself a bit to get this test going. I am sorry for the delay :(",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-1017659476:100,test,test,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1017659476,1,['test'],['test']
Testability,"Yes, it is an issue on the Elwetritsch cluster. I tested this and the solution works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1532#issuecomment-1027952018:50,test,tested,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532#issuecomment-1027952018,1,['test'],['tested']
Testability,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:187,test,tests,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242,2,['test'],['tests']
Testability,"Yes, the new jacobian implementation is less diffusive. Besides this, the low Mach number correction also results in less diffusive, final, formulation (as Tornber says in his paper). I expect this to result in reduced stability when the flow has very sharp discontinuities, like the contact surface between the recirculation zone and the external flow, since they are better captured.; I have made some modification to my implementation and now it works also for this test case (though CFL has to be lowered from 4.0 to 2.0, as I was expecting, to make it eventually converge).; If this looks good to you, I'll change the CFL number and push it to the repo. Regards,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-185308834:469,test,test,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-185308834,1,['test'],['test']
Testability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:82,test,tested,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,2,['test'],['tested']
Testability,"Yikes. Thanks, @LaSerpe, for the heads up. There is clearly something wrong with SU2_SOL for many of the cases, although the compute portion is fine. We should get a test case set up for SU2_SOL, or at least try to catch these errors too. @fpalacios, can you please take a look at this problem when you have a moment? It seems to have shown up with the merging of feature_cte_cl. Just fyi for all: the Travis CI folks have generously granted extra time for our regression tests, up to 70 minutes now. This fixes the time-out issues in the short term, but there are a few strategies we should look at for caching or further decomposing our builds to keep under the time limits in the future as we keep growing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-262118156:166,test,test,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-262118156,4,['test'],"['test', 'tests']"
Testability,"You are right, this used to be covered by the `Kind_Regime` logic but it is broken now...; (One more example where #770 would help)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/846#issuecomment-586692534:60,log,logic,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/846#issuecomment-586692534,1,['log'],['logic']
Testability,You are right. I opened another pull request!. But we should definitely add some tests to travis to check that the python framework works.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/223#issuecomment-170667585:81,test,tests,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/223#issuecomment-170667585,1,['test'],['tests']
Testability,"You can now access any output, please look at the examples in TestCases/pywrapper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2263#issuecomment-2056876262:62,Test,TestCases,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/2263#issuecomment-2056876262,1,['Test'],['TestCases']
Testability,You can relax the tolerance in the python script of the failing test @j-signorelli,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078#issuecomment-1634426099:64,test,test,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078#issuecomment-1634426099,1,['test'],['test']
Testability,"You can use paths for the inputs and outputs of the code, e.g. RESTART_FILENAME= ./test/restart.dat or MESH_FILENAME= ../mesh.su2; I think it is much safer if you use paths for inputs and change directory to where you want the files written.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1658#issuecomment-1147844675:83,test,test,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/1658#issuecomment-1147844675,1,['test'],['test']
Testability,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:228,log,logic,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886,4,['log'],['logic']
Testability,You do -Denable-tests=true and then you get `test_driver_*` executables,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1140286829:16,test,tests,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1140286829,1,['test'],['tests']
Testability,You just have to update the files in the TestCases repository (`TestCases/cont_adj_euler/naca0012/of_grad_directdiff.dat.ref` and `TestCases/cont_adj_euler/naca0012/of_grad_cd_disc.dat.ref`),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/444#issuecomment-332825983:41,Test,TestCases,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/444#issuecomment-332825983,3,['Test'],['TestCases']
Testability,"You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2467,test,testing,2467,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability,"[Here](https://github.com/su2code/SU2/files/3291497/report.pdf) are some promising results, I took a transonic turbulent airfoil case I had, and a couple supersonic ones from the testcase repo (biparabolic and wedge). I kind of random selected the numerical scheme for each one and tried to make the settings fair. [These](https://github.com/su2code/SU2/files/3291494/files.zip) are the required files should anyone want to replicate the findings.; @aeroamit Thank you. I do not have much interest in low Mach applications and I am not familiar with the required preconditioning techniques so I am sorry but I will not be running that test myself. I have yet to test the discrete adjoint now that preaccumulation is available for these AUSM-family schemes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-502193463:179,test,testcase,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-502193463,3,['test'],"['test', 'testcase']"
Testability,"[Here](https://github.com/su2code/SU2/files/3302370/benchmark.zip) are some comparisons for a case where the linear solver does little work (so not much benefit from this PR) and another where the linear solver has to work harder (18 iterations per iteration on average) and this makes a substantial difference.; I have started updated the residuals of things that seem consequence of round-off error, only one case requires closer inspection where things change several orders of magnitude (for the best).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503201187:52,benchmark,benchmark,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503201187,1,['benchmark'],['benchmark']
Testability,"[flat plate test.zip](https://github.com/user-attachments/files/16321830/flat.plate.test.zip); @pcarruscag Hi Pedro, thanks for the help. I used your modified one to do a plat plate test, which could work without inlet profile, however, when I input the inlet profile with uniform value(should be same as no-input), it still diverged immediately. I was looking through the function 'LoadInletProfile' in CSolver.cpp these days, maybe there should be some changes around? Because there is a determination of inlet type, which SUPERSONIC_BC doesn't belong to, I am not that sure if it effects. I attached all the testing files, including mesh, config, profile dat, etc. Please take a look and let's debug on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909:12,test,test,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909,4,['test'],"['test', 'testing']"
Testability,"[kw2.zip](https://github.com/user-attachments/files/16349664/kw2.zip). Here is SWBLI config and mesh file I used. The original freestream turbulence intensity is a 5.0e-4, I was changed arbitrary to 5.0e-2 for test. Also you can easily observe any high Mach number simulation with high TKE.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245328618:210,test,test,210,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245328618,1,['test'],['test']
Testability,"_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull requ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3151,Test,Tested,3151,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Test'],['Tested']
Testability,"```; Should I assume from this that I can delete the SU^2 Jira space? . ~MC; ```. From: Trent Lukaczyk [mailto:notifications@github.com] ; Sent: Monday, October 28, 2013 9:56 AM; To: su2code/SU2; Subject: [SU2] test (#6). test issue. —; Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/6 .Image removed by sender.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/6#issuecomment-27230990:211,test,test,211,https://su2code.github.io,https://github.com/su2code/SU2/issues/6#issuecomment-27230990,2,['test'],['test']
Testability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:1699,test,tests,1699,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,2,['test'],['tests']
Testability,"`update testcases, streamwise pin converges well` Thanks for checking @pcarruscag :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770:8,test,testcases,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770,1,['test'],['testcases']
Testability,"able). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Diffuser; > 4. Backward facing step; > 5. Unsteady Square cylinder; > 6. NACA0012; > 7. NACA4412 Trailing Edge Seperation; > 8. Joukowski Airfoil; > 9. 30P30N High Lift airfoil; > 10. ONERAM6 Wing; > 11. NASA CRM; > 12. Subsonic and Supersonic Jets; >; > It would be ideal for these test cases to have either high-fidelity data; > (wind tunnel tests, or LES/DNS data), and/or published results of other; > solvers so that comparisons can be made.; >; > I also want to point out the difference between this and the TestCases; > repository. The TestCases repo is used in regression tests to ensure that; > parts of the code don't break when changes are made. This is more a test of; > SU2's fidelity. It would feature large grids and configuration files that; > can be run to convergence.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/581>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APKNm0MgSdkhQbG8dvGsdxlxIf9pa1xsks5ucppYgaJpZM4Ww0V4>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:2601,test,test,2601,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,6,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1565,Log,Logfile,1565,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170,3,"['Log', 'log']","['Log', 'Logfile', 'log']"
Testability,added testcase and regression test.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1154#issuecomment-766695831:6,test,testcase,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154#issuecomment-766695831,2,['test'],"['test', 'testcase']"
Testability,"al changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; *",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3921,test,tests,3921,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2378,test,test,2378,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['test']
Testability,"ance.; The git add, git commit and git push commands worked as expected.; The only problem I had was when I tried to upload the mesh file to https://github.com/su2code/TestCases/tree/develop/disc_adj_euler: <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler:> I wanted to upload a folder “arina2k”, whose contents is the mesh file (.su2). I could not just upload the folder name: the system appears to be waiting for an actual file name. When I choose the file name inside that folder , it appears that the system would upload the file within the repository, but 'discarding’ its folder name, so I would have an ‘orphaned’ file there. I tried also to create a file (which would be my folder name), but again, I am prompted with an editor in order to write an actual file, using directly the browser. I believe that there is a simple way to upload a sub-directory/filename, but i could not realize it. With kind regards,. Jairo. > On Dec 14, 2018, at 01:26, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop <https://github.com/su2code/TestCases/tree/develop>. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-447209397>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hTDpbM_TXuwfdIJnHpDEpp295gqks5u4yh5gaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447475363:1312,Test,TestCases,1312,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447475363,5,['Test'],['TestCases']
Testability,"anual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3850,test,tests,3850,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"appening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:2209,test,tested,2209,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,1,['test'],['tested']
Testability,"are also released with precompiled executables. This is for instance ""SU2 v.8.0""; > * A new master branch is created from the latest _develop_ branch. Developers are usually working with the develop branch to have access to the latest implementations. New implementations are committed to the develop branch.; > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > ; > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > ; > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > ; > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?. Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attached the error file with Valgrind output. After eliminating the difference of different branches(versions), I guess you may have the same error? The test files are on the above conversations so that you may also take a try. Thanks for the help!; [error.txt](https://github.com/user-attachments/files/16323710/error.txt); @pcarruscag @bigfooted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241546869:1643,test,test,1643,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241546869,2,['test'],['test']
Testability,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:1301,test,test,1301,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,2,['test'],['test']
Testability,"avior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3119,test,testing,3119,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:1381,test,test,1381,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,2,['test'],['test']
Testability,"bal flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2256,test,testing,2256,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2628,log,log,2628,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,6,['log'],"['log', 'logfile']"
Testability,"calability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. Mesh 1 (6.8e6 cel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593127059:1461,log,log,1461,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059,1,['log'],['log']
Testability,"cations@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1757,test,test,1757,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['test']
Testability,"ch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3515,test,tests,3515,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4668,test,tests,4668,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability,"ck Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3256,test,tests,3256,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,4,['test'],['tests']
Testability,"comes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Comp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5102,test,tests,5102,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability,"compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HAVNCNA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HFS5T4HH2MWIC4JR4TQAXH4ZANCNFSM4IFZ52EA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1954,log,log,1954,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,3,['log'],['log']
Testability,discadj_incomp_turb_NACA0012_sa now fails with a small difference in residuals. But this case passed the regression test on my machine. I don't see what could have triggered this change.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1081714870:116,test,test,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1081714870,1,['test'],['test']
Testability,"e a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3020,test,tests,3020,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"e have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4728,test,testing,4728,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability,"e useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development envir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1631,test,tests,1631,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1829,log,log,1829,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,4,['log'],['log']
Testability,"eckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4771,test,test,4771,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,"economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1917,log,logical,1917,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['log'],['logical']
Testability,"ed the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a temporary block - Interleaving the writes with the computation could help mask latency.; - That temporary is not stored contiguously - Which makes it hard to vectorize the writes to CSysMatrix. **So what do I think should be tackled next?**; Hybrid parallelism (wait what?!) from messing about with this case (and more refined versions) it is clear the MG puts some limits on how many cores can be used ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:4361,test,test,4361,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['test'],['test']
Testability,"ee this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simple",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4306,test,test,4306,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['test']
Testability,"ee when does this error occur.; The first case is a RANS simulation for CRM wing. My configure file is opt_crm.txt in the attachment.; In this case, when I set FIXED_CL_MODE= YES, then in the end of the SU2_CFD execution, it will return messages below:. `Writing comma-separated values (CSV) surface files.; Merging coordinates in the Master node.; Merging solution in the Master node.; Writing SU2 native restart file.; Writing the forces breakdown file.; *** Error in `SU2_CFD': double free or corruption (!prev): 0x0000000007dc2aa0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7fbaa7b177e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7fbaa7b1fe0a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7fbaa7b2398c]; SU2_CFD[0x8553d5]; SU2_CFD[0x855c59]; SU2_CFD[0x7583c2]; SU2_CFD[0x75ceb5]; SU2_CFD[0x40759c]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbaa7ac0830]; SU2_CFD[0x735109]; ======= Memory map: ========; 00400000-00d07000 r-xp 00000000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; 00f06000-00f2d000 r--p 00906000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; ......`. But, if i turn off the FIXED_CL_MODE, this error won't occur.; Then i tried an invisid test case, this case is orriginally from the TestCases folder of SU2 (TestCases/euler/naca0012). In this case, SU2 works well for both FIXED_CL_MODE and FIXED_AOA_MODE.; Finally, i tried another tutorial case for NACA0012 (from /TestCases/rans/naca0012), then SU2 has the same problem in FIXED_CL_MODE as in the first case. Furthermore, I have noticed that this bug is related to the compilers. ; 1. Intel C++ 2013 + Mpich2-3.0.4, fixed Cl model works; System: RHEL 5.3; 2. Intel C++ 2017 + Mpich2-3.0.4, fixed Cl model fails; System: Ubuntu 16.04; 3. GCC6.1.0 + Mpich2-3.0.4, fixed Cl model fails; System: RHEL 5.3; 4. GCC4.9 + Mpich2-3.0.4,fixed Cl model works; System: RHEL 5.3; 5. GCC5.4 + Mpich2-3.0.4,fixed Cl modelfails; System: Ubuntu 16.04",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383#issuecomment-306425408:1386,test,test,1386,https://su2code.github.io,https://github.com/su2code/SU2/issues/383#issuecomment-306425408,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"en new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers have a preference (or experience with) any of the unit; > testing frameworks?; > - Should unit tests be expected when submitting PRs?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4HTDQXQA>; > .; >; >; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:6402,Test,Test,6402,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,10,"['Test', 'test']","['Test', 'testing', 'tests']"
Testability,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578048838:2363,test,testcase,2363,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838,1,['test'],['testcase']
Testability,"erical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my transition model is the LM-2009, and I have no plans for the 2015-LM model. Therefore, the cross-flow transition is left for future developers. I think the CTransGammaSolver, CTransGSolver, or the other name of classes will be added for the k-w-gamma transition model. It's a vague idea, I haven't really thought about detail yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:1320,test,test-case,1320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,4,"['Test', 'test']","['TestCases', 'test', 'test-case']"
Testability,"es are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/581#issuecomment-423122949>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJzh9dwbOM_5DoymCA6lAIqv3biyks5uc2eqgaJpZM4Ww0V4>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:1517,log,logistics,1517,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,1,['log'],['logistics']
Testability,"es were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:4026,test,test,4026,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['test'],['test']
Testability,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:115,test,tests,115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733,1,['test'],['tests']
Testability,"files reverted - fyi, you can go ahead and revert the change to the regression test script so that it's using the older version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-288223748:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-288223748,1,['test'],['test']
Testability,"from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT; 203c203; < MESH_FILENAME= singlezone.su2; ---; > MESH_FILENAME= n0012_225-65.su2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2707,Test,TestCases,2707,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['Test'],['TestCases']
Testability,fyi; 1. The failing tutorials.py regression test are solved elsewhere so that will disappear upon the next pushed commit; 2. The Complex Code error of CodeFactor can be (most likely) disregarded as a false positive. It does so for eg CSolver.cpp already so i guess we have ourselves a new hypochondriac-file,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-860118605:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-860118605,1,['test'],['test']
Testability,"g if there is a; mistake on lines 1322 to 1325 of Common/src/adt_structure.cpp .; It is currently; < parCoor[0] = -0.5*(parCoor[0] + parCoor[1] + parCoor[2] + 1.0);; < parCoor[1] = 0.5*(parCoor[0] + 1.0);; < parCoor[2] = 0.5*(parCoor[1] + 1.0);; < parCoor[3] = 0.5*(parCoor[2] + 1.0);. I believe it should be. > weightsInterpol[0] = -0.5*(parCoor[0] + parCoor[1] + parCoor[2] +; 1.0);; > weightsInterpol[1] = 0.5*(parCoor[0] + 1.0);; > weightsInterpol[2] = 0.5*(parCoor[1] + 1.0);; > weightsInterpol[3] = 0.5*(parCoor[2] + 1.0);; Can you please confirm if this is correct?. Thank you; Monika. On Wed, May 27, 2020 at 8:32 PM Eduardo Molina <notifications@github.com>; wrote:. > Hi Monika,; >; > We are in the V&V process of a new wall model LES implementation. Also, I; > took the opportunity to start fixing the RANS wall function since it will; > share the same code structure with the WMLES part, i.e. replace the wall; > shear stress in the NS fluxes.; >; > We didn’t extensively test the RANS wall functions, only very limited test; > cases. It will be great if you could run your own cases using the following; > branch:; >; > https://github.com/su2code/SU2/tree/feature_WallModelLES <; > https://github.com/su2code/SU2/tree/feature_WallModelLES>; >; > Please let me know if you need additional help and looking forward to hear; > from you.; >; > Best,; >; > Eduardo; >; >; >; > > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > >; > >; > > Sure Juan! I would like to. Because I was running on RANS but I am; > working; > > on LES to make this wall functions work which is not working either.; > > Please let us know how we can support and work to get this working for; > LES; > > simulation (wall models in SU2).; > >; > > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <; > notifications@github.com>; > > wrote:; > >; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina; > (copied); > > > co-advised a short project last year ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-638479089:1053,test,test,1053,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-638479089,2,['test'],['test']
Testability,"github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a sim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:1288,test,test,1288,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,2,['test'],['test']
Testability,"go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1075,test,testcase,1075,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['test'],['testcase']
Testability,"gy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy conservation equation; + Isotropic part of the turbulent stress tensor. Is there any rationale behind this split, aside from simply stating that ""this seems to work?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:1442,test,tested,1442,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,2,['test'],['tested']
Testability,"has been an intrinsic part of the the modus operandi in many multi-physics codes at DoE and has been well worth the additional effort. In cases where it makes sense (as described by Clark and in the Stack Exchange discussion) I would advocate for using it moving forward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a un",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1044,test,testing,1044,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,6,['test'],['testing']
Testability,"here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/aut",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2963,log,logical,2963,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['log'],['logical']
Testability,"hi @BerkeCan97, thank you for your correction and for helping with the verification part. Indeed, that term seems really wrong, thus I expect that your correction would improve the results. However, the link that you have provided for the corrected version is broken, can you fix it please?. Regarding the test-cases, we were trying to run the NACA0021 at 60deg AoA, but with relatively poor results. Maybe we should start with the flatplate and the mixing layer proposed originally in the implementation of the DDES formulation coupled to the SA model in https://www.researchgate.net/profile/Cleber-Spode-2/publication/318143234_Hybrid_RANSLES_Calculations_in_SU2/links/59c07bfba6fdcca8e56fe3c3/Hybrid-RANS-LES-Calculations-in-SU2.pdf (or any other test-case in the paper you proposed, but I am not able to read that).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447143579:306,test,test-cases,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447143579,2,['test'],"['test-case', 'test-cases']"
Testability,"his involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5028,test,tests,5028,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability,"hmm, [](https://github.com/su2code/SU2/pull/1413/commits/0f4977f4b761df87737ac283518870fb7cbbd466)[0f4977f](https://github.com/su2code/SU2/pull/1413/commits/0f4977f4b761df87737ac283518870fb7cbbd466) must have introduced sth that made the two (streamwise periodic) testcases fail. I think the defining feature here is, that they use the SST-turb model. But looking at the mentioned commit, the changes look equal to me :thinking:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413#issuecomment-1057834812:264,test,testcases,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1057834812,1,['test'],['testcases']
Testability,"hoices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3569,test,testing,3569,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability,i made a little Test for the Non-dimensionalization: Turns out the inc Testcases did not specify `INC_NONDIM` where the default is INITIAL_VALUES. I will specify that for the reg tests. I think the non-dim is currently correct: attached the incomp-SA case comparison INITIAL_VALUES against DIMENSIONAL. . ![image](https://user-images.githubusercontent.com/31306376/137587702-902059e6-dba4-4313-b6a9-360d725f3c4d.png). Here the non-dim value is dimensionalized using what gets printed in the screen output; ![image](https://user-images.githubusercontent.com/31306376/137587688-662b3d91-b478-4cbb-80f6-c374de39473d.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360#issuecomment-944909404:16,Test,Test,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-944909404,3,"['Test', 'test']","['Test', 'Testcases', 'tests']"
Testability,"ic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2003,test,testing,2003,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,8,['test'],['testing']
Testability,"ime spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3110,test,testing,3110,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability,"it testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4131,test,tests,4131,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability,"ive. Is it for continuous adjoint?; > ; > As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CP",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1273,test,test,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,1,['test'],['test']
Testability,"iversity of Technology.; In August 2017 my colleague and I attended SU2 Summer School in; Kaiserslautern and met the Sci-Comp team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > thi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1014,test,test,1014,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,2,['test'],['test']
Testability,"kc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; --",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2646,test,test,2646,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,"ld prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are fir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2879,Test,Tests,2879,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['Test'],['Tests']
Testability,"ld; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\b",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1543,test,test,1543,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,"le to have a good set of unit tests. Particularly when you don't have good acceptance tests (hard in a fast; moving research code), it gives a developer confidence that new changes; aren't being fundamental assumptions in the code. It lets sub module; developers build ""armor"" around those assumptions. It is a bit of a cultural thing. People who want robust bits write more.; Some people wire less. At the bank I once worked at, unit tests were required for every module.; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1042,test,testing,1042,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability,"led by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1421,test,tested,1421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,1,['test'],['tested']
Testability,"lobal flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4381,test,testing,4381,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"looks good to me, except that there are conflicts. Please fix the conflict - see command line instructions provided by github - and push the change into your branch. When your branch is updated the pull request will be automatically updated and the regression test will be run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-162606139:260,test,test,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-162606139,1,['test'],['test']
Testability,"major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2663,test,tests,2663,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability,"n for SU2_DEF; - Merge branch 'develop' into feature_dualoutput; - Removed deprecated options from quicstart config.; - Working version of the compressible actuator disk; - Updated fixed CL mode.; - Very minor change; - Merge branch 'develop' into feature_dualoutput; - Final push to 3.2.9; - Merge branch 'develop'; - Minor change; - Minor change; - Small change; - Minor change; - Bug fixing: unsigned short val_vertex --> unsigned long val_vertex; - CFL adapt now works for adjoint problems; - Merge branch 'develop' into feature_dualoutput; - Fixing a typo; - Fix in the Euler BC for grid movement cases; - merging and fixing conflicts bwtn feature_dealloc and develop; - dealloc; - Time spectral fix.; - Merging some recent bug fixes from master into the develop branch to keep nsync.; - Merge branch 'feature_gridvel_fix' into develop; - Merge remote-tracking branch 'upstream/develop' into feature_Deallocation; - correcting issues, adding more deallocation; - fixed uninitialized pointers in CConfig; - further deallocation; - some corrections needed to pass reg tests; - fixed some dealloc issues that caused errors in euler adj; - modifications needed to (mostly) pass reg tests; all run w/o segfault. File Changes; - D Articles/AIAA_2013-0287.pdf (0) ; - D Articles/AIAA_2014-0243.pdf (0) ; - M Common/doc/docmain.hpp (46) ; - M Common/include/config_structure.hpp (1038) ; - M Common/include/config_structure.inl (191) ; - M Common/include/dual_grid_structure.hpp (43) ; - M Common/include/dual_grid_structure.inl (17) ; - M Common/include/geometry_structure.hpp (432) ; - M Common/include/geometry_structure.inl (39) ; - M Common/include/grid_adaptation_structure.hpp (24) ; - M Common/include/grid_adaptation_structure.inl (15) ; - M Common/include/grid_movement_structure.hpp (330) ; - M Common/include/grid_movement_structure.inl (45) ; - M Common/include/linear_solvers_structure.hpp (78) ; - M Common/include/linear_solvers_structure.inl (15) ; - M Common/include/matrix_structure.h",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:10470,test,tests,10470,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,4,['test'],['tests']
Testability,"ning test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\bui",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3670,test,test,3670,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,nl (15) ; - M Common/include/matrix_structure.hpp (95) ; - M Common/include/matrix_structure.inl (17) ; - M Common/include/option_structure.hpp (1228) ; - M Common/include/primal_grid_structure.hpp (65) ; - M Common/include/primal_grid_structure.inl (37) ; - M Common/include/su2mpi.hpp (29) ; - M Common/include/vector_structure.hpp (20) ; - M Common/include/vector_structure.inl (13) ; - M Common/lib/Makefile.am (28) ; - M Common/lib/Makefile.in (36) ; - M Common/src/config_structure.cpp (2907) ; - M Common/src/dual_grid_structure.cpp (29) ; - M Common/src/geometry_structure.cpp (16033) ; - M Common/src/grid_adaptation_structure.cpp (374) ; - M Common/src/grid_movement_structure.cpp (2754) ; - M Common/src/linear_solvers_structure.cpp (330) ; - M Common/src/matrix_structure.cpp (371) ; - M Common/src/primal_grid_structure.cpp (45) ; - M Common/src/su2mpi.cpp (41) ; - M Common/src/vector_structure.cpp (46) ; - D Doxygen/Doxyfile (2368) ; - M INSTALL (2) ; - D Logo/logo_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/dep,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:12352,Log,Logo,12352,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Log'],['Logo']
Testability,"nother place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:1739,Test,Test,1739,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"ns. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as we already pointed out at the beginning, noticing that both steady and converged values were very very similar for the two boundary conditions) Anyway, by increasing the frequency, we notice that differences increase rapidly pointing out the problem must be somehow related to the rate of unsteadiness of the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2694,test,test,2694,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,1,['test'],['test']
Testability,"oc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Qu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4119,test,test,4119,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['test']
Testability,"ogical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3981,Test,Tests,3981,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['Test'],['Tests']
Testability,"olvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call tho",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1147,assert,asserting,1147,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['assert'],['asserting']
Testability,"operties (geometry->node and geometry->edge) and so some speedup is expected due to that, but in the absence of evidence I prefer to be conservative.; Here are the numbers:; ![image](https://user-images.githubusercontent.com/38071223/66394872-15376f00-e9ce-11e9-80ed-193aea2aae6f.png); The take home number is **1.7**. Cumulative with the 1.4 from contiguous storage, so 2.4 total. Despite most of my posts being focused on SIMD my main motivation is the hybrid parallelization which will allow important algorithmic improvements when running on hundreds of cores, namely the multigrid and additive linear preconditioners will retain their effectiveness at much larger core counts.; I will not hazard an estimate for this. ## Proposed changes (Summary); **Hybrid parallel**; - Gradients (GG) and limiters converted to point loops (embarrassing parallel, no edge colouring needed).; - Residual loops parallelized with edge colouring, if anyone has suggestions regarding algorithms send them my way, so far I only tested greedy colouring on edge groups to preserve spatial locality (this aspect is absolutely fundamental).; - Matrix multiplication, BCSR format is also embarrassing parallel.; - Linear preconditioners, additive decomposition within each MPI rank over a number of threads that need not be the same as that used for other areas. **SIMD**; - For gradients, limiters, and numerics a SIMD-friendly type will be used, by and large the high level code will look the same (see my examples above) but multiple points/edges will be processed simultaneously.; - No changes will be required to the data layout of CVariable, which means there will be no penalty to scalar code, new overloads for accessor methods will be required to set/get SIMD-arrays of data instead of scalars.; - The geometric properties and graph information associated with CGeometry will require the same contiguous storage treatment received by CVariable.; - Linear algebra, dimension-specific multiplication kernels with m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:1770,test,tested,1770,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['test'],['tested']
Testability,"ork; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4558,test,tests,4558,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],"['testing', 'tests']"
Testability,"ormation on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3762,test,tests,3762,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"oth boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:1041,test,tested,1041,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,1,['test'],['tested']
Testability,"ouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5416,test,test,5416,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['test']
Testability,"ovides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Req",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5309,test,test,5309,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['test']
Testability,"ow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phiL = phi(iPoint,iVar);; double phiR = phi(jPoint,iVar);. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += limiter(iPoint,iVar)*grad(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= limiter(jPoint,iVar)*grad(jPoint,iVar,iDim)*d_ij[iDim];; }. double flux = 0.5*(phiL+phiR);. residual(iPoint,iVar) += f",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5934,benchmark,benchmark,5934,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,['benchmark'],['benchmark']
Testability,"p team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aa",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1169,test,test,1169,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,2,['test'],['test']
Testability,"rage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3798,test,testing,3798,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability,"rding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aaf6b411fd30a0aab80; > 29ebe325d8/Tutorials/Inviscid_Bump/Inviscid_Bump.md; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/485#issuecomment-354572803>, or mute; > the thread; > <https://github.co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1471,Test,TestCases,1471,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,1,['Test'],['TestCases']
Testability,"re when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1813,test,testing,1813,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],"['testing', 'tests']"
Testability,"research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3408,test,tests,3408,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,4,['test'],"['testing', 'tests']"
Testability,restart file update https://github.com/su2code/TestCases/pull/85,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030:47,Test,TestCases,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030,1,['Test'],['TestCases']
Testability,"rg/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightwe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4937,test,tests,4937,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability,"rth the additional effort. In cases where it makes sense (as described by Clark and in the Stack Exchange discussion) I would advocate for using it moving forward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1190,test,testing,1190,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,4,['test'],"['testing', 'tests']"
Testability,"rward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-wr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1357,test,test,1357,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['test']
Testability,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2370,log,logfile,2370,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,2,['log'],"['log', 'logfile']"
Testability,"s a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4223,test,test,4223,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['test']
Testability,"s/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4394,test,tests,4394,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],['tests']
Testability,"scid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1204,test,test,1204,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['test'],['test']
Testability,"ss returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface ma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2630,log,log,2630,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['log'],['log']
Testability,"still don't know exactly why it sometimes fails all sst tests, I probably made some stupid error that I couldn't see. But at least the current situation is that it passes the regression tests...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1097248226:56,test,tests,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1097248226,2,['test'],['tests']
Testability,"sting allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./confi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2061,test,testing,2061,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability,"sts as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<ht",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4766,Test,Test,4766,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['Test'],['Test']
Testability,"t broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investmen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2703,test,testing,2703,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability,"t normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his requested changes in the PR 😉",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:2673,Test,Testcases,2673,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['Test'],['Testcases']
Testability,"t to discussion…in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327308587>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJUhyEBSuSzHV1a7BZM_Frxbtb5sks5sfb",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:1342,Test,TestCases,1342,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,1,['Test'],['TestCases']
Testability,"t:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://user-images.githubusercontent.com/50565314/180910576-f6ebcaca-eafe-47bf-8e97-e5ea90033991.png); ![image](https://user-images.githubusercontent.com/50565314/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). Now I'm testing on effect of the numerical sc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824:2450,test,test,2450,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824,1,['test'],['test']
Testability,"tantiateSpeciesNumerics<CIncEulerVariable::CIndices<unsigned short> >(unsigned short, int, CConfig const*, CSolver const*, CNumerics****&) const (CDriver.cpp:1366); 357 ==139924== by 0x463C0B: CDriver::Numerics_Preprocessing(CConfig*, CGeometry**, CSolver***, CNumerics****&) const (CDriver.cpp:2053); 358 ==139924== by 0x458FAB: CDriver::CDriver(char*, unsigned short, ompi_communicator_t*, bool) (CDriver.cpp:207); 359 ==139924== by 0x48ADD5: CSinglezoneDriver::CSinglezoneDriver(char*, unsigned short, ompi_communicator_t*) (CSinglezoneDriver.cpp:38); 360 ==139924== by 0x415ACE: main (SU2_CFD.cpp:124); ```; i.e. the norm of the residual; (this does not occur for the same case with only 1 species). My first thought: ok if it comes from species_diffusion and i get pointed to the `nrm` then it sth going with the residual so I put a conditional for the `Flux` after its computation which should trigger valgrind to show another error there which it doesn't. ... And it only shows up when using inlet files with more than 1 species (meanign the general problem and the above valgrind problem). . That whole debugging experience was total garbage because the whole problem is super flaky where I feel I cannot rely on the problem to show up consistently and seemingly unrelated changes shift the whole problem... my favorite was: at some point I got the classic `FGMRES diverged` thing at the simulation start -> I thought lets go and check for NAN's and comment in fenv -> with the two additonal lines commented in + compiled the problem was gone -> ok, well revert the change and test again -> Problem Still gone and not seen again UNTIL i look at what the github regression test do because there it shows up again whereas I can run that no problem locally. ; I dont know what to do about this, I tried quite a few things without success but I am glad for each suggestion. Oh and in all of this the mean flow (and turbulence) residuals are perfectly matching. So it is a species specific problem",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:6316,test,test,6316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,2,['test'],['test']
Testability,"te well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issue with VENKATAKRISHNAN_WANG limiter. It seems to be much easier for convergence than VAN_ALBADA_EDGE, so it is fairly useful. I still have a gradient un-match issue with my bigger mesh but I believe it is coming from something else. > I'm sorry that you had to spend time fixing that MPI code... But at least we found out we could clean all this obsolete code. Yeah, I noticed it had been deleted. It's OK. It was still a good opportunity for me to learn how MPI works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:1795,test,test,1795,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618,2,['test'],['test']
Testability,"tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4791,test,testing,4791,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,4,"['mock', 'test']","['mocking', 'testing']"
Testability,"thanks tom!. On Tue, Oct 14, 2014 at 12:30 AM, Thomas D. Economon <; notifications@github.com> wrote:. > Added the following system calls during the update/build phase to the; > serial and parallel regression python scripts in order to force testing of; > the develop branch:; > ; > $ git fetch; > $ git checkout develop; > $ git pull origin develop; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/75#issuecomment-59000470. ## ; - Trent Lukaczyk; Stanford University Engineering; Cornell University Engineering 2010; twl26@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/75#issuecomment-59069424:242,test,testing,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/75#issuecomment-59069424,1,['test'],['testing']
Testability,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2192,test,tests,2192,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,4,"['log', 'test']","['log', 'logs', 'tests']"
Testability,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1638,test,test,1638,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['test'],['test']
Testability,"time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not beh",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3171,test,test,3171,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['test']
Testability,tname = master; uname -m = x86_64; uname -r = 2.6.32-279.el6.x86_64; uname -s = Linux; uname -v = #1 SMP Wed Jun 13 18:24:36 EDT 2012. /usr/bin/uname -p = unknown; /bin/uname -X = unknown. /bin/arch = x86_64; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = unknown; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /gshare/soft/star-ccm+/STAR-View+9.02.007; PATH: /gshare/soft/star-ccm+/STAR-CCM+9.02.007/star/bin; PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whether build environment is sane; configure:2721: result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI su,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:1561,test,tests,1561,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['test'],['tests']
Testability,"ults. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1568,Test,TestCases,1568,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,1,['Test'],['TestCases']
Testability,"update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/; libraries: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:10003,test,testfile,10003,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testfile']
Testability,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:148,test,test,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115,2,['test'],['test']
Testability,"via pull request #132 into the develop branch - tested on naca0012 in euler and navier stokes continuous adjoint test cases, CFL number is updated and the solution convergs faster.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/131#issuecomment-62266439:48,test,tested,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/131#issuecomment-62266439,2,['test'],"['test', 'tested']"
Testability,"w` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear precondition",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1934,test,test,1934,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['test'],['test']
Testability,"y conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've att",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:1889,test,tested,1889,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,1,['test'],['tested']
Testability,"yeah the sst test are not happy now of course, oh well, I can help re-running and updating.; Maybe we should go over the equations once more while we are at it :shushing_face:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1277824517:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1277824517,1,['test'],['test']
Testability,yep :) maybe still today if I can figure out how and where I broke the disc_adj_fsi testcase ... ; Note to self: Read what people did before writing things,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743360152:84,test,testcase,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743360152,1,['test'],['testcase']
Testability,"yes, I see it. Do you know why this is done? I think we should remove the Div term to make it compatible with literature. This will then probably change all turbulence regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1277195535:179,test,tests,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1277195535,1,['test'],['tests']
Testability,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:999,Test,Testcase,999,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763,2,['Test'],"['Testcase', 'Testcases']"
Usability," Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4108,simpl,simpler,4108,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['simpl'],['simpler']
Usability," first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4HTDQXQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:5035,simpl,simple,5035,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['simpl'],['simple']
Usability," is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithme",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1428,simpl,simply,1428,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['simpl'],['simply']
Usability," of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:1234,simpl,simply,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,2,['simpl'],['simply']
Usability," of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1437,intuit,intuitive,1437,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['intuit'],['intuitive']
Usability," pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3666,guid,guide,3666,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['guid'],['guide']
Usability," scheme for a multi-physics problem. To obtain the design accuracy in time, this implies that the loop over the number of time stages is outside the loop over the number of physical disciplines. Hence at a very high level in the hierarchy, the details of the time integration should then be known. The situation becomes even more complicated when one would like to employ time integration schemes that allow for time accurate local time stepping, e.g. the ones we are currently working on for the DG solver. I won't bore you with all the details here, but those schemes basically require the loop over the multiple disciplines to be between the predictor and corrector step, while both these steps consist of multiple stages. Although it is probably possible to come up with a data structure that supports all this, the question is whether this is desirable. Apart from the fact that it would require a major overhaul in the high level design of SU2, the implementation will be less readable, especially for people that will be starting with the code. Also the parallelization may become significantly more complicated. The alternative is that for unsteady multi-physics problems, we put the restriction that only single stage time integration schemes can be used, e.g. DT_STEPPING_1ST and DT_STEPPING_2ND. In that case, the details of the time integration scheme can be hidden at the driver level, where we then simply have a loop over the number of physical disciplines. The consequence of course is that more advanced time integration schemes will not be available for multi-physics problems. In the above I just tried to picture what, in my opinion, the consequences are for either option. I don't have a preference for one of them. The only thing I wanted to make clear is that it is not possible to hide all the details of the time integration scheme at the driver level, while also having support for all possible time integration schemes for an unsteady multi-physics problem. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328441926:1780,simpl,simply,1780,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328441926,4,"['clear', 'simpl']","['clear', 'simply']"
Usability," silicon, by and large vector instructions have the same latency and throughput of their scalar versions, therefore speedups proportional to the number of SIMD lanes are possible in compute-bound code.; As we saw in #716 there is some of that in the numerics, do not expect 4x speed-ups though, low order unstructured FVM is known to be bandwidth-bound, vectorization helps a bit there too (instructions are also data that needs to travel to the CPU) (maybe for explicit schemes and 8 SIMD lanes, maybe). **Relation with data structures**; There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely pe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:1617,simpl,simple,1617,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['simpl'],['simple']
Usability," the solution at the inlet corner is completely wrong, while the outlet is ok most likely because characteristics are outgoing as it is supersonic. The artifacts disappear if we disable MUSCL everywhere (1st order solution) or disable it only on boundaries (not ideal solution, but disabling only on corners would still be good enough for now I believe). Using ```WEIGHTED_LEAST_SQUARES``` seems to not present the same issue, in this test case at least, as the stencil ""does not care"" about the boundary states. The boundary conditions are:; - ```MARKER_SYMMETRY``` at centerline; - ```MARKER_EULER``` at wall; - ```MARKER_RIEMANN= (INLET, TOTAL_CONDITIONS_PT, 904388, 542.13, 1.0, 0.0, 0.0)``` at inlet; - ```MARKER_RIEMANN= (OUTLET, STATIC_PRESSURE, 200000.0, 0.0, 0.0, 0.0, 0.0)``` at outlet. I tried both with and without a slope limiter as there are no discontinuities, but it makes no difference on the artifacts:. ```; SLOPE_LIMITER_FLOW= VENKATAKRISHNAN_WANG; VENKAT_LIMITER_COEFF= 0.1; ```. # Complete test case ZIP; [mdm_coolprop_nozzle.zip](https://github.com/su2code/SU2/files/15403732/mdm_coolprop_nozzle.zip). # Inlet pressure zoom; ![Screenshot from 2024-05-22 15-06-36](https://github.com/su2code/SU2/assets/79575547/9ba71127-cb12-4c5f-8e49-3ea9e839b1f4). # Notation: ; - ""1st order"" no MUSCL; - ""2nd order"" MUSCL as implemented in SU2; - ""2nd order (BC 1st order)"" I simply disabled MUSCL on ALL physical boundaries in the upwind residual computations, see code snippet below. # Proof of concept code modification for ""2nd order (BC 1st order)"":; To show that the error lies in MUSCL/gradients at boundaries I added these two lines of code in the upwind gradient computation; ![image](https://github.com/su2code/SU2/assets/79575547/27f2a79b-824d-4a32-a626-73cd87750c0c). # Residuals:; ![image](https://github.com/su2code/SU2/assets/79575547/3f0800fe-478e-433d-8495-cd4964d0f8ee). # Mesh:; ![image](https://github.com/su2code/SU2/assets/79575547/0ebaf86b-fbf9-40b1-aeb9-8764a90a1440)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449:1693,simpl,simply,1693,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449,2,['simpl'],['simply']
Usability," threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1710,simpl,simple,1710,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['simpl'],['simple']
Usability,"# Import issues. In Python 3, relative import behaviour changes.; In Python 2, ""import module"" loads first local module, then system module. In Python 3, it is the opposite. ## Import patterns in SU2 code. If we consider, to simplify, these generic packages:; `package1/p1m1.py`; `package1/p1m2.py`; `package1/__init__.py`. `package2/p2m1.py`; `package2/__init__.py`. In SU2 code we find these patterns:. **Pattern 1**; `package1/__init__.py`; contains. ``` python; import p1m1; import p1m2; ```. These instructions are useless as it is the common behaviour of package.; If a `__init__.py` is defined, I can do from package1 import p1m1 or import package1.p1m1. Do you know why this happens ? Is there an historical reason or other ?; For example, in [`SU2_PY/SU2/__init__.py`](https://github.com/su2code/SU2/blob/master/SU2_PY/SU2/__init__.py) or [`SU2_PY/SU2/mesh/__init__.py`](https://github.com/su2code/SU2/blob/master/SU2_PY/SU2/mesh/__init__.py). **Pattern 2**; `package1/__init__.py`; contains. ``` python; from p1m1 import f; ```. **Pattern 3**; `package1/p1m1.py`; contains. ``` python; from ..p1m2 import f; ```. **Pattern 4**. ``` python; import cPickle as pickle; ```. ## Solution. I suggest these solutions:. **Pattern 1**; delete imports. **Pattern 2**; replace `from p1m1 import f` with `from .p1m1 import f` . See also next solution. **Pattern 3**. This is OK. Another approach is to always use absolute imports, for example. ``` python; from ..p1m2 import f; ```. becomes. ``` python; from package1.p1m2 import f; ```. Result is the same except that it is recommended in [PEP8](https://www.python.org/dev/peps/pep-0008/#id20) but first approach is ok too.; I can do it if you want. **Pattern 4**; Py3 pickle now manage both accelerated cPickle and pure python pickle; See https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.; So replace it with. ``` python; if sys.version_info.major > 2:; # Py3 pickle now manage both accelerated cPickle and pure python pickle; # S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-197397273:225,simpl,simplify,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-197397273,2,['simpl'],['simplify']
Usability,"(Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1144,simpl,simplified,1144,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['simpl'],['simplified']
Usability,"**Disclaimer**; The performance numbers that follow are based on simple implementations of the methods, I do not claim any of my implementations or choice of methods to be optimal. If you know better speak up.; The data is from the case used to benchmark #753 (see #716), it is by no means an extensive collection of different grid types. I will share code and data with anyone who wants to repeat the tests on the condition they post detailed results. With that out of the way :) ... ### Green-Gauss Gradients. This is the plain edge-loop version of the code with boundary contributions omitted for simplicity:; ```C++; void computeGradients(size_t nEdge,; size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:65,simpl,simple,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,4,['simpl'],"['simple', 'simplicity']"
Usability,"**SOLVED** see edit. Hello! I seem to remember that it used to be possible to get angle of attack in the history file? Is this still possible? I would like to be able to just pull the angle of attack out of the history file, along with the aero coeffs.; Context:; I have looked through the custom output document and the reference config file, and (perhaps I am secretly blind), but there does not seem to be a simple output group for it.; Reason I need it: performing analysis for fixed Cl, so angle of attack is useful information. At the moment I am getting probed data:; ```; CUSTOM_OUTPUTS='m_vel_x : Macro{VELOCITY_X};\; m_vel_y : Macro{VELOCITY_Y};\; vel_x1: Probe{$m_vel_x}[-15, -15];\; vel_y1: Probe{$m_vel_y}[-15, -15]'; ```; And just getting the tan(y/x) of the probed values for angle. This works well enough.; The other option I have is stripping the angle of attack out of the forced breakdown file, would prefer to not do, but can. EDIT:. **It can be pulled out of line 2 of flow.meta**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397:411,simpl,simple,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397,2,['simpl'],['simple']
Usability,"-o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12362,usab,usability,12362,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['usab'],['usability']
Usability,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1771,clear,clearly,1771,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,4,"['clear', 'guid']","['clearly', 'guidance']"
Usability,"/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in advance!. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:4407,learn,learn,4407,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,2,['learn'],['learn']
Usability,"0| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2041,simpl,simplified-singlezone-expliciteuler,2041,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['simpl'],['simplified-singlezone-expliciteuler']
Usability,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2200,simpl,simple,2200,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,2,['simpl'],['simple']
Usability,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:202,usab,usable,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555,2,['usab'],['usable']
Usability,"> ; > ; > @tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this. I indeed tried to solve all issues that were mentioned earlier. Could you take another look to see whether I have done this well enough?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741601433:155,clear,clear,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601433,2,['clear'],['clear']
Usability,"> ; > ; > Dark mode?; > ""Is it possible to learn this power?"". 🧙 Sure, if you just go to your front page (i.e. just github.com) there should be a big button directly on the right side. ; Or Settings->Appearance->Dark. Enjoy :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745:43,learn,learn,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745,2,['learn'],['learn']
Usability,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-553571450:222,guid,guide,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450,2,['guid'],['guide']
Usability,"> > @jayantmukho : I am finding that the clipping limits for the SST model are very important for the UQ cases. If you adjust them slightly, the UQ regression cases tend to diverge immediately. Don't think any immediate action is needed, just wanted to bring it to your attention.; > ; > Mhmmm, that's a little odd. I wouldn't think that the UQ methodology would be affected by the clipping. I will look into this. Just to be clear, you are changing the lowerlimit and upperlimit in CTurbSSTSolver constructor? What are you changing them too? Just want to reproduce the issue. If you revert my last commit, you will see the issue. It diverges right away for me, so perhaps it is just something with the initial transient that is caught by the clipping",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-551351016:426,clear,clear,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-551351016,2,['clear'],['clear']
Usability,"> > I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist.; > ; > Hi @Linnnnnn23, every help on the validation/verification is gladly accepted! Let me know if you need anything by my side.; Thank you for your response. Firstly, I would like to know what Verification and Validation (V&V) work has been conducted on the SST-based DDES (Delayed Detached Eddy Simulation) model to date. Secondly, we can provide a compressor cascade validation, with an inlet Mach number of 0.4, a Reynolds number of approximately 500,000, and a spanwise height of about 20% of the chord length, ensuring that the vortices resolved by DDES can develop in three dimensions. Thirdly, as I am a rookie to GitHub, I have not yet found out how to download your pull request code. For further communication, you can contact me via email at linnnnnn2308@gmail.com",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2072057976:197,clear,clearance,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2072057976,2,['clear'],['clearance']
Usability,"> > I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?; > ; > That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements: https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development; > ; > The domain is just a rectangle so pretty simple to set up.; > ; > You could also use the V&V test that we have, but it is a variable density jet: https://su2code.github.io/vandv/SANDIA_jet/. I did some tests on a supersonic jet, since I already had the files, but it's a quite complex case so it's not that good to verify the implementation. I will look into the simpler cases you mentioned !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092:316,simpl,simple,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092,6,['simpl'],"['simple', 'simpler']"
Usability,> @EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it. Do you have time to wrap it up and add a simple regression test?. I just added a test case and tutorial under the TestCases and Tutorials repo under the same branch name. I'm also writing a short tutorial on the SU2 website repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145:154,simpl,simple,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145,2,['simpl'],['simple']
Usability,"> @SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; > [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt). @pcarruscag Thank you very much. This works. I have installed a sequential version and a parallel version with tecio,codipack and medipack enabled. I will try the same with Intel compilers and see if it works. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621164605:160,simpl,simpler,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621164605,2,['simpl'],['simpler']
Usability,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:530,simpl,simply,530,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377,2,['simpl'],['simply']
Usability,"> @bigfooted @EvertBunschoten Well fwiw the simplest way is to checkout a new branch from before the merge and open a new PR, there are no coments here yet, so its fine. (If you git revert the merge it will be a pain to then merge the other PRs). I did a git reset --merge ""commit-id"" to go back to my latest commit. I think this completely removed Evert's merge without any residual effects. So should we create a new PR or not? Your 'its fine' comment has ambiguous meaning :-)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1328075694:44,simpl,simplest,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1328075694,2,['simpl'],['simplest']
Usability,"> @jayantmukho : I am finding that the clipping limits for the SST model are very important for the UQ cases. If you adjust them slightly, the UQ regression cases tend to diverge immediately. Don't think any immediate action is needed, just wanted to bring it to your attention. Mhmmm, that's a little odd. I wouldn't think that the UQ methodology would be affected by the clipping. I will look into this. Just to be clear, you are changing the lowerlimit and upperlimit in CTurbSSTSolver constructor? What are you changing them too? Just want to reproduce the issue",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-551323531:417,clear,clear,417,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-551323531,2,['clear'],['clear']
Usability,"> @kursatyurt Hello, thank you so much for the lead.; > ; > Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). To learn the basics, it's a good idea, but for large-scale projects, I prefer using existing libraries if possible.; Those libraries generally exploit state-of-the-art solution like mixed-precision computing. A gaming GPU is not way faster than a good CPU in double precision, but way faster in single precision, most of them have 64:1 ratio, however server class GPU have 2:1 ratio. Also when available they use vendor libraries like cuBLAS or hipBLAS. It is always nice to have you only care about connection and somebody else handle the solver as performant as possible. In future probably they will provide more and more solvers and it will be automagically works. It is kind of light-weight too, not a huge dependency like Trilinos or PETSc. ; > ; > I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay.; > ; > Again, thank you for the lead!. I can test on various GPUs (P100/V100/A100 and 4070Mobile) on single node multi-gpu etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409:364,simpl,simple,364,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409,4,"['learn', 'simpl']","['learn', 'simple']"
Usability,"> Aside from my last two comments, and the possibility I broke the code :), this looks ready. Is this missing anything, or is it ready to merge?. Thank you so much @pcarruscag for your feedback. there is one thing left, it is about the residuals of the test case (species2_primitiveVenturi_mixingmodel.cfg) that I added in the previous pull request, they have changed exceeding in some outputs the tolerance 0.00001 with respect to the values stored in the parallel_regression.py, however the test case converges very well, so could it be possible to modify the values stored in that test case in order to not have this discrepancy between values stored and computed? Thank you so much in advance!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520:185,feedback,feedback,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520,2,['feedback'],['feedback']
Usability,"> Below you can find a transitional test case using B-C model implemented in SU2:; > https://su2code.github.io/tutorials/Transitional_Flat_Plate/. Samet, nice to meet you! Thank you for your suggestion! I have learned this model in current SU2 version. B-C model can provide quite good results in many teatcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446631804:210,learn,learned,210,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446631804,2,['learn'],['learned']
Usability,> Can you describe the bug this is fixing a bit more. I edited the PR description. Hope it's clear now. Please let know if you need more info.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036#issuecomment-1551960465:93,clear,clear,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036#issuecomment-1551960465,2,['clear'],['clear']
Usability,"> Do I understand correctly that two gradients are always computed per iteration?; > Is there any downside to using the unweighted LS for viscous flux correction? Is the statement that this type of gradient is better for reconstruction based on your observations or is it one of those well known things?. Yes - the gradient for now is computed twice and stored separately for viscous flows with 2nd-order upwind. Could be combined into one loop eventually. It is known that weighted LSQ / GG is more accurate (see Mavriplis, ""Revisiting the Least-Squares Procedure for Gradient Reconstruction on Unstructured Meshes"" for instance). However, unweighted LSQ is known to be more robust.. so a good compromise is to use it only for the reconstruction step (which is more susceptible to robustness issues than the viscous term) and then use WLSQ or GG for all other gradients in the viscous flux/sources for accuracy. > Sometimes high CFL leads to limit-cycle oscillations of the residuals and the solution is to reduce it, is this something this controller can pick up?; > High CFL also makes the linear systems harder to solve and as Edwin pointed out _somewhere_ there is not much point going above reasonable values with weakly coupled turbulence. Do you think it would be reasonable to build in some feedback from the linear solver (e.g. it is taking too much time or did not converge -> drop the CFL)?. Yes, I would also like to couple it to the linear solver so that we can remove the need to tune that as well. Ideally the user will not need to adjust parameters. There are some things I am going to try for that..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531890295:1300,feedback,feedback,1300,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531890295,2,['feedback'],['feedback']
Usability,"> How should I update my branch with upstream/develop? Should I merge upstream/develop into my branch (and push to my fork on github)? Or may I rebase my branch on top of upstream/develop (and force push to my fork on github)?. Both ways are legit, feel free to use which one is easier for you [here](https://www.freecodecamp.org/news/the-ultimate-guide-to-git-merge-and-git-rebase/) a comparison between them. It depends on the taste of the developer. . > I assume I should add myself to the _Individual Contributors_ section of AUTHORS.md, is that correct?. Yes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727:348,guid,guide-to-git-merge-and-git-rebase,348,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727,2,['guid'],['guide-to-git-merge-and-git-rebase']
Usability,"> I assume that your results with explicit/implicit Euler for single zone are the same?. It turns out that they are not. When I applied the above modifications (CFL: 1000 -> 0.1, TIME_DISCRE_*: EULER_IMPLICIT->EULER_EXPLICIT; additionally I had to increase ITER) to the `issue_simplified` singlezone setup (the one with AoA=10°), I obtain the following solution:. ![simplified-singlezone-expliciteuler-density](https://user-images.githubusercontent.com/72806890/140885244-abb72de1-0d2d-4dc8-bde9-e0772786e2cd.png). with the following convergence history:. +------------------------------------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -inf| -inf| 0.000000| 2.232692| -inf|; | 1| -3.281025| -inf| -inf| 0.000000| 3.198384| -inf|; ...; | 9531740| -11.999999| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531741| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531742| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:366,simpl,simplified-singlezone-expliciteuler-density,366,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['simpl'],['simplified-singlezone-expliciteuler-density']
Usability,"> I don't known how the process to find the alpha that gives you a given CL works, but could the derivative not be obtained from this process? i.e. you could avoid the FD step entirely. It is a simple proportional controller that will change the angle of attack after a number of iterations depending on the difference between the current CL and the target CL. . So if the the option `ITER_DCL_DALPHA = 0` then it will do exactly what you suggest. It calculates the derivative based on the last update. The only problem with that is, there is no guarantee that the simulation at the previous update was converged, so the derivative might be incorrect. . But you are correct, I could just do a really tiny update (order of delta AoA ~10^-6) at the end and calculate the finite difference using that value. Let me try that and see if the gradients it calculates are reasonable, or if the update is too small and it gets clouded by numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539606698:194,simpl,simple,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539606698,2,['simpl'],['simple']
Usability,"> I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist. Hi @Linnnnnn23, every help on the validation/verification is gladly accepted! Let me know if you need anything by my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2071759773:195,clear,clearance,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2071759773,2,['clear'],['clearance']
Usability,"> I want to be done with this PR folks... This is really tiring to maintain so if you don't want it please just tell me...; > Can we agree on:; > Instead of CSolver having the `node` field it will have a pure virtual function `CVariable* GetNodes()`, derived solvers need to implement this method and have a `nodes` field of the most appropriate type (e.g. CEulerVariable for CEulerSolver).; > ; > I know some of you do not like the name `nodes` but there is something to be said about consistency (that has always been the name) and I do not think changing a generic name for another generic name justifies breaking the formatting everywhere and having needlessly long calls to get some data. In the interest of keeping the PRs moving, I am ok with this. It will also be natural for folks in the short term to learn the new system, since everyone is already accustomed to using the solver->node* construct. We can always go for a targeted refactoring later separate from the changes in this PR if we would like.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-538218606:811,learn,learn,811,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-538218606,2,['learn'],['learn']
Usability,"> I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?. That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements:; https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development. The domain is just a rectangle so pretty simple to set up. You could also use the V&V test that we have, but it is a variable density jet:; https://su2code.github.io/vandv/SANDIA_jet/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505:308,simpl,simple,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505,4,['simpl'],['simple']
Usability,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-581945210:38,simpl,simply,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210,4,['simpl'],['simply']
Usability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?. > If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545908540:365,Guid,Guide-to-,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545908540,2,['Guid'],['Guide-to-']
Usability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I wonder that if I use TIME_STEPPING without dual time, is timestep a must?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-546276782:365,Guid,Guide-to-,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546276782,1,['Guid'],['Guide-to-']
Usability,"> Looks quite simple to me now, what do you think?. I fully agree. The CVariable footprint is much smaller and no more nasty address handling. (Adding another variable in another solver requires a bit more code though and a little understanding of what is going on than the ""Address""-version, but on the other hand this explicit handling of each primal-solver creates a good separation :+1: )",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065:14,simpl,simple,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065,2,['simpl'],['simple']
Usability,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Thanks for the clarification! I use Mpi4 for most of my programs so that's why I built it that way. I followed this guide for pastix: https://solverstack.gitlabpages.inria.fr/pastix/md_docs_doxygen_chapters_Pastix_Runtime.html. So I build pastix 6.X.X. I will check the test cases directory though for the instructions. Also how does changing openmpi change c++ command line option ? . Thanks 😊,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291:306,guid,guide,306,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291,2,['guid'],['guide']
Usability,"> Nice! By the way, did you use some scripts for going through all the files and returning 'bad' naming conventions?. No, now I am just going through it by hand probably some linters are available to at least detect them. Actually, I am a bit confused as it is not so clear in the guide. It looks like the beginning of the project was just abbreviated from the Google style guide and was not enforced. Enforcing function names in UpperCamelCase and leaving variable names to the developer seems reasonable. > Can you explain the snake/camel terminology? :). Let's say we have a variable we want to name as `number of nodes per mesh` there are 2 common choices as . ```cpp; number_of_nodes_per_mesh = 42;; numberOfNodesPerMesh = 42;; ```; The first case is called the [snake case](https://en.wikipedia.org/wiki/Snake_case) and the second one is the [camel case ](https://en.wikipedia.org/wiki/Camel_case). Snake case is generally used in Python as [PEP8](https://peps.python.org/pep-0008/) suggests. . > Please revert the python accessor changes. I merged develop many of them vanished, should I revert the remaining ones?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542:268,clear,clear,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542,6,"['clear', 'guid']","['clear', 'guide']"
Usability,"> Note that you need to checkout this branch `fix_2d_periodic_rotation` (it is not in `develop` yet). Hi Pedro,; I checked the files you sent but building SU2 from source provided some errors:. - _MinGW64_ files provided from SU2 official website are corrupted and the installation crashes; however, it is possible to install the software but the .exe file mentioned in the installation guide won't be present. ; - After building _meson.py_ , the ninja installation command was line typed and the following alert message appeared "" **ninja: fatal: chdir to 'build' - No such file or directory** "". On a different laptop (with different user, to avoid the same mistakes) the following ERROR came up after the mason.py command line:; "" **'meson.py' is not recognized as an internal or external command, operable program or batch file** "". I don't know if any other user might have experienced the same errors. ; Anyway, are the bugfix files you published already available in the pre-compiled version? ; In the meanwhile, I'll try to figure out this inconvenient. Thank you in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722:387,guid,guide,387,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722,2,['guid'],['guide']
Usability,"> Our working branch is 'develop', so you should have started from that and also merge into it. Every 6 months or so we then make the current develop into master. I changed the target branch to develop, and also updated your branch with current develop. Can you have a look at the failed check for clang-format coding style and format the changed file accordingly? https://su2code.github.io/docs_v7/Style-Guide/. Thanks a lot! It's very much appreciated. I have implemented the clang-format according to the guide and force formatting all files by using 'pre-commit run -a'. I think the new commits should be conformed to the coding style but not sure if the previous commit is also changed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1951941110:405,Guid,Guide,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1951941110,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"> Sounds good, with that it will be easier to reason about when the recording types are created and used, right now someone would have to sit down and reverse-engineer the process. My intuition is that we can use some of the machinery introduced for multizone (partial tape evaluation) to simplify the recording management. And just to be clear I am very interested in having this feature in the code for comparison with the FP approach. That's exactly right. We started investigating the multizone driver a while back but we didn't get very far... It's been a while so i will need a refresher. Sure, there's broader interest in comparison with FP. Ole, Nico, and I talked about doing a detailed characterization last summer and we briefly brought it up in Varenna last week",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1785913088:184,intuit,intuition,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1785913088,6,"['clear', 'intuit', 'simpl']","['clear', 'intuition', 'simplify']"
Usability,"> Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible. But this check will allow users to use external dependencies just fine, as long as they happen to use an external 0.61.1?. ... I am not entirely sure I understand the issue here. You want to make it *easier* for users by downloading the dependencies, so you make it harder if they went and got their own dependencies? If someone has gone to the effort of getting their own dependencies instead of using your documented meson.py, it would seem like that inherently means they are the 1% of use cases and you could probably just leave them to it. Is the issue rather that only Meson 0.61.1 has been tested to work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338:20,feedback,feedback,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338,2,['feedback'],['feedback']
Usability,"> Thank you for your answer. If you could share the configs and meshes that you are using I can try following the approach suggested by @pcarruscag and use the TKE from the turbulence solver instead of the freestream one.; > ; > Plus, I have some doubts on the default value of the turbulent to laminar viscosity ratio which is equal to 10 in SU2, although on the NASA page suggests to be in the range of 10^-2 to 10^-5. However, I think that this is another issue. @rois1995 Hi ~ . Can you give me a link to the NASA TMR guide for setting the viscosity ratio? I'm not sure where to find it. Sorry, I found it!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355:522,guid,guide,522,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355,2,['guid'],['guide']
Usability,"> Thanks for pointing that out. I dont think it is intentional. Maybe we can use this PR also to fix this ?. That depends on how atomic we want these PRs to be. This PR is largely a refactoring PR, and shouldn't change any underlying performance. But adding extra calculations on source terms and wall conditions might change the performance of the code. The two changes are completely compatible, so combining them wouldn't be hard. Nevertheless, I propose we keep these changes separate, so that the purpose of each PR is clear and easy to see. In my mind, two small PRs are easier to check and review than one large PR. @talbring @economon What do you think? One big PR or two small PRs?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458177675:524,clear,clear,524,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458177675,2,['clear'],['clear']
Usability,"> Thanks for the fast reply! I changed the hardcoded 2 (just as a remark: the hardcoded values also appear in the calculations), added myself as an author and inserted some lines for throwing an error if the issue in #1565 occurs. I did not know exactly where to put it best.; > ; > Concerning a regression test: I strongly support the idea of introducing an axisymmetric regression test. However, I was using a testcase from @bigfooted , and I never set up such a test case on my own. There do not seem to be any axisymmetric pipe setups in the Testcases folder so far. @bigfooted , could we maybe use your mesh for the jet flow test case and, if necessary, switch to a standard flow setup?. Yes, you can use that mesh. It can be used for pipe flow setup and jets with coflows, so we can reuse it in different testcases as well if needed. But any simple rectangular mesh is fine, so a mesh from the existing testcases as @pcarruscag mentions would also work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956:848,simpl,simple,848,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956,2,['simpl'],['simple']
Usability,"> Thanks for the suggestion and I am preparing for a test. As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition. @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; > ; > ```; > for (auto iDim = 0u; iDim < nDim; iDim++){; > delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; > }; > ```. Hi Shihe,. I checked the implementation and I think it is correctly done. You do need the absolute value (i.e., delta has a unit of [m] or equivalent) to keep the correct dimension of nu_t based on a Smagorinsky-type SGS model. You may find the appendix of this paper useful for your understanding of delta_omg: [https://doi.org/10.1007/s00162-011-0240-z](https://doi.org/10.1007/s00162-011-0240-z). Also note that delta_omg does not always outperforms its peers - vorticity may not be aligned to the rotation axis of a local vortex (e.g., in rotating reference frame, in attached boundary layer, to name a few), in which case the physical meaning of delta_omg becomes vague. See also my work for a brief review of DES-type methods and some applications: [https://doi.org/10.1115/1.4052019](https://doi.org/10.1115/1.4052019)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976:424,guid,guidance,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976,2,['guid'],['guidance']
Usability,"> The ""int"" in ""intIndexBased"" is for internal then? Because its type is also int, easy mistake to make xD. Yes.. The name was the first one I gave that routine. It somehow made it through.. Now that I had to type it several times I'd love to have it changed. But anyway.. I'm a bit puzzled that it seems to be so easy but maybe it's just as simple as you said - new approach inside `CDiscAdjSolver` and old in `CDiscAdjFEASolver` (if I got that correctly?). That would come in handy for all further developments. Let's wait for the validation. I'll also do one with this branch for the CHT adjoints tomorrow, just to be sure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542360883:342,simpl,simple,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542360883,2,['simpl'],['simple']
Usability,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:171,simpl,simply,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,4,"['learn', 'simpl']","['learn', 'simply']"
Usability,"> Why not simply use clang-format and have a script to pass files/directories to have formatted? It provides more formatting options than just stripping trailing whitespaces and replacing tabs and does it in a consistent way. Tried that on a couple of files out of curiosity, it does not look very good, for example we have the habit of aligning repetitive statements across multiple lines clang-format does not keep that, we have very long lines with chained methods that look awkward when broken up.; Clang probably has a neater architecture of tiny objects where auto formatting works very well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-551551298:10,simpl,simply,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551551298,2,['simpl'],['simply']
Usability,"> You are proposing the exact opposite of the conclusion of the paper:; > ; > ""From the above findings, it is **recommended that all three of these terms be included** when running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with shock wave-induced separations.""; > ; > And they clearly say this: ""While the full inclusion of these terms does not always result in predictions that agree better with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out effects of other flaws in the RANS models employed.""; > ; > If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy. Thank you for your comment @bigfooted . The above paper is not presented to improve the current k-w SST model. . As you can see in the first post, there is a problem with the high Mach number and freestream turbulence intensity case. If high turbulence kinetic energy(TKE) and Mach number condition, the boundary condition cannot be maintained the imposed value. (I think there seems to be a bug in the temperature calculation using total energy when including the TKE). The introduction of C1 was intended to provide a 'temporary' solution at the level of first aid (simply commenting out conditional statements in code).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702:316,clear,clearly,316,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702,4,"['clear', 'simpl']","['clearly', 'simply']"
Usability,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:325,clear,clear,325,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['clear'],['clear']
Usability,"> the ""modern C++"" way is to use enum class and to never rely on implicit conversions from enum to integer type. I am in. It is a little (actually quite a bit) more involved as the enum namespace has to be given now everywhere an entry is used.; I was not familiar with `enum` vs `enum class` if someone else needs an entry point [stack overflow](https://stackoverflow.com/questions/18335861/why-is-enum-class-preferred-over-plain-enum), [playin around in compiler explorer](https://gcc.godbolt.org/z/5YTd4dPoE)... oh and of course the [c++ core guidelines entry endorses the use of enum class as well](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242#issuecomment-805108781:546,guid,guidelines,546,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-805108781,2,['guid'],['guidelines']
Usability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:54,clear,clear,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,6,"['clear', 'simpl']","['clear', 'cleared', 'simply']"
Usability,> 如果您指的是表面热通量，则它是默认的表面输出之一。; > v6.2中可能存在一个错误，但是在当前的开发中它似乎可以正常工作，您可以尝试使用以下配置：[v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > v6.2之后更改了一些选项的名称，您可以在此处阅读：[https：// /su2code.github.io/docs/Guide-to-v7/](https://su2code.github.io/docs/Guide-to-v7/); > 我替换了相关的时域选项，但注释了所有输出选项。; > ; > 另一方面，我认为您应该修改设置，例如对于不稳定的模拟，您将时间步长设置为0。如果您有设置方面的问题，请访问用户论坛[https://www.cfd-online.com/Forums/su2/，](https://www.cfd-online.com/Forums/su2/)并在没有相关主题的情况下启动主题。; > ; > 如果开发版本/ v7的heatflux输出存在问题，我们可以重新打开此问题。. Thank you. It helps a lot.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545541390:209,Guid,Guide-to-,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545541390,2,['Guid'],['Guide-to-']
Usability,">I found out the other day that this: unordered_map<pair<int,int>, su2double> does not work without extra tricks,. Yes, I found some examples to do it. But I was not quite understanding what are the sizes of local maps or how to communicate them over MPI. . >so if you have it out of the config in some matrix format it is probably better. In that case, I can just move the current global arrays to physical geometry class and simplify some of the function calls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653479936:427,simpl,simplify,427,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653479936,2,['simpl'],['simplify']
Usability,">Therefore, we try to avoid templates when possible …. I find this view strange. I would appreciate if current C++ software techniques can be applied. How much can they help to make the source code a bit simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360055094:204,simpl,simpler,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360055094,2,['simpl'],['simpler']
Usability,">Why are you defining an internal marker?. Haha. Initially, I thought by creating a dummy marker inside my domain and calling it ""INTERNAL"", I can output solution at any desired face in the solution_flow file without having to deal with post processing software. This is of course possible in Paraview or Tecplot, but I figured this may be more automatic and perhaps easier especially with curved surfaces. Now I am simply curious as to what is happening with the internal markers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-628781294:416,simpl,simply,416,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-628781294,2,['simpl'],['simply']
Usability,"@AmauryBilocq Thanks for your post. Can you please check that you are actually not running out of memory, as that can also raise such errors? Second, if Giles BC is the issue I think you will still be able to run the case with Riemann which is a bit simpler than Giles. Can you also test that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015:250,simpl,simpler,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015,2,['simpl'],['simpler']
Usability,@EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it.; Do you have time to wrap it up and add a simple regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071:153,simpl,simple,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071,2,['simpl'],['simple']
Usability,"@JedrzejMosiezny . The reason why the mesh and config files are split into separate repos is the following: ideally we want to have the test cases being closely coupled to the current version of the code as config options change quite frequently. However, the mesh files are simply too big to have them in the main repo (it takes too much time to check them out etc.). So a compromise was to still leave the config files in the main repo in order for them to stay up-to-date. We thought that the information [here](https://github.com/su2code/SU2/wiki/Test-Cases) would be quite clear for the user on how to merge config and mesh files. Following this instructions should avoid having to search for the mesh files manually. Let us know if you think different. @economon could you add Jędrzej to the dev team here on github ? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355152833:275,simpl,simply,275,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355152833,4,"['clear', 'simpl']","['clear', 'simply']"
Usability,"@Mick7: yep, I’ll look at that next. You may have noticed that the other routines for Loading and preparing adjacency are now general for any mesh reader, so all we need is to move the reader for the ASCII format into its own class. . @pcarruscag: there is at least one simple stretching function I have in some old code I can put in. Other elements would also be nice. It’s easy to cut the quads into tris (I have the same implementation for this in a python script) and hexas into tets. Might wait for a compelling need to add these features though, but I have no doubt we’ll add them",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-524179517:270,simpl,simple,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-524179517,2,['simpl'],['simple']
Usability,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:326,simpl,simplifying,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558,2,['simpl'],['simplifying']
Usability,"@SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621090526:158,simpl,simpler,158,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621090526,2,['simpl'],['simpler']
Usability,"@TobiKattmann since we were talking about it yesterday, the advantage of the ""weak"" formulation is that it is conservative, heat fluxin equal heat flux out (because the post processed fluxes are consistent with how the boundary condition is applied).; Obviously at the expense of the isothermal temperatures not being imposed exactly.; With the ""strong"" formulation, conservation can probably only be achieved if the mesh topology of the inlet/outlet boundary is the same, or at grid convergence.; Learning something new everyday, I put it back as it was.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1107#issuecomment-730418379:498,Learn,Learning,498,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-730418379,1,['Learn'],['Learning']
Usability,"@bigfooted @EvertBunschoten Well fwiw the simplest way is to checkout a new branch from before the merge and open a new PR, there are no coments here yet, so its fine.; (If you git revert the merge it will be a pain to then merge the other PRs)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1327961579:42,simpl,simplest,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1327961579,2,['simpl'],['simplest']
Usability,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:100,simpl,simplest,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672,2,['simpl'],['simplest']
Usability,"@bigfooted Has there ever been any discussion regarding implementation of a `START_TIME=` capability into the config file? After going through the code a bit, it looks like doing this would be a good starting point for implementing ability to adjust deltaT mid-runs, as in general the code presumes `TimeIter*deltaT` as being the current time. This would be problematic for unsteady restarts that have a varying timestep. Plus, this would allow one to, without using the Python wrapper, use a different timestep in the config file for an unsteady restart. It also may clear up some confusion to have an explicit option for this, as in #2071. It can maybe look something like:. % Start time for restarting unsteady simulations; % = -1 for default calculation (START_TIME=RESTART_ITER*TIME_STEP); START_TIME=-1. Then `CConfig::GetPhysicalTime` could be appropriately updated and used in-place of all locations in the code where a physical time is manually calculated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956:568,clear,clear,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956,2,['clear'],['clear']
Usability,"@clarkpede @EduardoMolina : yep, the issue is that the periodic and MPI communications are tangled up together in the current implementation. The main issue occurs when there are periodic points that are also ghost nodes. . Ideally the periodic and MPI would be separated, and the periodic communications would happen first so that all periodic BCs are synchronized before trying to send across partitions. Right now, the comms are mixed, so sometimes, we send old data at periodic points to their matching pair, which then gets updated in a later MPI comm. Therefore, the second call you have added to the MPI resends the periodic update to with the correct data that was updated with MPI in the first call. I hope this is clear.. Anyway, please go with this change as you have it. All of the MPI and periodic comms will be replaced with a cleaner/separated version right after v6.2.0 (you can see what I am working on in feature_mpi_periodic). I will likely need some help testing that soon :).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463711280:724,clear,clear,724,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463711280,2,['clear'],['clear']
Usability,"@clarkpede A small discussion on the pros and cons can be found here: https://mesonbuild.com/Comparisons.html. Or https://medium.com/@germandiagogomez/getting-started-with-meson-build-system-and-c-83270f444bee Of course this article is just a personal opinion, but he makes some important points. . From my experience I can really say that the syntax of meson is extremely simple and intuitive. I managed to set it up for SU2 in like half a day, without having any prior knowledge on how it works. And it seems like that a lot of projects (for example all Gnome projects) are going to or are already using meson.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-500221287:373,simpl,simple,373,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-500221287,4,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"@clarkpede Great, thanks for the details. I see your point. In general, vortex shedding cases are indeed challenging to match with the experiments, but that's what makes them interesting at the end. For a start, I am aiming to obtain comparable behaviours with both the compressible and the incompressible unsteady solvers under similar settings, rather than matching with experiments; mostly as an acceptance test as well. I am now working with standard SST turbulence model, but if you could share some simple meshes/cfg files to have a first go with hybrid RANS/LES, I would really appreciate it. > Good catch. I just pushed a commit that adds SetMaxLength calculations in all the instances I could find where the geometry updates. Thanks for the fix!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-404097397:505,simpl,simple,505,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-404097397,2,['simpl'],['simple']
Usability,"@clarkpede I have not used the mesh adaptation tools since my last post (I was simply learning to use them for an undergrad project). With that said, I do not have any other concerns. It worked well for my application. I appreciate your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-500491744:79,simpl,simply,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-500491744,4,"['learn', 'simpl']","['learning', 'simply']"
Usability,"@clarkpede I think it is simpler to lock the periodic boundaries. I can look into that if you can point me to it. I have been using BFGS but the DV_VALUE is always 0.001 in the config_DOT_AD files, even after 25 design iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626855754:25,simpl,simpler,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626855754,2,['simpl'],['simpler']
Usability,"@economon I need to fix and test a few things before I push the branch to an internal branch. But I should be able to finish by the end of the next week. If you're looking to improve the C++ inlet profile specification I started, then I'd like to get some feedback on the overall design. There are several different ways to handle this, and I chose what I thought was most logical. I want to make sure that my design choices match your use cases and SU2's design. Should I post a summary here, or would you prefer that I email you?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-366493237:256,feedback,feedback,256,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-366493237,2,['feedback'],['feedback']
Usability,"@economon I tested a couple of simpler problems at subsonic speeds, including the ONERA M6 case at M=0.8395. There's occasionally a difference of one iteration out of about 20. Usually the current develop branch is the one that requires more iterations, but not always. I included a snapshot from my tests on the ONERA M6 case at CFL=30. ![convergence_comparison](https://user-images.githubusercontent.com/13340225/48648855-6c97af80-e9b6-11e8-863a-56dfdf0903c8.png). I don't have a good supersonic, viscous test problem, but I suspect the differences in convergence won't be huge there either. This sign change affects a single term out of many and a single component of a 4x4 or 5x5 Jacobian. My take is that the differences are there, but they are very small. I wouldn't have noticed the problem myself if I hadn't been refactoring the code to enable some changes on our end.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439538677:31,simpl,simpler,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439538677,2,['simpl'],['simpler']
Usability,"@economon No, this looks good to me. It is merge-ready, from my perspective. I chatted with @talbring, and in a future PR we would like to add a simple set of classes to use with unit tests. For example, I've created a ""one-point geometry"" class for use in some of my tests. But I think that we should keep the PRs as incremental as possible. PSA: If anyone else wants to review this PR, they are welcome to. It is no longer a WIP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-620382001:145,simpl,simple,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620382001,2,['simpl'],['simple']
Usability,"@elfring: thank you very much for the suggestion, but for the time being, our philosophy is to keep the code as simple as possible to keep a low barrier to entry for new users/developers. Therefore, we try to avoid templates when possible (there are a few isolated places where they are necessary). This may change in the future, but we'll close this for now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360053938:112,simpl,simple,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360053938,2,['simpl'],['simple']
Usability,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:185,simpl,simple,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008,2,['simpl'],['simple']
Usability,"@fpalacios - For the continuous adjoint it is NOT required to run multiple adjoints, you can actually combine them. Whether or not to do so is controlled by the OPT_COMBINE_OBJECTIVE option - I will try to add in some more comments as you suggest to make this clearer, along with other updates next week.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-294324095:260,clear,clearer,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-294324095,2,['clear'],['clearer']
Usability,"@fpalacios I also think it is a good idea to keep the request open. Like I said, I can also help to simplify it. In fact, splitting it up in multiple commits is probably easier then you might think @JSmith36 :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-315606418:100,simpl,simplify,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-315606418,2,['simpl'],['simplify']
Usability,"@fpalacios, you misunderstood me. What I meant was that the CrossProduct part should be uncommented in order to remove the compiler warnings, not removed. When I read this back, this was not very clear from my side. In any case there are still two compiler warnings in geometry_structure.cpp due to this issue in the develop branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/506#issuecomment-364848312:196,clear,clear,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/506#issuecomment-364848312,2,['clear'],['clear']
Usability,@fpalacios: I am adding you to this discussion because I have seen you are the responsible of implementing the Negative Spalart-Allmaras variation in SU2. Maybe you can shed some light into the discussion. In particular to:; > we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652635415:268,simpl,simply,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652635415,2,['simpl'],['simply']
Usability,"@hlkline : it is true that we have been experimenting a lot to find the best formula, and no doubt we will continue to tweak things as we constantly evolve. But, one constant you can always trust is that the repo will be the home for important decisions on issues and PRs, so there is no need to worry about missing critical updates. . With slack and now rocket chat, we are looking to improve communication efficiency as people collaborate on particular developments in the code (say in pairs or small groups), or perhaps in the future, it can be opened to the public as a sort of support channel. This is to be seen as we gather some experience and feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-464602965:651,feedback,feedback,651,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-464602965,2,['feedback'],['feedback']
Usability,"@jayantmukho : The difference is also observed when using SST.; ![rans_cp_compare-branch_roe_SST](https://user-images.githubusercontent.com/9790985/61556955-d372da00-aa17-11e9-9351-5d3505cc85a1.png). @economon and @clarkpede : Thanks for the feedback. @clarkpede , I will re-run using the commit that you pointed and I will post the results here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513330011:242,feedback,feedback,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513330011,2,['feedback'],['feedback']
Usability,"@koodlyakshay I was looking at the ADT modifications that you mention.; Do I understand correctly that the roughness height does not influence the wall distance calculation itself? But that you simply need to know what is the roughness height associated with the closest wall point? If this is the case you can probably just use the markerId returned by the wall distance function?; As for mpi aspects, each rank sees the same ADT and I recall that we do have mechanisms to access global marker information.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-595197305:194,simpl,simply,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-595197305,2,['simpl'],['simply']
Usability,"@kursatyurt Hello, thank you so much for the lead. Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay. Again, thank you for the lead!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397639761:355,simpl,simple,355,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397639761,2,['simpl'],['simple']
Usability,"@lorenzob95 we talked about this issue in our weekly developers meeting.; The current implementation of LM in the code is not stable enough and it has known bugs, so we will not re enable it for now.; A revised implementation by @vdweide exist in branch https://github.com/su2code/SU2/tree/feature_LM_model, but this is based on SU2 v6.2, it has been used on simple problems, convergence is not ideal on more complicated ones.; The decision is to wait for some developments that will make it easier to bring this revised implementation into version 7 (which is different in many ways from 6).; You can follow this issue to know when this gets implemented, it will probably take a few months.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1130#issuecomment-755395168:359,simpl,simple,359,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755395168,2,['simpl'],['simple']
Usability,"@marcovanderbijl : thanks for the question. The original limit there is simply to impose an upper bound for memory considerations, since the first instantiation of the array of FFD boxes (before the number of FFD boxes embedded in the mesh is detected) needs a default value. We can of course change this to automatically detect the number to avoid the requirement or make it an input option in the config, but we have not run into this issue yet. For now, you should be able to increase that to a reasonable number without any issue. Please give it a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/684#issuecomment-495078497:72,simpl,simply,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/684#issuecomment-495078497,2,['simpl'],['simply']
Usability,@pcarruscag Based on your 2nd review we have updated the code according to your suggestions. It was not clear how to restore the accidental changes to the sha versions of submodules externals/codi/ and subprojects/CoolProp/. Please instruct us howto or override yourselves for the same if possible. Request you to please review and instruct for proceeding further.; Thank you very much.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1793649845:104,clear,clear,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1793649845,2,['clear'],['clear']
Usability,"@pcarruscag I just had a chat with @TobiKattmann. Essentially there are two points that would, in our opinion, speak against moving the implementation to CSolver. 1. We dont know yet whether they might be some future differences in the implementations. ; 2. This defeats somehow the purpose of the class structure, as the base class should be free of specific implementations for a certain solver ... Although the intention would be to have it there only temporarily, we never know how long it actually stays there in the end. I don't mind having a little bit of code copy, if the structure is clear and easy to understand.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-472011300:594,clear,clear,594,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-472011300,2,['clear'],['clear']
Usability,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632892959:142,simpl,simply,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959,2,['simpl'],['simply']
Usability,"@pcarruscag I went through all your comments. There is one open discussion, maybe we can see if there is a better way to do this code sharing between flamelet and species although I think what I did now is simple and effective. ; Maybe you still see some other suboptimal implementations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1569765685:206,simpl,simple,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1569765685,2,['simpl'],['simple']
Usability,"@pcarruscag It is ready for some external feedback.; Some things that you might want to take a look at:; - the implementation of objectives using surface_scalar_01, surface_scalar_02,... This is a simple extension to multiple scalars but could be generalized in the future.; - the implementation of axisymmetric source terms using the already available CSourceAxisymmetric_Species, this framework was present in the species implementation. It works, but this might need some more polishing in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1466044654:42,feedback,feedback,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1466044654,4,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"@pcarruscag thanks for the additional feedback. some of these comments were already in my plans, but can only do one thing at a time of course. In any case it's good to see we're thinking in the same way, confirms I'm heading in the right direction, so I definitely appreciate it. Others I had not thought about it at all, even more useful! Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014#issuecomment-654324437:38,feedback,feedback,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014#issuecomment-654324437,2,['feedback'],['feedback']
Usability,"@pcarruscag, Did you work out the analytical Jacobian for AUSM+-up? (holy cow). I have also worked out and implemented in my local machine for AUSM, up and up2 (with minor simplifications/assumptions, wherever seemed okay) . I was planning to consolidate things appropriately and refine it before pushing them to repo.; By the way, I am also observing the similar behavior with little time advantage for analytical part (a bit more refinement/cleaning in implementation from my side will be done) . So what should be the next plan ???. Cheers; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-505621705:172,simpl,simplifications,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-505621705,2,['simpl'],['simplifications']
Usability,"@pcarruscag: I'm in the process of creating a test case for the 3D gust. To do so, I created a CFD mesh for a simple, rectangular 3m wing with a NACA0012 profile. The mesh has a size of 13.7 Mb and a restart solution is 16.3 Mb plus 5.5 Mb (.csv and .dat). Do you think that is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126:110,simpl,simple,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126,2,['simpl'],['simple']
Usability,"@petebachant: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327308587:77,simpl,simple,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327308587,4,['simpl'],['simple']
Usability,"@rsanfer I am attaching [some results](https://github.com/su2code/SU2/files/2612501/FFD_verification.pdf) for FFD derivatives for FSI cases (that made use of this fix) to rekindle the discussion. I am taking this directly from my early stage so apologies if not all details are clear, the conclusion is that the fix does not break the adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-441388433:278,clear,clear,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-441388433,2,['clear'],['clear']
Usability,"@rsanfer I'm using a test case from Ref [1], which doesn't exactly match the test case matching the figure I gave from Ref [2]. In Ref [1], they ran a whole ensemble of tests at various resolutions, corrections, and inflow/initial conditions. Some of the tests involved laminar separation, while others involved turbulent separation. I did not pick one of the Re = 50,000 cases because those cases involve laminar separation. Travin *et. al.* used a special nonuniform initial condition to promote laminar separation, which I viewed as overly complicated for the purposes of these tests. Instead, I picked a turbulent separation case at Re = 1.4 x 10^5 (roughly matching TS1 from Ref [1]). If you want more details/grids/cfg files, I can certainly provide them. Yes, I used the unsteady compressible solver. But I'm unsure if the circular cylinder case provides a good test case for the unsteady incompressible solver. I did very little with this test case in terms of a proper validation. The references I listed went to great lengths to ensure that the numerical results were consistent with experiments. It seems like a challenging test case. There were a lot of improvements I should have made if I were also trying to get consistent results. For example, my spanwise length was too short, and I didn't look into the impact of the rotation correction for the SA model. I skipped these improvements in the interest of time, since I wasn't aiming for validation, but rather a simple acceptance test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403850762:1478,simpl,simple,1478,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403850762,2,['simpl'],['simple']
Usability,"@rsanfer and me had a discussion on it. We both came to the agreement that it might the best if we just remove the generated files from the repo in general. Since buildtools are already required to have 'make' it shouldn't be much of a burden to also require autotools/automake to be installed. Furthermore, we eventually could provide a simple way of installing/compiling it within the preconfigure.py script if necessary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423942141:338,simpl,simple,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423942141,2,['simpl'],['simple']
Usability,"@talbring I agree with your assessment of Boost. I think it's a heavyweight solution to a lightweight use-case. We could always include just the unit-testing header (they offer a header-only version), but ""people may want to use more and more features of boost,"" as you point out. If we as developers want to add Boost as a formal dependency for SU2, then that seems like a fine route. But I have the feeling that many developers do not want to add a Boost dependency. Honestly, Boost UTF doesn't offer anything that we can't get from Google Test. Catch2 is definitely the simplest and easiest of the unit-testing frameworks I listed. The only sticking point is that it requires c++03, and that the full-feature version requires C++11.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500393344:573,simpl,simplest,573,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500393344,2,['simpl'],['simplest']
Usability,"@talbring Thanks for getting this sorted, Tim! I also think it's the best way to maintain a clear difference between regressions and Tutorials. I do have a suggestion though. Although I think it's very nice to have the written tutorials directly in git, so people can contribute directly, I wonder if it's the best idea to have them in the main repo. As the number of tutorials grows, we will have the same problems as for the meshes, with too many files to check out (images, md files, etc). Given that there is a new ""Tutorials"" repository, would it be a good idea to incorporate them there? I think it makes sense in terms of clarity, and we could make use of github pages, which allows to create a website per repository. That way we could have a site for the tutorials - and eventually this could be incorporated seamlessly into the SU2 website. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355262713:92,clear,clear,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355262713,2,['clear'],['clear']
Usability,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598751341:126,simpl,simpler,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341,4,"['clear', 'simpl']","['clear', 'simpler']"
Usability,"@talbring Thanks! Works like a charm now! Thanks for implementing this, I think this building method is a lot simpler than the previous one.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-521545657:110,simpl,simpler,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-521545657,2,['simpl'],['simpler']
Usability,"@talbring that is definitely the long term goal, this was only the first step to make the templating simpler.; Thanks @rsanfer.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-475180235:101,simpl,simpler,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-475180235,2,['simpl'],['simpler']
Usability,"@talbring: thanks for adding the regressions. One iteration is perfect just to check they're running, if they have the originals still being tested in the TestCases. I think the idea of having the written tutorials/documentation for the test cases in the main repository is a very good one, for several reasons. In particular, it will make it easier for people to add documentation, and we could eventually even test for its existence in Travis or make it a strict requirement for PRs in the future. My only concern at the moment is making sure that they look ""nice"" when viewed and that the links are easy to update/follow. We should probably add a title at the top of each tutorial markdown file now (above the first image), since the titles from the wiki page are missing. The image files should be moved from the website repo (su2code.github.io/github_wiki/) to these Tutorials folders. Another idea is to put a top-level ""Tutorials"" markdown file that will be linked from the wiki at the root Tutorials/ directory so that one only has to update the links to new tutorials in that file in the main repo, rather than always updating both the main repo and manually updating the wiki too. Any other ideas for making this seamless and user-friendly are most welcome! Let me know if you need any help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355216605:1236,user-friendly,user-friendly,1236,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355216605,2,['user-friendly'],['user-friendly']
Usability,"@timjim333, I checked your grid with just connectivity info and I get the following error messages. Boundary marker BODY, surface element 77477: No corresponding volume element found.; Coordinates of the points; 0.1815790.04981870.0020471; 0.181850.04994770.00205104; 0.1816670.04971090.00204381. Boundary marker BODY, surface element 133348: No corresponding volume element found.; Coordinates of the points; 0.1814850.04947420.00203657; 0.1813090.04968980.00204316; 0.181230.04944470.00204356. Boundary marker BODY, surface element 134774: No corresponding volume element found.; Coordinates of the points; 0.181230.04944470.00204356; 0.1813020.04923740.00202934; 0.1814850.04947420.00203657. Boundary marker BODY, surface element 135217: No corresponding volume element found.; Coordinates of the points; 0.1816670.04971090.00204381; 0.181850.04994770.00205104; 0.1815790.04981870.0020471. So clearly the grid is invalid.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494393404:896,clear,clearly,896,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494393404,2,['clear'],['clearly']
Usability,"@timjim333,. Yah, those are the general guidelines you mentioned but they do not always work in practical cases.; We will probably know more details when people will share their experiences and issues faced. I have tried meshes with max include angle 175 or below, they go well. Even upto 179 also go through.; But I had trouble recently while just giving a trial for 179.8 or more case.; One thing to note is, SU2 constructs dual mesh from the primal mesh we supply but anyway properties of the primal mesh will carry forward. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494932014:40,guid,guidelines,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494932014,2,['guid'],['guidelines']
Usability,@timjim333. The guidelines you mentioned are perfect but geometry complexity/time constraints at times push it beyond those numbers. Infact most of the Solvers (especially commercial) are robust enough to take (as I mentioned) the mesh crossing these specific guidelines. I think SU2 also handles it reasonably well. Latest version of Pointwise has direct export to SU2 (I think 17.3 onwards or so). Did you try CGNS format? . Best; Amit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-495921430:16,guid,guidelines,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-495921430,4,['guid'],['guidelines']
Usability,"@tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-733607872:145,clear,clear,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-733607872,2,['clear'],['clear']
Usability,"A short summary of the things I did in the additional commits:. - I added a consistent error handling that can be used throughout the code. For example if a marker is not specified the error looks like that: ; ```; -------------------------------- Error ---------------------------------; In ""short unsigned int CConfig::GetMarker_CfgFile_TagBound(std::__cxx11::string)"": ; ------------------------------------------------------------------------; The configuration file doesn't have any definition for marker airfoil; ------------------------------------------------------------------------; Exiting now ...; ```; or if a solution cannot be found:. ```; -------------------------------- Error ---------------------------------; In ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; ------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------------------------------------------------; Exiting now ...; ```; In case you want to throw an error, you can simply call the function `SU2_MPI::Error(""Error Message"", CURRENT_FUNCTION)` where `CURRENT_FUNCTION` is a predefined macro which expands to the name of the routine at compile time. I already replaced almost all error messages in the code. - More MPI functions are included in the MPI Wrapper. - The rank/size is now stored in most of the bigger classes and initialized in the constructor. That means there are no calls to MPI_Comm_rank / MPI_Comm_size anymore in every routine ... For convenience there is also a SU2_MPI::GetRank() / SU2_MPI::GetSize(), in case you need it outside of the main classes. Let me know what you think. Not everything I did has to stay the way I implemented it :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-347663941:1092,simpl,simply,1092,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-347663941,2,['simpl'],['simply']
Usability,"A simple workaround would be to add an if line before the split:; Line 84 of parse_config.py; if np.size(s2) > 1:; thisval = s2.split('""')[1]; Yes, it requires also ; import numpy as np; at the beginning of the script.; Now it runs with no error message but no output produced.; Also config_gui.py is running, but it opens an empty window,; so apparently this is not good enough. best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/216#issuecomment-241208818:2,simpl,simple,2,https://su2code.github.io,https://github.com/su2code/SU2/issues/216#issuecomment-241208818,2,['simpl'],['simple']
Usability,Actually I had a look at your branch and the way it is right now is not correct I believe because I had taken the other variables v and 1/y out of the derivative using the chain rule and combined them with the other derivatives to end up with the terms as they are now so only d(mu)/dy was missing. The AxiAuxVarGrad you are using is apparently d(v*mu/y)/dy so the other terms have to be different. I will change them. Why not just simply compute the viscosity gradient? Is there any reason not to pull the other variables out?. Is there not already an AuxVar being just v*mu or something? . Anyway I guess it will work the same either way,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107:432,simpl,simply,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107,2,['simpl'],['simply']
Usability,"Agreed that the style needs some attention. I am open to ideas about this. You may have noticed that I integrated Codacy recently to test it out: https://www.codacy.com. We have the style guide, but honestly, it's not getting much attention. We should automate checks or have scripts that automatically enforce style constraints. Vera++ sounds interesting in this regard. A little while back, @rsanfer and I had been working on indentation issues with the uncrustify tool. Should we open this as an issue and get some input? Find volunteers to look into these things?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323636235:188,guid,guide,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323636235,2,['guid'],['guide']
Usability,"Agreed. We removed some remaining long arrays with maps (e.g., local to global mappings) in v5, so we should be consistently using unsigned long in reference to grid node index values. In the future, we will likely have an ""su2int"" data type too that we can simply typedef. Closing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/3#issuecomment-307590742:258,simpl,simply,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/3#issuecomment-307590742,2,['simpl'],['simply']
Usability,"Ah! Cool, sure open a new PR @maxaehle.; What adjoint stuff? file names and so on?; I think removing irrelevant options would be make the tests clearer, there are lots with Roe and JST options specified and vice versa which probably confuses new users.; I'm not so sure about removing all defaults thought... On one hand it would serve as regression for the default values set by CConfig, on the other it hides the tuning parameters of some methods... but then again those are more or less documented now.; :shrug:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589:144,clear,clearer,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589,2,['clear'],['clearer']
Usability,"Ah, I wasn't aware of the corrected version. Thanks for pointing out my mistake. The corrected version does make more sense, and the main changes seem to be:. + Changing the location of the sqrt in the definition of `Lturb`; + Changing `ch3` from 0.5 to 2.0; + Clarifying that S and Omega should have a factor of sqrt(2). As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. We know that they got a nice range of values for the blending constant on their tests with DDES. The cases I can see where they explicitly show the results of the blending function are:. + Circular cylinder at Re = 50,000 (Travin _et al._ 2002); + Tandem cylinders at Re = 166,000 (Xiao _et al._ 2012); + NACA0021 airfoil in deep stall (Mockett 2009). The tricky thing is that the value of the blending constant is determined by the flow solution, which is determined by the solver. So the values we obtain will be dependent both on the version of DDES used and the nature of the code. We can't expect to match any of these papers exactly. We could also use a simpler flow, such as fully developed channel flow or a flat plate boundary layer. The tradeoff would be simplicity for ease of comparison.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388189377:1111,simpl,simpler,1111,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388189377,4,['simpl'],"['simpler', 'simplicity']"
Usability,"Ah, that tutorial page is very important.. I don't think it was ever linked in the main wiki menu, but it is critical for making the options clear to the user (especially the surface handling). We need to make the design features as easy to use as possible - it is already hard enough for experts to use adjoints :). This is a good opportunity to move it over to the new repo where we are placing the tutorials here: https://su2code.github.io/Tutorials/docs/home/. The files, including the markdown, mesh, config, and images, can be moved to that repo. The markdown portion goes into the _docs directory, and we should make sure it's linked under the shape design tutorials. Do you have some time for this? Let me know if you need some help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-357458143:141,clear,clear,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-357458143,2,['clear'],['clear']
Usability,"Alex, Heather,. Thanks for commenting and straightening this out. Since this is a frequently asked question, I have added a new section in the documentation on how to use the test cases, which will hopefully clear things up more in the future: https://github.com/su2code/SU2/wiki/Test-Cases. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-171108493:208,clear,clear,208,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-171108493,2,['clear'],['clear']
Usability,"All above,. Can any one share the experience of the mesh quality matrix acceptable by SU2. In Pointwise, one can follow maximum included angle, centroid skewness or equiangle skew as guiding parameters. I have observed that some of the commercial Solvers can accepts and run a very high max included angle (179.99 or so) also without trouble but some others have issues with the same. . Many times due to complex geometry, one ends up with these high numbers. . Any guidelines for SU2 on mesh quality is appreciated. Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494217280:183,guid,guiding,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494217280,4,['guid'],"['guidelines', 'guiding']"
Usability,"All,. For whatever it is worth, here are some thoughts. It is clear that we need to strike the right level and hierarchy of abstraction: at the highest level one really ought to be describing the physical problem, not the number of zones or the specific time-stepping algorithm that would be used. But preventing future multi-zone calculations from reaching the (time) order of accuracy desired is also an important issue that SU2 must support (and that I think would be very important for those doing unsteady turbomachinery calculations). Just as important: even for multi-physics problems (say fluid-structure interaction, when the fluid and structural solvers are not closely integrated into the same source) we need to ensure that the time accuracy of the full multi-physics calculation is as high as those of the component physics solvers. This is a very valid and useful discussion and some proposals are on the table. Given that we are planning a developer’s meeting sometime before the end of the year, this may actually be one of the items in the agenda for discussion, so some decisions can be reached that both make sense and minimize the pain of changes for any part of the existing code. I would suggest that the conversation continue and that other proposals are put forward so the discussion can be finalized at the developer’s meeting. Best,. Juan. On Sep 10, 2017, at 1:09 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Dear @rsanfer<https://github.com/rsanfer>,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whethe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:62,clear,clear,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['clear'],['clear']
Usability,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:323,simpl,simplify,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,2,['simpl'],['simplify']
Usability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:123,simpl,simply,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,2,['simpl'],['simply']
Usability,"All,. The following page has performance comparisons between eigen and mkl (and others):. http://eigen.tuxfamily.org/index.php?title=Benchmark. They are dated 2011, so they are a bit old, but if the quoted performance is real, I would say it is a no-brainer to switch to eigen. If the performance tests (for at least simple things like daxpy and gemm) could be repeated to verify the numbers, that would help us make a final decision. Best,. Juan. On Feb 2, 2019, at 1:58 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. @pcarruscag<https://github.com/pcarruscag>, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon<https://github.com/economon> put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag<https://github.com/pcarruscag> (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459952137>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxCgydwy1nS3qPJvyCMJXLXWNMSFsks5vJWEkgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459986613:317,simpl,simple,317,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459986613,2,['simpl'],['simple']
Usability,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:674,clear,clear,674,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,2,['clear'],['clear']
Usability,"Alright. I've copied over my changes, with a few improvements. They're on the branch `feature_fileprofile`. One important change is that the user no longer needs to specify the node numbers. For each inlet node on the mesh, the code looks for the closest point from the inlet file. If that closest point is within a specified distance, it deems it a match. If not, it returns an error. Some points:. + The code will generate an example inlet file if the inlet file is missing / is invalid.; + I have not added interpolation. Since python makes interpolation easy, I didn't view this as a high priority.; + I have not added support for multigrid. I'm unsure of how to do this, since I'm not familiar with the multigrid code. It's not as simple as copying what's done for the restarts in the volume mesh. That's a volume based agglomeration, whereas the boundaries are faces. Feel free to modify my implementation however you want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-368990059:736,simpl,simple,736,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-368990059,2,['simpl'],['simple']
Usability,Also nice would be a clear separation between the blocks. Atm at ending u get Exit .....; Somethin like that:; ![unbenannt](https://cloud.githubusercontent.com/assets/11041576/15497673/13a67f62-219c-11e6-9c89-7dcc1236a706.PNG),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/257#issuecomment-221203675:21,clear,clear,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/257#issuecomment-221203675,2,['clear'],['clear']
Usability,"Also works for me now! Thanks for fixing this. ~~Travis failed due to reaching the maximum time for a job. The usual time the serial test take in other PRs is like 45 min, but this one was killed after 1h 9 min. Is there something that could go wrong in the non-mpi case ?~~. ~~I just restarted the tests to see whether it occurs again.~~ . Now it has passed. If it happens again, simply restart the job in Travis ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264239270:381,simpl,simply,381,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264239270,2,['simpl'],['simply']
Usability,"Also, this might be more of a question I guess, why does this `meson.py` script exist/why isn't the normal way of using meson (simply running `meson <builddir>`) used?. [edit] Just noticed `meson build` also works and uses the system installed `ninja` as expected. Still not really sure what the script is for.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598376736:127,simpl,simply,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598376736,2,['simpl'],['simply']
Usability,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:14,simpl,simple,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,2,['simpl'],['simple']
Usability,"Any other comments here? Otherwise, this is a simple addition that we can put in right away, and folks can hack away on Doxygen whenever their heart desires.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/373#issuecomment-279838683:46,simpl,simple,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/373#issuecomment-279838683,2,['simpl'],['simple']
Usability,"As @gbaty said, it's usually easy to support both. Many times it can be done with a simple. ``` python; from __future__ import division, print_function; ```. at the top of each file, and tweaking the `print` and `import` statements. In my experience, the Anaconda (or miniconda) Python distribution makes it very easy to setup just about any version of Python you like on a cluster, since it's installed in the user's home directory by default. . Most scientific packages (NumPy, SciPy, Matplotlib, Pandas) already support both 2.7 and 3.x within a single codebase. Python 3 is the future!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195767843:84,simpl,simple,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195767843,2,['simpl'],['simple']
Usability,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1161,simpl,simplest,1161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509,2,['simpl'],['simplest']
Usability,"At some point the marker starts being partitioned, some of it is in one rank, some in other(s).; Your print function truncates the file when it opens it, and so you only get the output from the last rank that opened the file.; You could make the file a member of the class, so that you can guarantee it is only opened once (other ranks would need to open in append mode), but then you still have a race condition when multiple ranks try to write simultaneously to the file (the result might be mixed lines, especially when `endl` is used to terminate lines because it forces a flush, maybe with ""\n"" and some luck it would be ok, but the order of the lines is still unpredictable).; To my knowledge mpi does not have simple ways to guarantee ordered execution of certain code regions. So unless you want to get knee deep in mpi, I recommend you keep this file output as a debug feature (that works on a single core) and use the normal surface output files (paraview, tecplot, etc.) for visualization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/944#issuecomment-616367257:717,simpl,simple,717,https://su2code.github.io,https://github.com/su2code/SU2/issues/944#issuecomment-616367257,2,['simpl'],['simple']
Usability,"Both ‘**rapidjson**’ and ‘**CoolProp**’ are licensed under the shortest and simplest permissive **MIT** license. I am not an expert but whether indicating the text of the licenses and copyright marks at the beginning of each of my files is reasonable?. Honestly, I don’t like the idea to treat **rapidjson** as a git submodule because some **rapidjson** internals are Windows specific (e.g., _/include/rapidjson/msinttypes_ subfolder content) and I don’t really confident with Meson build setup procedure. . Actually, I generated the **all_cubics_extended_JSON_binary** variable in the following way.; **CoolProp** library contains dozens of json files from which I assembled the single file for my own needs. Then, I made some modifications to the _generate_headers.py_ file (under _/dev_ subfolder of the **CoolProp** root) and run it in order to translate my large json file into the C++ header file. The generated file is not as large (~1.3 MB) as it seems but verbose a little bit. Could you clarify what **tecplot** sources do you mean?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879:76,simpl,simplest,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879,2,['simpl'],['simplest']
Usability,"Bumping this thread... Files are now starting to be divided in several PRs, but we should set a clear policy for this. Seems that the consensus is to carry one class per file, move the inlines to the headers, and create subfolders where possible (i.e., have a more flat hierarchy in the src directory based on logical groups such as numerics, geometry, solvers, etc). We do not have a clear naming convention yet, but if it is one class per file, then an option is simply the class name. Am I capturing the current consensus correctly? Anything I am missing? Naming preferences?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-500945013:96,clear,clear,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-500945013,6,"['clear', 'simpl']","['clear', 'simply']"
Usability,"By complex, I meant more complex than my simple toy problem. So if it's working for you, then that's what I was aiming for. I'll open a PR shortly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-628681947:41,simpl,simple,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-628681947,2,['simpl'],['simple']
Usability,"By the way, there's also this cool tool called vera++ that allows you to check the style of the entire codebase. This could be integrated with Travis so make sure PRs are consistent with the coding style guide.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323580700:204,guid,guide,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323580700,2,['guid'],['guide']
Usability,"Can we please have different enum names than RHO and RHO_ENERGY? Those enum options are at the highest level of the code. In a random context, it's not clear that RHO is a residual. RHO_RESIDUAL and RHO_ENERGY_RESIDUAL would be better, and I personally feel that DENSITY_RESIDUAL would be better yet, though Francisco may disagree.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/87#issuecomment-58026023:152,clear,clear,152,https://su2code.github.io,https://github.com/su2code/SU2/pull/87#issuecomment-58026023,2,['clear'],['clear']
Usability,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563150217:164,simpl,simply,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217,2,['simpl'],['simply']
Usability,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-627095055:222,simpl,simple,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055,2,['simpl'],['simple']
Usability,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:69,simpl,simple,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117,2,['simpl'],['simple']
Usability,"Closing this for now. After talking with @oleburghardt and @talbring there are features being worked on that are much simpler to develop using Eigen, we may see a PR for that in the not too distant future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-592951260:118,simpl,simpler,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-592951260,2,['simpl'],['simpler']
Usability,"Config options and their options can be found in:; https://github.com/su2code/SU2/blob/master/config_template.cfg; As a part of the code repository, this document will remain up to date with whatever version of the code you have. I believe that this is the single document to which you refer. I apologize that its location or purpose may not have been clear - I will shortly go edit the wiki to see if I can make it clearer that this file exists. . Additionally, the file config_template_basic.cfg in the same directory is a shorter version with only the options most commonly used. . Further documentation of the config options is also available in the comments of:; https://github.com/su2code/SU2/blob/master/Common/src/config_structure.cpp. And although it has not been up to date as we moved towards the wiki and config file template rather than keeping doxygen up to date, additional documentation can be produced using the files in su2code/Documentation/Doxygen.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183#issuecomment-111755617:352,clear,clear,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/183#issuecomment-111755617,4,['clear'],"['clear', 'clearer']"
Usability,Could you leave in the machine learning section a bit longer?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152095697:31,learn,learning,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152095697,2,['learn'],['learning']
Usability,"Dark mode?; ""Is it possible to learn this power?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950:31,learn,learn,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950,2,['learn'],['learn']
Usability,"Dear @oleburghardt, . Unfortunately, your initial reply lacks of any constructive contribution. . SU2 depends on the feedback of you all. We should not discourage anybody to change/improve, show interest, ask for clarification, etc. The tone of your initial replay was unjustified and not polite.; From now on, your profile as a member of the developer team (collaborator) will be not longer active. Peace,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313775430:117,feedback,feedback,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313775430,2,['feedback'],['feedback']
Usability,"Dear @salvovitale,. I realize that it requires significant changes in the code structure and I don't have a clear answer how to do this, also because I don't know all the details of the implementation of the multi-physics simulations. . The only thing I do know is that the loop over the zones must be inside the loop over the RK stages, at least for the fluid zones. Whether this is also the case for e.g. fluid-structure problems, I don't know. As you mentioned, the opinion of the other developers is greatly appreciated on this matter. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328302068:108,clear,clear,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328302068,2,['clear'],['clear']
Usability,"Dear @vdweide,. I clearly see your point. However, this can be quite a big structural change of the code and I think we should plan very well how to address this issue. The reason of having a driver class was to facilitate the extension of SU2 to multi-physics applications both for analysis (direct solver) and design (adjoint). Thanks to the high level of abstraction of the CInterpolator, CTransfer and the CIteration classes, it was kind of natural to treat fluid-fluid problems similarly to multi-physics problem (i.e. fluid-structure and fluid-heat). As a matter of fact, the multi-stage turbomachinery approach , its adjoint counterpart, the sliding interface they all rely on this driver structure in which we loop among all the zones. If i understood correctly, you suggest to move only the fluid-fluid multi-zone loop at lower level in order to integrate in time only after having coupled all the fluid zones. Right? If so, we need to design the code in such a way that the fluid zones loop is separated from the multi-physics one.; To solve this issue, I think, we just need to find a smart way to differentiate fluid-zones from the rest. Perhaps we can do that by instantiating one Iteration per physical problem instead than per zone. So that inside the iteration we can couple all the fluid zones, and in the driver we can couple the different physics (Iteration). Indeed, this is just a preliminary idea. In general I think we should aim to a structure that can flexibly accommodate multi-physics problems with multi-zones for different physics. A good example is solving fluid-structure in multi-stage turbomachinery, in which we have multiple fluid-zones and multiple structure-zones. ; ; I would like to hear on this matter also from @fpalacios @talbring , @economon , @rsanfer @oleburghardt ,@LaSerpe and @arubino. Thanks @vdweide againg for raising this issue. cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328274125:18,clear,clearly,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328274125,2,['clear'],['clearly']
Usability,"Dear Daumantas,. I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs. I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552360147:206,guid,guide,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552360147,2,['guid'],['guide']
Usability,"Dear Dr Albring,. I just followed the procedures and included the files to create a test case to SU2_CFD_AD [a coarse mesh, a TargetCp.dat and a config file for an Arina nozzle. The coarse mesh is a 2000 triangles one; which is enough to give us an idea of the shockwave location and the geometry modifications. The next mesh I have would be an ~85000 elements which gives us a good information on the 27th function call]. ; I had some segmentation faults during long jobs: Is there some recommended tuning I can do on OS/HW or SU2 in order to minimize them?. With kind regards,. Jairo. > On Dec 7, 2018, at 09:45, Jairo Paes Cavalcante Filho <jairo.pcfilho@gmail.com> wrote:; > ; > Hello Dr. Albring,; > ; > Yes! Sorry for the delay due some internal presentations and events here.; > I just finished a small model and successfully tested it on openSUSE. I expect to upload it today.; > ; > With kind regards,; > ; > Jairo; > ; >> On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com <mailto:notifications@github.com>> wrote:; >> ; >> Hi Jairo,; >> ; >> what is the status here ? Is it possible to provide a simpler (smaller) case ?; >> ; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >> ; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445429636:1120,simpl,simpler,1120,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445429636,2,['simpl'],['simpler']
Usability,"Dear Dr. Economon,. I just finished the run on AD with the files you have adjusted and it did; converge. I also have successfully run some simple inverse design tests; with a limit on the number of cycles.; Thank you very much for your guidance and help. With kind regards,. Jairo. On Wed, Jan 30, 2019 at 2:13 PM Thomas D. Economon <notifications@github.com>; wrote:. > *@economon* approved this pull request.; >; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; >; > Just one request: I have adjusted the number of iterations for the; > regression test and updated the residual values in the python script. I; > also had to move around some files. Can you please run the case (to; > convergence) and verify that the results are what you expect? Note that the; > config file and target Cp are in the code repository and the mesh and; > solution file are in the testcases repository. If everything looks ok, then; > this is ready to be merged.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459568514:139,simpl,simple,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459568514,4,"['guid', 'simpl']","['guidance', 'simple']"
Usability,"Dear Dr. Economon,. Thank you again for your guidance.; The git add, git commit and git push commands worked as expected.; The only problem I had was when I tried to upload the mesh file to https://github.com/su2code/TestCases/tree/develop/disc_adj_euler: <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler:> I wanted to upload a folder “arina2k”, whose contents is the mesh file (.su2). I could not just upload the folder name: the system appears to be waiting for an actual file name. When I choose the file name inside that folder , it appears that the system would upload the file within the repository, but 'discarding’ its folder name, so I would have an ‘orphaned’ file there. I tried also to create a file (which would be my folder name), but again, I am prompted with an editor in order to write an actual file, using directly the browser. I believe that there is a simple way to upload a sub-directory/filename, but i could not realize it. With kind regards,. Jairo. > On Dec 14, 2018, at 01:26, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop <https://github.com/su2code/TestCases/tree/develop>. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-447209397>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hTDp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447475363:45,guid,guidance,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447475363,4,"['guid', 'simpl']","['guidance', 'simple']"
Usability,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:621,guid,guidance,621,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['guid'],['guidance']
Usability,"Dear Tim,. I think it is good one. But we should keep in mind that we already have OpenFoam available which is a very good open-source solver for this type of flows, but I do not think it has an Adjoint solver. Please correct me if I am wrong. Best,. Eduardo. > On 22 Aug 2017, at 16:44, Tim Albring <notifications@github.com> wrote:; > ; > Dear all,; > ; > I recently had a lot of discussions with people that are interested in developing a pressure-based incompressible solver (like SIMPLE etc.) in SU2. I just wanted to get the discussion started.; > ; > Who is willing to contribute ? What applications do you have in mind ?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/429>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCTZqPArJr99aBEoGoiAmQsKOLQmBks5say-JgaJpZM4O_GCF>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-324472719:485,SIMPL,SIMPLE,485,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-324472719,1,['SIMPL'],['SIMPLE']
Usability,"Dear all, ; I have added a pdf file here that includes some test case results obtained with our BC transition model. These zero pressure gradient and variable pressure gradient flat plate test cases are very popular for model validation. I have also included Eppler E387 airfoil results. I would appreciate if you have any 3-D test case and share it with me.; Looking forward to hear your feedback. ; Sincerely,; Samet. [BC_model_TestCaseResults.pdf](https://github.com/su2code/SU2/files/562425/BC_model_TestCaseResults.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257360833:389,feedback,feedback,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257360833,2,['feedback'],['feedback']
Usability,Feedback (positive or negative) from everybody is requested :) I get conflicts with every new pull request at the moment and it costs me always some time to resolve them ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-261930266:0,Feedback,Feedback,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-261930266,1,['Feedback'],['Feedback']
Usability,"Folks,. Perhaps we can split this issue to a separate thread. But it is indeed a critical one. Improving performance of the solver (or trying other preconditioned solvers) would be a significant improvement amortized over a very large number of users. Add it as a topic of discussion for the Annual Meeting in May?. Juan. On Feb 5, 2019, at 6:54 AM, pcarruscag <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @EduardoMolina<https://github.com/EduardoMolina>,. That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. However Eigen is not the tool for that as the sparse linear solvers it has are similar and are not distributed parallel.; When I opened this issue I was thinking exclusively about how we handle small-medium dense matrices that live on a single rank, and associated algorithms (the kind used for RBF interpolation for example).; I think the two issues are fairly orthogonal, so we can open another to discuss large solvers, for which related work has already been started. Cheers,; Pedro. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-460666656>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxClv7-iTk5lFN9sK4fkqM7lk0FZEks5vKZsPgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460714752:587,simpl,simply,587,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460714752,2,['simpl'],['simply']
Usability,"Food for thought: According to his most recent AIAA talk, Spalart himself has tried to keep the model variants ""modular."" Some of the variants are compatible with each other. For example, you can add a ""rotation-curvature correction"" and a ""compressiblity correction"". The NASA TMR catalogue reflects this design by stating ""These corrections can be applied individually or together in combination with the General Model."". A simple `SA_QCR` or `SA_COMP` naming scheme doesn't match the underlying design. On the user-facing side, separate config options might be better for some of the variations. On the code side, bit flags (Issue #770) might be a good way to gather all the model variants together into a single config option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652446915:426,simpl,simple,426,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652446915,2,['simpl'],['simple']
Usability,"For the time being, lets use Gitter to communicate! Its free and you can simply log in with your github account. https://gitter.im/su2code/community",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515048317:73,simpl,simply,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515048317,2,['simpl'],['simply']
Usability,"From the SU2 paper, talking about ""guiding principles"":. <img width=""574"" alt=""Screen Shot 2019-10-09 at 3 26 46 PM"" src=""https://user-images.githubusercontent.com/19416354/66525312-edb5d480-eaa9-11e9-9c0f-158b3941b407.png"">. I particularly like. > Full documentation, including a comprehensive set of tutorials. (""including"" implying that the tutorials are a subset of the documentation), and . > expose the full set of options [...] to the practitioner. This conflicts with our ""operating principle"", laid out on the tutorials page:. > Rather than writing a long manual on all available (and constantly evolving) configuration options available in SU2[...]. The Guide to V7 is a good start, but I think at the bare minimum (since I agree that full documentation would be a huge task, though one that's apparently promised on a paper we link on our homepage), we should provide more information about the existing options beyond forcing the user to scroll through config_template.cfg or dig through the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-540239931:35,guid,guiding,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-540239931,3,"['Guid', 'guid']","['Guide', 'guiding']"
Usability,"Giulio,. Yes! It would be excellent to have the HLLC Jacobians for the ideal gas case too. Please let me know if I can assist with anything. You might also have noticed some old commented out code that you could use as a guideline. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209#issuecomment-171112223:221,guid,guideline,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/209#issuecomment-171112223,2,['guid'],['guideline']
Usability,"Good Morning,. I'm from Chair of Thermal Engineering of Poznań University of Technology.; In August 2017 my colleague and I attended SU2 Summer School in; Kaiserslautern and met the Sci-Comp team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:453,simpl,simple,453,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,2,['simpl'],['simple']
Usability,"Good catch! yep! I implemented an interesting/important change: Before, WALL_DISTANCE was computed using only the surfaces that you have identified as moving surfaces... as you can imagine that only works when you have a very simple problem (maybe an airfoil) but... if you have a problem with more Navier-Stokes markers together and you are moving only one of them the method doesn't work (e.g. wing-fuselage). For that reason I reimplemented WALL_DISTANCE which now is computed from all the solid surfaces and I also created DEF_WALL_DISTANCE that computes the distance from the surfaces that we are moving (as before). Frankly, I haven't found a situation in which DEF_WALL_DISTANCE outperforms the new solid WALL_DISTANCE... And, my suggestion is to eliminate DEF_WALL_DISTANCE in the future. For the time being I have added DEFORM_STIFFNESS_TYPE= DEF_WALL_DISTANCE to the config files to see if that solves the problem. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-318673304:226,simpl,simple,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-318673304,2,['simpl'],['simple']
Usability,"Good point about making the eigen-functions static. That makes it a lot more accessible in other parts of the code. Will include that in the changes along with the option name changes. . I like the idea about the static allocation, but I foresee a problem that you actually mention. If I convert the variables to be statically defined, I would have to make the eigen-functions accept statically defined arrays. Since most arrays in SU2 are dynamically allocated, this would cause some compatibility issues. . In general, I see the value in making a math library associated with matrix operations. Maybe you could pitch the idea in an issue and get feedback on it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433963723:648,feedback,feedback,648,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433963723,2,['feedback'],['feedback']
Usability,"Good point, Jayant. Maybe a brief tutorial and an example can be created so people know how to use this new feature? There will be a presentation by Edwin and Tom at the annual meeting that might also be helpful. Best,; Juan. On Apr 24, 2019, at 11:32 AM, Jayant Mukhopadhaya <notifications@github.com<mailto:notifications@github.com>> wrote:. I am not a 100% clear on all the things this new feature can do. From what I gather we can now set an initial flow field that is not just freestream condition everywhere? If this is the case, this is a hugely useful feature so thank you guys for doing that. How exactly is this allowing for solution verification? Is it allowing you to run the same case with a bunch of different solver schemes? Can it run the solvers on a set of meshes or do you still have to run on each mesh refinement individually?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/672#issuecomment-486373335>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRDJGI6HH6HEUDATJS3PSCRUZANCNFSM4HH7BJ7A>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-486418280:360,clear,clear,360,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-486418280,2,['clear'],['clear']
Usability,"Great! Sounds good, just figured id bring it up to get some of these ancient issue cleared up. :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-501794908:83,clear,cleared,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-501794908,2,['clear'],['cleared']
Usability,Guide new in 8 should be added like new in 7 before.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2361#issuecomment-2395573837:0,Guid,Guide,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/2361#issuecomment-2395573837,1,['Guid'],['Guide']
Usability,"Guys, we cannot simply change defaults like that, update regressions, and call it a day... Even fixing #1551 is a major change that should warrant a major version update. We want SU2 users to be able to rely and trust the code we release...; That is why I suggested that this PR should be used only to change the way of specifying SST options, and introduce simple ones like the V and KL modifications. Then the validation work for SST 2003 (with and w/o modification) would be done in #1557.; But ok, let me look at this and propose a way forward that gets in develop ASAP, **please don't start updating regressions**.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1084549672:16,simpl,simply,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1084549672,4,['simpl'],"['simple', 'simply']"
Usability,"Guys,. Thanks for your feedback. @pcarruscag, the reason why I made a different enum rather than a boolean USE_SST_SUSTAINING_TERMS is that all different SA versions also have a different enum. So I thought this was more consistent. But if there is a strong preference for an additional boolean, I'm fine with that as well. What we can do is to keep the enum and set the boolean USE_SST_SUSTAINING_TERMS internally and overwrite SST_SUST to SST. @talbring, @jayantmukho, I am in favor of keeping the original version of SST. Although the difference between the models is rather small, basically the addition of one term, the difference in results can be quite significant, especially for relatively low Reynolds numbers and large value of the turbulent intensity. . @economon, you are right that a lot of the checks for SST are actually more general checks for a two equation model. So I think that most, if not all, checks for SST can be replaced be a check for the number of turbulent equations. That is more general as well, in case we want to add additional turbulence models in the future, assuming that an equation is present for the turbulent kinetic energy if the number of turbulence equations is two or bigger.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/765#issuecomment-524053082:23,feedback,feedback,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/765#issuecomment-524053082,2,['feedback'],['feedback']
Usability,"Have a look at my last comment in #763, I think there is a better way of handling linear system periodicity instead of what we do, which may allow you to run at higher CFL (and with simpler periodic comms). But at the moment you are missing the PERIODIC_IMPLICIT comms after solving the linear system, see CompleteImplicitIteration_impl in CFVMFlowSolverBase.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927138184:182,simpl,simpler,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927138184,2,['simpl'],['simpler']
Usability,"Heather: I know we talked about this one in person the other day, but I am still weighing things... Even though it looks like a small change, it's a really big one, and I want to make sure we keep things as clear and user-friendly as possible. . If anyone else has thoughts on this, please feel free to chime in. Maybe we can catch up about it again early this week.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-184449921:207,clear,clear,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-184449921,4,"['clear', 'user-friendly']","['clear', 'user-friendly']"
Usability,"Hello @aditya12398 ,. No such thing as a noob question!. To use your system meson, instead of using: `./meson.py <arguments>` in your SU2 root dir, use `meson <arguments>`. This assumes your system meson is in front of your current directory in your path, of course. Likewise, to use system ninja, instead of using: `./ninja -C build install`, simply use `ninja -C build install`. I found, for some reason, that when using my system meson and ninja with the changes made in `fix_python_3.8`, I am not getting errors, but when I use SU2's included `./meson.py`, I'm still getting those errors. Not sure why this is happening, though. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631584658:344,simpl,simply,344,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631584658,2,['simpl'],['simply']
Usability,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:544,clear,clear,544,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410,2,['clear'],['clear']
Usability,"Hello @pcarruscag @TobiKattmann and SU2 developers,. We have been busy making several code updates, performing cleanup, etc. for this PR. Can you please review and provide feedback when you get the chance? Thank you in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541:172,feedback,feedback,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541,2,['feedback'],['feedback']
Usability,"Hello Dr. Albring,. Yes! Sorry for the delay due some internal presentations and events here.; I just finished a small model and successfully tested it on openSUSE. I expect to upload it today. With kind regards,. Jairo. > On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com> wrote:; > ; > Hi Jairo,; > ; > what is the status here ? Is it possible to provide a simpler (smaller) case ?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445209093:373,simpl,simpler,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445209093,2,['simpl'],['simpler']
Usability,"Hello Dr. Economon,; ; At this moment, I am running a case which is lighter but sill not very simple (I am running it on a Mac with four cores, and it will finish by Monday, I suspect). As soon as it successfully completes, I will work on a simpler sample case in order to include it in the test suite, willing God. With kind regards,. Jairo. > On Nov 16, 2018, at 16:12, Thomas D. Economon <notifications@github.com> wrote:; > ; > Thanks, @jaspe55 <https://github.com/jaspe55> ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-439496260>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180nOm5nOlpnYLID7YMRQeFOsAZQJYks5uvw4MgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439506935:94,simpl,simple,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439506935,6,['simpl'],"['simple', 'simpler']"
Usability,"Hello Pedro, thanks for your quick reply! ; More than the differentiation of the mesh deformation problem I was referring to what SU2_DOT does in the specific, at least in terms of workflow.; In fact, reading your answer I realise that maybe I'm misunderstanding the process done by SU2_DOT.; I thought that, in case of Disc. Adjoint, SU2 solver was already providing the _total_ sensitivity of the objective function with respect to the boundary grid nodes displacements. This already includes the contribution of the mesh deformation. given this, I thought that SU2_DOT was simply projecting such sensitivities on the FFD box point displacements chosen as design variables. But I cannot understand then why the need to include the mesh deformation problem within SU2_DOT.; Can you let me know about that please?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772:576,simpl,simply,576,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772,2,['simpl'],['simply']
Usability,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:360,simpl,simply,360,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,2,['simpl'],['simply']
Usability,"Hello all, ; as I have mentioned before, this PR is the first of a series that are coming soon for general maintenance and improved usability of the code. As you all know, we are working hard to improve the generality and usability of the code and to maintain it healthy. ; We have some other improvements/generalizations that rely on this one. Therefore, I think it would be a good idea to merge this in sooner than later, to transition smoothly to this new structure.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585#issuecomment-441210349:132,usab,usability,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/585#issuecomment-441210349,4,['usab'],['usability']
Usability,"Hello, ; You are right, this pr cannot solve the problem but just make the solution look reasonable.; For some complicated case, it is hard to converge, not like in the simple cases.; I have read the relevant code and book, and I think maybe a good way is to rewrite the bc code and move the nonzero normal components limitation to where the flux are calculated. Or we can store the flux of the points on the sym bc, and in CFVMFlowSolverBase<V, R>::BC_Sym_Plane we just use the stored flux without recalculation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319:169,simpl,simple,169,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319,2,['simpl'],['simple']
Usability,"Hello, @aeroamit . Thank you very much. I try for some times and find that mach number matters. When I simulate two-dimensional lid-driven cavity flow, the flow starts from static. So this case always fails. I try laminar boundary layer case with 0.1 incoming mach number. This time SU2 runs well with AUSMPLUSUP, at a very low CFL number(0.01 or lower), converging slowly. I learn that this scheme is perfect for high speed flow, but it may not be good at low mach number case. Perhaps there are some mistakes when I use it. I think I am not familiar with this scheme enough and that I know SU2 not very well. Before using it in practice, I should read more papers and codes. By the way, SU2 6.2.0 doesn't have the option 'USE_ACCURATE_FLUX_JACOBIANS'. Thanks again. Regards; Cao J. Z.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-523374440:376,learn,learn,376,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-523374440,2,['learn'],['learn']
Usability,"Hello,. I have been debugging the differences between the two versions. I found 5 differences that lead to slightly different results. Two of them have been verified to be an improvement of physical modelling. The other 3 I am still trying to figure out. Could you please run the same tests with MUSCL_FLOW=NO and see if you're still facing this issue?. I see that the MUSCL reconstruction is one of the 3 things that have been modified and not sure if could be the cause of the problem or not. I will keep working on understanding the impact of the other 2 things. When you do this - could you please save the simulation output log of both versions and send those back to me too (in this way I'll have a better feeling of what is happening to the residuals throughout the simulation)? We can just focus on the invbb case to make it simpler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684:833,simpl,simpler,833,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684,2,['simpl'],['simpler']
Usability,"Hello,; As a simple user, when I forget to save the last history before continuing a simulation I am very frustrated, because it is lost forever... Since the new history file erases the previous one.; Also, making these history backups is not very practical...; I would very prefer an option in the config file like: ""when RESTART_SOL= YES append to the history or not?"".; I think it would not be difficult to set another variable like: ""max_it must be counted from the beginning or from the last launch?"".; I agree it makes it a bit more complex, but not too much I think :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103369490:13,simpl,simple,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103369490,2,['simpl'],['simple']
Usability,Here is a quick summary for the inviscid wedge case using different NEMO schemes. There is clearly work to be done in the convergence/robustness world.; [nemo_scheme_regressions.pdf](https://github.com/su2code/SU2/files/10441554/nemo_scheme_regressions.pdf),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1386403998:91,clear,clearly,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1386403998,2,['clear'],['clearly']
Usability,"Here is a simple proof-of-concept for the fluid iteration where we catch SIGTERM. If you run it and hit ctrl-c, we catch the signal and we set stopcalc to true. This will exit the for-loop and also forces a saving of the files.; I think implementing the signal handler like this is the best, because we let the solver handle all the cleanup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2110#issuecomment-1678550840:10,simpl,simple,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/2110#issuecomment-1678550840,2,['simpl'],['simple']
Usability,"Here is the patch from the develop branch. As I stated before, this adds the 'increment-progress' logic to the vertex export process; this causes the sub-progress bar to shows the progress of the vertex export for a more accurate experience. Thanks again,. Ethan Alan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72#issuecomment-56592650:154,progress bar,progress bar,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/72#issuecomment-56592650,2,['progress bar'],['progress bar']
Usability,"Hey @LaSerpe (Giulio),. I had a look at the new driver structure and it look clear to me. My only comments is on the name of the classes: I agree on having a GeneralDriver in place of the SingleZone and MultiZone Driver, as @tobadavid said we should distinguish the drivers for the different physics/applications, but the name CFluidDriver I think is a bit misleading considering the fact that is specifically for multizone fluid with sliding-mesh interface. Perhaps a SlidingMeshDriver sounds better??? Any suggestion from the others?. Regarding the fact that you still have to specify the FSI_MARKER, i would fix this before merging with the develop. . Anyway good job!!! . cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-255340813:77,clear,clear,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-255340813,2,['clear'],['clear']
Usability,"Hey @pcarruscag !. Thanks for the suggestions. . 1) That's a good point. I will change the option names to be more specific. . 2) Not a 100% certain what you mean by this. To be clear, instead of allocating memory using the keyword new (MeanReynoldsStress = new su2double* [3];), I should be declaring them statically (su2double MeanReynoldsStress[3][3])? I was following the variable declaration norms I saw in the code. But I guess those were usually for allocations to nDim. Is that what you are suggesting?. 3) I have generalized the Eigen-value functions to n order matrices now. But I think I am going to keep them in the numerics class. Since it seems like that is where they would be most useful. Would you suggest otherwise?. Cheers,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433784029:178,clear,clear,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433784029,2,['clear'],['clear']
Usability,"Hey @timjim333 that's nice to hear,. I would put it in the .bashrc if you consistently call SU2 with your command, like that you can always switch the SU2-build and still have your clear settings already in place. Image having the master, develop and feature_whatever installed, you don't need to apply your patch to all of these versions if you put it in the bashrc.; But editing interface.py has the same effect, so its up to you what you prefer. Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-429668015:181,clear,clear,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-429668015,2,['clear'],['clear']
Usability,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:682,simpl,simply,682,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['simpl'],['simply']
Usability,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-630289600:193,intuit,intuitive,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600,2,['intuit'],['intuitive']
Usability,"Hi @EduardoMolina . I will add this in the test repo. It is a standard case used in majority of the papers (relevant).; What are the changes/additions I need to carry out , can you guide me with the procedure of adding the test case in repo. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-455009027:181,guid,guide,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-455009027,2,['guid'],['guide']
Usability,"Hi @EduardoMolina,. That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. However Eigen is not the tool for that as the sparse linear solvers it has are similar and are not distributed parallel.; When I opened this issue I was thinking exclusively about how we handle small-medium dense matrices that live on a single rank, and associated algorithms (the kind used for RBF interpolation for example).; I think the two issues are fairly orthogonal, so we can open another to discuss large solvers, for which related work has already been started. Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460666656:124,simpl,simply,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460666656,2,['simpl'],['simply']
Usability,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:1312,simpl,simplification,1312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854,2,['simpl'],['simplification']
Usability,Hi @TobiKattmann . I am OK if we clearly explain the changes in the config template as my main concern is with the users side.; Thanks!. Eduardo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513959331:33,clear,clearly,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513959331,2,['clear'],['clearly']
Usability,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621483859:935,simpl,simple,935,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859,2,['simpl'],['simple']
Usability,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619332650:697,simpl,simply,697,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650,2,['simpl'],['simply']
Usability,"Hi @clarkpede ,. Thanks for the contribution. The example of the central/upwind blending is very clear. Ready to merge. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-620948043:97,clear,clear,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620948043,2,['clear'],['clear']
Usability,Hi @clarkpede and @economon .; Thanks for the clear explanation.; Merging now. Eduardo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463729246:46,clear,clear,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463729246,2,['clear'],['clear']
Usability,"Hi @cvencro , I think it would be good to add that Testcase to the regression tests to 'guard' the code. ; I actually wanted to do that real quick but it guess that with `SINGLEZONE_DRIVER` one cannot access `TIME_ITER`, only `EXT_ITER` with the` .test_iter` variable of the python Testcase class. Not sure if that is addressed in #724 , maybe @rsanfer or @talbring can give a quick info as this is probably affecting all unsteady regression tests. . Concerning the Testcase repo: You can simply open a PR for the develop branch of the Testcase repo, and refer to the corresponding PR here (and vice versa). As far as I know the Testcase repo is not protected, i.e. you can merge without any check. And as it is just one added mesh and no other change you could do it right now from my point of view. Another point: What about the rotating_frame for incompressible flow? If it is untested I would like an error catch in place that this feature can't be used out of the box.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527167827:489,simpl,simply,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527167827,2,['simpl'],['simply']
Usability,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630788337:356,simpl,simpler,356,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337,4,['simpl'],"['simpler', 'simplify']"
Usability,"Hi @pcarruscag I just tried a simpler mesh and using MPI I get the UCX crash.; [err_log_SU2v7.0.3.txt](https://github.com/su2code/SU2/files/5810207/err_log_SU2v7.0.3.txt). To double check, I also used the master v7.0.8 SU2_CFD. When I run with MPI, I get the UCX error but when I run in serial, the solution appears to converge fine. I suspect that this means it's probably not the mesh that is causing the issues - what are your thoughts?; [su2_out_serial.txt](https://github.com/su2code/SU2/files/5810208/su2_out_serial.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-759607361:30,simpl,simpler,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759607361,2,['simpl'],['simpler']
Usability,"Hi @pcarruscag and @aeroamit ,. Thanks for the discussion and for share the ideas/results. I think this is the beauty of open-source, everyone is welcome to jump in and review all the pull requests. Certainly, as you said @aeroamit, we will all learn something fruitful when we review and merge each PR. Best regards,. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-511209774:245,learn,learn,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-511209774,2,['learn'],['learn']
Usability,"Hi @pcarruscag and @vdweide ,. Thanks for creating a test branch and for bringing this discussion. When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2. ; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. ; I will be happy to help test Eigen and see if it is a good candidate. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460479862:323,feedback,feedback,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460479862,2,['feedback'],['feedback']
Usability,"Hi @pcarruscag, just a small follow-up to my comment in the code section concerning the new adjoint implementation that might also help here (either by using it directly or just for getting some ideas). What I would like to change is in fact not the `CDiscAdjSolver` (which I find is very good) - but I'd like to propose some changes for the *interface* to the AD tool. And some subsequent stuff.; It will allow for a more direct control of derivatives which is favourable in case one deals with multiple zones, multiple sets of conservative variables, geometry coordinates in case of FSI, and so on. And of course in terms of performance as one needs only one tape that one can keep during all iterations, regardless of what their variables might be. In case you are interested, take a look at the implementation in [su2code:sc_develop](https://github.com/su2code/SU2/tree/sc_develop). I'll open the PR as soon as @talbring opened his one for his great rework on input/ouput. As for this PR, let me wait a second if we can clear up the issue concerning the registration and I'll leave a small review afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457582842:1024,clear,clear,1024,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457582842,2,['clear'],['clear']
Usability,"Hi @pcarruscag,; You are right, it shares a lot of code with previous PR. Here constants does not change. Differences are as follows - . 1- It has different pressure flux definition (new expression); 2 - Here sum of squares of velocity components were needed for left and right state; 3- removed few variables and added few.; 4- Also left and right state split Mach numbers are Mach number polynomials only (for programming purpose) without pressure terms. Previously SLAU and SLAU2 scheme have already been implemented in the code separately. I mean some of these sucessive schemes share a lot of common formulation but differ with some expressions, constants etc. ; So it may be fine to keep them separate. . I will see your advice and further look into similar variation implementation in the code (sorry if I missed out some simple point you mentioned). . Thanks ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-446730390:829,simpl,simple,829,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-446730390,2,['simpl'],['simple']
Usability,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:160,clear,clear,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,2,['clear'],['clear']
Usability,"Hi @rois1995 . For now, I'm ignoring all TKE in Total Energy in personal research. I don't remember the details clearly. ; The problem was that the enthalpy added TKE was stored in the primitive variables. ; When I tried to fix it, the problem was when the enthalpy added TKE was stored in the primitive variables. For the Roe scheme in convective flux calculations (not sure about other flux scheme), the Roe speed of sound is calculated using enthalpy. But as I mentioned above, the stored enthalpy is higher than other simulation because of TKE. I thought it make a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889:112,clear,clearly,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889,2,['clear'],['clearly']
Usability,"Hi @rois1995. The LM model code under the development clearly has some problems. I've not finished yet all validation cases for commonly used. So, I can't help with the E387 profile problem. but, I think I can give some helpful comments. . Check the numerical scheme which you used. like Roe and L2Roe, AUSM and SLAU. In my case, I didn't think to use the low dissipation scheme because I thought the code was wrong. I upload the configure file for the T3A flat plate case, which I used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534:54,clear,clearly,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534,2,['clear'],['clearly']
Usability,Hi @simonvanderveldt. Thanks for the questions. The custom meson.py script shipped with su2 also initializes the git submodules. You can of course also use an installed version of meson/ninja for building (should be also noted in the documentation on the website) by simply replacing `./meson.py` with `meson`.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598496636:267,simpl,simply,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598496636,2,['simpl'],['simply']
Usability,"Hi @talbring, I cannot agree more with you, . @JSmith36 has introduced too many changes in one pull request which has, as you pointed out, some important problems. On the other hand, @JSmith36 situation is not so strange. It is quite common to find contributors who are working on their own branch for a long time and at a certain point decide to contribute (which is very generous of them). My suggestion is the following... let's keep the pull request open (we don't want to lose this contribution) and meanwhile, @JSmith36 why don't you create pull request with the most-easy to- divide parts of your contribution. e.g. Let's start with ; ""Renaming of the keywords REF_LENGTH_MOMENT (the word MOMENT was really confusing) or RefAreaCoeff."". That is easy to reimplement and it will simplify the main pull request. For the future, please, let's all of us to keep the contributions the most simple and modular as possible. Thank you very much to each of you who contribute to this great community and great code!. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-315563582:784,simpl,simplify,784,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-315563582,4,['simpl'],"['simple', 'simplify']"
Usability,"Hi @talbring,; thanks for this, I think it makes the output a lot clearer. ; We should merge this in soon, and open a discussion on how to improve the screen output, not only in terms of the residual convergence (I know you have been working hard on that and it's looking great) but also on the initial print-out, which is currently very chunky and not so easy to add new options to.; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633#issuecomment-455978636:66,clear,clearer,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/633#issuecomment-455978636,2,['clear'],['clearer']
Usability,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-566642727:33,feedback,feedback,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727,2,['feedback'],['feedback']
Usability,"Hi @timjim333 ,. Exactly (concerning your first question). . For the %s : In your initial post you stated that `mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg` worked for you. So %s is simply the place-holder for the SU2 module together with the configure script. Which in your case would be `SU2_CFD turb_ONERAM6.cfg` . But `parallel_computation.py` will also call `SU2_SOL turb_ONERAM6.cfg` for you after the solver routine to create output files for visualization. ; If you take a look into the `interface.py` (as in my previous post) and the `parallel_computation.py` you'll find exactly how its done. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-395712721:197,simpl,simply,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-395712721,2,['simpl'],['simply']
Usability,"Hi Akshay,. Yes this is a simple fix and it could go in quickly on it's own or as part of another PR. I have this fix already modified in the draft PR #833 which is just pending the addition of a test case. I can add that and move to a PR soon if you are happy to wait?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860#issuecomment-582340873:26,simpl,simple,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/860#issuecomment-582340873,2,['simpl'],['simple']
Usability,"Hi All,. We are lucky, Florian Menter just replied to me. He agreed that the factor (1-F1) should activate the CD term only at the ""k-epsilon"" branch, where the CD term is already positive.; Therefore, clipping with zero is in terms of the model and is not incorrect. Me: A simple boundary layer simulation will reveal that the CD term switch sign is inside the boundary layer and that the F1 function switches from 1 to zero outside the boundary layer. Namely, the CD term should be positive. Florian is unaware of the occasions when it may be negative (even though the model was designed so that this term will be activated when it is positive). . Best wishes,; Yair",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2256154395:274,simpl,simple,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2256154395,2,['simpl'],['simple']
Usability,"Hi Amir,; If you create a solver object inside numerics how will this new solver know about the solver that is actually using numerics? The way the code is written does not make the relations between classes very clear as the solver and numerics containers get passed around quite freely... But the solvers are clients of the numerics (I think there are good diagrams of this in some of the papers), i.e. the solvers call methods of the numerics and not the other way around.; It is the numerics that needs a method whereby the solver can set the value of cb1, this is more or less what is done in the elasticity solver, so yes, try to follow that ""recipe"" as close as possible and it should work.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-494118969:213,clear,clear,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-494118969,2,['clear'],['clear']
Usability,"Hi Amit,; That is also my intuition, I guess the only way to know if it is worth the extra cost is by doing.; Do you have a good supersonic case I can use for testing (all my work is subsonic)? Preferably something that converges well without initialization.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499876619:26,intuit,intuition,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499876619,2,['intuit'],['intuition']
Usability,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:787,simpl,simply,787,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,4,"['guid', 'simpl']","['guidance', 'simply']"
Usability,"Hi Eduardo,. both, 'symmetry plane' and 'symmetry as the slip wall' should work in the code (upon fixing this) and it should be made clear (e.g. in the config_template.cfg) what the BC is suitable for, independent of how it is named in the end. ; The simplest solution is probably the patch I provided together with a short note in the config_template (maybe even a reference to this issue), as both 'options' will work as expected (using the very same code). It will basically 'restore' the behaviour of MARKER_SYM of before the fix in #657. The downside is some more computational cost (in case of a plane) which has to be done for each vertex on the marker. I cant say to which extend this takes more time but I would guess it is not too costly. Depends on the case as well. I can do a little check with your case here. . That's it for the diplomatic part :) (Please take the following with a grain). For me a symmetry has to be a line or plane. To cite Jiri Blazek's book 'Computational Fluid Dynamics'(...) 3rd edition using a screenshot:. ![blazekbook](https://user-images.githubusercontent.com/31306376/61662377-9ab05a80-acce-11e9-85bf-5998db204d92.png). The chapter is called 'symmetry plane' which already is kinda biased. But there is no 'slip wall for viscous flow' mentioned to my knowledge. In another book (from Ferziger&Peric, which I only have in german) symmetry is only used in the context of symmetry planes as well. ; To me, symmetry BC's are also linked to visualization using mirroring. And mirroring (as the word is commonly meant) is only possible along planes and its little brother, the straight line. I can be wrong or it might be a question of research background. So how to proceed? Trial by combat might have some unpleasant aftermath for the winner so we might go the democratic way and do a poll :) . Cheers, ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513957018:133,clear,clear,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513957018,4,"['clear', 'simpl']","['clear', 'simplest']"
Usability,"Hi Giulio,; Thank you for the feedback. I inherited some of this code from a previous student of my PhD supervisor and I thought the same when I saw the CSymmetricMatrix class. However, as I understand it, CSysMatrix implements a block sparse format and here we have a simpler dense format. Another big difference is that CSymmetricMatrix does not need to be used in parallel. But I agree that making these two classes related somehow would be better, so I am open to suggestions.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406516746:30,feedback,feedback,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406516746,4,"['feedback', 'simpl']","['feedback', 'simpler']"
Usability,"Hi Heather, I think we are getting closer. Something that is not clear for me is why we can only combine objective functions with the continuous adjoint. In principle, it is ""easier"" to combine objective functions with he discrete adjoint. Isn't it? Is there a particular reason for not combining the objective functions with he discrete adjoint? Thanks! Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296408505:65,clear,clear,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296408505,2,['clear'],['clear']
Usability,"Hi JSmith86,. I really appreciate your effort in cleaning up the changes. But it looks like as if there are still a lot of changes in other parts that are not related to the things you describe. Furthermore I really request you to split this up in multiple commits so that it is immediately clear what you did in each single one (this can be done quite simple with a proper diff tool like [meld](http://meldmerge.org/)). Let me emphasize that this is not to bother you in any way but rather to ease understanding and maintainability. I know from my own experience that this requires some additional work, but in the end it certainly pays off. . Thanks!; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-315320576:291,clear,clear,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-315320576,4,"['clear', 'simpl']","['clear', 'simple']"
Usability,"Hi Jairo, . what is the status here ? Is it possible to provide a simpler (smaller) case ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445175541:66,simpl,simpler,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445175541,2,['simpl'],['simpler']
Usability,"Hi Jean,; Sorry for the delay. The hypothesis I have for the less robust behavior of periodic BC's is that the linear solver is not completely aware of the periodicity. In fact after the linear solve we have to force the matching nodes to have the same value.; This is done in CFVMFlowSolverBase.hpp::CompleteImplicitIteration_impl, in the call to InitiatePeriodicComms.; The idea is to make the linear solver aware of the periodicity, to do so would require including periodic communications in the preconditioners and the matrix-vector product.; These are all in CSysMatrix.cpp, so before each of the `/*--- MPI Parallelization ---*/` bits we would need periodic comms, for preconditioners these comms would simply make the values equal, like in CSolver::InitiatePeriodicComms(PERIODIC_IMPLICIT) whereas for the matrix-vector product we need to add the values (effectively periodicity splits a row of the matrix into two ""half rows"") and this would be similar to what is done with the linear residual in CSolver::InitiatePeriodicComms(PERIODIC_RESIDUAL).; I think @TobiKattmann was also interested in having a look into this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248:710,simpl,simply,710,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248,2,['simpl'],['simply']
Usability,"Hi Josip,. in the current develop/master these features are still included. However, the plan is to remove these. The reason is simply because of maintenance. We have nobody that can spare time to test the current implementation. If you are willing to do this, please let use know. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/348#issuecomment-268010192:128,simpl,simply,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/348#issuecomment-268010192,2,['simpl'],['simply']
Usability,"Hi Pedro, ; As discussed last week, I now translate and rotate the whole aircraft in the elastic mesh in combination with a farfield onflow. Implementing and doing the coordinate transformations right took me a few hours, but now everything seems to work properly and fast :). 1. Currently, activating the gust resets/overwrites the grid velocities due to the deformed mesh, but I haven't found the place yet. Any ideas?. 2. Should I clean up / remove the split velocity approach as described in the first post or would you like to keep it?. 4. How to handle the new approach, should I close this pull request and open a new one? There are a few commits which I needed to undo. 5. Generally, I still need the rotating frame approach for steady maneuver load cases, e.g. to calculate the pitching, rolling or yawing aircraft in a steady simulation. The acceleration terms are zero in this case, but I understood that the Coriolis-Term with omega x velocity is missing. Is that correct? I guess they are probably important for objects like a propeller which spins at a couple of thousand RPMs but maybe it is justified to neglect them for slow objects?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1505397240:672,undo,undo,672,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1505397240,2,['undo'],['undo']
Usability,"Hi Pedro, ; I'm slightly confused right now and not sure if I'm able to do the necessary modifications. I understand that it is unlikely someone else might implement this but I think that this is beyond my abilities right now. If you don't mind, do you have some time to talk through my options in a video call? I hope that will help me to get a clearer picture. Next week, I'm generally available except for Monday, which is a public holiday here. Germany is 9 hours in advance of California, so your morning / my evening might work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1497398492:346,clear,clearer,346,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1497398492,2,['clear'],['clearer']
Usability,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:477,simpl,simplify,477,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325,2,['simpl'],['simplify']
Usability,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:216,simpl,simpler,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992,2,['simpl'],['simpler']
Usability,"Hi Pedro,. I can confirm that everything is now working correctly. I have tested the sensitivities against gradients from finite difference runs and the results match very closely.; I owe you a big thank you for your help with this, not only has my problem been solved but you also helped me learn a great deal about how the code works. Really appreciate it.; If we ever meet one day then drinks are on me :); Cheers,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-500911599:292,learn,learn,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-500911599,2,['learn'],['learn']
Usability,"Hi Pedro,. It is indeed a good idea to keep similar schemes (with minor variations) under one umbrella, especially central scheme as only the dissipation term calculation differs. . - In case of AUSM+-up1/2 and SLAU1/2, each can be reduced by having a separate pressure flux definition. - But if we try to combine AUSM+-up and SLAU, will it be a clear/helpful implementation as mass flux definitions/calculations (which is substantial portion) are different (unlike the central scheme, where only dissipation term varies)?. - Also could you please shed some light on Jacobian part for these schemes (as you mentioned - “...Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way ...”). Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499205201:346,clear,clear,346,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499205201,2,['clear'],['clear']
Usability,"Hi Ruben,. Thank you for your feedback !. It is hard to tell what to do you to avoid conflicts. Anyway, the most significant part of the changes concerns the parent CDriver class, especially the constructor and some new functions that are pieces of code coming from the main function (like Output and Monitor). So if the contributions are focused on one particular driver (single, multi, ...) and if they are more or less compatible with the main ""driver->run"" then ""driver->update"" structure, it should be straightforward to solve the potential confilcts. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237702911:30,feedback,feedback,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237702911,2,['feedback'],['feedback']
Usability,"Hi Soumen,. As Tom said, the routines are all in place and I have been putting them; together for solution interpolation from one mesh to another for unsteady; simulation as post-processing step. So probing at a particular location for; unsteady solution can be also done with this framework. The probe search; implementation is in place for 2D configuration currently. It will be; extended to 3D and probably available in the main branch in the next 2; months.; The implementation so far is in feature_MeshInterpolation branch if you; want to take a look. Sravya. On Thu, Nov 2, 2017 at 10:09 PM, Thomas D. Economon <; notifications@github.com> wrote:. > Hi Soumen: yes, this is something that the developers are actively working; > on at the moment (in particular, @sravya91 <https://github.com/sravya91>; > has been taking the lead on this). It is true that most of the ingredients; > are already available in SU2 (fast searches, interpolation routines, etc.),; > but the trick is combining them all and making it general.; >; > Do you have any other requirements beyond simple probes? I am guessing we; > should have something available in the next few months, but it's not set; > yet.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/466#issuecomment-341623660>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenII5B0Xtb2U_hj2vbBesf5Oc51uvzks5syqAEgaJpZM4QPYh8>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-342266341:1074,simpl,simple,1074,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-342266341,2,['simpl'],['simple']
Usability,"Hi Soumen: yes, this is something that the developers are actively working on at the moment (in particular, @sravya91 has been taking the lead on this). It is true that most of the ingredients are already available in SU2 (fast searches, interpolation routines, etc.), but the trick is combining them all and making it general. Do you have any other requirements beyond simple probes? I am guessing we should have something available in the next few months, but it's not set yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-341623660:370,simpl,simple,370,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-341623660,2,['simpl'],['simple']
Usability,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1100,usab,usability,1100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577,4,"['feedback', 'usab']","['feedback', 'usability']"
Usability,"Hi Tim, Heather: yes, this is an important issue to clear up before releasing v5 this week. Let's use this PR to fix the issue (even if just short term), and we'll find a better long term solution. I'm taking a look at this now too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352#issuecomment-271199146:52,clear,clear,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/352#issuecomment-271199146,2,['clear'],['clear']
Usability,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:1336,user-friendly,user-friendly,1336,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,2,['user-friendly'],['user-friendly']
Usability,"Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329096830:233,simpl,simply,233,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329096830,2,['simpl'],['simply']
Usability,"Hi Tom,; ; I would like to work on the ALE and rotating frame implementations for incompressible solver. Under Edwin's guidance I have been looking at SU2 closely over the past few months and, as you might have heard from him, we are looking to implement a pressure based scheme. . Also, could you tell me more about what are the changes you are planning for the incompressible solver? . Thanks a lot.; Regards,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/468#issuecomment-343086793:119,guid,guidance,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/468#issuecomment-343086793,2,['guid'],['guidance']
Usability,"Hi Wally, ; I have run some axisymmetric cases earlier for pressure distribution (Cp) computation over typical payload fairing configuration (with older versions of SU2). Pressure distribution seemed to be fine with earlier runs (and also it matched well with other codes). ; Issue popped up while trying to compute heat flux for axisymmetric problems. I have seen folks and students running their cases with axisymmetric formulation. Now the issue has surfaced clearly, it need to be fixed asap.; How is solution of the case, you have been trying? . Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809:462,clear,clearly,462,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809,2,['clear'],['clearly']
Usability,"Hi all, . After the initial excitement of clearing all tabs and trailing whitespaces... I guess it is more reasonable to follow @pcarruscag proposal:; > What about running the solution you propose only on subfolders? i.e. on src/something/ . I now trimmed all `C*.cpp`, `C*.hpp` and `C*.inl` files in `SU2_CFD` which is equivalent to all restructured files in the Sub-folders. I added a basic script `replace-tabs-...sh ` in `externals/utils` which provides this functionality. I would enhance that script if this is the way to go.; The commit size now shrunk down to ~4k changed lines. Possible merge problems will be much smaller. . I found to have to no problem when merging the develop first -> clearing all tabs/whitespaces in the feature_branch with the provided script -> merge this develop_noWhitespaces using the `--strategy-option=ours` option. Merge conflicts will be purely due to tabs/whitespaces therefore one always wants the own code in case of conflict, as all conflicts with the develop related to other stuff were already resolved in the first merge. . Now that the commit is a lot smaller, there should be even less problems. Maybe some folks will have no problems at all. . After some back and forth in the commits I briefly chatted with @talbring to do a git rebase / squash to not have these huge commits in the history. Otherwise one could open a new & clean PR if we can agree on an approach here to keep the discussion in one place.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-553412130:42,clear,clearing,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-553412130,4,['clear'],['clearing']
Usability,"Hi all, thank you so much for your feedback. Are there things left for this pull request? ; Thank you so much in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620#issuecomment-1150869650:35,feedback,feedback,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620#issuecomment-1150869650,2,['feedback'],['feedback']
Usability,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:186,simpl,simple,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781,2,['simpl'],['simple']
Usability,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:92,clear,clear,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,2,['clear'],['clear']
Usability,"Hi guys,; I agree with you, we should change the name of that function including the word ""fluid"". ; In this way the purpose of the function is stated clearly against its counterparts (structural, poisson, heat, etc)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/375#issuecomment-279957104:151,clear,clearly,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/375#issuecomment-279957104,2,['clear'],['clearly']
Usability,"Hi rois1995,. First of all, enjoy your time in Las Vegas. Any paper that you are presenting?. As for our discussion about the cross-diffusion term, I've emailed the ""source"" (Menter). I believe he will make it clear.; It may be that he will be able to answer only in a while ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2252939132:210,clear,clear,210,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2252939132,2,['clear'],['clear']
Usability,"Hi there,. I went ahead and created a dummy geometry, that is:; 1. I altered the planform so that the sweep, twist, dihedral, taper... are now different from the actual wing; 2. I replaced the airfoil by the NASA SC(2)-0712. The dummy wing has a double planform defined as:; - semi span = [5; 10]; - taper = [0.55; 0.35]; - dihedral angle = [5°; 2.5°]; - twist angle = [1°; 0°; -1°] (given for root, kink and tip airfoil sections); - sweep angle at LE = 25°; - Aspect ratio = 11.8; - semi area = 38. I defined the reference length as:; - reference (semi) area = 45; - reference chord = 3; - reference (semi) span = 15. The flight conditions remained unchanged:; - Mach number: 0.78; - Temperature = ~217 K; - Reynolds number: ~19 millions; - AoA = 0°. I created the exact same grid as before (same number of cells, same progression), ensuring my first cell was at y+<1. Things is, this time, SU2 did not have any trouble converging and computed the right z-projected area... I checked the results with another software and the pressure distribution (taken along the chord near the kink) match, see attached Figure. I am attaching the dummy configuration file (dum.txt) as well as the mesh (dum_mesh.txt) if it can be of interest to you. The mesh is a .geo gmsh file. To get the mesh, simply open with gmsh and click mesh 3D (or, from the console: gmsh dum_mesh.txt -3). At this point, I think that my problem might be related to the actual wing airfoil geometry, which is somehow not well pre-processed by SU2... I will continue investigating and keep you posted if I find a solution. Thank you for the time you took reading this issue.; ![cp](https://user-images.githubusercontent.com/39187559/40602255-3de183ae-6258-11e8-9aba-6c8d374dc34e.png); [dum.txt](https://github.com/su2code/SU2/files/2044072/dum.txt); [dum_mesh.txt](https://github.com/su2code/SU2/files/2044073/dum_mesh.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-392442127:1284,simpl,simply,1284,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-392442127,2,['simpl'],['simply']
Usability,"Hi, . I'm not sure what ""new boundary conditions"" means. Is someone replacing the present far-field BC of the TKE and Omega? ; I recognize these ""new"" BCs as the ones given on the TMR (proposed in the original paper). I find the present setting in SU2 very comfortable and more ""intuitive"" than that given on the TMR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2307448209:279,intuit,intuitive,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2307448209,2,['intuit'],['intuitive']
Usability,"Hi, ; thanks for this contribution, I will get a more detailed feedback soon. A first comment about the CSymmetricMatrix class came up to my mind, from a first brief review.; There is already a CSysMatrix class and a few routines added in this pull request look redundant (matvect product for instance).; On the other hand, many of those routines (cholesky decomposition and so on) could turn out to be very useful also for other future code developments.; That said, perhaps it would be nice to collect all the matrix-related routines into the CSymmetricMatrix class (removing redundancies) to make them available at an higher level. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406370798:63,feedback,feedback,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406370798,2,['feedback'],['feedback']
Usability,"Hi, are there any updates on this feature? Or maybe some simple example?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-2337835036:57,simpl,simple,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-2337835036,2,['simpl'],['simple']
Usability,"Hi, please attach the exact files you are using, and commands you are running, to the discussion you already opened. That will make it easier for someone to help.; The best way to get help from a developer is to make it very simple to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458#issuecomment-984084597:225,simpl,simple,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458#issuecomment-984084597,2,['simpl'],['simple']
Usability,"Hi, thanks for this interesting discussion. Just a reminder... there is a third place where the default values are stored! the config_template.cfg file. I have had similar problems to what @erangit is describing with the multiple definition of the default values in different places, in fact, sometimes is not clear what is the minimum number of parameters that you can use in a config file. I think that the ideal scenario would be to use the config_template.cfg file as the default value keeper and create subroutines in C++ and python that update the defaults with the existing information in that file. Remember that config_template.cfg is always required otherwise the user doesn't know that are the existing options. By the way... this discussion reminds me that we should update SetRunTime_Options(void). This is an incredible useful small subroutine to modify the software parameters during runtime. EXT_ITER is the only parameters currently accepted but in the near future we should add all or most of them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-381411950:310,clear,clear,310,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-381411950,2,['clear'],['clear']
Usability,"Hi, this sounds very interesting!; I'll take the chance to raise a point: we still don't have a clear strategy to manage the output of multi-zone simulations. Indeed, earlier we used to have the residuals plotted for each zone (so we used to have a line for each zone), currently we just get the residuals corresponding to ZONE_0 (this was probably changed in one of the latest pull request, I think it could be the one from @salvovitale ). We should decide if to restore the previous ""multi-residual"" output or if to sum up residuals from each zone and print out the results.; Cause right now we can't know how the residuals are behaving in the rest of the domain.; We could perhaps create an additional ""special"" output to manage multi-zone computations. cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/432#issuecomment-326204080:96,clear,clear,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/432#issuecomment-326204080,2,['clear'],['clear']
Usability,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1571,guid,guidance,1571,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105,2,['guid'],['guidance']
Usability,"Hi,. This error simply occurs because the prototype of the CDriver (and child classes) has changed. There is an additional `bool val_periodic` argument that have to be passed. The current fsi_computation.py is not up-to-date. Here are solutions to fix that:. - Change the fsi_computation.py and pass an extra `False` argument between the number of dimensions and the communicator. or. - Do you need the very last develop branch ? Because it seems like in the master branch the constructor of the CDriver is still the compatible one. So you could use this branch without modifying anything. I hope this will help. Cheers,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531#issuecomment-388288297:16,simpl,simply,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/531#issuecomment-388288297,2,['simpl'],['simply']
Usability,"Hi,; I just had a few (very minor) comments.; Regarding the main contribution, everything makes sense to me and I didn't find any relevant issue.; This is a very nice contribution and the implementation is quite clear, we can go ahead and merge this in soon. Regarding the matrix stuff, perhaps we could start having a new, general, matrix class in Common and then extend it to parallel in future pushes.; It may not be ideal, but at least we'll get started.; I am just afraid that if we leave those potentially useful routines there, in the interpolator, we will soon forget about them (of course it doesn't have to be addressed in this PR but we should really discuss about this). ciao,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407014370:212,clear,clear,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407014370,2,['clear'],['clear']
Usability,"Hi,; I went through this work but it is a bit hard to me to completely follow and continue you guys' idea. If you could help finish this issue, I am really willing to do some tests and give feedbacks ASAP. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280:190,feedback,feedbacks,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280,2,['feedback'],['feedbacks']
Usability,"Hi,; So far as I can tell from the code, no.; It would however be very simple to hack that kind of feature, I can point you to the right places if you want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/973#issuecomment-626357981:71,simpl,simple,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/973#issuecomment-626357981,2,['simpl'],['simple']
Usability,"I agree with @pcarruscag , we should try to merge options. I have been thinking for quite some time that we should make the mesh deformation a full solver on its own and homogenise all the options and procedures, be able to define different boundary conditions, etc. It should be based on the linear elasticity but have it's own variable definition, so it's usable out of the box with the adjoint solver. I have a preliminary implementation in [`feature_mesh_solver` ](https://github.com/su2code/SU2/tree/feature_mesh_solver), but I would need some help with that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623#issuecomment-456293206:358,usab,usable,358,https://su2code.github.io,https://github.com/su2code/SU2/pull/623#issuecomment-456293206,2,['usab'],['usable']
Usability,"I agree with Heather on that. It is only intuitive if you already have the experience. And in that case you know what an appropriate step size is, so you can also specify it directly without having it scaled by some reference length (and of course also consider the case where you don't have an aircraft, wing or airfoil).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284349273:41,intuit,intuitive,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284349273,2,['intuit'],['intuitive']
Usability,"I agree with the final conclusion here... thanks for discussing this and working toward a solution. . We have found in some of our performance optimization work that continuously allocating/deallocating memory is a performance killer, and I am in favor of uniform behavior across the code for readability/usability. Let's merge this in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-149771091:305,usab,usability,305,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-149771091,2,['usab'],['usability']
Usability,"I agree with the proposed changes, but I also think this could go farther. Some of the most common issues for users involve misuse of the *_ORDER options, dissipation coefficients, and limiters. Overall, it is still not very clear for a user how the centered schemes work. For instance, Lax is always first order and JST is always second order, but sometimes there are not error messages when trying to change the ""ORDER"" option when using these schemes. Also, if we rename the coefficients for JST as proposed, shouldn't we also separate the first coefficient that is only used for Lax? It would make treating the dissipation more clear.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451#issuecomment-335205189:225,clear,clear,225,https://su2code.github.io,https://github.com/su2code/SU2/pull/451#issuecomment-335205189,4,['clear'],['clear']
Usability,"I also agree that there should be an explicit option, and that it should; default to the current behavior, however it may be more intuitive for the; user to specify the actual step size- people who don't have Francisco's; extensive experience will not intuit that the finite difference step will; be 1/100 of the reference length, and may have difficulty figuring that out; without help. I suggest something like FD_STEP_SIZE, either way with; documentation explaining it.; -H. On Mar 6, 2017 5:26 PM, ""juanjosealonso"" <notifications@github.com> wrote:. > Agree with Francisco: the best solution is to have an input parameter that; > can be used to scale the FD step size. I would suggest FD_REFERENCE_LENGTH; > to be created (and possibly specified in the config file). If; > FD_REFERENCE_LENGTH is not specified, then it could default to; > REF_LENGTH_MOMENT.; >; > Best,; >; > Juan; >; > On Mar 5, 2017, at 6:35 PM, Francisco Palacios <notifications@github.com<; > mailto:notifications@github.com>> wrote:; >; > Hi,; >; > Yep, I changed that. I know that from the math point of view it doesn’t; > make a lot of sense but, from the practical point of view, it is useful.; >; > There are some cases, in which computing gradients using finite; > differences is the only choice. And with the shape_optimization script it; > was not possible to control the step size for the finite differences. The; > option for step size was only in finite_differences.py.; >; > The step size is scaled with the reference length because from the; > practical point of view, I have found that the size of the aircraft, wing,; > airfoil, is important to determine a meaningful step size. e.g. should we; > use the same step for an aircraft with a MAC of ~150in than for an airfoil; > with a chord of 1in.; >; > Remember that most of the times we are using FD when the adjoint is not; > converging… so we have bad convergence of the direct problem (including; > some level of unsteadiness that we want to filter with the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284314148:130,intuit,intuitive,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284314148,4,['intuit'],"['intuit', 'intuitive']"
Usability,"I also like the idea of renaming to ""SOLVER"" but I would also say to avoid as much churn as possible in the conditionals throughout the code... looks like a wash when reading through the PR changes (almost as many +'s as -'s). Unless the changes are going to make something much more flexible or clear, I would say just keep Kind_Regime and set it in config postprocessing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756#issuecomment-520705829:296,clear,clear,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/756#issuecomment-520705829,2,['clear'],['clear']
Usability,"I am a little partial because I wrote it, but this https://github.com/su2code/FADO should do any kind of optimization you want.; Multiple operating points, manipulations of variables, running everything simultaneously... But I guess for something simple it is a little more work to setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354:247,simpl,simple,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354,2,['simpl'],['simple']
Usability,"I am not a 100% clear on all the things this new feature can do. From what I gather we can now set an initial flow field that is not just freestream condition everywhere? If this is the case, this is a hugely useful feature so thank you guys for doing that. . How exactly is this allowing for solution verification? Is it allowing you to run the same case with a bunch of different solver schemes? Can it run the solvers on a set of meshes or do you still have to run on each mesh refinement individually?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-486373335:16,clear,clear,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-486373335,2,['clear'],['clear']
Usability,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-628724163:591,intuit,intuitive,591,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163,2,['intuit'],['intuitive']
Usability,"I am using Intel MPI as well, but on Ubuntu 18.04 and I get a clear error message. The likely reason why it hangs for you for this grid and not for the others is that this grid has an issue and the others do not. . Can you run it on one core of your supercomputer?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493914393:62,clear,clear,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493914393,2,['clear'],['clear']
Usability,I am using the binary of SU2_CFD on Mac Os X for a single core run. There are no restart files for SU2_SOL to work with. IS there a way to simply export in CSV format? config_template.cfg is missing in the folders.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528450087:139,simpl,simply,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528450087,2,['simpl'],['simply']
Usability,"I came across this when I was working on a mesh generation program that generates an extruded boundary layer. I had checks in the program to make sure I was generating elements of positive volume and that they weren't self intersecting. While some of the elements were very badly skewed, I knew I didn't want the elements to be reoriented. However, SU2 reorients several of the prisms and tries to reorient some of the pyramids as well (which isn't a defined operation in SU2). . This is why in my particular case it was easier for me to just turn off the feature. . In general though, I think that the reorientation check could be a bit better. Currently for the prism element for example, it does a volume like calculation using the top and bottom triangles separately, and reorients if either one is negative. Obviously if only one of these calculations is negative, by reorienting, the other calculation would become negative. Similar things are done for pyramids and hexas. . A simple solution would be to change the ""or"" conditions in these calculations to ""and"", so that it is only reoriented if it fails all the checks. I think a better solution would be to decide on a volume calculation method for each element type, and then use that as a criteria. . If you'd prefer to just improve the reorientation checks instead of adding this configuration option, I could submit work on a pull request for that if you'd like.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/162#issuecomment-103679295:983,simpl,simple,983,https://su2code.github.io,https://github.com/su2code/SU2/pull/162#issuecomment-103679295,2,['simpl'],['simple']
Usability,"I can do that. I will follow the above mentioned papers to implement the original SA and SA_NEG. So we will end up with SA, SA_NEG along with SA_NOFT2 and SA_NEG_NOFT2**. SA_NEG_NOFT2**:; > we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652248694:231,simpl,simply,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652248694,2,['simpl'],['simply']
Usability,"I checked and I could not find a place in the code where this option is used explicitly. Since all the drivers split between primary recording for state variables and secondary recording for geometry variables for efficiency. My own use case was for research I did, where I needed to record a tape w.r.t. to both. Since this is not ready to become a pull request any time soon, I do not really need this option. If you suggest I can create a commit to remove the enum option for simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237:479,simpl,simplicity,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237,2,['simpl'],['simplicity']
Usability,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:220,simpl,simpler,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547,2,['simpl'],['simpler']
Usability,"I could create a ""safe Allgatherv"" function, e.g. in [`mpi_structure.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/parallelization/mpi_structure.hpp) or in [`ndflattener.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp). This function should check the number of processes, perform a simple copy if it is 1, and otherwise calls the regular Allgatherv. It would then be used [here](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp#L235) instead of `SU2_MPI::Allgatherv`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031:410,simpl,simple,410,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031,2,['simpl'],['simple']
Usability,"I did few tests (CGNS mesh format), following are the details -; **While trying to use all 8 cores per node (Total 70 nodes, each having 24 GB RAM)-**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; ............ malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; ................; malloc failed for element data; malloc failed for element data; Loading section Connect_TETRA of element type Tetrahedron. **While trying 6 cores in each node**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data. **Finally settled with 4 cores at each node and memory usage at every node is--** . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 4652 aero 30 10 872m 746m 10m R 100 3.1 43:03.38 SU2_CFD ; 4653 aero 30 10 1076m 951m 10m R 100 3.9 43:12.10 SU2_CFD ; 4654 aero 30 10 1162m 1.0g 10m R 100 4.3 43:15.15 SU2_CFD ; 4655 aero 30 10 1458m 1.3g 10m R 100 5.5 43:08.96 SU2_CFD . **With above, memory usage seems to be around 16.8 % of 24 GB RAM**. Hope I am not missing something else (some other usage etc...) and what should be the approximate memory requirement for such mesh sizes (around 60 million or is there a general guideline of memory requirement with mesh size for RANS computation with Implicit solver) ?. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-232018195:1477,guid,guideline,1477,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-232018195,2,['guid'],['guideline']
Usability,"I don't think the fix is as simple as it seems.; Indeed looking back at how we developed the CGNS reader, It was originally meant to read multiple zone in a single file. But during development, someone decided to restrict the reader to only one zone per file (and I don't know if it was validated). So now we are seating in the middle. If we replace line 169 of CGNSFVMMeshReader :; <pre>; if ( nzones > 1 ) {; SU2_MPI::Error(string(""CGNS reader currently expects only 1 zone per CGNS file."") +; string(""Multizone problems can be run with separate CGNS files for each zone.""), CURRENT_FUNCTION);; }; </pre>; by; <pre>; if ( cgnsZone > nzones) {; cgnsZone = 1;; }; </pre>. we can easily support multiple zone in one file. To support one CGNS zone per file, I guess that user should provide either the index in the cgns file of the zone we want to read or even better its name and not rely on SU2 numbering of zones. I think that supporting multiple mesh zones in the same file at the same time as one zone per mesh file should be possible as long as enough information is provided by the user. In this case, I am wondering how the option MULTIZONE_MESH and MULTIZONE option are interacting in the related issue. When MULTIZONE_MESH is set to NO do we expect one mesh file per zone ?; And in this case we can force CGNS Reader to read only the first Zone. In a more generic way something like this should be possible:; MULTIZONE=YES; CONFIG_LIST= (zone_1.cfg, zone_2.cfg, zone_3.cfg); CGNSZONENAMES = (""FluidRotor"", ""Solid"", ""FluidStator"") # To let CGNS pick the right zone in the file and if it not found the first zone can be used (current SU2 behavior). CGNSZONENAMES could also be set in each config file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565:28,simpl,simple,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565,2,['simpl'],['simple']
Usability,"I expect that epsilon to be a simple measure to avoid division by 0, if that lower bound had physical meaning it would have to be multiplied by some reference factors to make its dimensions appropriate, otherwise SST would not give the same results for the same Reynolds obtained with different rho and mu.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284506205:30,simpl,simple,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284506205,2,['simpl'],['simple']
Usability,"I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2066011801:193,clear,clearance,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2066011801,2,['clear'],['clearance']
Usability,"I guess I fixed it, somehow the two ""DonorInfo"" classes in different cpp files got mixed up. EDIT: Rightly so apparently: https://stackoverflow.com/questions/10671956/same-class-name-in-different-c-files; Learn something new every day.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1126#issuecomment-740136083:205,Learn,Learn,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126#issuecomment-740136083,1,['Learn'],['Learn']
Usability,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:532,simpl,simply,532,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,2,['simpl'],['simply']
Usability,"I have added the new option NUM_METHOD_GRAD_RECON to specify a separate method for computing the reconstruction gradient. If that option is not present, then no additional memory is allocated and no extra gradient computation occurs. I have also put in simple feedback from the linear solver residual and the nonlinear residual to the nonlinear controller. If the linear system converges less than a half an order of magnitude, then the CFL is lowered. A Cauchy-like criteria checks for stall in the nonlinear residuals and drops the CFL to the minimum floor to kick the solver out of a rut. Both of these use factors that are empirical from my tests. Will probably be improved with time and more testing, but they do seem to improve behavior. @koodlyakshay : I had success with the inc. laminar backward facing step after adding extra iterations to the linear solve. For some cases, this is necessary to get a large speedup. I am seeing good speedup for most of the cases within our TestCases repo. If you have some tough cases not covered by the repo, please give those a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-536145232:253,simpl,simple,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-536145232,4,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-560572616:242,simpl,simple,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616,4,['simpl'],"['simple', 'simplicity']"
Usability,I have created already a small document giving infos on how to prepare for version 7.0. https://su2code.github.io/docs/Guide-to-v7/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534095451:119,Guid,Guide-to-,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534095451,1,['Guid'],['Guide-to-']
Usability,"I have seen that it is possible to specify the number of iterations in command line (shape_optimization.py)... but, I think it is clear to have both options (number of iterations and bounds - same for all the variables- ) in the config file.; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/49#issuecomment-54920484:130,clear,clear,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/49#issuecomment-54920484,2,['clear'],['clear']
Usability,"I have simplified the input method now. Users need to simply add a line; ; MARKER_ROUGHWALL = (marker_name_1, k_1, marker_name_2, k_2, ..). By default all walls are smooth and only the rough walls need to be listed and the order shouldn't matter. . Edit: Just realized you asked me to use a different name. Will fix it in the next commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-642800393:7,simpl,simplified,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-642800393,4,['simpl'],"['simplified', 'simply']"
Usability,I have the same problem but I don't understand the solutions you suggested. Could you explain to me a bit clear?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/469#issuecomment-707290679:106,clear,clear,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/469#issuecomment-707290679,2,['clear'],['clear']
Usability,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:430,resume,resume,430,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695,2,['resume'],['resume']
Usability,"I implemented most of the reviewers suggestions. The only suggestion I left unchanged is the upper-case consistency issue raised by Wally. Since it is an optional output and it depends on the controlling variable names the user provides, I think it would be more intuitive to keep the font case consistent between the names under `CONTROLLING_VARIABLE_NAMES` and the corresponding `RMS_` outputs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580:263,intuit,intuitive,263,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580,2,['intuit'],['intuitive']
Usability,"I just committed a second round of changes that I would appreciate some feedback on. Compilation is successful with these changes, however, upon testing, I receive the following message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 271 SPECIFIED_SUPERSONIC_INLET_PROFILE: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean SPECIFIED_INLET_PROFILE?; Line 274 SUPERSONIC_INLET_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean INLET_FILENAME?. I had already adjusted CConfig.cpp to include supersonic inlet profile inputs, but apparently I am not implementing everything I need to. I'm unsure where else I would need to make changes. Any suggestions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832:72,feedback,feedback,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832,2,['feedback'],['feedback']
Usability,"I just found [a blog post](https://codingnest.com/the-future-of-catch2/) on the future directions of Catch2. There's a couple of important points for our discussion. The developer plans to adopt a hybrid approach, with:. 1. A stripped-down, header-only version.; 2. A full-feature, typical library (i.e. it must be compiled and linked). This approach is very similar to Boost's setup. Google Test does not offer a header-only version. Additionally, the developer plans to drop C++11 support, and move to C++14. A simpler branch will still support C++03. It's not clear which features are supported in the C++03 variant, and which ones aren't. Google Test is also moving to support only C++11 in their next release, but their current release fully supports pre-C++11. All of this discussion raises the question: Do we want to require C++11 for unit tests?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500411194:513,simpl,simpler,513,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500411194,4,"['clear', 'simpl']","['clear', 'simpler']"
Usability,"I just pushed a new version of your inlet profile branch. I really like the solver class abstractions. I can tell you have a good grip on the classes and where data should live - nice job. Here are the changes I have made:; * everything is generalized in parallel for an arbitrary number of inlets in the file. The file format changed slightly.; * I moved around some routines and data to take more advantage of inheritance and encapsulation: it is now more like the restart routines where the reading and data live in the parent CSolver class, the specific load functions are found in the solvers (I overloaded SetInletAtVertex), and the template file is written by COutput. It is written such that any solver could eventually use it for any marker type by adding the appropriate SetInletAtVertex routine for solver-specific data (might need to rename for different marker types rather than inlet) and writing an appropriate template file writer in the output.; * for now, it is still requiring a essentially a matching profile point (nearest neighbor within a tight tolerance) by default, but you can have an arbitrary number of points in the file for each marker, and we can eventually add interpolation easily. We already have some of these routines.; * the turbulent solvers now all use the Inlet_TurbVars data structure even for uniform inlets. Can you please check this with Python?; * multigrid is now working. I put in a boundary face area-averaged restriction operator for the inlet profiles. Any decent approximation on the coarse levels should work ok. I left all of your original routines there, but deactivated them for the moment. Can you please give it a look and let me know what you think (and whether it is working for you)? Feedback most welcome. If we are happy with it, we can clean it up and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-371716916:1744,Feedback,Feedback,1744,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-371716916,1,['Feedback'],['Feedback']
Usability,"I just ran the case and I see this as well, even after complete convergence. You clearly can see this in the energy and pressure (and density) but not in the momentum terms. The temperature field also looks smooth. So may be related to density/pressure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910:81,clear,clearly,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910,2,['clear'],['clearly']
Usability,"I know that it can be frustrating sometimes operating within the constraints of an open-source project such as ours. However, I can assure you that folks do indeed care about performance, and sometimes I have the impression that we stress over relatively small performance issues (remember to keep the total pie chart of where the major work of the solver resides in mind). . The option WRT_PERFORMANCE= YES is available to get timings for runs broken down by preprocessing, compute, and output phases, and I think we should focus our performance concerns first on issues within the compute phase, unless a major bottleneck appears in the other two phases that completely prohibits us from running larger cases (we have been clearing many of those out lately). We do not have the resources of a professional software company, but what we do have is a great community of folks who are putting in lots of effort on a volunteer basis. @pcarruscag: your reviews have been very helpful for improving contributions - thank you for that effort. Let's keep supporting each other, but let's also make sure we stay positive and foster a welcoming environment to encourage more participation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534682406:725,clear,clearing,725,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534682406,2,['clear'],['clearing']
Usability,"I noticed the addition of the Guide to V7 page being introduced to the SU2 page. I think this would make a great starting point to beef up our documentation/tutorial pages. Using a similar format, we could discuss the available options in SU2. Speaking from experience, new SU2 users face an extremely high learning curve, often scaring them away. I believe this would help alleviate that problem. I understand this is no small task, and welcome others thoughts on the issue",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-536031012:30,Guid,Guide,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-536031012,3,"['Guid', 'learn']","['Guide', 'learning']"
Usability,"I see that the Onera M6 mesh is a half-wing with a symmetry plane and I'm not sure how the mesh deformation behaves in this case (for example, there should be zero out-of-plane movement). . Personally, I like really simple examples where I know what should happen (symmetric airfoil, subsonic flow, no sweep) and I did all my testing during the last weeks with the NACA0012 3m wing. At the same time, it is closer to how I would model a ""real"" aircraft (aircraft in the center of a spherical farfield) than the Onera M6, which is more wind-tunnel-like. The mesh and everything is there, so it's no additional work for me and I would be happy to contribute this as a new example. What's the main argument in favor of the Onear M6 wing / objection against a new example?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112:216,simpl,simple,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112,2,['simpl'],['simple']
Usability,"I simple wrote a program to test the grid, which searches for the boundary elements in the single faces, i.e. faces that are only part of one volume element, of the volume grid. What the error message means is that for 4 triangular surface elements of boundary marker BODY there is no corresponding face of the volume elements that is only part of one volume element. . When I include the faces that are shared by two volume elements, only two boundary elements are not found. So in short, you have two boundary elements in boundary marker BODY that are no part of any volume element and two boundary elements that are shared by two volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494675549:2,simpl,simple,2,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494675549,2,['simpl'],['simple']
Usability,"I suggest that you incorporate Wray-Agarwal (WA) one equation RANS model listed on NASA TMR in SU2. NASA is planning to list two equation WA-gamma transition model on NASA TMR next month. WA model is available on Github and WA model will also be posted on Github as source code. If you need any additional information or help, let me know.; Ramesh Agarwal; ________________________________; From: Pedro Gomes <notifications@github.com>; Sent: Wednesday, January 6, 2021 10:13 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Agarwal, Ramesh <rka@wustl.edu>; Comment <comment@noreply.github.com>; Subject: Re: [su2code/SU2] Info on current status of LM transition model in SU2 (#1130). @lorenzob95<https://github.com/lorenzob95> we talked about this issue in our weekly developers meeting.; The current implementation of LM in the code is not stable enough and it has known bugs, so we will not re enable it for now.; A revised implementation by @vdweide<https://github.com/vdweide> exist in branch https://github.com/su2code/SU2/tree/feature_LM_model, but this is based on SU2 v6.2, it has been used on simple problems, convergence is not ideal on more complicated ones.; The decision is to wait for some developments that will make it easier to bring this revised implementation into version 7 (which is different in many ways from 6).; You can follow this issue to know when this gets implemented, it will probably take a few months. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1130#issuecomment-755395168>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASK3WAEG3LW3AZJRUPORJPDSYSD2VANCNFSM4UVYXAAA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1130#issuecomment-755440165:1104,simpl,simple,1104,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755440165,2,['simpl'],['simple']
Usability,"I tend to agree w Eran on this topic. When it is working as it should, it is very convenient to have the makefiles already available in the repo. I switch between Mac, Ubuntu, and a red hat cluster without needing to update anything or call the bootstrap script. I rarely use it.. basically only when adding or removing files to the build. Also, it is good to minimize dependencies, as sometimes old machines or clusters have limited tool sets. But, clearly we should at a minimum fix the issue that some of you are finding with the autotools, which should just need an update. What systems are you having trouble with? It’s important that we don’t jump too far ahead for portability reasons (that’s why we have kept the old versions for so long). Do you have an idea of the minimum autotools you need for the failing systems? We could start by updating to that version and see if things stabilize.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-424210049:450,clear,clearly,450,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-424210049,2,['clear'],['clearly']
Usability,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:401,learn,learning,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,2,['learn'],['learning']
Usability,"I think its a good idea to separate the weight from the objective function. This makes it more clear and flexible. However, what bothers me a little bit is that the OBJECTIVE_FUNCTION option is now used for two things. Namely for the optimization and for the individual adjoint runs. Maybe it would be good to still have another option for specifying the obj. function for the adjoint run itself (with a completely different name, so that there won't be any confusions). . Maybe it's less of a problem then I think, though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-185126081:95,clear,clear,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-185126081,2,['clear'],['clear']
Usability,"I think the last commit addressed your concerns @arubino, thanks for the feedback.; @LaSerpe - that fsi bug was fixed in a separate pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-253286105:73,feedback,feedback,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-253286105,2,['feedback'],['feedback']
Usability,"I think the problem is in the fix for the symmetry boundary in PR #2194. I tried with the develop at the last commit (LC), at the commit before the implementation of the correction (BC) and at the commit of the implementation (AC). It is clearly visible that something is happening with the symmetry BC correction. I will look further into it. ![CommitsComparison_RMSRho](https://github.com/user-attachments/assets/7db41c0e-2885-4e66-bd1c-d01b038430bc). Also the profiles of the Mach number and nu_tilde are the same between LC and AC. With the BC instead the Mach number and nu_tilde are correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2370888175:238,clear,clearly,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2370888175,2,['clear'],['clearly']
Usability,"I think the writing is clear, but inaccurate. The line I quote in the initial report is still there. . The code does seem to have been updated, and it now lives in CPhysicalGeometry::Read_SU2_Format_Parallel; Here is the relevant code (for 2D I think). Current lines 6100-6104 of geometry_structure.cpp. ```; #ifndef HAVE_MPI; point_line >> Coord_2D[0]; point_line >> Coord_2D[1];; #else; if (size > SINGLE_NODE) { point_line >> Coord_2D[0]; point_line >> Coord_2D[1]; point_line >> LocalIndex; point_line >> GlobalIndex; }; else { point_line >> Coord_2D[0]; point_line >> Coord_2D[1]; LocalIndex = iPoint; GlobalIndex = node_count; }; ```. In serial, the index is completely ignored. In parallel, both are used. Unlike what the documentation says, the node index is completely meaningless in parallel, and there is no documentation of a needed global index in parallel. . I don't know what the correct behavior should be. That is a team decision. I think that the behavior should be roughly the same in serial and parallel. Either the local indices matter, or they don't. If they don't matter, they should be removed. Actually implementing this behavior (in either direction), however, could break a lot of people's code, as in either direction mesh files that were previously working could be different. We could also just have different behavior in serial and parallel, but it should be documented as such. . Thoughts @economon @fpalacios ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/47#issuecomment-104360874:23,clear,clear,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/47#issuecomment-104360874,2,['clear'],['clear']
Usability,"I totally agree. On real meshes, Omega usually drops to extremely low values. In cases where the cross-diffusion term is negative (allowed to be negative), it behaves as a sink term, further amplifying the drop of Omega. A simple addition of this term to the implicit diagonal is insufficient (I tried this). Other more rigorous methods are required (some available in the open literature). . My main argument is that the factor (1-F1) guarantees only the k-epsilon branch outside the boundary layer, in which the cross-diffusion term is already positive. It may not be so because of numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2253297698:223,simpl,simple,223,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2253297698,2,['simpl'],['simple']
Usability,"I tried changing line 1387 in CEulerSolver::SetReferenceValues to simply if (dynamic_grid) {...}, but that had no effect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1463922825:66,simpl,simply,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1463922825,2,['simpl'],['simply']
Usability,"I understand your frustration, and the feedback is helpful. Encouraging more participation in Issues and PRs is very important for us. We are still learning and improving our processes. A good metric for us to increase in the project is the total number of *different* people submitting/participating in PRs/Issues (not the total number of comments from just a handful). The best way to scale is to have the work evenly distributed among many folks, rather than just a handful processing the PRs. This will likely take some time & training, but I expect we can accomplish it while remaining positive. Open to good ideas there on how to better achieve it. . As for the other topic - I think that our recent move toward draft PRs may help with describing design decisions. This will also take some time to be adopted, and may or may not reach the depth necessary in the descriptions, but it is a good first step so that we can see things progress in real time. Using the project boards to list tasks and post comments is also helpful (but takes more effort). Open to ideas there too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534720511:39,feedback,feedback,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534720511,4,"['feedback', 'learn']","['feedback', 'learning']"
Usability,"I understand, but it helps to keep the code more approachable and portable. That being said, there may be some work proposed soon using templates in the linear solver classes, and it would be great to have your feedback then. We really appreciate your interest!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360075745:211,feedback,feedback,211,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360075745,2,['feedback'],['feedback']
Usability,"I use the connection as the additional marker. Since the connection is two sided, nodes are duplicated. This is quote from the forum post I linked earlier . >....creates unique (yet coincident) points for each ""side"" of the domain.... The quote was about Gmsh exporter and not SU2, but later on they say this is the case for all exporters except Fluent. These duplicated nodes affect the mass and momentum balance because they each carry information about the neighbors on their respective side only. . This might not be a problem if we were to apply a strong boundary condition like a wall because the dirichlet condition will simply overwrite any residuals and apply the appropriate value to both the nodes. However when used as an internal marker or any other weak boundary condition, the duplicate nodes each carry part of the residuals and if they don't communicate with each other an imbalance will occur. At the moment, it appears they do not communicate with each other.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-629182862:628,simpl,simply,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629182862,2,['simpl'],['simply']
Usability,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:33,simpl,simple,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,2,['simpl'],['simple']
Usability,"I wonder if maybe it would be a better idea to delete this (and other stuff) from externals/ and add it to subrojects/ instead. You can use `meson wrap install catch2`, and it's a simple ini file to vet instead of an 18k line file. git diffs become a lot simpler too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302:180,simpl,simple,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302,4,['simpl'],"['simple', 'simpler']"
Usability,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:47,clear,clearer,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,4,"['clear', 'learn']","['clearer', 'learn']"
Usability,"I'm at the beginning, so i have no really clear my path. Anyway a soon as; possible i will follow your instructions. Sorry for this difficulty, but to; me a su2 development group is something totally new and i have to clarify; some aspects with my PhD student and with my professor. Thanks for your help; Marco. Il giorno gio 20 gen 2022 alle ore 11:47 Nijso ***@***.***>; ha scritto:. > Hi! If you want to work together over github, you can also create a; > project here:; > https://github.com/su2code/SU2/projects?type=beta and define tasks and; > divide the work. It would be good if you can sort out what the overlap is; > and what the unique parts of your research will be.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1496#issuecomment-1017354022>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL7TQXSL55PQIEHSDCPT4LUW7R3TANCNFSM5MC56OYQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516:42,clear,clear,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516,2,['clear'],['clear']
Usability,I'm glad you made it work. Like I said it's not needed for simple tutorials.; The general conditions in which you may find it useful are described here: https://su2code.github.io/docs_v7/Linear-Solvers-and-Preconditioners/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895948814:59,simpl,simple,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895948814,2,['simpl'],['simple']
Usability,"I'm late to the party here, but just a note to say that the original implementation for the incompressible source terms are indeed from the text that @WallyMaier / @vdweide shared. It was added as part of the work in this paper (https://economon.github.io/docs/AIAA-2018-3111.pdf), but I did not test it much beyond a simple laminar channel case or really attempt to treat turbulence at the time. Thanks for putting in more effort on these terms!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198:318,simpl,simple,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198,2,['simpl'],['simple']
Usability,"I'm still not clear on how the convection BC is supposed to work. If I understand correctly up to this point HEAT_FLUX and HEAT_TRANSFER are largely identical:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L476-L479. Essentially in both cases the heat flux is calculated and saved to `Wall_HeatFlux`. For both BCs this is taken into account via the residuals:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L491-L496. and the residual contributions is added:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L530-L532. But I'm a bit lost why HEAT_TRANSFER is treated differently here:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L538-L559. Why is this special treatment necessary if HEAT_TRANSFER essentially is just a different way to calculate `Wall_HeatFlux`? If I disable the additional Jacobian contributions, shouldn't the solution still be accurate?. Regards,; Christian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1643910412:14,clear,clear,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1643910412,2,['clear'],['clear']
Usability,"I've (finally) managed to go over this pull request. I didn't go into too much detail as I don't want to delay this any more, but in general it all looks great to me. I have run some extra regression tests locally in my computer, and they all seem to be working fine. I also left some comments around, but they are mostly asking for some clarification, no major issues. All cleared from my side. Sorry again for taking way too long, I was so behind myself that I needed to do some merging in my own branches to be able to understand the changes in FSI context... Thanks a lot @LaSerpe for a great work!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258872671:374,clear,cleared,374,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258872671,2,['clear'],['cleared']
Usability,"I've also asked on OpenMPI mail-list and they said ""Can you or they provide a small, simple MPI application that replicates the issue? That would be something we could dig into and investigate.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103#issuecomment-1673166638:85,simpl,simple,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103#issuecomment-1673166638,2,['simpl'],['simple']
Usability,"I've changed some 'get' functions to 'compute' to be more clear. After some conversations with @pcarruscag Ive also added some 'const' to some 'get' functions. More work can be done in this regard, and that process is ongoing. I can continue doing so in this PR, or in a future one.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1111#issuecomment-730849653:58,clear,clear,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111#issuecomment-730849653,2,['clear'],['clear']
Usability,"I've run into some headaches getting the optimization to run efficiently on my end, which is why I ask. Playing with a toy problem, SLSQP actually does a great job on its own (with all tuning parameters set to 1.0) if the following conditions are met:. + The constraints and bounds effectively bound ""reasonable"" solutions, so you don't have to worry about unrealistic deformations.; + The optimization function is (relatively) convex. If those conditions are met, then playing with any of the tuning parameters makes SLSQP converge more slowly, sometimes with 10x the iterations. So its not clear to me when the tuning parameters are necessary, and how those tuning parameters affect the convergence in those cases. I'm not arguing that the tuning parameters aren't necessary, just that their effects aren't clear. And I agree, the proper way to nondimensionalize and regularize these problems is not clear from a brief search of the literature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616825497:592,clear,clear,592,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616825497,6,['clear'],['clear']
Usability,"If the box is axis aligned the following mnemonic works:; ""i"" is the ""fast"" coordinate, if X is the coordinate that changes in FFD_DEFINITION between the first and second corner points then ""i"" : ""X"";; ""k"" is the ""slow"" coordinate, it maps to the direction between the first 4 and last 4 corner points. Simpler yes, versatile not so much, what would you do if your geometry was not aligned?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626881321:303,Simpl,Simpler,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626881321,1,['Simpl'],['Simpler']
Usability,"If you _must_ use `restart_flow.dat`, then look at np.genfromtxt and the `invalid_raise` option. Here's a simple example:. ```python; import numpy as np; import matplotlib.pyplot as plt. data = np.genfromtxt(""solution_adj_combo.dat"", names=True, invalid_raise=False). plt.tricontourf(data[""x""], data[""y""], data[""Adjoint_Density""]); plt.show(); ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528493781:106,simpl,simple,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528493781,2,['simpl'],['simple']
Usability,"If you are referring to surface heat flux it is one of the default surface outputs.; Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; I replaced the relevant time domain options but commented out all the output options. On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already. If you have issues with heatflux output with the develop version / v7 we can re-open this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545454125:359,Guid,Guide-to-,359,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545454125,1,['Guid'],['Guide-to-']
Usability,"If you don't mind I'll leave this question open for now.; I'm planning to provide a simplified example setup later on, once I've had time to properly dive into the wrapper API.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958:84,simpl,simplified,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958,2,['simpl'],['simplified']
Usability,If you install the precommit hook it will take care of formatting for you https://su2code.github.io/docs_v7/Style-Guide/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2278#issuecomment-2165864169:114,Guid,Guide,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/2278#issuecomment-2165864169,1,['Guid'],['Guide']
Usability,"If you look at the testing history, commit 4f5f3ed doesn't pass the regression tests, while commit 8551cac does. Only two tests are failing on 4f5f3ed: `discadj_topol_optim` and `discadj_fsi_airfoil`. The difference between the two commits is a simple change. I changed the `SU2_MPI::Error` routine to give a return status of `EXIT_FAILURE` instead of `0`. Since `0` is conventionally defined as a successful program exit, returning `EXIT_FAILURE` makes more sense than returning `0` when `SU2_MPI::Error` is called. So why did that change cause the regression tests to fail? My suspicion is that these two tests have been exiting with an error for some time, but these regressions were not picked up by Travis since SU2 kept on returning `0` (i.e. success). Changing the exit code of `SU2_MPI::Error` doesn't cause any errors, but it will expose errors that are (sometimes silently) occurring. @pcarruscag I think you added these tests. Any idea why they're failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-462951152:245,simpl,simple,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-462951152,2,['simpl'],['simple']
Usability,If you run the code with enabled mpi support SU2_CFD will only write the restart files. You need to use SU2_SOL to convert them to .vtk. Therefore simply copy the restart_flow.dat to solution_flow.dat and run SU2_SOL. Or you could just use the parallel_computation.py script that does this automatically.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/173#issuecomment-99219314:147,simpl,simply,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/173#issuecomment-99219314,2,['simpl'],['simply']
Usability,If you share the mesh I should be able to give better guidance.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019359579:54,guid,guidance,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019359579,2,['guid'],['guidance']
Usability,"If you'd like me to revert the changes updating the autotools version and/or removal of auto-generated files, just let me know (you can also simply revert the last few commits for the same effect).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427689344:141,simpl,simply,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427689344,2,['simpl'],['simply']
Usability,"In the lab we are also writing/rewriting another largish solver with eigen (https://ic-sharpy.rtfd.io/). A major advantage (and, I think, critical for open source) was code readability to ease the learning curve for newcomers, with no reported penalty on performance. I second all the other nice things about it written by @pcarruscag.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459943384:197,learn,learning,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459943384,2,['learn'],['learning']
Usability,"Indeed, this helps, but it could be more general, since you only get to see this in the console output. I was thinking that a simple tag in the optimization history file for the evaluations that are 'major' would make this much simpler (and easier to post-process).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108#issuecomment-102168908:126,simpl,simple,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/108#issuecomment-102168908,4,['simpl'],"['simple', 'simpler']"
Usability,Is there a simple example to reproduce the issue?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496:11,simpl,simple,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496,2,['simpl'],['simple']
Usability,"It does output the file, Paraview & Tecplot formats (binary & ASCII) both work. However, I need the raw data as I will be subjecting it to a Machine Learning Algorithm in Python. Manually deleting the lines for cell numbers in Tecplot format is an additional time consuming step, that hinders full automation. Hence a simple file as flow.csv (CSV format) may help me run it more efficiently. 1. Ganti, Himakar & Khare, Prashant. (2018). Spatio-Temporal Prediction of Gaseous and Liquid Spray Fields using Machine Learning. 10.2514/6.2018-4760. . 2. Ganti, Himakar & Kamin, Manu & Khare, Prashant. (2019). Design Space Exploration for Vaporizing Liquid Jet in Air Crossflow using Machine Learning. 10.2514/6.2019-2211.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528453362:149,Learn,Learning,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528453362,5,"['Learn', 'simpl']","['Learning', 'simple']"
Usability,"It would simply take some reorganizing of the test scripts to make one function per case and maybe renaming the `TestCase` class to `RegressionTestCase` or something. For example, I rewrote one of the tests in `serial_regression.py` here: https://github.com/petebachant/SU2/commit/fe0ee432c67540067046fbebf9889660331a6592. Then I could run this with. $ cd TestCases; $ pytest serial_regression.py. the output from which was:. ```; $ pytest serial_regression.py; ======================= test session starts =======================; platform linux -- Python 3.6.3, pytest-3.2.1, py-1.4.34, pluggy-0.4.0; rootdir: /home/pete/SU2/TestCases, inifile:; collected 1 item. serial_regression.py . ====================== warnings summary =======================; serial_regression.py::TestCase; cannot collect test class 'TestCase' because it has a __init__ constructor. -- Docs: http://doc.pytest.org/en/latest/warnings.html; =============== 1 passed, 1 warnings in 92.18 seconds ==================; ```. `pytest` has a bunch of features to control the print output as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342677051:9,simpl,simply,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342677051,2,['simpl'],['simply']
Usability,"It's not always the case that using a restart file is continuing from a simulation. For example, if one has a simulation that has a similar solution as a seed. An example would be doing optimization and using a nearby flow solution. Here, having the iteration count start from zero is useful, because it's the more accurate measure. We would also have to this about how this interfaces with MAX_ITER. Right now it's really clear, but which does it mean when iterations don't start from zero?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103239930:423,clear,clear,423,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103239930,2,['clear'],['clear']
Usability,"It's not required fo initialization. Ok, if it's not going to work in this way let's start a discussion about a proper way to do this. I will create a new PR for just the initialization example and put it in a regression test. Thanks for the feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230:242,feedback,feedback,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230,2,['feedback'],['feedback']
Usability,"Just my 2¢ here. I've been struggling with a relatively simple simulation, Euler, 2D axisymmetric, supersonic, AUSM (SU2 7.5.1). I tried several meshes (and meshers) and always diverged no matter what (quality is ok, CFL as well). Conditions were ok, and were mimicking inv_wedge tutorial (which, btw was running ok even with axisymmetry ON). Long story short, I opened with a text editor the original geometry STEP file, and noticed it was carrying from the CAD some (engineering wise negligible) numerical terms (say, point 0, 0 was actually 0, 1e-6). Hence the symmetry axis was somewhat off. By correcting the STEP file, everything went fine. I wonder whether this is the expected behavior of this kind of simulation, and / or if there is any artificial diffusion parameter (such as ENTROPY_FIX_COEFF) that actually can sort things out for the EULER mode. Did any of you experienced anything similar?. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1464335191:56,simpl,simple,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464335191,2,['simpl'],['simple']
Usability,"Just to clarify things, I am not against pull requests with a lot of changes, @fpalacios. For me the problem in #412 is simply the fact that everything is included in one commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413#issuecomment-316343468:120,simpl,simply,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/413#issuecomment-316343468,2,['simpl'],['simply']
Usability,"KER_MONITORING, MARKER_DESIGNING: The main idea is to be able to compute to different integrals over the surfaces: one for simulation and the other for design. e.g. You maybe want to include all the solid surfaces and fan faces, and charging stations in MARKER_MONITORING to compute (Drag-Thrust) but in MArKER DESIGN you are only interested on the wing surface for design.; > ; > DV_MARKER. This is an unfortunately name. At the very beginning the mesh deformation capability was developed only for shape design (DV = Design Variables). We should generalize the names of the grid deformation parameters without using DV. Thanks!; Francisco. On Aug 18, 2015, at 4:31 AM, Heather Kline notifications@github.com wrote:. > Thanks Tom; > I agree that we should make things easy to understand. ; > My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh.; > ; > In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request); > ; > On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value.; > ; > There may be other similar areas where config file options could be clarified or compressed.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-133010923:2146,clear,clear,2146,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-133010923,2,['clear'],['clear']
Usability,"LGTM. Thanks for the fix and updating all regressions, @TobiKattmann . Final question: in the end, the Euler and symmetry BCs are identical implementations, so do we have a practical guideline for when to use one or the other (or some error check), or will we just carry both and allow them to be used interchangeably?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-536752462:183,guid,guideline,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-536752462,2,['guid'],['guideline']
Usability,"Let's continue this here @suargi as it should be more visible for everyone. In principle, I like what you suggest, it is clean and concise.; However, I see one big issue with backwards compatibility of the config. KIND_TURB_MODEL is in almost every config (in the world) and we cannot simply break compatibility, something with this much impact would require SU2 v8 :smile: . This is not to say you could not implement what you propose, just that you need to make it compatible with the status quo.; For example:; KIND_TURB_MODEL= SA-NEQ; QCR= YES; (I'm not even sure if that makes sense but anyway); Needs to be converted internally to:; KIND_TURB_MODEL= SA; TURB_MODEL_CORRECTIONS= SA-NEG, SA-QCR2000. And of course, if someone uses the new option TURB_MODEL_CORRECTIONS you can enforce that KIND_TURB_MODEL only contains NONE, or SA, or SST, and that corrections do not appear in the config in any other way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593:285,simpl,simply,285,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593,2,['simpl'],['simply']
Usability,"Let's keep the dimensional outputs, we are already trying to have dimensional inputs to keep things simple.; In the longer term we should aim to have dimensional inputs and outputs and make the non-dimensionalization an internal detail of the solvers that users don't have to worry with.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1684078599:100,simpl,simple,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1684078599,2,['simpl'],['simple']
Usability,Lots of different updates have been done to incorporate all feedback and make improvements to this PR. It seems to be in a solid place to be merged with develop. @pcarruscag @talbring,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014#issuecomment-663934671:60,feedback,feedback,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014#issuecomment-663934671,2,['feedback'],['feedback']
Usability,"Mate... I graduated from the school of ""out of the scope of"" with honors ok... You and I know that is just code for ""I'll leave it for someone else"".; Just cut and past the parts of the implementation that are exactly the same as another scheme into a function instead of copying, and given that other NEMO schemes have Jacobians that is probably something you should look into re-using.; You also clicked the box for having added a testcase but I don't see anything, why don't you add the testcase for the pictures and plots you showed? That is the only way for anything in this code to continue working... It's good work, it went into a paper, make it reproducible.; These are the contribution guidelines https://su2code.github.io/docs_v7/Style-Guide/ they may not always make things easier for authors, but they make it easier for the people coming after them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765:696,guid,guidelines,696,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765,3,"['Guid', 'guid']","['Guide', 'guidelines']"
Usability,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:859,simpl,simple,859,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412,2,['simpl'],['simple']
Usability,Maybe also an explanation why I specifically state `single straight`:; Take a case with two symmetry planes on either side of a channel -> it could be reasonable to put both in the same Marker in the su2 mesh -> both planes are straight for themselves but as I simply loop over all nodes in a marker I then have 2 different unit normals for the same marker -> thats why the specific `single` is used,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537206528:261,simpl,simply,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537206528,2,['simpl'],['simply']
Usability,"Merge and push is simpler I think, and with that the reviewers have the option of only seeing the new commits.; Thanks for the changes, we'll merge once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800:18,simpl,simpler,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800,2,['simpl'],['simpler']
Usability,"Nice analysis @clarkpede. It is true that we simplify the Jacobians at the periodic boundaries, mostly to avoid issues with adding entries to the Jacobian from the neighbors that potentially do not live on our rank and to keep communication costs low (those neighbors are treated explicitly). This could be changed to communicate the full Jacobian.. but I am not sure it is worth the effort/cost. The approximation that is made should still be consistent though, because we only allow one of the repeated periodic nodes to participate in the linear solve with each nonlinear iteration, and then we communicate its update to its periodic pair. In short, the value of the solution should always be the same on periodic points with each iteration update, and if the problem converges to a steady-state (even in time stepping mode), the Jacobian should only affect convergence (the RHS should be the same). You could try the time stepping option with one of the RK methods to see if going fully explicit helps further isolate the issue. It could also be something related to the time step that is communicated. In the SetTime_Step() routine in the flow solver class, we do some special checks for time stepping mode to make sure that the minimum global time step is used in all cells. Might want to print out the dT communicated in the periodic comms or write the dT to the solution file to make sure everything is ok there too. Honestly, I don't think a ton of folks use the time stepping option in general with the FVM solver, so double-checking that it behaves well for a non-periodic problem could shed some light too, unless you have already done that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-524007345:45,simpl,simplify,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-524007345,2,['simpl'],['simplify']
Usability,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:342,simpl,simple,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,2,['simpl'],['simple']
Usability,"No need for Intel buddies, I know what's up. Take [this code:](https://gcc.godbolt.org/z/siQamn); ```; class Base {; public:; inline virtual double get() const {return 0.0;}; };. class Derived : public Base {; double val;; public:; Derived(double a) : val(a) {}. inline double get() const final {return val;}; };. double fun1(Base* obj) {; return obj->get();; }. double fun2(Base* obj) {; return static_cast<Derived*>(obj)->get();; }; ```. `get` of derived has been marked `final` so in `fun2` polymorphism should be optimized away. Here is the assembly for gcc 5.4:. ```; fun1(Base*):; mov rax, QWORD PTR [rdi]; jmp [QWORD PTR [rax]]; fun2(Base*):; movsd xmm0, QWORD PTR [rdi+8]; ret; ```; `fun1` needs a jump, `fun2` knows what to return right away. Here is the assembly for icc 17:; ```; fun1(Base*):; mov rax, QWORD PTR [rdi] #16.12; mov rdx, QWORD PTR [rax] #16.12; jmp rdx #16.12; fun2(Base*):; mov rax, QWORD PTR [rdi] #20.34; mov rdx, QWORD PTR [rax] #20.34; jmp rdx #20.34; ```. @vdweide please tell me you did not use icc 19, because it performs this optimization just fine on this simple example. By the way @talbring (since you asked in #753), take away the `final` keyword and nothing gets optimized by the `static_cast`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523952473:1092,simpl,simple,1092,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523952473,2,['simpl'],['simple']
Usability,"No, I think we're all set. I am going to merge this in. We have two issues that we are going to be clearing up very soon: the ONERA M6 adjoint case that is failing somewhat irregularly, and a reorganization of the test cases/config files to make the regression tests more effective (in particular for pull requests). Thanks for fixing the conflicts!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-127486074:99,clear,clearing,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-127486074,2,['clear'],['clearing']
Usability,"No… I can’t. I’m sorry. Great to hear from you. Machine learning is a very valuable research work and I will add it as a feature branch. . Removing code from the main release is a complex task and, as in the past, I have taken tough decisions. Anyway, to maintain a clean code is critical for its growing, it is like trimming a large tree. Basic criteria to maintain forever an implementation on the develop->master branch are: - Clear benefit to the CFD community (more accurate, robust, etc.) - Existing community of users or active developers - Minimal code documentation (at least the options should be in the config file). - Easy to install and use. - The implementation style should be aligned with the SU2 style - Regressions tests. Best,; Francisco. > On Oct 28, 2015, at 11:35 PM, Brendan Tracey notifications@github.com wrote:; > ; > Could you leave in the machine learning section a bit longer?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/208#issuecomment-152095697.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152384158:56,learn,learning,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152384158,5,"['Clear', 'learn']","['Clear', 'learning']"
Usability,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:52,simpl,simple,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272,2,['simpl'],['simple']
Usability,"Obviously it is possible to implement this, but it would significantly complicate the config parsing code. Right now the parser is very simple: Go through each line, and get the name and the tokens. As far as I can see there aren't good ways to allow this aside from either having a whitelist of options that can go on multiple lines (thus, only some options are allowed to do so), or to switch up the config file entirely and go to a more standard format like JSON.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/166#issuecomment-103241030:136,simpl,simple,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/166#issuecomment-103241030,2,['simpl'],['simple']
Usability,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-575310823:256,simpl,simply,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823,2,['simpl'],['simply']
Usability,Ok thats to be expected (as I learned) because you have probably openmpi installed. The binaries are compiled with mpich.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557430771:30,learn,learned,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557430771,2,['learn'],['learned']
Usability,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:8,simpl,simple,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['simpl'],['simple']
Usability,"Ok! The workflow about this branch is now quite hard to follow. ; So to resume :; - **#424 is the branch to work on**. #424 is ""py2_and_py3_support"" merged on a recent ""develop"" branch (2017/08/11); - #260 is obsolete and replaced by previous one. That is why I close it",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323942805:72,resume,resume,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323942805,2,['resume'],['resume']
Usability,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754686447:58,simpl,simple,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447,2,['simpl'],['simple']
Usability,"Ok, so to be clear, if you take a fresh directory, place the restart file there and run the code, will it still have this issue?; It sounds like this does not have anything to do with writing, but reading instead... :thinking:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-891991181:13,clear,clear,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891991181,2,['clear'],['clear']
Usability,"Ok, sounds good. I'll go ahead and close this since it is being replaced by the other pull request. ; Since you mention formatting, [here](https://github.com/su2code/SU2/wiki/Style-Guide) is our style guide for reference. I think you are probably right that there are places where it is not strictly followed, and if you would like to spend the time to fix those things that would be welcome. Thanks again for the pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331#issuecomment-261699279:181,Guid,Guide,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/331#issuecomment-261699279,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Ok. Thanks for the reply. If it's not simple to separate into a branch, don't worry. I have already downloaded the current master and can maintain a local copy. I see that there is at least one issue related to that segment (I would have responded had I seen it). Are users interested in using that segment of the code? If so, I'd be more than happy to add documentation and a usage example I the develop branch. When thus code went live we decided it was better to not add documentation since the feature is experimental. This is certainly a fixable situation on the develop branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152404327:38,simpl,simple,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152404327,2,['simpl'],['simple']
Usability,Ok.. thanks for the feedback. We'll go ahead with the current version (handled like the --enable-mpi option) for now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-240882029:20,feedback,feedback,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-240882029,2,['feedback'],['feedback']
Usability,Okay @pcarruscag I believe ; I reverted all the annoying format changes. Can you please review the code when you get the chance?. BTW I am aware about the boilerplate code in `python_wrapper_structure.cpp` and I plan to adapt `CPyWrapperMatrixView`. Would appreciate some feedback anyways,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012:272,feedback,feedback,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012,2,['feedback'],['feedback']
Usability,"On both questions the answer is yes. Option 1 can be implemented right now but will require the creation of temporary objects. Option 2 can directly forward the data to the blas routines. The tool I am developing is no tool for a specific linear algebra package. The idea is, that the tool parses the header files of the library. The user has then to define which objects are active lvalues and the derivatives for each operation in the library. For small an clear interfaces this is no problem and works already quite good. For large libraries like Eigen I adopted a whitelisting approach. That is, every function needs to be manually whitelisted to trigger the expression generation of the tool. In a prototype way I have also implemented an approach where only the active lvalues need to be defined and the tool looks then for all required functions and other objects that depend on these active objects. Long story short, the tool is designed to handle ""any"" library. It is even possible to mix several libraries together. My current status on this project is, that I am now through with the parsing of the header files and the generation of the expressions. This works quite well for Eigen which is a hardcore testcase, since every possible programming tweak in C++ is used here. The next step is to add the AD part to the expression generation process. I hope that in one or two month this will be finished and I can provide a first beta release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463561018:459,clear,clear,459,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463561018,2,['clear'],['clear']
Usability,"On the subject of virtual functions I would like to put another idea forward.; After moving things around in #725 I noticed that we have tons of `inline virtual` methods.; The keyword `inline` has two meanings to the compiler:; - ""Dear merciful compiler please copy paste the body of this function and then do all your wonderful optimizations, if that pleases your excellency.""; - ""Dear forgiving compiler, you will find this method defined in multiple units, please don't be mad"" (i.e. ignore the one-definition-rule). `virtual` means determine what version of the method to call at runtime. This is not compatible with the first (and often the intended one) meaning of inline, therefore the compiler will in general not inline those methods.; They will only be inlined if they are being called on a pointer to the derived class that does not declare the method to be virtual anymore. CSolver knows what variables it creates and so in hot areas of the code it could do a static downcast to allow inlining (e.g. `static_cast<CEulerVariable*>(node[iNode])->DoStuff()`).; Where is this important? For example when computing gradients, where simple additions and subtractions are hidden behind virtual functions.; If you are worried about maintenance each solver can typedef its most safe downcast level or better yet (or just more modern), methods that could benefit from this can be templated for the type of downcast.; Those in favour say Yea those against say Nay.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-509273008:1139,simpl,simple,1139,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-509273008,2,['simpl'],['simple']
Usability,"One of the interesting paper -. "" Comparison of numerical and Analytical Jacobians"", Kirk J. Vanden, Paul D. Orkwis; AIAA, Vol 34, No. 6, June 1996. They computed the exact analytical Jacobian with symbolic manipulation. In conclusion they are showing that both analytical and numerical Jacobians showed similar performance and suggesting that for simpler numerical fluxes, analytical Jacobians should be the best way to go and for complex numerical fluxes, numerical Jacobian can be preferable choice (but if one can work out analytical, that should be good as well, I guess (one time effort) ). Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-505615012:348,simpl,simpler,348,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-505615012,2,['simpl'],['simpler']
Usability,"Our working branch is 'develop', so you should have started from that and also merge into it. Every 6 months or so we then make the current develop into master. I changed the target branch to develop, and also updated your branch with current develop. ; Can you have a look at the failed check for clang-format coding style and format the changed file accordingly?; https://su2code.github.io/docs_v7/Style-Guide/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1821051032:406,Guid,Guide,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1821051032,1,['Guid'],['Guide']
Usability,"Overall some solid looking code @jayantmukho, thanks!; I have a few suggestions:; 1 - Some of the config variables have fairly broad names, ""permute"" for example, I think prefixing them with UQ would more clearly identify what they are meant for.; 2 - There are a lot of dynamic allocations of static size, if the current implementation is compatible with 2 and 3 dimensions I would allocate those variables statically, makes for cleaner and faster code (stack allocations are much faster and subsequent loops would likely be unrolled by the compiler).; 3 - It looks like some of the new methods in CNumerics are for generic ""Eigenvalue-stuff"" for re-usability I suggest moving those methods to a helper class, even if for now that class becomes just a collection of static methods. In the implementation of those methods the dimension of the inputs is being assumed, if you do move them please make them generic.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-427468893:205,clear,clearly,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-427468893,4,"['clear', 'usab']","['clearly', 'usability']"
Usability,"Please see the response on the [forum](https://www.cfd-online.com/Forums/su2/184789-poor-quality-mesh-after-deformation-su2-5-0-0-a.html#post640783).; In the future, please note that it is [recommended](https://www.cfd-online.com/Forums/site-help-feedback-discussions/175429-guide-how-ask-question-forums.html#post612025) not to double-post questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/384#issuecomment-286555388:247,feedback,feedback-discussions,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/384#issuecomment-286555388,4,"['feedback', 'guid']","['feedback-discussions', 'guide-how-ask-question-forums']"
Usability,Problem solved. Script Workshop now. Just a simple DOS/Windows-Unix fileformat error. -.-,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/279#issuecomment-222963559:44,simpl,simple,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/279#issuecomment-222963559,2,['simpl'],['simple']
Usability,"Quite simple I imagine.; Since I have everything in place now to open, manipulate and export the mesh in SU2 format (c.f. #1877 ) I could easily filter points and assign their IDs to arbitrary markers or elements or simply export their ID to a different file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396188450:6,simpl,simple,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396188450,4,['simpl'],"['simple', 'simply']"
Usability,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626799862:138,simpl,simple,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862,2,['simpl'],['simple']
Usability,"Reviving the parsing script can be a simple and effective solution for syncing the defaults.; I shall be out of the country for the next three weeks. I shall try my hand at your suggestion once I return. Meanwhile, I hope the current PR will complete its approval cycle. Current Travis failures are marked by ! only.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377499319:37,simpl,simple,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377499319,2,['simpl'],['simple']
Usability,"SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a simple test like this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:2297,simpl,simple,2297,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,2,['simpl'],['simple']
Usability,"Sc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher with a more performant linear solver, then it could be worth the effort to try other options.; >If the CFL must remain low for stability, then perhaps we should look at the quality of the J",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:3095,simpl,simply,3095,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['simpl'],['simply']
Usability,"Simplest is to just copy the saved file again, with an iteration number appended. No keeping track of what the iteration number at the previous write was, no copying of the final saved file with manually appending the final iteration number, no lag of WRT_FREQ in the availability of the restart_xxx.dat file. It does mean that we do a copy instead of a rename. But I think this is the better (because the simplest) solution. I will extend it to the other file options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868:0,Simpl,Simplest,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868,3,"['Simpl', 'simpl']","['Simplest', 'simplest']"
Usability,"So I have setup Travis to test both Python versions, but I need to learn a little bit more about automake to setup the `pySU2` Makefile properly to build against the active Python environment. Hopefully getting closer...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-323047764:67,learn,learn,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-323047764,2,['learn'],['learn']
Usability,"So I tested this on 4 mesh levels for a NACA0006 at 2.0 degrees AoA, at low (0.6) and high-ish (0.8) Mach number (Roe scheme).; These are the results for low Mach:; ![image](https://user-images.githubusercontent.com/38071223/61968547-3b08c680-afd0-11e9-8aae-9705a9441a00.png); Very small differences between recomputing a mass flux based on primitives (""Reconstructed"") or storing the flux computed during discretization of convection (""Consistent"").; However, the convergence rate for the latter approach is much worse:; ![image](https://user-images.githubusercontent.com/38071223/61968712-99ce4000-afd0-11e9-9c31-dafd7e26e3fb.png); Which makes sense because we are going from a Gauss-Seidel coupling of flow and turbulence to a half GS, half Jacobi (since the turbulence source terms were still computed with current velocity gradients).; After seeing this I only ran one mesh level (second to finest) at high Mach number and again differences were very small and convergence worse.; Some memory would indeed be saved in the discrete adjoint through the reduction of the number of pre-accumulation input variables, but only 30MB out of almost 9GB for a 2D case without MG. In summary the current approach seems to strike a good balance between accuracy, cost, and simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721#issuecomment-515535554:1266,simpl,simplicity,1266,https://su2code.github.io,https://github.com/su2code/SU2/issues/721#issuecomment-515535554,2,['simpl'],['simplicity']
Usability,"So just to be clear: In my opinion, after calling SU2Driver.Run() the iteration count should be increased immediately. Now we postpone it in the python scripts, which means we have to add +1 in monitor to get the correct iteration count.; With the current change, Monitor has the correct (imo) behavior.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540:14,clear,clear,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540,2,['clear'],['clear']
Usability,"Sorry for the late reply! Thanks for all the help, and i am afraid i am using a 7.2.0 version and the newly released version 7.2.1 remains the same code. The problem is just lying on ""delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);"" which is also in @TobiKattmann 's code post(thanks for your kind guidance ).; In deed, this part of code should give the credit to @EduardoMolina, and the function is a part of his doctoral thesis(2018) which i just couldnot found a link or doi of. But in this paper(https://www.researchgate.net/publication/318143234; ), he gives the official definition as below without the implementation in above picture.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-986239816:301,guid,guidance,301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-986239816,2,['guid'],['guidance']
Usability,Sounds good to me. I have been prototyping the multizone driver in the last couple of weeks. It's still in the early stages but it's slowly taking shape. You can find it here:; https://github.com/su2code/SU2/tree/feature_reformat_config. I also outlined some of the changes (particularly in what respects to the config file) in the Dev-society forum: https://su2devsociety.org/forum/?view=thread&id=5 . We could keep the conversation there if you want. Happy to set up a meeting to explain a bit what I have been doing and receive some feedback (and helping hands would also be welcome!) from the different groups.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392061901:536,feedback,feedback,536,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392061901,2,['feedback'],['feedback']
Usability,"Sounds good, with that it will be easier to reason about when the recording types are created and used, right now someone would have to sit down and reverse-engineer the process.; My intuition is that we can use some of the machinery introduced for multizone (partial tape evaluation) to simplify the recording management.; And just to be clear I am very interested in having this feature in the code for comparison with the FP approach.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1780662970:183,intuit,intuition,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1780662970,6,"['clear', 'intuit', 'simpl']","['clear', 'intuition', 'simplify']"
Usability,"Sounds good. I applied Pedro's fix to my code (temporarily), and it seems to have cleared up the problem. Thanks guys! Do you want me to close this now, or wait until the PRs are applied to develop?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956#issuecomment-620142891:82,clear,cleared,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620142891,2,['clear'],['cleared']
Usability,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:301,simpl,simple,301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095,2,['simpl'],['simple']
Usability,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598824144:454,Clear,Clearly,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144,1,['Clear'],['Clearly']
Usability,"Sure; If you want to install Su2 version 7.0.0 from scratch, you need python 3.5; atleast; The installation guide says just python 3; One of the functions used in meson.py is only available in python 3.5. On Mon, Feb 3, 2020, 12:51 AM Tim Albring <notifications@github.com> wrote:. > Thanks for opening the issue. Can you give a little bit more details on; > what you mean exactly ?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/855?email_source=notifications&email_token=AIENZ3WCJDNJV4LP655MB33RA7LI5A5CNFSM4KNO4QLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKS7V6I#issuecomment-581303033>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AIENZ3TDY7ZCOS27JO7IYXTRA7LI5ANCNFSM4KNO4QLA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/855#issuecomment-581453436:108,guid,guide,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/855#issuecomment-581453436,2,['guid'],['guide']
Usability,"Surprisingly I have found the existing content related to plasma simulation in SU2. Really amazing. Could anyone give me any clues of the correspondent .cfg files? Or help me find the governing equations change which makes the plasma equations different from the neutral gas. ; ; ![image](https://user-images.githubusercontent.com/33152225/61871269-5fef3200-af1b-11e9-82c5-cd8418a6f83c.png). It already seems good enough at considering *E* field, but *B* is omitted. I can strive to supplement the equation. Could anyone give some guidance to me, a newcomer of SU2?. [Stanford University Unstructured An open-source integrated computational environment for multi-physics simula.pdf](https://github.com/su2code/SU2/files/3431264/Stanford.University.Unstructured.An.open-source.integrated.computational.environment.for.multi-physics.simula.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515010918:531,guid,guidance,531,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515010918,2,['guid'],['guidance']
Usability,"Technically, this model has only one equation, the one for intermittency. Most of the functions are the same as the original LM model. Should I consider the Simplified model (SLM) as an option for the LM model to avoid duplicates? This is how I started, but I am open to discussions and suggestions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1406921239:157,Simpl,Simplified,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1406921239,1,['Simpl'],['Simplified']
Usability,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:33,feedback,feedback,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,4,"['feedback', 'simpl']","['feedback', 'simpler']"
Usability,"Thank you @pcarruscag and @kursatyurt for your comments and suggestions! I hope that I understood and applied them as intended, if not, please let me know. This is all new to me and because I'm still learning C++, it took me a few extra commits but now all tests seem to pass :) Have a good weekend!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617:200,learn,learning,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617,2,['learn'],['learning']
Usability,"Thank you for all your answers. @economon very good news! I am looking forward this improvement. I will rebase my branch on it. @aerialhedgehog: For first pattern, I didn't thought about this case. Thanks for feedback.; So ok to not change code matching pattern 1. In my own experience, in such cases, I prefer to create a new user friendly module that do all imports. In one hand, users have a very simple module and developers keep all real packages as clean as possible. But in other hand, it is true that there is a bit of duplication and can be confusing for whom exploring code. For pattern 4, yes, if I remember well, It happens only two times. So no need to write an helper function I think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-201337122:209,feedback,feedback,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-201337122,4,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"Thank you for replying while busy preparing the High Lift Prediction Workshop 5. Sorry, I didn't clearly understand. From what I understand, I can suggest another energy equation calculating method instead of the current SU2 method(reading calculated TKE from inlet boundary condition and using it as an energy equation). Is that right? If not, could you please explain in more detail?. > @sun5k maybe you can try implementing the alternative I suggested of obtaining turbulence kinetic energy at inlets from the turbulence solver instead of assuming that the free stream value is imposed exactly? In the SWBLI case the SST-m versions (without divergence terms in the stress tensor) seem to underpredict the separation region https://su2code.github.io/vandv/swbli/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374:97,clear,clearly,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374,2,['clear'],['clearly']
Usability,"Thank you for the changes.; I would say a test case is always welcome. You can simply modify an existing one, this feature is orthogonal to everything else, and then please add the new options to the config_template (with maybe the nice explanation you have in CConfig).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781:79,simpl,simply,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781,2,['simpl'],['simply']
Usability,Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672:18,feedback,feedback,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672,2,['feedback'],['feedback']
Usability,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:18,feedback,feedbacks,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039,2,['feedback'],['feedbacks']
Usability,"Thank you for the pull request. ; Pull requests must be both to and from the ""develop"" branch (or the relevant feature branch if applicable). In order to make a pull request, please check out the develop branch, make your changes, and submit the pull request into to develop branch. . While this might be useful in some situations, and particularly the record of this pull request can be an example to other users who want to use Docker with SU2, it looks like this is specific to a version of Ubuntu, and that you have hard-coded some lines to refer to locations on your own file system. We try to make it such that SU2 will be usable in most operating systems, with appropriate changes to the configuration steps. . Since it is setting up a development environment this would be more appropriate to SU2_IDE/, rather than Quickstart/ - which is intended as the main tutorial for new users, who are not necessarily developers and who may not have heard of Docker.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/169#issuecomment-96786749:629,usab,usable,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/169#issuecomment-96786749,2,['usab'],['usable']
Usability,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:765,simpl,simplification,765,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807,2,['simpl'],['simplification']
Usability,"Thank you so much, Tobi and Pedro. Yes, there is a temperature gradient; close to the wall. So SU2 gives me, in this case, a 'virtual heat flux'!; Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437:369,simpl,simply,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437,2,['simpl'],['simply']
Usability,"Thank you so much. Jehan. Sent from Yahoo Mail on Android. From:""Tim Albring"" notifications@github.com; Date:Tue, May 5, 2015 at 4:56 PM; Subject:Re: [SU2] SU2 do not produce plot files such as vtk etc. (#173). If you run the code with enabled mpi support SU2_CFD will only write the restart files. You need to use SU2_SOL to convert them to .vtk. Therefore simply copy the restart_flow.dat to solution_flow.dat and run SU2_SOL. Or you could just use the parallel_computation.py script that does this automatically. —; Reply to this email directly or view it on GitHub.￼",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/173#issuecomment-99235355:358,simpl,simply,358,https://su2code.github.io,https://github.com/su2code/SU2/issues/173#issuecomment-99235355,2,['simpl'],['simply']
Usability,"Thank you, @economon. It turns out, that does indeed remove the issue. I updated to the latest version (7.0.5) at the same time. When checking the default behavior, the QuickStart case would run correctly the 1st time then it would fail if the restart file was not removed prior to the output stage of subsequent runs. Commenting out line 223 does appear to resolve the issues we have been encountering. Original:; Now it seems to get stuck (simply freezes for >60 sec) when writing surface_flow.vtu (from QuickStart). I don't suppose there's another flag like this in that code vicinity?. Update: This issue resolved itself. The file system was being taxed by other runs. Thank you all for your time!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-644968380:442,simpl,simply,442,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644968380,2,['simpl'],['simply']
Usability,"Thanks @FlorianDm for putting in the fix!. Although, it sound like we still need something more general.. I think the normal neighbor concept could still work, it's just that you need to be starting from the vertex list on the axis (not the inlet or the outlet) to find it. Another simple thing to try is just setting AxiFactor = 0.0 if the y coord = 0.0, instead of 1.0. If this grid is stretched with small spacing near the wall, the contribution from the dual CV on the axis could be very small.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-611266566:282,simpl,simple,282,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611266566,2,['simpl'],['simple']
Usability,"Thanks @MicK7 I will have a look, my initial thought was to have a simple strategy where within each MPI rank parallelism is extracted via colouring or scatter-to-gather transformations and only one thread per rank participates in the message passing, I have no experience here though so this might be a bad strategy, idk. **Back to business:**; I went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:67,simpl,simple,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['simpl'],['simple']
Usability,"Thanks @clarkpede to take the initiative for this topic. I think unit-tests are a useful thing and we should think about having it in addition to the regression tests. Regarding the framework I am actually a little bit hesitant to use boost. Although we are already using it for tecio, in that case it is used in a part of the code which does not change frequently so it is fine if we are just shipping it. However, if we start introducing it into the actual development process people may want to use more and more features of boost and we will have a hard time maintaining versions, compatbilities and so on. And in my opinion we should keep it as simple and lightweight as possible (one of our biggest strengths is the simple compilation/installation, which actually attracts a lot of users). So in that regard Catch2 looks like a better candidat to me. But I am happy to hear more opinions on that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500226914:650,simpl,simple,650,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500226914,4,['simpl'],['simple']
Usability,"Thanks @pcarruscag , I had to do a few additional things together with the PERIODIC_IMPLICIT communication to make it work, but that also brought me on the right track 👍 Now it works really nicely from my point of view. > Have a look at my last comment in #763, I think there is a better way of handling linear system periodicity instead of what we do, which may allow you to run at higher CFL (and with simpler periodic comms). I need to have a second look at this. So non of your thoughts back then are yet incorporated in this PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927303571:404,simpl,simpler,404,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927303571,2,['simpl'],['simpler']
Usability,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621450497:106,simpl,simple,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497,2,['simpl'],['simple']
Usability,"Thanks Edwin, the vectorized loops in the code are probably very simple array copies, hence the low efficiency? I would put money on not a single vector instruction being generated for the important stuff. I was surprised by the 1.25 to 1.3 factor you are seeing, for the exact same case I measured 1.39 (to be more precise). Initially I thought it had something to do with running single core, thus leaving vast amounts of L3 for only that core to use, so on the same 24c platform I ran 2 processes (30MB of cache for each) (very uncivilised) and the factor went down to 1.37, so cache was not the reason.; So then I thought maybe the Intel compilers are very good at optimizing polymorphism away, but the development branch compiled with icc 17 runs at exactly the same speed as when compiled with gcc 5.4. Then I compiled feature_contiguous_cvariable with icc 17 and it runs 9% slower than the gcc binaries, and so with icc 17 the speedup for this case was 1.27 errrrr... Anyone got a buddy at Intel?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523930905:65,simpl,simple,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523930905,2,['simpl'],['simple']
Usability,"Thanks Francisco for this contribution! Although the FFD Framework is already working quite well, there is still (like always) room for improvement. In fact, I am currently working on using BSplines instead of Bezier curves. I'm going to open a pull request end of this week. But this shouldn't affect this one I hope. Do you have by any chance a simple test case I could use to check this ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330#issuecomment-260475206:347,simpl,simple,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/330#issuecomment-260475206,2,['simpl'],['simple']
Usability,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:491,simpl,simplified,491,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430,8,['simpl'],"['simplified', 'simplified-multizone-explicit-', 'simplified-singlezone-density']"
Usability,"Thanks Tom for the comments! ; I think I have covered them all but let me know if you still have comments. I will do some updates tomorrow morning. I agree this is a very large pull request, it's the result of over a year of work, so I would really appreciate any more feedback from the community! ; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/452#issuecomment-337575805:269,feedback,feedback,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/452#issuecomment-337575805,2,['feedback'],['feedback']
Usability,"Thanks Tom; I agree that we should make things easy to understand. ; My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh. . In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request). On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value. . There may be other similar areas where config file options could be clarified or compressed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132181536:955,clear,clear,955,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132181536,2,['clear'],['clear']
Usability,"Thanks a lot @pcarruscag but for the moment I decided to use [NaSt3DGP](https://ins.uni-bonn.de/media/public/u/griebel/NaSt3DGP/index.html) instead. It is a very simple code that implements 3D incompressible NS with natural convection, and it can be very easily understood because it's really a very minimal implementation (parallelized, though). I'm closing this, although if you consider this feature would be of interest for SU2, don't hesitate to open this issue again, as a feature request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/973#issuecomment-626360321:162,simpl,simple,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/973#issuecomment-626360321,2,['simpl'],['simple']
Usability,"Thanks a lot for your feedback, we have updated the files. ; For the time being, just remove MG_CFL_REDUCTION= 0.9 in your config file.; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/44#issuecomment-54904983:22,feedback,feedback,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/44#issuecomment-54904983,2,['feedback'],['feedback']
Usability,Thanks again for the helpful feedback @oleburghardt. Time to get this one merged so we can keep moving.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625#issuecomment-459996705:29,feedback,feedback,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/625#issuecomment-459996705,2,['feedback'],['feedback']
Usability,"Thanks at all for being so responsive to this mishap. When I started contributing I learned that something like a 2-LGTM-rule was applying. But apparently it evolved to have someone merge a pull request if he or she can judge the content and feels comfortable with it, as the other approach ended up having a large list of unmerged pull requests **or** having two LGTM's of non-independent reviewers. @economon Maybe you can bring it up at the next meeting how we could address this little double bind?. So sorry again for the trouble (at least a revert of the very latest commit would not be too difficult). Still I'll wait if @pcarruscag and @talbring want to do now the way Tim suggested.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667#issuecomment-480015080:27,responsiv,responsive,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/667#issuecomment-480015080,4,"['learn', 'responsiv']","['learned', 'responsive']"
Usability,"Thanks for bringing up this issue. It is interesting... . As Heather mentioned, is there any concern that when writing large files the lack of an endl will cause the buffer to become too large at some point (before the file gets closed and clears the stream automatically)?. Unfortunately, we do not have any regression tests that cover the output files at the moment, so it is difficult to gauge the impact of the changes, although it would be straightforward to add some tests for SU2_CFD and SU2_SOL that diff output files. Have you been able to verify that all CSV, Tecplot/ParaView files, and force breakdown files work appropriately?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223806287:240,clear,clears,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223806287,2,['clear'],['clears']
Usability,"Thanks for finishing up the implementation, @VivaanKhatri! I am looking forward to reviewing this very soon. Do you have a test case to verify things are working? Even just a simple flat plate like in the paper so that we can put it under regression control?. @rsanfer: your comment reminded me about our earlier attempts to fix up the indentation issues on the fix_indentation branch. Do you think this is something we can revive to provide scripts for automatically fixing this issue once and for all? Or do we need to find a different approach?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530#issuecomment-387921905:175,simpl,simple,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/530#issuecomment-387921905,2,['simpl'],['simple']
Usability,"Thanks for taking care of the merge with develop @pcarruscag, I am going to make some simple formatting changes to the `CFEASolver` and `CMeshSolver` so that they conform to the rest of the solver files",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849#issuecomment-578283139:86,simpl,simple,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-578283139,2,['simpl'],['simple']
Usability,"Thanks for the clarification!. Best,; Francisco. > On Apr 22, 2017, at 5:01 PM, Heather Kline <notifications@github.com> wrote:; > ; > Thanks; > The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver.; > An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/385#issuecomment-296409557>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpklrJ5WQ8CoWJNAy_FVZ0bbYN000s2ks5rypTpgaJpZM4MgM_e>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409876:264,clear,clear,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409876,2,['clear'],['clear']
Usability,"Thanks for the comments, Tom! I understand it's a big change, so I would welcome some more feedback! . I am working in other ways to improve the generalization/sustainability of the code, so any comments would also be considered for that stage :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-388799884:91,feedback,feedback,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-388799884,2,['feedback'],['feedback']
Usability,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619409024:848,simpl,simpleFunctionPython,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024,2,['simpl'],['simpleFunctionPython']
Usability,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:420,clear,clear,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083,4,['clear'],['clear']
Usability,"Thanks for the feedback @pcarruscag. @jayantmukho and I discussed this when we implemented the objective function. The main motivation was that since our implementation of the separation sensor is computed using the skin friction coefficient, we only defined the variables Buffet_Sensor, Buffet_Metric, etc. for the NSSolver class. Since the NSSolver needs to be able to evaluate all the same objectives as the EulerSolver, but the buffet objective is exclusive to the NSSolver, I copy pasted the function and added the new objective. Let me know if you have any suggestions for a cleaner implementation. We were basically choosing between defining all the Buffet_* variables in EulerSolver which would just add unnecessary variables to the constantly growing list of variables, or copying EvaluateObj_Func to allow for NS-specific objectives.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614#issuecomment-441300657:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/614#issuecomment-441300657,2,['feedback'],['feedback']
Usability,"Thanks for the feedback and suggestions. Nice teamwork! I am also plenty happy with this now. Last comment: it was mentioned at the meeting (maybe in the V&V working group), that it would be good to have a separate option for the user-defined solution, in the case of setting a custom initial condition or BC, that sits outside the KIND_VERIFICATION_SOLUTION option list. Doesn't have to necessarily be acted upon now, but want it on record.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-498834929:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-498834929,2,['feedback'],['feedback']
Usability,"Thanks for the feedback. . I was not able to find any examples myself either. It looks like this is a feature that has been around for a while, but maybe has gotten lost in some updates. I will work on setting up a small test case for this and the FAN_FACE_MDOT and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640,2,['feedback'],['feedback']
Usability,Thanks for the feedback. I will modify the class in a way that it is possible to specify the separator and other decoration.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591#issuecomment-427287405:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/591#issuecomment-427287405,2,['feedback'],['feedback']
Usability,"Thanks for the feedback. The GitHub pages site is now the official project page, and the redirect has been put in place. Please let me know asap if any problems arise. @vdweide: yes, let's keep with our normal development process for the website, including PRs and code reviews, etc., in order to maintain quality and keep everyone informed. Lastly, if anyone is very interested in working on a website overhaul, please let us know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/436#issuecomment-329063810:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/436#issuecomment-329063810,2,['feedback'],['feedback']
Usability,Thanks for the feedback.. this is resolved in #600,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515#issuecomment-459228891:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/515#issuecomment-459228891,2,['feedback'],['feedback']
Usability,"Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?. Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191571633:118,simpl,simple,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191571633,2,['simpl'],['simple']
Usability,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:95,simpl,simple,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,2,['simpl'],['simple']
Usability,Thanks for the improvements! Just a quick suggestion: maybe we should use for the distance computation the already available ADT structure ? Just have a look at CPhysicalGeometry::ComputeWall_Distance on how to use it. Should be more or less a simple copy/paste.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/444#issuecomment-331841826:244,simpl,simple,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/444#issuecomment-331841826,2,['simpl'],['simple']
Usability,"Thanks for the quick review @pcarruscag. I have cleaned up a little bit. Also added a nicer table of the output. l prefer that we always compute the min/max values, at least for the FVM CFD solvers, for a few reasons. The most important reason is that we should start to build up some intuition about the correlation between mesh quality metrics and accuracy + convergence in the solvers. This can be especially important during optimization when the mesh is deforming. I think the metrics are valuable to print every time for this reason, which might help users diagnose problems eventually. Additionally, the cost is relatively small (on par with the other pre-processing routines, it is only executed once and it is parallelized, and the memory is released if we don't write).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-526456264:285,intuit,intuition,285,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-526456264,2,['intuit'],['intuition']
Usability,"Thanks for the suggestion and I am preparing for a test.; As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition.; @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; ```; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348:424,guid,guidance,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348,2,['guid'],['guidance']
Usability,"Thanks for your comments! Except for mixing plane and frozen rotor, sliding plane is also pretty common in turbomachinery simulation, it is indeed implemented in some, if not all, in-house codes. ; MRF is quite useful in turbomachinery simulation, expecially when we deal with transient simulation. Actually it is really rare to move the rotor mesh like in reality. One reason is that MRF is more efficient and accurate. Otherwise, you introduce new disturbance into the transient flow field every physical time step, which is not good. Because when you rotate the mesh, the velocity direction of each grid point inherited from last time step is not rotated. To make it more clear, you will have a flow going towards casing instead of parallel to, at the start of next physical time step. So you need more pseudo time steps to get a proper velocity variable. As a result, you get a zig-zag shape in the residual history.; I'm not actually moving the interface. The rotor mesh is not rotated, so as the interface at rotor zone. I'm just virtually rotating the rotor interface to find the new matching points between rotor and stator for each physical time step, so that the variable could be passed across the interface. In other words, only the passing variables are actually rotated. If I understand it correctly, there is no additional moving mesh restriction introduced here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506:675,clear,clear,675,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506,2,['clear'],['clear']
Usability,"Thanks for your feedback! I agree, `OMP_NUM_THREADS` is better than having the number of threads in the constructor. I adapted `disc_adj_flow` and `disc_adj_fea` for MPI and added both to parallel AD and hybrid AD tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978:16,feedback,feedback,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978,2,['feedback'],['feedback']
Usability,Thanks for your guidence.; I found the code snippet you metioned in version 7.4.0 hasnot shown up in my current version 7.2.0. Quite happy to see contributors have revised this.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1809#issuecomment-1308341917:16,guid,guidence,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1809#issuecomment-1308341917,2,['guid'],['guidence']
Usability,"Thanks for your kindly reply, Clark. It is a good habit to have a search before asking, and I should keep it. . ""feature-AdjTNE2"" seems to be a good example to learn from how to edit the kernel of governing equations. I would try to deepen the utilities of electromagnetic computation. And I have found the commit that deleting all plasma computational relevant content. 45c2a63d1a0773dd2e9ca05b5a1798ea575d47f8 Anybody willing to tell me why we delete that part? Too complicated to handle?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515276512:160,learn,learn,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515276512,2,['learn'],['learn']
Usability,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:44,clear,clear,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,2,['clear'],['clear']
Usability,"Thanks, @jaspe55 ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439496260:111,simpl,simple,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439496260,2,['simpl'],['simple']
Usability,"Thanks, David & Ruben. If anyone else has feedback or concerns, please let us know. We'll likely merge this in tomorrow. If folks have trouble with conflicts from the previous memory fixes, or have conflicts with these CDriver changes, We're happy to work with you directly. Just let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237737515:42,feedback,feedback,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237737515,2,['feedback'],['feedback']
Usability,"Thanks, Edwin. I had originally toyed around with this too, but I thought using the system-specific versions would be most portable at first. However, for something this simple, I agree that we should just do it ourselves. I have reused your implementation with some minor modifications. Could you please just confirm that the code posted above is yours, you are ok with me adapting it, and that I can name you as an author at the top of the file (I have added you there)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414092502:170,simpl,simple,170,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414092502,2,['simpl'],['simple']
Usability,"Thanks, I’ll take a look at that before the weekend,. Best,; Francisco. > On Mar 2, 2016, at 8:03 PM, Thomas D. Economon notifications@github.com wrote:; > ; > Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?; > ; > Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/244#issuecomment-191571633.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191590831:278,simpl,simple,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191590831,2,['simpl'],['simple']
Usability,"Thanks, Tim. Adding flexibility to the FFD is a great contribution. I was just going through the changes and I have a couple of questions:; 1. I noticed that you have added AD as an option for computing the geometric sensitivity component (change in the surface location due to a delta change in the design variable) that multiplies the adjoint sensitivity. Is there a way to make this usable for the continuous adjoint too rather than using finite differencing? This assumes that the user has built the AD version, even though they use the continuous adjoint.; 2. On a related note (I think), is the finite differencing that is currently used for computing the geometric sensitivity the only roadblock to arbitrary FFD movements for the continuous adjoint?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239#issuecomment-183462794:386,usab,usable,386,https://su2code.github.io,https://github.com/su2code/SU2/pull/239#issuecomment-183462794,2,['usab'],['usable']
Usability,"Thanks; The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver. ; An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409557:127,clear,clear,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409557,2,['clear'],['clear']
Usability,"That looks a bit strange, you still get Release 6.2.0 but in the aforementioned PR @jayantmukho clearly updated the version to 7.0.2, I use the old build system in an old computer and it is currently working...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598733874:96,clear,clearly,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598733874,2,['clear'],['clearly']
Usability,The Github Actions checks passed after making two changes:. 1) https://github.com/su2code/SU2/pull/1619/commits/efe98fe6070a0cb51f1082a9599363786e4d65ea; I needed to lower the warnlevel due to problems in `externals/cgns/hdf5`.; Maybe the HDF5 files should be updated to a newer version ?! But it is not clear to me which version has been used in https://github.com/su2code/SU2/pull/1500. ; @MicK7 Do you have an idea how to fix this ?. 2) https://github.com/su2code/SU2/pull/1619/commits/26140223e5838a6856c0b3c02163a826256306b1; A workaround recommended at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. 3) The regression tests [fail](https://github.com/su2code/SU2/runs/6387003184?check_suite_focus=true) because the new `test-su2` Docker image is `private`. I will need someone with higher privileges than me to make it public.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000:304,clear,clear,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000,2,['clear'],['clear']
Usability,"The MPI_Type_create_hindexed will indeed solve the integer overflow encountered in MPI_Type_indexed, as the former uses MPI_Aint (8 byte integers) for the the displacements and the latter regular 4 byte integers. However, as @GomerOfDoom mentioned, there may be issues for the discrete adjoint (I saw that Type_indexed is actually present in medi) if we simply replace MPI_Type_indexed by MPI_Type_create_hindexed. So @talbring, @MaxSagebaum and @economon, do you foresee any problems here? If not, then it is a very simple change of a couple of lines.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622319245:354,simpl,simply,354,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622319245,4,['simpl'],"['simple', 'simply']"
Usability,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619334494:132,feedback,feedback,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494,2,['feedback'],['feedback']
Usability,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:27,simpl,simple,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798,2,['simpl'],['simple']
Usability,"The dimensional inconsistency comes from the multiplicity of the normal velocity eigenvalue and the manipulation Hirsch does with the corresponding eigenvectors in order to obtain a formulation that is valid for any normal vector. When you use the P matrix to form the characteristic variables, the dimensional inconsistency disappears again, as it should. Never looked at it this way. Thanks for clearing this up Francisco.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/423#issuecomment-322124810:397,clear,clearing,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/423#issuecomment-322124810,2,['clear'],['clearing']
Usability,"The documentation is now at:; https://github.com/su2code/SU2/wiki/Mesh-File. I would assume the actual behavior is still the same. Brendan, can you please check the documentation to see if you think it is clear now, and update it if not?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/47#issuecomment-104355161:205,clear,clear,205,https://su2code.github.io,https://github.com/su2code/SU2/issues/47#issuecomment-104355161,2,['clear'],['clear']
Usability,The dummy layer is what we used before version 7 and moved away from it for simplicity.; Two layers doesn't sound possible for unstructured meshes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038#issuecomment-1557818415:76,simpl,simplicity,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038#issuecomment-1557818415,2,['simpl'],['simplicity']
Usability,"The fix is not as simple, using the strategy from #1631 makes it worse.; Intersection with symmetry/euler look ok, so the best is to extend the domain...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639#issuecomment-1132302976:18,simpl,simple,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639#issuecomment-1132302976,2,['simpl'],['simple']
Usability,The iteration number is now stored in the restart files so we should definitely have this feature. Because at the moment it is not clear when the iteration stops (because EXT_ITER is still counted from 0).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-308412942:131,clear,clear,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-308412942,2,['clear'],['clear']
Usability,"The motivation of having it as the default was to make the code as user-friendly as possible (fewer knobs exposed in the config), but options are good of course. I would propose then that we add an option for the reconstruction gradient, something like:; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; to let users decide if they want a separate option for the reconstruction gradients. If it does not appear, then the default is to use the same method as defined by NUM_METHOD_GRAD without a second gradient computation (basically what we have now). The nice thing about that is we can even try out other combos such as WLS+GG for the two different gradients. I will throw an error if users try to use LSQ for the viscous/source gradients, to avoid accuracy issues. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-533259202:67,user-friendly,user-friendly,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-533259202,2,['user-friendly'],['user-friendly']
Usability,"The original Spalart-Allmaras turbulence model encloses the ft2 term: https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows or https://turbmodels.larc.nasa.gov/spalart.html#sa. After that, some modifications were introduced and the ft2 term was neglected. But accordingly, a different name is used, i.e., Spalart-Allmaras One-Equation Model without ft2 Term.; So, I would also vote for implementing the original model along with the SA-noft2 variant. Also, I would like to point out a fact about the current implementation of the Negative Spalart-Allmaras variant. From theory, https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf equation 12, the model introduces the modified vorticity S_tilde. However, in SU2 (SU2/SU2_CFD/src/numerics/turbulent/turb_sources.cpp and CSourcePieceWise_TurbSA_Neg::ComputeResidual) we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras:. Shat = S + TurbVar_i[0]*fv2*inv_k2_d2;. (Sbar is used as S_tilde). Is there any reason for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-648883933:924,simpl,simply,924,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-648883933,2,['simpl'],['simply']
Usability,The primary solution in the linked issue is to use a virtualenv. I quote:. > The easiest workaround: Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575#issuecomment-1076307528:155,guid,guides,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575#issuecomment-1076307528,2,['guid'],['guides']
Usability,"The solver with the closest functionality to what you are trying to do is the elasticity solver, it may be worth having a look there. But in a nutshell there the variables we want to differentiate are held by (members of) the discrete adjoint solver, they are reset before being registered as inputs to clear the derivative information, and it is important that they are left alone during the recording phase.; You will see that the adjoint iteration class for this solver then needs to update the numerics classes (in SetDependencies), at least for the source term the SA coefficients are set in the constructor of the corresponding numerics so maybe this step is missing?; The key point is that whenever a coefficient is used you need to be able to trace its value back to the original variable you registered.; Also the derivatives should be extracted in the same order they were registered, and you cannot access them multiple times by calling ""GetDerivative"" on them repeatedly (not 100% sure if this restriction still exists after the update of CoDi).; If none of this makes sense point me to branch you are working on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-491910935:303,clear,clear,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-491910935,2,['clear'],['clear']
Usability,"The source term is pretty simple but the feature as a whole is very intrusive on the code, even the mesh deformation is getting involved in this.; Would it be viable to use the python wrapper to provide the source term?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850:26,simpl,simple,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850,2,['simpl'],['simple']
Usability,The style guide is now posted at:; https://github.com/su2code/SU2/wiki/Style-Guide,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/89#issuecomment-102195159:10,guid,guide,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/89#issuecomment-102195159,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"There is no automatic way of doing that. If you want a simpler code to port to GPU, the best advice I can give you is to chose something else other than SU2. In the future please open ""discussions"" instead of issues, these are not SU2 code issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407#issuecomment-947489209:55,simpl,simpler,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407#issuecomment-947489209,2,['simpl'],['simpler']
Usability,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:167,simpl,simply,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416,2,['simpl'],['simply']
Usability,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593144776:955,simpl,simple,955,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776,2,['simpl'],['simple']
Usability,This PR finally passed the tests! Can I get some review feedback @economon and/or @talbring? It would be great to have this merged ASAP so no one adds any new code incompatible with Python 3.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-343013631:56,feedback,feedback,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-343013631,2,['feedback'],['feedback']
Usability,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:498,simpl,simple,498,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,4,['simpl'],['simple']
Usability,"This could be a very interesting contribution! Please, feel free to work on this and create a push request to the developer release. SU2 is looking forward for contributions from the open-source community. Thanks!; Francisco. Sent from my iPhone. > On Mar 12, 2016, at 8:07 AM, Pete Bachant notifications@github.com wrote:; > ; > As @gbaty said, it's usually easy to support both. Many times it can be done with a simple; > ; > from **future** import division, print_function; > at the top of each file, and tweaking the print and import statements. In my experience, the Anaconda (or miniconda) Python distribution makes it very easy to setup just about any version of Python you like on a cluster, since it's installed in the user's home directory by default.; > ; > Most scientific packages (NumPy, SciPy, Matplotlib, Pandas) already support both 2.7 and 3.x within a single codebase. Python 3 is the future!; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195781648:414,simpl,simple,414,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195781648,2,['simpl'],['simple']
Usability,"This has been a long long exposition (nerd joke) but bear with me I am almost done, and I will summarise the results in the form of a proposal (I'll probably put that at the top of the first post). ## ""Real"" numerics; Real in the sense that the flop to byte ratio (amount of computation per amount of data) is comparable to a real numerics scheme, say Roe for example.; The simplest way to do this is to combine the example code for MUSCL reconstruction with the matrix updates code and add something compute heavy between input and output, e.g. a number of matrix-matrix multiplications, here is some pseudo code for what I did:; ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<Connectivity<SIMDLEN> >& connectivities,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; RowMajorMatrix& residual,; SparseMatrix& matrix); {; using FltVec = Array<double,SIMDLEN>;. residual.setZero();; matrix.setDiagZero();. size_t color = 0;; for(const auto& connectivity : connectivities); {; #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t iEdge=0; iEdge<connectivity.size(); iEdge+=SIMDLEN); {; auto iPoint = connectivity.first_vec(iEdge);; auto jPoint = connectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:374,simpl,simplest,374,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['simpl'],['simplest']
Usability,"This is obviously very good work and should make it much simpler to add new outputs etc. My main concern when first reviewing was performance (something no one seems to care about) but from the limited testing I did while merging this and CVariable there seems to be no big impact, I did not time anything though, if you have numbers to share please do.; Nevertheless if you can get away with using unordered_map instead of map it would be better. Possibly part of the reason everyone puts of reviewing this is that it is a major refactoring and yet there are no accompanying notes about the architecture the implementation choices etc. I absolutely guarantee you that is not how professional software is developed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534651933:57,simpl,simpler,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534651933,2,['simpl'],['simpler']
Usability,"This is simply the way how the cmd.exe shell works on Windows - file and folder names containing spaces or special characters must be quoted into `""` to be handled correctly.; The title says it all - *to make them [executables] run*. The patch prepends one `""` and appends one `""` to the command name. This could be refactored further to reduce repetition much more by putting the different executable file names into a map and have a single place to combine quote + executable + quote.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-321264218:8,simpl,simply,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-321264218,2,['simpl'],['simply']
Usability,"This is very interesting, since I often find that I am commenting out most of the python regression script when debugging only a couple of tests locally. Can you estimate how much work this would be? Is it just a simple wrapping of what we already have? We would also have to make sure that Travis CI can handle it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342593274:213,simpl,simple,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342593274,2,['simpl'],['simple']
Usability,This issue has been paused until after v7.0.0,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-548021997:20,pause,paused,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-548021997,2,['pause'],['paused']
Usability,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:154,simpl,simple,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,2,['simpl'],['simple']
Usability,"Thomas,. That took some doing. I just learned more about git! I'll issue a new pull request shortly. Thanks for your interest. Ethan Alan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33#issuecomment-56592304:38,learn,learned,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/33#issuecomment-56592304,2,['learn'],['learned']
Usability,"Those changes in option_structure.hpp were actually done to the main branch by somebody else. I forked from main, and merged develop. I can of course undo them, if you want (or rebase my commit on develop instead of merging).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/579#issuecomment-425754699:150,undo,undo,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/579#issuecomment-425754699,2,['undo'],['undo']
Usability,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:251,simpl,simple,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999,2,['simpl'],['simple']
Usability,"To be clear: I like the solver/, variable/, output/, etc. layout a lot, and I am simply suggesting that we move entirely to that layout (with cpp and hpp merged together in each of those folders) and merging the code in Common, SU2_CFD, and other modules into that structure too (in their own folders still, like geometry/ for example). To keep it organized you can simply make each of those directories a library in meson which all later get linked into the various binaries. The mains could live in the top level src/ directory if we keep it or a separate directory (open for me). Something like. ```; SU2/; src/; solver/; meson.build; solver_\*.cpp; solver_\*.hpp; variable/; meson.build; variable_\*.cpp; variable_\*.hpp; ...; ```. with or without the src/ directory in the root (could go either way). Might want to keep it or even name it cpp/ to differentiate from the python framework(s).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630918578:6,clear,clear,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630918578,6,"['clear', 'simpl']","['clear', 'simply']"
Usability,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:392,simpl,simple,392,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,2,['simpl'],['simple']
Usability,"Tom, I would love to address both of these. Give me some time. I feel even in the current form, it is good. Do you have plans to merge this into master, so that people can use this to setup dev environment quickly. They can also create a basic config file quickly. . I will consider both of your ideas to make user experience better. Thanks for your support. ; Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126133647:310,user experience,user experience,310,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126133647,2,['user experience'],['user experience']
Usability,"True. I was thinking more from the user point-of-view, to be sure people little little experience can use SU2 easier. Similar to something Tim has already started in the Docs page. The idea here is just to be sure new features are easily usable/accessible for people unfamiliar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/799#issuecomment-541832531:238,usab,usable,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/799#issuecomment-541832531,2,['usab'],['usable']
Usability,"Try v7.0.2. On Mon, 9 Mar 2020, 02:05 timjim333, <notifications@github.com> wrote:. > Hi,; >; > I've got an issue where on starting an SU2 6.2.0 Falcon case, the; > preprocessing steps run but then the output gets stuck at:; >; > ---------------------- Python Interface Preprocessing; > --------------------- Setting customized boundary conditions for zone 0; >; > - and remains frozen there until I kill the job.; >; > It seems to have happened for only 3 out of nearly 400 successful cases.; > They are all similar, running Euler at Mach 1.7, on 40 cores. They all have; > similar simple body, farfield, and and symmetry conditions.; >; > I'm not sure of the best way to diagnose this, so any guidance would be; > appreciated.; >; > Many thanks and kind regards,; > Tim; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/907?email_source=notifications&email_token=AJCOXN63UWSSF6UABZZXXFLRGQ6EJA5CNFSM4LD6ZHGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4ITNPDMQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN6R6JOEQCAYH7FKCLTRGQ6EJANCNFSM4LD6ZHGA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907#issuecomment-596654031:583,simpl,simple,583,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-596654031,4,"['guid', 'simpl']","['guidance', 'simple']"
Usability,"Unfortunately, I have not been able to recreate this issue on my systems with the simple test case that you shared @yukaiweng. . @talbring or @EduardoMolina, if you have some time, could you give the attached toy problem a try on your machines? I ran for a couple of unsteady iterations and then restarted on the third iteration (successfully for me). I think we're just missing something simple... [ascii_restart_test.zip](https://github.com/su2code/SU2/files/1659029/ascii_restart_test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-360050851:82,simpl,simple,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-360050851,4,['simpl'],['simple']
Usability,"Unfortunately, I wasn't able to get all of them. I fixed a majority of the calls but couldn't find workarounds all of them. There are 8 left in the following files: . `SU2_PY/change_version_number.py`: There's 2 in here. One is a complicated command with `grep` and pipes and the other is a simple `rm -rf`, but it isn't a security risk since there is no user input into that string. `SU2_PY/SU2/util/pyCppTap.py`: This is in the diff_routine and uses `tapenade`. I have no idea what this does so I didn't touch this one. `SU2/opt/server.py`: There are 4 `scp` calls that I didn't know how to replace. `SU2_PY/compute_polar.py`: There's one left in here which is a complicated `cat` call that I couldn't figure a workaround for. . If you have any suggestions for any of these, I can try and implement them. . Otherwise, once these tests pass, its good to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533590086:291,simpl,simple,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533590086,2,['simpl'],['simple']
Usability,"Unfortunately, I'm still a bit unsure of the math behind the averaging. I assumed, that the average of a new iteration calculates as follows:. avg(it) = (cumulativeWeight(it-1, it+1) * avg(it-1) + Weight(it, it+1)*Value(it)) / (cumulativeWeight(it-1,it+1)+Weight(it,it+1)). Translated into words:; At iteration `it` we define a window of width `it+1`.; The previous average is weighted with the integral of the window from 0 to it-1. The new value arriving at iteration it is weighted with the actual window weight. The weighted sum is then divided by the sum of the weights. For a rectangular window this seems to converge towards the right value, but for the hanning window it does not.; Probably the math behind it is simply wrong. Any idea what the proper weighting should look like?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1039999787:721,simpl,simply,721,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1039999787,2,['simpl'],['simply']
Usability,"Unfortunately, my example involves a swirler and nozzle for the; Navier-Stokes solver with Menter model, so the dataset is relatively large.; Let me check whether some older small Euler mesh exhibits the same message!; I will let you know! Thank you very much. On Mon, Oct 23, 2023 at 6:34 PM Pedro Gomes ***@***.***>; wrote:. > Is there a simple example to reproduce the issue?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584:340,simpl,simple,340,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584,2,['simpl'],['simple']
Usability,"Update: This should be fixed in #2011, apologies this took so long to get round it in what is a very simple fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094:101,simpl,simple,101,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094,2,['simpl'],['simple']
Usability,"Was playing around with the turbomachinery cases with the new multi-zone config. I like the new changes, makes it much clearer!. Just a remark, don't know if this is on purpose, but for the configuration parameter TURBOMACHINERY_KIND, you still need to supply them in the general configuration file for both zones (so in case of a two zone problem: TURBOMACHINERY_KIND = CENTRIFUGAL CENTRIFUGAL). Wouldnt it make more sense to have this per zone specified in the respective configuration file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715#issuecomment-514208185:119,clear,clearer,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/715#issuecomment-514208185,2,['clear'],['clearer']
Usability,"We already require C++11 for some more advanced features, but it is always nice in my opinion to keep backward compatibility when possible. . However, this is not a deal breaker, I don't think, as most developers that want to use and add their own unit tests should have no problem with using C++11. If we can make it an optional dependency, to make sure the basic build still works simply, I think it could be ok.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-503685445:383,simpl,simply,383,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-503685445,2,['simpl'],['simply']
Usability,"We are wondering what the status with the merge request is. Am I supposed to do something more? is it just waiting for an additional review? . Additionally, we have many more proposed modifications, we have worked on, adding robustness to the existing turbulence models. It is expected, many of these changes will effect the test cases behaviour, are there any guidelines how to compile the code to run the full set of tests locally, or should I just open pull requests, and base upon the github test results? ; ; I am sorry if I may be asking the obvious, but I am new to contributing to open code..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152:361,guid,guidelines,361,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152,2,['guid'],['guidelines']
Usability,"We have a bit of documentation about this on the wiki here: https://github.com/su2code/SU2/wiki/Post-processing. Does this clear things up? Please let us know if this isn't adequate, and we can add more detail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/268#issuecomment-213232801:123,clear,clear,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/268#issuecomment-213232801,2,['clear'],['clear']
Usability,"We will merge this PR next in order to have enough time for testing and for you to solve conflicts (if you need any help to solve those, please contact me). Even if this PR is merged, please continue to give feedback on the usability. We will still continue to work on that. Refer to the user documentation in order to learn how to adapt your config files. Let me know if you have any questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534522241:208,feedback,feedback,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534522241,6,"['feedback', 'learn', 'usab']","['feedback', 'learn', 'usability']"
Usability,"What advantages does meson provide over Cmake? I have experience with CMake, but not with meson. @talbring I'm not sure what you mean by ""the syntax is also not very comfortable and it has too many features which we actually don't need."". I recently did a survey of the some of the most popular open-source C++ libraries, both inside and outside and outside of scientific computing. The most popular build system was CMake (60% of the 15 open source libraries). If ""everyone else"" is using CMake, then why should we use meson? I'm not trying to be adversarial. I'm curious about why meson is better. Is the syntax simpler? Is meson more flexible? Is it more robust during changes? Is it faster?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-498827230:614,simpl,simpler,614,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-498827230,2,['simpl'],['simpler']
Usability,"When I enter the ""shape_optimization.py -f unsteady_naca0012_opt.cfg"" in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 116, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 34, in main; shape_optimization( options.filename ,; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 51, in shape_optimization; config = SU2.io.Config(filename); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\io\config.py"", line 88, in __init__; super(Config,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_bunch.py"", line 83, in __init__; super(OrderedBunch,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 48, in __init__; self.__update(*args, **kwds); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 174, in update; for key, value in other:; TypeError: 'NoneType' object is not iterable; ```; When I enter the ""parallel_computation.py -f turb_naca0012.cfg -n NP in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 110, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 53, in main; raise Exception(""No config file provided. Use -f flag""); Exception: No config file provided. Use -f flag; ```; Any solvers related to "".py"" cannot be executed, but I can run any cases with SU2_CFD. So I wonder if this situation is a problem with the Python Wrapper? . I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200:1700,feedback,feedback,1700,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200,2,['feedback'],['feedback']
Usability,Why not simply use clang-format and have a script to pass files/directories to have formatted? It provides more formatting options than just stripping trailing whitespaces and replacing tabs and does it in a consistent way.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-551451738:8,simpl,simply,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551451738,2,['simpl'],['simply']
Usability,"Writing a simple unit test is difficult, since SU2 both doesn't have unit tests and wasn't written with unit testing in mind. That being said, I've got a unit test that I'm happy with. Our group has put our own unit-testing framework into our fork of SU2, based off of Boost and automake testing. The unit test I created runs off of that framework. That means it won't run out-of-the-box on the develop branch of SU2. When I run the unit test with no changes to `CNumerics::GetViscousProjJacs`, I get that the residuals and Jacobians match to within 10 times the machine epsilon, aside from the [4][0] value of the Jacobians. There, the relative difference is of the order 1E-6. When I switch the two lines in `CNumerics::GetViscousProjJacs` for ideal gases to be negative, the tests run with no complaints. Ideal gas and generalized variants match to within 10 times machine epsilon. I'm uploading my test file just as an example, in case anyone wants to see what I've tested.; [viscous_ideal_vs_general.zip](https://github.com/su2code/SU2/files/2590517/viscous_ideal_vs_general.zip). As for comparison to some results from another code, I think that's a lot to ask. Getting a good comparison would depend on an understanding of how the ideal gas model, viscosity, numerics, and Jacobians are handled in the external code. Small differences would make the comparison completely invalid. I completely support testing and checking the changes I'm proposing. But comparison with an external code seems to provide a very low return on investment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439491945:10,simpl,simple,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439491945,2,['simpl'],['simple']
Usability,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:818,simpl,simple,818,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,2,['simpl'],['simple']
Usability,"Yep, just an honest mistake. We'll fix it up. I know that things have been a little quiet in the repository lately, but there is a lot of motion happening behind the scenes as we prepare for the developers meeting next month (we have some exciting things in store). . Thanks for the patience, and I would also ask that, if folks in the community have some time, they please contribute to reviews. Expertise in the particular area is not required (I know it can seem intimidating, but don't be shy!), and it is a great way to learn the code and see what other folks are developing. The more input and discussion we have from various perspectives, the better.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667#issuecomment-479973816:525,learn,learn,525,https://su2code.github.io,https://github.com/su2code/SU2/pull/667#issuecomment-479973816,2,['learn'],['learn']
Usability,"Yep, things seem to be passing just fine now, and it looks like things are coming along nicely for the turbomachinery features. Before we merge this in... I am a little concerned with the number of additions to solver_direct_mean.cpp related to the different switch statements and subroutines needed for the Riemann and non-reflecting BCs. Is there anything we can do to simplify things?. In addition, could you please clean up the spacing/style in those methods to match up with the other BCs (more comments are needed, indentation, variable declarations, etc.)? It would also be great to have a little more detail on how to use the new BCs in the descriptions in config_template.cfg. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207#issuecomment-152406337:371,simpl,simplify,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/207#issuecomment-152406337,2,['simpl'],['simplify']
Usability,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630861158:49,clear,clearer,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158,4,"['clear', 'simpl']","['clearer', 'simpler']"
Usability,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626875076:243,simpl,simple,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076,4,['simpl'],"['simple', 'simpler']"
Usability,"Yes, I did not make that clear, the linear solver fraction of the time cannot be accelerated by this. But everything else can, from gradient/limiter computations to the Compute_Residual functions, as all those need to wait for data, it is however not very easy to measure how long that wait is compared to the rest of the computations.; In the 2015 joint work between Stanford and Intel they reported a 1.5x speed-up from this type of change for a case where the linear solver used 24% of the time. I do not know how heavy the CVariable infrastructure is now compared to then... We will see :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-506768400:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-506768400,2,['clear'],['clear']
Usability,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:97,simpl,simpler,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242,2,['simpl'],['simpler']
Usability,"Yes, that is roughly what I mean. When I filed the issue, I was compiling in xcode, and it threw a bunch of warnings about implicit numeric casts. This is what the isssue was about. I'm off of develop and the moment, and don't have xcode setup, so I'm sorry I can't be more specific. I think they should all be unsigned long long. The memory overhead is trivial (8 bytes per node), and if we want the code to be usable in an exascale environment we don't want to limit ourselves to 4 billion node meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/3#issuecomment-104354036:412,usab,usable,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/3#issuecomment-104354036,2,['usab'],['usable']
Usability,"Yes, the GRAD_FLOW option has worked well for my simple application. I have not tried using it on other more complex problems or geometries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-445429364:49,simpl,simple,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-445429364,2,['simpl'],['simple']
Usability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:244,simpl,simply,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,4,['simpl'],['simply']
Usability,"Yikes. Thanks, @LaSerpe, for the heads up. There is clearly something wrong with SU2_SOL for many of the cases, although the compute portion is fine. We should get a test case set up for SU2_SOL, or at least try to catch these errors too. @fpalacios, can you please take a look at this problem when you have a moment? It seems to have shown up with the merging of feature_cte_cl. Just fyi for all: the Travis CI folks have generously granted extra time for our regression tests, up to 70 minutes now. This fixes the time-out issues in the short term, but there are a few strategies we should look at for caching or further decomposing our builds to keep under the time limits in the future as we keep growing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-262118156:52,clear,clearly,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-262118156,2,['clear'],['clearly']
Usability,"You are proposing the exact opposite of the conclusion of the paper:. ""From the above findings, it is **recommended that all three of these terms be included** when; running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with; shock wave-induced separations."". And they clearly say this:; ""While the full inclusion of these terms does not always result in predictions that agree better; with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out; effects of other flaws in the RANS models employed."". If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1520849562:304,clear,clearly,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1520849562,2,['clear'],['clearly']
Usability,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:141,simpl,simple,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886,4,['simpl'],"['simple', 'simply']"
Usability,"You could try turning off or simplifying the contributions to the Jacobian for that type of boundary, see CNSSolver.ccp around line 550. For example, leaving only the `Jacobian_i[nDim+1][nDim+1]` or none.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1370867223:29,simpl,simplifying,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1370867223,2,['simpl'],['simplifying']
Usability,"You're right about that bug with vel_i_corr. Thanks for finding it, I'll submit a correction. Yes, it's possible to modify the config file so that your implementation works. But is this simply masking the problem of reduced stability? Do you expect the direct formulation to be less stable? And do the benefits of the direct formulation make the loss of stability worthwhile? If so, then I think you should change the config file. I hope this answers your question, I'm not sure if I understood it correctly. Regards,; Daniel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182655391:186,simpl,simply,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182655391,2,['simpl'],['simply']
Usability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:1431,clear,clear,1431,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,2,['clear'],['clear']
Usability,"anced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, goo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:4580,learn,learning,4580,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['learn'],['learning']
Usability,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:1751,clear,clearly,1751,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,2,['clear'],['clearly']
Usability,"ares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1960,simpl,simplify,1960,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['simpl'],['simplify']
Usability,"atm that still sounds like magic to me,... I really should learn this github stuff. But I was more hoping some experienced coder would pick this up instead of my messing up the code.; Also I dont yet understand the way you guys work with branches instead of regular forked code...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/688#issuecomment-495360476:59,learn,learn,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/688#issuecomment-495360476,2,['learn'],['learn']
Usability,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:2218,simpl,simply,2218,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,2,['simpl'],['simply']
Usability,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2869,pause,pause,2869,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,2,['pause'],['pause']
Usability,"c` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmovdqa YMMWORD PTR [rbp-208], ymm0; vpaddq ymm0, ymm15, ymm0; vmovdqa YMMWORD PTR [rbp-176], ymm0; vgatherqpd ymm15, QWORD PTR [rdi+ymm0*8], ymm6; vmovapd ymm0, YMMWORD PTR [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd YMMWORD PTR [rbp-336], ymm0; cmp rbx, rax; jne .L13; ```; the meat of which is `vgatherqpd` (`getVec`) and `vfmadd213pd` fused-multiply-add to update `phiL`, everything else is integer arithmetic which in the scalar version gets factored out of the inner loop so that the resulting assembly looks much simpler:; ```asm; .L15:; vmovsd xmm5, QWORD PTR [rsp-40+rax*8]; vfmadd231sd xmm0, xmm5, QWORD PTR [r15+rax*8]; add rax, 1; cmp rcx, rax; jne .L15; ```; I think the reason for this is that there are plenty of integer registers (64bit) to keep memory locations (rsp, rax, r15 in the above) but there are only 16 ymm registers (256bit). In any case we need to give the compiler a hand, the calculation we need is; `index = iPoint*nVar*nDim + iVar*nDim + iDim` where iPoint is an array of ints; Note that as we loop by nDim and then by nVar all we need is to compute `iPoint*nVar*nDim` outside the loops and then add 1 on each access (which is more or less what the compiler does for the scalar code), in other words we need an **iterator**, something silly like; ```c++; template<size_t VecLen, size_t Incr = VecLen>; class GatherIterator; {; private:; using IntVec = Array<size_t,VecLe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:10256,simpl,simpler,10256,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['simpl'],['simpler']
Usability,"discadj_arina2k fails with some mpi error, but it does not fail when I run it on my local machine. Not sure what is going on here. ```; Clearing the computational graph.; [9c7d9f63f200:01637] *** An error occurred in MPI_Allgather; [9c7d9f63f200:01637] *** reported by process [4177330177,1]; [9c7d9f63f200:01637] *** on communicator MPI_COMM_WORLD; [9c7d9f63f200:01637] *** MPI_ERR_TRUNCATE: message truncated; [9c7d9f63f200:01637] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [9c7d9f63f200:01637] *** and potentially your MPI job). ```; There is another case that sometimes fails due to the tight tolerance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196:136,Clear,Clearing,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196,1,['Clear'],['Clearing']
Usability,"doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5298,simpl,simpler,5298,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['simpl'],['simpler']
Usability,"dweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2821,feedback,feedback,2821,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['feedback'],['feedback']
Usability,"ed the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a temporary block - Interleaving the writes with the computation could help mask latency.; - That temporary is not stored contiguously - Which makes it hard to vectorize the writes to CSysMatrix. **So what do I think should be tackled next?**; Hybrid parallelism (wait what?!) from messing about with this case (and more refined versions) it is clear the MG puts some limits on how many cores can be used before it stops being able to produce coarse grids, both in number and quality. Going to an MPI+Threads strategy would move that limit by one order of magnitude, giving us some robustness and performance for folks hoping to rely on strong scaling. I think I'll break it off here and keep my thoughts about SIMD and hybrid parallel for a later occasion (I have to do some ""real"" PhD work for a while) but please, if anyone has ideias, comments, corrections, suggestions, similar ongoing developments (specially)... I am all ears/eyes. Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:5345,clear,clear,5345,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['clear'],['clear']
Usability,"en new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers have a preference (or experience with) any of the unit; > testing frameworks?; > - Should unit tests be expected when submitting PRs?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4HTDQXQA>; > .; >; >; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:6301,simpl,simple,6301,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['simpl'],['simple']
Usability,"eps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxHiNAbZtzVEvIm0XDsNvQmZ6lrwwks5shEHjgaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3735,clear,clearer,3735,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['clear'],['clearer']
Usability,"fiers that can later allow for a generality of approaches. We can make a distinction between wall functions and wall models, but this is subject to discussion…in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:1203,simpl,simple,1203,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,2,['simpl'],['simple']
Usability,"formance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does not help much. This is the 4 core summary:. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 2.0 | 2.0 | 3.8 | 2.8 |. I think the point-based versions scale better because they are a bit less memory-bound as they write to the gradient sequentially and they have a bit more compute due to the duplicated computations. **Conclusion**; Computing gradients via point-loops allows simpler and more generic SIMD and SPMD strategies, the resulting implementation seems to do better in the bandwidth-starved conditions typical of modern hardware (3 or more cores per memory channel). However, additional adjacency information is required to support point-based loops. Next I will talk about limiters, almost all concepts are introduced so it will be shorter (promise). As a little appetizer let me tell you we can recover the extra memory and we could be looking at a 2.7x speedup for gradients+limiters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:15283,simpl,simpler,15283,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['simpl'],['simpler']
Usability,"from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT; 203c203; < MESH_FILENAME= singlezone.su2; ---; > MESH_FILENAME= n0012_225-65.su2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2643,simpl,simplfied-expliciteuler-,2643,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['simpl'],['simplfied-expliciteuler-']
Usability,ge total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4626,Simpl,Simplification,4626,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Simpl'],['Simplification']
Usability,"gy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy conservation equation; + Isotropic part of the turbulent stress tensor. Is there any rationale behind this split, aside from simply stating that ""this seems to work?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:2122,simpl,simply,2122,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,2,['simpl'],['simply']
Usability,"he preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1597,simpl,simply,1597,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['simpl'],['simply']
Usability,"iVar, lim*(lim+2.0)/(lim*lim+lim+2.0));; }; }; }; ```; In terms of algorithm, for each point we find the min and max neighbor values and the min (negative) and max (positive) projections, those are then combined in a final `min(2, max/max, min/min)` to which the limiter function is applied (this would also be applicable to Venkatakrishnan-[Wang] limiters).; This is equivalent to the edge-loop, if statements are not required as due to cells being closed, if the positive projection is not zero, the negative one will also not be zero, therefore it is correct to always evaluate both ratios.; This algorithm only needs min and max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:10014,clear,clearly,10014,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['clear'],['clearly']
Usability,"implified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebra library (that is compatible with AD) would greatly simplify our work and further drop the entry barrier to new developers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:3074,simpl,simplify,3074,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['simpl'],['simplify']
Usability,"in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327308587>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJUhyEBSuSzHV1a7BZM_Frxbtb5sks5sfbzUgaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:1408,simpl,simple,1408,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,2,['simpl'],['simple']
Usability,"inf| -inf| 0.000000| 2.232692| -inf|; | 1| -3.281025| -inf| -inf| 0.000000| 3.198384| -inf|; ...; | 9531740| -11.999999| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531741| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531742| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:1838,simpl,simplified-singlezone-impliciteuler,1838,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['simpl'],['simplified-singlezone-impliciteuler']
Usability,"ion, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:1476,simpl,simply,1476,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['simpl'],['simply']
Usability,"ither. Some settings which are kinda optimal:; - Mach 0.6, AoA 2 degrees;; - SST (1st order);; - CFL 20 (higher and residuals would limit-cycle (regardless of linear solver settings); - Roe;; - MUSCL - Green-Gauss and Venkat-Wang;; - FGMRES + LU_SGS to 0.05 residual (about 3 iters on avg.);; - 2 levels of MG (1,1,2 iterations, all zeros for other stuff and 0.7 damping both ways);. The case is light on the linear solver and therefore stands to benefit the most from better data layout. Conversely, applications that can take higher CFL / or use central schemes will not benefit as much. **Running this from scratch to residual of 10^-8 on a couple of Xeon E5-2650v4 (24c total) shows a speedup of 1.4 and just over 10% lower memory usage.**; Those numbers will be better for an equivalent 2D case since the ratio of useful data to pointers and vtables is lower. After a celebratory dance I attempted to profile the code using [Perf](https://en.wikipedia.org/wiki/Perf_(Linux)) which I ""learned how to use"" from [a YouTube video](https://www.youtube.com/watch?v=nXaxk27zwlk&t=2052s).; In a nutshell compile the code as usual but with the `-fno-omit-frame-pointer` cxx flag (so perf can figure out the name of the functions, debug symbols are not required).; Run `perf record -g [command]` where command can be your usual `mpirun...` (I did not recompile my mpi with the aforementioned flag), for 2-3 minutes for hundreds of MB of record (hence the 500k mesh...).; Run `perf report -g ""fractal,0.5,caller""`, this will show % of time spent in a function relative to its caller and you can expand each function to see what are its children, grandchildren, etc. Like so:; ![image](https://user-images.githubusercontent.com/38071223/63290949-725e5080-c2ba-11e9-90aa-ffc834e726db.png); How cool is that!! Pro-tip hit ""a"" to look at some assembly, honestly sliced bread has nothing on perf. NOTE: By and large Perf is not an intrusive tool, as such the accuracy of the measurements is limited i.e. it is pr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:2187,learn,learned,2187,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['learn'],['learned']
Usability,"ix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5680,simpl,simplest,5680,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['simpl'],['simplest']
Usability,location.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc);,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5392,Clear,Clear,5392,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Clear'],['Clear']
Usability,"looks like there is an array overflow in solver_structure.cpp (line 2347). ` ; while (getline (solution_file, text_line) ) {; istringstream point_line(text_line);; ; /*--- Retrieve local index. If this node from the restart file lives; on a different processor, the value of iPoint_Local will be -1, as; initialized above. Otherwise, the local index for this node on the; current processor will be returned and used to instantiate the vars. ---*/; ; iPoint_Local = Global2Local[iPoint_Global];; if (iPoint_Local >= 0) {; ; /*--- The PointID is not stored --*/; //cout << iPoint_Local << endl;; point_line >> index;; ; /*--- Store the solution (starting with node coordinates) --*/; ; for (iField = 0; iField < nVar; iField++); point_line >> Solution[iField];; ; node[iPoint_Local]->SetSolution(Solution);; ; ; }; iPoint_Global++;; }; ` . I had a brief look at it and seems the issue can be solved by simply adding the condition ""&& iPoint_Global < geometry[iZone]->GetnPointDomain()"" to the outer while loop, but I'm not completely sure this is the best way to fix the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-262186418:900,simpl,simply,900,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-262186418,2,['simpl'],['simply']
Usability,"m_j = phiMax(jPoint,iVar);. const double eps = numeric_limits<double>::epsilon();. if(proj_i <= 0.0); {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }. if(proj_j <= 0.0); {; lim_j = phiMin(jPoint,iVar);; proj_j = min(proj_j, -eps);; }. lim_i = (lim_i-phi(iPoint,iVar))/proj_i;; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i);. lim_j = (lim_j-phi(jPoint,iVar))/proj_j;; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j);; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Something in the code above is a bit different from the implementation in SU2, namely:; ```C++; double lim_i = phiMax(iPoint,iVar);; if(proj_i <= 0.0) {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }; ```; This is the bit of code that selects the right delta based on the sign of the projection and avoids division by zero, this less readable version does the same with one branch instead of three, simplifying ""if"" statements is essential for vectorization, so to make the comparison fair I used the same strategy in the scalar code. To make this post shorter I will show the SIMD and parallel version of the code right away. Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:3108,simpl,simplifying,3108,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['simpl'],['simplifying']
Usability,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5261,clear,clearly,5261,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['clear'],['clearly']
Usability,"output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqPPMuaDziLuDRzWCJfYwrks5sh5KagaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:1471,simpl,simply,1471,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['simpl'],['simply']
Usability,"p, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `MPI_Type_indexed(...)` is `int`. It may be that, given the limitations of MPI here, reading such large restart information requires the restart file to be read serially by one rank, and the data split and broadcast to the other ranks?. I am not an MPI expert, so there may be another way to do this. Thoughts?. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:1909,simpl,simply,1909,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,2,['simpl'],['simply']
Usability,"ple dataset, I have run some; variations on the jobs, and my findings were:; (Please note that *all* ""markers"" I have mentioned in the next items refer; to solid walls in the mesh, using the RANS solver); 1- When I impose HEATFLUX=0 *and* ISOTHERMAL=290 Kelvin, for the same; markers, there are no complaints from SU2. It shows that SU2 ignores the; imposition of HEATFLUX=0, in this case.; 2- Just setting ISOTHERMAL=290 Kelvin (using all of the same markers as in; (item 1), above), without any HEATFLUX setting, then SU2 produces the same; results as in (item1).; 3- When some markers are set with HEATFLUX=0 and the rest of them are set; with ISOTHERMAL=290 Kelvin (so that each wall marker in the mesh is; referenced), there are no complaints from SU2, and the job goes as expected.; 4-The error message mentioned earlier, appears when one or more solid wall; markers *is not marked* concerning HEATFLUX or ISOTHERMAL; .; My conclusion then is that the error message appeared when I mistakenly; have not included a wall marker (assigning it as a HEATFLUX or an; ISOTHERMAL marker!); Does it make sense?; Kind regards,. On Mon, Oct 23, 2023 at 7:48 PM Jairo Cavalcante ***@***.***>; wrote:. > Unfortunately, my example involves a swirler and nozzle for the; > Navier-Stokes solver with Menter model, so the dataset is relatively large.; > Let me check whether some older small Euler mesh exhibits the same message!; > I will let you know! Thank you very much.; >; > On Mon, Oct 23, 2023 at 6:34 PM Pedro Gomes ***@***.***>; > wrote:; >; >> Is there a simple example to reproduce the issue?; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; >> .; >> You are receiving this because you commented.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035:1595,simpl,simple,1595,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035,2,['simpl'],['simple']
Usability,"ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2888,simpl,simpler,2888,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['simpl'],['simpler']
Usability,"rding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aaf6b411fd30a0aab80; > 29ebe325d8/Tutorials/Inviscid_Bump/Inviscid_Bump.md; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/485#issuecomment-354572803>, or mute; > the thread; > <https://github.co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1591,clear,clear,1591,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,2,['clear'],['clear']
Usability,"ses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1671,clear,clearer,1671,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['clear'],['clearer']
Usability,"shell = false doesn't seem to work in this particular case (symbolic linking) but it might in others. There seem more secure ways to run commands but they need case by case treatment. As in the solution for a `cp` command is different from a `ln -s` command. . We can also replace the `os.system` calls with other python functions (for example `os.symlink` for symbolic linking). . Either way, it wont be a simple search and replace. There seem to be about 25 `os.system` calls across the python scripts. Let me try and replace them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533410018:407,simpl,simple,407,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533410018,2,['simpl'],['simple']
Usability,"te well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issue with VENKATAKRISHNAN_WANG limiter. It seems to be much easier for convergence than VAN_ALBADA_EDGE, so it is fairly useful. I still have a gradient un-match issue with my bigger mesh but I believe it is coming from something else. > I'm sorry that you had to spend time fixing that MPI code... But at least we found out we could clean all this obsolete code. Yeah, I noticed it had been deleted. It's OK. It was still a good opportunity for me to learn how MPI works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:2450,learn,learn,2450,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618,2,['learn'],['learn']
Usability,"thing to do. So let’s indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327374728>, or mute the thread<https://github.co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1371,simpl,simpler,1371,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['simpl'],['simpler']
Usability,"this is a very nice contribution.. we’re working on the regressions and will pull this in once we have everything straightened out (and this branch passes). In the meantime, you got me thinking: the scale, rotate, translate options might be confusing now if a user doesn’t know whether to include the markers or not. Perhaps this is a chance for separating some of the “design” options from “mesh” options. One way I could see us do this is by moving the implementation I had just committed for the “volume” scale, rotate, and translate options over into the SU2_MSH executable, which might be a more logical home for it. However, this would require adding an extra set of config options for reading in a scale/rotate/translate options for SU2_MSH. The nice thing here is that we keep the intent separate, i.e., only design variables are listed with the other design variables while the mesh transformations are elsewhere. A different, possibly simpler way would be to just create separate names for these two types in the list of available options so that there is no ambiguity. Any thoughts?. On Aug 16, 2015, at 9:21 AM, Heather Kline <notifications@github.com<mailto:notifications@github.com>> wrote:. Some illustrative images/output in case my description was hard to understand:; [image]https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png. SU2_DEF output when only ""airfoil"" marker included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:997,simpl,simpler,997,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,2,['simpl'],['simpler']
Usability,"trix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loop sets ~75% of the maximum speed at which the residual edge loop can run (bandwidth bottleneck).; Don't be sad though, we can make a few things about it better:; - We can store the blocks we insert contiguously so the writes can be vectorized (this would be done using a container so that we still have `(i,j)` access syntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the edge (remember we insert ""by the edge"").; - We can fuse numerics (possibly using the [decorator](https://en.wikipedia.org/wiki/Decorator_pattern) pattern) so that we write to the matrix only once per iteration, which means we only need to clear the diagonal blocks and not the entire matrix because we can **set** the off-diagonals instead of **updating** them. Assuming these modification our dummy loop becomes; ```c++; void testLoop2(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const double* blk_i, const double* blk_j,; SparseMatrix& matrix); {; matrix.setDiagZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.updateBlocks(iEdge, iPoint, jPoint, blk_i, blk_j);; }; }; ```; where; ```c++; STRONGINLINE void SparseMatrix::updateBlocks(size_t edge,; size_t row, size_t col, const double* blk_i, const double* blk_j); {; size_t bii = diagMap[row], bij = edgeMap[edge].first,; bjj = diagMap[col], bji = edgeM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:3122,clear,clear,3122,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['clear'],['clear']
Usability,"uch lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. . Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1666,simpl,simply,1666,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,4,"['clear', 'simpl']","['clearer', 'simply']"
Usability,"uctures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3175,simpl,simply,3175,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['simpl'],['simply']
Usability,"when you've installed python packages in two different locations. This could be due to installing some python packages in a system directory (e.g. `/usr/lib/`) and some in a user directory (e.g. `~/.local/`). SU2's build process is set to automatically detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1105,guid,guides,1105,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['guid'],['guides']
Usability,"you are correct, there is a discussion on CFD-online about it. we impose 0 heat flux, but report an ""apparent heat flux"" most codes will simply give you back the imposed heat flux value you specify, nevertheless there will probably be a temperature gradient close to the wall",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992:137,simpl,simply,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992,2,['simpl'],['simply']
Usability,"ze_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // i to j vector; double d_ij[3] = {0.0, 0.0, 0.0};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. // projections; double proj_i[nVar], proj_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); proj_i[iVar] = proj_j[iVar] = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; proj_i[iVar] += d_ij[iDim]*grad(iPoint,iVar,iDim);; proj_j[iVar] -= d_ij[iDim]*grad(jPoint,iVar,iDim);; }; }. // choose the ""right"" delta based on sign of projection; // and avoid division by zero; double lim_i[nVar], lim_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = phiMax(iPoint,iVar);; lim_j[iVar] = phiMax(jPoint,iVar);; }. const double eps = numeric_limits<double>::epsilon();. // very simple if's are required to get vectorization; // trough vector comparisons and masked blends; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; if(proj_i[iVar] <= 0.0); {; lim_i[iVar] = phiMin(iPoint,iVar);; proj_i[iVar] = min(proj_i[iVar], -eps);; }. if(proj_j[iVar] <= 0.0); {; lim_j[iVar] = phiMin(jPoint,iVar);; proj_j[iVar] = min(proj_j[iVar], -eps);; }; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = (lim_i[iVar]-phi(iPoint,iVar))/proj_i[iVar];; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i[iVar]);. lim_j[iVar] = (lim_j[iVar]-phi(jPoint,iVar))/proj_j[iVar];; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Again to keep things short here is the parallel and SIMD point-loop version (like for gradients it is very similar to the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:6356,simpl,simple,6356,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['simpl'],['simple']
